uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

id WKUILocationBundle()
{
  if (WKUILocationBundle_onceToken != -1) {
    dispatch_once(&WKUILocationBundle_onceToken, &__block_literal_global);
  }
  v0 = (void *)WKUILocationBundle_bundle;
  return v0;
}

void __WKUILocationBundle_block_invoke()
{
  v0 = (void *)MEMORY[0x263F086E0];
  WKUILocationBundlePath();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = [v0 bundleWithPath:v3];
  uint64_t v2 = (void *)WKUILocationBundle_bundle;
  WKUILocationBundle_bundle = v1;
}

id WKUILocationBundlePath()
{
  if (WKUILocationBundlePath_onceToken[0] != -1) {
    dispatch_once(WKUILocationBundlePath_onceToken, &__block_literal_global_2);
  }
  v0 = (void *)WKUILocationBundlePath_bundlePath;
  return v0;
}

void __WKUILocationBundlePath_block_invoke()
{
  MEMORY[0x263E4E050]();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = [v2 stringByAppendingPathComponent:@"System/Library/LocationBundles/AppleWatchWorkout.bundle"];
  uint64_t v1 = (void *)WKUILocationBundlePath_bundlePath;
  WKUILocationBundlePath_bundlePath = v0;
}

id generateSplitMetadata(int a1, int a2, double a3, double a4, double a5)
{
  v31[7] = *MEMORY[0x263EF8340];
  if (a2) {
    uint64_t v9 = 3;
  }
  else {
    uint64_t v9 = 1;
  }
  v30[0] = *MEMORY[0x263F3F0F0];
  uint64_t v10 = [NSNumber numberWithInteger:v9];
  v29 = (void *)v10;
  uint64_t v11 = *MEMORY[0x263F3F110];
  v12 = &unk_270DB0988;
  if (a1) {
    v12 = &unk_270DB0970;
  }
  v31[0] = v10;
  v31[1] = v12;
  uint64_t v13 = *MEMORY[0x263F3F108];
  v30[1] = v11;
  v30[2] = v13;
  v14 = (void *)MEMORY[0x263F0A630];
  v15 = [MEMORY[0x263F0A830] meterUnit];
  v16 = [v14 quantityWithUnit:v15 doubleValue:a3];
  v31[2] = v16;
  v30[3] = *MEMORY[0x263F3F0F8];
  v17 = (void *)MEMORY[0x263F0A630];
  v18 = [MEMORY[0x263F0A830] secondUnit];
  v19 = [v17 quantityWithUnit:v18 doubleValue:a4];
  v31[3] = v19;
  v30[4] = *MEMORY[0x263F3F118];
  v20 = (void *)MEMORY[0x263F0A630];
  v21 = [MEMORY[0x263F0A830] meterUnit];
  v22 = [v20 quantityWithUnit:v21 doubleValue:a5];
  v31[4] = v22;
  v30[5] = *MEMORY[0x263F3F100];
  v23 = (void *)MEMORY[0x263F0A630];
  v24 = [MEMORY[0x263F0A830] wattUnit];
  v25 = [v23 quantityWithUnit:v24 doubleValue:0.0];
  v31[5] = v25;
  v30[6] = *MEMORY[0x263F3F0E8];
  v26 = [NSNumber numberWithBool:0];
  v31[6] = v26;
  v27 = [NSDictionary dictionaryWithObjects:v31 forKeys:v30 count:7];

  return v27;
}

void addSimpleSumStats(void *a1, uint64_t a2, void *a3, void *a4, void *a5, double a6)
{
  uint64_t v11 = (void *)MEMORY[0x263F0A658];
  id v12 = a5;
  id v13 = a4;
  id v14 = a3;
  id v15 = a1;
  id v18 = [v11 quantityTypeForIdentifier:a2];
  v16 = (void *)[objc_alloc(MEMORY[0x263F0A7D0]) initWithDataType:v18 startDate:v14 endDate:v13];

  v17 = [MEMORY[0x263F0A630] quantityWithUnit:v12 doubleValue:a6];

  [v16 setSumQuantity:v17];
  [v15 setObject:v16 forKeyedSubscript:v18];
}

uint64_t WKUISessionFakeSummaryEnabled()
{
  uint64_t v0 = [MEMORY[0x263EFFA40] standardUserDefaults];
  uint64_t v1 = [v0 BOOLForKey:@"NLSessionFakeSummaryEnabled"];

  return v1;
}

id WKUISessionFakeSummaryWorkout()
{
  uint64_t v0 = [MEMORY[0x263EFFA40] standardUserDefaults];
  uint64_t v37 = [v0 integerForKey:@"NLSessionFakeSummaryActivityType"];
  uint64_t v39 = [v0 integerForKey:@"NLSessionFakeSummaryGoalType"];
  [v0 doubleForKey:@"NLSessionFakeSummaryGoalValue"];
  double v2 = v1;
  v38 = [v0 objectForKey:@"NLSessionFakeSummaryStartDate"];
  id v3 = [v0 objectForKey:@"NLSessionFakeSummaryEndDate"];
  [v0 doubleForKey:@"NLSessionFakeSummaryTotalEnergyBurned"];
  double v5 = v4;
  [v0 doubleForKey:@"NLSessionFakeSummaryTotalDistance"];
  double v7 = v6;
  int v8 = [v0 BOOLForKey:@"NLSessionFakeSummaryIsIndoor"];
  [v0 doubleForKey:@"NLSessionFakeSummaryWeatherTemperature"];
  double v10 = v9;
  [v0 doubleForKey:@"NLSessionFakeSummaryWeatherHumidity"];
  double v12 = v11;
  uint64_t v13 = [v0 integerForKey:@"NLSessionFakeSummaryWeatherCondition"];
  uint64_t v14 = [v0 integerForKey:@"NLSessionFakeSummaryAirQualityIndex"];
  id v15 = objc_alloc_init(MEMORY[0x263EFF9A0]);
  v16 = v15;
  if (v8) {
    [v15 setObject:&unk_270DB09A0 forKey:*MEMORY[0x263F09AA0]];
  }
  if (v13)
  {
    v17 = (void *)MEMORY[0x263F0A630];
    id v18 = [MEMORY[0x263F0A830] degreeFahrenheitUnit];
    v19 = [v17 quantityWithUnit:v18 doubleValue:v10];

    [v16 setObject:v19 forKey:*MEMORY[0x263F09B20]];
    v20 = (void *)MEMORY[0x263F0A630];
    v21 = [MEMORY[0x263F0A830] percentUnit];
    v22 = [v20 quantityWithUnit:v21 doubleValue:v12];

    [v16 setObject:v22 forKey:*MEMORY[0x263F09B18]];
    v23 = [NSNumber numberWithInteger:v14];
    [v16 setObject:v23 forKey:*MEMORY[0x263F3F120]];
    v24 = [NSNumber numberWithInteger:v13];
    [v16 setObject:v24 forKey:*MEMORY[0x263F0ABC8]];

    v25 = [MEMORY[0x263EFFA18] localTimeZone];
    v26 = [v25 name];
    [v16 setObject:v26 forKey:*MEMORY[0x263F09B00]];

    [v16 setObject:MEMORY[0x263EFFA88] forKey:*MEMORY[0x263F0ABE8]];
  }
  v27 = (void *)MEMORY[0x263F0A8F8];
  v28 = (void *)MEMORY[0x263F0A630];
  v29 = [MEMORY[0x263F0A830] kilocalorieUnit];
  v30 = [v28 quantityWithUnit:v29 doubleValue:v5];
  v31 = (void *)MEMORY[0x263F0A630];
  v32 = [MEMORY[0x263F0A830] meterUnit];
  v33 = [v31 quantityWithUnit:v32 doubleValue:v7];
  v34 = [v27 workoutWithActivityType:v37 startDate:v38 endDate:v3 workoutEvents:0 totalEnergyBurned:v30 totalDistance:v33 metadata:v16];

  v35 = MEMORY[0x263E4DFD0](v39, v2);
  [v34 _setGoal:v35];

  [v34 _setGoalType:v39];
  return v34;
}

uint64_t sub_2619F68A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v3 = sub_261B8E078();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x270FA5388]();
  double v5 = &v35[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943000) - 8;
  MEMORY[0x270FA5388]();
  int v8 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943008) - 8;
  MEMORY[0x270FA5388]();
  double v11 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943010) - 8;
  MEMORY[0x270FA5388]();
  uint64_t v14 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v36 = *v2;
  uint64_t v15 = *((void *)v2 + 1);
  char v16 = v2[16];
  char v41 = v36;
  uint64_t v42 = v15;
  char v43 = v16;
  sub_2619F7774(v15, v16);
  sub_2619F6BF4();
  sub_261B8E168();
  sub_261B8E058();
  uint64_t v17 = sub_261B8E178();
  (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v5, v38);
  sub_2619F7790(v15, v16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943018);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v8, v39, v19);
  v20 = (uint64_t *)&v8[*(int *)(v6 + 44)];
  uint64_t *v20 = KeyPath;
  v20[1] = v17;
  uint64_t v21 = swift_getKeyPath();
  sub_2619F86F0((uint64_t)v8, (uint64_t)v11, &qword_26A943000);
  uint64_t v22 = 1;
  if (v36) {
    uint64_t v22 = 2;
  }
  v23 = &v11[*(int *)(v9 + 44)];
  *(void *)v23 = v21;
  *((void *)v23 + 1) = v22;
  v23[16] = 0;
  sub_2619F8754((uint64_t)v8, &qword_26A943000);
  char v24 = sub_261B8DFD8();
  sub_261B8D358();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_2619F86F0((uint64_t)v11, (uint64_t)v14, &qword_26A943008);
  v33 = &v14[*(int *)(v12 + 44)];
  unsigned char *v33 = v24;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_2619F8754((uint64_t)v11, &qword_26A943008);
  return sub_2619F8570((uint64_t)v14, v40);
}

uint64_t sub_2619F6BF4()
{
  int v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  char v3 = v0[16];
  sub_2619F7774(v2, v3);
  sub_2619FA43C(v2, v3, &v7);
  sub_2619F7790(v2, v3);
  if (v7 - 3 > 2)
  {
    if (v1)
    {
      if (qword_26A942BE0 != -1) {
        swift_once();
      }
    }
    else
    {
      sub_2619F7774(v2, v3);
      sub_2619FA43C(v2, v3, &v6);
      sub_2619F7790(v2, v3);
      _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0(&v6);
    }
  }
  else
  {
    id v4 = objc_msgSend(self, sel_currentDevice);
    sub_261AAC430();
  }
  return FIUICurrentLanguageRequiresTallScript();
}

void sub_2619F6D38()
{
  qword_26A953590 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0);
}

double sub_2619F6D74()
{
  if (qword_26A942BE0 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_26A953590;
  qword_26A953598 = qword_26A953590;
  return result;
}

uint64_t sub_2619F6DD0()
{
  return sub_261B8D4C8();
}

uint64_t sub_2619F6DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v24 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943020);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943028);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943030);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v13 = *v2;
  uint64_t v14 = *((void *)v2 + 2);
  char v15 = v2[24];
  sub_2619F7774(v14, v15);
  sub_2619FA43C(v14, v15, &v25);
  sub_2619F7790(v14, v15);
  if (v25 <= 8u && ((1 << v25) & 0x181) != 0
    || (FIUICurrentLanguageNeedsExtendedLineSpacing() & v13 & 1) == 0)
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943038);
    uint64_t v17 = sub_2619F8AB8(&qword_26A943040, &qword_26A943038);
    sub_261B8E638();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
    swift_storeEnumTagMultiPayload();
    sub_2619F862C();
    uint64_t v25 = v16;
    uint64_t v26 = v17;
    swift_getOpaqueTypeConformance2();
    sub_261B8DD68();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943038);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v12, v24, v20);
    uint64_t v21 = (uint64_t *)&v12[*(int *)(v10 + 36)];
    uint64_t *v21 = KeyPath;
    v21[1] = 0x3FF0000000000000;
    sub_2619F86F0((uint64_t)v12, (uint64_t)v9, &qword_26A943030);
    swift_storeEnumTagMultiPayload();
    sub_2619F862C();
    uint64_t v22 = sub_2619F8AB8(&qword_26A943040, &qword_26A943038);
    uint64_t v25 = v20;
    uint64_t v26 = v22;
    swift_getOpaqueTypeConformance2();
    sub_261B8DD68();
    return sub_2619F8754((uint64_t)v12, &qword_26A943030);
  }
}

uint64_t View.metricDescriptionFont(multiline:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8D688();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v14 - v8;
  sub_2619F7348(a1, a2, a3);
  if (qword_26A942BE8 != -1) {
    swift_once();
  }
  double v10 = *(double *)&qword_26A953598;
  if (FIUICurrentLanguageRequiresTallScript()) {
    double v10 = v10 + 1.0;
  }
  unint64_t v11 = sub_2619F7460();
  v14[0] = a3;
  v14[1] = v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2619F73CC(a1 & 1, v6, WitnessTable, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2619F7348(char a1, uint64_t a2, uint64_t a3)
{
  v6[0] = a1;
  uint64_t KeyPath = swift_getKeyPath();
  char v8 = 0;
  MEMORY[0x263E4C680](v6, a2, &type metadata for MetricDescriptionCoreFont, a3);
  return swift_release();
}

uint64_t sub_2619F73CC(char a1, uint64_t a2, uint64_t a3, double a4)
{
  v7[0] = a1;
  double v8 = a4;
  uint64_t KeyPath = swift_getKeyPath();
  char v10 = 0;
  MEMORY[0x263E4C680](v7, a2, &type metadata for ExtendedLineSpacingSupport, a3);
  return swift_release();
}

unint64_t sub_2619F7460()
{
  unint64_t result = qword_26A942F30;
  if (!qword_26A942F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A942F30);
  }
  return result;
}

uint64_t sub_2619F74B4()
{
  return swift_getWitnessTable();
}

unint64_t sub_2619F7558()
{
  unint64_t result = qword_26A942F38;
  if (!qword_26A942F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A942F38);
  }
  return result;
}

void type metadata accessor for FIUIWorkoutSectionType(uint64_t a1)
{
}

void type metadata accessor for FIUIEnergyType(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_2619F7618(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2619F7638(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for HKActivityMoveMode(uint64_t a1)
{
}

void type metadata accessor for FIUIWorkoutIconSize(uint64_t a1)
{
}

void type metadata accessor for ARUIRingType(uint64_t a1)
{
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

void type metadata accessor for MKMapRect(uint64_t a1)
{
}

void type metadata accessor for FIUIDistanceUnit(uint64_t a1)
{
}

void type metadata accessor for FIUIDistanceType(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for ExtendedLineSpacingSupport(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_2619F7774(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for ExtendedLineSpacingSupport(uint64_t a1)
{
  return sub_2619F7790(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_2619F7790(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for ExtendedLineSpacingSupport(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 24);
  sub_2619F7774(v3, v4);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithCopy for ExtendedLineSpacingSupport(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  sub_2619F7774(v3, v4);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ExtendedLineSpacingSupport(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtendedLineSpacingSupport(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[25]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtendedLineSpacingSupport(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtendedLineSpacingSupport()
{
  return &type metadata for ExtendedLineSpacingSupport;
}

void type metadata accessor for HKWorkoutSwimmingLocationType(uint64_t a1)
{
}

void type metadata accessor for _HKWorkoutGoalType(uint64_t a1)
{
}

void type metadata accessor for HKWorkoutMetricType(uint64_t a1)
{
}

uint64_t destroy for MetricDescriptionCoreFont(uint64_t a1)
{
  return sub_2619F7790(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s9WorkoutUI25MetricDescriptionCoreFontVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  sub_2619F7774(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for MetricDescriptionCoreFont(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  sub_2619F7774(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MetricDescriptionCoreFont(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricDescriptionCoreFont(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[17]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricDescriptionCoreFont(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricDescriptionCoreFont()
{
  return &type metadata for MetricDescriptionCoreFont;
}

void sub_2619F7B64(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_2619F7B6C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_2619F7B80@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_2619F7B94@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_2619F7BA8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_2619F7BD8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_2619F7C04@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_2619F7C28(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_2619F7C3C(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_2619F7C50(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_2619F7C64@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2619F7C78(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_2619F7C8C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_2619F7CA0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_2619F7CB4()
{
  return *v0 == 0;
}

uint64_t sub_2619F7CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_2619F7CDC(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_2619F7CF0()
{
  return sub_261B8FCE8();
}

uint64_t sub_2619F7D38()
{
  return sub_261B8FCA8();
}

uint64_t sub_2619F7D64()
{
  return sub_261B8FCE8();
}

uint64_t sub_2619F7DA8(uint64_t a1, uint64_t a2)
{
  return sub_2619F7F28(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_2619F7DCC(uint64_t a1, uint64_t a2)
{
  return sub_2619F7F28(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_2619F7DEC(uint64_t a1, id *a2)
{
  uint64_t result = sub_261B8F0D8();
  *a2 = 0;
  return result;
}

uint64_t sub_2619F7E64(uint64_t a1, id *a2)
{
  char v3 = sub_261B8F0E8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2619F7EE4@<X0>(uint64_t *a1@<X8>)
{
  sub_261B8F0F8();
  uint64_t v2 = sub_261B8F0B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2619F7F28(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_261B8F0F8();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2619F7F6C()
{
  sub_261B8F0F8();
  sub_261B8F188();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2619F7FC0()
{
  sub_261B8F0F8();
  sub_261B8FC98();
  sub_261B8F188();
  uint64_t v0 = sub_261B8FCE8();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_2619F8034(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2619F8048@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_261B13B30(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_2619F8088@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2619F809C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_261B8F0F8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2619F80C8(uint64_t a1)
{
  uint64_t v2 = sub_2619F8214((unint64_t *)&qword_26A943070, type metadata accessor for Key);
  uint64_t v3 = sub_2619F8214(&qword_26A943078, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2619F8184()
{
  return sub_2619F8214(&qword_26A942FD0, type metadata accessor for Key);
}

uint64_t sub_2619F81CC()
{
  return sub_2619F8214(&qword_26A942FD8, type metadata accessor for Key);
}

uint64_t sub_2619F8214(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2619F825C()
{
  uint64_t v0 = sub_261B8F0F8();
  uint64_t v2 = v1;
  if (v0 == sub_261B8F0F8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_261B8FBA8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void *sub_2619F82E8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_2619F82F8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_2619F8304@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_261B8F0B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2619F834C(uint64_t a1)
{
  uint64_t v2 = sub_2619F8214((unint64_t *)&qword_26A943060, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v3 = sub_2619F8214(&qword_26A943068, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2619F8408()
{
  return sub_2619F8214(&qword_26A942FE0, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_2619F8450()
{
  return sub_2619F8214(&qword_26A942FE8, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_2619F8498()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2619F84B4()
{
  return sub_2619F8214(&qword_26A942FF0, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_2619F84FC()
{
  return sub_2619F8214(&qword_26A942FF8, type metadata accessor for Key);
}

uint64_t sub_2619F8544()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2619F8570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2619F85D8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_261B8D808();
  *a1 = v3;
  return result;
}

uint64_t sub_2619F8604()
{
  return sub_261B8D818();
}

unint64_t sub_2619F862C()
{
  unint64_t result = qword_26A943048;
  if (!qword_26A943048)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943030);
    sub_2619F8AB8(&qword_26A943040, &qword_26A943038);
    sub_2619F8AB8(&qword_26A943050, &qword_26A943058);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943048);
  }
  return result;
}

uint64_t sub_2619F86F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2619F8754(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for HKWorkoutActivityType(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for CTFont(uint64_t a1)
{
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
}

void type metadata accessor for FIUIHeartRateViewState(uint64_t a1)
{
}

void type metadata accessor for MKMapSize(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for EffortMiniGraph.ZoneSection(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EffortMiniGraph.ZoneSection(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKMapPoint(uint64_t a1)
{
}

void sub_2619F888C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

unint64_t sub_2619F88D8()
{
  unint64_t result = qword_26A9430B8;
  if (!qword_26A9430B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943010);
    sub_2619F8954();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9430B8);
  }
  return result;
}

unint64_t sub_2619F8954()
{
  unint64_t result = qword_26A9430C0;
  if (!qword_26A9430C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943008);
    sub_2619F89F4();
    sub_2619F8AB8(&qword_26A9430E8, &qword_26A9430F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9430C0);
  }
  return result;
}

unint64_t sub_2619F89F4()
{
  unint64_t result = qword_26A9430C8;
  if (!qword_26A9430C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943000);
    sub_2619F8AB8(&qword_26A9430D0, &qword_26A943018);
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9430C8);
  }
  return result;
}

uint64_t sub_2619F8AB8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2619F8B00()
{
  unint64_t result = qword_26A9430F8;
  if (!qword_26A9430F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943100);
    sub_2619F862C();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943038);
    sub_2619F8AB8(&qword_26A943040, &qword_26A943038);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9430F8);
  }
  return result;
}

uint64_t sub_2619F8BDC()
{
  return sub_2619F8214(&qword_26A943108, type metadata accessor for UIRectCorner);
}

uint64_t sub_2619F8C24()
{
  return sub_2619F8214(&qword_26A943110, type metadata accessor for UIRectCorner);
}

uint64_t sub_2619F8C6C()
{
  return sub_2619F8214(&qword_26A943118, type metadata accessor for UIRectCorner);
}

uint64_t sub_2619F8CB4()
{
  return sub_2619F8214(&qword_26A943120, type metadata accessor for UIRectCorner);
}

uint64_t sub_2619F8CFC()
{
  return sub_2619F8214(&qword_26A943128, type metadata accessor for HKWorkoutActivityType);
}

void sub_2619F8D78()
{
  qword_26A943130 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, 28.0, 30.0, 30.0, 34.0, 34.0);
}

uint64_t MetricValueFont.init(includesSlashes:smallCaps:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(unsigned char *)a3 = a1;
  *(unsigned char *)(a3 + 1) = a2;
  *(void *)(a3 + 8) = result;
  *(unsigned char *)(a3 + 16) = 0;
  return result;
}

uint64_t MetricValueFont.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = v2;
  uint64_t v140 = a1;
  uint64_t v146 = a2;
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943138);
  uint64_t v4 = MEMORY[0x270FA5388](v147);
  v115 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v117 = (uint64_t)&v114 - v6;
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943140);
  MEMORY[0x270FA5388](v123);
  uint64_t v124 = (uint64_t)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943148);
  MEMORY[0x270FA5388](v138);
  v125 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943150);
  uint64_t v9 = MEMORY[0x270FA5388](v133);
  uint64_t v114 = (uint64_t)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v116 = (uint64_t)&v114 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v119 = (uint64_t)&v114 - v13;
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943158);
  uint64_t v121 = *(void *)(v131 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v131);
  v118 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  v120 = (char *)&v114 - v16;
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943160);
  MEMORY[0x270FA5388](v144);
  uint64_t v145 = (uint64_t)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943168);
  MEMORY[0x270FA5388](v134);
  uint64_t v136 = (uint64_t)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943170);
  MEMORY[0x270FA5388](v128);
  v129 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943178);
  MEMORY[0x270FA5388](v135);
  v130 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943180);
  MEMORY[0x270FA5388](v143);
  v137 = (char *)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_261B8E078();
  uint64_t v22 = *(void *)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  uint64_t v24 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943188);
  uint64_t v25 = MEMORY[0x270FA5388](v141);
  v127 = (char *)&v114 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v114 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v114 - v30;
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943190);
  uint64_t v132 = *(void *)(v142 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v142);
  v34 = (char *)&v114 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  v122 = (char *)&v114 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v114 - v38;
  MEMORY[0x270FA5388](v37);
  v126 = (char *)&v114 - v40;
  int v41 = *v3;
  int v42 = v3[1];
  uint64_t v43 = *((void *)v3 + 1);
  char v44 = v3[16];
  sub_2619F7774(v43, v44);
  sub_2619FA43C(v43, v44, &v150);
  sub_2619F7790(v43, v44);
  switch(v150)
  {
    case 0:
    case 7:
    case 8:
      sub_2619F7774(v43, v44);
      sub_2619FA43C(v43, v44, &v148);
      sub_2619F7790(v43, v44);
      _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0((char *)&v148);
      sub_261B8E148();
      sub_261B8E058();
      sub_261B8E178();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v139);
      uint64_t v45 = sub_261B8E088();
      swift_release();
      if (v42)
      {
        uint64_t v46 = sub_261B8E098();
        swift_release();
        uint64_t v45 = v46;
      }
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943198);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v31, v140, v48);
      uint64_t v49 = v141;
      v50 = (uint64_t *)&v31[*(int *)(v141 + 36)];
      uint64_t *v50 = KeyPath;
      v50[1] = v45;
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
      unint64_t v51 = sub_2619FB2FC();
      sub_261B8E638();
      sub_2619F8754((uint64_t)v31, &qword_26A943188);
      uint64_t v52 = v132;
      v53 = v126;
      uint64_t v54 = v142;
      (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v126, v39, v142);
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v129, v53, v54);
      swift_storeEnumTagMultiPayload();
      uint64_t v148 = v49;
      unint64_t v149 = v51;
      swift_getOpaqueTypeConformance2();
      unint64_t v55 = sub_2619FB5C8();
      uint64_t v148 = v133;
      unint64_t v149 = v55;
      swift_getOpaqueTypeConformance2();
      uint64_t v56 = (uint64_t)v130;
      sub_261B8DD68();
      v57 = &qword_26A943178;
      sub_2619F86F0(v56, v136, &qword_26A943178);
      goto LABEL_12;
    case 1:
    case 5:
      sub_2619F7774(v43, v44);
      sub_2619FA43C(v43, v44, &v148);
      sub_2619F7790(v43, v44);
      _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0((char *)&v148);
      sub_261B8E148();
      sub_261B8E058();
      sub_261B8E178();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v139);
      uint64_t v58 = sub_261B8E088();
      swift_release();
      if (v41)
      {
        uint64_t v59 = sub_261B8E208();
        swift_release();
        uint64_t v58 = v59;
      }
      uint64_t v60 = swift_getKeyPath();
      uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943198);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v29, v140, v61);
      uint64_t v62 = v141;
      v63 = (uint64_t *)&v29[*(int *)(v141 + 36)];
      uint64_t *v63 = v60;
      v63[1] = v58;
      uint64_t v64 = swift_getKeyPath();
      uint64_t v65 = v119;
      sub_2619F86F0((uint64_t)v29, v119, &qword_26A943188);
      uint64_t v66 = v133;
      uint64_t v67 = v65 + *(int *)(v133 + 36);
      *(void *)uint64_t v67 = v64;
      *(void *)(v67 + 8) = 1;
      *(unsigned char *)(v67 + 16) = 0;
      sub_2619F8754((uint64_t)v29, &qword_26A943188);
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
      unint64_t v68 = sub_2619FB5C8();
      v69 = v118;
      sub_261B8E638();
      sub_2619F8754(v65, &qword_26A943150);
      uint64_t v70 = v121;
      v71 = v120;
      v72 = v69;
      uint64_t v73 = v131;
      (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v120, v72, v131);
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v129, v71, v73);
      swift_storeEnumTagMultiPayload();
      unint64_t v74 = sub_2619FB2FC();
      uint64_t v148 = v62;
      unint64_t v149 = v74;
      swift_getOpaqueTypeConformance2();
      uint64_t v148 = v66;
      unint64_t v149 = v68;
      swift_getOpaqueTypeConformance2();
      uint64_t v75 = (uint64_t)v130;
      sub_261B8DD68();
      sub_2619F86F0(v75, v136, &qword_26A943178);
      swift_storeEnumTagMultiPayload();
      sub_2619FB4E8();
      sub_2619FB668();
      uint64_t v76 = (uint64_t)v137;
      sub_261B8DD68();
      sub_2619F8754(v75, &qword_26A943178);
      sub_2619F86F0(v76, v145, &qword_26A943180);
      swift_storeEnumTagMultiPayload();
      sub_2619FB424();
      sub_2619FB718();
      sub_261B8DD68();
      sub_2619F8754(v76, &qword_26A943180);
      return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v71, v73);
    case 4:
      sub_2619F7774(v43, v44);
      sub_2619FA43C(v43, v44, &v148);
      sub_2619F7790(v43, v44);
      _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0((char *)&v148);
      sub_261B8E158();
      sub_261B8E058();
      sub_261B8E178();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v139);
      uint64_t v93 = sub_261B8E088();
      swift_release();
      uint64_t v94 = swift_getKeyPath();
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943198);
      uint64_t v96 = (uint64_t)v127;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16))(v127, v140, v95);
      uint64_t v97 = v141;
      v98 = (uint64_t *)(v96 + *(int *)(v141 + 36));
      uint64_t *v98 = v94;
      v98[1] = v93;
      uint64_t v99 = swift_getKeyPath();
      uint64_t v100 = v114;
      sub_2619F86F0(v96, v114, &qword_26A943188);
      uint64_t v101 = v100 + *(int *)(v133 + 36);
      *(void *)uint64_t v101 = v99;
      *(void *)(v101 + 8) = 1;
      *(unsigned char *)(v101 + 16) = 0;
      sub_2619F8754(v96, &qword_26A943188);
      v89 = &qword_26A943150;
      uint64_t v102 = v116;
      sub_2619FB7EC(v100, v116, &qword_26A943150);
      sub_2619F86F0(v102, v124, &qword_26A943150);
      swift_storeEnumTagMultiPayload();
      unint64_t v103 = sub_2619FB2FC();
      uint64_t v148 = v97;
      unint64_t v149 = v103;
      swift_getOpaqueTypeConformance2();
      sub_2619FB5C8();
      uint64_t v104 = (uint64_t)v125;
      sub_261B8DD68();
      sub_2619F86F0(v104, v136, &qword_26A943148);
      swift_storeEnumTagMultiPayload();
      sub_2619FB4E8();
      sub_2619FB668();
      uint64_t v105 = (uint64_t)v137;
      sub_261B8DD68();
      sub_2619F8754(v104, &qword_26A943148);
      sub_2619F86F0(v105, v145, &qword_26A943180);
      swift_storeEnumTagMultiPayload();
      sub_2619FB424();
      sub_2619FB718();
      sub_261B8DD68();
      sub_2619F8754(v105, &qword_26A943180);
      uint64_t v92 = v102;
      return sub_2619F8754(v92, v89);
    case 6:
      sub_2619F7774(v43, v44);
      sub_2619FA43C(v43, v44, &v148);
      sub_2619F7790(v43, v44);
      _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0((char *)&v148);
      sub_261B8E158();
      sub_261B8E058();
      uint64_t v106 = sub_261B8E178();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v139);
      uint64_t v107 = swift_getKeyPath();
      uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943198);
      uint64_t v109 = (uint64_t)v127;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v108 - 8) + 16))(v127, v140, v108);
      uint64_t v110 = v141;
      v111 = (uint64_t *)(v109 + *(int *)(v141 + 36));
      uint64_t *v111 = v107;
      v111[1] = v106;
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
      unint64_t v112 = sub_2619FB2FC();
      sub_261B8E638();
      sub_2619F8754(v109, &qword_26A943188);
      uint64_t v52 = v132;
      v53 = v122;
      uint64_t v54 = v142;
      (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v122, v34, v142);
      (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v124, v53, v54);
      swift_storeEnumTagMultiPayload();
      uint64_t v148 = v110;
      unint64_t v149 = v112;
      swift_getOpaqueTypeConformance2();
      sub_2619FB5C8();
      uint64_t v56 = (uint64_t)v125;
      sub_261B8DD68();
      v57 = &qword_26A943148;
      sub_2619F86F0(v56, v136, &qword_26A943148);
LABEL_12:
      swift_storeEnumTagMultiPayload();
      sub_2619FB4E8();
      sub_2619FB668();
      uint64_t v113 = (uint64_t)v137;
      sub_261B8DD68();
      sub_2619F8754(v56, v57);
      sub_2619F86F0(v113, v145, &qword_26A943180);
      swift_storeEnumTagMultiPayload();
      sub_2619FB424();
      sub_2619FB718();
      sub_261B8DD68();
      sub_2619F8754(v113, &qword_26A943180);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v53, v54);
    default:
      sub_2619F7774(v43, v44);
      sub_2619FA43C(v43, v44, &v148);
      sub_2619F7790(v43, v44);
      _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0((char *)&v148);
      sub_261B8E158();
      sub_261B8E058();
      sub_261B8E178();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v139);
      uint64_t v78 = sub_261B8E088();
      swift_release();
      uint64_t v79 = swift_getKeyPath();
      uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943198);
      uint64_t v81 = (uint64_t)v127;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v127, v140, v80);
      v82 = (uint64_t *)(v81 + *(int *)(v141 + 36));
      uint64_t *v82 = v79;
      v82[1] = v78;
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
      sub_2619FB2FC();
      v83 = v122;
      sub_261B8E638();
      sub_2619F8754(v81, &qword_26A943188);
      uint64_t v84 = swift_getKeyPath();
      uint64_t v85 = v132;
      v86 = v115;
      uint64_t v87 = v142;
      (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v115, v83, v142);
      v88 = &v86[*(int *)(v147 + 36)];
      *(void *)v88 = v84;
      *((void *)v88 + 1) = 1;
      v88[16] = 0;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v83, v87);
      v89 = &qword_26A943138;
      uint64_t v90 = (uint64_t)v86;
      uint64_t v91 = v117;
      sub_2619FB7EC(v90, v117, &qword_26A943138);
      sub_2619F86F0(v91, v145, &qword_26A943138);
      swift_storeEnumTagMultiPayload();
      sub_2619FB424();
      sub_2619FB718();
      sub_261B8DD68();
      uint64_t v92 = v91;
      return sub_2619F8754(v92, v89);
  }
}

uint64_t Font.if (_:transform:)(char a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  if (a1) {
    return a2(a4);
  }
  return swift_retain();
}

uint64_t Font.withVerticallyCenteredSlashes()()
{
  return sub_261B8E208();
}

uint64_t View.metricValueFont(includesSlashes:smallCaps:)(char a1, char a2, uint64_t a3, uint64_t a4)
{
  v7[0] = a1;
  v7[1] = a2;
  uint64_t KeyPath = swift_getKeyPath();
  char v9 = 0;
  MEMORY[0x263E4C680](v7, a3, &type metadata for MetricValueFont, a4);
  return swift_release();
}

uint64_t sub_2619FA3A0@<X0>(unsigned char *a1@<X8>)
{
  sub_2619FBA90();
  uint64_t result = sub_261B8DA78();
  *a1 = v3;
  return result;
}

uint64_t sub_2619FA3F0()
{
  return sub_261B8DA88();
}

uint64_t sub_2619FA43C@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_261B8DA68();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a3 = a1;
  }
  else
  {
    sub_2619F7774(a1, 0);
    os_log_type_t v11 = sub_261B8F4C8();
    uint64_t v12 = sub_261B8DF58();
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v17[1] = a3;
      uint64_t v16 = v15;
      uint64_t v18 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      v17[2] = sub_261AC9C40(0xD000000000000010, 0x8000000261B9D5E0, &v18);
      sub_261B8F6F8();
      _os_log_impl(&dword_2619F0000, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v16, -1, -1);
      MEMORY[0x263E4E970](v14, -1, -1);
    }

    sub_261B8DA58();
    swift_getAtKeyPath();
    sub_2619F7790(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_2619FA658@<X0>(uint64_t a1@<X8>)
{
  return sub_2619FA8D8(&qword_26A9431F8, MEMORY[0x263F1A668], 0x747865746E6F43, 0xE700000000000000, a1);
}

uint64_t sub_2619FA68C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_261B8DA68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_261B8F4C8();
    uint64_t v9 = sub_261B8DF58();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)os_log_type_t v11 = 136315138;
      uint64_t v14 = sub_261AC9C40(0x6C616E6F6974704FLL, 0xEE003E746E6F463CLL, &v15);
      sub_261B8F6F8();
      _os_log_impl(&dword_2619F0000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v12, -1, -1);
      MEMORY[0x263E4E970](v11, -1, -1);
    }

    sub_261B8DA58();
    swift_getAtKeyPath();
    j__swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_2619FA8A0@<X0>(uint64_t a1@<X8>)
{
  return sub_2619FA8D8(&qword_26A943210, MEMORY[0x263F18FF8], 0xD000000000000010, 0x8000000261B9D600, a1);
}

uint64_t sub_2619FA8D8@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_261B8DA68();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2619F86F0(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_261B8F4C8();
    uint64_t v21 = sub_261B8DF58();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v26 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v27 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v29 = sub_261AC9C40(v28, v26, &v30);
      sub_261B8F6F8();
      _os_log_impl(&dword_2619F0000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v24, -1, -1);
      MEMORY[0x263E4E970](v23, -1, -1);
    }

    sub_261B8DA58();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_2619FAB90@<X0>(uint64_t a1@<X8>)
{
  return sub_2619FA8D8(&qword_26A943200, MEMORY[0x263F188C0], 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_2619FABD0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_261B8DA68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_261B8F4C8();
  uint64_t v9 = sub_261B8DF58();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_261AC9C40(1819242306, 0xE400000000000000, &v15);
    sub_261B8F6F8();
    _os_log_impl(&dword_2619F0000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x263E4E970](v12, -1, -1);
    MEMORY[0x263E4E970](v11, -1, -1);
  }

  sub_261B8DA58();
  swift_getAtKeyPath();
  sub_2619F7790(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_2619FADD4@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_261B8DA68();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  os_log_type_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a3 = a1 & 1;
  }
  else
  {
    sub_2619F7774(a1, 0);
    os_log_type_t v11 = sub_261B8F4C8();
    uint64_t v12 = sub_261B8DF58();
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v17[1] = a3;
      uint64_t v16 = v15;
      uint64_t v18 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      v17[2] = sub_261AC9C40(0xD000000000000015, 0x8000000261B9D5C0, &v18);
      sub_261B8F6F8();
      _os_log_impl(&dword_2619F0000, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E4E970](v16, -1, -1);
      MEMORY[0x263E4E970](v14, -1, -1);
    }

    sub_261B8DA58();
    swift_getAtKeyPath();
    sub_2619F7790(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_2619FAFF4@<X0>(uint64_t a1@<X8>)
{
  return sub_2619FA8D8(&qword_26A9431F0, MEMORY[0x263F1FD10], 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

uint64_t sub_2619FB030@<X0>(uint64_t a1@<X8>)
{
  return sub_2619FA8D8(&qword_26A943218, MEMORY[0x263F1FC90], 0xD000000000000013, 0x8000000261B9D620, a1);
}

uint64_t sub_2619FB068@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_261B8D988();
  *a1 = result;
  return result;
}

uint64_t sub_2619FB094()
{
  return sub_261B8D998();
}

uint64_t sub_2619FB0C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_261B8DA38();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_2619FB0F4()
{
  return sub_261B8DA48();
}

uint64_t _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0(char *a1)
{
  char v1 = *a1;
  if (qword_26A942BF0 != -1) {
    swift_once();
  }
  if (((1 << v1) & 0x5C) != 0 || ((1 << v1) & 0x181) == 0)
  {
    id v2 = objc_msgSend(self, sel_currentDevice);
    sub_261AAC430();
  }
  return FIUICurrentLanguageRequiresTallScript();
}

uint64_t sub_2619FB208@<X0>(unsigned char *a1@<X8>)
{
  sub_2619FBA90();
  uint64_t result = sub_261B8DA78();
  *a1 = v3;
  return result;
}

uint64_t sub_2619FB258()
{
  return sub_261B8DA88();
}

uint64_t sub_2619FB2A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_261B8D988();
  *a1 = result;
  return result;
}

uint64_t sub_2619FB2D0()
{
  return sub_261B8D998();
}

unint64_t sub_2619FB2FC()
{
  unint64_t result = qword_26A9431A0;
  if (!qword_26A9431A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943188);
    sub_2619F8AB8(&qword_26A9431A8, &qword_26A943198);
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9431A0);
  }
  return result;
}

uint64_t sub_2619FB3C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_261B8DA38();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_2619FB3F4()
{
  return sub_261B8DA48();
}

uint64_t sub_2619FB424()
{
  return sub_2619FB460(&qword_26A9431B0, &qword_26A943180, (void (*)(void))sub_2619FB4E8, (void (*)(void))sub_2619FB668);
}

uint64_t sub_2619FB460(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2619FB4E8()
{
  unint64_t result = qword_26A9431B8;
  if (!qword_26A9431B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943178);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943188);
    sub_2619FB2FC();
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943150);
    sub_2619FB5C8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9431B8);
  }
  return result;
}

unint64_t sub_2619FB5C8()
{
  unint64_t result = qword_26A9431C0;
  if (!qword_26A9431C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943150);
    sub_2619FB2FC();
    sub_2619F8AB8(&qword_26A9430E8, &qword_26A9430F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9431C0);
  }
  return result;
}

unint64_t sub_2619FB668()
{
  unint64_t result = qword_26A9431C8;
  if (!qword_26A9431C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943148);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943188);
    sub_2619FB2FC();
    swift_getOpaqueTypeConformance2();
    sub_2619FB5C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9431C8);
  }
  return result;
}

unint64_t sub_2619FB718()
{
  unint64_t result = qword_26A9431D0;
  if (!qword_26A9431D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943138);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943188);
    sub_2619FB2FC();
    swift_getOpaqueTypeConformance2();
    sub_2619F8AB8(&qword_26A9430E8, &qword_26A9430F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9431D0);
  }
  return result;
}

uint64_t sub_2619FB7EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2619FB850()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2619FB870(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  sub_2619F7774(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for MetricValueFont(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  sub_2619F7774(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

uint64_t assignWithTake for MetricValueFont(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for MetricValueFont()
{
  return &type metadata for MetricValueFont;
}

uint64_t sub_2619FB984()
{
  return sub_2619FB460(&qword_26A9431D8, &qword_26A9431E0, (void (*)(void))sub_2619FB424, (void (*)(void))sub_2619FB718);
}

uint64_t sub_2619FB9D4()
{
  return swift_getWitnessTable();
}

unint64_t sub_2619FBA38()
{
  unint64_t result = qword_26A9431E8;
  if (!qword_26A9431E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9431E8);
  }
  return result;
}

unint64_t sub_2619FBA90()
{
  unint64_t result = qword_26A943208;
  if (!qword_26A943208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943208);
  }
  return result;
}

uint64_t ArtworkBridge.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___SMArtwork_artwork;
  uint64_t v4 = sub_261B8B788();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_2619FBB70()
{
  return sub_261B8B748();
}

uint64_t sub_2619FBBB4()
{
  return sub_261B8B768();
}

id sub_2619FBBF8(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2619FBC74()
{
  return sub_261B8B778();
}

id ArtworkBridge.__allocating_init(artwork:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  id v4 = &v3[OBJC_IVAR___SMArtwork_artwork];
  uint64_t v5 = sub_261B8B788();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

id ArtworkBridge.init(artwork:)(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR___SMArtwork_artwork];
  uint64_t v4 = sub_261B8B788();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for ArtworkBridge();
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t type metadata accessor for ArtworkBridge()
{
  uint64_t result = qword_26A943230;
  if (!qword_26A943230) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id ArtworkBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ArtworkBridge.init()()
{
}

id ArtworkBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ArtworkBridge.hash.getter()
{
  return sub_261B8FCD8();
}

unint64_t sub_2619FC1E8()
{
  unint64_t result = qword_26A943220;
  if (!qword_26A943220)
  {
    sub_261B8B788();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943220);
  }
  return result;
}

uint64_t ArtworkBridge.isEqual(_:)(uint64_t a1)
{
  sub_2619FC2D4(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_2619FC33C((uint64_t)v5);
    goto LABEL_5;
  }
  type metadata accessor for ArtworkBridge();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v2 = 0;
    return v2 & 1;
  }
  char v2 = sub_2619FC47C(v1, (uint64_t)v4);

  return v2 & 1;
}

uint64_t sub_2619FC2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2619FC33C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943228);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2619FC47C(uint64_t a1, uint64_t a2)
{
  if (MEMORY[0x263E49620](a1 + OBJC_IVAR___SMArtwork_artwork, a2 + OBJC_IVAR___SMArtwork_artwork))
  {
    uint64_t v2 = sub_261B8B748();
    uint64_t v4 = v3;
    if (v2 == sub_261B8B748() && v4 == v5)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v7 = sub_261B8FBA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v8 = 0;
      if ((v7 & 1) == 0) {
        return v8 & 1;
      }
    }
    uint64_t v9 = sub_261B8B768();
    uint64_t v11 = v10;
    if (v9 == sub_261B8B768() && v11 == v12)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v13 = sub_261B8FBA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v8 = 0;
      if ((v13 & 1) == 0) {
        return v8 & 1;
      }
    }
    uint64_t v14 = sub_261B8B778();
    uint64_t v16 = v15;
    if (v14 == sub_261B8B778() && v16 == v17) {
      char v8 = 1;
    }
    else {
      char v8 = sub_261B8FBA8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_2619FC614()
{
  return type metadata accessor for ArtworkBridge();
}

uint64_t sub_2619FC61C()
{
  uint64_t result = sub_261B8B788();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ArtworkBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ArtworkBridge);
}

uint64_t dispatch thunk of ArtworkBridge.backgroundColor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of ArtworkBridge.template.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ArtworkBridge.textColor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ArtworkBridge.__allocating_init(artwork:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t destroy for BlockSectionView(uint64_t a1)
{
  swift_release();

  return swift_release();
}

void *_s9WorkoutUI16BlockSectionViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  id v4 = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for BlockSectionView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for BlockSectionView(uint64_t a1, uint64_t a2)
{
  swift_release();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BlockSectionView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockSectionView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockSectionView()
{
  return &type metadata for BlockSectionView;
}

uint64_t sub_2619FC978()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2619FC994@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v36 = a4;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943270);
  uint64_t v31 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943288);
  MEMORY[0x270FA5388](v34);
  char v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943260);
  MEMORY[0x270FA5388](v35);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8BCF8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - v15;
  sub_261B8BCD8();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, *MEMORY[0x263F87CF0], v10);
  sub_2619FDA5C(&qword_26A943290, MEMORY[0x263F87CF8]);
  sub_261B8F2A8();
  sub_261B8F2A8();
  uint64_t v17 = v38;
  uint64_t v18 = v40;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  v19(v16, v10);
  if (v17 == (ValueMetadata *)v18)
  {
    *(void *)uint64_t v9 = sub_261B8DBE8();
    *((void *)v9 + 1) = 0;
    v9[16] = 1;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9432B8);
    sub_2619FCEF8(a1, v33, v32, &v9[*(int *)(v20 + 44)]);
    sub_2619F86F0((uint64_t)v9, (uint64_t)v7, &qword_26A943260);
    swift_storeEnumTagMultiPayload();
    sub_2619F8AB8(&qword_26A943258, &qword_26A943260);
    sub_2619FD83C();
    sub_261B8DD68();
    return sub_2619F8754((uint64_t)v9, &qword_26A943260);
  }
  else
  {
    uint64_t v40 = sub_261B8BCC8();
    uint64_t v22 = (void *)swift_allocObject();
    uint64_t v23 = v33;
    v22[2] = a1;
    v22[3] = v23;
    v22[4] = v32;
    swift_retain();
    swift_retain();
    id v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943298);
    sub_261B8AE38();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9432A0);
    sub_2619F8AB8(&qword_26A9432A8, &qword_26A943298);
    unint64_t v25 = sub_2619FD8DC();
    uint64_t v38 = &type metadata for WorkoutStepRow;
    unint64_t v39 = v25;
    swift_getOpaqueTypeConformance2();
    sub_2619FDA5C(&qword_26A9432B0, MEMORY[0x263F87CC8]);
    unint64_t v26 = v30;
    sub_261B8EBF8();
    uint64_t v27 = v31;
    uint64_t v28 = v37;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v7, v26, v37);
    swift_storeEnumTagMultiPayload();
    sub_2619F8AB8(&qword_26A943258, &qword_26A943260);
    sub_2619FD83C();
    sub_261B8DD68();
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v26, v28);
  }
}

uint64_t sub_2619FCEF8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  v53 = a2;
  uint64_t v54 = a3;
  uint64_t v50 = a1;
  uint64_t v58 = a4;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943270);
  uint64_t v64 = *(void *)(v57 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v57);
  uint64_t v56 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v62 = (char *)&v50 - v6;
  uint64_t v52 = sub_261B8EBB8();
  uint64_t v7 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9432C0);
  uint64_t v11 = v10 - 8;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v59 = (uint64_t)&v50 - v15;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9432C8);
  uint64_t v63 = *(void *)(v55 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v55);
  uint64_t v60 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v61 = (char *)&v50 - v18;
  uint64_t v69 = sub_261B8BCB8();
  sub_261B8EB78();
  uint64_t v67 = 0;
  char v68 = 1;
  sub_261B8E878();
  sub_261B8D488();
  sub_2619FD954();
  sub_261B8E6C8();
  swift_release();
  swift_release();
  swift_release();
  sub_261B8EBA8();
  sub_261B8ED48();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v23 = v52;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v14, v9, v52);
  id v24 = &v14[*(int *)(v11 + 44)];
  unint64_t v51 = v14;
  __asm { FMOV            V0.2D, #3.0 }
  *(_OWORD *)id v24 = _Q0;
  *((void *)v24 + 2) = v20;
  *((void *)v24 + 3) = v22;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v23);
  uint64_t v30 = v59;
  sub_2619FD9A8((uint64_t)v14, v59);
  uint64_t v31 = v50;
  uint64_t v69 = sub_261B8BCC8();
  uint64_t v32 = (void *)swift_allocObject();
  uint64_t v33 = v53;
  v32[2] = v31;
  v32[3] = v33;
  v32[4] = v54;
  swift_retain();
  swift_retain();
  id v34 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943298);
  sub_261B8AE38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9432A0);
  sub_2619F8AB8(&qword_26A9432A8, &qword_26A943298);
  unint64_t v35 = sub_2619FD8DC();
  uint64_t v65 = &type metadata for WorkoutStepRow;
  unint64_t v66 = v35;
  swift_getOpaqueTypeConformance2();
  sub_2619FDA5C(&qword_26A9432B0, MEMORY[0x263F87CC8]);
  uint64_t v36 = v62;
  sub_261B8EBF8();
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  uint64_t v38 = v60;
  uint64_t v39 = v55;
  v37(v60, v61, v55);
  uint64_t v40 = v30;
  uint64_t v41 = (uint64_t)v51;
  sub_2619F86F0(v40, (uint64_t)v51, &qword_26A9432C0);
  int v42 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  char v44 = v56;
  uint64_t v43 = v57;
  v42(v56, v36, v57);
  uint64_t v45 = v58;
  v37(v58, v38, v39);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9432D8);
  sub_2619F86F0(v41, (uint64_t)&v45[*(int *)(v46 + 48)], &qword_26A9432C0);
  v42(&v45[*(int *)(v46 + 64)], v44, v43);
  v47 = *(void (**)(char *, uint64_t))(v64 + 8);
  v47(v62, v43);
  sub_2619F8754(v59, &qword_26A9432C0);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v63 + 8);
  v48(v61, v39);
  v47(v44, v43);
  sub_2619F8754(v41, &qword_26A9432C0);
  return ((uint64_t (*)(char *, uint64_t))v48)(v60, v39);
}

uint64_t sub_2619FD518(uint64_t a1, uint64_t a2, void *a3)
{
  sub_261B8BCA8();
  sub_2619FDA5C(&qword_26A9432E0, MEMORY[0x263F87CC8]);
  swift_retain();
  id v4 = a3;
  sub_261B8D5E8();
  sub_261B8E878();
  sub_261B8D488();
  sub_2619FD8DC();
  sub_261B8E6C8();

  swift_release();
  return swift_release();
}

uint64_t sub_2619FD618()
{
  return sub_261B8E598();
}

uint64_t sub_2619FD634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943240);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *((void *)v1 + 2);
  long long v11 = *v1;
  uint64_t v12 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943248);
  sub_2619FD79C();
  sub_261B8EC28();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 16))(a1, v6, v3);
  uint64_t v8 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A943280) + 36);
  *(_OWORD *)uint64_t v8 = xmmword_261B92880;
  *(_OWORD *)(v8 + 16) = xmmword_261B92880;
  *(unsigned char *)(v8 + 32) = 0;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2619FD790@<X0>(uint64_t a1@<X8>)
{
  return sub_2619FC994(*(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

unint64_t sub_2619FD79C()
{
  unint64_t result = qword_26A943250;
  if (!qword_26A943250)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943248);
    sub_2619F8AB8(&qword_26A943258, &qword_26A943260);
    sub_2619FD83C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943250);
  }
  return result;
}

unint64_t sub_2619FD83C()
{
  unint64_t result = qword_26A943268;
  if (!qword_26A943268)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943270);
    sub_2619FD8DC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943268);
  }
  return result;
}

unint64_t sub_2619FD8DC()
{
  unint64_t result = qword_26A943278;
  if (!qword_26A943278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943278);
  }
  return result;
}

uint64_t sub_2619FD934(uint64_t a1)
{
  return sub_2619FD518(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_2619FD954()
{
  unint64_t result = qword_26A9432D0;
  if (!qword_26A9432D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9432D0);
  }
  return result;
}

uint64_t sub_2619FD9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9432C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm()
{
  swift_release();

  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2619FDA5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2619FDAA8()
{
  unint64_t result = qword_26A9432E8;
  if (!qword_26A9432E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943280);
    sub_2619FDB48();
    sub_2619F8AB8(&qword_26A9432F8, &qword_26A943300);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9432E8);
  }
  return result;
}

unint64_t sub_2619FDB48()
{
  unint64_t result = qword_26A9432F0;
  if (!qword_26A9432F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943240);
    sub_2619FD79C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9432F0);
  }
  return result;
}

uint64_t static PowerZonesPlatterMetricsProvider.metrics(workoutSettingsManager:shouldShowCadenceMetrics:)(void *a1, char a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943308);
  uint64_t inited = swift_initStackObject();
  uint64_t v5 = inited;
  *(_OWORD *)(inited + 16) = xmmword_261B92900;
  *(_OWORD *)(inited + 32) = xmmword_261B92910;
  uint64_t v6 = 5;
  if (a2) {
    uint64_t v6 = 15;
  }
  *(void *)(inited + 48) = 43;
  *(void *)(inited + 56) = v6;
  id v7 = objc_msgSend(a1, sel_supportedMetrics);
  if (v7)
  {
    uint64_t v8 = v7;
    sub_2619FDF28();
    sub_2619FDF68();
    uint64_t v9 = sub_261B8F448();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_2619FDCBC(v5, v9);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  return v11;
}

void sub_2619FDCBC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return;
  }
  unint64_t v4 = 0;
  uint64_t v5 = a1 + 32;
  unint64_t v6 = a2 & 0xC000000000000001;
  uint64_t v29 = a2 + 56;
  uint64_t v7 = MEMORY[0x263F8EE78];
  unint64_t v8 = 0x263F08000uLL;
  uint64_t v26 = a1 + 32;
  unint64_t v27 = *(void *)(a1 + 16);
  unint64_t v25 = a2 & 0xC000000000000001;
  do
  {
    uint64_t v24 = v7;
    if (v4 <= v2) {
      unint64_t v9 = v2;
    }
    else {
      unint64_t v9 = v4;
    }
    unint64_t v28 = v9;
    while (1)
    {
      if (v4 == v28)
      {
        __break(1u);
        return;
      }
      uint64_t v11 = v4++;
      if (!a2) {
        goto LABEL_8;
      }
      uint64_t v12 = *(void *)(v5 + 8 * v11);
      id v13 = objc_msgSend(objc_allocWithZone(*(Class *)(v8 + 2584)), sel_initWithUnsignedInteger_, v12);
      if (!v6) {
        break;
      }
      char v10 = sub_261B8F858();

      if (v10) {
        goto LABEL_21;
      }
LABEL_8:
      if (v4 == v2) {
        return;
      }
    }
    if (!*(void *)(a2 + 16)
      || (uint64_t v14 = sub_261B8F698(),
          uint64_t v15 = -1 << *(unsigned char *)(a2 + 32),
          unint64_t v16 = v14 & ~v15,
          ((*(void *)(v29 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0))
    {
LABEL_19:

      uint64_t v5 = v26;
      unint64_t v2 = v27;
      unint64_t v6 = v25;
      unint64_t v8 = 0x263F08000;
      goto LABEL_8;
    }
    sub_2619FDF28();
    id v17 = *(id *)(*(void *)(a2 + 48) + 8 * v16);
    char v18 = sub_261B8F6A8();

    if ((v18 & 1) == 0)
    {
      uint64_t v19 = ~v15;
      do
      {
        unint64_t v16 = (v16 + 1) & v19;
        if (((*(void *)(v29 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
          goto LABEL_19;
        }
        id v20 = *(id *)(*(void *)(a2 + 48) + 8 * v16);
        char v21 = sub_261B8F6A8();
      }
      while ((v21 & 1) == 0);
    }

    uint64_t v5 = v26;
    unint64_t v2 = v27;
    unint64_t v6 = v25;
LABEL_21:
    uint64_t v7 = v24;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_261ACA230(0, *(void *)(v24 + 16) + 1, 1);
      uint64_t v7 = v24;
    }
    unint64_t v23 = *(void *)(v7 + 16);
    unint64_t v22 = *(void *)(v7 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_261ACA230(v22 > 1, v23 + 1, 1);
      uint64_t v7 = v24;
    }
    *(void *)(v7 + 16) = v23 + 1;
    *(void *)(v7 + 8 * v23 + 32) = v12;
    unint64_t v8 = 0x263F08000;
  }
  while (v4 != v2);
}

unint64_t sub_2619FDF28()
{
  unint64_t result = qword_26A947430;
  if (!qword_26A947430)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A947430);
  }
  return result;
}

unint64_t sub_2619FDF68()
{
  unint64_t result = qword_26A943310;
  if (!qword_26A943310)
  {
    sub_2619FDF28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943310);
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerZonesPlatterMetricsProvider()
{
  return &type metadata for PowerZonesPlatterMetricsProvider;
}

uint64_t TrainingLoadNewInsightsDailyView.init(onConfirm:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t TrainingLoadNewInsightsDailyView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943318);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943320);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943328);
  MEMORY[0x270FA5388](v35);
  id v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1[1];
  uint64_t v33 = *v1;
  uint64_t v34 = v14;
  *(void *)uint64_t v11 = sub_261B8DBE8();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  uint64_t v15 = &v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A943330) + 44)];
  sub_261B8DF88();
  type metadata accessor for TrainingLoadOnboardingCore();
  sub_2619FE608();
  sub_261B8D378();
  unint64_t v16 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v16(v6, v8, v2);
  v16(v15, v6, v2);
  id v17 = &v15[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A943340) + 48)];
  *(void *)id v17 = 0;
  v17[8] = 1;
  char v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v8, v2);
  v18(v6, v2);
  uint64_t v19 = sub_261B8DBE8();
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v20 = (id)qword_26B416688;
  uint64_t v21 = sub_261B8AA48();
  uint64_t v23 = v22;

  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v33;
  *(void *)(v24 + 24) = v34;
  swift_retain();
  int v25 = sub_261B8D498();
  char v26 = MEMORY[0x263E4BEE0]((2 * v25));
  uint64_t v27 = sub_261B8D6B8();
  sub_2619F86F0((uint64_t)v11, (uint64_t)v13, &qword_26A943320);
  unint64_t v28 = &v13[*(int *)(v35 + 36)];
  *(void *)unint64_t v28 = v21;
  *((void *)v28 + 1) = v23;
  *((void *)v28 + 2) = sub_2619FFE24;
  *((void *)v28 + 3) = v24;
  *((void *)v28 + 4) = v27;
  *((void *)v28 + 5) = 0;
  v28[48] = 1;
  v28[49] = v26;
  *((void *)v28 + 7) = v19;
  sub_2619F8754((uint64_t)v11, &qword_26A943320);
  uint64_t v29 = sub_261B8EC98();
  sub_2619FE90C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v36, 0.0, 1, INFINITY, 0, v29, v30, &qword_26A943328, &qword_26A943350);
  return sub_2619F8754((uint64_t)v13, &qword_26A943328);
}

uint64_t sub_2619FE424@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_261B8AA68();
  MEMORY[0x270FA5388](v2 - 8);
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v3 = (id)qword_26B416688;
  uint64_t v4 = sub_261B8AA48();
  uint64_t v6 = v5;

  id v7 = (id)qword_26B416688;
  sub_261B8AA48();

  sub_261B8AA58();
  type metadata accessor for TrainingLoadOnboardingCore();
  uint64_t result = sub_261B8AA28();
  *a1 = 0xD000000000000027;
  a1[1] = 0x8000000261B9D710;
  a1[2] = v4;
  a1[3] = v6;
  return result;
}

unint64_t sub_2619FE608()
{
  unint64_t result = qword_26A943338;
  if (!qword_26A943338)
  {
    type metadata accessor for TrainingLoadOnboardingCore();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943338);
  }
  return result;
}

double sub_2619FE660@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FFB90(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A9433A8, &qword_26A9433B0).n128_u64[0];
  return result;
}

uint64_t sub_2619FE6BC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_261B8F4C8();
    uint64_t v31 = (void *)sub_261B8DF58();
    sub_261B8CE58();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  sub_261B8D778();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_261A001D0(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

double sub_2619FE8B0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FE90C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A943408, &qword_26A943410).n128_u64[0];
  return result;
}

__n128 sub_2619FE90C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_261B8F4C8();
    unint64_t v28 = (void *)sub_261B8DF58();
    sub_261B8CE58();

    uint64_t v19 = a17;
  }
  sub_261B8D778();
  sub_2619F86F0(v17, a9, a16);
  uint64_t v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  _OWORD *v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

double sub_2619FEADC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FE90C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A943388, &qword_26A943390).n128_u64[0];
  return result;
}

uint64_t sub_2619FEB38@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_261B8F4C8();
    uint64_t v23 = (void *)sub_261B8DF58();
    sub_261B8CE58();
  }
  sub_261B8D778();
  long long v24 = v13[1];
  long long v36 = *v13;
  long long v37 = v24;
  sub_261A00140((uint64_t)&v36, (uint64_t)v39);
  uint64_t v38 = *((void *)&v37 + 1);
  uint64_t v34 = *((void *)v13 + 4);
  char v35 = *((unsigned char *)v13 + 40);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  *(_OWORD *)((char *)a9 + 25) = *(long long *)((char *)v13 + 25);
  a9[8] = v32;
  a9[9] = v33;
  a9[3] = v27;
  a9[4] = v28;
  a9[6] = v30;
  a9[7] = v31;
  a9[5] = v29;
  sub_261A0019C((uint64_t)v39);
  sub_261A001E0((uint64_t)&v38);
  return sub_261A0020C((uint64_t)&v34);
}

double sub_2619FED14@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FE90C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A943438, &qword_26A943440).n128_u64[0];
  return result;
}

double sub_2619FED70@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FE90C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A943428, &qword_26A943430).n128_u64[0];
  return result;
}

double sub_2619FEDCC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FFB90(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A943448, &qword_26A943450).n128_u64[0];
  return result;
}

double sub_2619FEE28@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FE90C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A9433F8, &qword_26A943400).n128_u64[0];
  return result;
}

uint64_t sub_2619FEE84@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_261B8F4C8();
    long long v27 = (void *)sub_261B8DF58();
    sub_261B8CE58();

    uint64_t v18 = a16;
  }
  sub_261B8D778();
  *(void *)a9 = v18;
  *(void *)(a9 + 8) = a17;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  *(_OWORD *)(a9 + 48) = v31;
  *(_OWORD *)(a9 + 64) = v32;
  return swift_retain();
}

__n128 sub_2619FF044@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_261B8F4C8();
    uint64_t v22 = (void *)sub_261B8DF58();
    sub_261B8CE58();
  }
  sub_261B8D778();
  a9[4] = v28;
  a9[5] = v29;
  a9[6] = v30;
  *a9 = v24;
  a9[1] = v25;
  __n128 result = v27;
  a9[2] = v26;
  a9[3] = v27;
  return result;
}

uint64_t sub_2619FF1D0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_261B8F4C8();
    uint64_t v23 = (void *)sub_261B8DF58();
    sub_261B8CE58();
  }
  sub_261B8D778();
  long long v24 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v24;
  *(void *)(a9 + 96) = *(void *)(v13 + 96);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  long long v26 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v26;
  *(_OWORD *)(a9 + 104) = v28;
  *(_OWORD *)(a9 + 120) = v29;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 200) = v34;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 152) = v31;
  return sub_261A00238(v13);
}

double sub_2619FF3A4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FE90C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A9433E8, &qword_26A9433F0).n128_u64[0];
  return result;
}

double sub_2619FF400@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FE90C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A9433D8, &qword_26A9433E0).n128_u64[0];
  return result;
}

double sub_2619FF45C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FE90C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A943418, &qword_26A943420).n128_u64[0];
  return result;
}

double sub_2619FF4B8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FFB90(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A943378, &qword_26A943380).n128_u64[0];
  return result;
}

uint64_t sub_2619FF514@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_261B8F4C8();
    uint64_t v23 = (void *)sub_261B8DF58();
    sub_261B8CE58();
  }
  sub_261B8D778();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 168) = v33;
  *(_OWORD *)(a9 + 72) = v27;
  *(_OWORD *)(a9 + 88) = v28;
  *(void *)(a9 + 64) = *(void *)(v13 + 64);
  *(_OWORD *)(a9 + 104) = v29;
  return sub_261A0020C(v13);
}

uint64_t sub_2619FF6E0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_261B8F4C8();
    uint64_t v23 = (void *)sub_261B8DF58();
    sub_261B8CE58();
  }
  sub_261B8D778();
  long long v24 = v13[1];
  long long v25 = v13[2];
  *a9 = *v13;
  a9[1] = v24;
  a9[2] = v25;
  *(_OWORD *)((char *)a9 + 41) = *(_OWORD *)((char *)v13 + 41);
  a9[8] = v31;
  a9[9] = v32;
  a9[10] = v33;
  a9[4] = v27;
  a9[5] = v28;
  a9[6] = v29;
  a9[7] = v30;
  return swift_retain();
}

double sub_2619FF8A0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FE90C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A943458, &qword_26A943460).n128_u64[0];
  return result;
}

double sub_2619FF8FC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FE90C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A943398, &qword_26A9433A0).n128_u64[0];
  return result;
}

uint64_t sub_2619FF958@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_261B8F4C8();
    uint64_t v23 = (void *)sub_261B8DF58();
    sub_261B8CE58();
  }
  sub_261B8D778();
  long long v24 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v24;
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(unsigned char *)(a9 + 112) = *(unsigned char *)(v13 + 112);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  long long v26 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v26;
  *(_OWORD *)(a9 + 152) = v30;
  *(_OWORD *)(a9 + 136) = v29;
  *(_OWORD *)(a9 + 120) = v28;
  *(_OWORD *)(a9 + 216) = v34;
  *(_OWORD *)(a9 + 200) = v33;
  *(_OWORD *)(a9 + 184) = v32;
  *(_OWORD *)(a9 + 168) = v31;
  return sub_261A000E8(v13);
}

double sub_2619FFB34@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FFB90(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A9433C8, &qword_26A9433D0).n128_u64[0];
  return result;
}

__n128 sub_2619FFB90@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_261B8F4C8();
    long long v28 = (void *)sub_261B8DF58();
    sub_261B8CE58();

    uint64_t v19 = a16;
  }
  sub_261B8D778();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a9, v17, v29);
  long long v30 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  _OWORD *v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

double sub_2619FFD8C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2619FE90C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26A9433B8, &qword_26A9433C0).n128_u64[0];
  return result;
}

uint64_t sub_2619FFDEC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2619FFE24()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2619FFE4C()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for TrainingLoadNewInsightsDailyView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for TrainingLoadNewInsightsDailyView()
{
  return swift_release();
}

void *assignWithCopy for TrainingLoadNewInsightsDailyView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for TrainingLoadNewInsightsDailyView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadNewInsightsDailyView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadNewInsightsDailyView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)double result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadNewInsightsDailyView()
{
  return &type metadata for TrainingLoadNewInsightsDailyView;
}

unint64_t sub_2619FFFA8()
{
  unint64_t result = qword_26A943348;
  if (!qword_26A943348)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943350);
    sub_261A00024();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943348);
  }
  return result;
}

unint64_t sub_261A00024()
{
  unint64_t result = qword_26A943358;
  if (!qword_26A943358)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943328);
    sub_2619F8AB8(&qword_26A943360, &qword_26A943320);
    sub_2619F8AB8(&qword_26A943368, &qword_26A943370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943358);
  }
  return result;
}

uint64_t sub_261A000E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A00140(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_261A0019C(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A001D0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_261A001E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A0020C(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A00238(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  char v3 = *(unsigned char *)(a1 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2619F7774(v2, v3);
  return a1;
}

uint64_t StepMetricView.init(intervalsMetricsPublisher:workoutStatePublisher:step:formattingManager:activityType:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  sub_261B8C548();
  sub_261A0104C(&qword_26A943468, MEMORY[0x263F87F58]);
  swift_retain();
  uint64_t v8 = sub_261B8D5E8();
  uint64_t v10 = v9;
  sub_261B8BB48();
  sub_261A0104C(&qword_26A943470, MEMORY[0x263F87C00]);
  uint64_t v11 = sub_261B8D5E8();
  uint64_t v13 = v12;
  uint64_t result = swift_release();
  *a4 = v8;
  a4[1] = v10;
  a4[2] = v11;
  a4[3] = v13;
  a4[4] = a1;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t StepMetricView.body.getter()
{
  uint64_t v1 = sub_261B8DED8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = *(_OWORD *)(v0 + 16);
  v16[0] = *(_OWORD *)v0;
  v16[1] = v5;
  v16[2] = *(_OWORD *)(v0 + 32);
  uint64_t v17 = *(void *)(v0 + 48);
  uint64_t v6 = sub_261B8DAD8();
  sub_261A005BC(v16, (uint64_t)&v19);
  char v18 = 0;
  *(void *)&long long v9 = v6;
  *((void *)&v9 + 1) = 0x4008000000000000;
  LOBYTE(v10[0]) = 0;
  *(_OWORD *)((char *)v10 + 8) = v19;
  *((void *)&v10[1] + 1) = *(void *)&v20[0];
  long long v11 = *(_OWORD *)((char *)v20 + 8);
  long long v12 = *(_OWORD *)((char *)&v20[1] + 8);
  *(void *)&long long v13 = *((void *)&v20[2] + 1);
  BYTE8(v13) = v21[0];
  long long v14 = *(_OWORD *)&v21[8];
  *(_WORD *)uint64_t v15 = *(_WORD *)&v21[24];
  *(_OWORD *)&v15[8] = v22;
  sub_261B8DEC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943478);
  sub_261A00A10();
  sub_261B8E6B8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  long long v22 = v14;
  long long v23 = *(_OWORD *)v15;
  uint64_t v24 = *(void *)&v15[16];
  v20[1] = v10[1];
  v20[2] = v11;
  *(_OWORD *)char v21 = v12;
  *(_OWORD *)&v21[16] = v13;
  long long v19 = v9;
  v20[0] = v10[0];
  return sub_261A00A6C((uint64_t)&v19);
}

uint64_t sub_261A005BC@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *a1;
  long long v40 = a1[1];
  long long v41 = v7;
  uint64_t v8 = *((void *)a1 + 4);
  long long v9 = (void *)*((void *)a1 + 5);
  uint64_t v10 = (void *)*((void *)a1 + 6);
  swift_retain();
  sub_261A00FF4((uint64_t)&v41);
  sub_261A00FF4((uint64_t)&v40);
  sub_261B8C548();
  sub_261A0104C(&qword_26A943468, MEMORY[0x263F87F58]);
  swift_retain();
  id v38 = v9;
  id v37 = v10;
  uint64_t v11 = sub_261B8D5E8();
  uint64_t v35 = v12;
  uint64_t v36 = v11;
  sub_261B8BB48();
  sub_261A0104C(&qword_26A943470, MEMORY[0x263F87C00]);
  uint64_t v13 = sub_261B8D5E8();
  uint64_t v33 = v14;
  uint64_t v34 = v13;
  sub_261A01020((uint64_t)&v41);
  uint64_t v15 = (void *)sub_261B8BC88();
  if (sub_261B8F608()) {
    unint64_t v16 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
  }
  else {
    unint64_t v16 = _HKWorkoutGoalType.color.getter((uint64_t)objc_msgSend(v15, sel_goalTypeIdentifier));
  }
  uint64_t v17 = v16;

  MEMORY[0x263E4C7B0](v17);
  uint64_t v18 = sub_261B8BCE8();
  v39[3] = v18;
  v39[4] = sub_261A0104C((unint64_t *)&qword_26A943490, MEMORY[0x263F87CE8]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v18 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F87CE0], v18);
  sub_261B8C6E8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  uint64_t v20 = sub_261B8E8A8();
  char v21 = sub_261B8DFA8();
  swift_release();
  if (qword_26A942C88 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_26A9447C0;
  swift_retain();
  uint64_t v23 = sub_261B8C508();
  sub_261A01020((uint64_t)&v41);
  if (qword_26A942C90 != -1) {
    swift_once();
  }
  sub_261B8E128();
  uint64_t v24 = *MEMORY[0x263F1A610];
  uint64_t v25 = sub_261B8E118();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v6, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v6, 0, 1, v25);
  uint64_t v27 = sub_261B8E188();
  uint64_t result = sub_261A010F8((uint64_t)v6);
  uint64_t v29 = v35;
  *(void *)a2 = v36;
  *(void *)(a2 + 8) = v29;
  uint64_t v30 = v33;
  *(void *)(a2 + 16) = v34;
  *(void *)(a2 + 24) = v30;
  id v31 = v38;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v31;
  *(void *)(a2 + 48) = v37;
  *(void *)(a2 + 56) = v20;
  *(unsigned char *)(a2 + 64) = v21;
  *(void *)(a2 + 72) = v22;
  *(void *)(a2 + 80) = 10;
  *(_WORD *)(a2 + 88) = 256;
  *(void *)(a2 + 96) = v23;
  *(void *)(a2 + 104) = v27;
  return result;
}

unint64_t sub_261A00A10()
{
  unint64_t result = qword_26A943480;
  if (!qword_26A943480)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943480);
  }
  return result;
}

uint64_t sub_261A00A6C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);
  uint64_t v3 = *(void **)(a1 + 72);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_261A00AF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A00B0C()
{
  uint64_t v1 = sub_261B8DED8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = *(_OWORD *)(v0 + 16);
  v16[0] = *(_OWORD *)v0;
  v16[1] = v5;
  v16[2] = *(_OWORD *)(v0 + 32);
  uint64_t v17 = *(void *)(v0 + 48);
  uint64_t v6 = sub_261B8DAD8();
  sub_261A005BC(v16, (uint64_t)&v19);
  char v18 = 0;
  *(void *)&long long v9 = v6;
  *((void *)&v9 + 1) = 0x4008000000000000;
  LOBYTE(v10[0]) = 0;
  *(_OWORD *)((char *)v10 + 8) = v19;
  *((void *)&v10[1] + 1) = *(void *)&v20[0];
  long long v11 = *(_OWORD *)((char *)v20 + 8);
  long long v12 = *(_OWORD *)((char *)&v20[1] + 8);
  *(void *)&long long v13 = *((void *)&v20[2] + 1);
  BYTE8(v13) = v21[0];
  long long v14 = *(_OWORD *)&v21[8];
  *(_WORD *)uint64_t v15 = *(_WORD *)&v21[24];
  *(_OWORD *)&v15[8] = v22;
  sub_261B8DEC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943478);
  sub_261A00A10();
  sub_261B8E6B8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  long long v22 = v14;
  long long v23 = *(_OWORD *)v15;
  uint64_t v24 = *(void *)&v15[16];
  v20[1] = v10[1];
  v20[2] = v11;
  *(_OWORD *)char v21 = v12;
  *(_OWORD *)&v21[16] = v13;
  long long v19 = v9;
  v20[0] = v10[0];
  return sub_261A00A6C((uint64_t)&v19);
}

void destroy for StepMetricView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();

  uint64_t v2 = *(void **)(a1 + 48);
}

void *initializeWithCopy for StepMetricView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  long long v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = (void *)a2[6];
  a1[6] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  id v7 = v5;
  id v8 = v6;
  return a1;
}

void *assignWithCopy for StepMetricView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[5];
  long long v5 = (void *)a1[5];
  a1[5] = v4;
  id v6 = v4;

  id v7 = (void *)a2[6];
  id v8 = (void *)a1[6];
  a1[6] = v7;
  id v9 = v7;

  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StepMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();

  long long v5 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for StepMetricView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StepMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StepMetricView()
{
  return &type metadata for StepMetricView;
}

uint64_t sub_261A00F98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A00FF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A01020(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A0104C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_261A010F8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_261A01158(uint64_t a1)
{
  return sub_261A011A0(0.411764706, 0.121568627, 0.101960784, a1, &qword_26A943498);
}

uint64_t sub_261A01180(uint64_t a1)
{
  return sub_261A011A0(0.0, 0.341176471, 0.223529412, a1, &qword_26A9434A0);
}

uint64_t sub_261A011A0(double a1, double a2, double a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = sub_261B8E838();
  double v10 = MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, double))(v13 + 104))(v12, *MEMORY[0x263F1B388], v10);
  uint64_t result = MEMORY[0x263E4C7A0](v12, a1, a2, a3, 1.0);
  *a5 = result;
  return result;
}

uint64_t sub_261A01294(uint64_t a1)
{
  return sub_261A012D0(0.0, 1.0, 0.658823529, a1, &qword_26A9434A8);
}

uint64_t sub_261A012B0(uint64_t a1)
{
  return sub_261A012D0(1.0, 0.37254902, 0.274509804, a1, &qword_26A9434B0);
}

uint64_t sub_261A012D0(double a1, double a2, double a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result = MEMORY[0x263E4C6F0](objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, a1, a2, a3, 1.0));
  *a5 = result;
  return result;
}

int64x2_t sub_261A0133C()
{
  int64x2_t result = vdupq_n_s64(0x405B000000000000uLL);
  xmmword_26A9434B8 = (__int128)result;
  qword_26A9434D8 = 0;
  xmmword_26A9434C8 = 0uLL;
  return result;
}

void sub_261A0135C(uint64_t a1)
{
}

void sub_261A01388(uint64_t a1)
{
}

double sub_261A013B4()
{
  if (qword_26A942C18 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_26A9434D8;
  xmmword_26A9434F0 = xmmword_26A9434C8;
  qword_26A943500 = qword_26A9434D8;
  return result;
}

void sub_261A01418(uint64_t a1)
{
}

void sub_261A01444(uint64_t a1)
{
}

void sub_261A01470(uint64_t a1)
{
}

void sub_261A0149C(uint64_t a1, void *a2, double *a3, double *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  *a4 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(*a3, *a3, *a3, *a3, *a3, *a3, *a3);
}

uint64_t sub_261A01500(uint64_t a1)
{
  return sub_261A01584(a1, &qword_26A942C38, (uint64_t)&dbl_26A943508, &qword_26A943520);
}

uint64_t sub_261A0152C(uint64_t a1)
{
  return sub_261A01584(a1, &qword_26A942C40, (uint64_t)&dbl_26A943510, &qword_26A943528);
}

uint64_t sub_261A01558(uint64_t a1)
{
  return sub_261A01584(a1, &qword_26A942C48, (uint64_t)&dbl_26A943518, &qword_26A943530);
}

uint64_t sub_261A01584(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t result = sub_261A0323C();
  *a4 = result;
  return result;
}

uint64_t sub_261A015D0()
{
  if (qword_26A942BF8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26A943498;
  uint64_t v1 = qword_26A942C00;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  qword_26A9535A8 = v0;
  unk_26A9535B0 = qword_26A9434A0;
  qword_26A9535B8 = 0x3FF0000000000000;
  return swift_retain();
}

uint64_t sub_261A01688()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A016F8()
{
  return sub_261B8FCC8();
}

uint64_t sub_261A01748()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A017B4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 > 1u) {
    return sub_261B8FCA8();
  }
  sub_261B8FCA8();
  return sub_261B8FCC8();
}

uint64_t sub_261A01810(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  double v3 = *(double *)(a2 + 16);
  if (sub_261B8E848()) {
    return sub_261B8E848() & (v2 == v3);
  }
  else {
    return 0;
  }
}

uint64_t sub_261A01874()
{
  uint64_t v1 = *(void *)v0;
  unsigned __int8 v2 = *(unsigned char *)(v0 + 8);
  sub_261B8FC98();
  sub_261A017B4((uint64_t)v4, v1, v2);
  return sub_261B8FCE8();
}

uint64_t sub_261A018C4(uint64_t a1)
{
  return sub_261A017B4(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

uint64_t sub_261A018D0()
{
  uint64_t v1 = *(void *)v0;
  unsigned __int8 v2 = *(unsigned char *)(v0 + 8);
  sub_261B8FC98();
  sub_261A017B4((uint64_t)v4, v1, v2);
  return sub_261B8FCE8();
}

BOOL sub_261A0191C(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) == 1) {
      return v4 == 1 && v2 == v3;
    }
    return v4 == 2 && *(void *)&v3 == 0;
  }
  else
  {
    return !*(unsigned char *)(a2 + 8) && v2 == v3;
  }
}

uint64_t PillConfiguration.pillColor.getter()
{
  return swift_retain();
}

uint64_t PillConfiguration.hash(into:)()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_261B8FCC8();
  sub_261B8FCC8();
  sub_261B8FCA8();
  if (v1 <= 1) {
    sub_261B8FCC8();
  }
  swift_retain();
  sub_261B8E868();
  swift_release();
  swift_retain();
  sub_261B8E868();
  swift_release();
  return sub_261B8FCA8();
}

uint64_t PillConfiguration.hashValue.getter()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A01AE0()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A01B50()
{
  return sub_261B8FCE8();
}

WorkoutUI::PacerViewConfiguration __swiftcall PacerViewConfiguration.init(secondsAheadOfPacer:workoutViewStyle:)(Swift::Double secondsAheadOfPacer, WorkoutUI::WorkoutViewStyle workoutViewStyle)
{
  char v3 = *(unsigned char *)workoutViewStyle;
  double v4 = round(secondsAheadOfPacer);
  *(Swift::Double *)uint64_t v2 = secondsAheadOfPacer;
  *(double *)(v2 + 8) = v4;
  *(unsigned char *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = 0x4066800000000000;
  result.secondsAheadOfPacerRounded = v4;
  result.secondsAheadOfPacer = secondsAheadOfPacer;
  result.workoutViewStyle = workoutViewStyle;
  return result;
}

uint64_t PacerViewConfiguration.pillConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 16);
  if (*(double *)(v1 + 8) == 0.0)
  {
    if (qword_26A942C08 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_26A9434A8;
    uint64_t v5 = qword_26A942C20;
    swift_retain();
    if (v5 != -1) {
      swift_once();
    }
    *(double *)a1 = *(double *)&qword_26A9434E0 * 0.5;
    if (qword_26A942C28 != -1) {
      swift_once();
    }
    *(double *)(a1 + 8) = *(double *)&qword_26A9434E8 * 0.5;
    *(void *)(a1 + 16) = 0;
    char v6 = 2;
  }
  else
  {
    double v7 = *(double *)v1;
    double v8 = *(double *)(v1 + 24);
    if (*(double *)v1 <= 0.0)
    {
      double v12 = fabs(v7);
      if (v12 >= v8) {
        double v13 = *(double *)(v1 + 24);
      }
      else {
        double v13 = v12;
      }
      if (qword_26A942C10 != -1) {
        swift_once();
      }
      uint64_t v4 = qword_26A9434B0;
      uint64_t v14 = qword_26A942C20;
      swift_retain();
      if (v14 != -1) {
        swift_once();
      }
      double v15 = v13 / v8;
      *(double *)a1 = *(double *)&qword_26A9434E0 * 0.5;
      if (qword_26A942C28 != -1) {
        swift_once();
      }
      char v6 = 0;
      *(double *)(a1 + 8) = *(double *)&qword_26A9434E8 * 0.5;
      *(double *)(a1 + 16) = v15;
    }
    else
    {
      if (v7 >= v8) {
        double v9 = *(double *)(v1 + 24);
      }
      else {
        double v9 = *(double *)v1;
      }
      if (qword_26A942C08 != -1) {
        swift_once();
      }
      uint64_t v4 = qword_26A9434A8;
      uint64_t v10 = qword_26A942C20;
      swift_retain();
      if (v10 != -1) {
        swift_once();
      }
      double v11 = v9 / v8;
      *(double *)a1 = *(double *)&qword_26A9434E0 * 0.5;
      if (qword_26A942C28 != -1) {
        swift_once();
      }
      *(double *)(a1 + 8) = *(double *)&qword_26A9434E8 * 0.5;
      *(double *)(a1 + 16) = v11;
      char v6 = 1;
    }
  }
  *(unsigned char *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v4;
  uint64_t result = sub_261B8E878();
  *(void *)(a1 + 40) = result;
  *(unsigned char *)(a1 + 48) = v3;
  return result;
}

id sub_261A01EC0(uint64_t a1)
{
  return sub_261A01EE0(a1, 192, &qword_26A943538);
}

id sub_261A01ED0(uint64_t a1)
{
  return sub_261A01EE0(a1, 224, &qword_26A943540);
}

id sub_261A01EE0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08780]), sel_init);
  objc_msgSend(v5, sel_setAllowedUnits_, a2);
  id result = objc_msgSend(v5, sel_setZeroFormattingBehavior_, 0x10000);
  *a3 = v5;
  return result;
}

uint64_t sub_261A01F50()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  double v2 = round(fabs(*(double *)v0));
  if (v2 / 60.0 <= 90.0)
  {
    if (qword_26A942C70 != -1) {
      swift_once();
    }
    char v3 = &qword_26A943538;
  }
  else
  {
    if (qword_26A942C78 != -1) {
      swift_once();
    }
    char v3 = &qword_26A943540;
  }
  id v4 = (id)*v3;
  id v5 = objc_msgSend(v4, sel_stringFromTimeInterval_, v2);
  if (!v5)
  {
    uint64_t v7 = 0;
    unint64_t v9 = 0xE000000000000000;
    if (v1) {
      goto LABEL_10;
    }
LABEL_14:
    if (sub_261B8F238())
    {
      unint64_t v10 = 2;
LABEL_18:
      unint64_t v11 = sub_261A28F7C(v10, v7, v9);
      uint64_t v13 = v12;
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();
      uint64_t v7 = MEMORY[0x263E4D030](v11, v13, v15, v17);
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    if ((sub_261B8F238() & 1) == 0) {
      goto LABEL_19;
    }
LABEL_17:
    unint64_t v10 = 1;
    goto LABEL_18;
  }
  char v6 = v5;
  uint64_t v7 = sub_261B8F0F8();
  unint64_t v9 = v8;

  if (!v1) {
    goto LABEL_14;
  }
LABEL_10:
  if ((sub_261B8F238() & 1) != 0 && (sub_261B8F238() & 1) == 0) {
    goto LABEL_17;
  }
LABEL_19:

  return v7;
}

uint64_t PacerViewConfiguration.text.getter@<X0>(uint64_t a1@<X8>)
{
  double v4 = *v1;
  double v3 = v1[1];
  uint64_t v5 = *((void *)v1 + 3);
  if (*((unsigned char *)v1 + 16) != 3)
  {
    LOBYTE(v34) = *((unsigned char *)v1 + 16);
    *((void *)&v34 + 1) = v5;
    *(void *)&long long v33 = sub_261A01F50();
    *((void *)&v33 + 1) = v7;
    sub_261A029C4();
    uint64_t v8 = sub_261B8E3D8();
    uint64_t v10 = v9;
    char v12 = v11;
    double v13 = fabs(v3);
    if (v13 >= 600.0)
    {
      if (v13 >= 3600.0)
      {
        if (qword_26A942C60 == -1)
        {
LABEL_25:
          swift_retain();
          sub_261B8E368();
          swift_release();
          sub_261A02A18(v8, v10, v12 & 1);
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A943548);
          sub_261A02A28();
          uint64_t result = sub_261B8DD68();
          long long v26 = v33;
          long long v27 = v34;
          long long v28 = v35;
          long long v29 = v36;
          long long v30 = v37;
          goto LABEL_26;
        }
      }
      else if (qword_26A942C58 == -1)
      {
        goto LABEL_25;
      }
    }
    else if (qword_26A942C50 == -1)
    {
      goto LABEL_25;
    }
    swift_once();
    goto LABEL_25;
  }
  PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v33);
  swift_release();
  if (qword_26A942C10 != -1) {
    swift_once();
  }
  char v6 = sub_261B8E848();
  swift_release();
  if (v6)
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
  }
  else if (qword_26B416690 != -1)
  {
    swift_once();
  }
  swift_beginAccess();
  id v14 = (id)qword_26B416688;
  uint64_t v15 = sub_261B8AA48();
  uint64_t v17 = v16;

  *(double *)&long long v33 = v4;
  *((double *)&v33 + 1) = v3;
  LOBYTE(v34) = 3;
  *((void *)&v34 + 1) = v5;
  uint64_t v18 = sub_261A01F50();
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v21 = v18 & 0xFFFFFFFFFFFFLL;
  }
  if (v21)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943570);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_261B92AA0;
    *(double *)&long long v33 = v4;
    *((double *)&v33 + 1) = v3;
    LOBYTE(v34) = 3;
    *((void *)&v34 + 1) = v5;
    *(void *)(v22 + 32) = sub_261A01F50();
    *(void *)(v22 + 40) = v23;
    *(void *)(v22 + 48) = v15;
    *(void *)(v22 + 56) = v17;
    *(void *)&long long v33 = v22;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943578);
    sub_2619F8AB8((unint64_t *)&qword_26A943580, &qword_26A943578);
    sub_261B8F048();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v24 = (id)qword_26B416688;
    sub_261B8AA48();
  }
  *(double *)&long long v33 = v4;
  *((double *)&v33 + 1) = v3;
  LOBYTE(v34) = 3;
  *((void *)&v34 + 1) = v5;
  sub_261A01F50();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943548);
  sub_261A02A28();
  uint64_t result = sub_261B8DD68();
  long long v26 = v33;
  long long v27 = v34;
  long long v28 = v35;
  long long v29 = v36;
  long long v30 = v37;
LABEL_26:
  char v31 = v38;
  char v32 = v39;
  *(_OWORD *)a1 = v26;
  *(_OWORD *)(a1 + 16) = v27;
  *(_OWORD *)(a1 + 32) = v28;
  *(_OWORD *)(a1 + 48) = v29;
  *(_OWORD *)(a1 + 64) = v30;
  *(unsigned char *)(a1 + 80) = v31;
  *(unsigned char *)(a1 + 81) = v32;
  return result;
}

uint64_t PacerViewConfiguration.hash(into:)()
{
  return sub_261B8FCC8();
}

uint64_t PacerViewConfiguration.hashValue.getter()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A0285C()
{
  return sub_261B8FCE8();
}

uint64_t _s9WorkoutUI17PillConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  int v3 = *(unsigned __int8 *)(a1 + 48);
  double v4 = *(double *)(a2 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 24);
  int v6 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (v7 != 1)
    {
      uint64_t v7 = 0;
      if (v5 != 2 || v4 != 0.0) {
        return v7;
      }
      goto LABEL_15;
    }
    uint64_t v7 = 0;
    if (v5 != 1) {
      return v7;
    }
  }
  else if (*(unsigned char *)(a2 + 24))
  {
    return v7;
  }
  if (*(double *)(a1 + 16) != v4) {
    return v7;
  }
LABEL_15:
  if ((sub_261B8E848() & 1) == 0) {
    return 0;
  }
  return sub_261B8E848() & (v3 == v6);
}

unint64_t sub_261A029C4()
{
  unint64_t result = qword_26B4164D0;
  if (!qword_26B4164D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B4164D0);
  }
  return result;
}

uint64_t sub_261A02A18(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_261A02A28()
{
  unint64_t result = qword_26A943550;
  if (!qword_26A943550)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943548);
    sub_261A02AC8();
    sub_2619F8AB8((unint64_t *)&qword_26A943560, &qword_26A943568);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943550);
  }
  return result;
}

unint64_t sub_261A02AC8()
{
  unint64_t result = qword_26A943558;
  if (!qword_26A943558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943558);
  }
  return result;
}

BOOL _s9WorkoutUI22PacerViewConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16)
      && *(double *)(a1 + 24) == *(double *)(a2 + 24);
}

unint64_t sub_261A02B64()
{
  unint64_t result = qword_26A943588;
  if (!qword_26A943588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943588);
  }
  return result;
}

unint64_t sub_261A02BBC()
{
  unint64_t result = qword_26A943590;
  if (!qword_26A943590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943590);
  }
  return result;
}

uint64_t destroy for PillConfiguration()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PillConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PillConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PillConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PillConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PillConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PillConfiguration()
{
  return &type metadata for PillConfiguration;
}

uint64_t getEnumTagSinglePayload for PacerViewConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 248);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 9;
  int v5 = v3 - 9;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PacerViewConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 248;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PacerViewConfiguration()
{
  return &type metadata for PacerViewConfiguration;
}

unint64_t sub_261A02EEC()
{
  unint64_t result = qword_26A943598;
  if (!qword_26A943598)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9435A0);
    sub_261A02A28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943598);
  }
  return result;
}

uint64_t destroy for BarConfiguration()
{
  swift_release();
  return swift_release();
}

void *_s9WorkoutUI16BarConfigurationVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for BarConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for BarConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for BarConfiguration()
{
  return &type metadata for BarConfiguration;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PillConfiguration.PillPosition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PillConfiguration.PillPosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_261A03148(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_261A03164(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PillConfiguration.PillPosition()
{
  return &type metadata for PillConfiguration.PillPosition;
}

unint64_t sub_261A03190()
{
  unint64_t result = qword_26A9435A8;
  if (!qword_26A9435A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9435A8);
  }
  return result;
}

unint64_t sub_261A031E8()
{
  unint64_t result = qword_26A9435B0;
  if (!qword_26A9435B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9435B0);
  }
  return result;
}

uint64_t sub_261A0323C()
{
  uint64_t v0 = sub_261B8E0A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unsigned int v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v4 - 8);
  int v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  FIUICurrentLanguageRequiresTallScript();
  sub_261B8E168();
  uint64_t v7 = *MEMORY[0x263F1A610];
  uint64_t v8 = sub_261B8E118();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v6, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  sub_261B8E188();
  sub_261A010F8((uint64_t)v6);
  sub_261B8E088();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F1A5E0], v0);
  uint64_t v10 = sub_261B8E0B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v10;
}

void destroy for WorkoutNotificationMilestoneView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t initializeWithCopy for WorkoutNotificationMilestoneView(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  id v5 = v3;
  return a1;
}

void *assignWithCopy for WorkoutNotificationMilestoneView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = (void *)a2[1];
  id v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for WorkoutNotificationMilestoneView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutNotificationMilestoneView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutNotificationMilestoneView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutNotificationMilestoneView()
{
  return &type metadata for WorkoutNotificationMilestoneView;
}

uint64_t sub_261A036B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A036D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435B8);
  MEMORY[0x270FA5388](v3 - 8);
  long long v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435C0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435C8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = v1[3];
  long long v42 = v1[2];
  long long v43 = v13;
  uint64_t v44 = *((void *)v1 + 8);
  long long v14 = v1[1];
  long long v40 = *v1;
  long long v41 = v14;
  uint64_t v15 = sub_261B8DBF8();
  uint64_t v16 = *((void *)&v41 + 1);
  *(void *)long long v5 = v15;
  *((void *)v5 + 1) = v16;
  v5[16] = 0;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435D0);
  sub_261A03978((uint64_t)&v40, (uint64_t)&v5[*(int *)(v17 + 44)]);
  char v18 = sub_261B8DFC8();
  sub_261B8D358();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_2619F86F0((uint64_t)v5, (uint64_t)v9, &qword_26A9435B8);
  long long v27 = &v9[*(int *)(v7 + 44)];
  char *v27 = v18;
  *((void *)v27 + 1) = v20;
  *((void *)v27 + 2) = v22;
  *((void *)v27 + 3) = v24;
  *((void *)v27 + 4) = v26;
  v27[40] = 0;
  sub_2619F8754((uint64_t)v5, &qword_26A9435B8);
  LOBYTE(v5) = sub_261B8DFD8();
  unsigned __int8 v28 = sub_261B8DFF8();
  char v29 = sub_261B8DFE8();
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v5) {
    char v29 = sub_261B8DFE8();
  }
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v28) {
    char v29 = sub_261B8DFE8();
  }
  sub_261B8D358();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  sub_2619F86F0((uint64_t)v9, (uint64_t)v12, &qword_26A9435C0);
  char v38 = &v12[*(int *)(v10 + 36)];
  char *v38 = v29;
  *((void *)v38 + 1) = v31;
  *((void *)v38 + 2) = v33;
  *((void *)v38 + 3) = v35;
  *((void *)v38 + 4) = v37;
  v38[40] = 0;
  sub_2619F8754((uint64_t)v9, &qword_26A9435C0);
  return sub_261A03D40((uint64_t)v12, a1);
}

uint64_t sub_261A03978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435D8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v23 - v8;
  unint64_t v24 = *(void *)a1;
  unint64_t v10 = v24;
  unint64_t v11 = v24 >> 62;
  if (!(v24 >> 62))
  {
    uint64_t v12 = *(void **)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_3;
    }
LABEL_10:
    sub_261A03DA8((uint64_t)&v24);
    long long v14 = 0;
    if (!v11)
    {
LABEL_7:
      uint64_t v16 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v16 < 2)
      {
LABEL_8:
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435E0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
LABEL_13:
        sub_2619F86F0((uint64_t)v9, (uint64_t)v7, &qword_26A9435D8);
        *(void *)a2 = v12;
        *(void *)(a2 + 8) = v14;
        *(void *)(a2 + 16) = 0;
        *(void *)(a2 + 24) = 0;
        *(unsigned char *)(a2 + 32) = 1;
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435E8);
        sub_2619F86F0((uint64_t)v7, a2 + *(int *)(v22 + 64), &qword_26A9435D8);
        sub_261A03DD4(v12, v14);
        sub_2619F8754((uint64_t)v9, &qword_26A9435D8);
        sub_2619F8754((uint64_t)v7, &qword_26A9435D8);
        return sub_261A03E2C((uint64_t)v12, v14);
      }
LABEL_12:
      v23[1] = 1;
      v23[2] = v16;
      swift_getKeyPath();
      uint64_t v18 = swift_allocObject();
      long long v19 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v18 + 48) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v18 + 64) = v19;
      *(void *)(v18 + 80) = *(void *)(a1 + 64);
      long long v20 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(v18 + 32) = v20;
      sub_261A03EBC(a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435F0);
      sub_261A03EF0();
      sub_261A03FC0();
      sub_261B8EBE8();
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435E0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 0, 1, v21);
      goto LABEL_13;
    }
LABEL_11:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_261B8F9D8();
    sub_261A03DA8((uint64_t)&v24);
    if (v16 < 2) {
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F9D8();
  uint64_t v12 = (void *)result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v10 & 0xC000000000000001) != 0)
  {
    uint64_t v12 = (void *)MEMORY[0x263E4D7B0](0, v10);
LABEL_6:
    sub_261A03DA8((uint64_t)&v24);
    long long v14 = *(void **)(a1 + 8);
    id v15 = v14;
    if (!v11) {
      goto LABEL_7;
    }
    goto LABEL_11;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v12 = *(void **)(v10 + 32);
    swift_retain();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

unint64_t sub_261A03CBC@<X0>(id *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t result = (unint64_t)*a1;
  uint64_t v6 = *a2;
  if ((v6 & 0xC000000000000001) != 0)
  {
    uint64_t v7 = MEMORY[0x263E4D7B0](result);
    goto LABEL_5;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (result >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v7 = swift_retain();
LABEL_5:
  uint64_t v8 = (void *)a2[1];
  *a3 = v7;
  a3[1] = (uint64_t)v8;
  a3[2] = 0;
  return (unint64_t)v8;
}

uint64_t sub_261A03D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A03DA8(uint64_t a1)
{
  return a1;
}

id sub_261A03DD4(id result, void *a2)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return a2;
  }
  return result;
}

uint64_t sub_261A03E2C(uint64_t result, void *a2)
{
  if (result)
  {
    swift_release();

    return swift_release();
  }
  return result;
}

uint64_t sub_261A03E74()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

unint64_t sub_261A03EB4@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_261A03CBC(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_261A03EBC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

unint64_t sub_261A03EF0()
{
  unint64_t result = qword_26A9435F8;
  if (!qword_26A9435F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9435F0);
    sub_261A03F6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9435F8);
  }
  return result;
}

unint64_t sub_261A03F6C()
{
  unint64_t result = qword_26A943600;
  if (!qword_26A943600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943600);
  }
  return result;
}

unint64_t sub_261A03FC0()
{
  unint64_t result = qword_26A943608;
  if (!qword_26A943608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943608);
  }
  return result;
}

uint64_t sub_261A04014()
{
  return sub_261A04078(&qword_26A943610, &qword_26A9435C8, (void (*)(void))sub_261A04050);
}

uint64_t sub_261A04050()
{
  return sub_261A04078(&qword_26A943618, &qword_26A9435C0, (void (*)(void))sub_261A040F8);
}

uint64_t sub_261A04078(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A040F8()
{
  unint64_t result = qword_26A943620;
  if (!qword_26A943620)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9435B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943620);
  }
  return result;
}

uint64_t DependenciesWrapper.dependencies.getter()
{
  return swift_retain();
}

id DependenciesWrapper.__allocating_init(dependencies:)(uint64_t a1)
{
  id v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___SMDependencies_dependencies] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id DependenciesWrapper.init(dependencies:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___SMDependencies_dependencies] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DependenciesWrapper();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for DependenciesWrapper()
{
  return self;
}

id DependenciesWrapper.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DependenciesWrapper.init()()
{
}

id DependenciesWrapper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DependenciesWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DependenciesWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DependenciesWrapper);
}

uint64_t dispatch thunk of DependenciesWrapper.__allocating_init(dependencies:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

id PortableEnum<>.bridgedRawValue()(unsigned __int8 a1, uint64_t a2, char a3)
{
  if (a3) {
    return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_261A0436C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261A043E0(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WorkoutSummaryEffortManager()
{
  return self;
}

uint64_t sub_261A043E0(uint64_t a1)
{
  return a1;
}

void sub_261A04408(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_261ACA28C(0, v1, 0);
    uint64_t v3 = sub_261A0EAA0(v2);
    int v5 = v4;
    uint64_t v6 = v2 + 64;
    int64_t v27 = v1;
    id v28 = self;
    uint64_t v7 = 0;
    uint64_t v26 = v2 + 80;
    while ((v3 & 0x8000000000000000) == 0 && v3 < 1 << *(unsigned char *)(v2 + 32))
    {
      unint64_t v11 = (unint64_t)v3 >> 6;
      if ((*(void *)(v6 + 8 * ((unint64_t)v3 >> 6)) & (1 << v3)) == 0) {
        goto LABEL_24;
      }
      if (*(_DWORD *)(v2 + 36) != v5) {
        goto LABEL_25;
      }
      uint64_t v29 = v7;
      uint64_t v12 = v2;
      uint64_t v13 = *(void *)(*(void *)(v2 + 48) + 8 * v3);
      long long v32 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v14 = objc_msgSend(v28, sel__stringFromWorkoutActivityType_, v13);
      if (!v14) {
        goto LABEL_29;
      }
      id v15 = v14;
      uint64_t v16 = sub_261B8F0F8();
      uint64_t v30 = v17;
      uint64_t v31 = v16;

      unint64_t v19 = *(void *)(v33 + 16);
      unint64_t v18 = *(void *)(v33 + 24);
      if (v19 >= v18 >> 1) {
        sub_261ACA28C(v18 > 1, v19 + 1, 1);
      }
      *(void *)(v33 + 16) = v19 + 1;
      uint64_t v20 = v33 + 32 * v19;
      *(void *)(v20 + 32) = v31;
      *(void *)(v20 + 40) = v30;
      *(_OWORD *)(v20 + 48) = v32;
      int64_t v8 = 1 << *(unsigned char *)(v12 + 32);
      if (v3 >= v8) {
        goto LABEL_26;
      }
      uint64_t v21 = *(void *)(v6 + 8 * v11);
      if ((v21 & (1 << v3)) == 0) {
        goto LABEL_27;
      }
      uint64_t v2 = v12;
      if (*(_DWORD *)(v12 + 36) != v5) {
        goto LABEL_28;
      }
      unint64_t v22 = v21 & (-2 << (v3 & 0x3F));
      if (v22)
      {
        int64_t v8 = __clz(__rbit64(v22)) | v3 & 0xFFFFFFFFFFFFFFC0;
        int64_t v9 = v27;
        uint64_t v10 = v29;
      }
      else
      {
        unint64_t v23 = v11 + 1;
        unint64_t v24 = (unint64_t)(v8 + 63) >> 6;
        int64_t v9 = v27;
        uint64_t v10 = v29;
        if (v11 + 1 < v24)
        {
          unint64_t v25 = *(void *)(v6 + 8 * v23);
          if (v25)
          {
LABEL_21:
            int64_t v8 = __clz(__rbit64(v25)) + (v23 << 6);
          }
          else
          {
            while (v24 - 2 != v11)
            {
              unint64_t v25 = *(void *)(v26 + 8 * v11++);
              if (v25)
              {
                unint64_t v23 = v11 + 1;
                goto LABEL_21;
              }
            }
          }
        }
      }
      uint64_t v7 = v10 + 1;
      uint64_t v3 = v8;
      if (v7 == v9) {
        return;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
}

uint64_t DemoScenarioProfile.allDayValues.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DemoScenarioProfile.allWorkoutValues.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DemoScenarioProfile.workoutLoadValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DemoScenarioProfile.workouts.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall DemoScenarioProfile.init(allDayValues:allWorkoutValues:workoutLoadValues:workouts:)(WorkoutUI::DemoScenarioProfile *__return_ptr retstr, WorkoutUI::DemoTrainingLoadValues allDayValues, WorkoutUI::DemoTrainingLoadValues allWorkoutValues, Swift::OpaquePointer workoutLoadValues, Swift::OpaquePointer workouts)
{
  rawValue = allWorkoutValues.chronicValues._rawValue;
  WorkoutUI::DemoTrainingLoadValues v12 = *(WorkoutUI::DemoTrainingLoadValues *)allDayValues.chronicValues._rawValue;
  WorkoutUI::DemoTrainingLoadValues v13 = *(WorkoutUI::DemoTrainingLoadValues *)allDayValues.acuteValues._rawValue;
  sub_261A04408((uint64_t)allWorkoutValues.acuteValues._rawValue);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (*(void *)(v8 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943630);
    uint64_t v9 = sub_261B8FA08();
  }
  else
  {
    uint64_t v9 = MEMORY[0x263F8EE80];
  }
  id v14 = (void *)v9;
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_261A0C1F8(v10, 1, &v14);
  swift_bridgeObjectRelease();
  unint64_t v11 = v14;
  retstr->allDayValues = v13;
  retstr->allWorkoutValues = v12;
  retstr->workoutLoadValues._rawValue = v11;
  retstr->workouts._rawValue = rawValue;
}

unint64_t sub_261A047FC()
{
  unint64_t result = 0x61567961446C6C61;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x7374756F6B726F77;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_261A048A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_261A0EB28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_261A048C8()
{
  return 0;
}

void sub_261A048D4(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_261A048E0(uint64_t a1)
{
  unint64_t v2 = sub_261A0C648();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261A0491C(uint64_t a1)
{
  unint64_t v2 = sub_261A0C648();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DemoScenarioProfile.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943638);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = v3[1];
  uint64_t v9 = *((void *)v3 + 5);
  uint64_t v13 = *((void *)v3 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_261A0C648();
  sub_261B8FD18();
  long long v15 = *v3;
  char v16 = 0;
  sub_261A0C69C();
  sub_261B8FB58();
  if (!v2)
  {
    uint64_t v10 = v13;
    long long v15 = v14;
    char v16 = 1;
    sub_261B8FB58();
    *(void *)&long long v15 = v10;
    char v16 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943650);
    sub_261A0C798(&qword_26A943658, (void (*)(void))sub_261A0C69C);
    sub_261B8FB58();
    *(void *)&long long v15 = v9;
    char v16 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943660);
    sub_261A0C814(&qword_26A943668, (void (*)(void))sub_261A0C6F0);
    sub_261B8FB58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DemoScenarioProfile.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943678);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_261A0C648();
  sub_261B8FD08();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  unint64_t v25 = a2;
  char v28 = 0;
  sub_261A0C744();
  sub_261B8FAC8();
  uint64_t v9 = v26;
  uint64_t v10 = v27;
  char v28 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_261B8FAC8();
  uint64_t v22 = v10;
  uint64_t v23 = v9;
  uint64_t v11 = v26;
  uint64_t v12 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943650);
  char v28 = 2;
  sub_261A0C798(&qword_26A943688, (void (*)(void))sub_261A0C744);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_261B8FAC8();
  uint64_t v24 = v12;
  uint64_t v13 = v11;
  uint64_t v14 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943660);
  char v28 = 3;
  sub_261A0C814(&qword_26A943690, (void (*)(void))sub_261A0C884);
  swift_bridgeObjectRetain();
  sub_261B8FAC8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v26;
  uint64_t v17 = v23;
  swift_bridgeObjectRetain();
  uint64_t v18 = v22;
  swift_bridgeObjectRetain();
  uint64_t v19 = v13;
  swift_bridgeObjectRetain();
  uint64_t v20 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v25;
  void *v25 = v17;
  v21[1] = v18;
  v21[2] = v19;
  v21[3] = v20;
  v21[4] = v14;
  v21[5] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_261A050BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DemoScenarioProfile.init(from:)(a1, a2);
}

uint64_t sub_261A050D4(void *a1)
{
  return DemoScenarioProfile.encode(to:)(a1);
}

uint64_t DemoTrainingLoadValues.acuteValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DemoTrainingLoadValues.chronicValues.getter()
{
  return swift_bridgeObjectRetain();
}

WorkoutUI::DemoTrainingLoadValues __swiftcall DemoTrainingLoadValues.init(acuteValues:chronicValues:)(Swift::OpaquePointer acuteValues, Swift::OpaquePointer chronicValues)
{
  v2->_rawValue = acuteValues._rawValue;
  v2[1]._rawValue = chronicValues._rawValue;
  result.chronicValues = chronicValues;
  result.acuteValues = acuteValues;
  return result;
}

WorkoutUI::DemoTrainingLoadValues_optional __swiftcall DemoTrainingLoadValues.init(summaries:)(Swift::OpaquePointer summaries)
{
  uint64_t v3 = v1;
  uint64_t v54 = sub_261B8CA78();
  uint64_t v51 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v5 = (void **)((char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = sub_261B8CA58();
  uint64_t v6 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_261B8CB38();
  uint64_t v9 = *(void *)(v68 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v68);
  uint64_t v58 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v50 - v12;
  uint64_t v14 = sub_261B8CAD8();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  v53 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v50 - v19;
  uint64_t v21 = *((void *)summaries._rawValue + 2);
  if (v21)
  {
    uint64_t v59 = v17;
    uint64_t v50 = v3;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
    uint64_t v22 = v18 + 16;
    rawValue = summaries._rawValue;
    unint64_t v25 = (char *)summaries._rawValue
        + ((*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64));
    uint64_t v65 = *(void *)(v22 + 56);
    unint64_t v66 = v23;
    uint64_t v56 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v67 = v22;
    uint64_t v63 = (void (**)(char *, uint64_t))(v22 - 8);
    uint64_t v64 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v52 = rawValue;
    swift_bridgeObjectRetain();
    uint64_t v60 = (void *)MEMORY[0x263F8EE78];
    uint64_t v26 = v25;
    uint64_t v27 = v21;
    uint64_t v55 = v5;
    uint64_t v28 = v59;
    do
    {
      v66(v20, v26, v28);
      sub_261B8CA88();
      sub_261B8CB18();
      uint64_t v62 = *v64;
      v62(v13, v68);
      uint64_t v29 = (void *)sub_261B8CA48();
      (*v56)(v8, v57);
      if (v29)
      {
        objc_msgSend(v29, sel__value);
        uint64_t v31 = v30;

        uint64_t v61 = *v63;
        v61(v20, v28);
        long long v32 = v60;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v32 = sub_261A0AF84(0, v32[2] + 1, 1, v32);
        }
        unint64_t v34 = v32[2];
        unint64_t v33 = v32[3];
        uint64_t v60 = v32;
        if (v34 >= v33 >> 1) {
          uint64_t v60 = sub_261A0AF84((void *)(v33 > 1), v34 + 1, 1, v60);
        }
        uint64_t v35 = v60;
        v60[2] = v34 + 1;
        v35[v34 + 4] = v31;
        uint64_t v5 = v55;
      }
      else
      {
        uint64_t v61 = *v63;
        v61(v20, v28);
      }
      v26 += v65;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    uint64_t v36 = (uint64_t (**)(void *, uint64_t))(v51 + 88);
    LODWORD(v57) = *MEMORY[0x263F42DD8];
    uint64_t v55 = (void *)(v51 + 96);
    uint64_t v56 = (void (**)(char *, uint64_t))(v51 + 8);
    swift_bridgeObjectRetain();
    uint64_t v37 = (void *)MEMORY[0x263F8EE78];
    char v39 = v53;
    uint64_t v38 = v54;
    long long v40 = v58;
    uint64_t v41 = v59;
    do
    {
      v66(v39, v25, v41);
      sub_261B8CA88();
      sub_261B8CB28();
      v62(v40, v68);
      int v42 = (*v36)(v5, v38);
      if (v42 == v57)
      {
        ((void (*)(void *, uint64_t))*v55)(v5, v38);
        long long v43 = (void (*)(void, void))*v5;
        v61(v39, v41);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v37 = sub_261A0AF84(0, v37[2] + 1, 1, v37);
        }
        unint64_t v45 = v37[2];
        unint64_t v44 = v37[3];
        if (v45 >= v44 >> 1) {
          uint64_t v37 = sub_261A0AF84((void *)(v44 > 1), v45 + 1, 1, v37);
        }
        v37[2] = v45 + 1;
        v37[v45 + 4] = v43;
        char v39 = v53;
        uint64_t v38 = v54;
      }
      else
      {
        (*v56)((char *)v5, v38);
        v61(v39, v41);
      }
      v25 += v65;
      --v21;
    }
    while (v21);
    uint64_t v46 = (void *)swift_bridgeObjectRelease_n();
    uint64_t v48 = v60;
    uint64_t v3 = v50;
  }
  else
  {
    uint64_t v46 = (void *)swift_bridgeObjectRelease();
    uint64_t v37 = (void *)MEMORY[0x263F8EE78];
    uint64_t v48 = (void *)MEMORY[0x263F8EE78];
  }
  if (v48[2] == 29 && v37[2] == 29)
  {
    *uint64_t v3 = v48;
    v3[1] = v37;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v46 = (void *)swift_bridgeObjectRelease();
    *uint64_t v3 = 0;
    v3[1] = 0;
  }
  result.value.chronicValues._rawValue = v47;
  result.value.acuteValues._rawValue = v46;
  return result;
}

uint64_t sub_261A05760()
{
  if (*v0) {
    return 0x5663696E6F726863;
  }
  else {
    return 0x6C61566574756361;
  }
}

uint64_t sub_261A057B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_261A0EED0(a1, a2);
  *a3 = result;
  return result;
}

void sub_261A057D8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_261A057E4(uint64_t a1)
{
  unint64_t v2 = sub_261A0C8D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261A05820(uint64_t a1)
{
  unint64_t v2 = sub_261A0C8D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DemoTrainingLoadValues.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9436A0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_261A0C8D8();
  sub_261B8FD18();
  uint64_t v12 = v8;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9436B0);
  sub_261A0C92C(&qword_26A9436B8);
  sub_261B8FB58();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    sub_261B8FB58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DemoTrainingLoadValues.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9436C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_261A0C8D8();
  sub_261B8FD08();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9436B0);
  char v14 = 0;
  sub_261A0C92C(&qword_26A9436C8);
  sub_261B8FAC8();
  uint64_t v9 = v15;
  char v14 = 1;
  swift_bridgeObjectRetain();
  sub_261B8FAC8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v15;
  char v11 = v13;
  *uint64_t v13 = v9;
  v11[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_261A05C60@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DemoTrainingLoadValues.init(from:)(a1, a2);
}

uint64_t sub_261A05C78(void *a1)
{
  return DemoTrainingLoadValues.encode(to:)(a1);
}

double DemoQuantity.value.getter()
{
  return *(double *)v0;
}

uint64_t DemoQuantity.unit.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

WorkoutUI::DemoQuantity __swiftcall DemoQuantity.init(hkQuantity:)(HKQuantity hkQuantity)
{
  uint64_t v3 = v1;
  id v4 = [(objc_class *)hkQuantity.super.isa _unit];
  [(objc_class *)hkQuantity.super.isa doubleValueForUnit:v4];
  uint64_t v6 = v5;

  id v7 = [(objc_class *)hkQuantity.super.isa _unit];
  id v8 = objc_msgSend(v7, sel_unitString);

  uint64_t v9 = sub_261B8F0F8();
  uint64_t v11 = v10;

  *uint64_t v3 = v6;
  v3[1] = v9;
  v3[2] = v11;
  result.value = v14;
  result.unit._object = v13;
  result.unit._countAndFlagsBits = v12;
  return result;
}

id DemoQuantity.hkQuantity.getter()
{
  double v1 = *v0;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(self, sel_unitFromString_, v2);

  id v4 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v3, v1);
  return v4;
}

BOOL sub_261A05E38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s9WorkoutUI06GuidedA10PickerItemV8TileTypeO9hashValueSivg_0()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A05E98()
{
  return sub_261B8FCA8();
}

uint64_t sub_261A05EC4()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A05F08()
{
  if (*v0) {
    return 1953066613;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_261A05F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_261A0F000(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_261A05F60(uint64_t a1)
{
  unint64_t v2 = sub_261A0C990();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261A05F9C(uint64_t a1)
{
  unint64_t v2 = sub_261A0C990();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DemoQuantity.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9436D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_261A0C990();
  sub_261B8FD18();
  char v11 = 0;
  sub_261B8FB48();
  if (!v2)
  {
    char v10 = 1;
    sub_261B8FB38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DemoQuantity.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9436E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_261A0C990();
  sub_261B8FD08();
  if (!v2)
  {
    v15[15] = 0;
    sub_261B8FAB8();
    uint64_t v10 = v9;
    v15[14] = 1;
    uint64_t v12 = sub_261B8FAA8();
    uint64_t v14 = v13;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_261A06304@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DemoQuantity.init(from:)(a1, a2);
}

uint64_t sub_261A0631C(void *a1)
{
  return DemoQuantity.encode(to:)(a1);
}

uint64_t DemoGoal.goalType.getter()
{
  return qword_261B939D8[*(char *)(v0 + 24)];
}

id DemoGoal.hkQuantity.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  unsigned __int8 v4 = *(unsigned char *)(v0 + 24);
  id v5 = 0;
  switch(v4)
  {
    case 3u:
      return v5;
    default:
      double v6 = *(double *)v0;
      swift_bridgeObjectRetain();
      uint64_t v7 = (void *)sub_261B8F0B8();
      id v8 = objc_msgSend(self, sel_unitFromString_, v7);

      id v5 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v8, v6);
      sub_261A0C9E4(v1, v2, v3, v4);
      break;
  }
  return v5;
}

uint64_t sub_261A064D4()
{
  uint64_t result = 1852141679;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65636E6174736964;
      break;
    case 2:
      uint64_t result = 1701669236;
      break;
    case 3:
      uint64_t result = 0x796772656E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_261A0654C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_261A0F0DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_261A06574(uint64_t a1)
{
  unint64_t v2 = sub_261A0C9FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261A065B0(uint64_t a1)
{
  unint64_t v2 = sub_261A0C9FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_261A065EC()
{
  return 1;
}

uint64_t sub_261A065FC()
{
  return 12383;
}

void sub_261A0660C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_261A06618(uint64_t a1)
{
  unint64_t v2 = sub_261A0CB4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261A06654(uint64_t a1)
{
  unint64_t v2 = sub_261A0CB4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_261A06690(uint64_t a1)
{
  unint64_t v2 = sub_261A0CA50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261A066CC(uint64_t a1)
{
  unint64_t v2 = sub_261A0CA50();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_261A06708()
{
  return 0;
}

uint64_t sub_261A06714@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_261A06744(uint64_t a1)
{
  unint64_t v2 = sub_261A0CBA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261A06780(uint64_t a1)
{
  unint64_t v2 = sub_261A0CBA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_261A067BC()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A06800()
{
  return sub_261B8FCA8();
}

uint64_t sub_261A06828()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A06868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_261B8FBA8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_261A068E8(uint64_t a1)
{
  unint64_t v2 = sub_261A0CAF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261A06924(uint64_t a1)
{
  unint64_t v2 = sub_261A0CAF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DemoGoal.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9436E8);
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  MEMORY[0x270FA5388](v3);
  long long v32 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9436F0);
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v30 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v28 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9436F8);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943700);
  uint64_t v31 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943708);
  uint64_t v38 = *(void *)(v13 - 8);
  uint64_t v39 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v1[1];
  uint64_t v35 = *v1;
  uint64_t v36 = v16;
  uint64_t v37 = v1[2];
  uint64_t v17 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_261A0C9FC();
  sub_261B8FD18();
  switch(v17)
  {
    case 1:
      LOBYTE(v40) = 2;
      sub_261A0CAF8();
      uint64_t v20 = v28;
      uint64_t v18 = v39;
      sub_261B8FAE8();
      uint64_t v40 = v35;
      uint64_t v41 = v36;
      uint64_t v42 = v37;
      sub_261A0CAA4();
      uint64_t v21 = v30;
      sub_261B8FB58();
      uint64_t v22 = v29;
      goto LABEL_6;
    case 2:
      LOBYTE(v40) = 3;
      sub_261A0CA50();
      uint64_t v20 = v32;
      uint64_t v18 = v39;
      sub_261B8FAE8();
      uint64_t v40 = v35;
      uint64_t v41 = v36;
      uint64_t v42 = v37;
      sub_261A0CAA4();
      uint64_t v21 = v34;
      sub_261B8FB58();
      uint64_t v22 = v33;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v15, v18);
    case 3:
      LOBYTE(v40) = 0;
      sub_261A0CBA0();
      uint64_t v23 = v39;
      sub_261B8FAE8();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v15, v23);
    default:
      LOBYTE(v40) = 1;
      sub_261A0CB4C();
      uint64_t v18 = v39;
      sub_261B8FAE8();
      uint64_t v40 = v35;
      uint64_t v41 = v36;
      uint64_t v42 = v37;
      sub_261A0CAA4();
      uint64_t v19 = v27;
      sub_261B8FB58();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v19);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v15, v18);
  }
}

uint64_t DemoGoal.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943740);
  uint64_t v50 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v52 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943748);
  uint64_t v49 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v51 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943750);
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943758);
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943760);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v54 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_261A0C9FC();
  uint64_t v16 = v57;
  sub_261B8FD08();
  if (v16) {
    goto LABEL_13;
  }
  uint64_t v17 = v10;
  uint64_t v42 = v8;
  uint64_t v43 = 0;
  uint64_t v18 = v7;
  uint64_t v19 = v51;
  uint64_t v20 = v52;
  uint64_t v57 = v12;
  uint64_t v21 = v53;
  uint64_t v22 = sub_261B8FAD8();
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v27 = sub_261B8F918();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943768);
    void *v29 = &type metadata for DemoGoal;
    sub_261B8FA58();
    sub_261B8F908();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v11);
LABEL_13:
    uint64_t v37 = (uint64_t)v54;
    return __swift_destroy_boxed_opaque_existential_1(v37);
  }
  switch(*(unsigned char *)(v22 + 32))
  {
    case 1:
      LOBYTE(v55) = 1;
      sub_261A0CB4C();
      uint64_t v30 = v43;
      sub_261B8FA48();
      if (v30) {
        goto LABEL_12;
      }
      sub_261A0CBF4();
      uint64_t v31 = v47;
      sub_261B8FAC8();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v18, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v11);
      char v26 = 0;
      long long v25 = v55;
      uint64_t v24 = v56;
      goto LABEL_16;
    case 2:
      LOBYTE(v55) = 2;
      sub_261A0CAF8();
      long long v32 = v19;
      uint64_t v33 = v43;
      sub_261B8FA48();
      if (v33) {
        goto LABEL_12;
      }
      sub_261A0CBF4();
      uint64_t v34 = v45;
      sub_261B8FAC8();
      uint64_t v35 = v57;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v11);
      long long v25 = v55;
      uint64_t v24 = v56;
      char v26 = 1;
      goto LABEL_16;
    case 3:
      LOBYTE(v55) = 3;
      sub_261A0CA50();
      uint64_t v36 = v43;
      sub_261B8FA48();
      if (v36) {
        goto LABEL_12;
      }
      sub_261A0CBF4();
      uint64_t v39 = v48;
      sub_261B8FAC8();
      uint64_t v40 = v57;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v20, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v11);
      long long v25 = v55;
      uint64_t v24 = v56;
      char v26 = 2;
      goto LABEL_16;
    default:
      LOBYTE(v55) = 0;
      sub_261A0CBA0();
      uint64_t v23 = v43;
      sub_261B8FA48();
      if (v23)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v11);
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v11);
      uint64_t v24 = 0;
      long long v25 = 0uLL;
      char v26 = 3;
LABEL_16:
      uint64_t v37 = (uint64_t)v54;
      *(_OWORD *)uint64_t v21 = v25;
      *(void *)(v21 + 16) = v24;
      *(unsigned char *)(v21 + 24) = v26;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

uint64_t sub_261A07648@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DemoGoal.init(from:)(a1, a2);
}

uint64_t sub_261A07660(void *a1)
{
  return DemoGoal.encode(to:)(a1);
}

uint64_t DemoWorkout.activityType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double DemoWorkout.startDateFromNow.getter()
{
  return *(double *)(v0 + 16);
}

double DemoWorkout.duration.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t DemoWorkout.isIndoor.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t DemoWorkout.isPoolSwim.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t DemoWorkout.effort.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t DemoWorkout.totalActiveEnergyBurned.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 56);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t DemoWorkout.totalBasalEnergyBurned.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 80);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t DemoWorkout.totalDistance.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 104);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t DemoWorkout.averageHeartRate.getter()
{
  return *(void *)(v0 + 128);
}

uint64_t DemoWorkout.minHeartRate.getter()
{
  return *(void *)(v0 + 144);
}

uint64_t DemoWorkout.maxHeartRate.getter()
{
  return *(void *)(v0 + 160);
}

uint64_t DemoWorkout.goal.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 184);
  uint64_t v4 = *(void *)(v1 + 192);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 200);
  *(unsigned char *)(a1 + 24) = v5;
  return sub_261A0CC48(v2, v3, v4, v5);
}

uint64_t DemoWorkout.init(activityType:startDateFromNow:duration:isIndoor:isPoolSwim:effort:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:averageHeartRate:minHeartRate:maxHeartRate:goal:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, unsigned __int8 a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, unsigned __int8 a17, uint64_t a18)
{
  uint64_t v112 = a8;
  uint64_t v113 = a7;
  int v104 = a5;
  int v105 = a2;
  int v106 = a3;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943778);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v102 = (uint64_t)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943780);
  uint64_t v103 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v93 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943788);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v30 = (char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  long long v32 = (char *)&v92 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943790);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v97 = (char *)&v92 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v92 - v37;
  uint64_t v39 = *(void *)(a18 + 8);
  uint64_t v107 = *(void *)a18;
  uint64_t v108 = v39;
  uint64_t v109 = *(void *)(a18 + 16);
  int v110 = *(unsigned __int8 *)(a18 + 24);
  id v40 = objc_msgSend(self, sel__stringFromWorkoutActivityType_, a1);
  if (v40)
  {
    uint64_t v41 = v40;
    uint64_t v99 = sub_261B8F0F8();
    uint64_t v98 = v42;

    uint64_t v100 = a6;
    sub_2619F86F0(a6, (uint64_t)v32, &qword_26A943788);
    uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
    int v44 = v43(v32, 1, v33);
    uint64_t v101 = a4;
    if (v44 == 1)
    {
      sub_2619F8754((uint64_t)v32, &qword_26A943788);
      uint64_t v95 = 0;
      uint64_t v94 = 0;
      uint64_t v45 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v38, v32, v33);
      uint64_t v46 = (void *)sub_261B8A7B8();
      id v47 = objc_msgSend(v46, sel__unit);
      objc_msgSend(v46, sel_doubleValueForUnit_, v47);
      uint64_t v45 = v48;

      id v49 = objc_msgSend(v46, sel__unit);
      id v50 = objc_msgSend(v49, sel_unitString);

      uint64_t v95 = sub_261B8F0F8();
      uint64_t v94 = v51;

      (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v33);
    }
    sub_2619F86F0(v113, (uint64_t)v30, &qword_26A943788);
    if (v43(v30, 1, v33) == 1)
    {
      sub_2619F8754((uint64_t)v30, &qword_26A943788);
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      uint64_t v54 = 0;
    }
    else
    {
      long long v55 = v97;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v97, v30, v33);
      uint64_t v56 = (void *)sub_261B8A7B8();
      id v57 = objc_msgSend(v56, sel__unit);
      objc_msgSend(v56, sel_doubleValueForUnit_, v57);
      uint64_t v54 = v58;

      id v59 = objc_msgSend(v56, sel__unit);
      id v60 = objc_msgSend(v59, sel_unitString);

      uint64_t v52 = sub_261B8F0F8();
      uint64_t v53 = v61;

      (*(void (**)(char *, uint64_t))(v34 + 8))(v55, v33);
    }
    uint64_t v62 = v111;
    uint64_t v63 = v112;
    uint64_t v64 = v103;
    LODWORD(v103) = a17;
    uint64_t v65 = a16;
    LODWORD(v97) = a15;
    uint64_t v66 = a14;
    int v96 = a13;
    uint64_t v67 = a12;
    uint64_t v68 = v102;
    sub_2619F86F0(v112, v102, &qword_26A943778);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v68, 1, v62) == 1)
    {
      sub_2619F8754(v63, &qword_26A943778);
      sub_2619F8754(v113, &qword_26A943788);
      sub_2619F8754(v100, &qword_26A943788);
      sub_2619F8754(v68, &qword_26A943778);
      uint64_t v69 = 0;
      uint64_t v70 = 0;
      uint64_t v71 = 0;
    }
    else
    {
      v72 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 32);
      uint64_t v92 = v52;
      uint64_t v73 = v93;
      v72(v93, v68, v62);
      unint64_t v74 = (void *)sub_261B8A7C8();
      uint64_t v102 = v53;
      uint64_t v75 = v64;
      id v76 = objc_msgSend(v74, sel__unit);
      objc_msgSend(v74, sel_doubleValueForUnit_, v76);
      uint64_t v71 = v77;

      id v78 = objc_msgSend(v74, sel__unit);
      id v79 = objc_msgSend(v78, sel_unitString);

      uint64_t v69 = sub_261B8F0F8();
      uint64_t v70 = v80;

      uint64_t v65 = a16;
      uint64_t v66 = a14;
      uint64_t v67 = a12;

      sub_2619F8754(v112, &qword_26A943778);
      sub_2619F8754(v113, &qword_26A943788);
      sub_2619F8754(v100, &qword_26A943788);
      uint64_t v81 = v73;
      uint64_t v52 = v92;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v81, v111);
      uint64_t v53 = v102;
    }
    char v83 = v105;
    char v82 = v106;
    char v84 = v110;
    uint64_t v86 = v108;
    uint64_t v85 = v109;
    uint64_t v87 = v107;
    uint64_t v88 = v98;
    uint64_t result = v95;
    uint64_t v90 = v94;
    char v91 = v104 & 1;
    char v117 = v104 & 1;
    char v116 = v96 & 1;
    char v115 = v97 & 1;
    char v114 = v103 & 1;
    *(void *)a9 = v99;
    *(void *)(a9 + 8) = v88;
    *(double *)(a9 + 16) = a10;
    *(double *)(a9 + 24) = a11;
    *(unsigned char *)(a9 + 32) = v83;
    *(unsigned char *)(a9 + 33) = v82;
    *(void *)(a9 + 40) = v101;
    *(unsigned char *)(a9 + 48) = v91;
    *(void *)(a9 + 56) = v45;
    *(void *)(a9 + 64) = result;
    *(void *)(a9 + 72) = v90;
    *(void *)(a9 + 80) = v54;
    *(void *)(a9 + 88) = v52;
    *(void *)(a9 + 96) = v53;
    *(void *)(a9 + 104) = v71;
    *(void *)(a9 + 112) = v69;
    *(void *)(a9 + 120) = v70;
    *(void *)(a9 + 128) = v67;
    *(unsigned char *)(a9 + 136) = v116;
    *(void *)(a9 + 144) = v66;
    *(unsigned char *)(a9 + 152) = v115;
    *(void *)(a9 + 160) = v65;
    *(unsigned char *)(a9 + 168) = v114;
    *(void *)(a9 + 176) = v87;
    *(void *)(a9 + 184) = v86;
    *(void *)(a9 + 192) = v85;
    *(unsigned char *)(a9 + 200) = v84;
  }
  else
  {
    uint64_t result = sub_261A0C9E4(v107, v108, v109, v110);
    __break(1u);
  }
  return result;
}

__n128 DemoWorkout.init(workout:effort:)@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943778);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v115 = (uint64_t)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943788);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v114 = (uint64_t)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v113 = (uint64_t)&v103 - v11;
  uint64_t v12 = sub_261B8ADD8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = &off_26558C000;
  if (!a2)
  {
    uint64_t v108 = 0;
    goto LABEL_7;
  }
  uint64_t v17 = self;
  id v18 = a2;
  id v19 = objc_msgSend(v17, sel_appleEffortScoreUnit);
  objc_msgSend(v18, sel_doubleValueForUnit_, v19);
  double v21 = v20;

  if ((~*(void *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_63;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    type metadata accessor for _HKWorkoutGoalType(0);
    *(void *)&long long v119 = v16;
    sub_261B8FBD8();
    __break(1u);
    JUMPOUT(0x261A08D14);
  }
  uint64_t v108 = (uint64_t)v21;
LABEL_7:
  sub_261A0CCCC(0, &qword_26B416CF0);
  uint64_t v22 = (void *)MEMORY[0x263E4D3B0]((id)*MEMORY[0x263F09E38]);
  id v116 = objc_msgSend(a1, sel_statisticsForType_, v22);

  uint64_t v16 = (_UNKNOWN **)objc_msgSend(a1, sel__goalType);
  uint64_t v109 = a2;
  int v112 = 3;
  uint64_t v111 = (uint64_t)v16;
  int v110 = v16;
  switch((unint64_t)v16)
  {
    case 0uLL:
      goto LABEL_16;
    case 1uLL:
      id v23 = objc_msgSend(a1, sel__goal);
      if (!v23) {
        goto LABEL_65;
      }
      uint64_t v24 = v23;
      id v25 = objc_msgSend(v23, sel__unit);
      objc_msgSend(v24, sel_doubleValueForUnit_, v25);
      uint64_t v27 = v26;
      int v112 = 0;
      goto LABEL_15;
    case 2uLL:
      id v28 = objc_msgSend(a1, sel__goal);
      if (!v28) {
        goto LABEL_66;
      }
      uint64_t v24 = v28;
      id v25 = objc_msgSend(v28, sel__unit);
      objc_msgSend(v24, sel_doubleValueForUnit_, v25);
      uint64_t v27 = v29;
      int v30 = 1;
      goto LABEL_14;
    case 3uLL:
      id v31 = objc_msgSend(a1, sel__goal);
      if (!v31) {
        goto LABEL_67;
      }
      uint64_t v24 = v31;
      id v25 = objc_msgSend(v31, sel__unit);
      objc_msgSend(v24, sel_doubleValueForUnit_, v25);
      uint64_t v27 = v32;
      int v30 = 2;
LABEL_14:
      int v112 = v30;
LABEL_15:

      id v33 = objc_msgSend(v24, sel__unit);
      id v34 = objc_msgSend(v33, sel_unitString);

      uint64_t v111 = sub_261B8F0F8();
      int v110 = v35;

      uint64_t v16 = v27;
LABEL_16:
      id v107 = objc_msgSend(a1, sel_workoutActivityType);
      id v36 = objc_msgSend(a1, sel_startDate);
      sub_261B8AD98();

      sub_261B8AD68();
      double v38 = v37;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      objc_msgSend(a1, sel_duration);
      double v40 = v39;
      id v41 = objc_msgSend(a1, sel_metadata);
      int v106 = v16;
      if (!v41)
      {
        __n128 v120 = 0u;
        long long v119 = 0u;
        uint64_t v46 = &selRef_album;
LABEL_26:
        sub_2619F8754((uint64_t)&v119, &qword_26A943228);
        int v49 = 2;
        goto LABEL_27;
      }
      uint64_t v42 = v41;
      uint64_t v43 = sub_261B8EFF8();

      uint64_t v44 = sub_261B8F0F8();
      uint64_t v46 = &selRef_album;
      if (*(void *)(v43 + 16) && (unint64_t v47 = sub_261ACB228(v44, v45), (v48 & 1) != 0))
      {
        sub_261A0CC60(*(void *)(v43 + 56) + 32 * v47, (uint64_t)&v119);
      }
      else
      {
        __n128 v120 = 0u;
        long long v119 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v120.n128_u64[1]) {
        goto LABEL_26;
      }
      if (swift_dynamicCast()) {
        int v49 = LOBYTE(v117[0]);
      }
      else {
        int v49 = 2;
      }
LABEL_27:
      id v50 = objc_msgSend(a1, sel_metadata);
      if (!v50)
      {
        __n128 v120 = 0u;
        long long v119 = 0u;
        uint64_t v55 = v113;
LABEL_36:
        sub_2619F8754((uint64_t)&v119, &qword_26A943228);
        goto LABEL_37;
      }
      uint64_t v51 = v50;
      uint64_t v52 = sub_261B8EFF8();

      uint64_t v53 = sub_261B8F0F8();
      uint64_t v55 = v113;
      if (*(void *)(v52 + 16) && (unint64_t v56 = sub_261ACB228(v53, v54), (v57 & 1) != 0))
      {
        sub_261A0CC60(*(void *)(v52 + 56) + 32 * v56, (uint64_t)&v119);
      }
      else
      {
        __n128 v120 = 0u;
        long long v119 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v120.n128_u64[1]) {
        goto LABEL_36;
      }
      type metadata accessor for HKWorkoutSwimmingLocationType(0);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_37:
        BOOL v105 = 0;
        goto LABEL_38;
      }
      BOOL v105 = v117[0] == 1;
LABEL_38:
      uint64_t v58 = (void *)MEMORY[0x263E4D3B0]((id)*MEMORY[0x263F09BC0]);
      id v59 = objc_msgSend(a1, v46[59], v58);

      if (v59 && (id v60 = objc_msgSend(v59, sel_sumQuantity), v59, v60))
      {
        sub_261B8F478();

        uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943790);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v55, 0, 1, v101);
      }
      else
      {
        uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943790);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v55, 1, 1, v61);
      }
      uint64_t v62 = (void *)MEMORY[0x263E4D3B0]((id)*MEMORY[0x263F09C08]);
      id v63 = objc_msgSend(a1, v46[59], v62);

      if (v63 && (id v64 = objc_msgSend(v63, sel_sumQuantity), v63, v64))
      {
        uint64_t v65 = v114;
        sub_261B8F478();
        uint64_t v66 = v115;

        uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943790);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v65, 0, 1, v102);
      }
      else
      {
        uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943790);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v114, 1, 1, v67);
        uint64_t v66 = v115;
      }
      id v68 = objc_msgSend(a1, sel_totalDistance);
      if (v68)
      {
        uint64_t v69 = v68;
        sub_261B8F488();

        uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943780);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v66, 0, 1, v71);
      }
      else
      {
        uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943780);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v66, 1, 1, v70);
      }
      id v72 = v116;
      if (v116)
      {
        id v73 = objc_msgSend(v116, sel_averageQuantity);
        BOOL v104 = v73 == 0;
        if (v73)
        {
          unint64_t v74 = v73;
          id v75 = objc_msgSend(self, sel__countPerMinuteUnit);
          objc_msgSend(v74, sel_doubleValueForUnit_, v75);
          uint64_t v77 = v76;

          id v72 = v116;
          uint64_t v78 = v77;
        }
        else
        {
          uint64_t v78 = 0;
        }
        id v84 = objc_msgSend(v72, sel_minimumQuantity);
        unsigned __int8 v82 = v84 == 0;
        if (v84)
        {
          uint64_t v85 = v84;
          id v86 = objc_msgSend(self, sel__countPerMinuteUnit);
          objc_msgSend(v85, sel_doubleValueForUnit_, v86);
          uint64_t v88 = v87;

          id v72 = v116;
          uint64_t v80 = v88;
        }
        else
        {
          uint64_t v80 = 0;
        }
        id v89 = objc_msgSend(v72, sel_maximumQuantity);
        if (v89)
        {
          uint64_t v90 = v89;
          id v91 = objc_msgSend(self, (SEL)&off_26558C138 + 7);
          objc_msgSend(v90, sel_doubleValueForUnit_, v91);
          uint64_t v93 = v92;

          id v72 = v116;
          unsigned __int8 v81 = 0;
          uint64_t v79 = v93;
        }
        else
        {
          uint64_t v79 = 0;
          unsigned __int8 v81 = 1;
        }
        unsigned __int8 v83 = v104;
      }
      else
      {
        uint64_t v79 = 0;
        uint64_t v80 = 0;
        uint64_t v78 = 0;
        unsigned __int8 v81 = 1;
        unsigned __int8 v82 = 1;
        unsigned __int8 v83 = 1;
      }
      uint64_t v94 = v109;
      v117[0] = v106;
      v117[1] = v111;
      v117[2] = v110;
      char v118 = v112;
      DemoWorkout.init(activityType:startDateFromNow:duration:isIndoor:isPoolSwim:effort:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:averageHeartRate:minHeartRate:maxHeartRate:goal:)((uint64_t)v107, v49, v105, v108, v109 == 0, v113, v114, v115, (uint64_t)&v119, v38, v40, v78, v83, v80, v82, v79, v81, (uint64_t)v117);

      long long v95 = *(_OWORD *)v130;
      *(_OWORD *)(a3 + 160) = v129;
      *(_OWORD *)(a3 + 176) = v95;
      *(_OWORD *)(a3 + 185) = *(_OWORD *)&v130[9];
      long long v96 = v126;
      *(_OWORD *)(a3 + 96) = v125;
      *(_OWORD *)(a3 + 112) = v96;
      long long v97 = v128;
      *(_OWORD *)(a3 + 128) = v127;
      *(_OWORD *)(a3 + 144) = v97;
      long long v98 = v122;
      *(_OWORD *)(a3 + 32) = v121;
      *(_OWORD *)(a3 + 48) = v98;
      long long v99 = v124;
      *(_OWORD *)(a3 + 64) = v123;
      *(_OWORD *)(a3 + 80) = v99;
      __n128 result = v120;
      *(_OWORD *)a3 = v119;
      *(__n128 *)(a3 + 16) = result;
      return result;
    default:
      goto LABEL_68;
  }
}

uint64_t DemoWorkout.copyWithEffort(_:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v58 = a2;
  uint64_t v60 = a3;
  uint64_t v61 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943778);
  MEMORY[0x270FA5388](v4 - 8);
  id v59 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943788);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v56 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v48 - v9;
  double v11 = *(double *)(v3 + 16);
  double v12 = *(double *)(v3 + 24);
  int v57 = *(unsigned __int8 *)(v3 + 32);
  double v13 = *(double *)(v3 + 56);
  uint64_t v14 = *(void *)(v3 + 72);
  double v15 = *(double *)(v3 + 80);
  uint64_t v17 = *(void *)(v3 + 88);
  uint64_t v16 = *(void *)(v3 + 96);
  double v18 = *(double *)(v3 + 104);
  v48[2] = *(void *)(v3 + 112);
  uint64_t v50 = *(void *)(v3 + 120);
  uint64_t v49 = *(void *)(v3 + 128);
  int v55 = *(unsigned __int8 *)(v3 + 136);
  uint64_t v66 = *(void *)(v3 + 144);
  int v65 = *(unsigned __int8 *)(v3 + 152);
  uint64_t v64 = *(void *)(v3 + 160);
  int v63 = *(unsigned __int8 *)(v3 + 168);
  uint64_t v54 = *(void *)(v3 + 176);
  uint64_t v53 = *(void *)(v3 + 184);
  uint64_t v52 = *(void *)(v3 + 192);
  int v51 = *(unsigned __int8 *)(v3 + 200);
  id v19 = self;
  double v20 = (void *)sub_261B8F0B8();
  id v62 = objc_msgSend(v19, sel__workoutActivityTypeFromString_, v20);

  v48[1] = v17;
  if (v14)
  {
    swift_bridgeObjectRetain();
    double v21 = (void *)sub_261B8F0B8();
    id v22 = objc_msgSend(self, sel_unitFromString_, v21);

    id v23 = objc_msgSend(self, (SEL)&off_26558C2E0 + 2, v22, v13);
    swift_bridgeObjectRelease();

    sub_261B8F478();
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943790);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v10, 0, 1, v32);
    uint64_t v25 = v49;
    uint64_t v26 = (uint64_t)v56;
    uint64_t v27 = v66;
    if (v16)
    {
LABEL_7:
      swift_bridgeObjectRetain();
      id v33 = (void *)sub_261B8F0B8();
      id v34 = objc_msgSend(self, sel_unitFromString_, v33);

      id v35 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v34, v15);
      swift_bridgeObjectRelease();

      sub_261B8F478();
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943790);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v26, 0, 1, v36);
      uint64_t v27 = v66;
      if (v50) {
        goto LABEL_8;
      }
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943790);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
    uint64_t v25 = v49;
    uint64_t v26 = (uint64_t)v56;
    uint64_t v27 = v66;
    if (v16) {
      goto LABEL_7;
    }
  }
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943790);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v26, 1, 1, v28);
  if (v50)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    double v37 = (void *)sub_261B8F0B8();
    id v38 = objc_msgSend(self, sel_unitFromString_, v37);

    id v39 = objc_msgSend(self, (SEL)&off_26558C2E0 + 2, v38, v18);
    swift_bridgeObjectRelease();

    uint64_t v31 = (uint64_t)v59;
    sub_261B8F488();

    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943780);
    int v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
    double v40 = (char *)v31;
    uint64_t v41 = 0;
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943780);
  int v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  uint64_t v31 = (uint64_t)v59;
  double v40 = v59;
  uint64_t v41 = 1;
LABEL_9:
  v30(v40, v41, 1, v29);
  uint64_t v43 = v60;
  uint64_t v42 = v61;
  int v44 = v57;
  unsigned __int8 v45 = v55;
  int v46 = v58 & 1;
  v67[0] = v54;
  v67[1] = v53;
  v67[2] = v52;
  char v68 = v51;
  sub_261A0CC48(v54, v53, v52, v51);
  return DemoWorkout.init(activityType:startDateFromNow:duration:isIndoor:isPoolSwim:effort:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:averageHeartRate:minHeartRate:maxHeartRate:goal:)((uint64_t)v62, v44, v44, v42, v46, (uint64_t)v10, v26, v31, v43, v11, v12, v25, v45, v27, v65, v64, v63, (uint64_t)v67);
}

unint64_t static DemoWorkout.metadataKeyOverrideEffort.getter()
{
  return 0xD00000000000001FLL;
}

void DemoWorkout.workoutRepresentation(startingDate:)(uint64_t a1)
{
  uint64_t v98 = a1;
  uint64_t v2 = sub_261B8ADD8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int v106 = (char *)v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  BOOL v105 = (char *)v87 - v6;
  double v7 = *(double *)(v1 + 24);
  int v95 = *(unsigned __int8 *)(v1 + 32);
  LODWORD(v96) = *(unsigned __int8 *)(v1 + 33);
  uint64_t v92 = *(void *)(v1 + 40);
  LODWORD(v97) = *(unsigned __int8 *)(v1 + 48);
  double v8 = *(double *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  double v11 = *(double *)(v1 + 80);
  uint64_t v12 = *(void *)(v1 + 88);
  uint64_t v99 = *(void *)(v1 + 96);
  double v13 = *(double *)(v1 + 104);
  uint64_t v93 = *(void *)(v1 + 112);
  uint64_t v100 = *(void *)(v1 + 120);
  double v14 = *(double *)(v1 + 128);
  char v15 = *(unsigned char *)(v1 + 136);
  double v16 = *(double *)(v1 + 144);
  char v17 = *(unsigned char *)(v1 + 152);
  double v18 = *(double *)(v1 + 160);
  int v94 = *(unsigned __int8 *)(v1 + 168);
  id v19 = *(void **)(v1 + 176);
  unint64_t v103 = *(void *)(v1 + 184);
  id v104 = v19;
  uint64_t v102 = *(void *)(v1 + 192);
  uint64_t v101 = *(char *)(v1 + 200);
  double v20 = self;
  double v21 = (void *)sub_261B8F0B8();
  id v22 = objc_msgSend(v20, sel__workoutActivityTypeFromString_, v21);

  if (v22)
  {
    v87[0] = v9;
    v87[1] = v12;
    uint64_t v88 = v3;
    unint64_t v23 = sub_261AC5040(MEMORY[0x263F8EE78]);
    uint64_t v89 = v2;
    id v91 = v20;
    id v90 = v22;
    if ((v15 & 1) == 0)
    {
      uint64_t v24 = sub_261B8F0F8();
      uint64_t v26 = v25;
      id v27 = objc_msgSend(self, sel__countPerMinuteUnit);
      id v28 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v27, v14);

      uint64_t v111 = sub_261A0CCCC(0, (unint64_t *)&qword_26A9437A8);
      *(void *)&long long v109 = v28;
      sub_261A0CCBC(&v109, v108);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v107 = v23;
      sub_261A0B9E4(v108, v24, v26, isUniquelyReferenced_nonNull_native);
      unint64_t v23 = v107;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v30 = v10;
    if (v17)
    {
      uint64_t v31 = &off_26558C000;
    }
    else
    {
      uint64_t v32 = sub_261B8F0F8();
      uint64_t v34 = v33;
      id v35 = objc_msgSend(self, sel__countPerMinuteUnit);
      uint64_t v31 = &off_26558C000;
      id v36 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v35, v16);

      uint64_t v111 = sub_261A0CCCC(0, (unint64_t *)&qword_26A9437A8);
      *(void *)&long long v109 = v36;
      sub_261A0CCBC(&v109, v108);
      char v37 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v107 = v23;
      sub_261A0B9E4(v108, v32, v34, v37);
      unint64_t v23 = v107;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if ((v94 & 1) == 0)
    {
      uint64_t v39 = sub_261B8F0F8();
      uint64_t v41 = v40;
      id v42 = objc_msgSend(self, sel__countPerMinuteUnit);
      id v43 = objc_msgSend(self, (SEL)v31[403], v42, v18);

      uint64_t v111 = sub_261A0CCCC(0, (unint64_t *)&qword_26A9437A8);
      *(void *)&long long v109 = v43;
      sub_261A0CCBC(&v109, v108);
      char v44 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v107 = v23;
      sub_261A0B9E4(v108, v39, v41, v44);
      unint64_t v23 = v107;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v38 = v99;
    if (v95 != 2)
    {
      uint64_t v45 = v95 & 1;
      uint64_t v46 = sub_261B8F0F8();
      uint64_t v48 = v47;
      id v49 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v45);
      uint64_t v111 = sub_261A0CCCC(0, (unint64_t *)&qword_26A947430);
      *(void *)&long long v109 = v49;
      sub_261A0CCBC(&v109, v108);
      char v50 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v107 = v23;
      sub_261A0B9E4(v108, v46, v48, v50);
      unint64_t v23 = v107;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v96 != 2)
    {
      if (v96) {
        uint64_t v51 = 1;
      }
      else {
        uint64_t v51 = 2;
      }
      uint64_t v52 = sub_261B8F0F8();
      uint64_t v54 = v53;
      id v55 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v51);
      uint64_t v111 = sub_261A0CCCC(0, (unint64_t *)&qword_26A947430);
      *(void *)&long long v109 = v55;
      sub_261A0CCBC(&v109, v108);
      char v56 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v107 = v23;
      sub_261A0B9E4(v108, v52, v54, v56);
      unint64_t v23 = v107;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if ((v97 & 1) == 0)
    {
      id v57 = objc_msgSend(self, sel_appleEffortScoreUnit);
      id v58 = objc_msgSend(self, (SEL)v31[403], v57, (double)v92);

      uint64_t v111 = sub_261A0CCCC(0, (unint64_t *)&qword_26A9437A8);
      *(void *)&long long v109 = v58;
      sub_261A0CCBC(&v109, v108);
      char v59 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v107 = v23;
      sub_261A0B9E4(v108, 0xD00000000000001FLL, 0x8000000261B9D960, v59);
      unint64_t v23 = v107;
      swift_bridgeObjectRelease();
    }
    sub_261B8AD38();
    sub_261B8AD38();
    uint64_t v99 = sub_261B8AD48();
    uint64_t v98 = sub_261B8AD48();
    sub_261A0CCCC(0, &qword_26A943798);
    uint64_t v60 = (void *)sub_261B8F2C8();
    sub_261A0CCCC(0, &qword_26A9437A0);
    uint64_t v97 = sub_261B8F2C8();
    if (v30)
    {
      swift_bridgeObjectRetain();
      uint64_t v61 = (void *)sub_261B8F0B8();
      id v62 = objc_msgSend(self, sel_unitFromString_, v61);

      id v96 = objc_msgSend(self, (SEL)v31[403], v62, v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v96 = 0;
    }
    uint64_t v63 = v101;
    char v64 = v101;
    if (v38)
    {
      swift_bridgeObjectRetain();
      int v65 = (void *)sub_261B8F0B8();
      id v66 = objc_msgSend(self, sel_unitFromString_, v65);

      id v67 = objc_msgSend(self, (SEL)v31[403], v66, v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v67 = 0;
    }
    if (v100)
    {
      swift_bridgeObjectRetain();
      char v68 = (void *)sub_261B8F0B8();
      id v69 = objc_msgSend(self, sel_unitFromString_, v68);

      id v70 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v69, v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v70 = 0;
    }
    uint64_t v71 = qword_261B939D8[v63];
    *(void *)&long long v109 = v104;
    *((void *)&v109 + 1) = v103;
    uint64_t v110 = v102;
    LOBYTE(v111) = v64;
    id v72 = DemoGoal.hkQuantity.getter();
    id v104 = v72;
    id v73 = objc_msgSend(self, sel_localDevice);
    swift_bridgeObjectRetain();
    unint64_t v74 = (void *)sub_261B8EFE8();
    swift_bridgeObjectRelease();
    uint64_t v86 = v71;
    id v85 = v67;
    id v75 = (void *)v99;
    uint64_t v76 = (void *)v98;
    uint64_t v77 = v67;
    uint64_t v78 = (void *)v97;
    unint64_t v103 = v23;
    uint64_t v79 = v96;
    id v80 = objc_msgSend(v91, sel__workoutWithActivityType_startDate_endDate_workoutEvents_workoutActivities_duration_totalActiveEnergyBurned_totalBasalEnergyBurned_totalDistance_totalSwimmingStrokeCount_totalFlightsClimbed_goalType_goal_device_metadata_, v90, v99, v98, v60, v97, v96, v7, v85, v70, 0, 0, v86, v72, v73, v74);

    if (v80)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v80, sel__setIsWatchWorkout_, 1);
      id v81 = objc_msgSend(self, sel__localDeviceSource);
      id v82 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A7B0]), sel_initWithSource_version_, v81, 0);
      objc_msgSend(v80, sel__setSourceRevision_, v82);

      unsigned __int8 v83 = *(void (**)(char *, uint64_t))(v88 + 8);
      uint64_t v84 = v89;
      v83(v106, v89);
      v83(v105, v84);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_261A09FFC(char a1)
{
  uint64_t result = 0x7974697669746361;
  switch(a1)
  {
    case 1:
    case 9:
      uint64_t result = 0xD000000000000010;
      break;
    case 2:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 3:
      uint64_t result = 0x726F6F646E497369;
      break;
    case 4:
      uint64_t result = 0x77536C6F6F507369;
      break;
    case 5:
      uint64_t result = 0x74726F666665;
      break;
    case 6:
      uint64_t result = 0xD000000000000017;
      break;
    case 7:
      uint64_t result = 0xD000000000000016;
      break;
    case 8:
      uint64_t result = 0x7369446C61746F74;
      break;
    case 10:
      unsigned int v3 = 1215195501;
      goto LABEL_13;
    case 11:
      unsigned int v3 = 1215848813;
LABEL_13:
      uint64_t result = v3 | 0x7472616500000000;
      break;
    case 12:
      uint64_t result = 1818324839;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_261A0A194(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_261A0A1A8()
{
  return sub_261A09FFC(*v0);
}

uint64_t sub_261A0A1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_261A0F270(a1, a2);
  *a3 = result;
  return result;
}

void sub_261A0A1D8(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_261A0A1E4(uint64_t a1)
{
  unint64_t v2 = sub_261A0CD08();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261A0A220(uint64_t a1)
{
  unint64_t v2 = sub_261A0CD08();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DemoWorkout.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9437B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v39 = *(unsigned __int8 *)(v1 + 32);
  int v33 = *(unsigned __int8 *)(v1 + 33);
  uint64_t v32 = *(void *)(v1 + 40);
  int v31 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v28 = *(void *)(v1 + 56);
  uint64_t v29 = v7;
  uint64_t v30 = *(void *)(v1 + 72);
  uint64_t v8 = *(void *)(v1 + 88);
  uint64_t v25 = *(void *)(v1 + 80);
  uint64_t v26 = v8;
  uint64_t v27 = *(void *)(v1 + 96);
  uint64_t v9 = *(void *)(v1 + 112);
  uint64_t v22 = *(void *)(v1 + 104);
  uint64_t v23 = v9;
  uint64_t v24 = *(void *)(v1 + 120);
  uint64_t v21 = *(void *)(v1 + 128);
  int v20 = *(unsigned __int8 *)(v1 + 136);
  uint64_t v19 = *(void *)(v1 + 144);
  int v18 = *(unsigned __int8 *)(v1 + 152);
  uint64_t v17 = *(void *)(v1 + 160);
  int v16 = *(unsigned __int8 *)(v1 + 168);
  uint64_t v12 = *(void *)(v1 + 176);
  uint64_t v13 = *(void *)(v1 + 184);
  uint64_t v15 = *(void *)(v1 + 192);
  int v14 = *(unsigned __int8 *)(v1 + 200);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_261A0CD08();
  sub_261B8FD18();
  LOBYTE(v35) = 0;
  uint64_t v10 = v34;
  sub_261B8FB38();
  if (!v10)
  {
    LOBYTE(v35) = 1;
    sub_261B8FB48();
    LOBYTE(v35) = 2;
    sub_261B8FB48();
    uint64_t v34 = v4;
    LOBYTE(v35) = 3;
    sub_261B8FAF8();
    LOBYTE(v35) = 4;
    sub_261B8FAF8();
    LOBYTE(v35) = 5;
    sub_261B8FB18();
    uint64_t v35 = v28;
    uint64_t v36 = v29;
    uint64_t v37 = v30;
    char v40 = 6;
    sub_261A0CAA4();
    sub_261B8FB28();
    uint64_t v35 = v25;
    uint64_t v36 = v26;
    uint64_t v37 = v27;
    char v40 = 7;
    sub_261B8FB28();
    uint64_t v35 = v22;
    uint64_t v36 = v23;
    uint64_t v37 = v24;
    char v40 = 8;
    sub_261B8FB28();
    LOBYTE(v35) = 9;
    sub_261B8FB08();
    LOBYTE(v35) = 10;
    sub_261B8FB08();
    LOBYTE(v35) = 11;
    sub_261B8FB08();
    uint64_t v35 = v12;
    uint64_t v36 = v13;
    uint64_t v37 = v15;
    char v38 = v14;
    char v40 = 12;
    sub_261A0CD5C();
    sub_261B8FB58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DemoWorkout.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9437C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  char v117 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_261A0CD08();
  sub_261B8FD08();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
  }
  uint64_t v57 = v6;
  LOBYTE(v70) = 0;
  uint64_t v10 = sub_261B8FAA8();
  uint64_t v12 = v11;
  LOBYTE(v70) = 1;
  swift_bridgeObjectRetain();
  sub_261B8FAB8();
  unint64_t v14 = v13;
  LOBYTE(v70) = 2;
  sub_261B8FAB8();
  uint64_t v16 = v15;
  LOBYTE(v70) = 3;
  int v56 = sub_261B8FA68();
  LOBYTE(v70) = 4;
  int v55 = sub_261B8FA68();
  LOBYTE(v70) = 5;
  uint64_t v17 = sub_261B8FA88();
  char v19 = v18;
  uint64_t v53 = v17;
  char v114 = v18 & 1;
  LOBYTE(v58) = 6;
  unint64_t v54 = sub_261A0CBF4();
  sub_261B8FA98();
  uint64_t v50 = v71;
  uint64_t v51 = v70;
  LOBYTE(v58) = 7;
  unint64_t v52 = v72;
  swift_bridgeObjectRetain();
  sub_261B8FA98();
  uint64_t v48 = v70;
  uint64_t v49 = v10;
  unint64_t v20 = v72;
  uint64_t v46 = a2;
  uint64_t v47 = v71;
  LOBYTE(v58) = 8;
  swift_bridgeObjectRetain();
  sub_261B8FA98();
  uint64_t v43 = v71;
  uint64_t v44 = v70;
  LOBYTE(v70) = 9;
  unint64_t v54 = v72;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_261B8FA78();
  int v45 = v22;
  uint64_t v23 = v21;
  char v112 = v22 & 1;
  LOBYTE(v70) = 10;
  uint64_t v41 = sub_261B8FA78();
  int v42 = v24;
  char v110 = v24 & 1;
  LOBYTE(v70) = 11;
  uint64_t v40 = sub_261B8FA78();
  int v39 = v25 & 1;
  char v108 = v25 & 1;
  char v103 = 12;
  sub_261A0CDB0();
  sub_261B8FAC8();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v8, v5);
  uint64_t v37 = v105;
  uint64_t v38 = *((void *)&v104 + 1);
  HIDWORD(v36) = v106;
  uint64_t v57 = v104;
  *(void *)&long long v58 = v49;
  *((void *)&v58 + 1) = v12;
  *(void *)&long long v59 = v14;
  *((void *)&v59 + 1) = v16;
  LOBYTE(v60) = v56;
  BYTE1(v60) = v55;
  unint64_t v26 = v52;
  *((void *)&v60 + 1) = v53;
  LOBYTE(v61) = v19 & 1;
  *((void *)&v61 + 1) = v51;
  *(void *)&long long v62 = v50;
  *((void *)&v62 + 1) = v52;
  *(void *)&long long v63 = v48;
  *((void *)&v63 + 1) = v47;
  *(void *)&long long v64 = v20;
  *((void *)&v64 + 1) = v44;
  unint64_t v27 = v54;
  *(void *)&long long v65 = v43;
  *((void *)&v65 + 1) = v54;
  *(void *)&long long v66 = v23;
  BYTE8(v66) = v45 & 1;
  *(void *)&long long v67 = v41;
  BYTE8(v67) = v42 & 1;
  *(void *)&long long v68 = v40;
  BYTE8(v68) = v39;
  v69[0] = v104;
  *(void *)&v69[1] = v105;
  BYTE8(v69[1]) = v106;
  sub_261A0CE04((uint64_t)&v58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v28 = v69[0];
  uint64_t v29 = v46;
  v46[10] = v68;
  v29[11] = v28;
  *(_OWORD *)((char *)v29 + 185) = *(_OWORD *)((char *)v69 + 9);
  long long v30 = v65;
  v29[6] = v64;
  v29[7] = v30;
  long long v31 = v67;
  v29[8] = v66;
  v29[9] = v31;
  long long v32 = v61;
  v29[2] = v60;
  v29[3] = v32;
  long long v33 = v63;
  v29[4] = v62;
  v29[5] = v33;
  long long v34 = v59;
  _OWORD *v29 = v58;
  v29[1] = v34;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
  uint64_t v70 = v49;
  uint64_t v71 = v12;
  unint64_t v72 = v14;
  uint64_t v73 = v16;
  char v74 = v56;
  char v75 = v55;
  int v76 = v115;
  __int16 v77 = v116;
  uint64_t v78 = v53;
  char v79 = v114;
  *(_DWORD *)id v80 = *(_DWORD *)v113;
  *(_DWORD *)&v80[3] = *(_DWORD *)&v113[3];
  uint64_t v81 = v51;
  uint64_t v82 = v50;
  unint64_t v83 = v26;
  uint64_t v84 = v48;
  uint64_t v85 = v47;
  unint64_t v86 = v20;
  uint64_t v87 = v44;
  uint64_t v88 = v43;
  unint64_t v89 = v27;
  uint64_t v90 = v23;
  char v91 = v112;
  *(_DWORD *)uint64_t v92 = *(_DWORD *)v111;
  *(_DWORD *)&v92[3] = *(_DWORD *)&v111[3];
  uint64_t v93 = v41;
  char v94 = v110;
  *(_DWORD *)int v95 = *(_DWORD *)v109;
  *(_DWORD *)&v95[3] = *(_DWORD *)&v109[3];
  uint64_t v96 = v40;
  char v97 = v108;
  *(_DWORD *)&v98[3] = *(_DWORD *)&v107[3];
  *(_DWORD *)uint64_t v98 = *(_DWORD *)v107;
  uint64_t v99 = v57;
  uint64_t v100 = v38;
  uint64_t v101 = v37;
  char v102 = BYTE4(v36);
  return sub_261A0CE8C((uint64_t)&v70);
}

uint64_t sub_261A0AF54@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return DemoWorkout.init(from:)(a1, a2);
}

uint64_t sub_261A0AF6C(void *a1)
{
  return DemoWorkout.encode(to:)(a1);
}

void *sub_261A0AF84(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9438F8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      unint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_261A0ECF0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_261A0B094(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_261A0B5E8(a1, a2, a3, a4, &qword_26A9438F0);
}

uint64_t sub_261A0B0A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_261A0B328(a1, a2, a3, a4, &qword_26B416D48, type metadata accessor for TrainingLoadViewModel.ChartPoint, type metadata accessor for TrainingLoadViewModel.ChartPoint);
}

void *sub_261A0B0D4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943908);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      unint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_261A0F7DC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_261A0B1E4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943570);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      unint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_261A0EDDC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_261A0B2F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_261A0B328(a1, a2, a3, a4, &qword_26A9438E8, MEMORY[0x263F87EE8], MEMORY[0x263F87EE8]);
}

uint64_t sub_261A0B328(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    char v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  char v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_261B8F9B8();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_261A0F9BC(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_261A0B5A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_261A0B328(a1, a2, a3, a4, &qword_26A9438E0, MEMORY[0x263F07490], MEMORY[0x263F07490]);
}

void *sub_261A0B5DC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_261A0B5E8(a1, a2, a3, a4, &qword_26A9438B0);
}

void *sub_261A0B5E8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      unint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_261A0F8D0(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_261A0B6F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_261A0B328(a1, a2, a3, a4, &qword_26A9438A8, MEMORY[0x263EFB9C0], MEMORY[0x263EFB9C0]);
}

uint64_t sub_261A0B728(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_261A0B328(a1, a2, a3, a4, &qword_26A9438D0, MEMORY[0x263F42DE0], MEMORY[0x263F42DE0]);
}

uint64_t sub_261A0B75C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_261A0B328(a1, a2, a3, a4, qword_26B416D50, type metadata accessor for TrainingLoadViewModel, type metadata accessor for TrainingLoadViewModel);
}

void *sub_261A0B790(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9438C0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_261A0FB18(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_261A0B8A0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9438B8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_261A0FC24(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_261A0B9B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_261A0B328(a1, a2, a3, a4, &qword_26A9438D8, MEMORY[0x263F69420], MEMORY[0x263F69420]);
}

_OWORD *sub_261A0B9E4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_261ACB228(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_261ACF430();
      goto LABEL_7;
    }
    sub_261ACC724(v15, a4 & 1);
    unint64_t v21 = sub_261ACB228(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_261B8FBF8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    size_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_261A0CCBC(a1, v19);
  }
LABEL_13:
  sub_261ACEDD8(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_261A0BB38(uint64_t a1, char a2, double a3, double a4)
{
  char v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_261ACB2A0(a1);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a2 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      size_t v19 = (double *)(v18[7] + 16 * v12);
      double *v19 = a3;
      v19[1] = a4;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_261ACF618();
    goto LABEL_7;
  }
  sub_261ACCA24(result, a2 & 1);
  uint64_t result = sub_261ACB2A0(a1);
  if ((v16 & 1) != (v20 & 1))
  {
LABEL_15:
    uint64_t result = sub_261B8FBF8();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_261ACEE44(v12, a1, v18, a3, a4);
  return swift_retain();
}

_OWORD *sub_261A0BC64(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_261ACB30C((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_261ACF7C0();
      goto LABEL_7;
    }
    sub_261ACCD10(v12, a3 & 1);
    unint64_t v18 = sub_261ACB30C((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for Key(0);
    uint64_t result = (_OWORD *)sub_261B8FBF8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    char v16 = (_OWORD *)(v15[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return sub_261A0CCBC(a1, v16);
  }
LABEL_13:
  sub_261ACEE8C(v9, (uint64_t)a2, a1, v15);
  return a2;
}

void sub_261A0BDA8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_261B8AE38();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_261ACB3A0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_261AD0048();
    goto LABEL_7;
  }
  sub_261ACDA24(v17, a3 & 1);
  unint64_t v22 = sub_261ACB3A0(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_261B8FBF8();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_261ACEEF4(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_261A0BF50(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_261ACB4B8(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_261AD0488();
      goto LABEL_7;
    }
    sub_261ACE11C(v13, a3 & 1);
    unint64_t v24 = sub_261ACB4B8(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_261B8FBF8();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_261B8AE38();
    uint64_t v19 = *(void *)(v18 - 8);
    char v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:
  return sub_261ACEFAC(v10, a2, a1, v16);
}

uint64_t sub_261A0C0B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_261ACB228(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_261AD0714();
    goto LABEL_7;
  }
  sub_261ACE7B0(v15, a4 & 1);
  unint64_t v21 = sub_261ACB228(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_261B8FBF8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_261ACF058(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

void sub_261A0C1F8(uint64_t a1, char a2, void *a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v41 = v6;
  if (v6)
  {
    if (!*(void *)(a1 + 16))
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    long long v43 = *(_OWORD *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      int v42 = a3;
      uint64_t v9 = *a3;
      unint64_t v11 = sub_261ACB228(v7, v8);
      uint64_t v12 = *(void *)(v9 + 16);
      BOOL v13 = (v10 & 1) == 0;
      uint64_t v14 = v12 + v13;
      if (__OFADD__(v12, v13))
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      char v15 = v10;
      if (*(void *)(v9 + 24) >= v14)
      {
        if (a2)
        {
          if ((v10 & 1) == 0) {
            goto LABEL_14;
          }
        }
        else
        {
          sub_261ACF260();
          if ((v15 & 1) == 0) {
            goto LABEL_14;
          }
        }
      }
      else
      {
        sub_261ACC40C(v14, a2 & 1);
        unint64_t v16 = sub_261ACB228(v7, v8);
        if ((v15 & 1) != (v17 & 1))
        {
LABEL_30:
          sub_261B8FBF8();
          __break(1u);
LABEL_31:
          sub_261B8F8C8();
          sub_261B8F1C8();
          sub_261B8F9A8();
          sub_261B8F1C8();
          sub_261B8F9C8();
          __break(1u);
          return;
        }
        unint64_t v11 = v16;
        if ((v15 & 1) == 0)
        {
LABEL_14:
          char v20 = (void *)*a3;
          *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
          unint64_t v21 = (uint64_t *)(v20[6] + 16 * v11);
          uint64_t *v21 = v7;
          v21[1] = v8;
          *(_OWORD *)(v20[7] + 16 * v11) = v43;
          uint64_t v22 = v20[2];
          BOOL v23 = __OFADD__(v22, 1);
          uint64_t v24 = v22 + 1;
          if (v23)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          v20[2] = v24;
          if (v41 != 1)
          {
            char v25 = (_OWORD *)(a1 + 80);
            unint64_t v26 = 1;
            while (v26 < *(void *)(a1 + 16))
            {
              long long v44 = *v25;
              uint64_t v28 = *((void *)v25 - 2);
              uint64_t v27 = *((void *)v25 - 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (!v27) {
                goto LABEL_25;
              }
              uint64_t v29 = *a3;
              unint64_t v30 = sub_261ACB228(v28, v27);
              uint64_t v32 = *(void *)(v29 + 16);
              BOOL v33 = (v31 & 1) == 0;
              BOOL v23 = __OFADD__(v32, v33);
              uint64_t v34 = v32 + v33;
              if (v23) {
                goto LABEL_28;
              }
              char v35 = v31;
              if (*(void *)(v29 + 24) < v34)
              {
                sub_261ACC40C(v34, 1);
                unint64_t v30 = sub_261ACB228(v28, v27);
                if ((v35 & 1) != (v36 & 1)) {
                  goto LABEL_30;
                }
              }
              if (v35) {
                goto LABEL_11;
              }
              a3 = v42;
              uint64_t v37 = (void *)*v42;
              *(void *)(*v42 + 8 * (v30 >> 6) + 64) |= 1 << v30;
              uint64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
              uint64_t *v38 = v28;
              v38[1] = v27;
              *(_OWORD *)(v37[7] + 16 * v30) = v44;
              uint64_t v39 = v37[2];
              BOOL v23 = __OFADD__(v39, 1);
              uint64_t v40 = v39 + 1;
              if (v23) {
                goto LABEL_29;
              }
              ++v26;
              v37[2] = v40;
              v25 += 2;
              if (v41 == v26) {
                goto LABEL_25;
              }
            }
            goto LABEL_27;
          }
          goto LABEL_25;
        }
      }
LABEL_11:
      uint64_t v18 = (void *)swift_allocError();
      swift_willThrow();
      id v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943900);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();

        return;
      }
      goto LABEL_31;
    }
  }
LABEL_25:
  swift_bridgeObjectRelease_n();
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_261A0C648()
{
  unint64_t result = qword_26A943640;
  if (!qword_26A943640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943640);
  }
  return result;
}

unint64_t sub_261A0C69C()
{
  unint64_t result = qword_26A943648;
  if (!qword_26A943648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943648);
  }
  return result;
}

unint64_t sub_261A0C6F0()
{
  unint64_t result = qword_26A943670;
  if (!qword_26A943670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943670);
  }
  return result;
}

unint64_t sub_261A0C744()
{
  unint64_t result = qword_26A943680;
  if (!qword_26A943680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943680);
  }
  return result;
}

uint64_t sub_261A0C798(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943650);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A0C814(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943660);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A0C884()
{
  unint64_t result = qword_26A943698;
  if (!qword_26A943698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943698);
  }
  return result;
}

unint64_t sub_261A0C8D8()
{
  unint64_t result = qword_26A9436A8;
  if (!qword_26A9436A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9436A8);
  }
  return result;
}

uint64_t sub_261A0C92C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9436B0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A0C990()
{
  unint64_t result = qword_26A9436D8;
  if (!qword_26A9436D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9436D8);
  }
  return result;
}

uint64_t sub_261A0C9E4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_261A0C9FC()
{
  unint64_t result = qword_26A943710;
  if (!qword_26A943710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943710);
  }
  return result;
}

unint64_t sub_261A0CA50()
{
  unint64_t result = qword_26A943718;
  if (!qword_26A943718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943718);
  }
  return result;
}

unint64_t sub_261A0CAA4()
{
  unint64_t result = qword_26A943720;
  if (!qword_26A943720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943720);
  }
  return result;
}

unint64_t sub_261A0CAF8()
{
  unint64_t result = qword_26A943728;
  if (!qword_26A943728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943728);
  }
  return result;
}

unint64_t sub_261A0CB4C()
{
  unint64_t result = qword_26A943730;
  if (!qword_26A943730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943730);
  }
  return result;
}

unint64_t sub_261A0CBA0()
{
  unint64_t result = qword_26A943738;
  if (!qword_26A943738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943738);
  }
  return result;
}

unint64_t sub_261A0CBF4()
{
  unint64_t result = qword_26A943770;
  if (!qword_26A943770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943770);
  }
  return result;
}

uint64_t sub_261A0CC48(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_261A0CC60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_261A0CCBC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_261A0CCCC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_261A0CD08()
{
  unint64_t result = qword_26A9437B8;
  if (!qword_26A9437B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9437B8);
  }
  return result;
}

unint64_t sub_261A0CD5C()
{
  unint64_t result = qword_26A9437C0;
  if (!qword_26A9437C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9437C0);
  }
  return result;
}

unint64_t sub_261A0CDB0()
{
  unint64_t result = qword_26A9437D0;
  if (!qword_26A9437D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9437D0);
  }
  return result;
}

uint64_t sub_261A0CE04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 176);
  uint64_t v3 = *(void *)(a1 + 184);
  uint64_t v4 = *(void *)(a1 + 192);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_261A0CC48(v2, v3, v4, v5);
  return a1;
}

uint64_t sub_261A0CE8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 176);
  uint64_t v3 = *(void *)(a1 + 184);
  uint64_t v4 = *(void *)(a1 + 192);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 200);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261A0C9E4(v2, v3, v4, v5);
  return a1;
}

uint64_t destroy for DemoScenarioProfile()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DemoScenarioProfile(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DemoScenarioProfile(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *assignWithTake for DemoScenarioProfile(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DemoScenarioProfile(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DemoScenarioProfile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DemoScenarioProfile()
{
  return &type metadata for DemoScenarioProfile;
}

uint64_t destroy for DemoTrainingLoadValues()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s9WorkoutUI22DemoTrainingLoadValuesVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DemoTrainingLoadValues(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DemoTrainingLoadValues(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DemoTrainingLoadValues()
{
  return &type metadata for DemoTrainingLoadValues;
}

uint64_t initializeBufferWithCopyOfBuffer for DemoQuantity(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DemoQuantity()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for DemoQuantity(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DemoQuantity(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DemoQuantity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DemoQuantity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DemoQuantity()
{
  return &type metadata for DemoQuantity;
}

uint64_t destroy for DemoGoal(uint64_t a1)
{
  return sub_261A0C9E4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for DemoGoal(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_261A0CC48(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DemoGoal(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_261A0CC48(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_261A0C9E4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DemoGoal(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_261A0C9E4(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DemoGoal(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DemoGoal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_261A0D61C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_261A0D634(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 3;
  if (a2 >= 3)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 3;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DemoGoal()
{
  return &type metadata for DemoGoal;
}

uint64_t destroy for DemoWorkout(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 176);
  uint64_t v3 = *(void *)(a1 + 184);
  uint64_t v4 = *(void *)(a1 + 192);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 200);
  return sub_261A0C9E4(v2, v3, v4, v5);
}

uint64_t initializeWithCopy for DemoWorkout(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v4 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v4;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v5 = *(void *)(a2 + 176);
  uint64_t v6 = *(void *)(a2 + 184);
  uint64_t v7 = *(void *)(a2 + 192);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_261A0CC48(v5, v6, v7, v8);
  *(void *)(a1 + 176) = v5;
  *(void *)(a1 + 184) = v6;
  *(void *)(a1 + 192) = v7;
  *(unsigned char *)(a1 + 200) = v8;
  return a1;
}

uint64_t assignWithCopy for DemoWorkout(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v2[2];
  *(void *)(a1 + 24) = v2[3];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)v2 + 32);
  *(unsigned char *)(a1 + 33) = *((unsigned char *)v2 + 33);
  uint64_t v4 = v2[5];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)v2 + 48);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 56) = v2[7];
  *(void *)(a1 + 64) = v2[8];
  *(void *)(a1 + 72) = v2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = v2[10];
  *(void *)(a1 + 88) = v2[11];
  *(void *)(a1 + 96) = v2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = v2[13];
  *(void *)(a1 + 112) = v2[14];
  *(void *)(a1 + 120) = v2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = v2[16];
  *(unsigned char *)(a1 + 136) = *((unsigned char *)v2 + 136);
  *(void *)(a1 + 128) = v5;
  uint64_t v6 = v2[18];
  *(unsigned char *)(a1 + 152) = *((unsigned char *)v2 + 152);
  *(void *)(a1 + 144) = v6;
  uint64_t v7 = v2[20];
  *(unsigned char *)(a1 + 168) = *((unsigned char *)v2 + 168);
  *(void *)(a1 + 160) = v7;
  uint64_t v8 = v2[22];
  uint64_t v9 = v2[23];
  uint64_t v10 = v2[24];
  LOBYTE(v2) = *((unsigned char *)v2 + 200);
  sub_261A0CC48(v8, v9, v10, v2);
  uint64_t v11 = *(void *)(a1 + 176);
  uint64_t v12 = *(void *)(a1 + 184);
  uint64_t v13 = *(void *)(a1 + 192);
  *(void *)(a1 + 176) = v8;
  *(void *)(a1 + 184) = v9;
  *(void *)(a1 + 192) = v10;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 200);
  *(unsigned char *)(a1 + 200) = (_BYTE)v2;
  sub_261A0C9E4(v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy201_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for DemoWorkout(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v8 = *(void *)(a2 + 192);
  char v9 = *(unsigned char *)(a2 + 200);
  uint64_t v10 = *(void *)(a1 + 176);
  uint64_t v11 = *(void *)(a1 + 184);
  uint64_t v12 = *(void *)(a1 + 192);
  unsigned __int8 v13 = *(unsigned char *)(a1 + 200);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = v8;
  *(unsigned char *)(a1 + 200) = v9;
  sub_261A0C9E4(v10, v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for DemoWorkout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 201)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DemoWorkout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 200) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 201) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 201) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DemoWorkout()
{
  return &type metadata for DemoWorkout;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DemoWorkout.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DemoWorkout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261A0DC9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

uint64_t sub_261A0DCC4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_261A0DCCC(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DemoWorkout.CodingKeys()
{
  return &type metadata for DemoWorkout.CodingKeys;
}

ValueMetadata *type metadata accessor for DemoGoal.CodingKeys()
{
  return &type metadata for DemoGoal.CodingKeys;
}

ValueMetadata *type metadata accessor for DemoGoal.OpenCodingKeys()
{
  return &type metadata for DemoGoal.OpenCodingKeys;
}

uint64_t sub_261A0DD18()
{
  return 0;
}

ValueMetadata *type metadata accessor for DemoGoal.DistanceCodingKeys()
{
  return &type metadata for DemoGoal.DistanceCodingKeys;
}

ValueMetadata *type metadata accessor for DemoGoal.TimeCodingKeys()
{
  return &type metadata for DemoGoal.TimeCodingKeys;
}

uint64_t getEnumTagSinglePayload for WorkoutUIFeatures(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s9WorkoutUI8DemoGoalO18DistanceCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x261A0DE2CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DemoGoal.EnergyCodingKeys()
{
  return &type metadata for DemoGoal.EnergyCodingKeys;
}

unsigned char *sub_261A0DE6C(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DemoQuantity.CodingKeys()
{
  return &type metadata for DemoQuantity.CodingKeys;
}

uint64_t getEnumTagSinglePayload for WorkoutAnimationStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9WorkoutUI12DemoQuantityV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261A0DFE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DemoTrainingLoadValues.CodingKeys()
{
  return &type metadata for DemoTrainingLoadValues.CodingKeys;
}

uint64_t _s20OvernightVitalsStateOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9WorkoutUI8DemoGoalO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261A0E178);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DemoScenarioProfile.CodingKeys()
{
  return &type metadata for DemoScenarioProfile.CodingKeys;
}

unint64_t sub_261A0E1B4()
{
  unint64_t result = qword_26A9437D8;
  if (!qword_26A9437D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9437D8);
  }
  return result;
}

unint64_t sub_261A0E20C()
{
  unint64_t result = qword_26A9437E0;
  if (!qword_26A9437E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9437E0);
  }
  return result;
}

unint64_t sub_261A0E264()
{
  unint64_t result = qword_26A9437E8;
  if (!qword_26A9437E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9437E8);
  }
  return result;
}

unint64_t sub_261A0E2BC()
{
  unint64_t result = qword_26A9437F0;
  if (!qword_26A9437F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9437F0);
  }
  return result;
}

unint64_t sub_261A0E314()
{
  unint64_t result = qword_26A9437F8;
  if (!qword_26A9437F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9437F8);
  }
  return result;
}

unint64_t sub_261A0E36C()
{
  unint64_t result = qword_26A943800;
  if (!qword_26A943800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943800);
  }
  return result;
}

unint64_t sub_261A0E3C4()
{
  unint64_t result = qword_26A943808;
  if (!qword_26A943808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943808);
  }
  return result;
}

unint64_t sub_261A0E41C()
{
  unint64_t result = qword_26A943810;
  if (!qword_26A943810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943810);
  }
  return result;
}

unint64_t sub_261A0E474()
{
  unint64_t result = qword_26A943818;
  if (!qword_26A943818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943818);
  }
  return result;
}

unint64_t sub_261A0E4CC()
{
  unint64_t result = qword_26A943820;
  if (!qword_26A943820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943820);
  }
  return result;
}

unint64_t sub_261A0E524()
{
  unint64_t result = qword_26A943828;
  if (!qword_26A943828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943828);
  }
  return result;
}

unint64_t sub_261A0E57C()
{
  unint64_t result = qword_26A943830;
  if (!qword_26A943830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943830);
  }
  return result;
}

unint64_t sub_261A0E5D4()
{
  unint64_t result = qword_26A943838;
  if (!qword_26A943838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943838);
  }
  return result;
}

unint64_t sub_261A0E62C()
{
  unint64_t result = qword_26A943840;
  if (!qword_26A943840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943840);
  }
  return result;
}

unint64_t sub_261A0E684()
{
  unint64_t result = qword_26A943848;
  if (!qword_26A943848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943848);
  }
  return result;
}

unint64_t sub_261A0E6DC()
{
  unint64_t result = qword_26A943850;
  if (!qword_26A943850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943850);
  }
  return result;
}

unint64_t sub_261A0E734()
{
  unint64_t result = qword_26A943858;
  if (!qword_26A943858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943858);
  }
  return result;
}

unint64_t sub_261A0E78C()
{
  unint64_t result = qword_26A943860;
  if (!qword_26A943860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943860);
  }
  return result;
}

unint64_t sub_261A0E7E4()
{
  unint64_t result = qword_26A943868;
  if (!qword_26A943868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943868);
  }
  return result;
}

unint64_t sub_261A0E83C()
{
  unint64_t result = qword_26A943870;
  if (!qword_26A943870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943870);
  }
  return result;
}

unint64_t sub_261A0E894()
{
  unint64_t result = qword_26A943878;
  if (!qword_26A943878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943878);
  }
  return result;
}

unint64_t sub_261A0E8EC()
{
  unint64_t result = qword_26A943880;
  if (!qword_26A943880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943880);
  }
  return result;
}

unint64_t sub_261A0E944()
{
  unint64_t result = qword_26A943888;
  if (!qword_26A943888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943888);
  }
  return result;
}

unint64_t sub_261A0E99C()
{
  unint64_t result = qword_26A943890;
  if (!qword_26A943890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943890);
  }
  return result;
}

unint64_t sub_261A0E9F4()
{
  unint64_t result = qword_26A943898;
  if (!qword_26A943898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943898);
  }
  return result;
}

unint64_t sub_261A0EA4C()
{
  unint64_t result = qword_26A9438A0;
  if (!qword_26A9438A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9438A0);
  }
  return result;
}

uint64_t sub_261A0EAA0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  char v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_261A0EB28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61567961446C6C61 && a2 == 0xEC0000007365756CLL;
  if (v2 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000261B9D980 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000261B9D9A0 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7374756F6B726F77 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_261B8FBA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

char *sub_261A0ECF0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  unint64_t result = (char *)sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261A0EDDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261A0EED0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61566574756361 && a2 == 0xEB00000000736575;
  if (v2 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5663696E6F726863 && a2 == 0xED00007365756C61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_261B8FBA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_261A0F000(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953066613 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_261B8FBA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_261A0F0DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1852141679 && a2 == 0xE400000000000000;
  if (v2 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xE800000000000000 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701669236 && a2 == 0xE400000000000000 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x796772656E65 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_261B8FBA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_261A0F270(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974697669746361 && a2 == 0xEC00000065707954;
  if (v2 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000261B9D9C0 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F6F646E497369 && a2 == 0xE800000000000000 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x77536C6F6F507369 && a2 == 0xEA00000000006D69 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74726F666665 && a2 == 0xE600000000000000 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000261B9D9E0 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000261B9DA00 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7369446C61746F74 && a2 == 0xED000065636E6174 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000261B9DA20 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x74726165486E696DLL && a2 == 0xEC00000065746152 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x747261654878616DLL && a2 == 0xEC00000065746152 || (sub_261B8FBA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 1818324839 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_261B8FBA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t sub_261A0F7DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

char *sub_261A0F8D0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261A0F9BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261A0FB18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9438C8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t sub_261A0FC24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

uint64_t EffortMiniGraph.init(effort:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for EffortMiniGraph();
  *(void *)(a2 + *(int *)(v4 + 24)) = &unk_270DA2DA0;
  sub_2619F86F0(a1, a2, &qword_26A943910);
  unint64_t v5 = sub_261A10E0C(a1, (uint64_t)&unk_270DA2DA0);
  uint64_t result = sub_2619F8754(a1, &qword_26A943910);
  *(void *)(a2 + *(int *)(v4 + 20)) = v5;
  return result;
}

uint64_t type metadata accessor for EffortMiniGraph()
{
  uint64_t result = qword_26A943918;
  if (!qword_26A943918) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A0FE10()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A0FE6C()
{
  return sub_261B8FCA8();
}

uint64_t sub_261A0FEA8()
{
  return sub_261B8FCE8();
}

BOOL sub_261A0FF00(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t EffortMiniGraph.body.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EffortMiniGraph();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  sub_261A11118(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_261A11180((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a1 = sub_261A111E4;
  a1[1] = v7;
  return result;
}

uint64_t sub_261A1000C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_261B8D528();
  double v5 = v4;
  sub_261B8D528();
  double v7 = v6;
  *(void *)a2 = sub_261B8DAD8();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943948);
  return sub_261A10090(a1, a2 + *(int *)(v8 + 44), 2.0, v5, v7, 2.0);
}

uint64_t sub_261A10090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943950);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  char v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v17 = (uint64_t *)((char *)&v22 - v16);
  uint64_t *v17 = sub_261B8EC78();
  v17[1] = v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943958);
  sub_261A101DC(a1, (uint64_t)v17 + *(int *)(v19 + 44), a3, a4, a5, a6);
  sub_2619F86F0((uint64_t)v17, (uint64_t)v15, &qword_26A943950);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943960);
  sub_2619F86F0((uint64_t)v15, a2 + *(int *)(v20 + 48), &qword_26A943950);
  sub_2619F8754((uint64_t)v17, &qword_26A943950);
  return sub_2619F8754((uint64_t)v15, &qword_26A943950);
}

uint64_t sub_261A101DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v77 = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943968);
  uint64_t v75 = *(void *)(v11 - 8);
  uint64_t v76 = v11;
  MEMORY[0x270FA5388](v11);
  long long v63 = (void *)((char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v13 - 8);
  id v69 = (char *)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_261B8C2D8();
  uint64_t v68 = *(void *)(v70 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v70);
  long long v61 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60[2] = v16;
  MEMORY[0x270FA5388](v15);
  long long v62 = (char *)v60 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943970);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v74 = (uint64_t)v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v73 = (uint64_t)v60 - v21;
  uint64_t v71 = (char *)sub_261B8E838();
  uint64_t v67 = *((void *)v71 - 1);
  MEMORY[0x270FA5388](v71);
  long long v66 = (char *)v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943978);
  MEMORY[0x270FA5388](v23 - 8);
  char v25 = (double *)((char *)v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943980);
  uint64_t v27 = v26 - 8;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v72 = (uint64_t)v60 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)v60 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)v60 - v33;
  *(void *)char v25 = sub_261B8DAD8();
  v25[1] = a3;
  *((unsigned char *)v25 + 16) = 0;
  long long v65 = (char *)v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A943988) + 44);
  v60[0] = type metadata accessor for EffortMiniGraph();
  uint64_t v78 = *(void *)(a1 + *(int *)(v60[0] + 24));
  uint64_t KeyPath = swift_getKeyPath();
  char v35 = (double *)swift_allocObject();
  v35[2] = a4;
  v35[3] = a5;
  unsigned char v35[4] = a6;
  swift_bridgeObjectRetain();
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943990);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943998);
  uint64_t v37 = sub_2619F8AB8(&qword_26A9439A0, &qword_26A943990);
  unint64_t v38 = sub_261A11F5C();
  sub_261A11FB0();
  uint64_t v39 = v68;
  uint64_t KeyPath = v37;
  long long v65 = (char *)v36;
  v60[1] = v38;
  sub_261B8EBE8();
  uint64_t v40 = v66;
  (*(void (**)(char *, void, char *))(v67 + 104))(v66, *MEMORY[0x263F1B388], v71);
  uint64_t v41 = (uint64_t)v69;
  uint64_t v42 = MEMORY[0x263E4C7A0](v40, 0.157, 0.157, 0.169, 1.0);
  sub_2619F86F0((uint64_t)v25, (uint64_t)v32, &qword_26A943978);
  *(void *)&v32[*(int *)(v27 + 44)] = v42;
  uint64_t v43 = (uint64_t)v25;
  uint64_t v44 = v70;
  sub_2619F8754(v43, &qword_26A943978);
  uint64_t v71 = v34;
  sub_2619FB7EC((uint64_t)v32, (uint64_t)v34, &qword_26A943980);
  uint64_t v45 = a1;
  sub_2619F86F0(a1, v41, &qword_26A943910);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v41, 1, v44) == 1)
  {
    sub_2619F8754(v41, &qword_26A943910);
    uint64_t v46 = v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v73, 1, 1, v76);
  }
  else
  {
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 32);
    uint64_t v48 = v62;
    v47(v62, v41, v44);
    uint64_t v49 = sub_261B8DAD8();
    uint64_t v50 = (uint64_t)v63;
    uint64_t *v63 = v49;
    *(double *)(v50 + 8) = a3;
    *(unsigned char *)(v50 + 16) = 0;
    id v69 = (char *)(v50 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A9439C8) + 44));
    uint64_t v78 = *(void *)(v45 + *(int *)(v60[0] + 20));
    uint64_t v67 = swift_getKeyPath();
    uint64_t v51 = v61;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v61, v48, v44);
    unint64_t v52 = (*(unsigned __int8 *)(v39 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v53 = (double *)swift_allocObject();
    v53[2] = a4;
    v53[3] = a5;
    v53[4] = a6;
    v47((char *)v53 + v52, (uint64_t)v51, v44);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9439D0);
    sub_261A12198();
    sub_261B8EBE8();
    uint64_t v46 = v73;
    sub_2619FB7EC(v50, v73, &qword_26A943968);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v46, 0, 1, v76);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v48, v44);
  }
  uint64_t v55 = (uint64_t)v71;
  uint64_t v54 = v72;
  sub_2619F86F0((uint64_t)v71, v72, &qword_26A943980);
  uint64_t v56 = v74;
  sub_2619F86F0(v46, v74, &qword_26A943970);
  uint64_t v57 = v77;
  sub_2619F86F0(v54, v77, &qword_26A943980);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9439C0);
  sub_2619F86F0(v56, v57 + *(int *)(v58 + 48), &qword_26A943970);
  sub_2619F8754(v46, &qword_26A943970);
  sub_2619F8754(v55, &qword_26A943980);
  sub_2619F8754(v56, &qword_26A943970);
  return sub_2619F8754(v54, &qword_26A943980);
}

void sub_261A109E0(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  double v11 = sub_261B173DC(*a1);
  *(double *)&long long v19 = a3;
  *((double *)&v19 + 1) = a4;
  *(double *)&long long v20 = a5;
  double v12 = sub_261B173DC(v10);
  if (__OFSUB__(v10, v9))
  {
    __break(1u);
  }
  else if (!__OFADD__(v10 - v9, 1))
  {
    double v13 = (a3 + a5 * -3.0) / 10.0;
    double v14 = v13 * 0.5;
    double v15 = v13 / a4;
    double v16 = 1.0 - v13 / a4;
    double v17 = v13 / a4 + v16 * v12;
    double v18 = v15 + v16 * v11;
    sub_261B8EC98();
    sub_261B8D4D8();
    *(double *)a2 = v18;
    *(double *)(a2 + 8) = v17;
    *(double *)(a2 + 16) = v14;
    *(_OWORD *)(a2 + 24) = v19;
    *(_OWORD *)(a2 + 40) = v20;
    *(_OWORD *)(a2 + 56) = v21;
    return;
  }
  __break(1u);
}

void sub_261A10AF8(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v12 - 8);
  double v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  double v35 = a4;
  double v36 = a5;
  double v37 = a6;
  double v17 = sub_261B173DC(v15);
  double v35 = a4;
  double v36 = a5;
  double v37 = a6;
  double v18 = sub_261B173DC(v16);
  if (__OFSUB__(v16, v15))
  {
    __break(1u);
  }
  else if (!__OFADD__(v16 - v15, 1))
  {
    double v19 = (a4 + a6 * -3.0) / 10.0;
    double v20 = v19 * 0.5;
    double v21 = v19 / a5;
    double v22 = 1.0 - v19 / a5;
    double v23 = v19 / a5 + v22 * v18;
    double v24 = v21 + v22 * v17;
    sub_261B8EC98();
    sub_261B8D4D8();
    double v25 = v35;
    char v26 = LOBYTE(v36);
    double v27 = v37;
    char v28 = v38;
    uint64_t v29 = v39;
    uint64_t v30 = v40;
    uint64_t v31 = sub_261B8C2D8();
    uint64_t v32 = a2;
    uint64_t v33 = *(void *)(v31 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v14, v32, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v14, 0, 1, v31);
    uint64_t v34 = _s9WorkoutUI12EffortColorsV9textColor8exertion05SwiftB00F0V0A4Core18AppleExertionScaleOSg_tFZ_0((uint64_t)v14);
    sub_2619F8754((uint64_t)v14, &qword_26A943910);
    *(double *)a3 = v24;
    *(double *)(a3 + 8) = v23;
    *(double *)(a3 + 16) = v20;
    *(double *)(a3 + 24) = v25;
    *(unsigned char *)(a3 + 32) = v26;
    *(double *)(a3 + 40) = v27;
    *(unsigned char *)(a3 + 48) = v28;
    *(void *)(a3 + 56) = v29;
    *(void *)(a3 + 64) = v30;
    *(void *)(a3 + 72) = v34;
    return;
  }
  __break(1u);
}

uint64_t sub_261A10D20@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  sub_261A11118(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_261A11180((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a2 = sub_261A111E4;
  a2[1] = v7;
  return result;
}

void *sub_261A10E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8BE88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2619F86F0(a1, (uint64_t)v10, &qword_26A943910);
  uint64_t v11 = sub_261B8C2D8();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2619F8754((uint64_t)v10, &qword_26A943910);
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_261B8C278();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  uint64_t v13 = sub_261B8BE78();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v14 = *(void *)(a2 + 16);
  if (!v14) {
    return (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  uint64_t v16 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v18 = a2 + 16 * v15;
    long long v19 = *(_OWORD *)(v18 + 32);
    uint64_t v20 = *(void *)(v18 + 32);
    if (v13 >= v20)
    {
      long long v30 = *(_OWORD *)(v18 + 32);
      uint64_t v21 = *((void *)&v19 + 1);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (v21 >= v13)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v16 = sub_261A0B094(0, v16[2] + 1, 1, v16);
        }
        unint64_t v27 = v16[2];
        unint64_t v26 = v16[3];
        if (v27 >= v26 >> 1) {
          uint64_t v16 = sub_261A0B094((void *)(v26 > 1), v27 + 1, 1, v16);
        }
        v16[2] = v27 + 1;
        double v17 = &v16[2 * v27];
        v17[4] = v20;
        v17[5] = v13;
      }
      else
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v16 = sub_261A0B094(0, v16[2] + 1, 1, v16);
        }
        unint64_t v24 = v16[2];
        unint64_t v23 = v16[3];
        long long v25 = v30;
        if (v24 >= v23 >> 1)
        {
          char v28 = sub_261A0B094((void *)(v23 > 1), v24 + 1, 1, v16);
          long long v25 = v30;
          uint64_t v16 = v28;
        }
        v16[2] = v24 + 1;
        *(_OWORD *)&v16[2 * v24 + 4] = v25;
      }
    }
    ++v15;
  }
  while (v14 != v15);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_261A11118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EffortMiniGraph();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A11180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EffortMiniGraph();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A111E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for EffortMiniGraph(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_261B8C2D8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v11) = *(uint64_t *)((char *)a2 + v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EffortMiniGraph(uint64_t a1)
{
  uint64_t v2 = sub_261B8C2D8();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for EffortMiniGraph(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8C2D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for EffortMiniGraph(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8C2D8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for EffortMiniGraph(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8C2D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  return a1;
}

char *assignWithTake for EffortMiniGraph(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8C2D8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EffortMiniGraph(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A11A48);
}

uint64_t sub_261A11A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for EffortMiniGraph(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A11B20);
}

uint64_t sub_261A11B20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_261A11BE0()
{
  sub_261A11C7C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_261A11C7C()
{
  if (!qword_26A943928)
  {
    sub_261B8C2D8();
    unint64_t v0 = sub_261B8F6D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A943928);
    }
  }
}

uint64_t sub_261A11CD4()
{
  return sub_2619F8AB8(&qword_26A943930, &qword_26A943938);
}

ValueMetadata *type metadata accessor for EffortMiniGraph.ZoneSection()
{
  return &type metadata for EffortMiniGraph.ZoneSection;
}

unint64_t sub_261A11D24()
{
  unint64_t result = qword_26A943940;
  if (!qword_26A943940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943940);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = *(void *)(type metadata accessor for EffortMiniGraph() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_261B8C2D8();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_261A11EC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for EffortMiniGraph() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_261A1000C(v4, a1);
}

uint64_t sub_261A11F40()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_261A11F50(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_261A109E0(a1, a2, v2[2], v2[3], v2[4]);
}

unint64_t sub_261A11F5C()
{
  unint64_t result = qword_26A9439A8;
  if (!qword_26A9439A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9439A8);
  }
  return result;
}

unint64_t sub_261A11FB0()
{
  unint64_t result = qword_26A9439B0;
  if (!qword_26A9439B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943998);
    sub_261A1202C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9439B0);
  }
  return result;
}

unint64_t sub_261A1202C()
{
  unint64_t result = qword_26A9439B8;
  if (!qword_26A9439B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9439B8);
  }
  return result;
}

uint64_t sub_261A12080()
{
  uint64_t v1 = sub_261B8C2D8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_261A12110(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_261B8C2D8() - 8);
  double v6 = v2[2];
  double v7 = v2[3];
  double v8 = v2[4];
  uint64_t v9 = (uint64_t)v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  sub_261A10AF8(a1, v9, a2, v6, v7, v8);
}

unint64_t sub_261A12198()
{
  unint64_t result = qword_26A9439D8;
  if (!qword_26A9439D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9439D0);
    sub_261A11FB0();
    sub_2619F8AB8((unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9439D8);
  }
  return result;
}

BOOL static WorkoutAnimationStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WorkoutAnimationStyle.hash(into:)()
{
  return sub_261B8FCA8();
}

uint64_t WorkoutAnimationStyle.hashValue.getter()
{
  return sub_261B8FCE8();
}

void sub_261A122C4(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_261A122CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_261A12660();
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.workoutAnimationStyle.getter()
{
  sub_261A12378();
  return sub_261B8DA78();
}

unint64_t sub_261A12378()
{
  unint64_t result = qword_26A9439F0;
  if (!qword_26A9439F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9439F0);
  }
  return result;
}

uint64_t sub_261A123CC@<X0>(unsigned char *a1@<X8>)
{
  sub_261A12378();
  uint64_t result = sub_261B8DA78();
  *a1 = v3;
  return result;
}

uint64_t sub_261A1241C()
{
  return sub_261B8DA88();
}

uint64_t EnvironmentValues.workoutAnimationStyle.setter()
{
  return sub_261B8DA88();
}

uint64_t (*EnvironmentValues.workoutAnimationStyle.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = sub_261A12378();
  sub_261B8DA78();
  return sub_261A12514;
}

uint64_t sub_261A12514(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_261B8DA88();
}

uint64_t View.workoutAnimationStyle(_:)()
{
  return swift_release();
}

uint64_t sub_261A125C0@<X0>(unsigned char *a1@<X8>)
{
  sub_261A12378();
  uint64_t result = sub_261B8DA78();
  *a1 = v3;
  return result;
}

uint64_t sub_261A12610()
{
  return sub_261B8DA88();
}

unint64_t sub_261A12660()
{
  unint64_t result = qword_26A9439F8;
  if (!qword_26A9439F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9439F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WorkoutAnimationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261A12780);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutAnimationStyle()
{
  return &type metadata for WorkoutAnimationStyle;
}

uint64_t sub_261A127B8()
{
  return swift_getWitnessTable();
}

unint64_t sub_261A12828()
{
  unint64_t result = qword_26A943A08;
  if (!qword_26A943A08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943A00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943A08);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutAnimationStyleKey()
{
  return &type metadata for WorkoutAnimationStyleKey;
}

double ElapsedTimeView.elapsedTime.getter()
{
  return *(double *)v0;
}

void ElapsedTimeView.elapsedTime.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*ElapsedTimeView.elapsedTime.modify())()
{
  return nullsub_1;
}

uint64_t ElapsedTimeView.showSubseconds.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t ElapsedTimeView.showSubseconds.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*ElapsedTimeView.showSubseconds.modify())()
{
  return nullsub_1;
}

WorkoutUI::ElapsedTimeView __swiftcall ElapsedTimeView.init(elapsedTime:showSubseconds:)(Swift::Double elapsedTime, Swift::Bool showSubseconds)
{
  *(Swift::Double *)uint64_t v2 = elapsedTime;
  *(unsigned char *)(v2 + 8) = showSubseconds;
  result.elapsedTime = elapsedTime;
  result.showSubseconds = showSubseconds;
  return result;
}

uint64_t ElapsedTimeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v75 = sub_261B8DBD8();
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v72 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_261B8DED8();
  uint64_t v70 = *(void *)(v3 - 8);
  uint64_t v71 = v3;
  MEMORY[0x270FA5388](v3);
  id v69 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_261B8D748() - 8;
  MEMORY[0x270FA5388](v65);
  long long v64 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A10) - 8;
  MEMORY[0x270FA5388](v59);
  uint64_t v58 = (uint64_t *)((char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = sub_261B8D668();
  uint64_t v7 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A18) - 8;
  MEMORY[0x270FA5388](v56);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A20);
  MEMORY[0x270FA5388](v61);
  long long v60 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A28);
  uint64_t v68 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  long long v62 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A30);
  MEMORY[0x270FA5388](v67);
  long long v63 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = *(unsigned char *)(v1 + 8);
  uint64_t v55 = sub_261B8DAD8();
  sub_261A130C8(v15, &v78);
  uint64_t v16 = *((void *)&v78 + 1);
  uint64_t v53 = v78;
  uint64_t v17 = v79;
  uint64_t v52 = v80;
  int v54 = v82;
  uint64_t v18 = v81;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = *MEMORY[0x263F18DC8];
  uint64_t v51 = v7;
  double v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  unint64_t v23 = v9;
  uint64_t v50 = v9;
  unint64_t v24 = v9;
  uint64_t v25 = v57;
  v22(v24, v21, v57);
  unint64_t v26 = v58;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v58 + *(int *)(v59 + 36), v23, v25);
  uint64_t *v26 = v20;
  uint64_t v27 = (uint64_t)v26;
  sub_2619F86F0((uint64_t)v26, (uint64_t)&v11[*(int *)(v56 + 44)], &qword_26A943A10);
  *(void *)uint64_t v11 = v55;
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  uint64_t v28 = v53;
  *((void *)v11 + 3) = v53;
  *((void *)v11 + 4) = v16;
  uint64_t v29 = v52;
  *((void *)v11 + 5) = v17;
  *((void *)v11 + 6) = v29;
  v11[56] = v18;
  LOBYTE(v26) = v54;
  v11[57] = v54;
  *((_WORD *)v11 + 32) = 256;
  *((void *)v11 + 9) = KeyPath;
  v11[80] = 0;
  sub_261A1382C(v28, v16, v17, v29, v18, (char)v26);
  sub_2619F7774(KeyPath, 0);
  sub_2619F8754(v27, &qword_26A943A10);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v25);
  sub_261A138CC(v28, v16, v17, v29, v18, (char)v26);
  sub_2619F7790(KeyPath, 0);
  long long v30 = v64;
  uint64_t v31 = &v64[*(int *)(v65 + 28)];
  uint64_t v32 = *MEMORY[0x263F19860];
  uint64_t v33 = sub_261B8DBB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v31, v32, v33);
  __asm { FMOV            V0.2D, #5.0 }
  _OWORD *v30 = _Q0;
  uint64_t v39 = v61;
  uint64_t v40 = (uint64_t)v60;
  uint64_t v41 = (uint64_t)&v60[*(int *)(v61 + 36)];
  sub_261A1396C((uint64_t)v30, v41);
  *(unsigned char *)(v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A943A38) + 36)) = 0;
  sub_2619F86F0((uint64_t)v11, v40, &qword_26A943A18);
  sub_261A139D0((uint64_t)v30);
  sub_2619F8754((uint64_t)v11, &qword_26A943A18);
  uint64_t v42 = v69;
  sub_261B8DEB8();
  unint64_t v43 = sub_261A13A2C();
  uint64_t v44 = v62;
  sub_261B8E6B8();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v71);
  sub_2619F8754(v40, &qword_26A943A20);
  sub_261B8C358();
  *(void *)&long long v78 = sub_261B8C348();
  *((void *)&v78 + 1) = v45;
  uint64_t v76 = v39;
  unint64_t v77 = v43;
  swift_getOpaqueTypeConformance2();
  sub_261A029C4();
  uint64_t v46 = (uint64_t)v63;
  uint64_t v47 = v66;
  sub_261B8E668();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v47);
  uint64_t v48 = v72;
  sub_261B8DBC8();
  sub_261B8D678();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v48, v75);
  return sub_2619F8754(v46, &qword_26A943A30);
}

double sub_261A130C8@<D0>(char a1@<W0>, _OWORD *a2@<X8>)
{
  double v36 = a2;
  uint64_t v3 = sub_261B8FB88();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8FD48();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_261B8FD58();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_261B8F3D8())
  {
    sub_261B8FD78();
    uint64_t v35 = v15;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8E208], v3);
    sub_261B8FD38();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_261B8A748();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_261A13DB4((unint64_t *)&qword_26A943A90, MEMORY[0x263F07E80]);
    sub_261B8FD68();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    long long v37 = v40;
    sub_261A029C4();
    uint64_t v16 = sub_261B8E3D8();
    uint64_t v18 = v16;
    uint64_t v19 = v17;
    *(void *)&long long v37 = v16;
    *((void *)&v37 + 1) = v17;
    char v21 = v20 & 1;
    *(void *)&long long v38 = v20 & 1;
    *((void *)&v38 + 1) = v22;
    LOBYTE(v39) = 0;
  }
  else
  {
    if ((a1 & 1) == 0)
    {
      sub_261B8FD78();
      uint64_t v35 = v26;
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8E208], v3);
      sub_261B8FD28();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_261B8A748();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_261A13DB4((unint64_t *)&qword_26A943A90, MEMORY[0x263F07E80]);
      sub_261B8FD68();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      long long v37 = v40;
      sub_261A029C4();
      *(void *)&long long v37 = sub_261B8E3D8();
      *((void *)&v37 + 1) = v28;
      *(void *)&long long v38 = v27 & 1;
      *((void *)&v38 + 1) = v29;
      __int16 v39 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A98);
      sub_261A13DFC();
      sub_261B8DD68();
      goto LABEL_7;
    }
    sub_261B8FD78();
    uint64_t v35 = v23;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8E208], v3);
    sub_261B8FD28();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_261B8A748();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_261A13DB4((unint64_t *)&qword_26A943A90, MEMORY[0x263F07E80]);
    sub_261B8FD68();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    long long v37 = v40;
    sub_261A029C4();
    uint64_t v16 = sub_261B8E3D8();
    uint64_t v18 = v16;
    uint64_t v19 = v17;
    char v21 = v24 & 1;
    *(void *)&long long v37 = v16;
    *((void *)&v37 + 1) = v17;
    *(void *)&long long v38 = v24 & 1;
    *((void *)&v38 + 1) = v25;
    LOBYTE(v39) = 1;
  }
  sub_261A001D0(v16, v17, v21);
  swift_bridgeObjectRetain();
  sub_261B8DD68();
  long long v37 = v40;
  long long v38 = v41;
  __int16 v39 = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A98);
  sub_261A13DFC();
  sub_261B8DD68();
  sub_261A02A18(v18, v19, v21);
  swift_bridgeObjectRelease();
LABEL_7:
  double result = *(double *)&v40;
  long long v31 = v41;
  unsigned __int8 v32 = v42;
  char v33 = v43;
  uint64_t v34 = v36;
  *double v36 = v40;
  v34[1] = v31;
  *((unsigned char *)v34 + 32) = v32;
  *((unsigned char *)v34 + 33) = v33;
  return result;
}

uint64_t sub_261A1370C()
{
  return sub_261B8D848();
}

uint64_t sub_261A13730(uint64_t a1)
{
  uint64_t v2 = sub_261B8D668();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_261B8D858();
}

uint64_t sub_261A13804()
{
  return sub_261B8D848();
}

uint64_t sub_261A1382C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    sub_261A001D0(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  else
  {
    return sub_261A13890(a1, a2, a3);
  }
}

uint64_t sub_261A13890(uint64_t a1, uint64_t a2, char a3)
{
  sub_261A001D0(a1, a2, a3 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_261A138CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    sub_261A02A18(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_261A13930(a1, a2, a3);
  }
}

uint64_t sub_261A13930(uint64_t a1, uint64_t a2, char a3)
{
  sub_261A02A18(a1, a2, a3 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_261A1396C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8D748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A139D0(uint64_t a1)
{
  uint64_t v2 = sub_261B8D748();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_261A13A2C()
{
  unint64_t result = qword_26A943A40;
  if (!qword_26A943A40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943A20);
    sub_261A13ACC();
    sub_2619F8AB8(&qword_26A943A78, &qword_26A943A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943A40);
  }
  return result;
}

unint64_t sub_261A13ACC()
{
  unint64_t result = qword_26A943A48;
  if (!qword_26A943A48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943A18);
    sub_261A13B6C();
    sub_2619F8AB8(&qword_26A943A70, &qword_26A943A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943A48);
  }
  return result;
}

unint64_t sub_261A13B6C()
{
  unint64_t result = qword_26A943A50;
  if (!qword_26A943A50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943A58);
    sub_2619F8AB8(&qword_26A943A60, &qword_26A943A68);
    sub_2619FBA38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943A50);
  }
  return result;
}

uint64_t sub_261A13C0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for ElapsedTimeView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ElapsedTimeView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ElapsedTimeView()
{
  return &type metadata for ElapsedTimeView;
}

unint64_t sub_261A13CD4()
{
  unint64_t result = qword_26A943A80;
  if (!qword_26A943A80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943A30);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943A20);
    sub_261A13A2C();
    swift_getOpaqueTypeConformance2();
    sub_261A13DB4((unint64_t *)&qword_26A943A88, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943A80);
  }
  return result;
}

uint64_t sub_261A13DB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A13DFC()
{
  unint64_t result = qword_26A943AA0;
  if (!qword_26A943AA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943AA0);
  }
  return result;
}

uint64_t EmbeddedMultiSportConfigurationView.init(multiSportConfiguration:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t EmbeddedMultiSportConfigurationView.body.getter()
{
  return sub_261B8EBF8();
}

void sub_261A13F88(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_261B8DED8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A943B08);
  MEMORY[0x270FA5388](v44);
  uint64_t v46 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_261B8D798();
  uint64_t v45 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v49 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943AC0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_261B8DAD8();
  uint64_t v42 = sub_261B8BA28();
  id v12 = objc_msgSend(self, sel_keyColors);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v47 = v9;
    uint64_t v48 = v7;
    long long v38 = v5;
    uint64_t v39 = a1;
    uint64_t v40 = v3;
    uint64_t v41 = v2;
    id v14 = objc_msgSend(v12, sel_nonGradientTextColor);

    if (v14)
    {
      uint64_t v36 = MEMORY[0x263E4C7B0](v14);
      uint64_t v37 = sub_261B8DBF8();
      uint64_t v15 = (void *)sub_261B8BA28();
      id v16 = objc_msgSend(v15, sel_localizedName);

      uint64_t v17 = sub_261B8F0F8();
      uint64_t v19 = v18;

      uint64_t v50 = v17;
      uint64_t v51 = v19;
      sub_261A029C4();
      uint64_t v20 = sub_261B8E3D8();
      uint64_t v22 = v21;
      uint64_t v35 = v23;
      LOBYTE(v17) = v24 & 1;
      uint64_t v25 = sub_261B8E898();
      uint64_t KeyPath = swift_getKeyPath();
      char v27 = v49;
      sub_261B8D788();
      uint64_t v28 = swift_getKeyPath();
      uint64_t v29 = v45;
      long long v30 = v46;
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v46 + v44[7], v27, v48);
      uint64_t *v30 = v28;
      sub_261A148BC((uint64_t)v30, (uint64_t)&v11[*(int *)(v47 + 36)]);
      long long v31 = (void *)v42;
      *(void *)uint64_t v11 = v42;
      *((void *)v11 + 1) = 2;
      uint64_t v32 = v37;
      *((void *)v11 + 2) = v36;
      v11[24] = 1;
      *((void *)v11 + 4) = v32;
      *((void *)v11 + 5) = 0;
      v11[48] = 1;
      *((void *)v11 + 7) = v20;
      *((void *)v11 + 8) = v22;
      v11[72] = v17;
      *((void *)v11 + 10) = v35;
      *((void *)v11 + 11) = 0x4022000000000000;
      *((void *)v11 + 12) = v43;
      *((void *)v11 + 13) = KeyPath;
      *((void *)v11 + 14) = v25;
      uint64_t v44 = v31;
      swift_retain();
      sub_261A001D0(v20, v22, v17);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_2619F8754((uint64_t)v30, &qword_26A943B08);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v49, v48);
      swift_release();

      sub_261A02A18(v20, v22, v17);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      char v33 = v38;
      sub_261B8DEC8();
      sub_261A143F8();
      sub_261B8E6B8();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v41);
      sub_2619F8754((uint64_t)v11, &qword_26A943AC0);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_261A143F8()
{
  unint64_t result = qword_26A943AC8;
  if (!qword_26A943AC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943AC0);
    sub_261A14498();
    sub_2619F8AB8(&qword_26A943B00, &qword_26A943B08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943AC8);
  }
  return result;
}

unint64_t sub_261A14498()
{
  unint64_t result = qword_26A943AD0;
  if (!qword_26A943AD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943AD8);
    sub_2619F8AB8(&qword_26A943AE0, &qword_26A943AE8);
    sub_2619F8AB8((unint64_t *)&qword_26A943AF0, &qword_26A943AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943AD0);
  }
  return result;
}

unint64_t sub_261A1455C()
{
  unint64_t result = qword_26A943B10;
  if (!qword_26A943B10)
  {
    sub_261B8B848();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943B10);
  }
  return result;
}

uint64_t sub_261A145B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A145D0()
{
  return sub_261B8EBF8();
}

void *initializeBufferWithCopyOfBuffer for EffortUtilities.WorkoutAndActivityKey(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for EffortUtilities.WorkoutAndActivityKey(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for EmbeddedMultiSportConfigurationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for EffortUtilities.WorkoutAndActivityKey(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for EmbeddedMultiSportConfigurationView()
{
  return &type metadata for EmbeddedMultiSportConfigurationView;
}

unint64_t sub_261A14804()
{
  unint64_t result = qword_26A943B18;
  if (!qword_26A943B18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943B20);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943AC0);
    sub_261A143F8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943B18);
  }
  return result;
}

uint64_t sub_261A148BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FIUIDistanceUnit.init(hkUnit:)(void *a1)
{
  uint64_t v2 = sub_261A14958(a1);

  return v2;
}

uint64_t sub_261A14958(void *a1)
{
  sub_261A14B88();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_meterUnit);
  char v4 = sub_261B8F6A8();

  if (v4) {
    return 1;
  }
  id v6 = objc_msgSend(v2, sel_meterUnitWithMetricPrefix_, 9);
  char v7 = sub_261B8F6A8();

  if (v7) {
    return 2;
  }
  id v8 = objc_msgSend(v2, sel_mileUnit);
  char v9 = sub_261B8F6A8();

  if (v9) {
    return 3;
  }
  id v10 = objc_msgSend(v2, sel_yardUnit);
  char v11 = sub_261B8F6A8();

  if (v11) {
    return 4;
  }
  id v12 = objc_msgSend(v2, sel_footUnit);
  char v13 = sub_261B8F6A8();

  if (v13) {
    return 5;
  }
  sub_261B8F8C8();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(a1, sel_description);
  sub_261B8F0F8();

  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_261B8F9C8();
  __break(1u);
  return result;
}

unint64_t sub_261A14B88()
{
  unint64_t result = qword_26B416D10;
  if (!qword_26B416D10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B416D10);
  }
  return result;
}

uint64_t type metadata accessor for SharedHeartRateViewFunctionality.BundleLookup()
{
  return self;
}

uint64_t sub_261A14BEC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HeartRateStatusView.BundleLookup()
{
  return self;
}

uint64_t destroy for HeartRateStatusView(uint64_t a1)
{
  return sub_2619F7790(*(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for HeartRateStatusView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  char v4 = *(unsigned char *)(a2 + 32);
  sub_2619F7774(v3, v4);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  return a1;
}

uint64_t assignWithCopy for HeartRateStatusView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  char v4 = *(unsigned char *)(a2 + 32);
  sub_2619F7774(v3, v4);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for HeartRateStatusView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartRateStatusView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HeartRateStatusView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeartRateStatusView()
{
  return &type metadata for HeartRateStatusView;
}

uint64_t sub_261A14E0C()
{
  return MEMORY[0x263F1BB58];
}

id sub_261A14E18()
{
  uint64_t v1 = *(void *)v0;
  double v2 = *(double *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 32);
  sub_2619F7774(v4, v5);
  sub_2619FA43C(v4, v5, &v7);
  sub_2619F7790(v4, v5);
  return sub_261A150B4(v3, v1, &v7, v2);
}

id sub_261A14E9C(void *a1)
{
  uint64_t v3 = *v1;
  double v4 = *((double *)v1 + 1);
  objc_msgSend(a1, sel_setAnimationsSuspended_, *((unsigned __int8 *)v1 + 16));
  objc_msgSend(a1, sel_setState_, v3);
  return objc_msgSend(a1, sel_setBeatsPerMinute_, v4);
}

uint64_t sub_261A14F28()
{
  return sub_261B8DC78();
}

uint64_t sub_261A14F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_261A1551C();
  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_261A14FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_261A1551C();
  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_261A15034()
{
}

unint64_t sub_261A15060()
{
  unint64_t result = qword_26A943B28;
  if (!qword_26A943B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943B28);
  }
  return result;
}

id sub_261A150B4(char a1, uint64_t a2, unsigned __int8 *a3, double a4)
{
  unsigned int v5 = *a3;
  if (v5 - 2 >= 3)
  {
    if (v5 == 5)
    {
      id v10 = self;
      id v11 = objc_msgSend(v10, sel_currentDevice);
      sub_261AAC430();

      id v12 = objc_msgSend(v10, sel_currentDevice);
      sub_261AAC430();

      id v13 = objc_msgSend(v10, sel_currentDevice);
      sub_261AAC430();
    }
    else if (v5 <= 8)
    {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v14 = 90;
    uint64_t v15 = 9;
    goto LABEL_10;
  }
  unint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_currentDevice);
  sub_261AAC430();

  id v8 = objc_msgSend(v6, sel_currentDevice);
  sub_261AAC430();

  id v9 = objc_msgSend(v6, sel_currentDevice);
  sub_261AAC430();

  if (v5 > 8) {
    goto LABEL_9;
  }
LABEL_7:
  if (((1 << v5) & 0x181) == 0) {
    goto LABEL_9;
  }
  uint64_t v14 = 91;
  uint64_t v15 = 10;
LABEL_10:
  type metadata accessor for SharedHeartRateViewFunctionality.BundleLookup();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v17 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v18 = objc_allocWithZone(MEMORY[0x263F3F178]);
  uint64_t v19 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v18, sel_initWithFrame_heartFilledImageName_heartSpriteImageName_heartSuspendedSpriteImageName_spriteFrameCount_spriteColumnCount_resourceBundle_, v19, v20, v21, v14, v15, v17, 0.0, 0.0, 0.0, 0.0);

  objc_msgSend(v22, sel_setAnimationsSuspended_, a1 & 1);
  objc_msgSend(v22, sel_setState_, a2);
  objc_msgSend(v22, sel_setBeatsPerMinute_, a4);
  return v22;
}

unint64_t sub_261A1551C()
{
  unint64_t result = qword_26A943B30;
  if (!qword_26A943B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943B30);
  }
  return result;
}

uint64_t static AssetLoadStatus.workoutAssetLoadStatus(for:)(char a1, unsigned __int8 a2)
{
  if (a2 == 255) {
    return 5;
  }
  if (a2) {
    return qword_261B93F18[a1];
  }
  return 6;
}

void static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  id v686 = a5;
  id v680 = a4;
  id v685 = a3;
  uint64_t v626 = a2;
  uint64_t v690 = a6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v7 - 8);
  v628 = (char *)&v613 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v625 = type metadata accessor for WorkoutTimeView();
  uint64_t v9 = MEMORY[0x270FA5388](v625);
  v627 = (uint64_t *)((char *)&v613 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v630 = (uint64_t)&v613 - v11;
  uint64_t v629 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9433E8);
  MEMORY[0x270FA5388](v629);
  uint64_t v632 = (uint64_t)&v613 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v646 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B40);
  uint64_t v13 = MEMORY[0x270FA5388](v646);
  uint64_t v631 = (uint64_t)&v613 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v633 = (uint64_t)&v613 - v15;
  uint64_t v644 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B48);
  MEMORY[0x270FA5388](v644);
  v645 = (uint64_t *)((char *)&v613 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v661 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B50);
  MEMORY[0x270FA5388](v661);
  v647 = (char *)&v613 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v659 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B58);
  MEMORY[0x270FA5388](v659);
  v660 = (_OWORD *)((char *)&v613 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v670 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B60);
  MEMORY[0x270FA5388](v670);
  v662 = (char *)&v613 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v668 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B68);
  MEMORY[0x270FA5388](v668);
  v669 = (_OWORD *)((char *)&v613 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v678 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B70);
  MEMORY[0x270FA5388](v678);
  v671 = (char *)&v613 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v676 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B78);
  MEMORY[0x270FA5388](v676);
  v677 = (_OWORD *)((char *)&v613 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v684 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B80);
  MEMORY[0x270FA5388](v684);
  v679 = (char *)&v613 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v622 = sub_261B8C258();
  uint64_t v620 = *(void *)(v622 - 8);
  MEMORY[0x270FA5388](v622);
  v614 = (char *)&v613 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v617 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B88);
  MEMORY[0x270FA5388](v617);
  uint64_t v621 = (uint64_t)&v613 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B90);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v615 = (uint64_t)&v613 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  v634 = (char *)&v613 - v29;
  uint64_t v641 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B98);
  MEMORY[0x270FA5388](v641);
  v642 = (uint64_t *)((char *)&v613 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v657 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943BA0);
  MEMORY[0x270FA5388](v657);
  v643 = (char *)&v613 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_261B8BE48();
  uint64_t v649 = *(void *)(v32 - 8);
  uint64_t v650 = v32;
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  v618 = (char *)&v613 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  v635 = (char *)&v613 - v35;
  uint64_t v653 = type metadata accessor for ZoneMetricView();
  uint64_t v36 = MEMORY[0x270FA5388](v653);
  uint64_t v619 = (uint64_t)&v613 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v624 = (uint64_t)&v613 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v640 = (char *)&v613 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v44 = (char *)&v613 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v623 = (uint64_t)&v613 - v45;
  uint64_t v654 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943BA8);
  MEMORY[0x270FA5388](v654);
  uint64_t v656 = (uint64_t)&v613 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v636 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943BB0);
  MEMORY[0x270FA5388](v636);
  v638 = (char *)&v613 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v655 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943BB8);
  MEMORY[0x270FA5388](v655);
  v639 = (char *)&v613 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v666 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943BC0);
  MEMORY[0x270FA5388](v666);
  v658 = (char *)&v613 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943BC8);
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = (char *)&v613 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v652 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943BD0);
  MEMORY[0x270FA5388](v652);
  v637 = (char *)&v613 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_261B8C488();
  uint64_t v616 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v56 = (char *)&v613 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = (int *)type metadata accessor for HeartRateMetricView();
  MEMORY[0x270FA5388](v57);
  uint64_t v59 = (char *)&v613 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v687 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943BD8);
  MEMORY[0x270FA5388](v687);
  uint64_t v689 = (uint64_t)&v613 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v681 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943BE0);
  MEMORY[0x270FA5388](v681);
  uint64_t v683 = (uint64_t)&v613 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v672 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943BE8);
  MEMORY[0x270FA5388](v672);
  v674 = (_OWORD *)((char *)&v613 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v663 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943BF0);
  MEMORY[0x270FA5388](v663);
  uint64_t v665 = (uint64_t)&v613 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v648 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943BF8);
  MEMORY[0x270FA5388](v648);
  uint64_t v65 = (char *)&v613 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v664 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C00);
  MEMORY[0x270FA5388](v664);
  v651 = (char *)&v613 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v673 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C08);
  MEMORY[0x270FA5388](v673);
  v667 = (char *)&v613 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v682 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C10);
  MEMORY[0x270FA5388](v682);
  uint64_t v675 = (uint64_t)&v613 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v688 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C18);
  MEMORY[0x270FA5388](v688);
  uint64_t v70 = (char *)&v613 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 0:
      sub_261A1F2F0((uint64_t)v718);
      sub_2619FB7EC((uint64_t)v718, (uint64_t)v740, &qword_26A943C20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C30);
      sub_261A1DC9C();
      sub_2619F8AB8(&qword_26A943C40, &qword_26A943C30);
      sub_261B8DD68();
      long long v737 = v711;
      long long v738 = v712;
      __int16 v739 = v713;
      long long v733 = *(_OWORD *)&v708[11];
      long long v734 = *(_OWORD *)&v708[13];
      long long v736 = v710;
      long long v735 = v709;
      long long v729 = *(_OWORD *)&v708[3];
      long long v730 = *(_OWORD *)&v708[5];
      long long v732 = *(_OWORD *)&v708[9];
      long long v731 = *(_OWORD *)&v708[7];
      sub_261A1DD08((uint64_t)&v729);
      goto LABEL_137;
    case 1:
      uint64_t v71 = (uint64_t)v70;
      sub_261B8C198();
      uint64_t v73 = v72;
      id v74 = v685;
      uint64_t v75 = FIUIDistanceTypeForActivityType();
      sub_261B8BF68();
      sub_261B8C5E8();
      swift_release();
      uint64_t v76 = sub_261B8C428();
      char v78 = v77;
      swift_release();
      uint64_t v79 = v78 & 1;
      uint64_t KeyPath = swift_getKeyPath();
      *(void *)&v740[0] = v73;
      *((void *)&v740[0] + 1) = v74;
      *(void *)&v740[1] = v75;
      *((void *)&v740[1] + 1) = v76;
      *(void *)&v740[2] = v79;
      *((void *)&v740[2] + 1) = KeyPath;
      LOWORD(v740[3]) = 0;
      id v81 = v74;
      sub_2619F7774(KeyPath, 0);
      sub_261A1E960();
      sub_261A1E9B4();
      sub_261B8DD68();
      if (BYTE1(v708[9])) {
        uint64_t v82 = 256;
      }
      else {
        uint64_t v82 = 0;
      }
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      *(void *)&v740[4] = 0;
      v740[3] = (unint64_t)v82 | (unsigned __int128)LOBYTE(v708[9]);
      WORD4(v740[4]) = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DE8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E08);
      sub_261A1ED2C(&qword_26A943DE0, &qword_26A943DE8, (void (*)(void))sub_261A1E094);
      sub_261A1DEE0(&qword_26A943E00, &qword_26A943E08, (void (*)(void))sub_261A1E960, (void (*)(void))sub_261A1E9B4);
      sub_261B8DD68();
      if (BYTE9(v695)) {
        __int16 v83 = 256;
      }
      else {
        __int16 v83 = 0;
      }
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      v708[11] = v695;
      LOWORD(v708[12]) = v83 | BYTE8(v695);
      BYTE2(v708[12]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DC8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DF8);
      sub_261A1E7B0();
      sub_261A1E888();
      sub_261B8DD68();
      uint64_t v84 = *(void *)&v740[4];
      __int16 v85 = WORD4(v740[4]);
      char v86 = BYTE10(v740[4]);
      long long v87 = v740[1];
      uint64_t v88 = v674;
      _OWORD *v674 = v740[0];
      v88[1] = v87;
      long long v89 = v740[3];
      v88[2] = v740[2];
      v88[3] = v89;
      *((void *)v88 + 8) = v84;
      *((_WORD *)v88 + 36) = v85;
      *((unsigned char *)v88 + 74) = v86;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DB8);
      sub_261A1E35C();
      sub_261A1E774();
      uint64_t v90 = v675;
      sub_261B8DD68();
      goto LABEL_15;
    case 2:
      uint64_t v71 = (uint64_t)v70;
      sub_261B8BFA8();
      sub_261B8C3E8();
      uint64_t v92 = v91;
      swift_release();
      uint64_t KeyPath = swift_getKeyPath();
      v708[3] = v92;
      *(int64x2_t *)&v708[4] = vdupq_n_s64(1uLL);
      v708[6] = v685;
      v708[7] = KeyPath;
      LOWORD(v708[8]) = 0;
      id v93 = v685;
      goto LABEL_14;
    case 4:
      uint64_t v94 = (uint64_t)v70;
      id v95 = v685;
      id v96 = v680;
      sub_261B8BFF8();
      uint64_t v98 = v97;
      sub_261B8BF78();
      char v99 = sub_261B8BB18();
      swift_release();
      uint64_t v100 = swift_getKeyPath();
      *(void *)&v740[0] = v95;
      *((void *)&v740[0] + 1) = 4;
      *(void *)&v740[1] = v96;
      *((void *)&v740[1] + 1) = v100;
      *(void *)&v740[2] = 0;
      *((void *)&v740[2] + 1) = v98;
      *(void *)&v740[4] = 0;
      v740[3] = v99 & 1;
      BYTE8(v740[4]) = 1;
      id v101 = v95;
      id v102 = v96;
      sub_2619F7774(v100, 0);
      sub_261A1E720();
      sub_261A1E094();
      sub_261B8DD68();
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      *(void *)&v740[4] = v708[11];
      WORD4(v740[4]) = LOBYTE(v708[12]);
      goto LABEL_114;
    case 5:
      v634 = v70;
      sub_261B8BFB8();
      id v685 = (id)sub_261B8C4B8();
      LODWORD(v680) = v103;
      swift_release();
      sub_261B8BFB8();
      sub_261B8C4C8();
      swift_release();
      sub_261B8BFB8();
      LODWORD(v679) = sub_261B8C4D8();
      swift_release();
      sub_261B8BF78();
      LODWORD(v678) = sub_261B8BB08();
      swift_release();
      sub_261B8BF78();
      char v104 = sub_261B8BB38();
      swift_release();
      uint64_t v105 = &v59[v57[9]];
      *(void *)uint64_t v105 = swift_getKeyPath();
      v105[8] = 0;
      unsigned __int8 v106 = &v59[v57[10]];
      *(void *)unsigned __int8 v106 = swift_getKeyPath();
      v106[8] = 0;
      unint64_t v107 = &v59[v57[11]];
      *(void *)unint64_t v107 = swift_getKeyPath();
      v107[8] = 0;
      *(void *)&v59[v57[12]] = 0x3FD6666666666666;
      char v108 = &v59[v57[13]];
      *(void *)char v108 = 0;
      *((void *)v108 + 1) = 0;
      *(void *)uint64_t v59 = v685;
      v59[8] = v680 & 1;
      (*(void (**)(char *, char *, uint64_t))(v616 + 32))(&v59[v57[5]], v56, v54);
      v59[v57[6]] = v679 & 1;
      v59[v57[7]] = v678 & 1;
      v59[v57[8]] = v104 & 1;
      long long v109 = type metadata accessor for HeartRateMetricView;
      sub_261A1F700((uint64_t)v59, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for HeartRateMetricView);
      swift_storeEnumTagMultiPayload();
      sub_261A1F650(&qword_26A943D78, (void (*)(uint64_t))type metadata accessor for HeartRateMetricView);
      sub_261A1E538();
      uint64_t v110 = (uint64_t)v637;
      sub_261B8DD68();
      sub_2619F86F0(v110, (uint64_t)v65, &qword_26A943BD0);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D60);
      sub_261A1ED2C(&qword_26A943D58, &qword_26A943D60, (void (*)(void))sub_261A1E438);
      sub_261A1E48C();
      uint64_t v111 = (uint64_t)v651;
      sub_261B8DD68();
      sub_2619F8754(v110, &qword_26A943BD0);
      sub_2619F86F0(v111, v665, &qword_26A943C00);
      swift_storeEnumTagMultiPayload();
      sub_261A1E398();
      sub_261A1E58C();
      uint64_t v112 = (uint64_t)v667;
      sub_261B8DD68();
      sub_2619F8754(v111, &qword_26A943C00);
      sub_2619F86F0(v112, (uint64_t)v674, &qword_26A943C08);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DB8);
      sub_261A1E35C();
      sub_261A1E774();
      uint64_t v113 = v675;
      sub_261B8DD68();
      sub_2619F8754(v112, &qword_26A943C08);
      sub_2619F86F0(v113, v683, &qword_26A943C10);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      uint64_t v114 = (uint64_t)v634;
      sub_261B8DD68();
      sub_2619F8754(v113, &qword_26A943C10);
      sub_2619F86F0(v114, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      sub_2619F8754(v114, &qword_26A943C18);
      uint64_t v115 = (uint64_t)v59;
      goto LABEL_167;
    case 7:
      uint64_t v71 = (uint64_t)v70;
      sub_261B8BFA8();
      sub_261B8C3D8();
      uint64_t v117 = v116;
      swift_release();
      uint64_t KeyPath = swift_getKeyPath();
      v708[3] = v117;
      *(_OWORD *)&v708[4] = xmmword_261B93FA0;
      v708[6] = v685;
      v708[7] = KeyPath;
      LOWORD(v708[8]) = 256;
      id v93 = v685;
LABEL_14:
      id v81 = v93;
      sub_2619F7774(KeyPath, 0);
      sub_261A1E438();
      sub_261B8DD68();
      uint64_t v118 = *(void *)&v740[2];
      char v119 = BYTE8(v740[2]);
      char v120 = BYTE9(v740[2]);
      long long v121 = v740[1];
      *(_OWORD *)uint64_t v65 = v740[0];
      *((_OWORD *)v65 + 1) = v121;
      *((void *)v65 + 4) = v118;
      v65[40] = v119;
      v65[41] = v120;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D60);
      sub_261A1ED2C(&qword_26A943D58, &qword_26A943D60, (void (*)(void))sub_261A1E438);
      sub_261A1E48C();
      uint64_t v122 = (uint64_t)v651;
      sub_261B8DD68();
      sub_2619F86F0(v122, v665, &qword_26A943C00);
      swift_storeEnumTagMultiPayload();
      sub_261A1E398();
      sub_261A1E58C();
      uint64_t v123 = (uint64_t)v667;
      sub_261B8DD68();
      sub_2619F8754(v122, &qword_26A943C00);
      sub_2619F86F0(v123, (uint64_t)v674, &qword_26A943C08);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DB8);
      sub_261A1E35C();
      sub_261A1E774();
      uint64_t v90 = v675;
      sub_261B8DD68();
      sub_2619F8754(v123, &qword_26A943C08);
LABEL_15:
      sub_2619F86F0(v90, v683, &qword_26A943C10);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v90, &qword_26A943C10);
      sub_2619F86F0(v71, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      uint64_t v124 = v71;
      goto LABEL_75;
    case 8:
      uint64_t v94 = (uint64_t)v70;
      id v125 = v685;
      id v126 = v680;
      sub_261B8BFE8();
      uint64_t v128 = v127;
      sub_261B8BF78();
      char v129 = sub_261B8BB18();
      swift_release();
      uint64_t v100 = swift_getKeyPath();
      *(void *)&v740[0] = v125;
      *((void *)&v740[0] + 1) = 8;
      *(void *)&v740[1] = v126;
      *((void *)&v740[1] + 1) = v100;
      *(void *)&v740[2] = 0;
      *((void *)&v740[2] + 1) = v128;
      *(void *)&v740[4] = 0;
      v740[3] = v129 & 1;
      BYTE8(v740[4]) = 0;
      id v101 = v125;
      id v102 = v126;
      sub_2619F7774(v100, 0);
      sub_261A1E094();
      sub_261B8DD68();
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      *(void *)&v740[4] = v708[11];
      BYTE8(v740[4]) = v708[12];
      BYTE9(v740[4]) = 1;
      goto LABEL_114;
    case 9:
      uint64_t v130 = (uint64_t)v70;
      sub_261B8BF88();
      sub_261B8C388();
      sub_261A1F650((unint64_t *)&qword_26A943F70, MEMORY[0x263F87F18]);
      id v131 = v685;
      *(void *)&v740[0] = sub_261B8D5E8();
      *((void *)&v740[0] + 1) = v132;
      v740[1] = (unint64_t)v131;
      v740[2] = 0uLL;
      LOWORD(v740[3]) = 256;
      sub_261A1E960();
      sub_261A1E9B4();
      swift_retain();
      id v133 = v131;
      sub_261B8DD68();
      if (BYTE1(v708[9])) {
        uint64_t v134 = 256;
      }
      else {
        uint64_t v134 = 0;
      }
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      *(void *)&v740[4] = 0;
      v740[3] = (unint64_t)v134 | (unsigned __int128)LOBYTE(v708[9]);
      WORD4(v740[4]) = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DE8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E08);
      sub_261A1ED2C(&qword_26A943DE0, &qword_26A943DE8, (void (*)(void))sub_261A1E094);
      sub_261A1DEE0(&qword_26A943E00, &qword_26A943E08, (void (*)(void))sub_261A1E960, (void (*)(void))sub_261A1E9B4);
      sub_261B8DD68();
      if (BYTE9(v695)) {
        __int16 v135 = 256;
      }
      else {
        __int16 v135 = 0;
      }
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      v708[11] = v695;
      LOWORD(v708[12]) = v135 | BYTE8(v695);
      BYTE2(v708[12]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DC8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DF8);
      sub_261A1E7B0();
      sub_261A1E888();
      sub_261B8DD68();
      uint64_t v136 = *(void *)&v740[4];
      __int16 v137 = WORD4(v740[4]);
      char v138 = BYTE10(v740[4]);
      long long v139 = v740[1];
      uint64_t v140 = v674;
      _OWORD *v674 = v740[0];
      v140[1] = v139;
      long long v141 = v740[3];
      v140[2] = v740[2];
      v140[3] = v141;
      *((void *)v140 + 8) = v136;
      *((_WORD *)v140 + 36) = v137;
      *((unsigned char *)v140 + 74) = v138;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DB8);
      sub_261A1E35C();
      sub_261A1E774();
      uint64_t v142 = v675;
      sub_261B8DD68();
      sub_2619F86F0(v142, v683, &qword_26A943C10);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v142, &qword_26A943C10);
      sub_2619F86F0(v130, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      sub_2619F8754(v130, &qword_26A943C18);

      goto LABEL_185;
    case 10:
      uint64_t v143 = (uint64_t)v70;
      uint64_t v144 = sub_261B8C048();
      char v146 = v145;
      uint64_t v147 = swift_getKeyPath();
      uint64_t KeyPath = v147;
      if (v146) {
        uint64_t v148 = 0;
      }
      else {
        uint64_t v148 = v144;
      }
      *(void *)&v740[0] = 10;
      *((void *)&v740[0] + 1) = v148;
      *(void *)&v740[1] = v685;
      *((void *)&v740[1] + 1) = v147;
      LOWORD(v740[2]) = 0;
      id v81 = v685;
      sub_2619F7774(KeyPath, 0);
      sub_261A1DD50();
      sub_261A1EC00();
      sub_261B8DD68();
      unint64_t v149 = LOBYTE(v708[7]);
      uint64_t v150 = 256;
      if (!BYTE1(v708[7])) {
        uint64_t v150 = 0;
      }
      goto LABEL_65;
    case 11:
      v634 = v70;
      id v151 = v680;
      sub_261B8BF98();
      uint64_t v152 = sub_261B8C3C8();
      char v154 = v153;
      swift_release();
      uint64_t v155 = v154 & 1;
      id v156 = v685;
      sub_261B8BF78();
      char v157 = sub_261B8BB08();
      swift_release();
      sub_261B8BF78();
      char v158 = sub_261B8BB38();
      swift_release();
      uint64_t v159 = swift_getKeyPath();
      uint64_t v160 = swift_getKeyPath();
      uint64_t v161 = swift_getKeyPath();
      uint64_t v162 = v161;
      *(void *)&v740[0] = v151;
      *((void *)&v740[0] + 1) = v152;
      if (v158) {
        uint64_t v163 = 256;
      }
      else {
        uint64_t v163 = 0;
      }
      *(void *)&v740[1] = v155;
      *((void *)&v740[1] + 1) = 11;
      *(void *)&v740[2] = v156;
      *((void *)&v740[2] + 1) = v163 & 0xFFFFFFFFFFFFFFFELL | v157 & 1;
      v740[3] = (unint64_t)v159;
      v740[4] = (unint64_t)v160;
      *(void *)&v740[5] = v161;
      WORD4(v740[5]) = 0;
      goto LABEL_38;
    case 12:
      v634 = v70;
      id v151 = v680;
      sub_261B8BF98();
      uint64_t v164 = sub_261B8C3B8();
      char v166 = v165;
      swift_release();
      uint64_t v167 = v166 & 1;
      id v156 = v685;
      sub_261B8BF78();
      char v168 = sub_261B8BB08();
      swift_release();
      sub_261B8BF78();
      char v169 = sub_261B8BB38();
      swift_release();
      uint64_t v159 = swift_getKeyPath();
      uint64_t v160 = swift_getKeyPath();
      uint64_t v170 = swift_getKeyPath();
      uint64_t v162 = v170;
      *(void *)&v740[0] = v151;
      *((void *)&v740[0] + 1) = v164;
      if (v169) {
        uint64_t v171 = 256;
      }
      else {
        uint64_t v171 = 0;
      }
      *(void *)&v740[1] = v167;
      *((void *)&v740[1] + 1) = 12;
      *(void *)&v740[2] = v156;
      *((void *)&v740[2] + 1) = v171 & 0xFFFFFFFFFFFFFFFELL | v168 & 1;
      v740[3] = (unint64_t)v159;
      v740[4] = (unint64_t)v160;
      *(void *)&v740[5] = v170;
      WORD4(v740[5]) = 256;
LABEL_38:
      id v686 = v151;
      id v172 = v156;
      sub_2619F7774(v159, 0);
      sub_2619F7774(v160, 0);
      sub_2619F7774(v162, 0);
      sub_261A1EDA4();
      sub_261B8DD68();
      if (BYTE1(v708[14])) {
        __int16 v173 = 256;
      }
      else {
        __int16 v173 = 0;
      }
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      v740[4] = *(_OWORD *)&v708[11];
      *(void *)&v740[5] = v708[13];
      WORD4(v740[5]) = v173 | LOBYTE(v708[14]);
      BYTE10(v740[5]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EB0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EC8);
      sub_261A1ED2C(&qword_26A943EA8, &qword_26A943EB0, (void (*)(void))sub_261A1EDA4);
      sub_261A1DEE0(&qword_26A943EC0, &qword_26A943EC8, (void (*)(void))sub_261A1EDA4, (void (*)(void))sub_261A1EDF8);
      sub_261B8DD68();
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      *(_OWORD *)&v708[11] = v695;
      v708[13] = v696;
      LOWORD(v708[14]) = v697;
      BYTE2(v708[14]) = v698 != 0;
      BYTE3(v708[14]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EA0);
      sub_261A1EA80();
      sub_261A1EC54();
      sub_261B8DD68();
      uint64_t v174 = *(void *)&v740[5];
      __int16 v175 = WORD4(v740[5]);
      char v176 = BYTE10(v740[5]);
      char v177 = BYTE11(v740[5]);
      long long v178 = v740[1];
      v179 = v677;
      _OWORD *v677 = v740[0];
      v179[1] = v178;
      long long v180 = v740[3];
      v179[2] = v740[2];
      v179[3] = v180;
      v179[4] = v740[4];
      *((void *)v179 + 10) = v174;
      *((unsigned char *)v179 + 90) = v176;
      *((_WORD *)v179 + 44) = v175;
      *((unsigned char *)v179 + 91) = v177;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E30);
      sub_261A1EA44();
      sub_261A1EE4C();
      uint64_t v181 = (uint64_t)v679;
      sub_261B8DD68();
      sub_2619F86F0(v181, v683, &qword_26A943B80);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      uint64_t v182 = (uint64_t)v634;
      sub_261B8DD68();
      sub_2619F8754(v181, &qword_26A943B80);
      sub_2619F86F0(v182, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      uint64_t v183 = v182;
      goto LABEL_129;
    case 13:
      uint64_t v184 = (uint64_t)v70;
      sub_261B8C088();
      *(void *)&v740[0] = v185;
      id v186 = v685;
      *((void *)&v740[0] + 1) = v685;
      memset(&v740[1], 0, 73);
      BYTE9(v740[5]) = 1;
      sub_261A1EDA4();
      sub_261A1EDF8();
      id v187 = v186;
      sub_261B8DD68();
      if (BYTE1(v708[14])) {
        __int16 v188 = 256;
      }
      else {
        __int16 v188 = 0;
      }
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      v740[4] = *(_OWORD *)&v708[11];
      *(void *)&v740[5] = v708[13];
      WORD4(v740[5]) = v188 | LOBYTE(v708[14]);
      BYTE10(v740[5]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EB0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EC8);
      sub_261A1ED2C(&qword_26A943EA8, &qword_26A943EB0, (void (*)(void))sub_261A1EDA4);
      sub_261A1DEE0(&qword_26A943EC0, &qword_26A943EC8, (void (*)(void))sub_261A1EDA4, (void (*)(void))sub_261A1EDF8);
      sub_261B8DD68();
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      *(_OWORD *)&v708[11] = v695;
      v708[13] = v696;
      LOWORD(v708[14]) = v697;
      BYTE2(v708[14]) = v698 != 0;
      BYTE3(v708[14]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EA0);
      sub_261A1EA80();
      sub_261A1EC54();
      sub_261B8DD68();
      uint64_t v189 = *(void *)&v740[5];
      __int16 v190 = WORD4(v740[5]);
      char v191 = BYTE10(v740[5]);
      char v192 = BYTE11(v740[5]);
      long long v193 = v740[1];
      v194 = v677;
      _OWORD *v677 = v740[0];
      v194[1] = v193;
      long long v195 = v740[3];
      v194[2] = v740[2];
      v194[3] = v195;
      v194[4] = v740[4];
      *((void *)v194 + 10) = v189;
      *((unsigned char *)v194 + 90) = v191;
      *((_WORD *)v194 + 44) = v190;
      *((unsigned char *)v194 + 91) = v192;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E30);
      sub_261A1EA44();
      sub_261A1EE4C();
      uint64_t v196 = (uint64_t)v679;
      sub_261B8DD68();
      sub_2619F86F0(v196, v683, &qword_26A943B80);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v196, &qword_26A943B80);
      v197 = &qword_26A943C18;
      sub_2619F86F0(v184, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      goto LABEL_201;
    case 14:
      uint64_t v94 = (uint64_t)v70;
      id v198 = v685;
      id v199 = v680;
      sub_261B8C018();
      uint64_t v201 = v200;
      sub_261B8BF78();
      char v202 = sub_261B8BB18();
      swift_release();
      uint64_t v100 = swift_getKeyPath();
      *(void *)&v740[0] = v198;
      *((void *)&v740[0] + 1) = 14;
      *(void *)&v740[1] = v199;
      *((void *)&v740[1] + 1) = v100;
      *(void *)&v740[2] = 0;
      *((void *)&v740[2] + 1) = v201;
      *(void *)&v740[4] = 0;
      v740[3] = v202 & 1;
      BYTE8(v740[4]) = 0;
      id v101 = v198;
      id v102 = v199;
      sub_2619F7774(v100, 0);
      sub_261A1E094();
      sub_261B8DD68();
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      *(void *)&v740[4] = v708[11];
      WORD4(v740[4]) = LOBYTE(v708[12]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DE8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E08);
      sub_261A1ED2C(&qword_26A943DE0, &qword_26A943DE8, (void (*)(void))sub_261A1E094);
      sub_261A1DEE0(&qword_26A943E00, &qword_26A943E08, (void (*)(void))sub_261A1E960, (void (*)(void))sub_261A1E9B4);
      sub_261B8DD68();
      if (BYTE9(v695)) {
        __int16 v203 = 256;
      }
      else {
        __int16 v203 = 0;
      }
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      v708[11] = v695;
      LOWORD(v708[12]) = v203 | BYTE8(v695);
      BYTE2(v708[12]) = 1;
      goto LABEL_118;
    case 15:
      uint64_t v184 = (uint64_t)v70;
      uint64_t v204 = v620;
      uint64_t v205 = (uint64_t)v634;
      uint64_t v206 = v622;
      (*(void (**)(char *, void, uint64_t))(v620 + 104))(v634, *MEMORY[0x263F87E50], v622);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v204 + 56))(v205, 0, 1, v206);
      uint64_t v207 = v621;
      uint64_t v208 = v621 + *(int *)(v617 + 48);
      sub_2619F86F0(v626, v621, &qword_26A943B90);
      sub_2619F86F0(v205, v208, &qword_26A943B90);
      v209 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48);
      if (v209(v207, 1, v206) != 1)
      {
        uint64_t v527 = v615;
        sub_2619F86F0(v207, v615, &qword_26A943B90);
        if (v209(v208, 1, v206) != 1)
        {
          v583 = v614;
          (*(void (**)(char *, uint64_t, uint64_t))(v204 + 32))(v614, v208, v206);
          sub_261A1F650(&qword_26A943F68, MEMORY[0x263F87E58]);
          char v584 = sub_261B8F0A8();
          v585 = *(void (**)(char *, uint64_t))(v204 + 8);
          v585(v583, v206);
          sub_2619F8754((uint64_t)v634, &qword_26A943B90);
          v585((char *)v527, v206);
          sub_2619F8754(v207, &qword_26A943B90);
          if (v584) {
            goto LABEL_187;
          }
LABEL_189:
          id v593 = v680;
          uint64_t v594 = sub_261B8C078();
          uint64_t v596 = v595 & 1;
          uint64_t v597 = swift_getKeyPath();
          v708[3] = v593;
          v708[4] = v594;
          v708[5] = v596;
          v708[6] = 15;
          *(_OWORD *)&v708[7] = (unint64_t)v685;
          v708[9] = 0;
          v708[10] = v597;
          LOWORD(v708[11]) = 0;
          BYTE2(v708[11]) = 1;
          id v598 = v685;
          goto LABEL_195;
        }
        sub_2619F8754((uint64_t)v634, &qword_26A943B90);
        (*(void (**)(uint64_t, uint64_t))(v204 + 8))(v527, v206);
LABEL_156:
        sub_2619F8754(v207, &qword_26A943B88);
        goto LABEL_189;
      }
      sub_2619F8754(v205, &qword_26A943B90);
      if (v209(v208, 1, v206) != 1) {
        goto LABEL_156;
      }
      sub_2619F8754(v207, &qword_26A943B90);
LABEL_187:
      sub_261B8C068();
      if (v586)
      {
        memset(&v708[3], 0, 64);
        LOWORD(v708[11]) = 256;
      }
      else
      {
        id v587 = v680;
        uint64_t v588 = sub_261B8C078();
        uint64_t v590 = v589 & 1;
        uint64_t v591 = swift_getKeyPath();
        v708[3] = v587;
        v708[4] = v588;
        v708[5] = v590;
        v708[6] = 15;
        *(_OWORD *)&v708[7] = (unint64_t)v685;
        v708[9] = 0;
        v708[10] = v591;
        LOWORD(v708[11]) = 0;
        id v592 = v685;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C28);
      sub_261A1EB70();
      sub_261A1DC9C();
      sub_261B8DD68();
      if (BYTE1(v740[4])) {
        __int16 v599 = 256;
      }
      else {
        __int16 v599 = 0;
      }
      *(_OWORD *)&v708[3] = v740[0];
      *(_OWORD *)&v708[5] = v740[1];
      *(_OWORD *)&v708[7] = v740[2];
      *(_OWORD *)&v708[9] = v740[3];
      LOWORD(v708[11]) = v599 | LOBYTE(v740[4]);
      BYTE2(v708[11]) = 0;
LABEL_195:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E70);
      sub_261A1EB34();
      sub_261A1EB70();
      sub_261B8DD68();
      long long v600 = v740[3];
      __int16 v601 = v740[4];
      char v602 = BYTE2(v740[4]);
      BYTE2(v740[4]) = BYTE2(v740[4]) != 0;
      BYTE3(v740[4]) = 0;
      id v685 = (id)*((void *)&v740[0] + 1);
      id v686 = *(id *)&v740[0];
      id v680 = *(id *)&v740[1];
      v674 = *(_OWORD **)&v740[2];
      uint64_t v675 = *((void *)&v740[1] + 1);
      uint64_t v673 = *((void *)&v740[2] + 1);
      sub_261A1F430(*(void **)&v740[0], *((uint64_t *)&v740[0] + 1), *(uint64_t *)&v740[1], *((uint64_t *)&v740[1] + 1), *(void **)&v740[2], *((uint64_t *)&v740[2] + 1), *(uint64_t *)&v740[3], *((uint64_t *)&v740[3] + 1), v740[4], v602);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E60);
      sub_261A1EAF8();
      sub_261A1EB70();
      sub_261B8DD68();
      if (BYTE3(v708[11])) {
        int v603 = 0x1000000;
      }
      else {
        int v603 = 0;
      }
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      LODWORD(v740[4]) = v603 | LOWORD(v708[11]) | (BYTE2(v708[11]) << 16);
      BYTE4(v740[4]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E88);
      sub_261A1EABC();
      sub_261A1EBC4();
      sub_261B8DD68();
      uint64_t v604 = 0x100000000;
      if (!BYTE4(v695)) {
        uint64_t v604 = 0;
      }
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      v708[13] = 0;
      *(_OWORD *)&v708[11] = (unint64_t)v604 | (unsigned __int128)v695;
      LODWORD(v708[14]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EA0);
      sub_261A1EA80();
      sub_261A1EC54();
      sub_261B8DD68();
      uint64_t v605 = *(void *)&v740[5];
      __int16 v606 = WORD4(v740[5]);
      char v607 = BYTE10(v740[5]);
      char v608 = BYTE11(v740[5]);
      long long v609 = v740[1];
      v610 = v677;
      _OWORD *v677 = v740[0];
      v610[1] = v609;
      long long v611 = v740[3];
      v610[2] = v740[2];
      v610[3] = v611;
      v610[4] = v740[4];
      *((void *)v610 + 10) = v605;
      *((unsigned char *)v610 + 90) = v607;
      *((_WORD *)v610 + 44) = v606;
      *((unsigned char *)v610 + 91) = v608;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E30);
      sub_261A1EA44();
      sub_261A1EE4C();
      uint64_t v612 = (uint64_t)v679;
      sub_261B8DD68();
      sub_2619F86F0(v612, v683, &qword_26A943B80);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v612, &qword_26A943B80);
      v197 = &qword_26A943C18;
      sub_2619F86F0(v184, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      sub_261A1F540(v686, (uint64_t)v685, (uint64_t)v680, v675, v674, v673, v600, *((uint64_t *)&v600 + 1), v601, v602);
LABEL_201:
      uint64_t v508 = v184;
LABEL_202:
      sub_2619F8754(v508, v197);
      return;
    case 16:
      uint64_t v210 = (uint64_t)v70;
      id v211 = v680;
      uint64_t v212 = sub_261B8C068();
      uint64_t v214 = v213 & 1;
      uint64_t KeyPath = swift_getKeyPath();
      *(void *)&v740[0] = v211;
      *((void *)&v740[0] + 1) = v212;
      *(void *)&v740[1] = v214;
      *((void *)&v740[1] + 1) = 16;
      v740[2] = (unint64_t)v685;
      *(void *)&v740[3] = 0;
      *((void *)&v740[3] + 1) = KeyPath;
      LODWORD(v740[4]) = 0x1000000;
      id v215 = v685;
      id v81 = v211;
      id v216 = v215;
      sub_2619F7774(KeyPath, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E60);
      sub_261A1EAF8();
      sub_261A1EB70();
      sub_261B8DD68();
      if (BYTE3(v708[11])) {
        int v217 = 0x1000000;
      }
      else {
        int v217 = 0;
      }
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      LODWORD(v740[4]) = v217 | LOWORD(v708[11]) | (BYTE2(v708[11]) << 16);
      BYTE4(v740[4]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E88);
      sub_261A1EABC();
      sub_261A1EBC4();
      sub_261B8DD68();
      uint64_t v218 = 0x100000000;
      if (!BYTE4(v695)) {
        uint64_t v218 = 0;
      }
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      v708[13] = 0;
      *(_OWORD *)&v708[11] = (unint64_t)v218 | (unsigned __int128)v695;
      LODWORD(v708[14]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EA0);
      sub_261A1EA80();
      sub_261A1EC54();
      sub_261B8DD68();
      uint64_t v219 = *(void *)&v740[5];
      __int16 v220 = WORD4(v740[5]);
      char v221 = BYTE10(v740[5]);
      char v222 = BYTE11(v740[5]);
      long long v223 = v740[1];
      v224 = v677;
      _OWORD *v677 = v740[0];
      v224[1] = v223;
      long long v225 = v740[3];
      v224[2] = v740[2];
      v224[3] = v225;
      v224[4] = v740[4];
      *((void *)v224 + 10) = v219;
      *((unsigned char *)v224 + 90) = v221;
      *((_WORD *)v224 + 44) = v220;
      *((unsigned char *)v224 + 91) = v222;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E30);
      sub_261A1EA44();
      sub_261A1EE4C();
      uint64_t v226 = (uint64_t)v679;
      sub_261B8DD68();
      sub_2619F86F0(v226, v683, &qword_26A943B80);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v226, &qword_26A943B80);
      sub_2619F86F0(v210, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      sub_2619F8754(v210, &qword_26A943C18);
      swift_bridgeObjectRelease();

      goto LABEL_76;
    case 17:
      uint64_t v143 = (uint64_t)v70;
      uint64_t v227 = sub_261B8C0C8();
      uint64_t v229 = v228 & 1;
      sub_261B8BF78();
      char v230 = sub_261B8BB18();
      swift_release();
      uint64_t v231 = swift_getKeyPath();
      uint64_t KeyPath = v231;
      if (v230) {
        uint64_t v232 = 256;
      }
      else {
        uint64_t v232 = 0;
      }
      *(void *)&v740[0] = v227;
      *((void *)&v740[0] + 1) = v232 | v229;
      *(void *)&v740[1] = v685;
      *((void *)&v740[1] + 1) = v231;
      LOWORD(v740[2]) = 256;
      id v81 = v685;
      sub_2619F7774(KeyPath, 0);
      sub_261A1DD50();
      sub_261A1EC00();
      sub_261B8DD68();
      unint64_t v149 = LOBYTE(v708[7]);
      if (BYTE1(v708[7])) {
        uint64_t v150 = 256;
      }
      else {
        uint64_t v150 = 0;
      }
LABEL_65:
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = (unint64_t)v150 | (unsigned __int128)v149;
      memset(&v740[3], 0, 20);
      BYTE4(v740[4]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E88);
      sub_261A1EABC();
      sub_261A1EBC4();
      sub_261B8DD68();
      uint64_t v233 = 0x100000000;
      if (!BYTE4(v695)) {
        uint64_t v233 = 0;
      }
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      v708[13] = 0;
      *(_OWORD *)&v708[11] = (unint64_t)v233 | (unsigned __int128)v695;
      LODWORD(v708[14]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EA0);
      sub_261A1EA80();
      sub_261A1EC54();
      sub_261B8DD68();
      uint64_t v234 = *(void *)&v740[5];
      __int16 v235 = WORD4(v740[5]);
      char v236 = BYTE10(v740[5]);
      char v237 = BYTE11(v740[5]);
      long long v238 = v740[1];
      v239 = v677;
      _OWORD *v677 = v740[0];
      v239[1] = v238;
      long long v240 = v740[3];
      v239[2] = v740[2];
      v239[3] = v240;
      v239[4] = v740[4];
      *((void *)v239 + 10) = v234;
      *((unsigned char *)v239 + 90) = v236;
      *((_WORD *)v239 + 44) = v235;
      *((unsigned char *)v239 + 91) = v237;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E30);
      sub_261A1EA44();
      sub_261A1EE4C();
      uint64_t v241 = (uint64_t)v679;
      sub_261B8DD68();
      goto LABEL_74;
    case 21:
      uint64_t v242 = (uint64_t)v70;
      uint64_t v243 = sub_261B8C038();
      sub_261B8C0B8();
      uint64_t v245 = v244;
      sub_261B8BF78();
      char v246 = sub_261B8BB08();
      swift_release();
      uint64_t v247 = swift_getKeyPath();
      *(void *)&v740[0] = v243;
      *((void *)&v740[0] + 1) = v245;
      *(void *)&v740[1] = v246 & 1;
      *((void *)&v740[1] + 1) = v247;
      memset(&v740[2], 0, 17);
      sub_2619F7774(v247, 0);
      sub_261A1EF00();
      sub_261A1E040();
      sub_261B8DD68();
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      v708[11] = 0;
      *(_OWORD *)&v708[9] = v694;
      LOWORD(v708[12]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EF8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F10);
      sub_261A1EEC4();
      sub_261A1EF54();
      sub_261B8DD68();
      uint64_t v248 = *(void *)&v740[4];
      char v249 = BYTE8(v740[4]);
      char v250 = BYTE9(v740[4]);
      long long v251 = v740[1];
      v252 = v669;
      _OWORD *v669 = v740[0];
      v252[1] = v251;
      long long v253 = v740[3];
      v252[2] = v740[2];
      v252[3] = v253;
      *((void *)v252 + 8) = v248;
      *((unsigned char *)v252 + 72) = v249;
      *((unsigned char *)v252 + 73) = v250;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EE8);
      sub_261A1EE88();
      sub_261A1EF90();
      uint64_t v254 = (uint64_t)v671;
      sub_261B8DD68();
      sub_2619F86F0(v254, (uint64_t)v677, &qword_26A943B70);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E30);
      sub_261A1EA44();
      sub_261A1EE4C();
      uint64_t v255 = (uint64_t)v679;
      sub_261B8DD68();
      sub_2619F8754(v254, &qword_26A943B70);
      v256 = &qword_26A943B80;
      sub_2619F86F0(v255, v683, &qword_26A943B80);
      goto LABEL_97;
    case 22:
      uint64_t v257 = (uint64_t)v70;
      sub_261B8C0A8();
      uint64_t v259 = v258;
      id v260 = v685;
      uint64_t v261 = FIUIDistanceTypeForActivityType();
      sub_261B8BF68();
      sub_261B8C5E8();
      swift_release();
      uint64_t v262 = sub_261B8C428();
      char v264 = v263;
      swift_release();
      *(void *)&v740[0] = v259;
      *((void *)&v740[0] + 1) = v260;
      *(void *)&v740[1] = v261;
      *((void *)&v740[1] + 1) = v262;
      *(void *)&v740[2] = v264 & 1;
      *((void *)&v740[2] + 1) = 22;
      LOBYTE(v740[3]) = 1;
      sub_261A1EF00();
      sub_261A1E040();
      id v265 = v260;
      sub_261B8DD68();
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      v708[11] = 0;
      *(_OWORD *)&v708[9] = v694;
      LOWORD(v708[12]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EF8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F10);
      sub_261A1EEC4();
      sub_261A1EF54();
      sub_261B8DD68();
      uint64_t v266 = *(void *)&v740[4];
      char v267 = BYTE8(v740[4]);
      char v268 = BYTE9(v740[4]);
      long long v269 = v740[1];
      v270 = v669;
      _OWORD *v669 = v740[0];
      v270[1] = v269;
      long long v271 = v740[3];
      v270[2] = v740[2];
      v270[3] = v271;
      *((void *)v270 + 8) = v266;
      *((unsigned char *)v270 + 72) = v267;
      *((unsigned char *)v270 + 73) = v268;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EE8);
      sub_261A1EE88();
      sub_261A1EF90();
      uint64_t v272 = (uint64_t)v671;
      sub_261B8DD68();
      sub_2619F86F0(v272, (uint64_t)v677, &qword_26A943B70);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E30);
      sub_261A1EA44();
      sub_261A1EE4C();
      uint64_t v273 = (uint64_t)v679;
      sub_261B8DD68();
      sub_2619F8754(v272, &qword_26A943B70);
      sub_2619F86F0(v273, v683, &qword_26A943B80);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v273, &qword_26A943B80);
      sub_2619F86F0(v257, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      sub_2619F8754(v257, &qword_26A943C18);

      return;
    case 23:
      uint64_t v274 = (uint64_t)v70;
      id v275 = v685;
      id v276 = v680;
      sub_261B8C028();
      uint64_t v278 = v277;
      sub_261B8BF78();
      char v279 = sub_261B8BB18();
      swift_release();
      uint64_t v100 = swift_getKeyPath();
      *(void *)&v740[0] = v275;
      *((void *)&v740[0] + 1) = 23;
      *(void *)&v740[1] = v276;
      *((void *)&v740[1] + 1) = v100;
      *(void *)&v740[2] = 0;
      *((void *)&v740[2] + 1) = v278;
      *(void *)&v740[4] = 0;
      v740[3] = v279 & 1;
      BYTE8(v740[4]) = 0;
      id v686 = v275;
      id v280 = v276;
      sub_2619F7774(v100, 0);
      sub_261A1E094();
      sub_261A1E438();
      sub_261B8DD68();
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      v708[11] = v695;
      LOBYTE(v708[12]) = BYTE8(v695);
      BYTE1(v708[12]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EF8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F10);
      sub_261A1EEC4();
      sub_261A1EF54();
      sub_261B8DD68();
      uint64_t v281 = *(void *)&v740[4];
      char v282 = BYTE8(v740[4]);
      char v283 = BYTE9(v740[4]);
      long long v284 = v740[1];
      v285 = v669;
      _OWORD *v669 = v740[0];
      v285[1] = v284;
      long long v286 = v740[3];
      v285[2] = v740[2];
      v285[3] = v286;
      *((void *)v285 + 8) = v281;
      *((unsigned char *)v285 + 72) = v282;
      *((unsigned char *)v285 + 73) = v283;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EE8);
      sub_261A1EE88();
      sub_261A1EF90();
      uint64_t v287 = (uint64_t)v671;
      sub_261B8DD68();
      sub_2619F86F0(v287, (uint64_t)v677, &qword_26A943B70);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E30);
      sub_261A1EA44();
      sub_261A1EE4C();
      uint64_t v288 = (uint64_t)v679;
      sub_261B8DD68();
      sub_2619F8754(v287, &qword_26A943B70);
      sub_2619F86F0(v288, v683, &qword_26A943B80);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v288, &qword_26A943B80);
      sub_2619F86F0(v274, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      sub_2619F8754(v274, &qword_26A943C18);

      goto LABEL_121;
    case 24:
      uint64_t v143 = (uint64_t)v70;
      sub_261B8C128();
      uint64_t v290 = v289;
      uint64_t KeyPath = swift_getKeyPath();
      *(void *)&v740[0] = v290;
      *(_OWORD *)((char *)v740 + 8) = xmmword_261B93F90;
      *((void *)&v740[1] + 1) = v685;
      *(void *)&v740[2] = KeyPath;
      *(_OWORD *)((char *)&v740[2] + 8) = 0u;
      *(_OWORD *)((char *)&v740[3] + 8) = 0u;
      BYTE8(v740[4]) = 1;
      id v81 = v685;
      sub_2619F7774(KeyPath, 0);
      sub_261A1E094();
      sub_261A1E438();
      sub_261B8DD68();
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      v708[11] = v695;
      LOBYTE(v708[12]) = BYTE8(v695);
      BYTE1(v708[12]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EF8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F10);
      sub_261A1EEC4();
      sub_261A1EF54();
      sub_261B8DD68();
      uint64_t v291 = *(void *)&v740[4];
      char v292 = BYTE8(v740[4]);
      char v293 = BYTE9(v740[4]);
      long long v294 = v740[1];
      v295 = v669;
      _OWORD *v669 = v740[0];
      v295[1] = v294;
      long long v296 = v740[3];
      v295[2] = v740[2];
      v295[3] = v296;
      *((void *)v295 + 8) = v291;
      *((unsigned char *)v295 + 72) = v292;
      *((unsigned char *)v295 + 73) = v293;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EE8);
      sub_261A1EE88();
      sub_261A1EF90();
      uint64_t v297 = (uint64_t)v671;
      sub_261B8DD68();
      goto LABEL_73;
    case 25:
      uint64_t v143 = (uint64_t)v70;
      sub_261B8C0F8();
      uint64_t v299 = v298;
      uint64_t KeyPath = swift_getKeyPath();
      v708[3] = v299;
      *(int64x2_t *)&v708[4] = vdupq_n_s64(3uLL);
      v708[6] = v685;
      v708[7] = KeyPath;
      memset(&v708[8], 0, 50);
      id v81 = v685;
      sub_2619F7774(KeyPath, 0);
      sub_261A1E438();
      sub_261A1EDA4();
      sub_261B8DD68();
      uint64_t v300 = *(void *)&v740[5];
      char v301 = BYTE8(v740[5]);
      char v302 = BYTE9(v740[5]);
      long long v303 = v740[1];
      v304 = v660;
      _OWORD *v660 = v740[0];
      v304[1] = v303;
      long long v305 = v740[3];
      v304[2] = v740[2];
      v304[3] = v305;
      v304[4] = v740[4];
      *((void *)v304 + 10) = v300;
      *((unsigned char *)v304 + 88) = v301;
      *((unsigned char *)v304 + 89) = v302;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F28);
      sub_261A1EFCC();
      sub_261A1F008();
      uint64_t v306 = (uint64_t)v662;
      sub_261B8DD68();
      sub_2619F86F0(v306, (uint64_t)v669, &qword_26A943B60);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EE8);
      sub_261A1EE88();
      sub_261A1EF90();
      uint64_t v297 = (uint64_t)v671;
      sub_261B8DD68();
      sub_2619F8754(v306, &qword_26A943B60);
LABEL_73:
      sub_2619F86F0(v297, (uint64_t)v677, &qword_26A943B70);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E30);
      sub_261A1EA44();
      sub_261A1EE4C();
      uint64_t v241 = (uint64_t)v679;
      sub_261B8DD68();
      sub_2619F8754(v297, &qword_26A943B70);
LABEL_74:
      sub_2619F86F0(v241, v683, &qword_26A943B80);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v241, &qword_26A943B80);
      sub_2619F86F0(v143, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      uint64_t v124 = v143;
LABEL_75:
      sub_2619F8754(v124, &qword_26A943C18);
      goto LABEL_76;
    case 26:
      uint64_t v308 = sub_261B8C118();
      *(void *)&v740[0] = 26;
      *((void *)&v740[0] + 1) = v308;
      *(void *)&v740[1] = v309 & 1;
      id v310 = v685;
      *((void *)&v740[1] + 1) = v685;
      LOBYTE(v740[2]) = 0;
      goto LABEL_79;
    case 27:
      uint64_t v311 = sub_261B8C108();
      *(void *)&v740[0] = 27;
      *((void *)&v740[0] + 1) = v311;
      *(void *)&v740[1] = v312 & 1;
      id v310 = v685;
      *((void *)&v740[1] + 1) = v685;
      LOBYTE(v740[2]) = 1;
LABEL_79:
      sub_261A1E0E8();
      id v313 = v310;
      sub_261B8DD68();
      v740[0] = v691;
      v740[1] = v692;
      *(void *)&v740[2] = v693;
      *(_OWORD *)((char *)&v740[2] + 8) = 0u;
      *(_OWORD *)((char *)&v740[3] + 8) = 0u;
      WORD4(v740[4]) = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943CB8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943CD8);
      sub_261A1DEE0(&qword_26A943CB0, &qword_26A943CB8, (void (*)(void))sub_261A1E040, (void (*)(void))sub_261A1E094);
      sub_261A1ED2C(&qword_26A943CD0, &qword_26A943CD8, (void (*)(void))sub_261A1E0E8);
      sub_261B8DD68();
      if (BYTE1(v708[12])) {
        __int16 v314 = 256;
      }
      else {
        __int16 v314 = 0;
      }
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      *(void *)&v740[4] = v708[11];
      WORD4(v740[4]) = v314 | LOBYTE(v708[12]);
      BYTE10(v740[4]) = 0;
      goto LABEL_143;
    case 28:
      uint64_t v315 = sub_261B8C178();
      *(void *)&v740[0] = 28;
      *((void *)&v740[0] + 1) = v315;
      *(void *)&v740[1] = v316 & 1;
      id v317 = v685;
      *((void *)&v740[1] + 1) = v685;
      LOBYTE(v740[2]) = 0;
      sub_261A1E200();
      id v318 = v317;
      sub_261B8DD68();
      v740[0] = v691;
      v740[1] = v692;
      LOWORD(v740[2]) = v693;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D00);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D18);
      sub_261A1ED2C(&qword_26A943CF8, &qword_26A943D00, (void (*)(void))sub_261A1E200);
      sub_261A1ED2C(&qword_26A943D10, &qword_26A943D18, (void (*)(void))sub_261A1E254);
      sub_261B8DD68();
      uint64_t v319 = 256;
      if (!BYTE1(v708[7])) {
        uint64_t v319 = 0;
      }
      goto LABEL_142;
    case 29:
      uint64_t v320 = sub_261B8C168();
      *(void *)&v740[0] = 29;
      *((void *)&v740[0] + 1) = v320;
      *(void *)&v740[1] = v321 & 1;
      id v322 = v685;
      *((void *)&v740[1] + 1) = v685;
      LOBYTE(v740[2]) = 1;
      sub_261A1E200();
      id v323 = v322;
      sub_261B8DD68();
      v740[0] = v691;
      v740[1] = v692;
      LOWORD(v740[2]) = v693;
      goto LABEL_140;
    case 30:
      uint64_t v324 = sub_261B8C158();
      *(void *)&v740[0] = 30;
      *((void *)&v740[0] + 1) = v324;
      *(void *)&v740[1] = v325 & 1;
      id v326 = v685;
      *((void *)&v740[1] + 1) = v685;
      LOBYTE(v740[2]) = 0;
      sub_261A1E254();
      id v327 = v326;
      sub_261B8DD68();
      v740[0] = v691;
      v740[1] = v692;
      LOBYTE(v740[2]) = v693;
      goto LABEL_139;
    case 31:
      uint64_t v464 = sub_261B8C148();
      *(void *)&v740[0] = 31;
      *((void *)&v740[0] + 1) = v464;
      *(void *)&v740[1] = v465 & 1;
      id v466 = v685;
      *((void *)&v740[1] + 1) = v685;
      LOBYTE(v740[2]) = 1;
      sub_261A1E254();
      id v467 = v466;
      sub_261B8DD68();
      v740[0] = v691;
      v740[1] = v692;
      LOBYTE(v740[2]) = v693;
LABEL_139:
      BYTE1(v740[2]) = 1;
LABEL_140:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D00);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D18);
      sub_261A1ED2C(&qword_26A943CF8, &qword_26A943D00, (void (*)(void))sub_261A1E200);
      sub_261A1ED2C(&qword_26A943D10, &qword_26A943D18, (void (*)(void))sub_261A1E254);
      sub_261B8DD68();
      uint64_t v319 = 256;
      if (!BYTE1(v708[7])) {
        uint64_t v319 = 0;
      }
LABEL_142:
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      *(void *)&v740[2] = v319 | LOBYTE(v708[7]);
      *(_OWORD *)((char *)&v740[2] + 8) = 0u;
      *(_OWORD *)((char *)&v740[3] + 8) = 0u;
      WORD4(v740[4]) = 0;
      BYTE10(v740[4]) = 1;
LABEL_143:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943CA8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943CF0);
      sub_261A1DF68();
      sub_261A1E13C();
      sub_261B8DD68();
      v740[0] = v729;
      v740[1] = v730;
      v740[2] = v731;
      v740[3] = v732;
      *(void *)&v740[4] = v733;
      WORD4(v740[4]) = WORD4(v733);
      BYTE10(v740[4]) = BYTE10(v733);
      sub_261A1F308((uint64_t)v740);
      goto LABEL_144;
    case 34:
      uint64_t v474 = (uint64_t)v70;
      uint64_t v475 = (uint64_t)v628;
      sub_261B8C098();
      sub_261B8BF78();
      uint64_t v476 = swift_getKeyPath();
      v477 = v627;
      uint64_t *v627 = v476;
      *((unsigned char *)v477 + 8) = 0;
      v477[2] = swift_getKeyPath();
      *((unsigned char *)v477 + 24) = 0;
      uint64_t v478 = v625;
      uint64_t v479 = (uint64_t)v477 + *(int *)(v625 + 24);
      uint64_t v480 = sub_261B8ADD8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v480 - 8) + 56))(v479, 1, 1, v480);
      uint64_t v481 = *(int *)(v478 + 28);
      *((unsigned char *)v477 + v481) = 0;
      sub_261A1F3C0(v475, v479);
      *((unsigned char *)v477 + v481) = 0;
      v482 = (uint64_t *)((char *)v477 + *(int *)(v478 + 32));
      sub_261B8BB48();
      sub_261A1F650(&qword_26A943470, MEMORY[0x263F87C00]);
      uint64_t v483 = sub_261B8D5E8();
      uint64_t v485 = v484;
      sub_2619F8754(v475, &qword_26A943B38);
      uint64_t *v482 = v483;
      v482[1] = v485;
      uint64_t v486 = (uint64_t)v477;
      uint64_t v487 = v630;
      sub_261A1F698(v486, v630, (uint64_t (*)(void))type metadata accessor for WorkoutTimeView);
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v488 = (id)qword_26B416688;
      sub_261B8AA48();

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v489 = swift_allocObject();
      *(_OWORD *)(v489 + 16) = xmmword_261B93F70;
      uint64_t v490 = sub_261B8BFD8();
      uint64_t v491 = MEMORY[0x263F8D750];
      *(void *)(v489 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v489 + 64) = v491;
      *(void *)(v489 + 32) = v490;
      uint64_t v492 = sub_261B8F0C8();
      uint64_t v494 = v493;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v495 = objc_msgSend(self, sel_secondaryLabelColor);
      uint64_t v496 = MEMORY[0x263E4C6F0](v495);
      uint64_t v497 = v632;
      sub_261A1F700(v487, v632, (uint64_t (*)(void))type metadata accessor for WorkoutTimeView);
      v498 = (uint64_t *)(v497 + *(int *)(v629 + 36));
      uint64_t *v498 = v492;
      v498[1] = v494;
      v498[2] = v496;
      v498[3] = 0x4008000000000000;
      sub_261A1F768(v487, (uint64_t (*)(void))type metadata accessor for WorkoutTimeView);
      id v499 = objc_msgSend(self, sel_splitsColors);
      id v500 = objc_msgSend(v499, sel_valueDisplayColor);

      if (!v500)
      {
        __break(1u);
        JUMPOUT(0x261A1D778);
      }
      uint64_t v501 = MEMORY[0x263E4C7B0](v500);
      uint64_t v502 = v631;
      sub_2619F86F0(v497, v631, &qword_26A9433E8);
      *(void *)(v502 + *(int *)(v646 + 36)) = v501;
      sub_2619F8754(v497, &qword_26A9433E8);
      v197 = &qword_26A943B40;
      uint64_t v503 = v633;
      sub_2619FB7EC(v502, v633, &qword_26A943B40);
      sub_2619F86F0(v503, (uint64_t)v645, &qword_26A943B40);
      swift_storeEnumTagMultiPayload();
      sub_261A1EDA4();
      sub_261A1F044();
      uint64_t v504 = (uint64_t)v647;
      sub_261B8DD68();
      sub_2619F86F0(v504, (uint64_t)v660, &qword_26A943B50);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F28);
      sub_261A1EFCC();
      sub_261A1F008();
      uint64_t v505 = (uint64_t)v662;
      sub_261B8DD68();
      sub_2619F8754(v504, &qword_26A943B50);
      sub_2619F86F0(v505, (uint64_t)v669, &qword_26A943B60);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EE8);
      sub_261A1EE88();
      sub_261A1EF90();
      uint64_t v506 = (uint64_t)v671;
      sub_261B8DD68();
      sub_2619F8754(v505, &qword_26A943B60);
      sub_2619F86F0(v506, (uint64_t)v677, &qword_26A943B70);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E30);
      sub_261A1EA44();
      sub_261A1EE4C();
      uint64_t v507 = (uint64_t)v679;
      sub_261B8DD68();
      sub_2619F8754(v506, &qword_26A943B70);
      sub_2619F86F0(v507, v683, &qword_26A943B80);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v507, &qword_26A943B80);
      sub_2619F86F0(v474, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      sub_2619F8754(v474, &qword_26A943C18);
      uint64_t v508 = v503;
      goto LABEL_202;
    case 35:
      sub_261B8C058();
      uint64_t v329 = v328;
      id v330 = v685;
      uint64_t v331 = FIUIDistanceTypeForActivityType();
      *(void *)&v740[0] = v329;
      *((void *)&v740[0] + 1) = v330;
      *(void *)&v740[1] = v331;
      *(_OWORD *)((char *)&v740[1] + 8) = xmmword_261B93F60;
      *((void *)&v740[2] + 1) = 35;
      memset(&v740[3], 0, 25);
      sub_261A1E040();
      sub_261A1E094();
      id v332 = v330;
      sub_261B8DD68();
      v740[0] = v691;
      v740[1] = v692;
      v740[2] = v693;
      v740[3] = v694;
      *(void *)&v740[4] = v695;
      WORD4(v740[4]) = BYTE8(v695);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943CB8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943CD8);
      sub_261A1DEE0(&qword_26A943CB0, &qword_26A943CB8, (void (*)(void))sub_261A1E040, (void (*)(void))sub_261A1E094);
      sub_261A1ED2C(&qword_26A943CD0, &qword_26A943CD8, (void (*)(void))sub_261A1E0E8);
      sub_261B8DD68();
      if (BYTE1(v708[12])) {
        __int16 v333 = 256;
      }
      else {
        __int16 v333 = 0;
      }
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      *(void *)&v740[4] = v708[11];
      WORD4(v740[4]) = v333 | LOBYTE(v708[12]);
      BYTE10(v740[4]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943CA8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943CF0);
      sub_261A1DF68();
      sub_261A1E13C();
      sub_261B8DD68();
      v740[0] = v729;
      v740[1] = v730;
      v740[2] = v731;
      v740[3] = v732;
      *(void *)&v740[4] = v733;
      WORD4(v740[4]) = WORD4(v733);
      BYTE10(v740[4]) = BYTE10(v733);
      sub_261A1F308((uint64_t)v740);
      sub_2619FB7EC((uint64_t)v740, (uint64_t)&v691, &qword_26A943C80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C88);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C90);
      sub_261A1DEA4();
      sub_261A1E2A8();
      sub_261B8DD68();
      long long v334 = v712;
      uint64_t v335 = v689;
      *(_OWORD *)(v689 + 128) = v711;
      *(_OWORD *)(v335 + 144) = v334;
      *(_DWORD *)(v335 + 160) = v713;
      long long v336 = *(_OWORD *)&v708[13];
      *(_OWORD *)(v335 + 64) = *(_OWORD *)&v708[11];
      *(_OWORD *)(v335 + 80) = v336;
      long long v337 = v710;
      *(_OWORD *)(v335 + 96) = v709;
      *(_OWORD *)(v335 + 112) = v337;
      long long v338 = *(_OWORD *)&v708[5];
      *(_OWORD *)uint64_t v335 = *(_OWORD *)&v708[3];
      *(_OWORD *)(v335 + 16) = v338;
      long long v339 = *(_OWORD *)&v708[9];
      *(_OWORD *)(v335 + 32) = *(_OWORD *)&v708[7];
      *(_OWORD *)(v335 + 48) = v339;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();

      return;
    case 36:
      id v340 = v685;
      id v341 = v680;
      sub_261B8C1A8();
      uint64_t v343 = v342;
      sub_261B8BF78();
      char v344 = sub_261B8BB18();
      swift_release();
      uint64_t v100 = swift_getKeyPath();
      *(void *)&v740[0] = v340;
      *((void *)&v740[0] + 1) = 36;
      *(void *)&v740[1] = v341;
      *((void *)&v740[1] + 1) = v100;
      *(void *)&v740[2] = 0;
      *((void *)&v740[2] + 1) = v343;
      *(void *)&v740[4] = 0;
      v740[3] = v344 & 1;
      BYTE8(v740[4]) = 1;
      id v101 = v340;
      id v102 = v341;
      sub_2619F7774(v100, 0);
      sub_261A1E040();
      sub_261A1E094();
      sub_261B8DD68();
      v740[0] = v691;
      v740[1] = v692;
      v740[2] = v693;
      v740[3] = v694;
      *(void *)&v740[4] = v695;
      WORD4(v740[4]) = BYTE8(v695);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943CB8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943CD8);
      sub_261A1DEE0(&qword_26A943CB0, &qword_26A943CB8, (void (*)(void))sub_261A1E040, (void (*)(void))sub_261A1E094);
      sub_261A1ED2C(&qword_26A943CD0, &qword_26A943CD8, (void (*)(void))sub_261A1E0E8);
      sub_261B8DD68();
      if (BYTE1(v708[12])) {
        __int16 v345 = 256;
      }
      else {
        __int16 v345 = 0;
      }
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      *(void *)&v740[4] = v708[11];
      WORD4(v740[4]) = v345 | LOBYTE(v708[12]);
      BYTE10(v740[4]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943CA8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943CF0);
      sub_261A1DF68();
      sub_261A1E13C();
      sub_261B8DD68();
      v740[0] = v729;
      v740[1] = v730;
      v740[2] = v731;
      v740[3] = v732;
      *(void *)&v740[4] = v733;
      WORD4(v740[4]) = WORD4(v733);
      BYTE10(v740[4]) = BYTE10(v733);
      sub_261A1F308((uint64_t)v740);
      sub_2619FB7EC((uint64_t)v740, (uint64_t)&v691, &qword_26A943C80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C88);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C90);
      sub_261A1DEA4();
      sub_261A1E2A8();
      sub_261B8DD68();
      long long v346 = v712;
      uint64_t v347 = v689;
      *(_OWORD *)(v689 + 128) = v711;
      *(_OWORD *)(v347 + 144) = v346;
      *(_DWORD *)(v347 + 160) = v713;
      long long v348 = *(_OWORD *)&v708[13];
      *(_OWORD *)(v347 + 64) = *(_OWORD *)&v708[11];
      *(_OWORD *)(v347 + 80) = v348;
      long long v349 = v710;
      *(_OWORD *)(v347 + 96) = v709;
      *(_OWORD *)(v347 + 112) = v349;
      long long v350 = *(_OWORD *)&v708[5];
      *(_OWORD *)uint64_t v347 = *(_OWORD *)&v708[3];
      *(_OWORD *)(v347 + 16) = v350;
      long long v351 = *(_OWORD *)&v708[9];
      *(_OWORD *)(v347 + 32) = *(_OWORD *)&v708[7];
      *(_OWORD *)(v347 + 48) = v351;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      goto LABEL_120;
    case 37:
      uint64_t v242 = (uint64_t)v70;
      sub_261B8BFB8();
      uint64_t v352 = sub_261B8C4E8();
      char v354 = v353;
      swift_release();
      sub_261B8BFB8();
      char v355 = sub_261B8C4D8();
      swift_release();
      uint64_t v356 = swift_getKeyPath();
      v357 = v638;
      unsigned char *v638 = 1;
      *((void *)v357 + 1) = v352;
      v357[16] = v354 & 1;
      v357[17] = v355 & 1;
      *((void *)v357 + 3) = v356;
      v357[32] = 0;
      swift_storeEnumTagMultiPayload();
      sub_2619F7774(v356, 0);
      sub_261A1E538();
      sub_261A1F650(&qword_26A943D98, (void (*)(uint64_t))type metadata accessor for ZoneMetricView);
      uint64_t v358 = (uint64_t)v639;
      sub_261B8DD68();
      sub_2619F86F0(v358, v656, &qword_26A943BB8);
      swift_storeEnumTagMultiPayload();
      sub_261A1E5C8();
      sub_261A1E674();
      uint64_t v359 = (uint64_t)v658;
      sub_261B8DD68();
      sub_2619F8754(v358, &qword_26A943BB8);
      sub_2619F86F0(v359, v665, &qword_26A943BC0);
      swift_storeEnumTagMultiPayload();
      sub_261A1E398();
      sub_261A1E58C();
      uint64_t v360 = (uint64_t)v667;
      sub_261B8DD68();
      sub_2619F8754(v359, &qword_26A943BC0);
      sub_2619F86F0(v360, (uint64_t)v674, &qword_26A943C08);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DB8);
      sub_261A1E35C();
      sub_261A1E774();
      uint64_t v255 = v675;
      sub_261B8DD68();
      sub_2619F8754(v360, &qword_26A943C08);
      v256 = &qword_26A943C10;
      sub_2619F86F0(v255, v683, &qword_26A943C10);
LABEL_97:
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      goto LABEL_178;
    case 38:
      v634 = v70;
      (*(void (**)(char *, void, uint64_t))(v649 + 104))(v635, *MEMORY[0x263F87DA0], v650);
      sub_261B8BFB8();
      uint64_t v361 = sub_261B8C498();
      swift_release();
      if (v361)
      {
        *((void *)&v740[1] + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F90);
        *(void *)&v740[2] = sub_2619F8AB8(&qword_26A943F98, &qword_26A943F90);
        *(void *)&v740[0] = v361;
      }
      else
      {
        memset(v740, 0, 40);
      }
      uint64_t v529 = (uint64_t)v674;
      uint64_t v528 = v675;
      sub_261B8BFB8();
      uint64_t v530 = sub_261B8C4B8();
      char v532 = v531;
      swift_release();
      sub_261B8BFB8();
      uint64_t v533 = sub_261B8C498();
      swift_release();
      if (v533)
      {
        char v534 = sub_261B8C6C8();
        swift_release();
      }
      else
      {
        char v534 = 1;
      }
      v541 = (int *)v653;
      uint64_t v542 = (uint64_t)v640;
      v543 = &v640[*(int *)(v653 + 32)];
      *(void *)v543 = swift_getKeyPath();
      v543[8] = 0;
      (*(void (**)(uint64_t, char *, uint64_t))(v649 + 32))(v542, v635, v650);
      sub_2619FB7EC((uint64_t)v740, v542 + v541[5], &qword_26A943F78);
      uint64_t v544 = v542 + v541[6];
      *(void *)uint64_t v544 = v530;
      *(unsigned char *)(v544 + 8) = v532 & 1;
      *(unsigned char *)(v542 + v541[7]) = v534 & 1;
      sub_261A1F698(v542, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for ZoneMetricView);
      uint64_t v545 = v623;
      sub_261A1F698((uint64_t)v44, v623, (uint64_t (*)(void))type metadata accessor for ZoneMetricView);
      long long v109 = type metadata accessor for ZoneMetricView;
      sub_261A1F700(v545, (uint64_t)v638, (uint64_t (*)(void))type metadata accessor for ZoneMetricView);
      swift_storeEnumTagMultiPayload();
      sub_261A1E538();
      sub_261A1F650(&qword_26A943D98, (void (*)(uint64_t))type metadata accessor for ZoneMetricView);
      uint64_t v546 = (uint64_t)v639;
      sub_261B8DD68();
      sub_2619F86F0(v546, v656, &qword_26A943BB8);
      swift_storeEnumTagMultiPayload();
      sub_261A1E5C8();
      sub_261A1E674();
      uint64_t v547 = (uint64_t)v658;
      sub_261B8DD68();
      sub_2619F8754(v546, &qword_26A943BB8);
      sub_2619F86F0(v547, v665, &qword_26A943BC0);
      swift_storeEnumTagMultiPayload();
      sub_261A1E398();
      sub_261A1E58C();
      uint64_t v548 = (uint64_t)v667;
      sub_261B8DD68();
      sub_2619F8754(v547, &qword_26A943BC0);
      sub_2619F86F0(v548, v529, &qword_26A943C08);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DB8);
      sub_261A1E35C();
      sub_261A1E774();
      sub_261B8DD68();
      sub_2619F8754(v548, &qword_26A943C08);
      sub_2619F86F0(v528, v683, &qword_26A943C10);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      uint64_t v549 = (uint64_t)v634;
      sub_261B8DD68();
      sub_2619F8754(v528, &qword_26A943C10);
      sub_2619F86F0(v549, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      sub_2619F8754(v549, &qword_26A943C18);
      uint64_t v115 = v545;
      goto LABEL_167;
    case 39:
      v634 = v70;
      sub_261B8BFB8();
      uint64_t v509 = sub_261B8C498();
      swift_release();
      if (v509)
      {
        uint64_t v510 = sub_261B8C6A8();
        char v512 = v511;
        swift_release();
        char v513 = v512 & 1;
      }
      else
      {
        uint64_t v510 = 0;
        char v513 = 1;
      }
      uint64_t v561 = (uint64_t)v674;
      uint64_t v255 = v675;
      sub_261B8BFB8();
      uint64_t v562 = sub_261B8C498();
      swift_release();
      if (v562)
      {
        char v563 = sub_261B8C6C8();
        swift_release();
      }
      else
      {
        char v563 = 1;
      }
      uint64_t v569 = swift_getKeyPath();
      double v570 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(3.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0);
      v571 = v642;
      uint64_t *v642 = v510;
      *((unsigned char *)v571 + 8) = v513;
      *((unsigned char *)v571 + 9) = v563 & 1;
      v571[2] = v569;
      *((unsigned char *)v571 + 24) = 0;
      *((double *)v571 + 4) = v570;
      swift_storeEnumTagMultiPayload();
      sub_2619F7774(v569, 0);
      sub_261A1E720();
      sub_261A1F650(&qword_26A943D98, (void (*)(uint64_t))type metadata accessor for ZoneMetricView);
      uint64_t v572 = (uint64_t)v643;
      sub_261B8DD68();
      sub_2619F86F0(v572, v656, &qword_26A943BA0);
      swift_storeEnumTagMultiPayload();
      sub_261A1E5C8();
      sub_261A1E674();
      uint64_t v573 = (uint64_t)v658;
      sub_261B8DD68();
      sub_2619F8754(v572, &qword_26A943BA0);
      sub_2619F86F0(v573, v665, &qword_26A943BC0);
      swift_storeEnumTagMultiPayload();
      sub_261A1E398();
      sub_261A1E58C();
      uint64_t v574 = (uint64_t)v667;
      sub_261B8DD68();
      sub_2619F8754(v573, &qword_26A943BC0);
      sub_2619F86F0(v574, v561, &qword_26A943C08);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DB8);
      sub_261A1E35C();
      sub_261A1E774();
      sub_261B8DD68();
      sub_2619F8754(v574, &qword_26A943C08);
      v256 = &qword_26A943C10;
      sub_2619F86F0(v255, v683, &qword_26A943C10);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      uint64_t v242 = (uint64_t)v634;
LABEL_178:
      sub_261B8DD68();
      sub_2619F8754(v255, v256);
      sub_2619F86F0(v242, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      uint64_t v372 = v242;
      goto LABEL_184;
    case 40:
      uint64_t v362 = (uint64_t)v70;
      sub_261B8BFB8();
      uint64_t v363 = sub_261B8C4A8();
      char v365 = v364;
      swift_release();
      sub_261B8BFB8();
      char v366 = sub_261B8C4D8();
      swift_release();
      uint64_t v367 = swift_getKeyPath();
      *uint64_t v52 = 0;
      *((void *)v52 + 1) = v363;
      v52[16] = v365 & 1;
      v52[17] = v366 & 1;
      *((void *)v52 + 3) = v367;
      v52[32] = 0;
      swift_storeEnumTagMultiPayload();
      sub_2619F7774(v367, 0);
      sub_261A1F650(&qword_26A943D78, (void (*)(uint64_t))type metadata accessor for HeartRateMetricView);
      sub_261A1E538();
      uint64_t v368 = (uint64_t)v637;
      sub_261B8DD68();
      sub_2619F86F0(v368, (uint64_t)v65, &qword_26A943BD0);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D60);
      sub_261A1ED2C(&qword_26A943D58, &qword_26A943D60, (void (*)(void))sub_261A1E438);
      sub_261A1E48C();
      uint64_t v369 = (uint64_t)v651;
      sub_261B8DD68();
      sub_2619F8754(v368, &qword_26A943BD0);
      sub_2619F86F0(v369, v665, &qword_26A943C00);
      swift_storeEnumTagMultiPayload();
      sub_261A1E398();
      sub_261A1E58C();
      uint64_t v370 = (uint64_t)v667;
      sub_261B8DD68();
      sub_2619F8754(v369, &qword_26A943C00);
      sub_2619F86F0(v370, (uint64_t)v674, &qword_26A943C08);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DB8);
      sub_261A1E35C();
      sub_261A1E774();
      uint64_t v371 = v675;
      sub_261B8DD68();
      sub_2619F8754(v370, &qword_26A943C08);
      sub_2619F86F0(v371, v683, &qword_26A943C10);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v371, &qword_26A943C10);
      sub_2619F86F0(v362, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      uint64_t v372 = v362;
      goto LABEL_184;
    case 41:
      uint64_t v373 = (uint64_t)v70;
      id v374 = v685;
      id v375 = v680;
      sub_261B8BFC8();
      sub_261B8C528();
      uint64_t v377 = v376;
      swift_release();
      sub_261B8BF78();
      char v378 = sub_261B8BB18();
      swift_release();
      uint64_t v100 = swift_getKeyPath();
      *(void *)&v740[0] = v374;
      *((void *)&v740[0] + 1) = 41;
      *(void *)&v740[1] = v375;
      *((void *)&v740[1] + 1) = v100;
      *(void *)&v740[2] = 0;
      *((void *)&v740[2] + 1) = v377;
      *(void *)&v740[4] = 0;
      v740[3] = v378 & 1;
      BYTE8(v740[4]) = 1;
      id v101 = v374;
      id v102 = v375;
      sub_2619F7774(v100, 0);
      sub_261A1E094();
      sub_261B8DD68();
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      *(void *)&v740[4] = v708[11];
      WORD4(v740[4]) = LOBYTE(v708[12]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DE8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E08);
      sub_261A1ED2C(&qword_26A943DE0, &qword_26A943DE8, (void (*)(void))sub_261A1E094);
      sub_261A1DEE0(&qword_26A943E00, &qword_26A943E08, (void (*)(void))sub_261A1E960, (void (*)(void))sub_261A1E9B4);
      sub_261B8DD68();
      if (BYTE9(v695)) {
        __int16 v379 = 256;
      }
      else {
        __int16 v379 = 0;
      }
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      v708[11] = v695;
      LOWORD(v708[12]) = v379 | BYTE8(v695);
      BYTE2(v708[12]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DC8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DF8);
      sub_261A1E7B0();
      sub_261A1E888();
      sub_261B8DD68();
      uint64_t v380 = *(void *)&v740[4];
      __int16 v381 = WORD4(v740[4]);
      char v382 = BYTE10(v740[4]);
      long long v383 = v740[1];
      v384 = v674;
      _OWORD *v674 = v740[0];
      v384[1] = v383;
      long long v385 = v740[3];
      v384[2] = v740[2];
      v384[3] = v385;
      *((void *)v384 + 8) = v380;
      *((_WORD *)v384 + 36) = v381;
      *((unsigned char *)v384 + 74) = v382;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DB8);
      sub_261A1E35C();
      sub_261A1E774();
      uint64_t v386 = v675;
      sub_261B8DD68();
      sub_2619F86F0(v386, v683, &qword_26A943C10);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v386, &qword_26A943C10);
      sub_2619F86F0(v373, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      uint64_t v387 = v373;
      goto LABEL_119;
    case 43:
      uint64_t v514 = (uint64_t)v70;
      sub_261B8BF98();
      uint64_t v515 = sub_261B8C3A8();
      swift_release();
      if (v515)
      {
        uint64_t v516 = sub_261B8C6A8();
        char v518 = v517;
        swift_release();
        uint64_t v519 = v518 & 1;
      }
      else
      {
        uint64_t v516 = 0;
        uint64_t v519 = 1;
      }
      v565 = v674;
      uint64_t v564 = v675;
      sub_261B8BF98();
      uint64_t v566 = sub_261B8C3A8();
      swift_release();
      if (v566)
      {
        char v567 = sub_261B8C6C8();
        swift_release();
        if (v567) {
          uint64_t v568 = 256;
        }
        else {
          uint64_t v568 = 0;
        }
      }
      else
      {
        uint64_t v568 = 256;
      }
      uint64_t v575 = swift_getKeyPath();
      double v576 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(3.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0);
      *(void *)&v740[0] = v516;
      *((void *)&v740[0] + 1) = v568 | v519;
      v740[1] = (unint64_t)v575;
      *(double *)&v740[2] = v576;
      *(_OWORD *)((char *)&v740[2] + 8) = 0u;
      *(_OWORD *)((char *)&v740[3] + 8) = 0u;
      BYTE8(v740[4]) = 0;
      sub_2619F7774(v575, 0);
      sub_261A1E720();
      sub_261A1E094();
      sub_261B8DD68();
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      *(void *)&v740[4] = v708[11];
      WORD4(v740[4]) = LOBYTE(v708[12]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DD8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DE8);
      sub_261A1DEE0(&qword_26A943DD0, &qword_26A943DD8, (void (*)(void))sub_261A1E720, (void (*)(void))sub_261A1E094);
      sub_261A1ED2C(&qword_26A943DE0, &qword_26A943DE8, (void (*)(void))sub_261A1E094);
      sub_261B8DD68();
      if (BYTE9(v695)) {
        __int16 v577 = 256;
      }
      else {
        __int16 v577 = 0;
      }
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      v708[11] = v695;
      LOWORD(v708[12]) = v577 | BYTE8(v695);
      BYTE2(v708[12]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DC8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DF8);
      sub_261A1E7B0();
      sub_261A1E888();
      sub_261B8DD68();
      uint64_t v578 = *(void *)&v740[4];
      __int16 v579 = WORD4(v740[4]);
      char v580 = BYTE10(v740[4]);
      long long v581 = v740[1];
      _OWORD *v565 = v740[0];
      v565[1] = v581;
      long long v582 = v740[3];
      v565[2] = v740[2];
      v565[3] = v582;
      *((void *)v565 + 8) = v578;
      *((_WORD *)v565 + 36) = v579;
      *((unsigned char *)v565 + 74) = v580;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DB8);
      sub_261A1E35C();
      sub_261A1E774();
      sub_261B8DD68();
      sub_2619F86F0(v564, v683, &qword_26A943C10);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v564, &qword_26A943C10);
      sub_2619F86F0(v514, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      uint64_t v372 = v514;
LABEL_184:
      sub_2619F8754(v372, &qword_26A943C18);
LABEL_185:
      swift_release();
      return;
    case 44:
      v634 = v70;
      id v388 = v680;
      sub_261B8C138();
      uint64_t v390 = v389;
      id v391 = v685;
      sub_261B8BF78();
      char v392 = sub_261B8BB08();
      swift_release();
      sub_261B8BF78();
      char v393 = sub_261B8BB38();
      swift_release();
      uint64_t v159 = swift_getKeyPath();
      uint64_t v160 = swift_getKeyPath();
      uint64_t v394 = swift_getKeyPath();
      uint64_t v162 = v394;
      v708[4] = v390;
      if (v393) {
        uint64_t v395 = 256;
      }
      else {
        uint64_t v395 = 0;
      }
      v708[3] = v388;
      *(_OWORD *)&v708[5] = xmmword_261B93F80;
      v708[7] = v391;
      v708[8] = v395 & 0xFFFFFFFFFFFFFFFELL | v392 & 1;
      *(_OWORD *)&v708[9] = (unint64_t)v159;
      *(_OWORD *)&v708[11] = (unint64_t)v160;
      v708[13] = v394;
      LOWORD(v708[14]) = 256;
      id v686 = v388;
      id v685 = v391;
      sub_2619F7774(v159, 0);
      sub_2619F7774(v160, 0);
      sub_2619F7774(v162, 0);
      sub_261A1E438();
      sub_261A1EDA4();
      sub_261B8DD68();
      uint64_t v396 = *(void *)&v740[5];
      char v397 = BYTE8(v740[5]);
      char v398 = BYTE9(v740[5]);
      long long v399 = v740[1];
      v400 = v660;
      _OWORD *v660 = v740[0];
      v400[1] = v399;
      long long v401 = v740[3];
      v400[2] = v740[2];
      v400[3] = v401;
      v400[4] = v740[4];
      *((void *)v400 + 10) = v396;
      *((unsigned char *)v400 + 88) = v397;
      *((unsigned char *)v400 + 89) = v398;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F28);
      sub_261A1EFCC();
      sub_261A1F008();
      uint64_t v402 = (uint64_t)v662;
      sub_261B8DD68();
      goto LABEL_110;
    case 45:
      v634 = v70;
      id v403 = v680;
      sub_261B8C0E8();
      uint64_t v405 = v404;
      id v406 = v685;
      sub_261B8BF78();
      char v407 = sub_261B8BB08();
      swift_release();
      sub_261B8BF78();
      char v408 = sub_261B8BB38();
      swift_release();
      uint64_t v159 = swift_getKeyPath();
      uint64_t v160 = swift_getKeyPath();
      uint64_t v162 = swift_getKeyPath();
      v409 = v645;
      void *v645 = v403;
      v409[1] = v405;
      *((unsigned char *)v409 + 16) = 0;
      v409[3] = 45;
      v409[4] = v406;
      *((unsigned char *)v409 + 40) = v407 & 1;
      *((unsigned char *)v409 + 41) = v408 & 1;
      v409[6] = v159;
      *((unsigned char *)v409 + 56) = 0;
      v409[8] = v160;
      *((unsigned char *)v409 + 72) = 0;
      v409[10] = v162;
      *((unsigned char *)v409 + 88) = 0;
      swift_storeEnumTagMultiPayload();
      id v686 = v403;
      id v685 = v406;
      sub_2619F7774(v159, 0);
      sub_2619F7774(v160, 0);
      sub_2619F7774(v162, 0);
      sub_261A1EDA4();
      sub_261A1F044();
      uint64_t v410 = (uint64_t)v647;
      sub_261B8DD68();
      sub_2619F86F0(v410, (uint64_t)v660, &qword_26A943B50);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F28);
      sub_261A1EFCC();
      sub_261A1F008();
      uint64_t v402 = (uint64_t)v662;
      sub_261B8DD68();
      sub_2619F8754(v410, &qword_26A943B50);
LABEL_110:
      sub_2619F86F0(v402, (uint64_t)v669, &qword_26A943B60);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EE8);
      sub_261A1EE88();
      sub_261A1EF90();
      uint64_t v411 = (uint64_t)v671;
      sub_261B8DD68();
      sub_2619F8754(v402, &qword_26A943B60);
      sub_2619F86F0(v411, (uint64_t)v677, &qword_26A943B70);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E30);
      sub_261A1EA44();
      sub_261A1EE4C();
      uint64_t v412 = (uint64_t)v679;
      sub_261B8DD68();
      sub_2619F8754(v411, &qword_26A943B70);
      sub_2619F86F0(v412, v683, &qword_26A943B80);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      uint64_t v413 = (uint64_t)v634;
      sub_261B8DD68();
      sub_2619F8754(v412, &qword_26A943B80);
      sub_2619F86F0(v413, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      sub_2619F8754(v413, &qword_26A943C18);

      goto LABEL_130;
    case 47:
      v634 = v70;
      v414 = v618;
      (*(void (**)(char *, void, uint64_t))(v649 + 104))(v618, *MEMORY[0x263F87D98], v650);
      sub_261B8BF98();
      uint64_t v415 = sub_261B8C3A8();
      swift_release();
      if (v415)
      {
        *((void *)&v740[1] + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F80);
        *(void *)&v740[2] = sub_2619F8AB8(&qword_26A943F88, &qword_26A943F80);
        *(void *)&v740[0] = v415;
      }
      else
      {
        memset(v740, 0, 40);
      }
      uint64_t v535 = (uint64_t)v674;
      sub_261B8BF98();
      uint64_t v536 = sub_261B8C3C8();
      char v538 = v537;
      swift_release();
      sub_261B8BF98();
      uint64_t v539 = sub_261B8C3A8();
      swift_release();
      if (v539)
      {
        char v540 = sub_261B8C6C8();
        swift_release();
      }
      else
      {
        char v540 = 1;
      }
      v550 = (int *)v653;
      uint64_t v551 = (uint64_t)v640;
      v552 = &v640[*(int *)(v653 + 32)];
      *(void *)v552 = swift_getKeyPath();
      v552[8] = 0;
      (*(void (**)(uint64_t, char *, uint64_t))(v649 + 32))(v551, v414, v650);
      sub_2619FB7EC((uint64_t)v740, v551 + v550[5], &qword_26A943F78);
      uint64_t v553 = v551 + v550[6];
      *(void *)uint64_t v553 = v536;
      *(unsigned char *)(v553 + 8) = v538 & 1;
      *(unsigned char *)(v551 + v550[7]) = v540 & 1;
      uint64_t v554 = v619;
      sub_261A1F698(v551, v619, (uint64_t (*)(void))type metadata accessor for ZoneMetricView);
      uint64_t v555 = v624;
      sub_261A1F698(v554, v624, (uint64_t (*)(void))type metadata accessor for ZoneMetricView);
      long long v109 = type metadata accessor for ZoneMetricView;
      sub_261A1F700(v555, (uint64_t)v642, (uint64_t (*)(void))type metadata accessor for ZoneMetricView);
      swift_storeEnumTagMultiPayload();
      sub_261A1E720();
      sub_261A1F650(&qword_26A943D98, (void (*)(uint64_t))type metadata accessor for ZoneMetricView);
      uint64_t v556 = (uint64_t)v643;
      sub_261B8DD68();
      sub_2619F86F0(v556, v656, &qword_26A943BA0);
      swift_storeEnumTagMultiPayload();
      sub_261A1E5C8();
      sub_261A1E674();
      uint64_t v557 = (uint64_t)v658;
      sub_261B8DD68();
      sub_2619F8754(v556, &qword_26A943BA0);
      sub_2619F86F0(v557, v665, &qword_26A943BC0);
      swift_storeEnumTagMultiPayload();
      sub_261A1E398();
      sub_261A1E58C();
      uint64_t v558 = (uint64_t)v667;
      sub_261B8DD68();
      sub_2619F8754(v557, &qword_26A943BC0);
      sub_2619F86F0(v558, v535, &qword_26A943C08);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DB8);
      sub_261A1E35C();
      sub_261A1E774();
      uint64_t v559 = v675;
      sub_261B8DD68();
      sub_2619F8754(v558, &qword_26A943C08);
      sub_2619F86F0(v559, v683, &qword_26A943C10);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      uint64_t v560 = (uint64_t)v634;
      sub_261B8DD68();
      sub_2619F8754(v559, &qword_26A943C10);
      sub_2619F86F0(v560, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      sub_2619F8754(v560, &qword_26A943C18);
      uint64_t v115 = v555;
LABEL_167:
      sub_261A1F768(v115, (uint64_t (*)(void))v109);
      return;
    case 48:
      uint64_t v94 = (uint64_t)v70;
      id v416 = v685;
      id v417 = v680;
      sub_261B8C008();
      uint64_t v419 = v418;
      sub_261B8BF78();
      char v420 = sub_261B8BB18();
      swift_release();
      uint64_t v100 = swift_getKeyPath();
      *(void *)&v740[0] = v416;
      *((void *)&v740[0] + 1) = 48;
      *(void *)&v740[1] = v417;
      *((void *)&v740[1] + 1) = v100;
      *(void *)&v740[2] = 0;
      *((void *)&v740[2] + 1) = v419;
      *(void *)&v740[4] = 0;
      v740[3] = v420 & 1;
      BYTE8(v740[4]) = 1;
      id v101 = v416;
      id v102 = v417;
      sub_2619F7774(v100, 0);
      sub_261A1E094();
      sub_261B8DD68();
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      *(void *)&v740[4] = v708[11];
      BYTE8(v740[4]) = v708[12];
      BYTE9(v740[4]) = 1;
LABEL_114:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DD8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DE8);
      sub_261A1DEE0(&qword_26A943DD0, &qword_26A943DD8, (void (*)(void))sub_261A1E720, (void (*)(void))sub_261A1E094);
      sub_261A1ED2C(&qword_26A943DE0, &qword_26A943DE8, (void (*)(void))sub_261A1E094);
      sub_261B8DD68();
      if (BYTE9(v695)) {
        __int16 v421 = 256;
      }
      else {
        __int16 v421 = 0;
      }
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      v708[11] = v695;
      LOWORD(v708[12]) = v421 | BYTE8(v695);
      BYTE2(v708[12]) = 0;
LABEL_118:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DC8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DF8);
      sub_261A1E7B0();
      sub_261A1E888();
      sub_261B8DD68();
      uint64_t v422 = *(void *)&v740[4];
      __int16 v423 = WORD4(v740[4]);
      char v424 = BYTE10(v740[4]);
      long long v425 = v740[1];
      v426 = v674;
      _OWORD *v674 = v740[0];
      v426[1] = v425;
      long long v427 = v740[3];
      v426[2] = v740[2];
      v426[3] = v427;
      *((void *)v426 + 8) = v422;
      *((_WORD *)v426 + 36) = v423;
      *((unsigned char *)v426 + 74) = v424;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943DB8);
      sub_261A1E35C();
      sub_261A1E774();
      uint64_t v428 = v675;
      sub_261B8DD68();
      sub_2619F86F0(v428, v683, &qword_26A943C10);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      sub_261B8DD68();
      sub_2619F8754(v428, &qword_26A943C10);
      sub_2619F86F0(v94, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      uint64_t v387 = v94;
LABEL_119:
      sub_2619F8754(v387, &qword_26A943C18);
LABEL_120:

LABEL_121:
      sub_2619F7790(v100, 0);
      swift_bridgeObjectRelease();
      return;
    case 49:
      v634 = v70;
      id v429 = v680;
      sub_261B8BF98();
      uint64_t v430 = sub_261B8C398();
      char v432 = v431;
      swift_release();
      uint64_t v433 = v432 & 1;
      id v434 = v685;
      sub_261B8BF78();
      char v435 = sub_261B8BB08();
      swift_release();
      sub_261B8BF78();
      char v436 = sub_261B8BB38();
      swift_release();
      uint64_t v159 = swift_getKeyPath();
      uint64_t v160 = swift_getKeyPath();
      uint64_t v437 = swift_getKeyPath();
      uint64_t v162 = v437;
      *(void *)&v740[0] = v429;
      *((void *)&v740[0] + 1) = v430;
      if (v436) {
        uint64_t v438 = 256;
      }
      else {
        uint64_t v438 = 0;
      }
      *(void *)&v740[1] = v433;
      *((void *)&v740[1] + 1) = 49;
      *(void *)&v740[2] = v434;
      *((void *)&v740[2] + 1) = v438 & 0xFFFFFFFFFFFFFFFELL | v435 & 1;
      v740[3] = (unint64_t)v159;
      v740[4] = (unint64_t)v160;
      *(void *)&v740[5] = v437;
      WORD4(v740[5]) = 0;
      id v686 = v429;
      id v172 = v434;
      sub_2619F7774(v159, 0);
      sub_2619F7774(v160, 0);
      sub_2619F7774(v162, 0);
      sub_261A1EDA4();
      sub_261A1EDF8();
      sub_261B8DD68();
      if (BYTE1(v708[14])) {
        __int16 v439 = 256;
      }
      else {
        __int16 v439 = 0;
      }
      v740[0] = *(_OWORD *)&v708[3];
      v740[1] = *(_OWORD *)&v708[5];
      v740[2] = *(_OWORD *)&v708[7];
      v740[3] = *(_OWORD *)&v708[9];
      v740[4] = *(_OWORD *)&v708[11];
      *(void *)&v740[5] = v708[13];
      WORD4(v740[5]) = v439 | LOBYTE(v708[14]);
      BYTE10(v740[5]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EB0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EC8);
      sub_261A1ED2C(&qword_26A943EA8, &qword_26A943EB0, (void (*)(void))sub_261A1EDA4);
      sub_261A1DEE0(&qword_26A943EC0, &qword_26A943EC8, (void (*)(void))sub_261A1EDA4, (void (*)(void))sub_261A1EDF8);
      sub_261B8DD68();
      *(_OWORD *)&v708[3] = v691;
      *(_OWORD *)&v708[5] = v692;
      *(_OWORD *)&v708[7] = v693;
      *(_OWORD *)&v708[9] = v694;
      *(_OWORD *)&v708[11] = v695;
      v708[13] = v696;
      LOWORD(v708[14]) = v697;
      BYTE2(v708[14]) = v698 != 0;
      BYTE3(v708[14]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943EA0);
      sub_261A1EA80();
      sub_261A1EC54();
      sub_261B8DD68();
      uint64_t v440 = *(void *)&v740[5];
      __int16 v441 = WORD4(v740[5]);
      char v442 = BYTE10(v740[5]);
      char v443 = BYTE11(v740[5]);
      long long v444 = v740[1];
      v445 = v677;
      _OWORD *v677 = v740[0];
      v445[1] = v444;
      long long v446 = v740[3];
      v445[2] = v740[2];
      v445[3] = v446;
      v445[4] = v740[4];
      *((void *)v445 + 10) = v440;
      *((unsigned char *)v445 + 90) = v442;
      *((_WORD *)v445 + 44) = v441;
      *((unsigned char *)v445 + 91) = v443;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943E30);
      sub_261A1EA44();
      sub_261A1EE4C();
      uint64_t v447 = (uint64_t)v679;
      sub_261B8DD68();
      sub_2619F86F0(v447, v683, &qword_26A943B80);
      swift_storeEnumTagMultiPayload();
      sub_261A1E320();
      sub_261A1EA08();
      uint64_t v448 = (uint64_t)v634;
      sub_261B8DD68();
      sub_2619F8754(v447, &qword_26A943B80);
      sub_2619F86F0(v448, v689, &qword_26A943C18);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      uint64_t v183 = v448;
LABEL_129:
      sub_2619F8754(v183, &qword_26A943C18);

LABEL_130:
      sub_2619F7790(v159, 0);
      sub_2619F7790(v160, 0);
      uint64_t v307 = v162;
      goto LABEL_131;
    case 53:
      uint64_t v449 = sub_261B8C188();
      char v451 = v450;
      uint64_t v452 = swift_getKeyPath();
      uint64_t KeyPath = v452;
      if (v451) {
        uint64_t v453 = 0;
      }
      else {
        uint64_t v453 = v449;
      }
      *(void *)&v740[0] = 53;
      *((void *)&v740[0] + 1) = v453;
      *(void *)&v740[1] = v685;
      *((void *)&v740[1] + 1) = v452;
      LOWORD(v740[2]) = 0;
      id v81 = v685;
      sub_2619F7774(KeyPath, 0);
      sub_261A1DD50();
      sub_261A1DDA4();
      sub_261B8DD68();
      long long v729 = *(_OWORD *)&v708[3];
      long long v730 = *(_OWORD *)&v708[5];
      LOWORD(v731) = v708[7];
      sub_261A1F2F8((uint64_t)&v729);
      sub_2619FB7EC((uint64_t)&v729, (uint64_t)v740, &qword_26A943C48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C58);
      sub_261A1DD14();
      sub_261A1DDF8();
      sub_261B8DD68();
      long long v743 = v707;
      v744[0] = *(_OWORD *)v708;
      *(_DWORD *)((char *)v744 + 15) = *(_DWORD *)((char *)&v708[1] + 7);
      v740[4] = v703;
      v740[5] = v704;
      long long v742 = v706;
      long long v741 = v705;
      v740[0] = v699;
      v740[1] = v700;
      v740[3] = v702;
      v740[2] = v701;
      sub_261A1DE98((uint64_t)v740);
      sub_2619FB7EC((uint64_t)v740, (uint64_t)&v691, &qword_26A943C80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C88);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C90);
      sub_261A1DEA4();
      sub_261A1E2A8();
      sub_261B8DD68();
      long long v454 = v712;
      uint64_t v455 = v689;
      *(_OWORD *)(v689 + 128) = v711;
      *(_OWORD *)(v455 + 144) = v454;
      *(_DWORD *)(v455 + 160) = v713;
      long long v456 = *(_OWORD *)&v708[13];
      *(_OWORD *)(v455 + 64) = *(_OWORD *)&v708[11];
      *(_OWORD *)(v455 + 80) = v456;
      long long v457 = v710;
      *(_OWORD *)(v455 + 96) = v709;
      *(_OWORD *)(v455 + 112) = v457;
      long long v458 = *(_OWORD *)&v708[5];
      *(_OWORD *)uint64_t v455 = *(_OWORD *)&v708[3];
      *(_OWORD *)(v455 + 16) = v458;
      long long v459 = *(_OWORD *)&v708[9];
      *(_OWORD *)(v455 + 32) = *(_OWORD *)&v708[7];
      *(_OWORD *)(v455 + 48) = v459;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
LABEL_76:

      uint64_t v307 = KeyPath;
LABEL_131:
      sub_2619F7790(v307, 0);
      return;
    case 54:
      uint64_t v460 = sub_261B8C0D8();
      id v462 = v685;
      *(void *)&v740[0] = v685;
      *((void *)&v740[0] + 1) = v460;
      v740[1] = v461 & 1;
      LOWORD(v740[2]) = 256;
      sub_261A1DD50();
      sub_261A1DDA4();
      id v463 = v462;
      sub_261B8DD68();
      long long v729 = *(_OWORD *)&v708[3];
      long long v730 = *(_OWORD *)&v708[5];
      LOWORD(v731) = v708[7];
      sub_261A1F2F8((uint64_t)&v729);
LABEL_137:
      sub_2619FB7EC((uint64_t)&v729, (uint64_t)v740, &qword_26A943C48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C58);
      sub_261A1DD14();
      sub_261A1DDF8();
      sub_261B8DD68();
      long long v743 = v707;
      v744[0] = *(_OWORD *)v708;
      *(_DWORD *)((char *)v744 + 15) = *(_DWORD *)((char *)&v708[1] + 7);
      v740[4] = v703;
      v740[5] = v704;
      long long v742 = v706;
      long long v741 = v705;
      v740[0] = v699;
      v740[1] = v700;
      v740[3] = v702;
      v740[2] = v701;
      sub_261A1DE98((uint64_t)v740);
LABEL_144:
      sub_2619FB7EC((uint64_t)v740, (uint64_t)&v691, &qword_26A943C80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C88);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C90);
      sub_261A1DEA4();
      sub_261A1E2A8();
      sub_261B8DD68();
      long long v468 = v712;
      uint64_t v469 = v689;
      *(_OWORD *)(v689 + 128) = v711;
      *(_OWORD *)(v469 + 144) = v468;
      *(_DWORD *)(v469 + 160) = v713;
      long long v470 = *(_OWORD *)&v708[13];
      *(_OWORD *)(v469 + 64) = *(_OWORD *)&v708[11];
      *(_OWORD *)(v469 + 80) = v470;
      long long v471 = v710;
      *(_OWORD *)(v469 + 96) = v709;
      *(_OWORD *)(v469 + 112) = v471;
      long long v472 = *(_OWORD *)&v708[5];
      *(_OWORD *)uint64_t v469 = *(_OWORD *)&v708[3];
      *(_OWORD *)(v469 + 16) = v472;
      long long v473 = *(_OWORD *)&v708[9];
      *(_OWORD *)(v469 + 32) = *(_OWORD *)&v708[7];
      *(_OWORD *)(v469 + 48) = v473;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      return;
    default:
      uint64_t v520 = sub_261B8DAD8();
      sub_261A1D854((uint64_t)v714);
      *(_OWORD *)((char *)&v716[6] + 7) = v714[6];
      *(_OWORD *)((char *)&v716[5] + 7) = v714[5];
      *(_OWORD *)((char *)&v716[2] + 7) = v714[2];
      *(_OWORD *)((char *)&v716[1] + 7) = v714[1];
      *(_OWORD *)((char *)&v716[7] + 7) = v715[0];
      v716[8] = *(_OWORD *)((char *)v715 + 9);
      *(_OWORD *)((char *)&v716[3] + 7) = v714[3];
      *(_OWORD *)((char *)&v716[4] + 7) = v714[4];
      *(_OWORD *)((char *)v716 + 7) = v714[0];
      long long v725 = v716[5];
      long long v726 = v716[6];
      long long v727 = v716[7];
      long long v728 = *(_OWORD *)((char *)v715 + 9);
      long long v721 = v716[1];
      long long v722 = v716[2];
      long long v723 = v716[3];
      long long v724 = v716[4];
      char v717 = 1;
      v718[0] = v520;
      v718[1] = 0;
      char v719 = 1;
      long long v720 = v716[0];
      sub_261A1DBC0((uint64_t)v718);
      sub_2619FB7EC((uint64_t)v718, (uint64_t)v740, &qword_26A943C20);
      sub_261A1DBCC((uint64_t)v714);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C30);
      sub_261A1DC9C();
      sub_2619F8AB8(&qword_26A943C40, &qword_26A943C30);
      sub_261B8DD68();
      long long v737 = v711;
      long long v738 = v712;
      __int16 v739 = v713;
      long long v733 = *(_OWORD *)&v708[11];
      long long v734 = *(_OWORD *)&v708[13];
      long long v736 = v710;
      long long v735 = v709;
      long long v729 = *(_OWORD *)&v708[3];
      long long v730 = *(_OWORD *)&v708[5];
      long long v732 = *(_OWORD *)&v708[9];
      long long v731 = *(_OWORD *)&v708[7];
      sub_261A1DD08((uint64_t)&v729);
      sub_2619FB7EC((uint64_t)&v729, (uint64_t)v740, &qword_26A943C48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C58);
      sub_261A1DD14();
      sub_261A1DDF8();
      sub_261B8DD68();
      long long v743 = v707;
      v744[0] = *(_OWORD *)v708;
      *(_DWORD *)((char *)v744 + 15) = *(_DWORD *)((char *)&v708[1] + 7);
      v740[4] = v703;
      v740[5] = v704;
      long long v742 = v706;
      long long v741 = v705;
      v740[0] = v699;
      v740[1] = v700;
      v740[3] = v702;
      v740[2] = v701;
      sub_261A1DE98((uint64_t)v740);
      sub_2619FB7EC((uint64_t)v740, (uint64_t)&v691, &qword_26A943C80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C88);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943C90);
      sub_261A1DEA4();
      sub_261A1E2A8();
      sub_261B8DD68();
      long long v521 = v712;
      uint64_t v522 = v689;
      *(_OWORD *)(v689 + 128) = v711;
      *(_OWORD *)(v522 + 144) = v521;
      *(_DWORD *)(v522 + 160) = v713;
      long long v523 = *(_OWORD *)&v708[13];
      *(_OWORD *)(v522 + 64) = *(_OWORD *)&v708[11];
      *(_OWORD *)(v522 + 80) = v523;
      long long v524 = v710;
      *(_OWORD *)(v522 + 96) = v709;
      *(_OWORD *)(v522 + 112) = v524;
      long long v525 = *(_OWORD *)&v708[5];
      *(_OWORD *)uint64_t v522 = *(_OWORD *)&v708[3];
      *(_OWORD *)(v522 + 16) = v525;
      long long v526 = *(_OWORD *)&v708[9];
      *(_OWORD *)(v522 + 32) = *(_OWORD *)&v708[7];
      *(_OWORD *)(v522 + 48) = v526;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943D30);
      sub_261A1E2E4();
      sub_261A1F1E4();
      sub_261B8DD68();
      sub_261A1F220((uint64_t)v714);
      return;
  }
}

uint64_t sub_261A1D854@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_261B8DB88();
  MEMORY[0x270FA5388](v2 - 8);
  sub_261B8DB78();
  sub_261B8DB68();
  sub_261B8DB38();
  sub_261B8DB68();
  sub_261B8DBA8();
  uint64_t v3 = sub_261B8E3B8();
  uint64_t v29 = v4;
  uint64_t v30 = v3;
  uint64_t v28 = v5;
  char v7 = v6 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v31 = 0xD000000000000012;
  unint64_t v32 = 0x8000000261B9DF10;
  sub_261A029C4();
  uint64_t v8 = sub_261B8F768();
  sub_261A704F8(1, v8, v9, 0, MEMORY[0x263F8EE78], (uint64_t)&v31);
  swift_bridgeObjectRelease();
  uint64_t v10 = v31;
  uint64_t v11 = v32;
  char v12 = v33;
  uint64_t v13 = v34;
  char v14 = v35;
  uint64_t v15 = v36;
  char v16 = v37;
  char v17 = v38;
  uint64_t v18 = v39;
  uint64_t v19 = v40;
  char v26 = v41;
  char v53 = v7;
  char v50 = 0;
  char v48 = v33;
  char v45 = v37;
  char v42 = v41;
  *(_DWORD *)(a1 + 17) = v31;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)&v31 + 3);
  *(_DWORD *)(a1 + 34) = v51;
  *(_WORD *)(a1 + 38) = v52;
  int v20 = *(_DWORD *)v49;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)&v49[3];
  *(_DWORD *)(a1 + 49) = v20;
  int v21 = *(_DWORD *)v47;
  *(_DWORD *)(a1 + 76) = *(_DWORD *)&v47[3];
  *(_DWORD *)(a1 + 73) = v21;
  int v22 = *(_DWORD *)v46;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v46[3];
  *(_DWORD *)(a1 + 89) = v22;
  LOBYTE(v22) = v45;
  int v23 = *(_DWORD *)v44;
  *(_DWORD *)(a1 + 108) = *(_DWORD *)&v44[3];
  *(_DWORD *)(a1 + 105) = v23;
  int v24 = *(_DWORD *)v43;
  *(_DWORD *)(a1 + 116) = *(_DWORD *)&v43[3];
  *(_DWORD *)(a1 + 113) = v24;
  LOBYTE(v24) = v42;
  *(void *)a1 = v30;
  *(void *)(a1 + 8) = v29;
  *(unsigned char *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v28;
  *(_WORD *)(a1 + 32) = 256;
  *(void *)(a1 + 40) = KeyPath;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(unsigned char *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(unsigned char *)(a1 + 104) = v22;
  *(unsigned char *)(a1 + 112) = v17;
  *(void *)(a1 + 120) = v18;
  *(void *)(a1 + 128) = v19;
  *(unsigned char *)(a1 + 136) = v24;
  sub_261A001D0(v30, v29, v7);
  swift_bridgeObjectRetain();
  sub_2619F7774(KeyPath, 0);
  sub_261A001D0(v10, v11, v12);
  swift_bridgeObjectRetain();
  sub_2619F7774(v15, v16);
  sub_2619F7774(v19, v26);
  sub_261A02A18(v10, v11, v12);
  swift_bridgeObjectRelease();
  sub_2619F7790(v15, v16);
  sub_2619F7790(v19, v26);
  sub_261A02A18(v30, v29, v7);
  swift_bridgeObjectRelease();
  return sub_2619F7790(KeyPath, 0);
}

uint64_t sub_261A1DBC0(uint64_t result)
{
  *(unsigned char *)(result + 161) = 1;
  return result;
}

uint64_t sub_261A1DBCC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  char v6 = *(unsigned char *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 96);
  char v8 = *(unsigned char *)(a1 + 104);
  uint64_t v11 = *(void *)(a1 + 128);
  char v10 = *(unsigned char *)(a1 + 136);
  sub_261A001D0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRetain();
  sub_2619F7774(v2, v3);
  sub_261A001D0(v4, v5, v6);
  swift_bridgeObjectRetain();
  sub_2619F7774(v7, v8);
  sub_2619F7774(v11, v10);
  return a1;
}

unint64_t sub_261A1DC9C()
{
  unint64_t result = qword_26A943C38;
  if (!qword_26A943C38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943C28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943C38);
  }
  return result;
}

uint64_t sub_261A1DD08(uint64_t result)
{
  *(unsigned char *)(result + 162) = 1;
  return result;
}

uint64_t sub_261A1DD14()
{
  return sub_261A1DEE0(&qword_26A943C60, &qword_26A943C50, (void (*)(void))sub_261A1DD50, (void (*)(void))sub_261A1DDA4);
}

unint64_t sub_261A1DD50()
{
  unint64_t result = qword_26A943C68;
  if (!qword_26A943C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943C68);
  }
  return result;
}

unint64_t sub_261A1DDA4()
{
  unint64_t result = qword_26A943C70;
  if (!qword_26A943C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943C70);
  }
  return result;
}

unint64_t sub_261A1DDF8()
{
  unint64_t result = qword_26A943C78;
  if (!qword_26A943C78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943C58);
    sub_261A1DC9C();
    sub_2619F8AB8(&qword_26A943C40, &qword_26A943C30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943C78);
  }
  return result;
}

uint64_t sub_261A1DE98(uint64_t result)
{
  *(unsigned char *)(result + 163) = 1;
  return result;
}

uint64_t sub_261A1DEA4()
{
  return sub_261A1DEE0(&qword_26A943C98, &qword_26A943C88, (void (*)(void))sub_261A1DF68, (void (*)(void))sub_261A1E13C);
}

uint64_t sub_261A1DEE0(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A1DF68()
{
  unint64_t result = qword_26A943CA0;
  if (!qword_26A943CA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943CA8);
    sub_261A1DEE0(&qword_26A943CB0, &qword_26A943CB8, (void (*)(void))sub_261A1E040, (void (*)(void))sub_261A1E094);
    sub_261A1ED2C(&qword_26A943CD0, &qword_26A943CD8, (void (*)(void))sub_261A1E0E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943CA0);
  }
  return result;
}

unint64_t sub_261A1E040()
{
  unint64_t result = qword_26A943CC0;
  if (!qword_26A943CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943CC0);
  }
  return result;
}

unint64_t sub_261A1E094()
{
  unint64_t result = qword_26A943CC8;
  if (!qword_26A943CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943CC8);
  }
  return result;
}

unint64_t sub_261A1E0E8()
{
  unint64_t result = qword_26A943CE0;
  if (!qword_26A943CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943CE0);
  }
  return result;
}

unint64_t sub_261A1E13C()
{
  unint64_t result = qword_26A943CE8;
  if (!qword_26A943CE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943CF0);
    sub_261A1ED2C(&qword_26A943CF8, &qword_26A943D00, (void (*)(void))sub_261A1E200);
    sub_261A1ED2C(&qword_26A943D10, &qword_26A943D18, (void (*)(void))sub_261A1E254);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943CE8);
  }
  return result;
}

unint64_t sub_261A1E200()
{
  unint64_t result = qword_26A943D08;
  if (!qword_26A943D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943D08);
  }
  return result;
}

unint64_t sub_261A1E254()
{
  unint64_t result = qword_26A943D20;
  if (!qword_26A943D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943D20);
  }
  return result;
}

uint64_t sub_261A1E2A8()
{
  return sub_261A1DEE0(&qword_26A943D28, &qword_26A943C90, (void (*)(void))sub_261A1DD14, (void (*)(void))sub_261A1DDF8);
}

uint64_t sub_261A1E2E4()
{
  return sub_261A1DEE0(&qword_26A943D38, &qword_26A943C18, (void (*)(void))sub_261A1E320, (void (*)(void))sub_261A1EA08);
}

uint64_t sub_261A1E320()
{
  return sub_261A1DEE0(&qword_26A943D40, &qword_26A943C10, (void (*)(void))sub_261A1E35C, (void (*)(void))sub_261A1E774);
}

uint64_t sub_261A1E35C()
{
  return sub_261A1DEE0(&qword_26A943D48, &qword_26A943C08, (void (*)(void))sub_261A1E398, (void (*)(void))sub_261A1E58C);
}

unint64_t sub_261A1E398()
{
  unint64_t result = qword_26A943D50;
  if (!qword_26A943D50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943C00);
    sub_261A1ED2C(&qword_26A943D58, &qword_26A943D60, (void (*)(void))sub_261A1E438);
    sub_261A1E48C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943D50);
  }
  return result;
}

unint64_t sub_261A1E438()
{
  unint64_t result = qword_26A943D68;
  if (!qword_26A943D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943D68);
  }
  return result;
}

unint64_t sub_261A1E48C()
{
  unint64_t result = qword_26A943D70;
  if (!qword_26A943D70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943BD0);
    sub_261A1F650(&qword_26A943D78, (void (*)(uint64_t))type metadata accessor for HeartRateMetricView);
    sub_261A1E538();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943D70);
  }
  return result;
}

unint64_t sub_261A1E538()
{
  unint64_t result = qword_26A943D80;
  if (!qword_26A943D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943D80);
  }
  return result;
}

uint64_t sub_261A1E58C()
{
  return sub_261A1DEE0(&qword_26A943D88, &qword_26A943BC0, (void (*)(void))sub_261A1E5C8, (void (*)(void))sub_261A1E674);
}

unint64_t sub_261A1E5C8()
{
  unint64_t result = qword_26A943D90;
  if (!qword_26A943D90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943BB8);
    sub_261A1E538();
    sub_261A1F650(&qword_26A943D98, (void (*)(uint64_t))type metadata accessor for ZoneMetricView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943D90);
  }
  return result;
}

unint64_t sub_261A1E674()
{
  unint64_t result = qword_26A943DA0;
  if (!qword_26A943DA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943BA0);
    sub_261A1E720();
    sub_261A1F650(&qword_26A943D98, (void (*)(uint64_t))type metadata accessor for ZoneMetricView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943DA0);
  }
  return result;
}

unint64_t sub_261A1E720()
{
  unint64_t result = qword_26A943DA8;
  if (!qword_26A943DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943DA8);
  }
  return result;
}

uint64_t sub_261A1E774()
{
  return sub_261A1DEE0(&qword_26A943DB0, &qword_26A943DB8, (void (*)(void))sub_261A1E7B0, (void (*)(void))sub_261A1E888);
}

unint64_t sub_261A1E7B0()
{
  unint64_t result = qword_26A943DC0;
  if (!qword_26A943DC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943DC8);
    sub_261A1DEE0(&qword_26A943DD0, &qword_26A943DD8, (void (*)(void))sub_261A1E720, (void (*)(void))sub_261A1E094);
    sub_261A1ED2C(&qword_26A943DE0, &qword_26A943DE8, (void (*)(void))sub_261A1E094);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943DC0);
  }
  return result;
}

unint64_t sub_261A1E888()
{
  unint64_t result = qword_26A943DF0;
  if (!qword_26A943DF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943DF8);
    sub_261A1ED2C(&qword_26A943DE0, &qword_26A943DE8, (void (*)(void))sub_261A1E094);
    sub_261A1DEE0(&qword_26A943E00, &qword_26A943E08, (void (*)(void))sub_261A1E960, (void (*)(void))sub_261A1E9B4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943DF0);
  }
  return result;
}

unint64_t sub_261A1E960()
{
  unint64_t result = qword_26A943E10;
  if (!qword_26A943E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943E10);
  }
  return result;
}

unint64_t sub_261A1E9B4()
{
  unint64_t result = qword_26A943E18;
  if (!qword_26A943E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943E18);
  }
  return result;
}

uint64_t sub_261A1EA08()
{
  return sub_261A1DEE0(&qword_26A943E20, &qword_26A943B80, (void (*)(void))sub_261A1EA44, (void (*)(void))sub_261A1EE4C);
}

uint64_t sub_261A1EA44()
{
  return sub_261A1DEE0(&qword_26A943E28, &qword_26A943E30, (void (*)(void))sub_261A1EA80, (void (*)(void))sub_261A1EC54);
}

uint64_t sub_261A1EA80()
{
  return sub_261A1DEE0(&qword_26A943E38, &qword_26A943E40, (void (*)(void))sub_261A1EABC, (void (*)(void))sub_261A1EBC4);
}

uint64_t sub_261A1EABC()
{
  return sub_261A1DEE0(&qword_26A943E48, &qword_26A943E50, (void (*)(void))sub_261A1EAF8, (void (*)(void))sub_261A1EB70);
}

uint64_t sub_261A1EAF8()
{
  return sub_261A1DEE0(&qword_26A943E58, &qword_26A943E60, (void (*)(void))sub_261A1EB34, (void (*)(void))sub_261A1EB70);
}

uint64_t sub_261A1EB34()
{
  return sub_261A1DEE0(&qword_26A943E68, &qword_26A943E70, (void (*)(void))sub_261A1EB70, (void (*)(void))sub_261A1DC9C);
}

unint64_t sub_261A1EB70()
{
  unint64_t result = qword_26A943E78;
  if (!qword_26A943E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943E78);
  }
  return result;
}

uint64_t sub_261A1EBC4()
{
  return sub_261A1DEE0(&qword_26A943E80, &qword_26A943E88, (void (*)(void))sub_261A1DD50, (void (*)(void))sub_261A1EC00);
}

unint64_t sub_261A1EC00()
{
  unint64_t result = qword_26A943E90;
  if (!qword_26A943E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943E90);
  }
  return result;
}

unint64_t sub_261A1EC54()
{
  unint64_t result = qword_26A943E98;
  if (!qword_26A943E98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943EA0);
    sub_261A1ED2C(&qword_26A943EA8, &qword_26A943EB0, (void (*)(void))sub_261A1EDA4);
    sub_261A1DEE0(&qword_26A943EC0, &qword_26A943EC8, (void (*)(void))sub_261A1EDA4, (void (*)(void))sub_261A1EDF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943E98);
  }
  return result;
}

uint64_t sub_261A1ED2C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A1EDA4()
{
  unint64_t result = qword_26A943EB8;
  if (!qword_26A943EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943EB8);
  }
  return result;
}

unint64_t sub_261A1EDF8()
{
  unint64_t result = qword_26A943ED0;
  if (!qword_26A943ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943ED0);
  }
  return result;
}

uint64_t sub_261A1EE4C()
{
  return sub_261A1DEE0(&qword_26A943ED8, &qword_26A943B70, (void (*)(void))sub_261A1EE88, (void (*)(void))sub_261A1EF90);
}

uint64_t sub_261A1EE88()
{
  return sub_261A1DEE0(&qword_26A943EE0, &qword_26A943EE8, (void (*)(void))sub_261A1EEC4, (void (*)(void))sub_261A1EF54);
}

uint64_t sub_261A1EEC4()
{
  return sub_261A1DEE0(&qword_26A943EF0, &qword_26A943EF8, (void (*)(void))sub_261A1EF00, (void (*)(void))sub_261A1E040);
}

unint64_t sub_261A1EF00()
{
  unint64_t result = qword_26A943F00;
  if (!qword_26A943F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943F00);
  }
  return result;
}

uint64_t sub_261A1EF54()
{
  return sub_261A1DEE0(&qword_26A943F08, &qword_26A943F10, (void (*)(void))sub_261A1E094, (void (*)(void))sub_261A1E438);
}

uint64_t sub_261A1EF90()
{
  return sub_261A1DEE0(&qword_26A943F18, &qword_26A943B60, (void (*)(void))sub_261A1EFCC, (void (*)(void))sub_261A1F008);
}

uint64_t sub_261A1EFCC()
{
  return sub_261A1DEE0(&qword_26A943F20, &qword_26A943F28, (void (*)(void))sub_261A1E438, (void (*)(void))sub_261A1EDA4);
}

uint64_t sub_261A1F008()
{
  return sub_261A1DEE0(&qword_26A943F30, &qword_26A943B50, (void (*)(void))sub_261A1EDA4, (void (*)(void))sub_261A1F044);
}

unint64_t sub_261A1F044()
{
  unint64_t result = qword_26A943F38;
  if (!qword_26A943F38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943B40);
    sub_261A1F0E4();
    sub_2619F8AB8((unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943F38);
  }
  return result;
}

unint64_t sub_261A1F0E4()
{
  unint64_t result = qword_26A943F40;
  if (!qword_26A943F40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9433E8);
    sub_261A1F650(&qword_26A943F48, (void (*)(uint64_t))type metadata accessor for WorkoutTimeView);
    sub_261A1F190();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943F40);
  }
  return result;
}

unint64_t sub_261A1F190()
{
  unint64_t result = qword_26A943F50;
  if (!qword_26A943F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943F50);
  }
  return result;
}

uint64_t sub_261A1F1E4()
{
  return sub_261A1DEE0(&qword_26A943F58, &qword_26A943D30, (void (*)(void))sub_261A1DEA4, (void (*)(void))sub_261A1E2A8);
}

uint64_t sub_261A1F220(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  char v6 = *(unsigned char *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 96);
  char v8 = *(unsigned char *)(a1 + 104);
  uint64_t v11 = *(void *)(a1 + 128);
  char v10 = *(unsigned char *)(a1 + 136);
  sub_261A02A18(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  sub_2619F7790(v2, v3);
  sub_261A02A18(v4, v5, v6);
  swift_bridgeObjectRelease();
  sub_2619F7790(v7, v8);
  sub_2619F7790(v11, v10);
  return a1;
}

uint64_t sub_261A1F2F0(uint64_t result)
{
  *(unsigned char *)(result + 161) = 0;
  return result;
}

uint64_t sub_261A1F2F8(uint64_t result)
{
  *(unsigned char *)(result + 162) = 0;
  return result;
}

uint64_t sub_261A1F308(uint64_t result)
{
  *(unsigned char *)(result + 163) = 0;
  return result;
}

uint64_t sub_261A1F310@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_261B8D8F8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_261A1F340@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_261B8D8F8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_261A1F370()
{
  return sub_261B8D908();
}

uint64_t sub_261A1F398()
{
  return sub_261B8D908();
}

uint64_t sub_261A1F3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A1F430(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, __int16 a9, char a10)
{
  if (a10)
  {
    swift_bridgeObjectRetain();
    id v13 = a1;
    id v14 = a5;
    return sub_2619F7774(a8, a9 & 1);
  }
  else
  {
    __int16 v17 = a9 & 0x1FF;
    return sub_261A1F4CC((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, v17, SHIBYTE(v17));
  }
}

uint64_t sub_261A1F4CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if ((a10 & 1) == 0)
  {
    char v12 = (void *)result;
    swift_bridgeObjectRetain();
    id v13 = v12;
    id v14 = a5;
    return sub_2619F7774(a8, a9 & 1);
  }
  return result;
}

void *sub_261A1F540(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, __int16 a9, char a10)
{
  if (a10)
  {

    swift_bridgeObjectRelease();
    return (void *)sub_2619F7790(a8, a9 & 1);
  }
  else
  {
    __int16 v14 = a9 & 0x1FF;
    return sub_261A1F5DC(a1, a2, a3, a4, a5, a6, a7, a8, v14, SHIBYTE(v14));
  }
}

void *sub_261A1F5DC(void *result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if ((a10 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    return (void *)sub_2619F7790(a8, a9 & 1);
  }
  return result;
}

uint64_t sub_261A1F650(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A1F698(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A1F700(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A1F768(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for MetricViewBuilder()
{
  return &type metadata for MetricViewBuilder;
}

uint64_t sub_261A1F7D8()
{
  return sub_261A1DEE0(&qword_26A943FA0, &qword_26A943FA8, (void (*)(void))sub_261A1E2E4, (void (*)(void))sub_261A1F1E4);
}

uint64_t sub_261A1F828@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_261A225E8();
  sub_261B8B038();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  return sub_261A226C8(v3, a1, type metadata accessor for TrainingLoadChart.Configuration);
}

uint64_t sub_261A1F8D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_261A225E8();
  sub_261B8B038();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  return sub_261A226C8(v4, a2, type metadata accessor for TrainingLoadChart.Configuration);
}

uint64_t sub_261A1F988(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for TrainingLoadChart.Configuration(0);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_261A226C8(a1, (uint64_t)v6, type metadata accessor for TrainingLoadChart.Configuration);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_261A225E8();
  sub_261B8B028();
  swift_release();
  return sub_261A2274C((uint64_t)v6, type metadata accessor for TrainingLoadChart.Configuration);
}

uint64_t sub_261A1FAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  sub_261A227AC(a2, v3);
  return swift_endAccess();
}

uint64_t sub_261A1FB10()
{
  uint64_t v1 = sub_261B8CE88();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8C618();
  swift_retain_n();
  uint64_t v5 = sub_261B8CE78();
  os_log_type_t v6 = sub_261B8F4A8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    uint64_t v9 = v7 + 4;
    swift_getKeyPath();
    uint64_t v10 = v0;
    sub_261A225E8();
    sub_261B8B038();
    swift_release();
    uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset);
    sub_261B8F6F8();
    swift_release_n();
    _os_log_impl(&dword_2619F0000, v5, v6, "Changing offset to %f", v7, 0xCu);
    MEMORY[0x263E4E970](v7, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

double sub_261A1FD08()
{
  swift_getKeyPath();
  sub_261A225E8();
  sub_261B8B038();
  swift_release();
  return *(double *)(v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset);
}

double sub_261A1FD80@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_261A225E8();
  sub_261B8B038();
  swift_release();
  double result = *(double *)(v3 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset);
  *a2 = result;
  return result;
}

uint64_t sub_261A1FE00()
{
  return swift_release();
}

uint64_t sub_261A1FEA8(uint64_t a1, double a2)
{
  *(double *)(a1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset) = a2;
  return sub_261A1FB10();
}

uint64_t sub_261A1FEE0()
{
  swift_getKeyPath();
  sub_261A225E8();
  sub_261B8B038();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for TrainingLoadChart.Configuration(0);
  unint64_t v3 = *(void *)(*(void *)(v1 + *(int *)(v2 + 28)) + 16);
  swift_getKeyPath();
  sub_261B8B038();
  swift_release();
  uint64_t result = 0;
  if (*(void *)(*(void *)(v1 + *(int *)(v2 + 24)) + 16) < v3)
  {
    swift_getKeyPath();
    sub_261B8B038();
    swift_release();
    uint64_t v5 = *(void *)(*(void *)(v1 + *(int *)(v2 + 28)) + 16);
    swift_getKeyPath();
    sub_261B8B038();
    swift_release();
    return v5 - *(void *)(*(void *)(v1 + *(int *)(v2 + 24)) + 16);
  }
  return result;
}

double sub_261A20050()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C98);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v23 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_261B8C9E8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  __int16 v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v23[1] = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel___observationRegistrar;
  uint64_t v24 = v0;
  v23[0] = sub_261A225E8();
  sub_261B8B038();
  swift_release();
  uint64_t v15 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  uint64_t v16 = type metadata accessor for TrainingLoadChart.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15 + *(int *)(v16 + 20), v11);
  sub_261B8C9A8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v17 = sub_261B8EEC8();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v7, v10, v17);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v19(v7, 0, 1, v17);
  v19(v4, 1, 1, v17);
  uint64_t v20 = sub_261B1376C((uint64_t)v7, (uint64_t)v4);
  sub_2619F8754((uint64_t)v4, &qword_26B416C98);
  sub_2619F8754((uint64_t)v7, &qword_26B416C98);
  sub_2619F8754((uint64_t)v10, &qword_26B416CA8);
  swift_getKeyPath();
  v23[2] = v1;
  sub_261B8B038();
  swift_release();
  uint64_t v21 = *(void *)(*(void *)(v15 + *(int *)(v16 + 24)) + 16);
  if (v21 >= v20) {
    return (double)v20;
  }
  return (double)v21;
}

double sub_261A20394()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C98);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v24 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  int v23 = (char *)&v21 - v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CA8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8C9E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v26 = v0;
  sub_261A225E8();
  sub_261B8B038();
  swift_release();
  uint64_t v12 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  uint64_t v13 = type metadata accessor for TrainingLoadChart.Configuration(0);
  uint64_t v22 = *(void *)(*(void *)(v12 + *(int *)(v13 + 24)) + 16);
  swift_getKeyPath();
  uint64_t v25 = v0;
  sub_261B8B038();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12 + *(int *)(v13 + 20), v8);
  sub_261B8C9A8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v14 = sub_261B8EEC8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = (uint64_t)v23;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v23, v7, v14);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v17(v16, 0, 1, v14);
  uint64_t v18 = (uint64_t)v24;
  v17((uint64_t)v24, 1, 1, v14);
  uint64_t v19 = sub_261B1376C(v16, v18);
  sub_2619F8754(v18, &qword_26B416C98);
  sub_2619F8754(v16, &qword_26B416C98);
  sub_2619F8754((uint64_t)v7, &qword_26B416CA8);
  double result = 1.0;
  if (v22 < v19) {
    return 0.0;
  }
  return result;
}

uint64_t sub_261A206F0(uint64_t a1)
{
  uint64_t v50 = a1;
  uint64_t v2 = sub_261B8ADD8();
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v46 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_261B8AF08();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_261B8AFC8();
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8C9E8();
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v45 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v39 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  char v38 = (char *)&v37 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943FF0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TrainingLoadChart.Configuration(0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v37 - v23;
  *(void *)(v1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset) = 0xBFF0000000000000;
  uint64_t v49 = v1;
  sub_261B8B068();
  sub_261A22810(v50, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_2619F8754((uint64_t)v17, &qword_26A943FF0);
    uint64_t v25 = v40;
    uint64_t v26 = v42;
    (*(void (**)(char *, void, uint64_t))(v40 + 104))(v5, *MEMORY[0x263F07740], v42);
    sub_261B8AF18();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
    uint64_t v27 = v46;
    sub_261B8ADA8();
    sub_261B8C9B8();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v48);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v43);
    uint64_t v29 = v44;
    uint64_t v28 = v45;
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
    unint64_t v31 = v38;
    v30(v38, v14, v45);
    unint64_t v32 = v39;
    v30(v39, v14, v28);
    TrainingLoadChart.Configuration.init(dayRangeOfData:viewPortDayRange:points:keyDates:)(v31, v32, MEMORY[0x263F8EE78], MEMORY[0x263F8EE78], v21);
    sub_2619F8754(v50, &qword_26A943FF0);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v28);
    uint64_t v33 = v49;
    sub_261A22878((uint64_t)v21, v49 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration, type metadata accessor for TrainingLoadChart.Configuration);
  }
  else
  {
    sub_261A22878((uint64_t)v17, (uint64_t)v24, type metadata accessor for TrainingLoadChart.Configuration);
    uint64_t v33 = v49;
    sub_261A226C8((uint64_t)v24, v49 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration, type metadata accessor for TrainingLoadChart.Configuration);
    double v34 = sub_261A20050();
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v37 - 2) = v33;
    *((double *)&v37 - 1) = v34;
    uint64_t v51 = v33;
    sub_261A225E8();
    sub_261B8B028();
    swift_release();
    sub_2619F8754(v50, &qword_26A943FF0);
    sub_261A2274C((uint64_t)v24, type metadata accessor for TrainingLoadChart.Configuration);
  }
  return v33;
}

void sub_261A20D00(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_261A225E8();
  sub_261B8B038();
  swift_release();
  double v3 = *(double *)(v1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  double v4 = sub_261A20394();
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v5 = (uint64_t)v4;
  swift_getKeyPath();
  sub_261B8B038();
  swift_release();
  uint64_t v6 = v1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  uint64_t v7 = type metadata accessor for TrainingLoadChart.Configuration(0);
  uint64_t v8 = *(void *)(*(void *)(v6 + *(int *)(v7 + 24)) + 16);
  if (v8 < v5)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = v7;
  uint64_t v10 = (uint64_t)v3;
  swift_getKeyPath();
  if ((uint64_t)v3 >= v5 && v8 > v10)
  {
    sub_261B8B038();
    swift_release();
    if ((v10 & 0x8000000000000000) == 0)
    {
      uint64_t v17 = *(void *)(v6 + *(int *)(v9 + 24));
      if (*(void *)(v17 + 16) > (unint64_t)v10)
      {
        uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
        uint64_t v19 = *(void *)(View - 8);
        sub_261A226C8(v17+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v10, a1, type metadata accessor for TrainingLoadViewModel.ChartPoint);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, View);
        return;
      }
      goto LABEL_27;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    return;
  }
  sub_261B8B038();
  swift_release();
  uint64_t v12 = *(void *)(v6 + *(int *)(v9 + 24));
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v14 = v13 - 1;
    uint64_t v15 = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    uint64_t v16 = *(void *)(v15 - 8);
    sub_261A226C8(v12+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v14, a1, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v20 = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 1, 1, v20);
  }
}

uint64_t sub_261A210C0()
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v2 = *(void *)(View - 8);
  MEMORY[0x270FA5388](View);
  double v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v22 = v0;
  sub_261A225E8();
  sub_261B8B038();
  swift_release();
  uint64_t v11 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + *(int *)(type metadata accessor for TrainingLoadChart.Configuration(0) + 24));
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, View);
    goto LABEL_6;
  }
  uint64_t v14 = v12 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  sub_261A226C8(v14, (uint64_t)v7, type metadata accessor for TrainingLoadViewModel.ChartPoint);
  uint64_t result = swift_bridgeObjectRetain();
  if (v13 == 1)
  {
LABEL_3:
    sub_261A22878((uint64_t)v7, (uint64_t)v10, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v10, 0, 1, View);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, View) != 1)
    {
      uint64_t v16 = *(void *)&v10[*(int *)(View + 24)];
      sub_261A2274C((uint64_t)v10, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      return v16;
    }
LABEL_6:
    sub_2619F8754((uint64_t)v10, &qword_26B416C30);
    return 0;
  }
  unint64_t v17 = 1;
  while (v17 < *(void *)(v12 + 16))
  {
    sub_261A226C8(v14 + *(void *)(v2 + 72) * v17, (uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    uint64_t v18 = *(int *)(View + 24);
    double v19 = *(double *)&v4[v18];
    if (v4[v18 + 8]) {
      double v19 = 0.0;
    }
    uint64_t v20 = &v7[v18];
    if (v20[8])
    {
      if (v19 >= 0.0) {
        goto LABEL_18;
      }
    }
    else if (v19 >= *(double *)v20)
    {
LABEL_18:
      uint64_t result = sub_261A2274C((uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      goto LABEL_10;
    }
    sub_261A2274C((uint64_t)v7, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    uint64_t result = sub_261A22878((uint64_t)v4, (uint64_t)v7, type metadata accessor for TrainingLoadViewModel.ChartPoint);
LABEL_10:
    if (v13 == ++v17) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_261A2145C()
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v2 = *(void *)(View - 8);
  MEMORY[0x270FA5388](View);
  double v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v22 = v0;
  sub_261A225E8();
  sub_261B8B038();
  swift_release();
  uint64_t v11 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + *(int *)(type metadata accessor for TrainingLoadChart.Configuration(0) + 24));
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, View);
    goto LABEL_6;
  }
  uint64_t v14 = v12 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  sub_261A226C8(v14, (uint64_t)v7, type metadata accessor for TrainingLoadViewModel.ChartPoint);
  uint64_t result = swift_bridgeObjectRetain();
  if (v13 == 1)
  {
LABEL_3:
    sub_261A22878((uint64_t)v7, (uint64_t)v10, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v10, 0, 1, View);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, View) != 1)
    {
      uint64_t v16 = *(void *)&v10[*(int *)(View + 24)];
      sub_261A2274C((uint64_t)v10, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      return v16;
    }
LABEL_6:
    sub_2619F8754((uint64_t)v10, &qword_26B416C30);
    return 0;
  }
  unint64_t v17 = 1;
  while (v17 < *(void *)(v12 + 16))
  {
    sub_261A226C8(v14 + *(void *)(v2 + 72) * v17, (uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    uint64_t v18 = *(int *)(View + 24);
    double v19 = *(double *)&v7[v18];
    if (v7[v18 + 8]) {
      double v19 = 0.0;
    }
    uint64_t v20 = &v4[v18];
    if (v20[8])
    {
      if (v19 >= 0.0) {
        goto LABEL_18;
      }
    }
    else if (v19 >= *(double *)v20)
    {
LABEL_18:
      uint64_t result = sub_261A2274C((uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      goto LABEL_10;
    }
    sub_261A2274C((uint64_t)v7, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    uint64_t result = sub_261A22878((uint64_t)v4, (uint64_t)v7, type metadata accessor for TrainingLoadViewModel.ChartPoint);
LABEL_10:
    if (v13 == ++v17) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_261A217F8()
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v2 = *(void *)(View - 8);
  MEMORY[0x270FA5388](View);
  double v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v25 = v0;
  sub_261A225E8();
  sub_261B8B038();
  swift_release();
  uint64_t v5 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + *(int *)(type metadata accessor for TrainingLoadChart.Configuration(0) + 24));
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = v6 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v9 = *(void *)(v2 + 72);
    swift_bridgeObjectRetain();
    uint64_t v10 = (double *)MEMORY[0x263F8EE78];
    do
    {
      sub_261A226C8(v8, (uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      uint64_t v11 = &v4[*(int *)(View + 32)];
      double v12 = *(double *)v11;
      char v13 = v11[8];
      sub_261A2274C((uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      if ((v13 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = (double *)sub_261A0AF84(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v15 = *((void *)v10 + 2);
        unint64_t v14 = *((void *)v10 + 3);
        if (v15 >= v14 >> 1) {
          uint64_t v10 = (double *)sub_261A0AF84((void *)(v14 > 1), v15 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v15 + 1;
        v10[v15 + 4] = v12;
      }
      v8 += v9;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v16 = *((void *)v10 + 2);
    if (v16) {
      goto LABEL_11;
    }
LABEL_18:
    double v22 = 0.0;
    goto LABEL_19;
  }
  uint64_t v10 = (double *)MEMORY[0x263F8EE78];
  uint64_t v16 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (!v16) {
    goto LABEL_18;
  }
LABEL_11:
  double v17 = v10[4];
  uint64_t v18 = v16 - 1;
  if (v16 != 1)
  {
    double v19 = v10 + 5;
    do
    {
      double v20 = *v19++;
      double v21 = v20;
      if (v20 < v17) {
        double v17 = v21;
      }
      --v18;
    }
    while (v18);
  }
  double v22 = v17;
LABEL_19:
  swift_bridgeObjectRelease();
  return *(void *)&v22;
}

uint64_t sub_261A21A7C()
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v2 = *(void *)(View - 8);
  MEMORY[0x270FA5388](View);
  double v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v25 = v0;
  sub_261A225E8();
  sub_261B8B038();
  swift_release();
  uint64_t v5 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + *(int *)(type metadata accessor for TrainingLoadChart.Configuration(0) + 24));
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = v6 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v9 = *(void *)(v2 + 72);
    swift_bridgeObjectRetain();
    uint64_t v10 = (double *)MEMORY[0x263F8EE78];
    do
    {
      sub_261A226C8(v8, (uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      uint64_t v11 = &v4[*(int *)(View + 32)];
      double v12 = *(double *)v11;
      char v13 = v11[8];
      sub_261A2274C((uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      if ((v13 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = (double *)sub_261A0AF84(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v15 = *((void *)v10 + 2);
        unint64_t v14 = *((void *)v10 + 3);
        if (v15 >= v14 >> 1) {
          uint64_t v10 = (double *)sub_261A0AF84((void *)(v14 > 1), v15 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v15 + 1;
        v10[v15 + 4] = v12;
      }
      v8 += v9;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v16 = *((void *)v10 + 2);
    if (v16) {
      goto LABEL_11;
    }
LABEL_18:
    double v22 = 0.0;
    goto LABEL_19;
  }
  uint64_t v10 = (double *)MEMORY[0x263F8EE78];
  uint64_t v16 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (!v16) {
    goto LABEL_18;
  }
LABEL_11:
  double v17 = v10[4];
  uint64_t v18 = v16 - 1;
  if (v16 != 1)
  {
    double v19 = v10 + 5;
    do
    {
      double v20 = *v19++;
      double v21 = v20;
      if (v17 < v20) {
        double v17 = v21;
      }
      --v18;
    }
    while (v18);
  }
  double v22 = v17;
LABEL_19:
  swift_bridgeObjectRelease();
  return *(void *)&v22;
}

uint64_t sub_261A21D00(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v65 = a1;
  uint64_t v64 = sub_261B8AF08();
  uint64_t v3 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v63 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_261B8AFC8();
  uint64_t v5 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v61 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_261B8ADD8();
  uint64_t v7 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v59 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v58 = (char *)v47 - v10;
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943FD8);
  uint64_t v11 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v49 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943FE0);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (void *)((char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (void *)((char *)v47 - v17);
  swift_getKeyPath();
  uint64_t v19 = v1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel___observationRegistrar;
  uint64_t v70 = v2;
  v47[1] = sub_261A225E8();
  v47[2] = v19;
  sub_261B8B038();
  swift_release();
  uint64_t v48 = v2;
  uint64_t v20 = v2 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  uint64_t v21 = *(void *)(v20 + *(int *)(type metadata accessor for TrainingLoadChart.Configuration(0) + 24));
  unint64_t v22 = *(void *)(v21 + 16);
  uint64_t v66 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v67 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v56 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  unsigned int v55 = *MEMORY[0x263F07740];
  uint64_t v54 = (void (**)(char *, void, uint64_t))(v3 + 104);
  char v53 = (void (**)(char *, uint64_t))(v3 + 8);
  __int16 v52 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v51 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t v50 = v21;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v24 = 0;
  uint64_t v57 = v18;
  do
  {
    if (v24 == v22)
    {
      uint64_t v25 = 1;
      unint64_t v24 = v22;
      uint64_t v26 = v68;
    }
    else
    {
      uint64_t v27 = v50;
      uint64_t v26 = v68;
      if (v24 >= *(void *)(v50 + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v28 = *(void *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) - 8);
      uint64_t v29 = v27
          + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))
          + *(void *)(v28 + 72) * v24;
      uint64_t v30 = (uint64_t)&v49[*(int *)(v26 + 48)];
      sub_261A226C8(v29, v30, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      uint64_t v31 = (uint64_t)v15 + *(int *)(v26 + 48);
      unint64_t *v15 = v24;
      sub_261A22878(v30, v31, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      uint64_t v25 = 0;
      ++v24;
    }
    (*v67)(v15, v25, 1, v26);
    sub_261A22640((uint64_t)v15, (uint64_t)v18);
    if ((*v66)(v18, 1, v26) == 1) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v32 = *v18;
    uint64_t v33 = (uint64_t)v18 + *(int *)(v26 + 48);
    double v34 = v58;
    unint64_t v35 = v22;
    uint64_t v36 = v60;
    (*v56)(v58, v33, v60);
    sub_261A2274C(v33, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    char v38 = v63;
    uint64_t v37 = v64;
    (*v54)(v63, v55, v64);
    uint64_t v39 = v61;
    sub_261B8AF18();
    (*v53)(v38, v37);
    uint64_t v40 = v15;
    uint64_t v41 = v59;
    sub_261B8EEB8();
    (*v52)(v39, v62);
    LOBYTE(v37) = sub_261B8AD78();
    uint64_t v42 = *v51;
    uint64_t v43 = v41;
    unint64_t v15 = v40;
    (*v51)(v43, v36);
    uint64_t v44 = v36;
    unint64_t v22 = v35;
    uint64_t v18 = v57;
    uint64_t result = v42(v34, v44);
  }
  while ((v37 & 1) == 0);
  uint64_t result = swift_bridgeObjectRelease();
  if (v32 != -1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    uint64_t v46 = v48;
    v47[-2] = v48;
    *(double *)&v47[-1] = (double)v32;
    uint64_t v69 = v46;
    sub_261B8B028();
    return swift_release();
  }
  return result;
}

uint64_t sub_261A223F0()
{
  sub_261A2274C(v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration, type metadata accessor for TrainingLoadChart.Configuration);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel___observationRegistrar;
  uint64_t v2 = sub_261B8B078();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_261A224B4()
{
  return type metadata accessor for TrainingLoadChartViewModel();
}

uint64_t type metadata accessor for TrainingLoadChartViewModel()
{
  uint64_t result = qword_26A943FC8;
  if (!qword_26A943FC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A22508()
{
  uint64_t result = type metadata accessor for TrainingLoadChart.Configuration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_261B8B078();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_261A225E8()
{
  unint64_t result = qword_26A943FE8;
  if (!qword_26A943FE8)
  {
    type metadata accessor for TrainingLoadChartViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943FE8);
  }
  return result;
}

uint64_t sub_261A22640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A226B0()
{
  return sub_261A228E0();
}

uint64_t sub_261A226C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A22730()
{
  return sub_261A1FAA4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_261A2274C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_261A227AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrainingLoadChart.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A22810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A22878(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A228E0()
{
  *(void *)(*(void *)(v0 + 16)
            + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset) = *(void *)(v0 + 24);
  return sub_261A1FB10();
}

void *EffortSampleCollection.effortSample.getter()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR___WOEffortSampleCollection_effortSample);
  id v2 = v1;
  return v1;
}

void *EffortSampleCollection.estimatedEffortSample.getter()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample);
  id v2 = v1;
  return v1;
}

id EffortSampleCollection.__allocating_init(effortSample:estimatedEffortSample:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___WOEffortSampleCollection_effortSample] = a1;
  *(void *)&v5[OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id EffortSampleCollection.init(effortSample:estimatedEffortSample:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR___WOEffortSampleCollection_effortSample] = a1;
  *(void *)&v2[OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for EffortSampleCollection();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for EffortSampleCollection()
{
  return self;
}

void *sub_261A22B48()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR___WOEffortSampleCollection_effortSample);
  id v2 = v1;
  if (!v1)
  {
    id v2 = *(void **)(v0 + OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample);
    if (v2) {
      id v3 = v2;
    }
  }
  id v4 = v1;
  return v2;
}

id sub_261A22C44()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR___WOEffortSampleCollection_effortSample);
  if (v1)
  {
    id v2 = *(id *)(v0 + OBJC_IVAR___WOEffortSampleCollection_effortSample);
  }
  else
  {
    id v3 = *(void **)(v0 + OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample);
    if (!v3) {
      return 0;
    }
    id v2 = v3;
    unint64_t v1 = 0;
  }
  id v4 = v1;
  id v5 = objc_msgSend(v2, sel_quantity);

  return v5;
}

id EffortSampleCollection.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void EffortSampleCollection.init()()
{
}

id EffortSampleCollection.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EffortSampleCollection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for EffortSampleCollection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EffortSampleCollection);
}

uint64_t dispatch thunk of EffortSampleCollection.__allocating_init(effortSample:estimatedEffortSample:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of EffortSampleCollection.preferredSample.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of EffortSampleCollection.preferredQuantity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t RouteMapView.init(locationPositionPublisher:)@<X0>(uint64_t *a1@<X8>)
{
  sub_261B8C588();
  sub_261A22EBC();
  uint64_t result = sub_261B8D5E8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_261A22EBC()
{
  unint64_t result = qword_26A944008;
  if (!qword_26A944008)
  {
    sub_261B8C588();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944008);
  }
  return result;
}

uint64_t RouteMapView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v2 = type metadata accessor for RouteStatusView();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v45 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944010);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944018);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944020);
  MEMORY[0x270FA5388](v49);
  unint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  uint64_t v17 = v1[1];
  sub_261B8C588();
  sub_261A22EBC();
  swift_retain();
  uint64_t v18 = sub_261B8D5E8();
  uint64_t v48 = v19;
  uint64_t v20 = sub_261B8EC88();
  uint64_t v46 = v21;
  uint64_t v47 = v20;
  uint64_t v52 = v16;
  uint64_t v53 = v17;
  char v22 = sub_261A23374();
  uint64_t v51 = v18;
  if (v22)
  {
    uint64_t v43 = v13;
    uint64_t v44 = v10;
    swift_retain();
    uint64_t v23 = (uint64_t)v45;
    sub_261B8C558();
    swift_release();
    unsigned __int8 v24 = sub_261B8DFD8();
    char v25 = sub_261B8DFF8();
    unsigned __int8 v26 = sub_261B8DFC8();
    char v27 = sub_261B8DFE8();
    sub_261B8DFE8();
    if (sub_261B8DFE8() != v24) {
      char v27 = sub_261B8DFE8();
    }
    sub_261B8DFE8();
    char v28 = sub_261B8DFE8();
    uint64_t v29 = v4;
    uint64_t v30 = (uint64_t)v44;
    uint64_t v31 = v5;
    uint64_t v32 = (uint64_t)v8;
    uint64_t v33 = v47;
    if (v28 != v25) {
      char v27 = sub_261B8DFE8();
    }
    sub_261B8DFE8();
    if (sub_261B8DFE8() != v26) {
      char v27 = sub_261B8DFE8();
    }
    sub_261A25D28(v23, v32, (uint64_t (*)(void))type metadata accessor for RouteStatusView);
    uint64_t v34 = v32 + *(int *)(v29 + 36);
    *(unsigned char *)uint64_t v34 = v27;
    *(_OWORD *)(v34 + 8) = 0u;
    *(_OWORD *)(v34 + 24) = 0u;
    *(unsigned char *)(v34 + 40) = 1;
    sub_261A25D90(v23, (uint64_t (*)(void))type metadata accessor for RouteStatusView);
    sub_2619FB7EC(v32, v30, &qword_26A944010);
    uint64_t v13 = v43;
    sub_2619FB7EC(v30, (uint64_t)v43, &qword_26A944010);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v13, 0, 1, v29);
    uint64_t v35 = v49;
    uint64_t v36 = v50;
    uint64_t v37 = v48;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, 1, 1, v4);
    uint64_t v35 = v49;
    uint64_t v36 = v50;
    uint64_t v33 = v47;
    uint64_t v37 = v48;
  }
  uint64_t v38 = v46;
  sub_2619FB7EC((uint64_t)v13, (uint64_t)v15, &qword_26A944018);
  uint64_t v39 = &v15[*(int *)(v35 + 36)];
  *(void *)uint64_t v39 = v33;
  *((void *)v39 + 1) = v38;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944028);
  sub_2619F86F0((uint64_t)v15, (uint64_t)v36 + *(int *)(v40 + 36), &qword_26A944020);
  *uint64_t v36 = v51;
  v36[1] = v37;
  return sub_2619F8754((uint64_t)v15, &qword_26A944020);
}

uint64_t type metadata accessor for RouteStatusView()
{
  uint64_t result = qword_26A944048;
  if (!qword_26A944048) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A23374()
{
  uint64_t v0 = sub_261B8CE88();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8BDE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v8 = sub_261B8C568();
  swift_release();
  uint64_t v9 = *(void *)(v8 + 16);
  swift_bridgeObjectRelease();
  if (v9)
  {
    swift_retain();
    sub_261B8C558();
    swift_release();
    int v10 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
    if (v10 == *MEMORY[0x263F87D78] || v10 == *MEMORY[0x263F87D68] || v10 == *MEMORY[0x263F87D88]) {
      return 1;
    }
    if (v10 != *MEMORY[0x263F87D90] && v10 != *MEMORY[0x263F87D80] && v10 != *MEMORY[0x263F87D70])
    {
      sub_261B8C648();
      uint64_t v16 = sub_261B8CE78();
      os_log_type_t v17 = sub_261B8F4B8();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl(&dword_2619F0000, v16, v17, "Trying to display map view with unknown route postion, returning false", v18, 2u);
        MEMORY[0x263E4E970](v18, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  return 0;
}

uint64_t sub_261A23620()
{
  return swift_getOpaqueTypeConformance2();
}

void *assignWithCopy for RouteMapView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for RouteMapView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RouteMapView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RouteMapView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RouteMapView()
{
  return &type metadata for RouteMapView;
}

unint64_t sub_261A23750()
{
  unint64_t result = qword_26A944030;
  if (!qword_26A944030)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944028);
    sub_261A237F0();
    sub_2619F8AB8(&qword_26A944040, &qword_26A944020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944030);
  }
  return result;
}

unint64_t sub_261A237F0()
{
  unint64_t result = qword_26A944038;
  if (!qword_26A944038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944038);
  }
  return result;
}

uint64_t sub_261A23844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8BDE8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_261A238B0(uint64_t a1)
{
  uint64_t v2 = sub_261B8BDE8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_261A23914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8BDE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_261A23978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8BDE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_261A239DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8BDE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_261A23A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8BDE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_261A23AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A23AB8);
}

uint64_t sub_261A23AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8BDE8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_261A23B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A23B38);
}

uint64_t sub_261A23B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8BDE8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_261A23BA8()
{
  uint64_t result = sub_261B8BDE8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_261A23C34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A23C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v5 = sub_261B8D748();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (double *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944058);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944060);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8D528();
  double v18 = v17 * 0.5;
  uint64_t v19 = (char *)v8 + *(int *)(v6 + 28);
  uint64_t v20 = *MEMORY[0x263F19860];
  uint64_t v21 = sub_261B8DBB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  *uint64_t v8 = v18;
  v8[1] = v18;
  sub_261B8D528();
  sub_261B8EC98();
  sub_261B8D4D8();
  char v22 = (uint64_t (*)(void))MEMORY[0x263F19048];
  sub_261A25D28((uint64_t)v8, (uint64_t)v12, MEMORY[0x263F19048]);
  uint64_t v23 = &v12[*(int *)(v10 + 44)];
  long long v24 = v37;
  *(_OWORD *)uint64_t v23 = v36;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v38;
  sub_261A25D90((uint64_t)v8, v22);
  uint64_t v25 = sub_261B8E878();
  sub_2619F86F0((uint64_t)v12, (uint64_t)v16, &qword_26A944058);
  *(void *)&v16[*(int *)(v14 + 44)] = v25;
  sub_2619F8754((uint64_t)v12, &qword_26A944058);
  uint64_t v26 = sub_261B8EC98();
  uint64_t v28 = v27;
  sub_261A23F34(v35, a1, (uint64_t)v39);
  sub_2619F86F0((uint64_t)v16, a3, &qword_26A944060);
  uint64_t v29 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A944068) + 36);
  long long v30 = v39[7];
  *(_OWORD *)(v29 + 96) = v39[6];
  *(_OWORD *)(v29 + 112) = v30;
  *(_OWORD *)(v29 + 128) = v39[8];
  long long v31 = v39[3];
  *(_OWORD *)(v29 + 32) = v39[2];
  *(_OWORD *)(v29 + 48) = v31;
  long long v32 = v39[5];
  *(_OWORD *)(v29 + 64) = v39[4];
  *(_OWORD *)(v29 + 80) = v32;
  long long v33 = v39[1];
  *(_OWORD *)uint64_t v29 = v39[0];
  *(_OWORD *)(v29 + 16) = v33;
  *(void *)(v29 + 144) = v26;
  *(void *)(v29 + 152) = v28;
  return sub_2619F8754((uint64_t)v16, &qword_26A944060);
}

__n128 sub_261A23F34@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v125 = a3;
  uint64_t v5 = sub_261B8E1F8();
  unint64_t v124 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8BDE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x263F87D78])
  {
    sub_261B8DB98();
    uint64_t v13 = sub_261B8E3B8();
    uint64_t v15 = v14;
    uint64_t v16 = v5;
    char v18 = v17 & 1;
    sub_261B8E1C8();
    unint64_t v19 = v124;
    (*(void (**)(char *, void, uint64_t))(v124 + 104))(v7, *MEMORY[0x263F1A680], v16);
    sub_261B8E218();
    swift_release();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v16);
    uint64_t v20 = sub_261B8E368();
    uint64_t v22 = v21;
    char v24 = v23;
    swift_release();
    char v25 = v24 & 1;
    sub_261A02A18(v13, v15, v18);
    swift_bridgeObjectRelease();
    id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
    id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    id v29 = objc_msgSend(v27, sel_colorWithAlphaComponent_, 0.2);

    *(void *)&long long v177 = MEMORY[0x263E4C7B0](v28);
    uint64_t v30 = sub_261B8E328();
    uint64_t v32 = v31;
    unint64_t v34 = v33;
    unint64_t v36 = v35 & 1;
    sub_261A02A18(v20, v22, v25);
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)&long long v169 = v30;
    *((void *)&v169 + 1) = v32;
    v170.n128_u64[0] = v36;
    v170.n128_u64[1] = v34;
    LOBYTE(v171) = 1;
    sub_261A001D0(v30, v32, v36);
    swift_bridgeObjectRetain();
    sub_261B8DD68();
    long long v153 = v177;
    __n128 v154 = v178;
    LOBYTE(v155) = v179;
    sub_261A25FBC((uint64_t)&v153);
    sub_2619FB7EC((uint64_t)&v153, (uint64_t)&v177, &qword_26A9440C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A98);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944098);
    sub_261A13DFC();
    sub_261A25E78();
    sub_261B8DD68();
    long long v175 = v137;
    v176[0] = v138[0];
    *(_OWORD *)((char *)v176 + 10) = *(_OWORD *)((char *)v138 + 10);
    long long v171 = v133;
    long long v172 = v134;
    long long v173 = v135;
    long long v174 = v136;
    long long v169 = v131;
    __n128 v170 = v132;
    sub_261A25FAC((uint64_t)&v169);
    sub_2619FB7EC((uint64_t)&v169, (uint64_t)&v177, &qword_26A944070);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944078);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944080);
    sub_261A25DFC();
    sub_261A25F18();
    sub_261B8DD68();
    uint64_t v37 = v30;
    uint64_t v38 = v32;
    char v39 = v36;
  }
  else
  {
    if (v12 == *MEMORY[0x263F87D68])
    {
      sub_261B8DB98();
      uint64_t v42 = sub_261B8E3B8();
      uint64_t v44 = v43;
      unint64_t v45 = v124;
      char v47 = v46 & 1;
      sub_261B8E1C8();
      (*(void (**)(char *, void, uint64_t))(v45 + 104))(v7, *MEMORY[0x263F1A680], v5);
      sub_261B8E218();
      swift_release();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v5);
      uint64_t v48 = sub_261B8E368();
      uint64_t v50 = v49;
      LOBYTE(v45) = v51;
      unint64_t v53 = v52;
      swift_release();
      sub_261A02A18(v42, v44, v47);
      swift_bridgeObjectRelease();
      *(void *)&long long v169 = v48;
      uint64_t v54 = v50;
      *((void *)&v169 + 1) = v50;
      v170.n128_u64[0] = v45 & 1;
      v170.n128_u64[1] = v53;
      LOBYTE(v171) = 0;
      uint64_t v55 = v48;
      uint64_t v56 = v48;
      uint64_t v57 = v54;
      sub_261A001D0(v55, v54, v45 & 1);
      swift_bridgeObjectRetain();
      sub_261B8DD68();
      long long v153 = v177;
      __n128 v154 = v178;
      LOBYTE(v155) = v179;
      sub_261A25FBC((uint64_t)&v153);
      sub_2619FB7EC((uint64_t)&v153, (uint64_t)&v177, &qword_26A9440C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A98);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A944098);
      sub_261A13DFC();
      sub_261A25E78();
      sub_261B8DD68();
      long long v174 = v136;
      long long v175 = v137;
      v176[0] = v138[0];
      *(_OWORD *)((char *)v176 + 10) = *(_OWORD *)((char *)v138 + 10);
      long long v171 = v133;
      long long v172 = v134;
      long long v173 = v135;
      long long v169 = v131;
      __n128 v170 = v132;
      sub_261A25FAC((uint64_t)&v169);
      sub_2619FB7EC((uint64_t)&v169, (uint64_t)&v177, &qword_26A944070);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A944078);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A944080);
      sub_261A25DFC();
      sub_261A25F18();
      sub_261B8DD68();
      sub_261A02A18(v56, v57, v45 & 1);
      swift_bridgeObjectRelease();
      long long v181 = v166;
      long long v182 = v167;
      v183[0] = v168[0];
      *(_OWORD *)((char *)v183 + 11) = *(_OWORD *)((char *)v168 + 11);
      long long v179 = v163;
      *(_OWORD *)long long v180 = v164;
      *(_OWORD *)&v180[16] = v165;
      goto LABEL_7;
    }
    if (v12 == *MEMORY[0x263F87D88])
    {
      uint64_t v65 = sub_261B8DAD8();
      sub_261A25474(a2, (uint64_t)&v177);
      long long v66 = v181;
      char v67 = v182;
      char v130 = 1;
      unsigned __int8 v129 = v178.n128_u8[0];
      char v128 = v179;
      char v127 = v180[0];
      char v126 = v182;
      uint64_t v139 = v65;
      uint64_t v140 = 0;
      char v141 = 1;
      long long v142 = v177;
      uint64_t v123 = *((void *)&v182 + 1);
      unint64_t v124 = v177;
      unsigned __int16 v143 = v178.n128_u16[0];
      unint64_t v144 = v178.n128_u64[1];
      char v145 = v179;
      uint64_t v146 = *((void *)&v179 + 1);
      char v147 = v180[0];
      long long v148 = *(_OWORD *)&v180[8];
      uint64_t v149 = *(void *)&v180[24];
      long long v150 = v181;
      char v151 = v182;
      uint64_t v152 = *((void *)&v182 + 1);
      sub_261A25FB4((uint64_t)&v139);
      sub_2619FB7EC((uint64_t)&v139, (uint64_t)&v177, &qword_26A9440B8);
      swift_retain();
      swift_retain();
      sub_261A001D0(v66, *((uint64_t *)&v66 + 1), v67);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9440A8);
      sub_2619F8AB8(&qword_26A9440A0, &qword_26A9440A8);
      sub_261B8DD68();
      long long v159 = v175;
      v160[0] = v176[0];
      *(_OWORD *)((char *)v160 + 9) = *(_OWORD *)((char *)v176 + 9);
      long long v155 = v171;
      long long v156 = v172;
      long long v157 = v173;
      long long v158 = v174;
      long long v153 = v169;
      __n128 v154 = v170;
      sub_261A25FA0((uint64_t)&v153);
      sub_2619FB7EC((uint64_t)&v153, (uint64_t)&v177, &qword_26A9440C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A98);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A944098);
      sub_261A13DFC();
      sub_261A25E78();
      sub_261B8DD68();
      long long v175 = v137;
      v176[0] = v138[0];
      *(_OWORD *)((char *)v176 + 10) = *(_OWORD *)((char *)v138 + 10);
      long long v171 = v133;
      long long v172 = v134;
      long long v173 = v135;
      long long v174 = v136;
      long long v169 = v131;
      __n128 v170 = v132;
      sub_261A25FAC((uint64_t)&v169);
      sub_2619FB7EC((uint64_t)&v169, (uint64_t)&v177, &qword_26A944070);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A944078);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A944080);
      sub_261A25DFC();
      sub_261A25F18();
      sub_261B8DD68();
      swift_release();
      swift_release();
      sub_261A02A18(v66, *((uint64_t *)&v66 + 1), v67);
      swift_bridgeObjectRelease();
      long long v182 = v167;
      v183[0] = v168[0];
      *(_OWORD *)((char *)v183 + 11) = *(_OWORD *)((char *)v168 + 11);
      long long v179 = v163;
      *(_OWORD *)long long v180 = v164;
      *(_OWORD *)&v180[16] = v165;
      long long v181 = v166;
      long long v59 = v161;
      __n128 v58 = v162;
      goto LABEL_8;
    }
    if (v12 == *MEMORY[0x263F87D90])
    {
      sub_261B8DB98();
      uint64_t v68 = sub_261B8E3B8();
      uint64_t v70 = v69;
      uint64_t v123 = v71;
      char v73 = v72 & 1;
      sub_261B8E1C8();
      unint64_t v74 = v124;
      (*(void (**)(char *, void, uint64_t))(v124 + 104))(v7, *MEMORY[0x263F1A680], v5);
      sub_261B8E218();
      swift_release();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v7, v5);
      uint64_t v75 = sub_261B8E368();
      uint64_t v77 = v76;
      char v79 = v78;
      uint64_t v81 = v80;
      swift_release();
      sub_261A02A18(v68, v70, v73);
      swift_bridgeObjectRelease();
      uint64_t v139 = v75;
      uint64_t v140 = v77;
      char v141 = v79 & 1;
      *(void *)&long long v142 = v81;
      sub_261A25F94((uint64_t)&v139);
      sub_2619FB7EC((uint64_t)&v139, (uint64_t)&v177, &qword_26A9440B8);
      sub_261A001D0(v75, v77, v79 & 1);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9440A8);
      sub_2619F8AB8(&qword_26A9440A0, &qword_26A9440A8);
      sub_261B8DD68();
      long long v159 = v175;
      v160[0] = v176[0];
      *(_OWORD *)((char *)v160 + 9) = *(_OWORD *)((char *)v176 + 9);
      long long v155 = v171;
      long long v156 = v172;
      long long v157 = v173;
      long long v158 = v174;
      long long v153 = v169;
      __n128 v154 = v170;
      sub_261A25FA0((uint64_t)&v153);
      sub_2619FB7EC((uint64_t)&v153, (uint64_t)&v177, &qword_26A9440C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A98);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A944098);
      sub_261A13DFC();
      sub_261A25E78();
      sub_261B8DD68();
      long long v175 = v137;
      v176[0] = v138[0];
      *(_OWORD *)((char *)v176 + 10) = *(_OWORD *)((char *)v138 + 10);
      long long v171 = v133;
      long long v172 = v134;
      long long v173 = v135;
      long long v174 = v136;
      long long v169 = v131;
      __n128 v170 = v132;
      sub_261A25FAC((uint64_t)&v169);
      sub_2619FB7EC((uint64_t)&v169, (uint64_t)&v177, &qword_26A944070);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A944078);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A944080);
      sub_261A25DFC();
      sub_261A25F18();
      sub_261B8DD68();
      sub_261A02A18(v75, v77, v79 & 1);
      swift_bridgeObjectRelease();
      long long v40 = v167;
      long long v41 = v168[0];
      goto LABEL_4;
    }
    if (v12 == *MEMORY[0x263F87D80])
    {
      sub_261B8DB98();
      uint64_t v82 = sub_261B8E3B8();
      uint64_t v84 = v83;
      char v86 = v85 & 1;
      sub_261B8E1C8();
      unint64_t v87 = v124;
      (*(void (**)(char *, void, uint64_t))(v124 + 104))(v7, *MEMORY[0x263F1A680], v5);
      sub_261B8E218();
      swift_release();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v7, v5);
      uint64_t v88 = sub_261B8E368();
      uint64_t v90 = v89;
      LOBYTE(v87) = v91;
      unint64_t v93 = v92;
      swift_release();
      char v94 = v87 & 1;
      sub_261A02A18(v82, v84, v86);
      swift_bridgeObjectRelease();
      *(void *)&long long v169 = v88;
      *((void *)&v169 + 1) = v90;
      v170.n128_u64[0] = v87 & 1;
      v170.n128_u64[1] = v93;
      LOBYTE(v171) = 0;
      sub_261A001D0(v88, v90, v87 & 1);
      swift_bridgeObjectRetain();
      sub_261B8DD68();
      unsigned __int8 v95 = v179;
      long long v169 = v177;
      __n128 v170 = v178;
    }
    else
    {
      uint64_t v123 = v5;
      if (v12 != *MEMORY[0x263F87D70])
      {
        sub_261B8DB98();
        uint64_t v107 = sub_261B8E3B8();
        unint64_t v108 = v124;
        uint64_t v121 = v110;
        uint64_t v122 = v109;
        int v120 = v111 & 1;
        sub_261B8E1C8();
        uint64_t v112 = v123;
        (*(void (**)(char *, void, uint64_t))(v108 + 104))(v7, *MEMORY[0x263F1A680], v123);
        sub_261B8E218();
        swift_release();
        (*(void (**)(char *, uint64_t))(v108 + 8))(v7, v112);
        uint64_t v113 = v122;
        LOBYTE(v108) = v120;
        uint64_t v123 = sub_261B8E368();
        unint64_t v124 = v114;
        uint64_t v119 = v115;
        char v117 = v116;
        swift_release();
        sub_261A02A18(v107, v113, v108);
        swift_bridgeObjectRelease();
        *(void *)&long long v169 = v123;
        uint64_t v118 = v119;
        *((void *)&v169 + 1) = v119;
        v170.n128_u64[0] = v117 & 1;
        v170.n128_u64[1] = v124;
        LOWORD(v171) = 256;
        sub_261A001D0(v123, v119, v117 & 1);
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A98);
        sub_261A13DFC();
        sub_261B8DD68();
        long long v161 = v177;
        __n128 v162 = v178;
        LOWORD(v163) = v179;
        sub_261A25DF0((uint64_t)&v161);
        sub_2619FB7EC((uint64_t)&v161, (uint64_t)&v169, &qword_26A944070);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A944078);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A944080);
        sub_261A25DFC();
        sub_261A25F18();
        sub_261B8DD68();
        sub_261A02A18(v123, v118, v117 & 1);
        swift_bridgeObjectRelease();
        long long v175 = v182;
        v176[0] = v183[0];
        *(_OWORD *)((char *)v176 + 11) = *(_OWORD *)((char *)v183 + 11);
        long long v171 = v179;
        long long v172 = *(_OWORD *)v180;
        long long v173 = *(_OWORD *)&v180[16];
        long long v174 = v181;
        long long v169 = v177;
        __n128 v170 = v178;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        long long v182 = v175;
        v183[0] = v176[0];
        *(_OWORD *)((char *)v183 + 11) = *(_OWORD *)((char *)v176 + 11);
        long long v179 = v171;
        *(_OWORD *)long long v180 = v172;
        *(_OWORD *)&v180[16] = v173;
        long long v181 = v174;
        long long v59 = v169;
        __n128 v58 = v170;
        goto LABEL_8;
      }
      sub_261B8DB98();
      uint64_t v96 = sub_261B8E3B8();
      uint64_t v98 = v97;
      char v100 = v99 & 1;
      sub_261B8E1C8();
      uint64_t v101 = v123;
      unint64_t v102 = v124;
      (*(void (**)(char *, void, uint64_t))(v124 + 104))(v7, *MEMORY[0x263F1A680], v123);
      sub_261B8E218();
      swift_release();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v7, v101);
      uint64_t v88 = sub_261B8E368();
      uint64_t v90 = v103;
      LOBYTE(v102) = v104;
      unint64_t v106 = v105;
      swift_release();
      char v94 = v102 & 1;
      sub_261A02A18(v96, v98, v100);
      swift_bridgeObjectRelease();
      *(void *)&long long v169 = v88;
      *((void *)&v169 + 1) = v90;
      v170.n128_u64[0] = v102 & 1;
      v170.n128_u64[1] = v106;
      LOBYTE(v171) = 1;
      sub_261A001D0(v88, v90, v102 & 1);
      swift_bridgeObjectRetain();
      sub_261B8DD68();
      unsigned __int8 v95 = v179;
      long long v169 = v177;
      __n128 v170 = v178;
    }
    LOWORD(v171) = v95;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A98);
    sub_261A13DFC();
    sub_261B8DD68();
    long long v169 = v177;
    __n128 v170 = v178;
    LOWORD(v171) = v179;
    sub_261A25DF0((uint64_t)&v169);
    sub_2619FB7EC((uint64_t)&v169, (uint64_t)&v177, &qword_26A944070);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944078);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944080);
    sub_261A25DFC();
    sub_261A25F18();
    sub_261B8DD68();
    uint64_t v37 = v88;
    uint64_t v38 = v90;
    char v39 = v94;
  }
  sub_261A02A18(v37, v38, v39);
  swift_bridgeObjectRelease();
  long long v40 = v167;
  long long v41 = v168[0];
LABEL_4:
  long long v182 = v40;
  v183[0] = v41;
  *(_OWORD *)((char *)v183 + 11) = *(_OWORD *)((char *)v168 + 11);
  long long v179 = v163;
  *(_OWORD *)long long v180 = v164;
  *(_OWORD *)&v180[16] = v165;
  long long v181 = v166;
LABEL_7:
  long long v59 = v161;
  __n128 v58 = v162;
LABEL_8:
  long long v177 = v59;
  __n128 v178 = v58;
  long long v60 = v183[0];
  uint64_t v61 = v125;
  *(_OWORD *)(v125 + 96) = v182;
  *(_OWORD *)(v61 + 112) = v60;
  *(_OWORD *)(v61 + 123) = *(_OWORD *)((char *)v183 + 11);
  long long v62 = *(_OWORD *)v180;
  *(_OWORD *)(v61 + 32) = v179;
  *(_OWORD *)(v61 + 48) = v62;
  long long v63 = v181;
  *(_OWORD *)(v61 + 64) = *(_OWORD *)&v180[16];
  *(_OWORD *)(v61 + 80) = v63;
  __n128 result = v178;
  *(_OWORD *)uint64_t v61 = v177;
  *(__n128 *)(v61 + 16) = result;
  return result;
}

uint64_t sub_261A25474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v42 = sub_261B8E1F8();
  uint64_t v3 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8E928();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9440C8);
  MEMORY[0x270FA5388](v10 - 8);
  int v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8E918();
  sub_261B8DC28();
  uint64_t v13 = sub_261B8DC38();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  sub_261B8E958();
  swift_release();
  sub_2619F8754((uint64_t)v12, &qword_26A9440C8);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F1B4B8], v6);
  uint64_t v41 = sub_261B8E988();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_261B8D528();
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v40 = v43;
  int v39 = v44;
  uint64_t v38 = v45;
  int v37 = v46;
  uint64_t v35 = v48;
  uint64_t v36 = v47;
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.2, 0.0823529412, 0.0666666667, 1.0);
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  id v17 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.2);

  uint64_t v34 = MEMORY[0x263E4C7B0](v16);
  sub_261B8DB98();
  uint64_t v18 = sub_261B8E3B8();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  sub_261B8E1B8();
  uint64_t v23 = v42;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1A680], v42);
  sub_261B8E218();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  uint64_t v24 = sub_261B8E368();
  uint64_t v26 = v25;
  LOBYTE(v23) = v27;
  uint64_t v29 = v28;
  swift_release();
  LOBYTE(v23) = v23 & 1;
  sub_261A02A18(v18, v20, v22);
  swift_bridgeObjectRelease();
  *(void *)a2 = v41;
  *(void *)(a2 + 8) = 0;
  *(_WORD *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = v40;
  *(unsigned char *)(a2 + 32) = v39;
  *(void *)(a2 + 40) = v38;
  *(unsigned char *)(a2 + 48) = v37;
  uint64_t v31 = v34;
  uint64_t v30 = v35;
  *(void *)(a2 + 56) = v36;
  *(void *)(a2 + 64) = v30;
  *(void *)(a2 + 72) = v31;
  *(void *)(a2 + 80) = v24;
  *(void *)(a2 + 88) = v26;
  *(unsigned char *)(a2 + 96) = v23;
  *(void *)(a2 + 104) = v29;
  swift_retain();
  swift_retain();
  sub_261A001D0(v24, v26, v23);
  swift_bridgeObjectRetain();
  sub_261A02A18(v24, v26, v23);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

double sub_261A259F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  uint64_t v7 = sub_261B8E888();
  uint64_t v8 = sub_261B8EC98();
  uint64_t v10 = v9;
  sub_261A25D28(v3, (uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for RouteStatusView);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  sub_261A25C44((uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v13 = v18;
  char v14 = v19;
  uint64_t v15 = v20;
  char v16 = v21;
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = sub_261A25CA8;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v13;
  *(unsigned char *)(a2 + 48) = v14;
  *(void *)(a2 + 56) = v15;
  *(unsigned char *)(a2 + 64) = v16;
  double result = *(double *)&v22;
  *(_OWORD *)(a2 + 72) = v22;
  return result;
}

uint64_t sub_261A25B6C()
{
  uint64_t v1 = *(void *)(type metadata accessor for RouteStatusView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_261B8BDE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_261A25C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RouteStatusView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A25CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for RouteStatusView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_261A23C50(a1, v6, a2);
}

uint64_t sub_261A25D28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A25D90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_261A25DF0(uint64_t result)
{
  *(unsigned char *)(result + 138) = 1;
  return result;
}

unint64_t sub_261A25DFC()
{
  unint64_t result = qword_26A944088;
  if (!qword_26A944088)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944078);
    sub_261A13DFC();
    sub_261A25E78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944088);
  }
  return result;
}

unint64_t sub_261A25E78()
{
  unint64_t result = qword_26A944090;
  if (!qword_26A944090)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944098);
    sub_2619F8AB8(&qword_26A9440A0, &qword_26A9440A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944090);
  }
  return result;
}

unint64_t sub_261A25F18()
{
  unint64_t result = qword_26A9440B0;
  if (!qword_26A9440B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944080);
    sub_261A13DFC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9440B0);
  }
  return result;
}

uint64_t sub_261A25F94(uint64_t result)
{
  *(unsigned char *)(result + 136) = 1;
  return result;
}

uint64_t sub_261A25FA0(uint64_t result)
{
  *(unsigned char *)(result + 137) = 1;
  return result;
}

uint64_t sub_261A25FAC(uint64_t result)
{
  *(unsigned char *)(result + 138) = 0;
  return result;
}

uint64_t sub_261A25FB4(uint64_t result)
{
  *(unsigned char *)(result + 136) = 0;
  return result;
}

uint64_t sub_261A25FBC(uint64_t result)
{
  *(unsigned char *)(result + 137) = 0;
  return result;
}

unint64_t sub_261A25FC8()
{
  unint64_t result = qword_26A9440D0;
  if (!qword_26A9440D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9440D8);
    sub_261A26044();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9440D0);
  }
  return result;
}

unint64_t sub_261A26044()
{
  unint64_t result = qword_26A9440E0;
  if (!qword_26A9440E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9440E8);
    sub_261A260E4();
    sub_2619F8AB8(&qword_26A944108, &qword_26A944110);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9440E0);
  }
  return result;
}

unint64_t sub_261A260E4()
{
  unint64_t result = qword_26A9440F0;
  if (!qword_26A9440F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9440F8);
    sub_261A26184();
    sub_2619F8AB8((unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9440F0);
  }
  return result;
}

unint64_t sub_261A26184()
{
  unint64_t result = qword_26A944100;
  if (!qword_26A944100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944100);
  }
  return result;
}

uint64_t destroy for TrainingLoadOnboardingButton()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for TrainingLoadOnboardingButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TrainingLoadOnboardingButton(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TrainingLoadOnboardingButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadOnboardingButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadOnboardingButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadOnboardingButton()
{
  return &type metadata for TrainingLoadOnboardingButton;
}

uint64_t sub_261A263B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A263D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v73 = a3;
  uint64_t v71 = a1;
  uint64_t v86 = a5;
  uint64_t v81 = sub_261B8D748() - 8;
  MEMORY[0x270FA5388](v81);
  uint64_t v80 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_261B8DEF8();
  uint64_t v78 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944118);
  uint64_t v75 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  unint64_t v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9433A8);
  uint64_t v77 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9433B0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v72 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944120);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  char v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944128);
  uint64_t v21 = v20 - 8;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944130);
  MEMORY[0x270FA5388](v82);
  uint64_t v85 = (uint64_t)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944138);
  MEMORY[0x270FA5388](v83);
  uint64_t v84 = (uint64_t)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (void *)swift_allocObject();
  uint64_t v27 = v71;
  v26[2] = v71;
  v26[3] = a2;
  uint64_t v28 = v73;
  v26[4] = v73;
  v26[5] = a4;
  uint64_t v87 = v27;
  uint64_t v88 = a2;
  uint64_t v89 = v28;
  uint64_t v90 = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944140);
  sub_261A27010(&qword_26A944148, &qword_26A944140, (void (*)(void))sub_261A26FE0);
  sub_261B8EA58();
  sub_261B8DEE8();
  sub_2619F8AB8(&qword_26A944180, &qword_26A944118);
  sub_261A271A0();
  uint64_t v29 = v74;
  uint64_t v30 = v76;
  sub_261B8E518();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v9, v30);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v11, v29);
  uint64_t v31 = sub_261B8EC98();
  uint64_t v32 = v72;
  double v34 = sub_2619FE660(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v72, 0.0, 1, 0.0, 1, v31, v33);
  (*(void (**)(char *, uint64_t, double))(v77 + 8))(v13, v79, v34);
  sub_261B8EC98();
  sub_261B8D4D8();
  sub_2619F86F0(v32, (uint64_t)v19, &qword_26A9433B0);
  uint64_t v35 = &v19[*(int *)(v17 + 44)];
  long long v36 = v92;
  *(_OWORD *)uint64_t v35 = v91;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v93;
  sub_2619F8754(v32, &qword_26A9433B0);
  int v37 = v80;
  uint64_t v38 = &v80[*(int *)(v81 + 28)];
  uint64_t v39 = *MEMORY[0x263F19860];
  uint64_t v40 = sub_261B8DBB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v38, v39, v40);
  __asm { FMOV            V0.2D, #12.0 }
  *int v37 = _Q0;
  uint64_t v46 = (uint64_t)&v23[*(int *)(v21 + 44)];
  sub_261A1396C((uint64_t)v37, v46);
  *(_WORD *)(v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A944190) + 36)) = 256;
  sub_2619F86F0((uint64_t)v19, (uint64_t)v23, &qword_26A944120);
  sub_261A139D0((uint64_t)v37);
  sub_2619F8754((uint64_t)v19, &qword_26A944120);
  LOBYTE(v39) = sub_261B8DFB8();
  unsigned __int8 v47 = sub_261B8DF98();
  char v48 = sub_261B8DFE8();
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v39) {
    char v48 = sub_261B8DFE8();
  }
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v47) {
    char v48 = sub_261B8DFE8();
  }
  sub_261B8D358();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v57 = v85;
  sub_2619F86F0((uint64_t)v23, v85, &qword_26A944128);
  uint64_t v58 = v57 + *(int *)(v82 + 36);
  *(unsigned char *)uint64_t v58 = v48;
  *(void *)(v58 + 8) = v50;
  *(void *)(v58 + 16) = v52;
  *(void *)(v58 + 24) = v54;
  *(void *)(v58 + 32) = v56;
  *(unsigned char *)(v58 + 40) = 0;
  sub_2619F8754((uint64_t)v23, &qword_26A944128);
  char v59 = sub_261B8DFC8();
  sub_261B8D358();
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v68 = v84;
  sub_2619F86F0(v57, v84, &qword_26A944130);
  uint64_t v69 = v68 + *(int *)(v83 + 36);
  *(unsigned char *)uint64_t v69 = v59;
  *(void *)(v69 + 8) = v61;
  *(void *)(v69 + 16) = v63;
  *(void *)(v69 + 24) = v65;
  *(void *)(v69 + 32) = v67;
  *(unsigned char *)(v69 + 40) = 0;
  sub_2619F8754(v57, &qword_26A944130);
  return sub_261A271F8(v68, v86);
}

uint64_t sub_261A26BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_261B8E1F8();
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v46 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v50 = a1;
  *((void *)&v50 + 1) = a2;
  sub_261A029C4();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_261B8E3D8();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  *(void *)&long long v50 = sub_261B8E878();
  uint64_t v13 = sub_261B8E328();
  uint64_t v45 = v14;
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_261A02A18(v8, v10, v12);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_261B8EC98();
  uint64_t v20 = v45;
  sub_2619FE6BC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v49, 0.0, 1, 0.0, 1, v19, v21, v13, v45, v18, v16);
  sub_261A02A18(v13, v20, v18);
  swift_bridgeObjectRelease();
  long long v56 = v49[6];
  long long v57 = v49[7];
  long long v58 = v49[8];
  long long v52 = v49[2];
  long long v53 = v49[3];
  long long v54 = v49[4];
  long long v55 = v49[5];
  long long v50 = v49[0];
  long long v51 = v49[1];
  sub_261B8E0D8();
  uint64_t v23 = v46;
  uint64_t v22 = v47;
  uint64_t v24 = v48;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, *MEMORY[0x263F1A680], v48);
  sub_261B8E218();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  sub_261B8E168();
  uint64_t v25 = sub_261B8E1D8();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v24) = sub_261B8E008();
  sub_261B8D358();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  char v59 = 0;
  LOBYTE(v22) = sub_261B8DF98();
  uint64_t result = sub_261B8D358();
  *(_DWORD *)(a3 + 161) = *(_DWORD *)v60;
  *(_DWORD *)(a3 + 164) = *(_DWORD *)&v60[3];
  char v36 = v59;
  char v61 = 0;
  long long v37 = v57;
  *(_OWORD *)(a3 + 96) = v56;
  *(_OWORD *)(a3 + 112) = v37;
  *(_OWORD *)(a3 + 128) = v58;
  long long v38 = v53;
  *(_OWORD *)(a3 + 32) = v52;
  *(_OWORD *)(a3 + 48) = v38;
  long long v39 = v55;
  *(_OWORD *)(a3 + 64) = v54;
  *(_OWORD *)(a3 + 80) = v39;
  long long v40 = v51;
  *(_OWORD *)a3 = v50;
  *(_OWORD *)(a3 + 16) = v40;
  *(void *)(a3 + 144) = KeyPath;
  *(void *)(a3 + 152) = v25;
  *(unsigned char *)(a3 + 160) = v24;
  *(void *)(a3 + 168) = v28;
  *(void *)(a3 + 176) = v30;
  *(void *)(a3 + 184) = v32;
  *(void *)(a3 + 192) = v34;
  *(unsigned char *)(a3 + 200) = v36;
  *(_DWORD *)(a3 + 201) = v49[0];
  *(_DWORD *)(a3 + 204) = *(_DWORD *)((char *)v49 + 3);
  *(unsigned char *)(a3 + 208) = v22;
  *(_DWORD *)(a3 + 209) = v62[0];
  *(_DWORD *)(a3 + 212) = *(_DWORD *)((char *)v62 + 3);
  *(void *)(a3 + 216) = v41;
  *(void *)(a3 + 224) = v42;
  *(void *)(a3 + 232) = v43;
  *(void *)(a3 + 240) = v44;
  *(unsigned char *)(a3 + 248) = v61;
  return result;
}

uint64_t sub_261A26F60@<X0>(uint64_t a1@<X8>)
{
  return sub_261A263D0(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_261A26F6C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_261A26FAC()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_261A26FD4@<X0>(uint64_t a1@<X8>)
{
  return sub_261A26BF8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_261A26FE0()
{
  return sub_261A27010(&qword_26A944150, &qword_26A944158, (void (*)(void))sub_261A2708C);
}

uint64_t sub_261A27010(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A2708C()
{
  unint64_t result = qword_26A944160;
  if (!qword_26A944160)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944168);
    sub_261A2712C();
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944160);
  }
  return result;
}

unint64_t sub_261A2712C()
{
  unint64_t result = qword_26A944170;
  if (!qword_26A944170)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944178);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944170);
  }
  return result;
}

unint64_t sub_261A271A0()
{
  unint64_t result = qword_26A944188;
  if (!qword_26A944188)
  {
    sub_261B8DEF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944188);
  }
  return result;
}

uint64_t sub_261A271F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A27268()
{
  return sub_261A27010(&qword_26A944198, &qword_26A944138, (void (*)(void))sub_261A272AC);
}

uint64_t sub_261A272AC()
{
  return sub_261A27010(&qword_26A9441A0, &qword_26A944130, (void (*)(void))sub_261A272DC);
}

unint64_t sub_261A272DC()
{
  unint64_t result = qword_26A9441A8;
  if (!qword_26A9441A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944128);
    sub_261A27010(&qword_26A9441B0, &qword_26A944120, (void (*)(void))sub_261A273A8);
    sub_2619F8AB8(&qword_26A9441C0, &qword_26A944190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9441A8);
  }
  return result;
}

unint64_t sub_261A273A8()
{
  unint64_t result = qword_26A9441B8;
  if (!qword_26A9441B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9433B0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944118);
    sub_261B8DEF8();
    sub_2619F8AB8(&qword_26A944180, &qword_26A944118);
    sub_261A271A0();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9441B8);
  }
  return result;
}

uint64_t *sub_261A2749C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_261B8E1E8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    char v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    j__swift_retain();
    *(void *)uint64_t v10 = v12;
    v10[8] = v13;
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_261A275EC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_261B8E1E8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  return j__swift_release();
}

void *sub_261A27694(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_261B8E1E8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  j__swift_retain();
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_261A27790(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_261A278A8((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_261B8E1E8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  j__swift_retain();
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  j__swift_release();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_261A278A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_261A27908(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_261B8E1E8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  return a1;
}

char *sub_261A279F4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_261A278A8((uint64_t)a1);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_261B8E1E8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  j__swift_release();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_261A27B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A27B14);
}

uint64_t sub_261A27B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9441C8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_261A27BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A27BEC);
}

uint64_t sub_261A27BEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9441C8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  return result;
}

uint64_t type metadata accessor for FastDigitView()
{
  uint64_t result = qword_26A9441D0;
  if (!qword_26A9441D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_261A27CFC()
{
  sub_261A27DA0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_261A27DA0()
{
  if (!qword_26A9441E0)
  {
    sub_261B8E1E8();
    unint64_t v0 = sub_261B8D3D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A9441E0);
    }
  }
}

uint64_t sub_261A27DF8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_261A27E14()
{
  unint64_t result = sub_261AC5178(MEMORY[0x263F8EE78]);
  qword_26A9535C0 = result;
  return result;
}

double sub_261A27E3C()
{
  uint64_t v1 = sub_261B8E1E8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + *(int *)(type metadata accessor for FastDigitView() + 20);
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);
  j__swift_retain();
  uint64_t v8 = sub_2619FA68C(v6, v7);
  j__swift_release();
  if (v8)
  {
    if (qword_26A942C80 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v9 = qword_26A9535C0;
    if (*(void *)(qword_26A9535C0 + 16))
    {
      uint64_t v10 = swift_retain();
      unint64_t v11 = sub_261ACB2A0(v10);
      if (v12)
      {
        double v13 = *(double *)(*(void *)(v9 + 56) + 16 * v11);
        swift_endAccess();
        swift_release();
LABEL_10:
        swift_release();
        return v13;
      }
      swift_release();
    }
    swift_endAccess();
    sub_2619FA658((uint64_t)v4);
    uint64_t v14 = (void *)sub_261B8E028();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v29 = 0;
    sub_261A286DC();
    sub_261B8F798();
    uint64_t v15 = (void *)sub_261B8F0B8();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9441F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_261B93F70;
    char v17 = (void *)*MEMORY[0x263F814F0];
    *(void *)(inited + 32) = *MEMORY[0x263F814F0];
    type metadata accessor for CTFont(0);
    *(void *)(inited + 64) = v18;
    *(void *)(inited + 40) = v14;
    id v19 = v17;
    id v20 = v14;
    sub_261AC5288(inited);
    type metadata accessor for Key(0);
    sub_261A28A80((unint64_t *)&qword_26A943070, type metadata accessor for Key);
    uint64_t v21 = (void *)sub_261B8EFE8();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_sizeWithAttributes_, v21);
    double v13 = v22;
    double v24 = v23;

    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = qword_26A9535C0;
    qword_26A9535C0 = 0x8000000000000000;
    sub_261A0BB38(v8, isUniquelyReferenced_nonNull_native, v13, v24);
    qword_26A9535C0 = v28;
    swift_release();
    swift_bridgeObjectRelease();
    swift_endAccess();

    goto LABEL_10;
  }
  return 0.0;
}

uint64_t sub_261A281B4()
{
  return sub_261B8D418();
}

double sub_261A281DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v5 = sub_261A27E3C();
  uint64_t v6 = *(void *)(v2 + *(int *)(a1 + 24));
  if (v6 >= 9) {
    uint64_t v6 = 9;
  }
  double v7 = -(v5 * (double)v6);
  sub_261A27E3C();
  sub_261B8ECA8();
  sub_261B8D4D8();
  *(double *)a2 = v7;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = sub_261A281B4;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v9;
  *(unsigned char *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v11;
  *(unsigned char *)(a2 + 56) = v12;
  double result = *(double *)&v13;
  *(_OWORD *)(a2 + 64) = v13;
  *(_WORD *)(a2 + 80) = 0;
  return result;
}

uint64_t sub_261A282A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v1 = sub_261B8AB78();
  uint64_t v27 = *(void *)(v1 - 8);
  uint64_t v28 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_261B8ABA8();
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8AEF8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944250);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  char v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v25 - v14;
  MEMORY[0x270FA5388](v13);
  char v17 = (char *)v25 - v16;
  uint64_t v34 = 123456789;
  sub_261B8AE68();
  v25[1] = sub_261A286DC();
  sub_261B8AA78();
  int64x2_t v30 = vdupq_n_s64(0xAuLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944258);
  sub_2619F8AB8(&qword_26A944260, &qword_26A944258);
  sub_261B8AB88();
  MEMORY[0x263E48960](v6, v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  sub_261B8AB68();
  MEMORY[0x263E48950](v3, v8);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v28);
  v18(v15, v8);
  sub_2619F8AB8(&qword_26A944268, &qword_26A944250);
  sub_261B8F7A8();
  v18(v17, v8);
  sub_261A029C4();
  uint64_t v19 = sub_261B8E3D8();
  uint64_t v21 = v20;
  LOBYTE(v8) = v22 & 1;
  v30.i64[0] = v19;
  v30.i64[1] = v20;
  char v31 = v22 & 1;
  uint64_t v32 = v23;
  __int16 v33 = 257;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944270);
  sub_261A2895C();
  sub_261B8E588();
  sub_261A02A18(v19, v21, v8);
  return swift_bridgeObjectRelease();
}

unint64_t sub_261A286DC()
{
  unint64_t result = qword_26A9441E8;
  if (!qword_26A9441E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9441E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AllDigitsView()
{
  return &type metadata for AllDigitsView;
}

unint64_t sub_261A28744()
{
  unint64_t result = qword_26A9441F8;
  if (!qword_26A9441F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944200);
    sub_261A28840(&qword_26A944208, &qword_26A944210, (void (*)(void))sub_261A28810);
    sub_2619F8AB8((unint64_t *)&qword_26A944240, &qword_26A944248);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9441F8);
  }
  return result;
}

uint64_t sub_261A28810()
{
  return sub_261A28840(&qword_26A944218, &qword_26A944220, (void (*)(void))sub_261A288BC);
}

uint64_t sub_261A28840(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A288BC()
{
  return sub_261A28840(&qword_26A944228, &qword_26A944230, (void (*)(void))sub_261A288EC);
}

unint64_t sub_261A288EC()
{
  unint64_t result = qword_26A944238;
  if (!qword_26A944238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944238);
  }
  return result;
}

uint64_t sub_261A28940()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_261A2895C()
{
  unint64_t result = qword_26A944278;
  if (!qword_26A944278)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944270);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944278);
  }
  return result;
}

unint64_t sub_261A289D4()
{
  unint64_t result = qword_26A944280;
  if (!qword_26A944280)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944288);
    sub_261A2895C();
    sub_261A28A80((unint64_t *)&qword_26A943A88, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944280);
  }
  return result;
}

uint64_t sub_261A28A80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id FIUIWorkoutActivityType.accessibilityIdentifier.getter()
{
  uint64_t v1 = v0;
  if (objc_msgSend(v0, sel_effectiveTypeIdentifier) != (id)46)
  {
    if (!objc_msgSend(self, sel_shouldDisambiguateOnLocationType_, objc_msgSend(v0, sel_identifier)))
    {
      objc_msgSend(v0, sel_effectiveTypeIdentifier);
      id v42 = (id)_HKWorkoutActivityNameForActivityType();
      if (!v42) {
        return (id)0xD000000000000010;
      }
      uint64_t v43 = v42;
      uint64_t v44 = sub_261B8F0F8();
      unint64_t v46 = v45;

      if ((sub_261B8F238() & 1) == 0) {
        return (id)v44;
      }
      unint64_t v47 = sub_261B8F198();
      unint64_t v48 = sub_261A28F7C(v47, v44, v46);
      uint64_t v50 = v49;
      uint64_t v52 = v51;
      uint64_t v54 = v53;
      swift_bridgeObjectRelease();
      uint64_t v44 = MEMORY[0x263E4D030](v48, v50, v52, v54);
LABEL_22:
      swift_bridgeObjectRelease();
      return (id)v44;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943570);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_261B92AA0;
    objc_msgSend(v0, sel_effectiveTypeIdentifier);
    id v28 = (id)_HKWorkoutActivityNameForActivityType();
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = sub_261B8F0F8();
      unint64_t v32 = v31;

      if (sub_261B8F238())
      {
        unint64_t v33 = sub_261B8F198();
        unint64_t v34 = sub_261A28F7C(v33, v30, v32);
        uint64_t v36 = v35;
        uint64_t v38 = v37;
        uint64_t v40 = v39;
        swift_bridgeObjectRelease();
        uint64_t v30 = MEMORY[0x263E4D030](v34, v36, v38, v40);
        unint64_t v32 = v41;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v30 = 0xD000000000000010;
      unint64_t v32 = 0x8000000261B9E1E0;
    }
    *(void *)(v27 + 32) = v30;
    *(void *)(v27 + 40) = v32;
    unsigned int v55 = objc_msgSend(v1, sel_isIndoor);
    uint64_t v56 = 0x726F6F6474754FLL;
    if (v55) {
      uint64_t v56 = 0x726F6F646E49;
    }
    unint64_t v57 = 0xE700000000000000;
    if (v55) {
      unint64_t v57 = 0xE600000000000000;
    }
    *(void *)(v27 + 48) = v56;
    *(void *)(v27 + 56) = v57;
LABEL_21:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943578);
    sub_261A2902C();
    uint64_t v44 = sub_261B8F048();
    goto LABEL_22;
  }
  objc_msgSend(v0, sel_swimmingLocationType);
  id result = (id)_HKWorkoutSwimmingLocationTypeName();
  if (result)
  {
    uint64_t v3 = result;
    sub_261B8F0F8();

    unint64_t v4 = sub_261A029C4();
    uint64_t v5 = MEMORY[0x263F8D310];
    uint64_t v6 = sub_261B8F748();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    uint64_t v61 = v6;
    unint64_t v59 = v4;
    unint64_t v60 = v4;
    unint64_t v58 = v4;
    uint64_t v9 = sub_261B8F788();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943570);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_261B92AA0;
    objc_msgSend(v1, sel_effectiveTypeIdentifier, v5, v58, v59, v60, 0, 0xE000000000000000, 32, 0xE100000000000000, v61, v8);
    id v13 = (id)_HKWorkoutActivityNameForActivityType();
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = sub_261B8F0F8();
      unint64_t v17 = v16;

      if (sub_261B8F238())
      {
        unint64_t v18 = sub_261B8F198();
        unint64_t v19 = sub_261A28F7C(v18, v15, v17);
        uint64_t v21 = v20;
        uint64_t v23 = v22;
        uint64_t v25 = v24;
        swift_bridgeObjectRelease();
        uint64_t v15 = MEMORY[0x263E4D030](v19, v21, v23, v25);
        unint64_t v17 = v26;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v15 = 0xD000000000000010;
      unint64_t v17 = 0x8000000261B9E1E0;
    }
    *(void *)(v12 + 32) = v15;
    *(void *)(v12 + 40) = v17;
    *(void *)(v12 + 48) = v9;
    *(void *)(v12 + 56) = v11;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

unint64_t sub_261A28F7C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  id result = sub_261B8F1B8();
  if (v6) {
    id result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_261B8F268();
}

unint64_t sub_261A2902C()
{
  unint64_t result = qword_26A943580;
  if (!qword_26A943580)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943578);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943580);
  }
  return result;
}

uint64_t WheelchairStatusBridge.__allocating_init(status:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t WheelchairStatusBridge.init(status:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

id sub_261A290C8()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_isWheelchairUser);
}

id sub_261A290EC(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + 16), sel_addObserver_, a1);
}

uint64_t WheelchairStatusBridge.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t WheelchairStatusBridge.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

id sub_261A29158()
{
  return objc_msgSend(*(id *)(*(void *)v0 + 16), sel_isWheelchairUser);
}

id sub_261A29180(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(void *)v1 + 16), sel_addObserver_, a1);
}

uint64_t type metadata accessor for WheelchairStatusBridge()
{
  return self;
}

uint64_t method lookup function for WheelchairStatusBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WheelchairStatusBridge);
}

uint64_t dispatch thunk of WheelchairStatusBridge.__allocating_init(status:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of WheelchairStatusBridge.isWheelchairUser()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of WheelchairStatusBridge.addObserver(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

void MultisportElapsedTimeView.init(activityString:time:remainingLegs:dimmed:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v12 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, 8.5, 9.5, 11.0, 12.0, 14.0);
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(double *)(a5 + 16) = a6;
  *(void *)(a5 + 24) = a3;
  *(unsigned char *)(a5 + 32) = a4;
  *(double *)(a5 + 40) = v12;
}

uint64_t MultisportElapsedTimeView.body.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943408);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (double *)((char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943410);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = v0[1];
  v14[0] = *v0;
  v14[1] = v7;
  void v14[2] = v0[2];
  sub_261A2A8A8((uint64_t)v14);
  if (qword_26A942C88 != -1) {
    swift_once();
  }
  double v8 = *(double *)&qword_26A9447C0;
  sub_261A2A8D4((uint64_t)v14);
  *(void *)uint64_t v3 = sub_261B8DAD8();
  v3[1] = -v8;
  *((unsigned char *)v3 + 16) = 0;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944290);
  sub_261A294E4((uint64_t)v14, (char *)v3 + *(int *)(v9 + 44));
  double v10 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
  uint64_t v11 = sub_261B8ECA8();
  sub_2619FE8B0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v6, 0.0, 1, v10, 0, v11, v12);
  sub_2619F8754((uint64_t)v3, &qword_26A943408);
  sub_261A2A900();
  sub_261B8E568();
  return sub_2619F8754((uint64_t)v6, &qword_26A943410);
}

void sub_261A294E4(uint64_t a1@<X0>, char *a2@<X8>)
{
  char v117 = a2;
  uint64_t v3 = sub_261B8DED8();
  uint64_t v115 = *(void *)(v3 - 8);
  unint64_t v116 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v114 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9442B8);
  MEMORY[0x270FA5388](v5 - 8);
  long long v7 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9442C0);
  MEMORY[0x270FA5388](v101);
  uint64_t v9 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9442C8);
  MEMORY[0x270FA5388](v102);
  uint64_t v11 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9442D0);
  MEMORY[0x270FA5388](v103);
  id v13 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9442D8);
  MEMORY[0x270FA5388](v104);
  uint64_t v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9442E0);
  MEMORY[0x270FA5388](v105);
  uint64_t v111 = (uint64_t)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9442E8);
  MEMORY[0x270FA5388](v106);
  uint64_t v109 = (uint64_t)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9442F0);
  MEMORY[0x270FA5388](v107);
  uint64_t v110 = (uint64_t)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9442F8);
  MEMORY[0x270FA5388](v112);
  uint64_t v113 = (uint64_t)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944300);
  uint64_t v119 = *(void *)(v20 - 8);
  uint64_t v120 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  unint64_t v108 = (char *)&v100 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v118 = (char *)&v100 - v26;
  *(void *)long long v7 = sub_261B8DAD8();
  *((void *)v7 + 1) = 0x4008000000000000;
  v7[16] = 0;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944308);
  sub_261A2A3B4((uint64_t *)a1, (uint64_t)&v7[*(int *)(v27 + 44)]);
  id v28 = objc_msgSend(self, sel_keyColors);
  if (v28)
  {
    uint64_t v29 = v28;
    char v100 = v23;
    id v30 = objc_msgSend(v28, sel_nonGradientTextColor);

    if (v30)
    {
      uint64_t v31 = MEMORY[0x263E4C7B0](v30);
      uint64_t KeyPath = swift_getKeyPath();
      sub_2619F86F0((uint64_t)v7, (uint64_t)v9, &qword_26A9442B8);
      unint64_t v33 = (uint64_t *)&v9[*(int *)(v101 + 36)];
      uint64_t *v33 = KeyPath;
      v33[1] = v31;
      sub_2619F8754((uint64_t)v7, &qword_26A9442B8);
      LOBYTE(v31) = sub_261B8DFD8();
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
      sub_261B8D358();
      uint64_t v35 = v34;
      uint64_t v37 = v36;
      uint64_t v39 = v38;
      uint64_t v41 = v40;
      sub_2619F86F0((uint64_t)v9, (uint64_t)v11, &qword_26A9442C0);
      id v42 = &v11[*(int *)(v102 + 36)];
      *id v42 = v31;
      *((void *)v42 + 1) = v35;
      *((void *)v42 + 2) = v37;
      *((void *)v42 + 3) = v39;
      *((void *)v42 + 4) = v41;
      v42[40] = 0;
      sub_2619F8754((uint64_t)v9, &qword_26A9442C0);
      LOBYTE(v31) = sub_261B8DFF8();
      uint64_t v43 = a1;
      sub_261B8D358();
      uint64_t v45 = v44;
      uint64_t v47 = v46;
      uint64_t v49 = v48;
      uint64_t v51 = v50;
      sub_2619F86F0((uint64_t)v11, (uint64_t)v13, &qword_26A9442C8);
      uint64_t v52 = &v13[*(int *)(v103 + 36)];
      *uint64_t v52 = v31;
      *((void *)v52 + 1) = v45;
      *((void *)v52 + 2) = v47;
      *((void *)v52 + 3) = v49;
      *((void *)v52 + 4) = v51;
      v52[40] = 0;
      sub_2619F8754((uint64_t)v11, &qword_26A9442C8);
      if (qword_26A942D20 != -1) {
        swift_once();
      }
      uint64_t v53 = MEMORY[0x263E4C7B0]((id)qword_26A945868);
      char v54 = sub_261B8DFA8();
      sub_2619F86F0((uint64_t)v13, (uint64_t)v15, &qword_26A9442D0);
      unsigned int v55 = &v15[*(int *)(v104 + 36)];
      *(void *)unsigned int v55 = v53;
      v55[8] = v54;
      sub_2619F8754((uint64_t)v13, &qword_26A9442D0);
      if (qword_26A942CA8 != -1) {
        swift_once();
      }
      sub_261B8EC98();
      sub_261B8D4D8();
      uint64_t v56 = v111;
      sub_2619F86F0((uint64_t)v15, v111, &qword_26A9442D8);
      unint64_t v57 = (_OWORD *)(v56 + *(int *)(v105 + 36));
      long long v58 = v152;
      _OWORD *v57 = *(_OWORD *)&v151[200];
      v57[1] = v58;
      v57[2] = v153;
      sub_2619F8754((uint64_t)v15, &qword_26A9442D8);
      if (qword_26A942C88 != -1) {
        swift_once();
      }
      uint64_t v59 = qword_26A9447C0;
      uint64_t v60 = v109;
      sub_2619F86F0(v56, v109, &qword_26A9442E0);
      uint64_t v61 = v60 + *(int *)(v106 + 36);
      *(void *)uint64_t v61 = v59;
      *(void *)(v61 + 8) = 10;
      *(_WORD *)(v61 + 16) = 256;
      sub_2619F8754(v56, &qword_26A9442E0);
      uint64_t v62 = v110;
      sub_2619F86F0(v60, v110, &qword_26A9442E8);
      *(void *)(v62 + *(int *)(v107 + 36)) = 0x3FF0000000000000;
      sub_2619F8754(v60, &qword_26A9442E8);
      if (*(unsigned char *)(a1 + 32)) {
        double v63 = 0.35;
      }
      else {
        double v63 = 1.0;
      }
      uint64_t v64 = v113;
      sub_2619F86F0(v62, v113, &qword_26A9442F0);
      *(double *)(v64 + *(int *)(v112 + 36)) = v63;
      sub_2619F8754(v62, &qword_26A9442F0);
      uint64_t v65 = v114;
      sub_261B8DEC8();
      sub_261A2AE60(&qword_26A944310, &qword_26A9442F8, (void (*)(void))sub_261A2AC28);
      uint64_t v66 = v108;
      sub_261B8E6B8();
      (*(void (**)(char *, unint64_t))(v115 + 8))(v65, v116);
      sub_2619F8754(v64, &qword_26A9442F8);
      (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v118, v66, v120);
      if (*(uint64_t *)(v43 + 24) < 1)
      {
        sub_261A2AFD0((uint64_t)&v127);
        sub_2619FB7EC((uint64_t)&v127, (uint64_t)v151, &qword_26A944388);
      }
      else
      {
        unint64_t v116 = *(void *)(v43 + 24);
        uint64_t v115 = sub_261B8E878();
        uint64_t v67 = swift_getKeyPath();
        uint64_t v68 = qword_26A9447C0;
        sub_261B8EC98();
        sub_261B8D4D8();
        char v69 = v155;
        uint64_t v113 = v156;
        unint64_t v114 = v154;
        char v70 = v157;
        uint64_t v111 = v159;
        uint64_t v112 = v158;
        if (qword_26A942D28 != -1) {
          swift_once();
        }
        uint64_t v110 = MEMORY[0x263E4C7B0]((id)qword_26A945870);
        uint64_t v109 = swift_getKeyPath();
        uint64_t v71 = qword_26A9447C0;
        sub_261B8EC98();
        sub_261B8D4D8();
        uint64_t v72 = v160;
        uint64_t v73 = v162;
        uint64_t v74 = v164;
        uint64_t v75 = v165;
        LOBYTE(v123[0]) = v69;
        v122[0] = v70;
        v126[0] = v161;
        LOBYTE(v125[0]) = v163;
        char v76 = v161;
        char v77 = v163;
        swift_retain();
        swift_release();
        *(void *)&long long v127 = v67;
        *((void *)&v127 + 1) = v115;
        char v128 = v114;
        char v129 = v69;
        uint64_t v130 = v113;
        char v131 = v70;
        uint64_t v132 = v112;
        uint64_t v133 = v111;
        uint64_t v134 = v68;
        uint64_t v135 = 10;
        __int16 v136 = 256;
        uint64_t v137 = 0x3FE8000000000000;
        uint64_t v138 = v109;
        uint64_t v139 = v110;
        uint64_t v140 = v72;
        char v141 = v76;
        uint64_t v142 = v73;
        char v143 = v77;
        uint64_t v144 = v74;
        uint64_t v145 = v75;
        uint64_t v146 = v71;
        uint64_t v147 = 10;
        __int16 v148 = 256;
        uint64_t v149 = 0x3FE0000000000000;
        double v150 = v63;
        nullsub_1(&v127);
        sub_2619FB7EC((uint64_t)&v127, (uint64_t)v151, &qword_26A944388);
        if (v116 >= 2)
        {
          unint64_t v116 = sub_261B8E878();
          uint64_t v78 = swift_getKeyPath();
          uint64_t v79 = qword_26A9447C0;
          sub_261B8EC98();
          sub_261B8D4D8();
          char v80 = v167;
          unint64_t v114 = v168;
          uint64_t v115 = v166;
          char v81 = v169;
          uint64_t v112 = v171;
          uint64_t v113 = v170;
          if (qword_26A942D30 != -1) {
            swift_once();
          }
          uint64_t v111 = MEMORY[0x263E4C7B0]((id)qword_26A945878);
          uint64_t v110 = swift_getKeyPath();
          uint64_t v82 = qword_26A9447C0;
          sub_261B8EC98();
          sub_261B8D4D8();
          uint64_t v83 = v172;
          uint64_t v84 = v174;
          uint64_t v85 = v176;
          uint64_t v86 = v177;
          LOBYTE(v123[0]) = v80;
          v122[0] = v81;
          LOBYTE(v125[0]) = v173;
          LOBYTE(v124[0]) = v175;
          char v87 = v173;
          char v88 = v175;
          swift_retain();
          swift_release();
          *(void *)&long long v127 = v78;
          *((void *)&v127 + 1) = v116;
          char v128 = (char *)v115;
          char v129 = v80;
          uint64_t v130 = (uint64_t)v114;
          char v131 = v81;
          uint64_t v132 = v113;
          uint64_t v133 = v112;
          uint64_t v134 = v79;
          uint64_t v135 = 10;
          __int16 v136 = 256;
          uint64_t v137 = 0x3FD0000000000000;
          uint64_t v138 = v110;
          uint64_t v139 = v111;
          uint64_t v140 = v83;
          char v141 = v87;
          uint64_t v142 = v84;
          char v143 = v88;
          uint64_t v144 = v85;
          uint64_t v145 = v86;
          uint64_t v146 = v82;
          uint64_t v147 = 10;
          __int16 v148 = 256;
          uint64_t v149 = *(void *)&v63;
          nullsub_1(&v127);
          goto LABEL_21;
        }
      }
      sub_261A2AFF4(&v127);
LABEL_21:
      sub_2619FB7EC((uint64_t)&v127, (uint64_t)v126, &qword_26A944390);
      uint64_t v90 = v118;
      uint64_t v89 = v119;
      long long v91 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
      long long v92 = v100;
      uint64_t v93 = v120;
      v91(v100, v118, v120);
      sub_2619FB7EC((uint64_t)v151, (uint64_t)v122, &qword_26A944388);
      sub_2619FB7EC((uint64_t)v126, (uint64_t)v121, &qword_26A944390);
      char v94 = v117;
      v91(v117, v92, v93);
      unsigned __int8 v95 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A944398);
      uint64_t v96 = (uint64_t)&v94[v95[12]];
      sub_2619FB7EC((uint64_t)v122, (uint64_t)v123, &qword_26A944388);
      sub_2619FB7EC((uint64_t)v123, v96, &qword_26A944388);
      uint64_t v97 = (uint64_t)&v94[v95[16]];
      sub_2619FB7EC((uint64_t)v121, (uint64_t)v124, &qword_26A944390);
      sub_2619FB7EC((uint64_t)v124, v97, &qword_26A944390);
      uint64_t v98 = &v94[v95[20]];
      *(void *)uint64_t v98 = 0;
      v98[8] = 1;
      sub_261A2B144(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_261A2B014);
      sub_261A2B074(v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_261A2B014);
      char v99 = *(void (**)(char *, uint64_t))(v89 + 8);
      v99(v90, v93);
      sub_2619FB7EC((uint64_t)v121, (uint64_t)v125, &qword_26A944390);
      sub_261A2B074(v125, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_261A2B0E8);
      sub_2619FB7EC((uint64_t)v122, (uint64_t)&v127, &qword_26A944388);
      sub_261A2B144(&v127, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_261A2B0E8);
      v99(v92, v93);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_261A2A3B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9443A0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v50 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v45 - v5;
  sub_261B8C358();
  uint64_t v53 = sub_261B8C338();
  uint64_t v54 = v7;
  sub_261A029C4();
  uint64_t v8 = sub_261B8E3D8();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v53 = v8;
  uint64_t v54 = v10;
  char v55 = v14;
  uint64_t v56 = v12;
  uint64_t v57 = 0x3FF0000000000000;
  LOWORD(v58) = 256;
  uint64_t v59 = KeyPath;
  unsigned __int8 v60 = 0;
  uint64_t v51 = sub_261B8C348();
  uint64_t v52 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9443A8);
  sub_261A2B1C0(&qword_26A9443B0, &qword_26A9443A8, (void (*)(void))sub_261A2B248, (void (*)(void))sub_2619FBA38);
  uint64_t v49 = v6;
  uint64_t v17 = v47;
  sub_261B8E668();
  swift_bridgeObjectRelease();
  sub_261A02A18(v8, v10, v14);
  swift_bridgeObjectRelease();
  sub_2619F7790(KeyPath, 0);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  sub_261A2A8A8((uint64_t)v17);
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v20 = (id)qword_26B416688;
  sub_261B8AA48();

  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_261B93F70;
  *(void *)(v21 + 56) = MEMORY[0x263F8D310];
  *(void *)(v21 + 64) = sub_261A2B2E8();
  *(void *)(v21 + 32) = v19;
  *(void *)(v21 + 40) = v18;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_261B8F118();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  sub_261A2A8D4((uint64_t)v17);
  uint64_t v53 = v22;
  uint64_t v54 = v24;
  uint64_t v25 = sub_261B8E3D8();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  sub_261A704F8(1, v25, v26, v28 & 1, v30, (uint64_t)&v53);
  sub_261A02A18(v25, v27, v29);
  swift_bridgeObjectRelease();
  uint64_t v32 = v53;
  uint64_t v31 = v54;
  char v33 = v55;
  uint64_t v34 = v56;
  LODWORD(v47) = v57;
  uint64_t v35 = v58;
  LOBYTE(v27) = v59;
  int v46 = v60;
  uint64_t v36 = v61;
  uint64_t v45 = v62;
  char v37 = v63;
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = v50;
  sub_2619F86F0((uint64_t)v49, v50, &qword_26A9443A0);
  uint64_t v40 = v39;
  uint64_t v41 = v48;
  sub_2619F86F0(v40, v48, &qword_26A9443A0);
  uint64_t v42 = v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A9443E0) + 48);
  *(void *)uint64_t v42 = v32;
  *(void *)(v42 + 8) = v31;
  *(unsigned char *)(v42 + 16) = v33;
  *(void *)(v42 + 24) = v34;
  *(unsigned char *)(v42 + 32) = (_BYTE)v47;
  *(void *)(v42 + 40) = v35;
  *(unsigned char *)(v42 + 48) = v27;
  *(unsigned char *)(v42 + 56) = v46;
  *(void *)(v42 + 64) = v36;
  uint64_t v43 = v45;
  *(void *)(v42 + 72) = v45;
  *(unsigned char *)(v42 + 80) = v37;
  *(void *)(v42 + 88) = v38;
  *(void *)(v42 + 96) = 0x3FE6666666666666;
  sub_261A001D0(v32, v31, v33);
  swift_bridgeObjectRetain();
  sub_2619F7774(v35, v27);
  sub_2619F7774(v43, v37);
  swift_retain();
  sub_2619F8754((uint64_t)v49, &qword_26A9443A0);
  sub_261A02A18(v32, v31, v33);
  swift_bridgeObjectRelease();
  sub_2619F7790(v35, v27);
  sub_2619F7790(v43, v37);
  swift_release();
  return sub_2619F8754(v50, &qword_26A9443A0);
}

uint64_t sub_261A2A8A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A2A8D4(uint64_t a1)
{
  return a1;
}

unint64_t sub_261A2A900()
{
  unint64_t result = qword_26A944298;
  if (!qword_26A944298)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943410);
    sub_2619F8AB8(&qword_26A9442A0, &qword_26A943408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944298);
  }
  return result;
}

uint64_t sub_261A2A9A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for MultisportElapsedTimeView()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MultisportElapsedTimeView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MultisportElapsedTimeView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for MultisportElapsedTimeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultisportElapsedTimeView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultisportElapsedTimeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MultisportElapsedTimeView()
{
  return &type metadata for MultisportElapsedTimeView;
}

uint64_t sub_261A2AB78()
{
  return sub_261A2B1C0(&qword_26A9442A8, &qword_26A9442B0, (void (*)(void))sub_261A2A900, (void (*)(void))sub_261A2ABC8);
}

unint64_t sub_261A2ABC8()
{
  unint64_t result = qword_26A943A88;
  if (!qword_26A943A88)
  {
    sub_261B8DF38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943A88);
  }
  return result;
}

unint64_t sub_261A2AC28()
{
  unint64_t result = qword_26A944318;
  if (!qword_26A944318)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9442F0);
    sub_261A2ACC8();
    sub_2619F8AB8(&qword_26A944378, &qword_26A944380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944318);
  }
  return result;
}

unint64_t sub_261A2ACC8()
{
  unint64_t result = qword_26A944320;
  if (!qword_26A944320)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9442E8);
    sub_261A2AE60(&qword_26A944328, &qword_26A9442E0, (void (*)(void))sub_261A2AD94);
    sub_2619F8AB8(&qword_26A944368, &qword_26A944370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944320);
  }
  return result;
}

unint64_t sub_261A2AD94()
{
  unint64_t result = qword_26A944330;
  if (!qword_26A944330)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9442D8);
    sub_261A2AE60(&qword_26A944338, &qword_26A9442D0, (void (*)(void))sub_261A2AEDC);
    sub_2619F8AB8((unint64_t *)&qword_26A944358, &qword_26A944360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944330);
  }
  return result;
}

uint64_t sub_261A2AE60(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A2AEDC()
{
  return sub_261A2AE60(&qword_26A944340, &qword_26A9442C8, (void (*)(void))sub_261A2AF0C);
}

unint64_t sub_261A2AF0C()
{
  unint64_t result = qword_26A944348;
  if (!qword_26A944348)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9442C0);
    sub_2619F8AB8(&qword_26A944350, &qword_26A9442B8);
    sub_2619F8AB8((unint64_t *)&qword_26A943AF0, &qword_26A943AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944348);
  }
  return result;
}

double sub_261A2AFD0(uint64_t a1)
{
  *(void *)(a1 + 192) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double sub_261A2AFF4(_OWORD *a1)
{
  double result = 0.0;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_261A2B014(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *sub_261A2B074(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

uint64_t sub_261A2B0E8(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void *sub_261A2B144(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24]);
  return a1;
}

uint64_t sub_261A2B1C0(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A2B248()
{
  unint64_t result = qword_26A9443B8;
  if (!qword_26A9443B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9443C0);
    sub_2619F8AB8(&qword_26A9443C8, &qword_26A9443D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9443B8);
  }
  return result;
}

unint64_t sub_261A2B2E8()
{
  unint64_t result = qword_26A9443D8;
  if (!qword_26A9443D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9443D8);
  }
  return result;
}

id sub_261A2B344(double a1, double a2, double a3, double a4)
{
  v29.receiver = v4;
  v29.super_class = (Class)type metadata accessor for SeparatorView();
  id v9 = objc_msgSendSuper2(&v29, sel_initWithFrame_, a1, a2, a3, a4);
  id v10 = objc_allocWithZone(MEMORY[0x263F3F168]);
  id v11 = v9;
  id v12 = objc_msgSend(v10, sel_init);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v11, sel_addSubview_, v12);
  char v13 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9443E8);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_261B94510;
  id v15 = objc_msgSend(v12, sel_leadingAnchor);
  id v16 = objc_msgSend(v11, sel_leadingAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(void *)(v14 + 32) = v17;
  id v18 = objc_msgSend(v12, sel_trailingAnchor);
  id v19 = objc_msgSend(v11, sel_trailingAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(void *)(v14 + 40) = v20;
  id v21 = objc_msgSend(v12, sel_topAnchor);
  id v22 = objc_msgSend(v11, sel_topAnchor);
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(void *)(v14 + 48) = v23;
  id v24 = objc_msgSend(v12, sel_bottomAnchor);
  id v25 = objc_msgSend(v11, sel_bottomAnchor);
  id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(void *)(v14 + 56) = v26;
  sub_261B8F2E8();
  sub_261A2B6F4();
  uint64_t v27 = (void *)sub_261B8F2C8();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_activateConstraints_, v27);

  return v11;
}

id SeparatorView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeparatorView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SeparatorView()
{
  return self;
}

unint64_t sub_261A2B6F4()
{
  unint64_t result = qword_26A9443F0[0];
  if (!qword_26A9443F0[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_26A9443F0);
  }
  return result;
}

uint64_t sub_261A2B734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

void sub_261A2B73C()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_261A2CE08();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_261A2B830(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_261B8D518();
  int v9 = *(_DWORD *)(*(void *)(v8 - 8) + 80);
  unint64_t v10 = ~(unint64_t)(v9 & 0xF8) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = (v9 & 0xF8) + 23;
  if (*(void *)(*(void *)(v8 - 8) + 64) <= 8uLL) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  int v13 = v9 | *(_DWORD *)(v6 + 80);
  if ((v13 & 0x1000F8) != 0
    || v12
     + ((v11
       + ((((((((v7 + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v10)
     + 1 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v13 & 0xF8 | 7u) + 16) & ~(unint64_t)(v13 & 0xF8 | 7u)));
LABEL_27:
    swift_retain();
    return a1;
  }
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
  unint64_t v16 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  id v18 = (void *)(((unint64_t)a1 + v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  id v19 = (void **)(((unint64_t)a2 + v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  id v20 = *v19;
  void *v18 = *v19;
  id v21 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v22 = (void **)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v23 = *v22;
  void *v21 = *v22;
  id v24 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v25 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  char v28 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = v28[1];
  void *v27 = *v28;
  v27[1] = v29;
  uint64_t v42 = (void *)(((unint64_t)v27 + v11) & v10);
  uint64_t v30 = (unsigned __int8 *)(((unint64_t)v28 + v11) & v10);
  unsigned int v31 = v30[v12];
  swift_retain();
  swift_retain();
  id v32 = v20;
  id v33 = v23;
  swift_retain();
  swift_retain();
  if (v31 < 2)
  {
    uint64_t v35 = v43;
LABEL_17:
    if (v31 != 1)
    {
LABEL_26:
      *uint64_t v42 = *(void *)v30;
      *((unsigned char *)v42 + v12) = 0;
      goto LABEL_27;
    }
  }
  else
  {
    if (v12 <= 3) {
      uint64_t v34 = v12;
    }
    else {
      uint64_t v34 = 4;
    }
    uint64_t v35 = v43;
    switch(v34)
    {
      case 1:
        int v36 = *v30;
        break;
      case 2:
        int v36 = *(unsigned __int16 *)v30;
        break;
      case 3:
        int v36 = *(unsigned __int16 *)v30 | (v30[2] << 16);
        break;
      case 4:
        int v36 = *(_DWORD *)v30;
        break;
      default:
        goto LABEL_17;
    }
    int v37 = (v36 | ((v31 - 2) << (8 * v12))) + 2;
    int v38 = v36 + 2;
    if (v12 >= 4) {
      int v39 = v38;
    }
    else {
      int v39 = v37;
    }
    if (v39 != 1) {
      goto LABEL_26;
    }
  }
  (*(void (**)(void *, unsigned __int8 *, uint64_t))(v35 + 16))(v42, v30, v41);
  *((unsigned char *)v42 + v12) = 1;
  return a1;
}

uint64_t sub_261A2BB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  swift_release();
  swift_release();
  uint64_t v5 = (id *)((v4 + 31) & 0xFFFFFFFFFFFFFFF8);

  uint64_t v6 = (id *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  swift_release();
  uint64_t v7 = *(void *)(sub_261B8D518() - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  int v9 = (unsigned __int8 *)(((((((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                          + v8
                          + 16) & ~v8);
  unint64_t v10 = *(void *)(v7 + 64);
  if (v10 <= 8) {
    unint64_t v10 = 8;
  }
  unsigned int v11 = v9[v10];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *v9;
        goto LABEL_12;
      case 2:
        int v14 = *(unsigned __int16 *)v9;
        goto LABEL_12;
      case 3:
        int v14 = *(unsigned __int16 *)v9 | (v9[2] << 16);
        goto LABEL_12;
      case 4:
        int v14 = *(_DWORD *)v9;
LABEL_12:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1)
  {
    unint64_t v16 = *(uint64_t (**)(void))(v7 + 8);
    return v16();
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_261A2BD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v42 = a1;
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  unsigned int v11 = (void *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v12 = (void **)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *v12;
  *unsigned int v11 = *v12;
  int v14 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v15 = (void **)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = *v15;
  void *v14 = *v15;
  unint64_t v17 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v18 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  id v20 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  id v21 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = sub_261B8D518();
  uint64_t v40 = *(void *)(v23 - 8);
  uint64_t v41 = v23;
  uint64_t v24 = *(_DWORD *)(v40 + 80) & 0xF8;
  uint64_t v25 = v24 + 23;
  unint64_t v26 = (unint64_t)v20 + v24 + 23;
  unint64_t v27 = ~v24 & 0xFFFFFFFFFFFFFFF8;
  char v28 = (void *)(v26 & v27);
  uint64_t v29 = (unsigned __int8 *)(((unint64_t)v21 + v25) & v27);
  if (*(void *)(v40 + 64) <= 8uLL) {
    uint64_t v30 = 8;
  }
  else {
    uint64_t v30 = *(void *)(*(void *)(v23 - 8) + 64);
  }
  unsigned int v31 = v29[v30];
  swift_retain();
  swift_retain();
  id v32 = v13;
  id v33 = v16;
  swift_retain();
  swift_retain();
  if (v31 >= 2)
  {
    if (v30 <= 3) {
      uint64_t v34 = v30;
    }
    else {
      uint64_t v34 = 4;
    }
    switch(v34)
    {
      case 1:
        int v35 = *v29;
        goto LABEL_13;
      case 2:
        int v35 = *(unsigned __int16 *)v29;
        goto LABEL_13;
      case 3:
        int v35 = *(unsigned __int16 *)v29 | (v29[2] << 16);
        goto LABEL_13;
      case 4:
        int v35 = *(_DWORD *)v29;
LABEL_13:
        int v36 = (v35 | ((v31 - 2) << (8 * v30))) + 2;
        unsigned int v37 = v35 + 2;
        if (v30 >= 4) {
          unsigned int v31 = v37;
        }
        else {
          unsigned int v31 = v36;
        }
        break;
      default:
        break;
    }
  }
  if (v31 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v40 + 16))(v28, v29, v41);
    char v38 = 1;
  }
  else
  {
    void *v28 = *(void *)v29;
    swift_retain();
    char v38 = 0;
  }
  *((unsigned char *)v28 + v30) = v38;
  return v42;
}

uint64_t sub_261A2BFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  swift_retain();
  swift_release();
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  unsigned int v11 = (void **)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v12 = (void **)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *v12;
  int v14 = *v11;
  *unsigned int v11 = *v12;
  id v15 = v13;

  unint64_t v16 = (void **)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v17 = (void **)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v18 = *v17;
  uint64_t v19 = *v16;
  void *v16 = *v17;
  id v20 = v18;

  id v21 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  swift_retain();
  swift_release();
  uint64_t v24 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  uint64_t v27 = sub_261B8D518();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(_DWORD *)(v28 + 80) & 0xF8;
  uint64_t v30 = v29 + 23;
  unint64_t v31 = (unint64_t)v24 + v29 + 23;
  unint64_t v32 = ~v29 & 0xFFFFFFFFFFFFFFF8;
  id v33 = (unsigned __int8 *)(v31 & v32);
  unint64_t v34 = (unint64_t)v25 + v30;
  int v35 = (unsigned __int8 *)(v34 & v32);
  if ((v31 & v32) != (v34 & v32))
  {
    uint64_t v36 = v27;
    uint64_t v37 = *(void *)(v27 - 8);
    if (*(void *)(v28 + 64) <= 8uLL) {
      uint64_t v38 = 8;
    }
    else {
      uint64_t v38 = *(void *)(v28 + 64);
    }
    unsigned int v39 = v33[v38];
    unsigned int v40 = v39 - 2;
    if (v39 >= 2)
    {
      if (v38 <= 3) {
        uint64_t v41 = v38;
      }
      else {
        uint64_t v41 = 4;
      }
      switch(v41)
      {
        case 1:
          int v42 = *v33;
          goto LABEL_14;
        case 2:
          int v42 = *(unsigned __int16 *)v33;
          goto LABEL_14;
        case 3:
          int v42 = *(unsigned __int16 *)v33 | (v33[2] << 16);
          goto LABEL_14;
        case 4:
          int v42 = *(_DWORD *)v33;
LABEL_14:
          int v43 = (v42 | (v40 << (8 * v38))) + 2;
          unsigned int v39 = v42 + 2;
          if (v38 < 4) {
            unsigned int v39 = v43;
          }
          break;
        default:
          break;
      }
    }
    if (v39 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v37 + 8))(v33, v27);
    }
    else {
      swift_release();
    }
    unsigned int v44 = v35[v38];
    unsigned int v45 = v44 - 2;
    if (v44 >= 2)
    {
      if (v38 <= 3) {
        uint64_t v46 = v38;
      }
      else {
        uint64_t v46 = 4;
      }
      switch(v46)
      {
        case 1:
          int v47 = *v35;
          goto LABEL_28;
        case 2:
          int v47 = *(unsigned __int16 *)v35;
          goto LABEL_28;
        case 3:
          int v47 = *(unsigned __int16 *)v35 | (v35[2] << 16);
          goto LABEL_28;
        case 4:
          int v47 = *(_DWORD *)v35;
LABEL_28:
          int v48 = (v47 | (v45 << (8 * v38))) + 2;
          unsigned int v44 = v47 + 2;
          if (v38 < 4) {
            unsigned int v44 = v48;
          }
          break;
        default:
          break;
      }
    }
    if (v44 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v37 + 16))(v33, v35, v36);
      v33[v38] = 1;
    }
    else
    {
      *(void *)id v33 = *(void *)v35;
      v33[v38] = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_261A2C2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = v11;
  unsigned int v12 = (void *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  void *v12 = *v13;
  int v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *v15;
  unint64_t v16 = (_OWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v17 = (_OWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v16 = *v17;
  id v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v18 = *v19;
  uint64_t v20 = *(void *)(sub_261B8D518() - 8);
  uint64_t v21 = *(_DWORD *)(v20 + 80) & 0xF8;
  uint64_t v22 = v21 + 23;
  unint64_t v23 = (unint64_t)v18 + v21 + 23;
  unint64_t v24 = ~v21 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = (void *)(v23 & v24);
  uint64_t v26 = (unsigned __int8 *)(((unint64_t)v19 + v22) & v24);
  if (*(void *)(v20 + 64) <= 8uLL) {
    uint64_t v27 = 8;
  }
  else {
    uint64_t v27 = *(void *)(v20 + 64);
  }
  unsigned int v28 = v26[v27];
  unsigned int v29 = v28 - 2;
  if (v28 >= 2)
  {
    if (v27 <= 3) {
      uint64_t v30 = v27;
    }
    else {
      uint64_t v30 = 4;
    }
    switch(v30)
    {
      case 1:
        int v31 = *v26;
        goto LABEL_13;
      case 2:
        int v31 = *(unsigned __int16 *)v26;
        goto LABEL_13;
      case 3:
        int v31 = *(unsigned __int16 *)v26 | (v26[2] << 16);
        goto LABEL_13;
      case 4:
        int v31 = *(_DWORD *)v26;
LABEL_13:
        int v32 = (v31 | (v29 << (8 * v27))) + 2;
        unsigned int v28 = v31 + 2;
        if (v27 < 4) {
          unsigned int v28 = v32;
        }
        break;
      default:
        break;
    }
  }
  if (v28 == 1)
  {
    (*(void (**)(void *))(v20 + 32))(v25);
    char v33 = 1;
  }
  else
  {
    char v33 = 0;
    void *v25 = *(void *)v26;
  }
  *((unsigned char *)v25 + v27) = v33;
  return a1;
}

uint64_t sub_261A2C504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  swift_release();
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_release();
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  char v11 = (void **)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v12 = (void **)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *v11;
  *char v11 = *v12;

  int v14 = (void **)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v15 = (void **)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = *v14;
  void *v14 = *v15;

  unint64_t v17 = (_OWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v18 = (_OWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v17 = *v18;
  swift_release();
  uint64_t v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v19 = *v20;
  swift_release();
  uint64_t v21 = sub_261B8D518();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  uint64_t v24 = v23 + 23;
  unint64_t v25 = (unint64_t)v19 + v23 + 23;
  unint64_t v26 = ~v23 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = (unsigned __int8 *)(v25 & v26);
  unint64_t v28 = (unint64_t)v20 + v24;
  unsigned int v29 = (unsigned __int8 *)(v28 & v26);
  if ((v25 & v26) != (v28 & v26))
  {
    uint64_t v30 = v21;
    uint64_t v31 = *(void *)(v21 - 8);
    if (*(void *)(v22 + 64) <= 8uLL) {
      uint64_t v32 = 8;
    }
    else {
      uint64_t v32 = *(void *)(v22 + 64);
    }
    unsigned int v33 = v27[v32];
    unsigned int v34 = v33 - 2;
    if (v33 >= 2)
    {
      if (v32 <= 3) {
        uint64_t v35 = v32;
      }
      else {
        uint64_t v35 = 4;
      }
      switch(v35)
      {
        case 1:
          int v36 = *v27;
          goto LABEL_14;
        case 2:
          int v36 = *(unsigned __int16 *)v27;
          goto LABEL_14;
        case 3:
          int v36 = *(unsigned __int16 *)v27 | (v27[2] << 16);
          goto LABEL_14;
        case 4:
          int v36 = *(_DWORD *)v27;
LABEL_14:
          int v37 = (v36 | (v34 << (8 * v32))) + 2;
          unsigned int v33 = v36 + 2;
          if (v32 < 4) {
            unsigned int v33 = v37;
          }
          break;
        default:
          break;
      }
    }
    if (v33 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v31 + 8))(v27, v21);
    }
    else {
      swift_release();
    }
    unsigned int v38 = v29[v32];
    unsigned int v39 = v38 - 2;
    if (v38 >= 2)
    {
      if (v32 <= 3) {
        uint64_t v40 = v32;
      }
      else {
        uint64_t v40 = 4;
      }
      switch(v40)
      {
        case 1:
          int v41 = *v29;
          goto LABEL_28;
        case 2:
          int v41 = *(unsigned __int16 *)v29;
          goto LABEL_28;
        case 3:
          int v41 = *(unsigned __int16 *)v29 | (v29[2] << 16);
          goto LABEL_28;
        case 4:
          int v41 = *(_DWORD *)v29;
LABEL_28:
          int v42 = (v41 | (v39 << (8 * v32))) + 2;
          unsigned int v38 = v41 + 2;
          if (v32 < 4) {
            unsigned int v38 = v42;
          }
          break;
        default:
          break;
      }
    }
    if (v38 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v31 + 32))(v27, v29, v30);
      char v43 = 1;
    }
    else
    {
      char v43 = 0;
      *(void *)uint64_t v27 = *(void *)v29;
    }
    v27[v32] = v43;
  }
  return a1;
}

uint64_t sub_261A2C810(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(sub_261B8D518() - 8);
  uint64_t v10 = 8;
  if (*(void *)(v9 + 64) > 8uLL) {
    uint64_t v10 = *(void *)(v9 + 64);
  }
  uint64_t v11 = *(void *)(v6 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v8) {
    goto LABEL_25;
  }
  uint64_t v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  unint64_t v13 = v10
      + ((v12
        + ((((((((v11 + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v12)
      + 1;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_25:
      if (v7 < 0x7FFFFFFF)
      {
        unint64_t v20 = *(void *)((((unint64_t)a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v20 >= 0xFFFFFFFF) {
          LODWORD(v20) = -1;
        }
        return (v20 + 1);
      }
      else
      {
        uint64_t v19 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
        return v19(a1, v7, v5);
      }
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_25;
  }
LABEL_17:
  int v18 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v18 = 0;
  }
  if (v13)
  {
    if (v13 > 3) {
      LODWORD(v13) = 4;
    }
    switch((int)v13)
    {
      case 2:
        LODWORD(v13) = *a1;
        break;
      case 3:
        LODWORD(v13) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v13) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v13) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v13 | v18) + 1;
}

void sub_261A2CAAC(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v23 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(void *)(sub_261B8D518() - 8);
  uint64_t v12 = 8;
  if (*(void *)(v11 + 64) > 8uLL) {
    uint64_t v12 = *(void *)(v11 + 64);
  }
  uint64_t v13 = *(void *)(v8 + 64);
  uint64_t v14 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  size_t v15 = v12
      + ((v14
        + ((((((((v13 + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v14)
      + 1;
  if (a3 <= v10)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v10 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v10 < a2)
  {
    unsigned int v17 = ~v10 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v15] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v18;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v15] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x261A2CDC8);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v9 < 0x7FFFFFFF)
        {
          unint64_t v22 = (unint64_t)&a1[v13 + 7] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            *(unsigned char *)(v22 + 16) = 0;
            *(void *)unint64_t v22 = a2 ^ 0x80000000;
            *(void *)(v22 + 8) = 0;
          }
          else
          {
            *(void *)(v22 + 8) = (a2 - 1);
          }
        }
        else
        {
          uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
          v21(a1, a2, v9, v7);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for WorkoutConfigurationViewIOS()
{
  return __swift_instantiateGenericMetadata();
}

void sub_261A2CE08()
{
  if (!qword_26A944478)
  {
    sub_261B8D518();
    unint64_t v0 = sub_261B8D3D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A944478);
    }
  }
}

uint64_t sub_261A2CE60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A2CEA4(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      unsigned int v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        int v16 = &v8[8 * v9];
        unsigned int v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)int v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x270FA5388](TupleTypeMetadata);
  int v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_261B8ECF8();
}

uint64_t sub_261A2D068()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944600);
  MEMORY[0x263E4CA00](&v2, v0);
  return v2;
}

uint64_t sub_261A2D0C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944480);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v32 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944488);
  uint64_t v6 = *(void *)(a1 + 16);
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944490);
  swift_getTupleTypeMetadata2();
  sub_261B8ECE8();
  sub_261B8F6D8();
  swift_getTupleTypeMetadata2();
  uint64_t v7 = sub_261B8ECE8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v39 = MEMORY[0x263F8E628];
  uint64_t v40 = v7;
  uint64_t v41 = MEMORY[0x263F8E638];
  uint64_t v42 = WitnessTable;
  uint64_t v9 = sub_261B8E288();
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v39 = v9;
  uint64_t v40 = v10;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944498);
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9444A0);
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9444A8);
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9444B0);
  swift_getTupleTypeMetadata3();
  sub_261B8ECE8();
  swift_getWitnessTable();
  uint64_t v11 = sub_261B8EAF8();
  uint64_t v31 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v30 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9444B8);
  uint64_t v14 = sub_261B8D688();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v30 = (char *)&v30 - v19;
  uint64_t v20 = *(void *)(a1 + 24);
  uint64_t v34 = v6;
  uint64_t v35 = v20;
  uint64_t v36 = v2;
  sub_261B8DBE8();
  sub_261B8EAE8();
  uint64_t v21 = *MEMORY[0x263F184F8];
  uint64_t v22 = sub_261B8D388();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = (uint64_t)v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v32, v21, v22);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v24, 0, 1, v22);
  uint64_t v25 = swift_getWitnessTable();
  sub_261B8E6D8();
  sub_2619F8754(v24, &qword_26A944480);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v11);
  uint64_t v26 = sub_2619F8AB8(&qword_26A9444C0, &qword_26A9444B8);
  uint64_t v37 = v25;
  uint64_t v38 = v26;
  swift_getWitnessTable();
  uint64_t v27 = v30;
  sub_261A8FE78(v18, v14);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v15 + 8);
  v28(v18, v14);
  sub_261A8FE78(v27, v14);
  return ((uint64_t (*)(char *, uint64_t))v28)(v27, v14);
}

uint64_t sub_261A2D624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void, void)@<X2>, uint64_t a4@<X8>)
{
  unint64_t v114 = a3;
  uint64_t v113 = (char *)a2;
  uint64_t v115 = a1;
  uint64_t v92 = a4;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9444C8);
  uint64_t v4 = MEMORY[0x270FA5388](v107);
  char v88 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v85 = (char *)&v84 - v6;
  uint64_t v106 = sub_261B8D648();
  uint64_t v105 = *(void **)(v106 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v106);
  uint64_t v104 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v102 = (char *)&v84 - v9;
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9444D0);
  uint64_t v10 = MEMORY[0x270FA5388](v108);
  uint64_t v84 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v86 = (uint64_t)&v84 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9444D8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v103 = (uint64_t *)((char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9444E0);
  MEMORY[0x270FA5388](v112);
  uint64_t v111 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9444B0);
  uint64_t v90 = *(void *)(v91 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v91);
  uint64_t v89 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  char v87 = (char *)&v84 - v18;
  uint64_t v101 = sub_261B8DB28();
  char v100 = *(void (***)(char *, uint64_t))(v101 - 8);
  MEMORY[0x270FA5388](v101);
  char v99 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944488);
  sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944490);
  swift_getTupleTypeMetadata2();
  sub_261B8ECE8();
  sub_261B8F6D8();
  swift_getTupleTypeMetadata2();
  uint64_t v20 = sub_261B8ECE8();
  uint64_t v97 = v20;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v126 = MEMORY[0x263F8E628];
  uint64_t v127 = v20;
  uint64_t v128 = MEMORY[0x263F8E638];
  uint64_t v129 = WitnessTable;
  uint64_t v21 = sub_261B8E288();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v84 - v23;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v126 = v21;
  uint64_t v127 = v25;
  uint64_t v94 = MEMORY[0x263F1AF88];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v27 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  unsigned int v29 = (char *)&v84 - v28;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944498);
  uint64_t v95 = sub_261B8D688();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9444A0);
  uint64_t v30 = sub_261B8D688();
  uint64_t v98 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v93 = (char *)&v84 - v31;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9444A8);
  uint64_t v32 = sub_261B8D688();
  uint64_t v109 = *(void *)(v32 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  uint64_t v35 = (void (**)(char *, uint64_t))((char *)&v84 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v33);
  uint64_t v110 = (char *)&v84 - v36;
  uint64_t v116 = (uint64_t)v113;
  char v117 = v114;
  uint64_t v118 = v115;
  sub_261B8E278();
  sub_261B8E718();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  uint64_t v37 = v99;
  sub_261B8DB18();
  uint64_t v126 = v21;
  uint64_t v127 = v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = v93;
  sub_261B8E678();
  v100[1](v37, v101);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, OpaqueTypeMetadata2);
  uint64_t v40 = sub_2619F8AB8(&qword_26A9444E8, &qword_26A944498);
  v125[7] = OpaqueTypeConformance2;
  v125[8] = v40;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = sub_2619F8AB8(&qword_26A9444F0, &qword_26A9444A0);
  v125[5] = v41;
  v125[6] = v42;
  uint64_t v43 = swift_getWitnessTable();
  sub_261B8E5C8();
  uint64_t v44 = v30;
  unsigned int v45 = v104;
  (*(void (**)(char *, uint64_t))(v98 + 8))(v39, v44);
  uint64_t v46 = sub_2619F8AB8(&qword_26A9444F8, &qword_26A9444A8);
  v125[3] = v43;
  v125[4] = v46;
  char v99 = (char *)swift_getWitnessTable();
  sub_261A8FE78(v35, v32);
  uint64_t v47 = v109 + 8;
  int v48 = *(void (**)(void, uint64_t))(v109 + 8);
  char v100 = v35;
  uint64_t v101 = v32;
  v48(v35, v32);
  uint64_t v49 = sub_261B8DBE8();
  uint64_t v50 = (uint64_t)v103;
  *uint64_t v103 = v49;
  *(void *)(v50 + 8) = 0;
  *(unsigned char *)(v50 + 16) = 1;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944500);
  sub_261A30798(v115, (uint64_t)v113, (uint64_t)v114, v50 + *(int *)(v51 + 44));
  LOBYTE(OpaqueTypeConformance2) = sub_261B8DFA8();
  uint64_t v52 = v111;
  sub_2619F86F0(v50, v111, &qword_26A9444D8);
  uint64_t v53 = v52 + *(int *)(v112 + 36);
  *(unsigned char *)uint64_t v53 = OpaqueTypeConformance2;
  *(_OWORD *)(v53 + 8) = xmmword_261B94540;
  *(_OWORD *)(v53 + 24) = xmmword_261B94540;
  *(unsigned char *)(v53 + 40) = 0;
  sub_2619F8754(v50, &qword_26A9444D8);
  uint64_t v54 = v105;
  char v55 = (void (*)(char *, void, uint64_t))v105[13];
  uint64_t v56 = v102;
  uint64_t v57 = v106;
  v55(v102, *MEMORY[0x263F18D48], v106);
  v55(v45, *MEMORY[0x263F18D10], v57);
  sub_261A3329C(&qword_26A944508, MEMORY[0x263F18D80]);
  uint64_t v58 = v56;
  uint64_t result = sub_261B8F088();
  if (result)
  {
    uint64_t v115 = v47;
    uint64_t v60 = v107;
    uint64_t v61 = v85;
    uint64_t v62 = (uint64_t)&v85[*(int *)(v107 + 48)];
    char v63 = (void (*)(char *, char *, uint64_t))v54[4];
    v63(v85, v58, v57);
    uint64_t v113 = (char *)v62;
    v63((char *)v62, v45, v57);
    uint64_t v64 = v88;
    uint64_t v65 = &v88[*(int *)(v60 + 48)];
    unint64_t v114 = v48;
    uint64_t v66 = (void (*)(char *, char *, uint64_t))v54[2];
    v66(v88, v61, v57);
    v66(v65, (char *)v62, v57);
    uint64_t v67 = (uint64_t)v84;
    v63(v84, v64, v57);
    uint64_t v68 = (void (*)(char *, uint64_t))v54[1];
    v68(v65, v57);
    char v69 = &v64[*(int *)(v107 + 48)];
    v63(v64, v61, v57);
    v63(v69, v113, v57);
    v63((char *)(v67 + *(int *)(v108 + 36)), v69, v57);
    v68(v64, v57);
    uint64_t v70 = v86;
    sub_2619FB7EC(v67, v86, &qword_26A9444D0);
    uint64_t v71 = sub_261A33C54(&qword_26A944510, &qword_26A9444E0, &qword_26A944518, &qword_26A9444D8);
    uint64_t v72 = sub_2619F8AB8(&qword_26A944520, &qword_26A9444D0);
    uint64_t v73 = v89;
    uint64_t v74 = v112;
    uint64_t v75 = v111;
    sub_261B8E5E8();
    sub_2619F8754(v70, &qword_26A9444D0);
    sub_2619F8754(v75, &qword_26A9444E0);
    uint64_t v76 = v90;
    char v77 = v87;
    uint64_t v78 = v91;
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v87, v73, v91);
    uint64_t v79 = v100;
    char v80 = v110;
    uint64_t v81 = v101;
    (*(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v109 + 16))(v100, v110, v101);
    uint64_t v123 = 0;
    char v124 = 1;
    v125[0] = v79;
    v125[1] = &v123;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v77, v78);
    v125[2] = v73;
    v122[0] = v81;
    v122[1] = MEMORY[0x263F1B6B0];
    v122[2] = v78;
    uint64_t v119 = v99;
    uint64_t v120 = MEMORY[0x263F1B698];
    uint64_t v126 = v74;
    uint64_t v127 = v108;
    uint64_t v128 = v71;
    uint64_t v129 = v72;
    uint64_t v121 = swift_getOpaqueTypeConformance2();
    sub_261A2CEA4((uint64_t)v125, 3uLL, (uint64_t)v122);
    uint64_t v82 = *(void (**)(char *, uint64_t))(v76 + 8);
    v82(v77, v78);
    uint64_t v83 = (uint64_t (*)(void, uint64_t))v114;
    v114(v80, v81);
    v82(v73, v78);
    return v83(v79, v81);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_261A2E528@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  char v124 = a3;
  uint64_t v121 = a4;
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944190);
  MEMORY[0x270FA5388](v100);
  uint64_t v102 = (uint64_t)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_261B8D748();
  MEMORY[0x270FA5388](v98);
  uint64_t v101 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_261B8E928();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v95 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944608);
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  char v99 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944590);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v103 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944490);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v109 = (uint64_t)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v105 = (uint64_t)&v93 - v15;
  uint64_t v123 = a2;
  uint64_t v16 = sub_261B8D688();
  uint64_t v122 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v110 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v111 = (char *)&v93 - v19;
  uint64_t v20 = type metadata accessor for WorkoutConfigurationViewIOS();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v93 - v22;
  uint64_t v106 = v16;
  uint64_t v104 = v12;
  swift_getTupleTypeMetadata2();
  uint64_t v116 = sub_261B8ECE8();
  uint64_t v113 = sub_261B8F6D8();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v113);
  char v117 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v115 = (char *)&v93 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944610);
  MEMORY[0x270FA5388](v27);
  unsigned int v29 = (char *)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944488);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v119 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v93 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v93 - v37;
  sub_261A2F3D0(a1, (uint64_t)v123, (uint64_t)v124, (uint64_t)v29);
  sub_261A33DE8(&qword_26A944618, &qword_26A944610, (void (*)(void))sub_261A33BB8);
  sub_261B8EC18();
  uint64_t v120 = v31;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  uint64_t v118 = v38;
  uint64_t v114 = v30;
  v39(v38, v36, v30);
  LODWORD(v12) = sub_261A2D068();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a1, v20);
  if (v12)
  {
    int v40 = sub_261A2D068();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    if (v40 != 4)
    {
      uint64_t v41 = v117;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v117, 1, 1, v116);
      swift_getWitnessTable();
      uint64_t v42 = v112;
      uint64_t v43 = v115;
      uint64_t v44 = v113;
      uint64_t v123 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
      v123(v115, v41, v113);
      unsigned int v45 = v41;
      char v124 = *(void (**)(char *, uint64_t))(v42 + 8);
      v124(v41, v44);
      uint64_t v46 = v114;
      goto LABEL_15;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
  LOBYTE(v132) = 1;
  uint64_t v47 = v110;
  int v48 = v124;
  MEMORY[0x263E4C680](&v132, v123, &type metadata for ListRowBackgroundViewModifier, v124);
  unint64_t v49 = sub_261A33D94();
  uint64_t v125 = v48;
  unint64_t v126 = v49;
  uint64_t v50 = v106;
  uint64_t WitnessTable = (void (*)(char *, uint64_t))swift_getWitnessTable();
  uint64_t v52 = v111;
  char v124 = WitnessTable;
  sub_261A8FE78(v47, v50);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v122 + 8);
  v53(v47, v50);
  id v54 = v103;
  sub_261B8BAC8();
  uint64_t v55 = sub_261B8AFF8();
  if ((*(unsigned int (**)(id, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v54, 1, v55))
  {
    sub_2619F8754((uint64_t)v54, &qword_26A944590);
    uint64_t v56 = 1;
    uint64_t v57 = v117;
    uint64_t v58 = v113;
    uint64_t v59 = v108;
    uint64_t v60 = v105;
  }
  else
  {
    uint64_t v61 = sub_261B8AFE8();
    unint64_t v63 = v62;
    sub_2619F8754((uint64_t)v54, &qword_26A944590);
    uint64_t v58 = v113;
    uint64_t v59 = v108;
    if (v63 >> 60 == 15)
    {
      uint64_t v56 = 1;
      uint64_t v57 = v117;
      uint64_t v60 = v105;
    }
    else
    {
      id v64 = objc_allocWithZone(MEMORY[0x263F827E8]);
      sub_261A34058(v61, v63);
      uint64_t v65 = (void *)sub_261B8AC08();
      id v66 = objc_msgSend(v64, sel_initWithData_, v65);
      sub_261A340B0(v61, v63);

      if (v66)
      {
        uint64_t v103 = (char *)v66;
        sub_261B8E908();
        uint64_t v67 = *MEMORY[0x263F1B4B8];
        uint64_t v68 = v96;
        char v69 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 104);
        uint64_t v94 = v61;
        uint64_t v70 = v95;
        uint64_t v71 = v97;
        v69(v95, v67, v97);
        uint64_t v123 = (void (*)(char *, char *, uint64_t))sub_261B8E988();
        swift_release();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v71);
        uint64_t v132 = sub_261B8E888();
        uint64_t v72 = sub_261B8EB28();
        uint64_t v73 = v101;
        uint64_t v74 = &v101[*(int *)(v98 + 20)];
        uint64_t v75 = *MEMORY[0x263F19860];
        uint64_t v76 = sub_261B8DBB8();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 104))(v74, v75, v76);
        __asm { FMOV            V0.2D, #10.0 }
        *uint64_t v73 = _Q0;
        uint64_t v82 = v102;
        sub_261A1396C((uint64_t)v73, v102);
        *(_WORD *)(v82 + *(int *)(v100 + 36)) = 256;
        uint64_t v83 = v99;
        sub_2619F86F0(v82, (uint64_t)&v99[*(int *)(v59 + 36)], &qword_26A944190);
        *(void *)uint64_t v83 = v123;
        *((void *)v83 + 1) = 0;
        *((_WORD *)v83 + 8) = 257;
        *((void *)v83 + 3) = v72;
        *((_OWORD *)v83 + 2) = 0u;
        *((_OWORD *)v83 + 3) = 0u;
        v83[64] = 0;
        swift_retain();
        swift_retain();
        sub_2619F8754(v82, &qword_26A944190);
        sub_261A139D0((uint64_t)v73);

        sub_261A340B0(v94, v63);
        swift_release();
        swift_release();
        uint64_t v84 = (uint64_t)v83;
        uint64_t v60 = v105;
        sub_2619FB7EC(v84, v105, &qword_26A944608);
        uint64_t v56 = 0;
        uint64_t v57 = v117;
      }
      else
      {
        sub_261A340B0(v61, v63);
        uint64_t v56 = 1;
        uint64_t v57 = v117;
        uint64_t v60 = v105;
      }
      uint64_t v47 = v110;
    }
    uint64_t v52 = v111;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v60, v56, 1, v59);
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v47, v52, v50);
  uint64_t v132 = (uint64_t)v47;
  uint64_t v85 = v109;
  sub_2619F86F0(v60, v109, &qword_26A944490);
  uint64_t v133 = v85;
  uint64_t v130 = v50;
  uint64_t v131 = v104;
  uint64_t v128 = (void (*)(void, void))v124;
  uint64_t v129 = sub_261A33DE8(&qword_26A944660, &qword_26A944490, (void (*)(void))sub_261A33E60);
  sub_261A2CEA4((uint64_t)&v132, 2uLL, (uint64_t)&v130);
  sub_2619F8754(v60, &qword_26A944490);
  v53(v52, v50);
  sub_2619F8754(v85, &qword_26A944490);
  v53(v47, v50);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v57, 0, 1, v116);
  swift_getWitnessTable();
  uint64_t v86 = v112;
  uint64_t v43 = v115;
  uint64_t v123 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
  v123(v115, v57, v58);
  unsigned int v45 = v57;
  char v124 = *(void (**)(char *, uint64_t))(v86 + 8);
  v124(v57, v58);
  uint64_t v46 = v114;
  uint64_t v44 = v58;
LABEL_15:
  char v88 = v119;
  uint64_t v87 = v120;
  uint64_t v89 = v118;
  (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v119, v118, v46);
  uint64_t v132 = (uint64_t)v88;
  v123(v45, v43, v44);
  uint64_t v133 = (uint64_t)v45;
  uint64_t v130 = v46;
  uint64_t v131 = v44;
  uint64_t v128 = (void (*)(void, void))sub_261A33CF0();
  uint64_t v127 = swift_getWitnessTable();
  uint64_t v129 = swift_getWitnessTable();
  sub_261A2CEA4((uint64_t)&v132, 2uLL, (uint64_t)&v130);
  uint64_t v90 = v124;
  v124(v43, v44);
  uint64_t v91 = *(void (**)(char *, uint64_t))(v87 + 8);
  v91(v89, v46);
  v90(v45, v44);
  return ((uint64_t (*)(char *, uint64_t))v91)(v88, v46);
}

uint64_t sub_261A2F3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v52 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944648);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944638);
  MEMORY[0x270FA5388](v49);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944628);
  uint64_t v50 = *(void *)(v12 - 8);
  uint64_t v51 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v49 - v16;
  uint64_t v18 = type metadata accessor for WorkoutConfigurationViewIOS();
  char v19 = sub_261A2D068();
  uint64_t v20 = sub_261B5226C(*(void *)(a1 + *(int *)(v18 + 40)), *(void **)(a1 + *(int *)(v18 + 44)), v19);
  if (v21)
  {
    uint64_t v22 = v20;
    uint64_t v23 = v21;
    *(void *)uint64_t v9 = sub_261B8DBE8();
    *((void *)v9 + 1) = 0;
    unsigned char v9[16] = 0;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446B0);
    sub_261A2F760(v22, v23, a1, a2, a3, (uint64_t)&v9[*(int *)(v24 + 44)]);
    swift_bridgeObjectRelease();
    LOBYTE(v23) = sub_261B8DFB8();
    sub_261B8D358();
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    sub_2619F86F0((uint64_t)v9, (uint64_t)v11, &qword_26A944648);
    uint64_t v33 = &v11[*(int *)(v49 + 36)];
    char *v33 = v23;
    *((void *)v33 + 1) = v26;
    *((void *)v33 + 2) = v28;
    *((void *)v33 + 3) = v30;
    *((void *)v33 + 4) = v32;
    v33[40] = 0;
    sub_2619F8754((uint64_t)v9, &qword_26A944648);
    LOBYTE(v23) = sub_261B8DFC8();
    sub_261A2D068();
    sub_261B8D358();
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    sub_2619F86F0((uint64_t)v11, (uint64_t)v15, &qword_26A944638);
    uint64_t v42 = v51;
    uint64_t v43 = &v15[*(int *)(v51 + 36)];
    *uint64_t v43 = v23;
    *((void *)v43 + 1) = v35;
    *((void *)v43 + 2) = v37;
    *((void *)v43 + 3) = v39;
    *((void *)v43 + 4) = v41;
    v43[40] = 0;
    sub_2619F8754((uint64_t)v11, &qword_26A944638);
    sub_2619FB7EC((uint64_t)v15, (uint64_t)v17, &qword_26A944628);
    uint64_t v44 = v52;
    sub_2619FB7EC((uint64_t)v17, v52, &qword_26A944628);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v44, 0, 1, v42);
  }
  else
  {
    uint64_t v46 = v51;
    uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56);
    uint64_t v48 = v52;
    return v47(v48, 1, 1, v46);
  }
}

uint64_t sub_261A2F760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v154 = a5;
  uint64_t v153 = a4;
  uint64_t v169 = a3;
  uint64_t v160 = a6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446B8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v161 = (uint64_t)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v159 = (char *)&v142 - v11;
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446C0);
  MEMORY[0x270FA5388](v143);
  uint64_t v145 = (uint64_t)&v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446C8);
  uint64_t v157 = *(void *)(v156 - 8);
  MEMORY[0x270FA5388](v156);
  uint64_t v144 = (uint64_t)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446D0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v158 = (uint64_t)&v142 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v155 = (uint64_t)&v142 - v17;
  uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446D8);
  MEMORY[0x270FA5388](v164);
  uint64_t v166 = (uint64_t *)((char *)&v142 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446E0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v165 = (char *)&v142 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_261B8E1F8();
  double v150 = *(void (***)(char *, void, uint64_t))(v151 - 8);
  MEMORY[0x270FA5388](v151);
  uint64_t v149 = (char *)&v142 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v142 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_261B8E258();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v142 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943388);
  MEMORY[0x270FA5388](v162);
  __int16 v148 = (char *)&v142 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943390);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v163 = (uint64_t)&v142 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446E8) - 8;
  uint64_t v32 = MEMORY[0x270FA5388](v152);
  uint64_t v168 = (uint64_t)&v142 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v167 = (uint64_t)&v142 - v34;
  uint64_t v170 = a1;
  uint64_t v171 = a2;
  unint64_t v35 = sub_261A029C4();
  swift_bridgeObjectRetain();
  unint64_t v142 = v35;
  uint64_t v36 = sub_261B8E3D8();
  uint64_t v146 = v37;
  uint64_t v147 = v38;
  char v40 = v39 & 1;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v28, *MEMORY[0x263F1A6B8], v25);
  uint64_t v41 = *MEMORY[0x263F1A608];
  uint64_t v42 = sub_261B8E118();
  uint64_t v43 = *(void *)(v42 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(v24, v41, v42);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v24, 0, 1, v42);
  sub_261B8E128();
  sub_261B8E1A8();
  sub_2619F8754((uint64_t)v24, &qword_26A943488);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  uint64_t v44 = v150;
  unsigned int v45 = v149;
  uint64_t v46 = v151;
  v150[13](v149, *MEMORY[0x263F1A680], v151);
  sub_261B8E218();
  swift_release();
  ((void (*)(char *, uint64_t))v44[1])(v45, v46);
  uint64_t v47 = v146;
  uint64_t v48 = sub_261B8E368();
  uint64_t v50 = v49;
  LOBYTE(v42) = v51;
  swift_release();
  LOBYTE(v26) = v42 & 1;
  char v52 = v40;
  uint64_t v53 = (uint64_t)v148;
  sub_261A02A18(v36, v47, v52);
  swift_bridgeObjectRelease();
  sub_261B8E898();
  uint64_t v54 = sub_261B8E318();
  uint64_t v56 = v55;
  LOBYTE(v36) = v57;
  uint64_t v59 = v58;
  swift_release();
  LOBYTE(v47) = v36 & 1;
  sub_261A02A18(v48, v50, v26);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v61 = sub_261B8E348();
  uint64_t v62 = *(void *)(v61 - 8);
  unint64_t v63 = *(void (***)(char *, void, uint64_t))(v62 + 56);
  uint64_t v64 = (uint64_t)v165;
  uint64_t v151 = v61;
  double v150 = v63;
  uint64_t v149 = (char *)(v62 + 56);
  ((void (*)(char *, uint64_t, uint64_t))v63)(v165, 1, 1);
  uint64_t v65 = swift_getKeyPath();
  id v66 = v166;
  sub_2619F86F0(v64, (uint64_t)v166 + *(int *)(v164 + 28), &qword_26A9446E0);
  *id v66 = v65;
  sub_2619F86F0((uint64_t)v66, v53 + *(int *)(v162 + 36), &qword_26A9446D8);
  *(void *)uint64_t v53 = v54;
  *(void *)(v53 + 8) = v56;
  *(unsigned char *)(v53 + 16) = v47;
  *(void *)(v53 + 24) = v59;
  *(void *)(v53 + 32) = KeyPath;
  *(unsigned char *)(v53 + 40) = 1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_261A001D0(v54, v56, v47);
  sub_2619F8754((uint64_t)v66, &qword_26A9446D8);
  sub_2619F8754(v64, &qword_26A9446E0);
  sub_261A02A18(v54, v56, v47);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v67 = sub_261B8EC98();
  uint64_t v68 = v163;
  sub_2619FEADC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v163, 0.0, 1, 0.0, 1, v67, v69);
  sub_2619F8754(v53, &qword_26A943388);
  uint64_t v70 = v168;
  sub_2619F86F0(v68, v168, &qword_26A943390);
  *(_WORD *)(v70 + *(int *)(v152 + 44)) = 256;
  sub_2619F8754(v68, &qword_26A943390);
  sub_2619FB7EC(v70, v167, &qword_26A9446E8);
  uint64_t v71 = type metadata accessor for WorkoutConfigurationViewIOS();
  char v72 = sub_261A2D068();
  uint64_t v73 = sub_261B52708(v72);
  if (v74)
  {
    uint64_t v170 = v73;
    uint64_t v171 = v74;
    uint64_t v75 = sub_261B8E3D8();
    uint64_t v154 = v71;
    uint64_t v76 = v75;
    uint64_t v78 = v77;
    char v80 = v79 & 1;
    sub_261B8E0D8();
    uint64_t v81 = sub_261B8E368();
    uint64_t v83 = v82;
    char v85 = v84;
    swift_release();
    sub_261A02A18(v76, v78, v80);
    swift_bridgeObjectRelease();
    sub_261B8E858();
    uint64_t v86 = sub_261B8E318();
    uint64_t v88 = v87;
    char v90 = v89;
    uint64_t v92 = v91;
    swift_release();
    char v93 = v90 & 1;
    sub_261A02A18(v81, v83, v85 & 1);
    swift_bridgeObjectRelease();
    uint64_t v94 = swift_getKeyPath();
    uint64_t v95 = (uint64_t)v165;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v150)(v165, 1, 1, v151);
    uint64_t v96 = swift_getKeyPath();
    uint64_t v97 = v166;
    sub_2619F86F0(v95, (uint64_t)v166 + *(int *)(v164 + 28), &qword_26A9446E0);
    *uint64_t v97 = v96;
    sub_2619F86F0((uint64_t)v97, v53 + *(int *)(v162 + 36), &qword_26A9446D8);
    *(void *)uint64_t v53 = v86;
    *(void *)(v53 + 8) = v88;
    *(unsigned char *)(v53 + 16) = v93;
    *(void *)(v53 + 24) = v92;
    *(void *)(v53 + 32) = v94;
    *(unsigned char *)(v53 + 40) = 1;
    sub_261A001D0(v86, v88, v93);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2619F8754((uint64_t)v97, &qword_26A9446D8);
    sub_2619F8754(v95, &qword_26A9446E0);
    sub_261A02A18(v86, v88, v93);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v98 = sub_261B8EC98();
    uint64_t v99 = v163;
    sub_2619FEADC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v163, 0.0, 1, 0.0, 1, v98, v100);
    sub_2619F8754(v53, &qword_26A943388);
    LOBYTE(v92) = sub_261B8DFB8();
    sub_261B8D358();
    uint64_t v102 = v101;
    uint64_t v104 = v103;
    uint64_t v106 = v105;
    uint64_t v108 = v107;
    uint64_t v109 = v145;
    sub_2619F86F0(v99, v145, &qword_26A943390);
    uint64_t v110 = v109 + *(int *)(v143 + 36);
    *(unsigned char *)uint64_t v110 = v92;
    *(void *)(v110 + 8) = v102;
    *(void *)(v110 + 16) = v104;
    *(void *)(v110 + 24) = v106;
    *(void *)(v110 + 32) = v108;
    *(unsigned char *)(v110 + 40) = 0;
    sub_2619F8754(v99, &qword_26A943390);
    LOBYTE(v92) = sub_261B8DFC8();
    sub_261B8D358();
    uint64_t v112 = v111;
    uint64_t v114 = v113;
    uint64_t v116 = v115;
    uint64_t v118 = v117;
    uint64_t v119 = v144;
    sub_2619F86F0(v109, v144, &qword_26A9446C0);
    uint64_t v120 = v156;
    uint64_t v121 = v119 + *(int *)(v156 + 36);
    *(unsigned char *)uint64_t v121 = v92;
    *(void *)(v121 + 8) = v112;
    *(void *)(v121 + 16) = v114;
    *(void *)(v121 + 24) = v116;
    *(void *)(v121 + 32) = v118;
    *(unsigned char *)(v121 + 40) = 0;
    sub_2619F8754(v109, &qword_26A9446C0);
    uint64_t v122 = v155;
    sub_2619FB7EC(v119, v155, &qword_26A9446C8);
    uint64_t v123 = 0;
    uint64_t v124 = v120;
  }
  else
  {
    uint64_t v122 = v155;
    uint64_t v124 = v156;
    uint64_t v123 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v157 + 56))(v122, v123, 1, v124);
  char v125 = sub_261A2D068();
  unint64_t v126 = v159;
  if (v125 == 1)
  {
    type metadata accessor for WorkoutUIBundlePlaceholder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v128 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v129 = sub_261B8E998();
    sub_261B8EC98();
    sub_261B8D4D8();
    uint64_t v170 = v129;
    uint64_t v171 = v176;
    char v172 = v177;
    uint64_t v173 = v178;
    char v174 = v179;
    long long v175 = v180;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944700);
    sub_261A34144(&qword_26A944708, &qword_26A944700);
    sub_261B8E588();
    swift_release();
    uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446F0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v126, 0, 1, v130);
  }
  else
  {
    uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 56))(v126, 1, 1, v131);
  }
  uint64_t v132 = v167;
  uint64_t v133 = v168;
  sub_2619F86F0(v167, v168, &qword_26A9446E8);
  uint64_t v134 = v158;
  sub_2619F86F0(v122, v158, &qword_26A9446D0);
  uint64_t v135 = (uint64_t)v126;
  uint64_t v136 = (uint64_t)v126;
  uint64_t v137 = v161;
  sub_2619F86F0(v135, v161, &qword_26A9446B8);
  uint64_t v138 = v160;
  sub_2619F86F0(v133, v160, &qword_26A9446E8);
  uint64_t v139 = v122;
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446F8);
  sub_2619F86F0(v134, v138 + *(int *)(v140 + 48), &qword_26A9446D0);
  sub_2619F86F0(v137, v138 + *(int *)(v140 + 64), &qword_26A9446B8);
  sub_2619F8754(v136, &qword_26A9446B8);
  sub_2619F8754(v139, &qword_26A9446D0);
  sub_2619F8754(v132, &qword_26A9446E8);
  sub_2619F8754(v137, &qword_26A9446B8);
  sub_2619F8754(v134, &qword_26A9446D0);
  return sub_2619F8754(v133, &qword_26A9446E8);
}

uint64_t sub_261A30798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v104 = a4;
  uint64_t v7 = sub_261B8D398();
  uint64_t v100 = *(void *)(v7 - 8);
  uint64_t v101 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v99 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8D798();
  uint64_t v97 = *(void *)(v9 - 8);
  uint64_t v98 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v96 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_261B8DEF8();
  uint64_t v88 = *(void *)(v11 - 8);
  uint64_t v89 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v86 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944528);
  MEMORY[0x270FA5388](v84);
  uint64_t v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944530);
  uint64_t v92 = *(void *)(v15 - 8);
  uint64_t v93 = v15;
  MEMORY[0x270FA5388](v15);
  char v90 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944538);
  MEMORY[0x270FA5388](v83);
  uint64_t v95 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944540);
  MEMORY[0x270FA5388](v87);
  uint64_t v102 = (uint64_t)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944548);
  MEMORY[0x270FA5388](v94);
  uint64_t v91 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944550);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944558);
  MEMORY[0x270FA5388](v23);
  char v85 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944560);
  uint64_t v103 = *(void *)(v25 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v82 = (char *)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v81 = (uint64_t)&v77 - v28;
  type metadata accessor for WorkoutConfigurationViewIOS();
  if (sub_261A2D068())
  {
    uint64_t v29 = v104;
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56);
    return v30(v29, 1, 1, v25);
  }
  else
  {
    uint64_t v78 = v20;
    uint64_t v79 = v23;
    char v80 = v22;
    uint64_t v77 = a1;
    sub_261A3118C(a1, a2, a3, (uint64_t)v14);
    uint64_t v32 = v86;
    sub_261B8DEE8();
    sub_261A33204();
    sub_261A3329C((unint64_t *)&qword_26A944188, MEMORY[0x263F1A3B8]);
    uint64_t v33 = v89;
    uint64_t v34 = v90;
    sub_261B8E518();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v32, v33);
    sub_2619F8754((uint64_t)v14, &qword_26A944528);
    unint64_t v35 = v96;
    sub_261B8D788();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v37 = (uint64_t)v95;
    uint64_t v38 = (uint64_t *)&v95[*(int *)(v83 + 36)];
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B08);
    uint64_t v41 = v97;
    uint64_t v40 = v98;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))((char *)v38 + *(int *)(v39 + 28), v35, v98);
    uint64_t *v38 = KeyPath;
    uint64_t v43 = v92;
    uint64_t v42 = v93;
    (*(void (**)(uint64_t, char *, uint64_t))(v92 + 16))(v37, v34, v93);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v40);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v42);
    unsigned int v45 = v99;
    uint64_t v44 = v100;
    uint64_t v46 = v101;
    (*(void (**)(char *, void, uint64_t))(v100 + 104))(v99, *MEMORY[0x263F18558], v101);
    uint64_t v47 = swift_getKeyPath();
    uint64_t v48 = v102;
    uint64_t v49 = (uint64_t *)(v102 + *(int *)(v87 + 36));
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944580);
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))((char *)v49 + *(int *)(v50 + 28), v45, v46);
    *uint64_t v49 = v47;
    sub_2619F86F0(v37, v48, &qword_26A944538);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    sub_2619F8754(v37, &qword_26A944538);
    char v51 = sub_261A2D068();
    uint64_t v101 = v25;
    uint64_t v52 = (uint64_t)v85;
    uint64_t v53 = (uint64_t)v82;
    uint64_t v54 = (uint64_t)v91;
    uint64_t v55 = v94;
    if (v51 == 4) {
      uint64_t v56 = sub_261B8E858();
    }
    else {
      uint64_t v56 = sub_261B8E878();
    }
    uint64_t v57 = v56;
    uint64_t v58 = swift_getKeyPath();
    uint64_t v59 = v102;
    sub_2619F86F0(v102, v54, &qword_26A944540);
    uint64_t v60 = (uint64_t *)(v54 + *(int *)(v55 + 36));
    *uint64_t v60 = v58;
    v60[1] = v57;
    sub_2619F8754(v59, &qword_26A944540);
    uint64_t v61 = WorkoutConfiguration.displayColor.getter();
    uint64_t v62 = MEMORY[0x263E4C7B0](v61);
    uint64_t v63 = swift_getKeyPath();
    uint64_t v105 = v62;
    swift_retain();
    uint64_t v64 = sub_261B8D4E8();
    uint64_t v65 = (uint64_t)v80;
    sub_2619F86F0(v54, (uint64_t)v80, &qword_26A944548);
    swift_release();
    id v66 = (uint64_t *)(v65 + *(int *)(v78 + 36));
    *id v66 = v63;
    v66[1] = v64;
    sub_2619F8754(v54, &qword_26A944548);
    uint64_t v67 = sub_261B8E248();
    uint64_t v68 = swift_getKeyPath();
    sub_2619F86F0(v65, v52, &qword_26A944550);
    uint64_t v69 = (uint64_t *)(v52 + *(int *)(v79 + 36));
    uint64_t *v69 = v68;
    v69[1] = v67;
    sub_2619F8754(v65, &qword_26A944550);
    LOBYTE(v64) = sub_261A2D068() == 4;
    uint64_t v70 = swift_getKeyPath();
    uint64_t v71 = swift_allocObject();
    *(unsigned char *)(v71 + 16) = v64;
    sub_2619F86F0(v52, v53, &qword_26A944558);
    uint64_t v72 = v101;
    uint64_t v73 = (uint64_t *)(v53 + *(int *)(v101 + 36));
    *uint64_t v73 = v70;
    v73[1] = (uint64_t)sub_261A33628;
    v73[2] = v71;
    sub_2619F8754(v52, &qword_26A944558);
    uint64_t v74 = v81;
    sub_2619FB7EC(v53, v81, &qword_26A944560);
    uint64_t v75 = v74;
    uint64_t v76 = v104;
    sub_2619FB7EC(v75, v104, &qword_26A944560);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v76, 0, 1, v72);
  }
}

void *sub_261A3118C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v59 = a4;
  uint64_t v7 = type metadata accessor for WorkoutConfigurationViewIOS();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v56 = (char *)&v55 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944588);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944590);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void **)(a1 + *(int *)(v7 + 40));
  char v20 = sub_261B8BA78();
  uint64_t v60 = v15;
  uint64_t v61 = v13;
  uint64_t v57 = a2;
  uint64_t v58 = a3;
  if (v20)
  {
    uint64_t v21 = v7;
    uint64_t v22 = (uint64_t *)(a1 + *(int *)(v7 + 48));
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v62 = v19;
    uint64_t v63 = v23;
    uint64_t v64 = v24;
    char v65 = 0;
    sub_261A33B08();
    sub_261A33B5C();
    id v25 = v19;
    swift_retain();
    sub_261B8DD68();
    uint64_t v26 = v66;
    uint64_t v27 = v67;
    uint64_t v28 = v68;
    unsigned __int8 v29 = v69;
    uint64_t v30 = a1;
  }
  else
  {
    uint64_t v21 = v7;
    uint64_t v31 = sub_261B8BA58();
    swift_release();
    if (v31)
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      unsigned __int8 v29 = -1;
      uint64_t v30 = a1;
    }
    else
    {
      sub_261B8BAC8();
      uint64_t v32 = sub_261B8AFF8();
      int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v18, 1, v32);
      sub_2619F8754((uint64_t)v18, &qword_26A944590);
      uint64_t v30 = a1;
      if (v33 == 1)
      {
        uint64_t v34 = (uint64_t *)(a1 + *(int *)(v21 + 48));
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v62 = v19;
        uint64_t v63 = v35;
        uint64_t v64 = v36;
        char v65 = 1;
        sub_261A33B08();
        sub_261A33B5C();
        id v37 = v19;
        swift_retain();
        sub_261B8DD68();
        uint64_t v26 = v66;
        uint64_t v27 = v67;
        uint64_t v28 = v68;
        unsigned __int8 v29 = v69;
      }
      else
      {
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        unsigned __int8 v29 = -1;
      }
    }
  }
  uint64_t v69 = &type metadata for WorkoutUIFeatures;
  unint64_t v70 = sub_261A33640();
  char v38 = sub_261B8C6E8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  if ((v38 & 1) != 0 && (id v39 = sub_261B51E60(), v40))
  {
    uint64_t v41 = v40;
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v43 = v56;
    id v55 = v39;
    v42(v56, v30, v21);
    unint64_t v44 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v45 = swift_allocObject();
    uint64_t v46 = v58;
    *(void *)(v45 + 16) = v57;
    *(void *)(v45 + 24) = v46;
    uint64_t v47 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(v45 + v44, v43, v21);
    MEMORY[0x270FA5388](v47);
    *(&v55 - 2) = v55;
    *(&v55 - 1) = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9445B0);
    sub_261A3394C();
    uint64_t v48 = (uint64_t)v60;
    sub_261B8EA58();
    swift_bridgeObjectRelease();
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9445A0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
  }
  else
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9445A0);
    uint64_t v48 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v60, 1, 1, v50);
  }
  uint64_t v51 = (uint64_t)v61;
  uint64_t v52 = v59;
  sub_2619F86F0(v48, (uint64_t)v61, &qword_26A944588);
  *(void *)uint64_t v52 = v26;
  *(void *)(v52 + 8) = v27;
  *(void *)(v52 + 16) = v28;
  *(unsigned char *)(v52 + 24) = v29;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9445A8);
  sub_2619F86F0(v51, v52 + *(int *)(v53 + 48), &qword_26A944588);
  sub_261A33694(v26, v27, v28, v29);
  sub_2619F8754(v48, &qword_26A944588);
  sub_2619F8754(v51, &qword_26A944588);
  return sub_261A336E4(v26, v27, v28, v29);
}

double sub_261A316E8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_261B8E1F8();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  MEMORY[0x270FA5388](v2);
  id v39 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8E258();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v36 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8DB88();
  MEMORY[0x270FA5388](v9 - 8);
  sub_261B8DB78();
  sub_261B8DB68();
  sub_261B8DB58();
  sub_261B8DB68();
  sub_261B8DBA8();
  uint64_t v10 = sub_261B8E3B8();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v43 = v10;
  uint64_t v44 = v12;
  char v45 = v16;
  uint64_t v46 = v14;
  uint64_t v47 = KeyPath;
  char v48 = 1;
  sub_261B8EC98();
  sub_2619FEB38(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v42, 0.0, 1, 0.0, 1);
  sub_261A02A18(v10, v12, v16);
  swift_release();
  swift_bridgeObjectRelease();
  long long v55 = v42[6];
  long long v56 = v42[7];
  long long v57 = v42[8];
  long long v58 = v42[9];
  long long v51 = v42[2];
  long long v52 = v42[3];
  long long v53 = v42[4];
  long long v54 = v42[5];
  long long v49 = v42[0];
  long long v50 = v42[1];
  uint64_t v19 = v36;
  uint64_t v18 = v37;
  uint64_t v20 = v38;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, *MEMORY[0x263F1A6C8], v38);
  uint64_t v21 = *MEMORY[0x263F1A608];
  uint64_t v22 = sub_261B8E118();
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v6, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v6, 0, 1, v22);
  sub_261B8E158();
  sub_261B8E1A8();
  sub_2619F8754((uint64_t)v6, &qword_26A943488);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v20);
  id v25 = v39;
  uint64_t v24 = v40;
  uint64_t v26 = v41;
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v39, *MEMORY[0x263F1A680], v41);
  uint64_t v27 = sub_261B8E218();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  uint64_t v28 = swift_getKeyPath();
  long long v29 = v56;
  *(_OWORD *)(a1 + 96) = v55;
  *(_OWORD *)(a1 + 112) = v29;
  long long v30 = v58;
  *(_OWORD *)(a1 + 128) = v57;
  *(_OWORD *)(a1 + 144) = v30;
  long long v31 = v52;
  *(_OWORD *)(a1 + 32) = v51;
  *(_OWORD *)(a1 + 48) = v31;
  long long v32 = v54;
  *(_OWORD *)(a1 + 64) = v53;
  *(_OWORD *)(a1 + 80) = v32;
  double result = *(double *)&v49;
  long long v34 = v50;
  *(_OWORD *)a1 = v49;
  *(_OWORD *)(a1 + 16) = v34;
  *(void *)(a1 + 160) = v28;
  *(void *)(a1 + 168) = v27;
  return result;
}

uint64_t sub_261A31BAC@<X0>(uint64_t a1@<X8>)
{
  return sub_261A2D624(*(void *)(v1 + 32), *(void *)(v1 + 16), *(void (**)(void, void))(v1 + 24), a1);
}

uint64_t sub_261A31BB8@<X0>(uint64_t a1@<X8>)
{
  return sub_261A2E528(*(void *)(v1 + 32), *(void (**)(char *, char *, uint64_t))(v1 + 16), *(void (**)(char *, uint64_t))(v1 + 24), a1);
}

uint64_t sub_261A31BC4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v125 = a2;
  uint64_t v126 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944710);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (_OWORD *)((char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944718);
  MEMORY[0x270FA5388](v115);
  uint64_t v118 = (uint64_t)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944720);
  MEMORY[0x270FA5388](v116);
  uint64_t v117 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944728);
  uint64_t v119 = *(void *)(v11 - 8);
  uint64_t v120 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v113 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v114 = (char *)&v107 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v121 = (char *)&v107 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v124 = (char *)&v107 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944730);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v122 = (char *)&v107 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v123 = (uint64_t)&v107 - v22;
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944738);
  MEMORY[0x270FA5388](v127);
  uint64_t v129 = (uint64_t)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944740);
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944748);
  uint64_t v130 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  id v128 = (char *)&v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_261B8BA78())
  {
    uint64_t v112 = v28;
    swift_getObjectType();
    uint64_t v30 = swift_conformsToProtocol2();
    if (v30) {
      uint64_t v31 = v30;
    }
    else {
      uint64_t v31 = 0;
    }
    if (v30) {
      long long v32 = a1;
    }
    else {
      long long v32 = 0;
    }
    if (v32)
    {
      int v33 = (void *)swift_allocObject();
      v33[2] = v32;
      v33[3] = v31;
      id v34 = v125;
      v33[4] = a1;
      v33[5] = v34;
      v33[6] = v126;
      sub_261A34898();
      id v125 = a1;
      swift_retain();
      sub_261B8EA58();
      (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v129, v27, v24);
      swift_storeEnumTagMultiPayload();
      sub_2619F8AB8(&qword_26A944760, &qword_26A944740);
      sub_2619F8AB8(&qword_26A944768, &qword_26A944710);
      uint64_t v35 = (uint64_t)v128;
      sub_261B8DD68();

      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    }
    else
    {
      uint64_t v109 = v24;
      uint64_t v110 = v6;
      uint64_t v111 = a4;
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v38 = (id)qword_26B416688;
      uint64_t v39 = sub_261B8AA48();
      uint64_t v41 = v40;

      *(void *)&long long v155 = v39;
      *((void *)&v155 + 1) = v41;
      sub_261A029C4();
      uint64_t v42 = sub_261B8E3D8();
      uint64_t v44 = v43;
      uint64_t v46 = v45;
      char v48 = v47 & 1;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v167 = v42;
      uint64_t v168 = v44;
      char v169 = v48;
      uint64_t v170 = v46;
      uint64_t v171 = KeyPath;
      char v172 = 1;
      sub_261B8EC98();
      sub_2619FEB38(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v155, 0.0, 1, 0.0, 1);
      sub_261A02A18(v42, v44, v48);
      swift_release();
      swift_bridgeObjectRelease();
      long long v151 = v161;
      long long v152 = v162;
      long long v153 = v163;
      long long v154 = v164;
      long long v147 = v157;
      long long v148 = v158;
      long long v149 = v159;
      long long v150 = v160;
      long long v145 = v155;
      long long v146 = v156;
      uint64_t v50 = sub_261B8E238();
      uint64_t v51 = swift_getKeyPath();
      uint64_t v52 = sub_261B8E8C8();
      uint64_t v53 = swift_getKeyPath();
      long long v161 = v151;
      long long v162 = v152;
      long long v163 = v153;
      long long v164 = v154;
      long long v157 = v147;
      long long v158 = v148;
      long long v159 = v149;
      long long v160 = v150;
      long long v155 = v145;
      long long v156 = v146;
      *(void *)&long long v165 = v51;
      *((void *)&v165 + 1) = v50;
      *(void *)&long long v166 = v53;
      *((void *)&v166 + 1) = v52;
      long long v54 = (void *)sub_261B8BA28();
      LODWORD(v51) = objc_msgSend(v54, sel_requiresLocationDisambiguation);

      if (v51)
      {
        long long v55 = (void *)swift_allocObject();
        uint64_t v108 = &v107;
        id v57 = v125;
        uint64_t v56 = v126;
        v55[2] = a1;
        v55[3] = v57;
        v55[4] = v56;
        MEMORY[0x270FA5388](v55);
        id v58 = a1;
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A9445C8);
        sub_261A339EC();
        uint64_t v59 = v124;
        sub_261B8EA58();
        uint64_t v60 = (void *)swift_allocObject();
        uint64_t v108 = &v107;
        v60[2] = v58;
        void v60[3] = v57;
        v60[4] = v56;
        MEMORY[0x270FA5388](v60);
        id v61 = v58;
        swift_retain();
        uint64_t v62 = v121;
        sub_261B8EA58();
        uint64_t v64 = v119;
        uint64_t v63 = v120;
        char v65 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
        id v66 = v114;
        v65(v114, v59, v120);
        uint64_t v67 = v113;
        v65(v113, v62, v63);
        uint64_t v68 = (uint64_t)v117;
        v65(v117, v66, v63);
        uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944770);
        v65((char *)(v68 + *(int *)(v69 + 48)), v67, v63);
        unint64_t v70 = *(void (**)(char *, uint64_t))(v64 + 8);
        v70(v67, v63);
        v70(v66, v63);
        sub_2619F86F0(v68, v118, &qword_26A944720);
        swift_storeEnumTagMultiPayload();
        sub_2619F8AB8(&qword_26A944778, &qword_26A944720);
        uint64_t v71 = (uint64_t)v122;
        sub_261B8DD68();
        sub_2619F8754(v68, &qword_26A944720);
        v70(v62, v63);
        v70(v124, v63);
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944750);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v71, 0, 1, v72);
        uint64_t v73 = v123;
        sub_2619FB7EC(v71, v123, &qword_26A944730);
        a4 = v111;
      }
      else
      {
        uint64_t v74 = (void *)sub_261B8BA28();
        unsigned int v75 = objc_msgSend(v74, sel_requiresSwimmingLocationDisambiguation);

        a4 = v111;
        if (v75)
        {
          uint64_t v76 = (void *)swift_allocObject();
          uint64_t v108 = &v107;
          id v77 = v125;
          uint64_t v78 = v126;
          v76[2] = a1;
          v76[3] = v77;
          v76[4] = v78;
          MEMORY[0x270FA5388](v76);
          id v79 = a1;
          swift_retain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A9445C8);
          sub_261A339EC();
          sub_261B8EA58();
          char v80 = (void *)swift_allocObject();
          uint64_t v108 = &v107;
          v80[2] = v79;
          v80[3] = v77;
          v80[4] = v78;
          MEMORY[0x270FA5388](v80);
          id v81 = v79;
          swift_retain();
          uint64_t v82 = v121;
          sub_261B8EA58();
          uint64_t v84 = v119;
          uint64_t v83 = v120;
          char v85 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
          uint64_t v86 = v114;
          v85(v114, v124, v120);
          uint64_t v87 = v113;
          v85(v113, v82, v83);
          uint64_t v88 = (uint64_t)v117;
          v85(v117, v86, v83);
          uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944770);
          v85((char *)(v88 + *(int *)(v89 + 48)), v87, v83);
          char v90 = *(void (**)(char *, uint64_t))(v84 + 8);
          v90(v87, v83);
          v90(v86, v83);
          sub_2619F86F0(v88, v118, &qword_26A944720);
          swift_storeEnumTagMultiPayload();
          sub_2619F8AB8(&qword_26A944778, &qword_26A944720);
          uint64_t v71 = (uint64_t)v122;
          sub_261B8DD68();
          sub_2619F8754(v88, &qword_26A944720);
          v90(v121, v83);
          v90(v124, v83);
          uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944750);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v71, 0, 1, v91);
          uint64_t v73 = v123;
          sub_2619FB7EC(v71, v123, &qword_26A944730);
        }
        else
        {
          uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944750);
          uint64_t v73 = v123;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v123, 1, 1, v92);
          uint64_t v71 = (uint64_t)v122;
        }
      }
      long long v139 = v163;
      long long v140 = v164;
      long long v141 = v165;
      long long v142 = v166;
      long long v135 = v159;
      long long v136 = v160;
      long long v137 = v161;
      long long v138 = v162;
      long long v131 = v155;
      long long v132 = v156;
      long long v133 = v157;
      long long v134 = v158;
      sub_2619F86F0(v73, v71, &qword_26A944730);
      long long v93 = v140;
      v143[8] = v139;
      v143[9] = v140;
      long long v94 = v141;
      long long v95 = v142;
      v143[10] = v141;
      v143[11] = v142;
      long long v96 = v135;
      long long v97 = v136;
      v143[4] = v135;
      v143[5] = v136;
      long long v98 = v137;
      long long v99 = v138;
      v143[6] = v137;
      v143[7] = v138;
      long long v100 = v131;
      long long v101 = v132;
      v143[0] = v131;
      v143[1] = v132;
      long long v102 = v133;
      long long v103 = v134;
      v143[2] = v133;
      v143[3] = v134;
      v8[8] = v139;
      v8[9] = v93;
      v8[10] = v94;
      v8[11] = v95;
      v8[4] = v96;
      v8[5] = v97;
      v8[6] = v98;
      v8[7] = v99;
      *uint64_t v8 = v100;
      v8[1] = v101;
      v8[2] = v102;
      v8[3] = v103;
      uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944758);
      sub_2619F86F0(v71, (uint64_t)v8 + *(int *)(v104 + 48), &qword_26A944730);
      sub_261A345C4((uint64_t)v143);
      sub_261A345C4((uint64_t)&v155);
      sub_2619F8754(v71, &qword_26A944730);
      v144[8] = v139;
      v144[9] = v140;
      v144[10] = v141;
      v144[11] = v142;
      v144[4] = v135;
      v144[5] = v136;
      v144[6] = v137;
      v144[7] = v138;
      v144[0] = v131;
      v144[1] = v132;
      v144[2] = v133;
      v144[3] = v134;
      sub_261A3464C((uint64_t)v144);
      sub_2619F86F0((uint64_t)v8, v129, &qword_26A944710);
      swift_storeEnumTagMultiPayload();
      sub_2619F8AB8(&qword_26A944760, &qword_26A944740);
      sub_2619F8AB8(&qword_26A944768, &qword_26A944710);
      uint64_t v105 = v128;
      sub_261B8DD68();
      uint64_t v106 = (uint64_t)v8;
      uint64_t v35 = (uint64_t)v105;
      sub_2619F8754(v106, &qword_26A944710);
      sub_2619F8754(v73, &qword_26A944730);
      sub_261A3464C((uint64_t)&v155);
    }
    sub_2619FB7EC(v35, a4, &qword_26A944748);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v130 + 56))(a4, 0, 1, v112);
  }
  else
  {
    uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56);
    return v36(a4, 1, 1, v28);
  }
}

void sub_261A32CE8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  v11[1] = a1;
  sub_261B8AE28();
  uint64_t v9 = sub_261B8AE38();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  sub_261B8C368();
  sub_2619F8754((uint64_t)v8, &qword_26B416BC8);
  if (v11[0])
  {
    id v10 = v11[0];
    a4();
  }
}

void sub_261A32E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *), uint64_t a7)
{
  uint64_t v20 = a7;
  uint64_t v21 = a6;
  uint64_t v7 = sub_261B8CE88();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8AE28();
  uint64_t v14 = sub_261B8AE38();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  uint64_t v15 = (void *)sub_261B8BA98();
  sub_2619F8754((uint64_t)v13, &qword_26B416BC8);
  if (v15)
  {
    v21(v15);
  }
  else
  {
    uint64_t v16 = v8;
    sub_261B8C628();
    uint64_t v17 = sub_261B8CE78();
    os_log_type_t v18 = sub_261B8F4B8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_2619F0000, v17, v18, "Unable to start workout for managed configuration, disambiguated workout configuration was nil", v19, 2u);
      MEMORY[0x263E4E970](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v7);
  }
}

double sub_261A33068@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = (void *)sub_261B8BA28();
  uint64_t v3 = (void *)sub_261B8F658();

  id v4 = objc_msgSend(v3, sel_localizedName);
  uint64_t v5 = sub_261B8F0F8();
  uint64_t v7 = v6;

  *(void *)&v20[0] = v5;
  *((void *)&v20[0] + 1) = v7;
  sub_261A029C4();
  uint64_t v8 = sub_261B8E3D8();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v21 = v8;
  uint64_t v22 = v9;
  char v23 = v11 & 1;
  uint64_t v24 = v13;
  uint64_t KeyPath = swift_getKeyPath();
  char v26 = 1;
  sub_261B8EC98();
  sub_2619FEB38(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v20, 0.0, 1, 0.0, 1);

  sub_261A02A18(v8, v10, v12);
  swift_release();
  swift_bridgeObjectRelease();
  long long v14 = v20[7];
  a1[6] = v20[6];
  a1[7] = v14;
  long long v15 = v20[9];
  a1[8] = v20[8];
  a1[9] = v15;
  long long v16 = v20[3];
  a1[2] = v20[2];
  a1[3] = v16;
  long long v17 = v20[5];
  a1[4] = v20[4];
  a1[5] = v17;
  double result = *(double *)v20;
  long long v19 = v20[1];
  *a1 = v20[0];
  a1[1] = v19;
  return result;
}

uint64_t sub_261A331F8@<X0>(uint64_t a1@<X8>)
{
  return sub_261A31BC4(*(void **)v1, *(void **)(v1 + 8), *(void *)(v1 + 16), a1);
}

unint64_t sub_261A33204()
{
  unint64_t result = qword_26A944568;
  if (!qword_26A944568)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944528);
    sub_2619F8AB8(&qword_26A944570, &qword_26A944578);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944568);
  }
  return result;
}

uint64_t sub_261A3329C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A332EC()
{
  return sub_261B8D9D8();
}

uint64_t sub_261A33310(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446E0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_2619F86F0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26A9446E0);
  return sub_261B8D9E8();
}

uint64_t sub_261A333A4()
{
  return sub_261B8D7E8();
}

uint64_t sub_261A333C8(uint64_t a1)
{
  uint64_t v2 = sub_261B8D398();
  MEMORY[0x270FA5388](v2);
  id v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return MEMORY[0x263E4B6C0](v4);
}

uint64_t sub_261A3349C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_261B8D9A8();
  *a1 = result;
  return result;
}

uint64_t sub_261A334C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_261B8D9A8();
  *a1 = result;
  return result;
}

uint64_t sub_261A334F4()
{
  return sub_261B8D9B8();
}

uint64_t sub_261A33520()
{
  return sub_261B8D9B8();
}

uint64_t sub_261A33554@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_261B8DA18();
  *a1 = result & 1;
  return result;
}

uint64_t sub_261A33584@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_261B8DA18();
  *a1 = result & 1;
  return result;
}

uint64_t sub_261A335B4()
{
  return sub_261B8DA28();
}

uint64_t sub_261A335DC()
{
  return sub_261B8DA28();
}

unsigned char *sub_261A33604(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_261A33618()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char *sub_261A33628(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

unint64_t sub_261A33640()
{
  unint64_t result = qword_26A944598;
  if (!qword_26A944598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944598);
  }
  return result;
}

void *sub_261A33694(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return (void *)sub_261A336AC(a1);
  }
  return a1;
}

uint64_t sub_261A336AC(void *a1)
{
  id v1 = a1;
  return swift_retain();
}

void *sub_261A336E4(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return (void *)sub_261A336FC(a1);
  }
  return a1;
}

uint64_t sub_261A336FC(void *a1)
{
  return swift_release();
}

uint64_t sub_261A33734()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for WorkoutConfigurationViewIOS() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(*(void *)v2 + 64);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  uint64_t v6 = v0 + v4 + v2[16];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_261B8D518();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, v4 + v5, v3 | 7);
}

uint64_t sub_261A338D4()
{
  uint64_t v1 = type metadata accessor for WorkoutConfigurationViewIOS();
  return (*(uint64_t (**)(void))(v0
                              + *(int *)(v1 + 52)
                              + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80))))();
}

double sub_261A33944@<D0>(uint64_t a1@<X8>)
{
  return sub_261A316E8(a1);
}

unint64_t sub_261A3394C()
{
  unint64_t result = qword_26A9445B8;
  if (!qword_26A9445B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9445B0);
    sub_261A339EC();
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9445B8);
  }
  return result;
}

unint64_t sub_261A339EC()
{
  unint64_t result = qword_26A9445C0;
  if (!qword_26A9445C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9445C8);
    sub_261A33A68();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9445C0);
  }
  return result;
}

unint64_t sub_261A33A68()
{
  unint64_t result = qword_26A9445D0;
  if (!qword_26A9445D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9445D8);
    sub_2619F8AB8(&qword_26A9445E0, &qword_26A9445E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9445D0);
  }
  return result;
}

unint64_t sub_261A33B08()
{
  unint64_t result = qword_26A9445F0;
  if (!qword_26A9445F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9445F0);
  }
  return result;
}

unint64_t sub_261A33B5C()
{
  unint64_t result = qword_26A9445F8;
  if (!qword_26A9445F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9445F8);
  }
  return result;
}

unint64_t sub_261A33BB8()
{
  unint64_t result = qword_26A944620;
  if (!qword_26A944620)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944628);
    sub_261A33C54(&qword_26A944630, &qword_26A944638, &qword_26A944640, &qword_26A944648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944620);
  }
  return result;
}

uint64_t sub_261A33C54(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_2619F8AB8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A33CF0()
{
  unint64_t result = qword_26A944650;
  if (!qword_26A944650)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944488);
    sub_261A33DE8(&qword_26A944618, &qword_26A944610, (void (*)(void))sub_261A33BB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944650);
  }
  return result;
}

unint64_t sub_261A33D94()
{
  unint64_t result = qword_26A944658;
  if (!qword_26A944658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944658);
  }
  return result;
}

uint64_t sub_261A33DE8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A33E60()
{
  unint64_t result = qword_26A944668;
  if (!qword_26A944668)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944608);
    sub_261A33F00();
    sub_2619F8AB8(&qword_26A9441C0, &qword_26A944190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944668);
  }
  return result;
}

unint64_t sub_261A33F00()
{
  unint64_t result = qword_26A944670;
  if (!qword_26A944670)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944678);
    sub_261A33FA0();
    sub_2619F8AB8(&qword_26A9432F8, &qword_26A943300);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944670);
  }
  return result;
}

unint64_t sub_261A33FA0()
{
  unint64_t result = qword_26A944680;
  if (!qword_26A944680)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944688);
    sub_261A34144((unint64_t *)&qword_26A944690, &qword_26A944698);
    sub_2619F8AB8(&qword_26A9446A0, &qword_26A9446A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944680);
  }
  return result;
}

uint64_t sub_261A34058(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_261A340B0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_261A340C4(a1, a2);
  }
  return a1;
}

uint64_t sub_261A340C4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_261A3411C()
{
  return sub_261B8D9D8();
}

uint64_t sub_261A34144(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t initializeBufferWithCopyOfBuffer for DisambiguateConfigurationView(uint64_t a1, long long *a2)
{
  uint64_t v3 = *((void *)a2 + 2);
  long long v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(void *)(a1 + 16) = v3;
  id v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t destroy for DisambiguateConfigurationView(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for DisambiguateConfigurationView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DisambiguateConfigurationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DisambiguateConfigurationView()
{
  return &type metadata for DisambiguateConfigurationView;
}

uint64_t sub_261A34314()
{
  return swift_getWitnessTable();
}

uint64_t sub_261A345A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A345C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A3464C(uint64_t a1)
{
  return a1;
}

void sub_261A346D8()
{
}

double sub_261A346EC@<D0>(_OWORD *a1@<X8>)
{
  return sub_261A33068(a1);
}

void sub_261A34720()
{
}

double sub_261A34734@<D0>(_OWORD *a1@<X8>)
{
  return sub_261A33068(a1);
}

void sub_261A34768()
{
}

double sub_261A3477C@<D0>(_OWORD *a1@<X8>)
{
  return sub_261A33068(a1);
}

uint64_t objectdestroy_36Tm()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_261A347F0()
{
}

void sub_261A34804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_261A32E20(a1, a2, a3, a4, *(void *)(v4 + 16), *(void (**)(void *))(v4 + 24), *(void *)(v4 + 32));
}

double sub_261A34810@<D0>(_OWORD *a1@<X8>)
{
  return sub_261A33068(a1);
}

uint64_t sub_261A34840()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_261A34888()
{
  sub_261A32CE8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(void))(v0 + 40));
}

unint64_t sub_261A34898()
{
  unint64_t result = qword_26A944780;
  if (!qword_26A944780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944780);
  }
  return result;
}

uint64_t sub_261A348EC()
{
  return sub_261A33DE8(&qword_26A944788, &qword_26A944790, (void (*)(void))sub_261A34928);
}

unint64_t sub_261A34928()
{
  unint64_t result = qword_26A944798;
  if (!qword_26A944798)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944748);
    sub_2619F8AB8(&qword_26A944760, &qword_26A944740);
    sub_2619F8AB8(&qword_26A944768, &qword_26A944710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944798);
  }
  return result;
}

uint64_t DistanceMetricText.init(distance:formattingManager:distanceType:distanceUnit:description:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  *(double *)a7 = a8;
  *(void *)(a7 + 8) = result;
  *(void *)(a7 + 16) = a2;
  *(void *)(a7 + 24) = a3;
  *(unsigned char *)(a7 + 32) = a4 & 1;
  *(void *)(a7 + 4sub_261A34804(0, 1, 2, 0) = a5;
  *(void *)(a7 + 48) = a6;
  return result;
}

id DistanceMetricText.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 8);
  if (*(unsigned char *)(v1 + 32))
  {
    sub_261A02AC8();
    sub_261A34BF8();
    swift_bridgeObjectRetain();
    id v4 = v3;
LABEL_7:
    id result = (id)sub_261B8DD68();
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 48) = v13;
    *(void *)(a1 + 64) = v14;
    *(unsigned char *)(a1 + 72) = v15;
    return result;
  }
  uint64_t v5 = *(void *)(v1 + 24);
  id result = objc_msgSend(v3, sel_localizedStringWithDistanceInMeters_distanceUnit_unitStyle_decimalPrecision_roundingMode_decimalTrimmingMode_, v5, 0, objc_msgSend(self, sel_defaultPrecisionForDistanceUnit_, v5), 2, 1, *(double *)v1);
  if (result)
  {
    uint64_t v7 = result;
    sub_261B8F0F8();

    id v8 = objc_msgSend(v3, sel_localizedShortUnitStringForDistanceUnit_textCase_, v5, 2);
    if (v8)
    {
      uint64_t v9 = v8;
      sub_261B8F0F8();
    }
    sub_261A02AC8();
    sub_261A34BF8();
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_261A34BF8()
{
  unint64_t result = qword_26A9447A0;
  if (!qword_26A9447A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9447A0);
  }
  return result;
}

uint64_t sub_261A34C4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for DistanceMetricText(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DistanceMetricText(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DistanceMetricText(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DistanceMetricText(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DistanceMetricText()
{
  return &type metadata for DistanceMetricText;
}

unint64_t sub_261A34DF0()
{
  unint64_t result = qword_26A9447A8;
  if (!qword_26A9447A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9447B0);
    sub_261A02AC8();
    sub_261A34BF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9447A8);
  }
  return result;
}

void sub_261A34F34(CGContext *a1, double a2, double a3, double a4, double a5, MKZoomScale a6)
{
  double v13 = MKRoadWidthAtZoomScale(a6);
  v37.origin.double x = a2;
  v37.origin.double y = a3;
  v37.size.double width = a4;
  v37.size.double height = a5;
  MKMapRect v38 = MKMapRectInset(v37, -v13, -v13);
  double x = v38.origin.x;
  double y = v38.origin.y;
  double width = v38.size.width;
  double height = v38.size.height;
  os_log_type_t v18 = *(os_unfair_lock_s **)(*(void *)(v6 + OBJC_IVAR____TtC9WorkoutUI26WKUIBreadcrumbPathRenderer_crumbs)
                             + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_protectedBreadcrumbData);
  long long v19 = v18 + 4;
  uint64_t v20 = v18 + 14;
  os_unfair_lock_lock(v18 + 14);
  sub_261A38134(v19, &v34);
  os_unfair_lock_unlock(v20);
  unint64_t v21 = v34;
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v24 = MEMORY[0x263F8EE78];
    goto LABEL_14;
  }
  uint64_t v22 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v22) {
    goto LABEL_13;
  }
LABEL_3:
  unint64_t v34 = MEMORY[0x263F8EE78];
  sub_261ACA2AC(0, v22 & ~(v22 >> 63), 0);
  if (v22 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v23 = 0;
  uint64_t v24 = v34;
  do
  {
    if ((v21 & 0xC000000000000001) != 0) {
      id v25 = (id)MEMORY[0x263E4D7B0](v23, v21);
    }
    else {
      id v25 = *(id *)(v21 + 8 * v23 + 32);
    }
    char v26 = v25;
    objc_msgSend(v25, sel_coordinate);
    MKMapPoint v27 = MKMapPointForCoordinate(v36);

    unint64_t v34 = v24;
    unint64_t v29 = *(void *)(v24 + 16);
    unint64_t v28 = *(void *)(v24 + 24);
    if (v29 >= v28 >> 1)
    {
      sub_261ACA2AC(v28 > 1, v29 + 1, 1);
      uint64_t v24 = v34;
    }
    ++v23;
    *(void *)(v24 + 16) = v29 + 1;
    *(MKMapPoint *)(v24 + 16 * v29 + 32) = v27;
  }
  while (v22 != v23);
  swift_bridgeObjectRelease();
LABEL_14:
  path = sub_261A35328(v24, x, y, width, height, a6);
  swift_bridgeObjectRelease();
  if (path)
  {
    CGContextAddPath(a1, path);
    id v30 = objc_msgSend(self, sel_systemGreenColor);
    id v31 = objc_msgSend(v30, sel_colorWithAlphaComponent_, 0.5);

    long long v32 = (CGColor *)objc_msgSend(v31, sel_CGColor);
    CGContextSetStrokeColorWithColor(a1, v32);

    CGContextSetLineJoin(a1, kCGLineJoinRound);
    CGContextSetLineCap(a1, kCGLineCapRound);
    CGContextSetLineWidth(a1, v13);
    CGContextStrokePath(a1);
  }
}

CGMutablePathRef sub_261A35328(uint64_t a1, double a2, double a3, double a4, double a5, double a6)
{
  unint64_t v8 = *(void *)(a1 + 16);
  if (v8 < 2) {
    return 0;
  }
  long long v10 = v6;
  uint64_t v15 = a1 + 40;
  double v16 = *(double *)(a1 + 40);
  double v17 = *(double *)(a1 + 32);
  uint64_t v18 = a1 + 32 + 16 * v8;
  double v37 = *(double *)(v18 - 16);
  double v39 = *(double *)(v18 - 8);
  CGMutablePathRef Mutable = CGPathCreateMutable();
  double v19 = 5.0 / a6 * (5.0 / a6);
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  char v21 = 1;
  uint64_t v22 = &selRef_album;
LABEL_4:
  if (v20 <= v8) {
    unint64_t v23 = v8;
  }
  else {
    unint64_t v23 = v20;
  }
  uint64_t v24 = -(uint64_t)v23;
  id v25 = (double *)(v15 + 16 * v20++);
  do
  {
    if (v24 + v20 == 1)
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v20 != 1)
    {
      double v7 = *(v25 - 1);
      a6 = *v25;
      if (v19 <= (v7 - v17) * (v7 - v17) + (*v25 - v16) * (*v25 - v16))
      {
        double v26 = *(v25 - 1);
        if (v7 > v17)
        {
          double v26 = v17;
          if ((~*(void *)&v17 & 0x7FF0000000000000) == 0)
          {
            if ((*(void *)&v17 & 0xFFFFFFFFFFFFFLL) != 0) {
              double v26 = *(v25 - 1);
            }
            else {
              double v26 = v17;
            }
          }
        }
        double v27 = *v25;
        if (a6 > v16)
        {
          double v27 = v16;
          if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
          {
            if ((*(void *)&v16 & 0xFFFFFFFFFFFFFLL) != 0) {
              double v27 = *v25;
            }
            else {
              double v27 = v16;
            }
          }
        }
        CLLocationCoordinate2D v36 = v10;
        double v28 = *(v25 - 1);
        if (v17 >= v7)
        {
          double v28 = v17;
          if ((~*(void *)&v17 & 0x7FF0000000000000) == 0)
          {
            if ((*(void *)&v17 & 0xFFFFFFFFFFFFFLL) != 0) {
              double v28 = *(v25 - 1);
            }
            else {
              double v28 = v17;
            }
          }
        }
        long long v10 = (char *)v22;
        double v29 = *v25;
        if (v16 >= a6)
        {
          double v29 = v16;
          if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
          {
            if ((*(void *)&v16 & 0xFFFFFFFFFFFFFLL) != 0) {
              double v29 = *v25;
            }
            else {
              double v29 = v16;
            }
          }
        }
        unint64_t v30 = v20 - v8;
        double v31 = v28 - v26;
        double v32 = v29 - v27;
        v40.origin.double x = a2;
        v40.origin.double y = a3;
        v40.size.double width = a4;
        v40.size.double height = a5;
        BOOL v33 = MKMapRectIntersectsRect(v40, *(MKMapRect *)&v26);
        if (v33)
        {
          if (v21)
          {
            objc_msgSend(v36, v10 + 3052, v17, v16);
            sub_261B8F4F8();
          }
          objc_msgSend(v36, v10 + 3052, v7, a6);
          sub_261B8F518();
          if (!v30)
          {
LABEL_45:
            swift_bridgeObjectRelease();
            double v34 = v37;
            uint64_t v22 = (char **)v10;
            long long v10 = v36;
            if (sub_261A3582C(v37, v39, v7, a6, a2, a3, a4, a5)) {
              goto LABEL_42;
            }
            return Mutable;
          }
        }
        else if (!v30)
        {
          swift_bridgeObjectRelease();
          double v34 = v37;
          uint64_t v22 = (char **)v10;
          long long v10 = v36;
          if (sub_261A3582C(v37, v39, v7, a6, a2, a3, a4, a5))
          {
LABEL_41:
            objc_msgSend(v10, v22[122], v7, a6);
            sub_261B8F4F8();
            goto LABEL_42;
          }
          return Mutable;
        }
        char v21 = !v33;
        double v16 = a6;
        double v17 = v7;
        uint64_t v22 = (char **)v10;
        long long v10 = v36;
        goto LABEL_4;
      }
    }
    ++v20;
    v25 += 2;
  }
  while (v20 - v8 != 1);
  swift_bridgeObjectRelease();
  double v34 = v37;
  if (sub_261A3582C(v37, v39, v17, v16, a2, a3, a4, a5))
  {
    a6 = v16;
    double v7 = v17;
    if (v21) {
      goto LABEL_41;
    }
LABEL_42:
    objc_msgSend(v10, v22[122], v34, v39);
    sub_261B8F518();
  }
  return Mutable;
}

id WKUIBreadcrumbPathRenderer.__allocating_init(overlay:)(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(v1), sel_initWithOverlay_, a1);
  swift_unknownObjectRelease();
  return v2;
}

void WKUIBreadcrumbPathRenderer.init(overlay:)()
{
}

id WKUIBreadcrumbPathRenderer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WKUIBreadcrumbPathRenderer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for WKUIBreadcrumbPathRenderer()
{
  return self;
}

uint64_t method lookup function for WKUIBreadcrumbPathRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WKUIBreadcrumbPathRenderer);
}

BOOL sub_261A3582C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  if ((*(void *)&a3 & 0xFFFFFFFFFFFFFLL) != 0) {
    double v12 = a1;
  }
  else {
    double v12 = a3;
  }
  if ((~*(void *)&a3 & 0x7FF0000000000000) != 0) {
    double v12 = a3;
  }
  if (a1 <= a3) {
    double v12 = a1;
  }
  double v13 = a2;
  if (a2 > a4)
  {
    if ((*(void *)&a4 & 0xFFFFFFFFFFFFFLL) != 0) {
      double v13 = a2;
    }
    else {
      double v13 = a4;
    }
    if ((~*(void *)&a4 & 0x7FF0000000000000) != 0) {
      double v13 = a4;
    }
    if (a3 < a1)
    {
LABEL_10:
      if (a4 < a2) {
        goto LABEL_15;
      }
      goto LABEL_11;
    }
  }
  else if (a3 < a1)
  {
    goto LABEL_10;
  }
  if ((*(void *)&a3 & 0xFFFFFFFFFFFFFLL) == 0) {
    a1 = a3;
  }
  if ((~*(void *)&a3 & 0x7FF0000000000000) != 0) {
    a1 = a3;
  }
  if (a4 >= a2)
  {
LABEL_11:
    if ((*(void *)&a4 & 0xFFFFFFFFFFFFFLL) == 0) {
      a2 = a4;
    }
    if ((~*(void *)&a4 & 0x7FF0000000000000) != 0) {
      a2 = a4;
    }
  }
LABEL_15:
  double v14 = a1 - v12;
  double v15 = a2 - v13;
  v17.origin.double x = a5;
  v17.origin.double y = a6;
  v17.size.double width = a7;
  v17.size.double height = a8;
  return MKMapRectIntersectsRect(v17, *(MKMapRect *)&v12);
}

void sub_261A35900()
{
  qword_26A9447C0 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, 4.5, 4.5, 6.0, 6.0, 6.0);
}

double static IntervalPlatterConstants.cornerSize.getter()
{
  return sub_261A35CB8(&qword_26A942C88, (uint64_t)&qword_26A9447C0);
}

void sub_261A35960()
{
  qword_26A9447C8 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, 12.0, 13.0, 13.0, 14.0, 14.0);
}

double static IntervalPlatterConstants.previewFontSize.getter()
{
  return sub_261A35CB8(&qword_26A942C90, (uint64_t)&qword_26A9447C8);
}

void sub_261A359C0()
{
  qword_26A9447D0 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, 23.0, 24.0, 24.0, 27.0, 27.0);
}

double static IntervalPlatterConstants.previewWidth.getter()
{
  return sub_261A35CB8(&qword_26A942C98, (uint64_t)&qword_26A9447D0);
}

double static IntervalPlatterConstants.previewPaddingLeading.getter()
{
  return 3.0;
}

double static IntervalPlatterConstants.previewMaximumLineHeight.getter()
{
  return 10.5;
}

double sub_261A35A30()
{
  if (qword_26A942C90 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_26A9447C8 + -10.5 + *(double *)&qword_26A9447C8 + -10.5;
  *(double *)&qword_26A9447D8 = result;
  return result;
}

double static IntervalPlatterConstants.previewPaddingFontOffset.getter()
{
  return sub_261A35CB8(&qword_26A942CA0, (uint64_t)&qword_26A9447D8);
}

void sub_261A35AB4()
{
  qword_26A9447E0 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, 27.5, 28.5, 28.5, 34.0, 34.0);
}

double static IntervalPlatterConstants.stepViewMaxHeight.getter()
{
  return sub_261A35CB8(&qword_26A942CA8, (uint64_t)&qword_26A9447E0);
}

void sub_261A35B28()
{
  qword_26A9447E8 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, 15.0, 16.5, 16.5, 18.0, 18.0);
}

double static IntervalPlatterConstants.goalIconFontSize.getter()
{
  return sub_261A35CB8(&qword_26A942CB0, (uint64_t)&qword_26A9447E8);
}

void sub_261A35B90()
{
  qword_26A9447F0 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, 6.0, 7.0, 7.0, 7.0, 7.0);
}

double static IntervalSecondPlatterConstants.cornerSize.getter()
{
  return sub_261A35CB8(&qword_26A942CB8, (uint64_t)&qword_26A9447F0);
}

void sub_261A35BF0()
{
  qword_26A9447F8 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(28.0, 34.0, 28.0, 34.0, 34.0, 38.0, 38.0);
}

double static IntervalSecondPlatterConstants.stepNameFontSize.getter()
{
  return sub_261A35CB8(&qword_26A942CC0, (uint64_t)&qword_26A9447F8);
}

void sub_261A35C58()
{
  qword_26A944800 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(17.0, 22.0, 17.0, 22.0, 22.0, 22.0, 22.0);
}

double static IntervalSecondPlatterConstants.stepDetailFontSize.getter()
{
  return sub_261A35CB8(&qword_26A942CC8, (uint64_t)&qword_26A944800);
}

double sub_261A35CB8(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(double *)a2;
}

double static IntervalSecondPlatterConstants.verticalSpacing.getter()
{
  return 0.0;
}

ValueMetadata *type metadata accessor for IntervalPlatterConstants()
{
  return &type metadata for IntervalPlatterConstants;
}

ValueMetadata *type metadata accessor for IntervalSecondPlatterConstants()
{
  return &type metadata for IntervalSecondPlatterConstants;
}

uint64_t View.cornerRadius(_:corners:)()
{
  return sub_261B8E7E8();
}

double sub_261A35D84@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  id v7 = objc_msgSend(self, sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, *((void *)v5 + 1), a2, a3, a4, a5, *v5, *v5);
  id v8 = objc_msgSend(v7, sel_CGPath);
  sub_261B8E2E8();

  double result = *(double *)&v10;
  *(_OWORD *)a1 = v10;
  *(_OWORD *)(a1 + 16) = v11;
  *(unsigned char *)(a1 + 32) = v12;
  return result;
}

uint64_t sub_261A35E58()
{
  return MEMORY[0x270F047C8]();
}

void (*sub_261A35E70(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_261B8D338();
  return sub_261A35EE0;
}

void sub_261A35EE0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_261A35F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_261A36040();
  return MEMORY[0x270F04808](a1, a2, a3, v6);
}

uint64_t sub_261A35F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_261A36040();
  return MEMORY[0x270F047D0](a1, a2, a3, v6);
}

uint64_t sub_261A35FF4(uint64_t a1)
{
  unint64_t v2 = sub_261A36040();
  return MEMORY[0x270F047E0](a1, v2);
}

unint64_t sub_261A36040()
{
  unint64_t result = qword_26A944808;
  if (!qword_26A944808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944808);
  }
  return result;
}

uint64_t sub_261A36094()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for RoundedCorner()
{
  return &type metadata for RoundedCorner;
}

uint64_t sub_261A36140()
{
  return sub_2619F8AB8(&qword_26A944810, &qword_26A944818);
}

unint64_t sub_261A36180()
{
  unint64_t result = qword_26A944820;
  if (!qword_26A944820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944820);
  }
  return result;
}

unint64_t sub_261A361D8()
{
  unint64_t result = qword_26A944828;
  if (!qword_26A944828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944828);
  }
  return result;
}

unint64_t sub_261A36230()
{
  unint64_t result = qword_26A944830;
  if (!qword_26A944830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944830);
  }
  return result;
}

void *DownhillRunsStats.averageHeartRate.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

id DownhillRunsStats.averageSpeed.getter()
{
  return *(id *)(v0 + 24);
}

void *DownhillRunsStats.maximumSpeed.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

id DownhillRunsStats.distance.getter()
{
  return *(id *)(v0 + 40);
}

double DownhillRunsStats.duration.getter()
{
  return *(double *)(v0 + 48);
}

void *DownhillRunsStats.elevationAscended.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

void *DownhillRunsStats.elevationDescended.getter()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

uint64_t DownhillRunsStats.runsCount.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t DownhillRunsStats.__allocating_init(downhillRuns:)(unint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  DownhillRunsStats.init(downhillRuns:)(a1);
  return v2;
}

uint64_t DownhillRunsStats.init(downhillRuns:)(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v1 + 72) = v4;
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_meterUnit);
  id v7 = self;
  id v8 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v6, 0.0);

  id v9 = objc_msgSend(v5, sel_meterUnit);
  id v10 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v9, 0.0);

  id v11 = objc_msgSend(v5, sel_meterUnit);
  id v12 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v11, 0.0);

  sub_261B8B9E8();
  uint64_t result = sub_261B8B9D8();
  if (v3)
  {
    unint64_t v14 = a1;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_261B8F9D8();
    uint64_t result = swift_bridgeObjectRelease();
    id v59 = v10;
    id v60 = v8;
    if (v15) {
      goto LABEL_5;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    id v23 = 0;
    double v18 = 0.0;
    goto LABEL_22;
  }
  unint64_t v14 = a1;
  uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v59 = v10;
  id v60 = v8;
  if (!v15) {
    goto LABEL_21;
  }
LABEL_5:
  if (v15 < 1)
  {
    __break(1u);
    return result;
  }
  id v56 = v5;
  double v16 = 0;
  uint64_t v17 = 0;
  unint64_t v57 = v14 & 0xC000000000000001;
  double v18 = 0.0;
  do
  {
    if (v57) {
      double v19 = (char *)MEMORY[0x263E4D7B0](v17, v14);
    }
    else {
      double v19 = (char *)*(id *)(v14 + 8 * v17 + 32);
    }
    unint64_t v20 = v19;
    char v21 = (double *)&v19[OBJC_IVAR___WODownhillRun_workoutTime];
    swift_beginAccess();
    double v22 = *v21;
    id v23 = (id)HKQuantityMax();

    uint64_t v24 = *(void **)&v20[OBJC_IVAR___WODownhillRun_elevationAscended];
    if (v24)
    {
      id v25 = v24;
      id v26 = objc_msgSend(v60, sel__quantityByAddingQuantity_, v25);

      id v60 = v26;
    }
    double v27 = *(void **)&v20[OBJC_IVAR___WODownhillRun_elevationDescended];
    if (v27)
    {
      id v28 = v27;
      id v29 = objc_msgSend(v59, sel__quantityByAddingQuantity_, v28);

      id v59 = v29;
    }
    unint64_t v30 = (id *)&v20[OBJC_IVAR___WODownhillRun_distance];
    swift_beginAccess();
    if (*v30)
    {
      id v31 = *v30;
      id v32 = objc_msgSend(v12, sel__quantityByAddingQuantity_, v31);

      id v12 = v32;
    }
    BOOL v33 = (id *)&v20[OBJC_IVAR___WODownhillRun_averageHeartRate];
    swift_beginAccess();
    if (*v33)
    {
      id v34 = *v33;
      id v35 = objc_msgSend(v56, sel__countPerMinuteUnit);
      objc_msgSend(v34, sel_doubleValueForUnit_, v35);

      sub_261B8B9A8();
    }
    ++v17;
    double v18 = v18 + v22;

    double v16 = v23;
    unint64_t v14 = a1;
  }
  while (v15 != v17);
  swift_bridgeObjectRelease();
  uint64_t v5 = v56;
LABEL_22:
  sub_261B8B9C8();
  if (v36 == 0.0)
  {
    id v37 = 0;
  }
  else
  {
    id v38 = objc_msgSend(v5, sel__countPerMinuteUnit);
    sub_261B8B9B8();
    id v37 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v38);
  }
  *(void *)(v2 + 16) = v37;
  double v39 = (void *)sub_261B8F0B8();
  id v40 = objc_msgSend(v5, sel_unitFromString_, v39);

  id v41 = objc_msgSend(v5, sel_meterUnit);
  objc_msgSend(v12, sel_doubleValueForUnit_, v41);
  double v43 = v42;

  id v44 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v40, v43 / v18);
  *(void *)(v2 + 24) = v44;
  *(void *)(v2 + 32) = v23;
  *(void *)(v2 + 4sub_261A34804(0, 1, 2, 0) = v12;
  *(double *)(v2 + 48) = v18;
  id v45 = v23;
  id v46 = v12;
  id v47 = objc_msgSend(v5, sel_meterUnit);
  objc_msgSend(v60, sel_doubleValueForUnit_, v47);
  double v49 = v48;

  if (v49 == 0.0)
  {
    id v50 = 0;
  }
  else
  {
    id v51 = v60;
    id v50 = v60;
  }
  id v52 = v59;
  *(void *)(v2 + 56) = v50;
  id v53 = objc_msgSend(v5, sel_meterUnit);
  objc_msgSend(v59, sel_doubleValueForUnit_, v53);
  double v55 = v54;

  swift_release();
  if (v55 == 0.0)
  {

    id v52 = 0;
  }
  *(void *)(v2 + 64) = v52;
  return v2;
}

id *DownhillRunsStats.deinit()
{
  return v0;
}

uint64_t DownhillRunsStats.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t DownhillRunsStats.description.getter()
{
  uint64_t v1 = v0;
  sub_261B8F8C8();
  sub_261B8F1C8();
  sub_261B8FB78();
  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  sub_261B8F1C8();
  sub_261B8F428();
  sub_261B8F1C8();
  id v2 = *(id *)(v0 + 40);
  id v3 = objc_msgSend(v2, sel_description);
  sub_261B8F0F8();

  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  sub_261B8F1C8();
  id v4 = *(id *)(v1 + 24);
  id v5 = objc_msgSend(v4, sel_description);
  sub_261B8F0F8();

  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  sub_261B8F1C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944838);
  sub_261B8F6C8();
  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  sub_261B8F1C8();
  sub_261B8F6C8();
  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  sub_261B8F1C8();
  sub_261B8F6C8();
  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  sub_261B8F1C8();
  sub_261B8F6C8();
  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_261A36D3C()
{
  return DownhillRunsStats.description.getter();
}

uint64_t type metadata accessor for DownhillRunsStats()
{
  return self;
}

uint64_t method lookup function for DownhillRunsStats(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DownhillRunsStats);
}

uint64_t dispatch thunk of DownhillRunsStats.__allocating_init(downhillRuns:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t destroy for PacerPillView(uint64_t a1)
{
  return sub_2619F7790(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t initializeWithCopy for PacerPillView(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  sub_2619F7774(v4, v5);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v5;
  return a1;
}

uint64_t assignWithCopy for PacerPillView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  sub_2619F7774(v3, v4);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PacerPillView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v4;
  sub_2619F7790(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PacerPillView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PacerPillView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 4sub_261A34804(0, 1, 2, 0) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4sub_261A34804(3, 0, 0, 1) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4sub_261A34804(3, 0, 0, 1) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4sub_261A34804(0, 1, 2, 0) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PacerPillView()
{
  return &type metadata for PacerPillView;
}

uint64_t sub_261A36F98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A36FB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v95 = a1;
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944840);
  MEMORY[0x270FA5388](v92);
  uint64_t v87 = (uint64_t *)&v68[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944848);
  uint64_t v3 = MEMORY[0x270FA5388](v96);
  uint64_t v5 = &v68[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v88 = &v68[-v6];
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944850);
  MEMORY[0x270FA5388](v93);
  long long v94 = &v68[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_261B8D7B8();
  uint64_t v89 = *(void *)(v8 - 8);
  uint64_t v90 = v8;
  MEMORY[0x270FA5388](v8);
  id v10 = &v68[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944858);
  MEMORY[0x270FA5388](v84);
  char v85 = &v68[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v81 = sub_261B8D748();
  MEMORY[0x270FA5388](v81);
  double v13 = (double *)&v68[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944860);
  MEMORY[0x270FA5388](v82);
  uint64_t v15 = &v68[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944868);
  MEMORY[0x270FA5388](v83);
  uint64_t v17 = &v68[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944870);
  uint64_t v18 = MEMORY[0x270FA5388](v91);
  uint64_t v86 = &v68[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v18);
  char v21 = &v68[-v20];
  id v23 = *(unsigned char **)v1;
  double v22 = *(double *)(v1 + 8);
  char v24 = *(unsigned char *)(v1 + 16);
  uint64_t v25 = *(void *)(v1 + 24);
  uint64_t v26 = *(void *)(v1 + 32);
  char v27 = *(unsigned char *)(v1 + 40);
  sub_2619F7774(v26, v27);
  sub_2619FA43C(v26, v27, &v101);
  sub_2619F7790(v26, v27);
  uint64_t v110 = v23;
  double v111 = v22;
  char v112 = v24;
  uint64_t v113 = v25;
  if ((_BYTE)v101)
  {
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v101);
    uint64_t v86 = (unsigned char *)v103;
    swift_release();
    uint64_t v110 = v23;
    double v111 = v22;
    char v112 = v24;
    uint64_t v113 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v101);
    swift_release();
    swift_release();
    uint64_t v116 = v23;
    double v117 = v22;
    LOBYTE(v118) = v24;
    uint64_t v119 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v110);
    swift_release();
    swift_release();
    sub_261B8EC98();
    sub_261B8D4D8();
    char v85 = v116;
    LODWORD(v84) = LOBYTE(v117);
    uint64_t v28 = v118;
    char v29 = v119;
    uint64_t v83 = *((void *)&v120 + 1);
    uint64_t v30 = v120;
    sub_261B8D7A8();
    uint64_t KeyPath = swift_getKeyPath();
    id v32 = v87;
    BOOL v33 = v10;
    uint64_t v35 = v89;
    uint64_t v34 = v90;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v89 + 16))((unsigned char *)v87 + *(int *)(v92 + 28), v33, v90);
    uint64_t *v32 = KeyPath;
    sub_2619F86F0((uint64_t)v32, (uint64_t)&v5[*(int *)(v96 + 36)], &qword_26A944840);
    *(void *)uint64_t v5 = v86;
    *((_WORD *)v5 + 4) = 256;
    *((void *)v5 + 2) = v85;
    unsigned char v5[24] = v84;
    *((void *)v5 + 4) = v28;
    v5[40] = v29;
    uint64_t v36 = v83;
    *((void *)v5 + 6) = v30;
    *((void *)v5 + 7) = v36;
    swift_retain();
    sub_2619F8754((uint64_t)v32, &qword_26A944840);
    (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v33, v34);
    swift_release();
    id v37 = &qword_26A944848;
    id v38 = v88;
    sub_2619FB7EC((uint64_t)v5, (uint64_t)v88, &qword_26A944848);
    sub_2619F86F0((uint64_t)v38, (uint64_t)v94, &qword_26A944848);
    swift_storeEnumTagMultiPayload();
    sub_261A37C84(&qword_26A944878, &qword_26A944870, (void (*)(void))sub_261A37AC8);
    sub_261A37C84(&qword_26A9448B8, &qword_26A944848, (void (*)(void))sub_261A37D28);
    sub_261B8DD68();
    uint64_t v39 = (uint64_t)v38;
  }
  else
  {
    PacerViewConfiguration.text.getter((uint64_t)&v101);
    uint64_t v76 = v102;
    uint64_t v77 = v101;
    uint64_t v87 = (uint64_t *)*((void *)&v103 + 1);
    uint64_t v88 = (unsigned char *)v103;
    uint64_t v80 = v104;
    uint64_t v78 = *((void *)&v102 + 1);
    uint64_t v79 = *((void *)&v104 + 1);
    uint64_t v74 = *((void *)&v101 + 1);
    uint64_t v72 = *((void *)&v105 + 1);
    uint64_t v75 = v105;
    int v69 = v106;
    int v73 = BYTE1(v106);
    uint64_t v116 = v23;
    double v117 = v22;
    LOBYTE(v118) = v24;
    uint64_t v119 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v110);
    uint64_t v40 = v115;
    swift_release();
    uint64_t v41 = swift_getKeyPath();
    unint64_t v70 = v10;
    uint64_t v42 = v41;
    uint64_t v110 = v23;
    double v111 = v22;
    char v112 = v24;
    uint64_t v113 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v101);
    swift_release();
    swift_release();
    uint64_t v116 = v23;
    double v117 = v22;
    LOBYTE(v118) = v24;
    uint64_t v119 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v110);
    uint64_t v71 = v21;
    swift_release();
    swift_release();
    sub_261B8EC98();
    sub_261B8D4D8();
    *(void *)&long long v101 = v77;
    *((void *)&v101 + sub_261A34804(3, 0, 0, 1) = v74;
    *(void *)&long long v102 = v76;
    *((void *)&v102 + sub_261A34804(3, 0, 0, 1) = v78;
    *(void *)&long long v103 = v88;
    *((void *)&v103 + sub_261A34804(3, 0, 0, 1) = v87;
    *(void *)&long long v104 = v80;
    *((void *)&v104 + sub_261A34804(3, 0, 0, 1) = v79;
    *(void *)&long long v105 = v75;
    *((void *)&v105 + sub_261A34804(3, 0, 0, 1) = v72;
    char v43 = v69;
    LOBYTE(v106) = v69;
    BYTE1(v106) = v73;
    *((void *)&v106 + sub_261A34804(3, 0, 0, 1) = v42;
    *(void *)&long long v107 = v40;
    *((void *)&v107 + sub_261A34804(3, 0, 0, 1) = v116;
    LOBYTE(v108) = LOBYTE(v117);
    *((void *)&v108 + sub_261A34804(3, 0, 0, 1) = v118;
    v109[0] = v119;
    *(_OWORD *)&v109[8] = v120;
    long long v97 = v23;
    double v98 = v22;
    char v99 = v24;
    uint64_t v100 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v110);
    double v44 = v111;
    swift_release();
    swift_release();
    double v45 = v44 * 0.5;
    id v46 = (char *)v13 + *(int *)(v81 + 20);
    uint64_t v47 = *MEMORY[0x263F19860];
    uint64_t v48 = sub_261B8DBB8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(v46, v47, v48);
    *double v13 = v45;
    v13[1] = v45;
    long long v97 = v23;
    double v98 = v22;
    char v99 = v24;
    uint64_t v100 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v110);
    uint64_t v49 = v114;
    swift_release();
    sub_261A1396C((uint64_t)v13, (uint64_t)v15);
    uint64_t v50 = v82;
    *(void *)&v15[*(int *)(v82 + 52)] = v49;
    *(_WORD *)&v15[*(int *)(v50 + 56)] = 256;
    sub_261A139D0((uint64_t)v13);
    uint64_t v51 = sub_261B8EC98();
    uint64_t v53 = v52;
    double v54 = v85;
    sub_2619F86F0((uint64_t)v15, (uint64_t)v85, &qword_26A944860);
    double v55 = (uint64_t *)&v54[*(int *)(v84 + 36)];
    *double v55 = v51;
    v55[1] = v53;
    sub_2619F86F0((uint64_t)v54, (uint64_t)&v17[*(int *)(v83 + 36)], &qword_26A944858);
    long long v56 = v108;
    *((_OWORD *)v17 + 6) = v107;
    *((_OWORD *)v17 + 7) = v56;
    *((_OWORD *)v17 + 8) = *(_OWORD *)v109;
    *((void *)v17 + 18) = *(void *)&v109[16];
    long long v57 = v104;
    *((_OWORD *)v17 + 2) = v103;
    *((_OWORD *)v17 + 3) = v57;
    long long v58 = v106;
    *((_OWORD *)v17 + 4) = v105;
    *((_OWORD *)v17 + 5) = v58;
    long long v59 = v102;
    *(_OWORD *)uint64_t v17 = v101;
    *((_OWORD *)v17 + sub_261A34804(3, 0, 0, 1) = v59;
    sub_261A37DD0((uint64_t)&v101);
    sub_2619F8754((uint64_t)v54, &qword_26A944858);
    sub_2619F8754((uint64_t)v15, &qword_26A944860);
    sub_261A37EC8(v77, v74, v76, v78, (uint64_t)v88, (uint64_t)v87, v80, v79, v75, v72, v43, v73);
    swift_release();
    swift_release();
    id v60 = v70;
    sub_261B8D7A8();
    uint64_t v61 = swift_getKeyPath();
    uint64_t v62 = v90;
    uint64_t v63 = (uint64_t)v86;
    uint64_t v64 = (uint64_t *)&v86[*(int *)(v91 + 36)];
    uint64_t v65 = v89;
    (*(void (**)(char *, unsigned char *, uint64_t))(v89 + 16))((char *)v64 + *(int *)(v92 + 28), v60, v90);
    *uint64_t v64 = v61;
    sub_2619F86F0((uint64_t)v17, v63, &qword_26A944868);
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v60, v62);
    sub_2619F8754((uint64_t)v17, &qword_26A944868);
    id v37 = &qword_26A944870;
    uint64_t v66 = (uint64_t)v71;
    sub_2619FB7EC(v63, (uint64_t)v71, &qword_26A944870);
    sub_2619F86F0(v66, (uint64_t)v94, &qword_26A944870);
    swift_storeEnumTagMultiPayload();
    sub_261A37C84(&qword_26A944878, &qword_26A944870, (void (*)(void))sub_261A37AC8);
    sub_261A37C84(&qword_26A9448B8, &qword_26A944848, (void (*)(void))sub_261A37D28);
    sub_261B8DD68();
    uint64_t v39 = v66;
  }
  return sub_2619F8754(v39, v37);
}

unint64_t sub_261A37AC8()
{
  unint64_t result = qword_26A944880;
  if (!qword_26A944880)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944868);
    sub_261A37B68();
    sub_2619F8AB8(&qword_26A9448A8, &qword_26A944858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944880);
  }
  return result;
}

unint64_t sub_261A37B68()
{
  unint64_t result = qword_26A944888;
  if (!qword_26A944888)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944890);
    sub_261A37BE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944888);
  }
  return result;
}

unint64_t sub_261A37BE4()
{
  unint64_t result = qword_26A944898;
  if (!qword_26A944898)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9448A0);
    sub_261A02EEC();
    sub_2619F8AB8((unint64_t *)&qword_26A943AF0, &qword_26A943AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944898);
  }
  return result;
}

uint64_t sub_261A37C84(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_2619F8AB8(&qword_26A9448B0, &qword_26A944840);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A37D28()
{
  unint64_t result = qword_26A9448C0;
  if (!qword_26A9448C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9448C8);
    sub_2619F8AB8(&qword_26A9448D0, &qword_26A9448D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9448C0);
  }
  return result;
}

uint64_t sub_261A37DD0(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A37E48(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  if (a12)
  {
    sub_261A001D0(a1, a2, a3 & 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_261A37EC8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  if (a12)
  {
    sub_261A02A18(a1, a2, a3 & 1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_261A37F48()
{
  unint64_t result = qword_26A9448E0;
  if (!qword_26A9448E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9448E8);
    sub_261A37C84(&qword_26A944878, &qword_26A944870, (void (*)(void))sub_261A37AC8);
    sub_261A37C84(&qword_26A9448B8, &qword_26A944848, (void (*)(void))sub_261A37D28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9448E0);
  }
  return result;
}

double WKUIBreadcrumbPath.boundingMapRect.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_boundingMapRect);
}

double sub_261A38084()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_coordinate;
  swift_beginAccess();
  return *(double *)v1;
}

__n128 sub_261A38124@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_261A38134@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

void sub_261A38154(unint64_t a1, uint64_t a2, void *a3)
{
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_261B8F9D8();
  if (!v8) {
    goto LABEL_23;
  }
LABEL_3:
  unint64_t v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
  }
  else
  {
    id v23 = a3;
    unint64_t v24 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) == 0)
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v9 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
        goto LABEL_8;
      }
      __break(1u);
      goto LABEL_30;
    }
  }
  id v10 = (id)MEMORY[0x263E4D7B0](v9, a1);
LABEL_8:
  char v21 = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(os_unfair_lock_s **)(v25 + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_protectedBreadcrumbData);
  long long v3 = v11 + 4;
  uint64_t v4 = v11 + 14;
  os_unfair_lock_lock(v11 + 14);
  a3 = 0;
  sub_261A38134(v3, &v26);
  os_unfair_lock_unlock(v4);
  if (!(*(void *)&v26.origin.x >> 62))
  {
    uint64_t v20 = *(void *)((*(void *)&v26.origin.x & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_10;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_261B8F9D8();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_bridgeObjectRelease();
  objc_msgSend((id)a2, sel_bounds);
  double v13 = v12;
  double v22 = (void *)a2;
  objc_msgSend((id)a2, sel_visibleMapRect);
  double v15 = v13 / v14;
  swift_bridgeObjectRetain();
  a2 = 4;
  do
  {
    if (v24) {
      id v16 = (id)MEMORY[0x263E4D7B0](a2 - 4, a1);
    }
    else {
      id v16 = *(id *)(a1 + 8 * a2);
    }
    uint64_t v17 = v16;
    uint64_t v18 = a2 - 3;
    if (__OFADD__(a2 - 4, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    MEMORY[0x270FA5388](v16);
    os_unfair_lock_lock(v4);
    sub_261A38D28((double *)&v3->_os_unfair_lock_opaque);
    os_unfair_lock_unlock(v4);

    ++a2;
  }
  while (v18 != v8);
  swift_bridgeObjectRelease();
  double v19 = MKRoadWidthAtZoomScale(v15);
  os_unfair_lock_lock(v4);
  sub_261A38124((uint64_t)v3, (uint64_t)&v26);
  os_unfair_lock_unlock(v4);
  MKMapRect v28 = MKMapRectInset(v26, -v19, -v19);
  if (v23) {
    objc_msgSend(v23, sel_setNeedsDisplayInMapRect_, v28.origin.x, v28.origin.y, v28.size.width, v28.size.height);
  }
  if (!v20)
  {
    MEMORY[0x263E4DF40](objc_msgSend(v21, sel_coordinate, v28.origin.x, v28.origin.y, v28.size.width, v28.size.height));
    objc_msgSend(v22, sel_setRegion_animated_, 1);
    objc_msgSend(v22, sel_setUserTrackingMode_animated_, 1, 1);
  }
}

void sub_261A38498(double *a1, uint64_t a2, void *a3)
{
  double v6 = *a1;
  if (*(void *)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_261B8F9D8();
    if (v7)
    {
LABEL_3:
      unint64_t v8 = v7 - 1;
      if (__OFSUB__(v7, 1))
      {
        __break(1u);
      }
      else if ((*(void *)&v6 & 0xC000000000000001) == 0)
      {
        if ((v8 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v8 < *(void *)((*(void *)&v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v9 = *(id *)(*(void *)&v6 + 8 * v8 + 32);
LABEL_8:
          id v10 = v9;
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
        __break(1u);
        return;
      }
      id v9 = (id)MEMORY[0x263E4D7B0](v8, *(void *)&v6);
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((*(void *)&v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  id v10 = 0;
LABEL_11:
  if (*(void *)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_261B8F9D8();
    swift_bridgeObjectRelease();
    uint64_t v11 = &selRef_album;
    if (v50) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v11 = &selRef_album;
  if (!*(void *)((*(void *)a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    [a3 v11[118]];
    CLLocationDegrees v13 = v12;
    CLLocationDegrees v15 = v14;
    id v16 = (double *)(a2 + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_coordinate);
    swift_beginAccess();
    double *v16 = v13;
    v16[1] = v15;
    v55.latitude = v13;
    v55.longitude = v15;
    MKMapPoint v17 = MKMapPointForCoordinate(v55);
    v57.size.double width = MEMORY[0x263E4DF60](*v16) * 1000.0;
    v57.origin.double x = v17.x;
    v57.origin.double y = v17.y;
    v57.size.double height = v57.size.width;
    *(MKMapRect *)(a1 + sub_261A34804(3, 0, 0, 1) = MKMapRectIntersection(v57, *MEMORY[0x263F10860]);
    id v18 = a3;

    id v10 = a3;
  }
LABEL_14:
  id v19 = a3;
  MEMORY[0x263E4D180]();
  if (*(void *)((*(void *)a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)a1 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    sub_261B8F2F8();
  sub_261B8F318();
  sub_261B8F2E8();
  [v19 v11[118]];
  MKMapPoint v20 = MKMapPointForCoordinate(v56);
  if (v10)
  {
    [v10 v11[118]];
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
  }
  MKMapPoint v23 = MKMapPointForCoordinate(*(CLLocationCoordinate2D *)&v21);
  v63.origin.double x = v23.x;
  v63.origin.double y = v23.y;
  v58.size.double width = 0.0;
  v58.size.double height = 0.0;
  v63.size.double width = 0.0;
  v63.size.double height = 0.0;
  v58.origin.double x = v20.x;
  v58.origin.double y = v20.y;
  MKMapRect v59 = MKMapRectUnion(v58, v63);
  double x = v59.origin.x;
  double y = v59.origin.y;
  double width = v59.size.width;
  double height = v59.size.height;
  double v28 = a1[1];
  double v29 = a1[2];
  double v30 = a1[3];
  double v31 = a1[4];
  v59.origin.double x = v28;
  v59.origin.double y = v29;
  v59.size.double width = v30;
  v59.size.double height = v31;
  v64.origin.double x = x;
  v64.origin.double y = y;
  v64.size.double width = width;
  v64.size.double height = height;
  if (MKMapRectContainsRect(v59, v64))
  {
  }
  else
  {
    v60.origin.double x = v28;
    v60.origin.double y = v29;
    v60.size.double width = v30;
    v60.size.double height = v31;
    v65.origin.double x = x;
    v65.origin.double y = y;
    v65.size.double width = width;
    v65.size.double height = height;
    MKMapRect v61 = MKMapRectUnion(v60, v65);
    double v54 = v61.origin.x;
    double v52 = v61.origin.y;
    double v53 = v61.size.width;
    double v51 = v61.size.height;
    v61.origin.double x = x;
    v61.origin.double y = y;
    CLLocationCoordinate2D v32 = MKCoordinateForMapPoint(v61.origin);
    double v33 = MEMORY[0x263E4DF60](v32.latitude, v32.longitude);
    double v34 = v33 * 1000.0;
    if (y >= v29) {
      double v35 = -0.0;
    }
    else {
      double v35 = v33 * 1000.0;
    }
    double v36 = v51 + v35;
    if (y >= v29) {
      double v37 = 0.0;
    }
    else {
      double v37 = v34;
    }
    double v38 = v52 - v37;
    if (v29 + v31 >= y + height) {
      double v39 = -0.0;
    }
    else {
      double v39 = v34;
    }
    double v40 = v39 + v36;
    if (x >= v28) {
      double v41 = -0.0;
    }
    else {
      double v41 = v34;
    }
    double v42 = v53 + v41;
    if (x >= v28) {
      double v43 = 0.0;
    }
    else {
      double v43 = v34;
    }
    double v44 = v54 - v43;
    if (v28 + v30 >= x + width) {
      double v34 = -0.0;
    }
    double v45 = v34 + v42;
    MKMapRect v62 = MKMapRectIntersection(*(MKMapRect *)(&v38 - 1), *MEMORY[0x263F10860]);
    double v46 = v62.origin.x;
    double v47 = v62.origin.y;
    double v48 = v62.size.width;
    double v49 = v62.size.height;

    a1[1] = v46;
    a1[2] = v47;
    a1[3] = v48;
    a1[4] = v49;
  }
}

id WKUIBreadcrumbPath.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id WKUIBreadcrumbPath.init()()
{
  id v1 = &v0[OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_boundingMapRect];
  uint64_t v2 = *MEMORY[0x263F10860];
  uint64_t v3 = *(void *)(MEMORY[0x263F10860] + 8);
  uint64_t v4 = *(void *)(MEMORY[0x263F10860] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x263F10860] + 24);
  *(void *)id v1 = *MEMORY[0x263F10860];
  *((void *)v1 + sub_261A34804(3, 0, 0, 1) = v3;
  *((void *)v1 + 2) = v4;
  *((void *)v1 + 3) = v5;
  double v6 = &v0[OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_coordinate];
  *(void *)double v6 = 0;
  *((void *)v6 + sub_261A34804(3, 0, 0, 1) = 0;
  uint64_t v7 = OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_protectedBreadcrumbData;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A944908);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 56) = 0;
  *(void *)(v8 + 16) = MEMORY[0x263F8EE78];
  *(void *)(v8 + 24) = v2;
  *(void *)(v8 + 32) = v3;
  *(void *)(v8 + 4sub_261A34804(0, 1, 2, 0) = v4;
  *(void *)(v8 + 48) = v5;
  *(void *)&v0[v7] = v8;
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for WKUIBreadcrumbPath();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t type metadata accessor for WKUIBreadcrumbPath()
{
  return self;
}

id WKUIBreadcrumbPath.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WKUIBreadcrumbPath();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

__n128 sub_261A38A74@<Q0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_coordinate);
  swift_beginAccess();
  __n128 result = *v3;
  *a2 = *v3;
  return result;
}

uint64_t sub_261A38AC8(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_coordinate);
  uint64_t result = swift_beginAccess();
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t method lookup function for WKUIBreadcrumbPath(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WKUIBreadcrumbPath);
}

uint64_t dispatch thunk of WKUIBreadcrumbPath.coordinate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t destroy for WKUIBreadcrumbPath.BreadcrumbData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WKUIBreadcrumbPath.BreadcrumbData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WKUIBreadcrumbPath.BreadcrumbData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WKUIBreadcrumbPath.BreadcrumbData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for WKUIBreadcrumbPath.BreadcrumbData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WKUIBreadcrumbPath.BreadcrumbData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4sub_261A34804(0, 1, 2, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4sub_261A34804(0, 1, 2, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WKUIBreadcrumbPath.BreadcrumbData()
{
  return &type metadata for WKUIBreadcrumbPath.BreadcrumbData;
}

void sub_261A38D28(double *a1)
{
  sub_261A38498(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t CurrentElevationMetricView.init(elevation:gpsUnavailable:formattingManager:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a5 = a1;
  *(unsigned char *)(a5 + 8) = a2 & 1;
  *(unsigned char *)(a5 + 9) = a3;
  *(void *)(a5 + 16) = a4;
  *(void *)(a5 + 24) = result;
  *(unsigned char *)(a5 + 32) = 0;
  return result;
}

uint64_t sub_261A38DA8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 32);
  id v4 = v1;
  sub_2619F7774(v2, v3);
  sub_2619F7774(v2, v3);
  sub_2619FA43C(v2, v3, v8);
  sub_2619F7790(v2, v3);

  sub_2619F7790(v2, v3);
  if (v8[0] <= 8u && ((1 << v8[0]) & 0x181) != 0)
  {
    if (qword_26B416690 == -1) {
      goto LABEL_6;
    }
    goto LABEL_7;
  }
  if (qword_26B416690 != -1) {
LABEL_7:
  }
    swift_once();
LABEL_6:
  swift_beginAccess();
  id v5 = (id)qword_26B416688;
  uint64_t v6 = sub_261B8AA48();

  return v6;
}

id sub_261A38F84()
{
  if (*(unsigned char *)(v0 + 8) & 1) != 0 || (*(unsigned char *)(v0 + 9))
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v1 = (id)qword_26B416688;
    uint64_t v2 = sub_261B8AA48();

    return (id)v2;
  }
  double v3 = *(double *)v0;
  id v4 = *(void **)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  char v6 = *(unsigned char *)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943570);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_261B94B90;
  id result = objc_msgSend(v4, sel_localizedStringWithDistanceInMeters_distanceType_unitStyle_, 5, 0, v3);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v9 = result;
  uint64_t v10 = sub_261B8F0F8();
  uint64_t v12 = v11;

  *(void *)(v7 + 32) = v10;
  *(void *)(v7 + 4sub_261A34804(0, 1, 2, 0) = v12;
  id v13 = v4;
  sub_2619F7774(v5, v6);
  id v14 = v13;
  sub_2619F7774(v5, v6);
  id result = objc_msgSend(v14, sel_unitManager);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  CLLocationDegrees v15 = result;
  id v16 = objc_msgSend(result, sel_userDistanceUnitForDistanceType_, 5);

  sub_2619F7790(v5, v6);
  id result = objc_msgSend(v14, sel_localizedShortUnitStringForDistanceUnit_textCase_, v16, 2);
  if (result)
  {
    MKMapPoint v17 = result;
    uint64_t v18 = sub_261B8F0F8();
    uint64_t v20 = v19;

    sub_2619F7790(v5, v6);
    *(void *)(v7 + 48) = v18;
    *(void *)(v7 + 56) = v20;
    *(void *)(v7 + 64) = sub_261A38DA8();
    *(void *)(v7 + 72) = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943578);
    sub_261A2902C();
    uint64_t v2 = sub_261B8F048();
    swift_bridgeObjectRelease();
    return (id)v2;
  }
LABEL_13:
  __break(1u);
  return result;
}

id CurrentElevationMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  double v3 = *(void **)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 32);
  if (*(unsigned char *)(v1 + 8) & 1) != 0 || (*(unsigned char *)(v1 + 9))
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v18 = (id)qword_26B416688;
    unint64_t v27 = 0xE000000000000000;
    uint64_t v16 = sub_261B8AA48();
    uint64_t v17 = v19;

    uint64_t v26 = 0;
    goto LABEL_10;
  }
  id result = objc_msgSend(v3, sel_localizedStringWithDistanceInMeters_distanceType_unitStyle_, 5, 0, *(double *)v1);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = result;
  uint64_t v8 = sub_261B8F0F8();
  uint64_t v24 = v9;
  uint64_t v25 = v8;

  id v10 = v3;
  sub_2619F7774(v4, v5);
  id v11 = v10;
  sub_2619F7774(v4, v5);
  id result = objc_msgSend(v11, sel_unitManager);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v12 = result;
  id v13 = objc_msgSend(result, sel_userDistanceUnitForDistanceType_, 5);

  sub_2619F7790(v4, v5);
  id result = objc_msgSend(v11, sel_localizedShortUnitStringForDistanceUnit_textCase_, v13, 2);
  if (result)
  {
    id v14 = result;
    uint64_t v26 = sub_261B8F0F8();
    unint64_t v27 = v15;

    sub_2619F7790(v4, v5);
    uint64_t v17 = v24;
    uint64_t v16 = v25;
LABEL_10:
    uint64_t v20 = sub_261A38DA8();
    uint64_t v22 = v21;
    id result = sub_261A38F84();
    *(void *)a1 = v16;
    *(void *)(a1 + 8) = v17;
    *(void *)(a1 + 16) = v26;
    *(void *)(a1 + 24) = v27;
    *(void *)(a1 + 32) = v20;
    *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v22;
    *(_WORD *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = result;
    *(void *)(a1 + 64) = v23;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_261A394F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for CurrentElevationMetricView(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  char v3 = *(unsigned char *)(a1 + 32);
  return sub_2619F7790(v2, v3);
}

uint64_t initializeWithCopy for CurrentElevationMetricView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  char v3 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  char v5 = *(unsigned char *)(a2 + 32);
  id v6 = v3;
  sub_2619F7774(v4, v5);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return a1;
}

uint64_t assignWithCopy for CurrentElevationMetricView(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  char v5 = (void *)a2[2];
  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v5;
  id v7 = v5;

  uint64_t v8 = v2[3];
  LOBYTE(v2) = *((unsigned char *)v2 + 32);
  sub_2619F7774(v8, (char)v2);
  uint64_t v9 = *(void *)(a1 + 24);
  char v10 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = (_BYTE)v2;
  sub_2619F7790(v9, v10);
  return a1;
}

uint64_t assignWithTake for CurrentElevationMetricView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v5;
  sub_2619F7790(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentElevationMetricView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CurrentElevationMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrentElevationMetricView()
{
  return &type metadata for CurrentElevationMetricView;
}

uint64_t WorkoutNotificationFont.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v32 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944A40);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944A48);
  MEMORY[0x270FA5388](v31);
  id v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944A50);
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)v2;
  char v16 = *(unsigned char *)(v2 + 8);
  char v17 = *(unsigned char *)(v2 + 9);
  if (FIUICurrentLanguageRequiresTallScript())
  {
    uint64_t v33 = v15;
    LOBYTE(v34) = v16;
    BYTE1(v34) = v17;
    uint64_t v18 = sub_261A39B4C();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944A58);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v14, v30, v20);
    uint64_t v21 = (uint64_t *)&v14[*(int *)(v12 + 36)];
    uint64_t *v21 = KeyPath;
    v21[1] = v18;
    sub_261A39F2C((uint64_t)v14, (uint64_t)v11);
    swift_storeEnumTagMultiPayload();
    unint64_t v22 = sub_261A39E68();
    uint64_t v33 = v12;
    unint64_t v34 = v22;
    swift_getOpaqueTypeConformance2();
    sub_261B8DD68();
    return sub_2619F8754((uint64_t)v14, &qword_26A944A50);
  }
  else
  {
    uint64_t v33 = v15;
    LOBYTE(v34) = v16;
    BYTE1(v34) = v17;
    uint64_t v24 = sub_261A39B4C();
    uint64_t v25 = swift_getKeyPath();
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944A58);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v14, v30, v26);
    unint64_t v27 = (uint64_t *)&v14[*(int *)(v12 + 36)];
    uint64_t *v27 = v25;
    v27[1] = v24;
    _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
    unint64_t v28 = sub_261A39E68();
    sub_261B8E638();
    sub_2619F8754((uint64_t)v14, &qword_26A944A50);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v7, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v11, v9, v3);
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = v12;
    unint64_t v34 = v28;
    swift_getOpaqueTypeConformance2();
    sub_261B8DD68();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

uint64_t sub_261A39B4C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)v0;
  char v5 = *(unsigned char *)(v0 + 8);
  int v6 = *(unsigned __int8 *)(v0 + 9);
  sub_2619F7774(*(void *)v0, v5);
  sub_2619FA43C(v4, v5, &v15);
  sub_2619F7790(v4, v5);
  if (v15 == 6) {
    sub_261B8E158();
  }
  else {
    sub_261B8E148();
  }
  sub_2619F7774(v4, v5);
  sub_2619FA43C(v4, v5, &v14);
  sub_2619F7790(v4, v5);
  _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0(&v14);
  uint64_t v7 = *MEMORY[0x263F1A610];
  uint64_t v8 = sub_261B8E118();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v3, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v3, 0, 1, v8);
  sub_261B8E188();
  sub_2619F8754((uint64_t)v3, &qword_26A943488);
  uint64_t v10 = sub_261B8E088();
  swift_release();
  if (v6)
  {
    uint64_t v11 = sub_261B8E098();
    swift_release();
    return v11;
  }
  return v10;
}

uint64_t static WorkoutNotificationFont.multilineTextView(with:lineLimit:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  sub_261A029C4();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_261B8E3D8();
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v8 & 1;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = KeyPath;
  *(_WORD *)(a2 + 4sub_261A34804(0, 1, 2, 0) = 0;
  *(void *)(a2 + 48) = v12;
  *(void *)(a2 + 56) = 0x3FE0000000000000;
  *(void *)(a2 + 64) = result;
  *(void *)(a2 + 72) = a1;
  *(unsigned char *)(a2 + 8sub_261A34804(0, 1, 2, 0) = 0;
  return result;
}

uint64_t sub_261A39E14@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_261B8D918();
  *a1 = v3;
  return result;
}

uint64_t sub_261A39E40()
{
  return sub_261B8D928();
}

unint64_t sub_261A39E68()
{
  unint64_t result = qword_26A944A60;
  if (!qword_26A944A60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944A50);
    sub_2619F8AB8(&qword_26A944A68, &qword_26A944A58);
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944A60);
  }
  return result;
}

uint64_t sub_261A39F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A39F9C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_261B8D918();
  *a1 = v3;
  return result;
}

uint64_t sub_261A39FC8()
{
  return sub_261B8D928();
}

uint64_t sub_261A39FF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for WorkoutNotificationFont(uint64_t a1)
{
  return sub_2619F7790(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t _s9WorkoutUI23WorkoutNotificationFontVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_2619F7774(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t assignWithCopy for WorkoutNotificationFont(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_2619F7774(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_2619F7790(v6, v7);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for WorkoutNotificationFont(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_2619F7790(v6, v7);
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutNotificationFont(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutNotificationFont(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 1sub_261A34804(0, 1, 2, 0) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 1sub_261A34804(0, 1, 2, 0) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutNotificationFont()
{
  return &type metadata for WorkoutNotificationFont;
}

unint64_t sub_261A3A1DC()
{
  unint64_t result = qword_26A944A70;
  if (!qword_26A944A70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944A78);
    sub_261A39E68();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944A50);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944A70);
  }
  return result;
}

unint64_t sub_261A3A288()
{
  unint64_t result = qword_26A944A80;
  if (!qword_26A944A80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944A88);
    sub_261A3A328();
    sub_2619F8AB8(&qword_26A9430E8, &qword_26A9430F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944A80);
  }
  return result;
}

unint64_t sub_261A3A328()
{
  unint64_t result = qword_26A944A90;
  if (!qword_26A944A90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944A98);
    sub_261A3A3C8();
    sub_2619F8AB8(&qword_26A943050, &qword_26A943058);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944A90);
  }
  return result;
}

unint64_t sub_261A3A3C8()
{
  unint64_t result = qword_26A944AA0;
  if (!qword_26A944AA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944AA8);
    sub_261A3A444();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944AA0);
  }
  return result;
}

unint64_t sub_261A3A444()
{
  unint64_t result = qword_26A944AB0;
  if (!qword_26A944AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944AB0);
  }
  return result;
}

uint64_t destroy for TrainingLoadGradientView()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrainingLoadGradientView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TrainingLoadGradientView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for TrainingLoadGradientView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadGradientView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadGradientView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4sub_261A34804(0, 1, 2, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadGradientView()
{
  return &type metadata for TrainingLoadGradientView;
}

uint64_t sub_261A3A698()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A3A6B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_261B8DAE8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944AB8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944AC0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944AC8);
  uint64_t result = MEMORY[0x270FA5388](v13);
  char v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(*(void *)(v1 + 8) + 16);
  v22[1] = a1;
  if (!v17)
  {
    uint64_t v19 = 0;
    goto LABEL_7;
  }
  double v18 = *(double *)(v1 + 16);
  if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v18 < 9.22337204e18)
  {
    uint64_t v19 = (uint64_t)v18 / v17;
LABEL_7:
    sub_261A3AA00(v1, v19);
    sub_261B8EC98();
    sub_261B8D4D8();
    sub_2619F86F0((uint64_t)v9, (uint64_t)v12, &qword_26A944AB8);
    uint64_t v20 = &v12[*(int *)(v10 + 36)];
    long long v21 = v24;
    *(_OWORD *)uint64_t v20 = v23;
    *((_OWORD *)v20 + sub_261A34804(3, 0, 0, 1) = v21;
    *((_OWORD *)v20 + 2) = v25;
    sub_2619F8754((uint64_t)v9, &qword_26A944AB8);
    sub_2619F86F0((uint64_t)v12, (uint64_t)v16, &qword_26A944AC0);
    *(_OWORD *)&v16[*(int *)(v13 + 36)] = xmmword_261B94D70;
    sub_2619F8754((uint64_t)v12, &qword_26A944AC0);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F19790], v3);
    sub_261A3BAA0(&qword_26A944AD0, &qword_26A944AC8, (void (*)(void))sub_261A3BA70);
    sub_261B8E548();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_2619F8754((uint64_t)v16, &qword_26A944AC8);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_261A3AA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B00);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B08);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(*(void *)(a1 + 8) + 16) > 1uLL)
  {
    *(void *)uint64_t v6 = sub_261B8DAB8();
    *((void *)v6 + sub_261A34804(3, 0, 0, 1) = 0;
    v6[16] = 0;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B10);
    sub_261A3ACA0(a1, a2, &v6[*(int *)(v11 + 44)]);
    sub_2619F86F0((uint64_t)v6, (uint64_t)v9, &qword_26A944B00);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9440F8);
    sub_261A3BE30((unint64_t *)&qword_26A9440F0, &qword_26A9440F8, (unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    sub_2619F8AB8(&qword_26A944AF8, &qword_26A944B00);
    sub_261B8DD68();
    return sub_2619F8754((uint64_t)v6, &qword_26A944B00);
  }
  else
  {
    if (qword_26A942EA0 != -1) {
      swift_once();
    }
    *uint64_t v9 = qword_26A9536B8;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9440F8);
    sub_261A3BE30((unint64_t *)&qword_26A9440F0, &qword_26A9440F8, (unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    sub_2619F8AB8(&qword_26A944AF8, &qword_26A944B00);
    return sub_261B8DD68();
  }
}

uint64_t sub_261A3ACA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B18);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&KeyPath - v12;
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = v14 * a2;
  if ((unsigned __int128)(v14 * (__int128)a2) >> 64 == (v14 * a2) >> 63)
  {
    uint64_t v16 = *(void *)(*(void *)(a1 + 8) + 16);
    if (v16 >= v14)
    {
      uint64_t v36 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v36 = *(void *)a1;
      swift_retain();
      sub_261B8EC98();
      uint64_t result = sub_261B8D4D8();
      uint64_t v17 = v39;
      uint64_t v18 = v40;
      uint64_t v19 = v41;
      uint64_t v20 = v42;
      uint64_t v21 = v43;
      uint64_t v22 = v44;
    }
    if (v16)
    {
      uint64_t v34 = v22;
      uint64_t v35 = v17;
      uint64_t v37 = 0;
      uint64_t v38 = v16 - 1;
      uint64_t v30 = v18;
      uint64_t v31 = v19;
      uint64_t v32 = v20;
      uint64_t v33 = v21;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v23 = swift_allocObject();
      long long v24 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v23 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(v23 + 32) = v24;
      *(_OWORD *)(v23 + 48) = *(_OWORD *)(a1 + 32);
      *(void *)(v23 + 64) = *(void *)(a1 + 48);
      *(void *)(v23 + 72) = a2;
      *(double *)(v23 + 8sub_261A34804(0, 1, 2, 0) = (double)v15;
      sub_261A3BCA0(a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435F0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B20);
      sub_261A03EF0();
      sub_261A3BD14(&qword_26A944B28, &qword_26A944B20, (void (*)(void))sub_261A3BCD8, (void (*)(void))sub_261A3BF70);
      sub_261B8EBE8();
      long long v25 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v25(v10, v13, v6);
      uint64_t v26 = v35;
      *(void *)a3 = v36;
      *((void *)a3 + sub_261A34804(3, 0, 0, 1) = v26;
      *((void *)a3 + 2) = v30;
      *((void *)a3 + 3) = v31;
      *((void *)a3 + 4) = v32;
      *((void *)a3 + 5) = v33;
      *((void *)a3 + 6) = v34;
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B90);
      v25(&a3[*(int *)(v27 + 48)], v10, v6);
      unint64_t v28 = *(void (**)(char *, uint64_t))(v7 + 8);
      swift_retain();
      v28(v13, v6);
      v28(v10, v6);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_261A3B00C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v48 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B98);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BA0);
  MEMORY[0x270FA5388](v45);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B48);
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B38);
  MEMORY[0x270FA5388](v12);
  double v47 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  MEMORY[0x270FA5388](View);
  uint64_t v17 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = *a1;
  if ((v18 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  double v51 = v7;
  uint64_t v19 = *(void *)(a2 + 8);
  unint64_t v20 = *(void *)(v19 + 16);
  if (v18 >= v20)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v50 = v12;
  uint64_t v49 = v5;
  uint64_t v21 = v19 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v22 = *(void *)(v15 + 72);
  sub_261A3C02C(v21 + v22 * v18, (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = v17;
  if (v18 != v20 - 1)
  {
    if (v18 + 1 < v20)
    {
      uint64_t v17 = v48;
      unint64_t v28 = sub_261A3C090(v52, v21 + v22 * (v18 + 1), v48);
      if (v28)
      {
        unint64_t v29 = v28;
        uint64_t v30 = *(void *)(v28 + 16);
        if (v30)
        {
          *(void *)&long long v58 = 0;
          *((void *)&v58 + sub_261A34804(3, 0, 0, 1) = v30 - 1;
          swift_getKeyPath();
          uint64_t v31 = swift_allocObject();
          *(void *)(v31 + 16) = v29;
          long long v32 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(v31 + 24) = *(_OWORD *)a2;
          *(_OWORD *)(v31 + 4sub_261A34804(0, 1, 2, 0) = v32;
          *(_OWORD *)(v31 + 56) = *(_OWORD *)(a2 + 32);
          *(void *)(v31 + 72) = *(void *)(a2 + 48);
          sub_261A3BCA0(a2);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435F0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B58);
          sub_261A03EF0();
          sub_261A3BE30(&qword_26A944B50, &qword_26A944B58, &qword_26A944B60, &qword_26A944B68);
          sub_261B8EBE8();
          uint64_t v33 = v44;
          uint64_t v34 = v46;
          (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v9, v11, v46);
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B78);
          sub_261A3BD9C();
          sub_261A3BED4();
          unint64_t v20 = (unint64_t)v47;
          sub_261B8DD68();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
          uint64_t v17 = (uint64_t)v51;
LABEL_20:
          sub_2619F86F0(v20, v17, &qword_26A944B38);
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B88);
          sub_261A3BCD8();
          sub_261A3BF70();
          sub_261B8DD68();
          sub_2619F8754(v20, &qword_26A944B38);
          return sub_261A3CA74(v52);
        }
LABEL_25:
        __break(1u);
LABEL_26:
        swift_once();
        goto LABEL_6;
      }
      if (*(void *)(a2 + 48) / 28 <= 1) {
        uint64_t v36 = 1;
      }
      else {
        uint64_t v36 = *(void *)(a2 + 48) / 28;
      }
      if ((unsigned __int128)(v36 * (__int128)v17) >> 64 == (v36 * v17) >> 63)
      {
        uint64_t v17 = (uint64_t)v51;
        unint64_t v20 = (unint64_t)v47;
        if (qword_26A942EA0 == -1)
        {
LABEL_19:
          uint64_t v37 = qword_26A9536B8;
          swift_retain();
          sub_261B8EC98();
          sub_261B8D4D8();
          uint64_t v38 = v58;
          char v39 = BYTE8(v58);
          uint64_t v40 = v59;
          char v41 = BYTE8(v59);
          *(void *)uint64_t v9 = v37;
          *((void *)v9 + sub_261A34804(3, 0, 0, 1) = v38;
          unsigned char v9[16] = v39;
          *((void *)v9 + 3) = v40;
          v9[32] = v41;
          *(_OWORD *)(v9 + 4sub_261A34804(0, 1, 2, 0) = v60;
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B78);
          sub_261A3BD9C();
          sub_261A3BED4();
          sub_261B8DD68();
          goto LABEL_20;
        }
      }
      else
      {
        __break(1u);
      }
      swift_once();
      goto LABEL_19;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((*(unsigned char *)(v17 + *(int *)(View + 32) + 8) & 1) == 0)
  {
    uint64_t v35 = sub_261A3CB24(v17, *(double *)(a2 + 32), *(double *)(a2 + 40));
    sub_261B8ED38();
    sub_261B8ED28();
    MEMORY[0x263E4CB20](v35);
    sub_261B8D5D8();
    uint64_t v53 = v61;
    long long v54 = v62;
    long long v55 = v63;
    int v56 = 1053609165;
    char v57 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9440F8);
    sub_261A3BE30(&qword_26A944B50, &qword_26A944B58, &qword_26A944B60, &qword_26A944B68);
    sub_261A3BE30((unint64_t *)&qword_26A9440F0, &qword_26A9440F8, (unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    sub_261B8DD68();
    long long v23 = v58;
    long long v24 = v59;
    uint64_t v25 = v60;
    int v26 = DWORD2(v60);
    char v27 = BYTE12(v60);
    uint64_t v17 = (uint64_t)v51;
    goto LABEL_12;
  }
  uint64_t v17 = (uint64_t)v51;
  if (qword_26A942EA0 != -1) {
    goto LABEL_26;
  }
LABEL_6:
  uint64_t v53 = qword_26A9536B8;
  long long v54 = 0u;
  long long v55 = 0u;
  int v56 = 0;
  char v57 = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9440F8);
  sub_261A3BE30(&qword_26A944B50, &qword_26A944B58, &qword_26A944B60, &qword_26A944B68);
  sub_261A3BE30((unint64_t *)&qword_26A9440F0, &qword_26A9440F8, (unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
  sub_261B8DD68();
  long long v23 = v58;
  long long v24 = v59;
  uint64_t v25 = v60;
  int v26 = DWORD2(v60);
  char v27 = BYTE12(v60);
LABEL_12:
  *(_OWORD *)uint64_t v17 = v23;
  *(_OWORD *)(v17 + 16) = v24;
  *(void *)(v17 + 32) = v25;
  *(_DWORD *)(v17 + 4sub_261A34804(0, 1, 2, 0) = v26;
  *(unsigned char *)(v17 + 44) = v27;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944B88);
  sub_261A3BCD8();
  sub_261A3BF70();
  sub_261B8DD68();
  return sub_261A3CA74(v52);
}

unint64_t *sub_261A3B904@<X0>(unint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v4 < *(void *)(a2 + 16))
  {
    uint64_t v8 = *(void *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) - 8);
    uint64_t v9 = sub_261A3CB24(a2+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v4, *(double *)(a3 + 32), *(double *)(a3 + 40));
    sub_261B8ED38();
    sub_261B8ED28();
    MEMORY[0x263E4CB20](v9);
    uint64_t result = (unint64_t *)sub_261B8D5D8();
    *(void *)a4 = v10;
    *(_OWORD *)(a4 + 8) = v11;
    *(_OWORD *)(a4 + 24) = v12;
    *(_DWORD *)(a4 + 4sub_261A34804(0, 1, 2, 0) = 1053609165;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_261A3BA2C@<X0>(uint64_t a1@<X8>)
{
  return sub_261A3A6B4(a1);
}

uint64_t sub_261A3BA70()
{
  return sub_261A3BAA0(&qword_26A944AD8, &qword_26A944AC0, (void (*)(void))sub_261A3BB1C);
}

uint64_t sub_261A3BAA0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A3BB1C()
{
  unint64_t result = qword_26A944AE0;
  if (!qword_26A944AE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944AB8);
    sub_261A3BB90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944AE0);
  }
  return result;
}

unint64_t sub_261A3BB90()
{
  unint64_t result = qword_26A944AE8;
  if (!qword_26A944AE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944AF0);
    sub_261A3BE30((unint64_t *)&qword_26A9440F0, &qword_26A9440F8, (unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    sub_2619F8AB8(&qword_26A944AF8, &qword_26A944B00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944AE8);
  }
  return result;
}

uint64_t sub_261A3BC50()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_261A3BC90(unint64_t *a1)
{
  return sub_261A3B00C(a1, v1 + 16, *(void *)(v1 + 72));
}

uint64_t sub_261A3BCA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A3BCD8()
{
  return sub_261A3BD14(&qword_26A944B30, &qword_26A944B38, (void (*)(void))sub_261A3BD9C, (void (*)(void))sub_261A3BED4);
}

uint64_t sub_261A3BD14(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A3BD9C()
{
  unint64_t result = qword_26A944B40;
  if (!qword_26A944B40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944B48);
    sub_261A3BE30(&qword_26A944B50, &qword_26A944B58, &qword_26A944B60, &qword_26A944B68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944B40);
  }
  return result;
}

uint64_t sub_261A3BE30(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_261A26184();
    sub_2619F8AB8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A3BED4()
{
  unint64_t result = qword_26A944B70;
  if (!qword_26A944B70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944B78);
    sub_261A3BE30((unint64_t *)&qword_26A9440F0, &qword_26A9440F8, (unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944B70);
  }
  return result;
}

unint64_t sub_261A3BF70()
{
  unint64_t result = qword_26A944B80;
  if (!qword_26A944B80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944B88);
    sub_261A3BE30(&qword_26A944B50, &qword_26A944B58, &qword_26A944B60, &qword_26A944B68);
    sub_261A3BE30((unint64_t *)&qword_26A9440F0, &qword_26A9440F8, (unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944B80);
  }
  return result;
}

uint64_t sub_261A3C02C(uint64_t a1, uint64_t a2)
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(View - 8) + 16))(a2, a1, View);
  return a2;
}

unint64_t sub_261A3C090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v105 = sub_261B8EEC8();
  uint64_t v107 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  long long v104 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v103 = *((void *)View - 1);
  MEMORY[0x270FA5388](View);
  uint64_t v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8E838();
  long long v108 = *(void (***)(char *, uint64_t))(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v97 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_261B8C988();
  uint64_t v12 = *(void *)(v98 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v98);
  char v99 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  long long v102 = (char *)&v72 - v15;
  uint64_t v16 = sub_261B8ADD8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  long long v101 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v100 = (char *)&v72 - v21;
  MEMORY[0x270FA5388](v20);
  long long v23 = (char *)&v72 - v22;
  uint64_t v106 = a3;
  if (a3 >= 1)
  {
    uint64_t v24 = View[6];
    uint64_t v25 = (double *)(a1 + v24);
    if ((*(unsigned char *)(a1 + v24 + 8) & 1) == 0)
    {
      uint64_t v26 = a2 + v24;
      if ((*(unsigned char *)(v26 + 8) & 1) == 0)
      {
        uint64_t v27 = View[8];
        unint64_t v28 = (double *)(a1 + v27);
        if ((*(unsigned char *)(a1 + v27 + 8) & 1) == 0)
        {
          uint64_t v29 = a2 + v27;
          if ((*(unsigned char *)(v29 + 8) & 1) == 0)
          {
            uint64_t v88 = v10;
            double v32 = *v25;
            double v33 = *(double *)v26;
            double v34 = *v28;
            double v35 = *(double *)v29;
            sub_261B8AD28();
            double v37 = v36;
            uint64_t v38 = 0;
            double v39 = v33 - v32;
            double v40 = v35 - v34;
            int v91 = *MEMORY[0x263F42C00];
            int v85 = *MEMORY[0x263F42BF0];
            int v81 = *MEMORY[0x263F42BE0];
            int v78 = *MEMORY[0x263F42BE8];
            int v76 = *MEMORY[0x263F42BF8];
            unsigned int v87 = *MEMORY[0x263F1B388];
            unint64_t v30 = MEMORY[0x263F8EE78];
            uint64_t v90 = (void (**)(char *, char *, uint64_t))(v12 + 16);
            uint64_t v89 = (uint64_t (**)(char *, uint64_t))(v12 + 88);
            uint64_t v92 = (void (**)(char *, uint64_t))(v12 + 8);
            uint64_t v86 = (void (**)(char *, void, uint64_t))(v108 + 13);
            uint64_t v95 = (void (**)(char *, char *, uint64_t))(v17 + 16);
            long long v108 = (void (**)(char *, uint64_t))(v17 + 8);
            long long v94 = (void (**)(char *, char *, uint64_t))(v17 + 32);
            uint64_t v93 = (void (**)(char *, char *, uint64_t))(v107 + 32);
            uint64_t v84 = 0x3FDF9F9F9F9F9FA0;
            uint64_t v83 = 0x3FDA9A9A9A9A9A9BLL;
            uint64_t v82 = 0x3FEAFAFAFAFAFAFBLL;
            uint64_t v80 = 0x3FE0505050505050;
            uint64_t v79 = 0x3FE0D0D0D0D0D0D1;
            uint64_t v77 = 0x3FE5D5D5D5D5D5D6;
            uint64_t v75 = 0x3FE7575757575757;
            uint64_t v74 = 0x3FDC5C5C5C5C5C5CLL;
            uint64_t v73 = 0x3FDB1B1B1B1B1B1BLL;
            uint64_t v72 = 0x3FECBCBCBCBCBCBDLL;
            uint64_t v96 = a1;
            char v41 = v101;
            while (1)
            {
              uint64_t v107 = v38 + 1;
              sub_261B8AD38();
              sub_261B8AD28();
              double v43 = v32 + v39 * v42 / v37;
              sub_261B8AD28();
              double v45 = v34 + v40 * v44 / v37;
              if (v45 > 0.0) {
                break;
              }
              uint64_t v58 = sub_261B8E858();
LABEL_23:
              long long v63 = *v95;
              MKMapRect v64 = v100;
              (*v95)(v100, v23, v16);
              v63(v41, v64, v16);
              swift_retain();
              MKMapRect v65 = v104;
              sub_261B8EE68();
              uint64_t v66 = *v108;
              (*v108)(v64, v16);
              uint64_t v67 = &v9[View[6]];
              uint64_t v68 = &v9[View[8]];
              *(double *)uint64_t v67 = v43;
              v67[8] = 0;
              (*v94)(v9, v41, v16);
              (*v93)(&v9[View[5]], v65, v105);
              *(void *)&v9[View[7]] = v58;
              *(double *)uint64_t v68 = v45;
              v68[8] = 0;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v30 = sub_261A0B0A0(0, *(void *)(v30 + 16) + 1, 1, v30);
              }
              unint64_t v70 = *(void *)(v30 + 16);
              unint64_t v69 = *(void *)(v30 + 24);
              if (v70 >= v69 >> 1) {
                unint64_t v30 = sub_261A0B0A0(v69 > 1, v70 + 1, 1, v30);
              }
              *(void *)(v30 + 16) = v70 + 1;
              sub_261A3D138((uint64_t)v9, v30+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v70);
              swift_release();
              v66(v23, v16);
              uint64_t v38 = v107;
              if (v106 == v107) {
                return v30;
              }
            }
            uint64_t v46 = v102;
            sub_261B8C958();
            double v47 = v99;
            uint64_t v48 = v46;
            uint64_t v49 = v98;
            (*v90)(v99, v48, v98);
            int v50 = (*v89)(v47, v49);
            if (v50 == v91)
            {
              double v51 = v97;
              (*v86)(v97, v87, v88);
              v53.n128_u64[0] = 1.0;
              long long v54 = v51;
              v55.n128_u64[0] = v84;
              v56.n128_u64[0] = v83;
              char v57 = (char **)&v111;
LABEL_12:
              v52.n128_u64[0] = (unint64_t)*(v57 - 32);
LABEL_21:
              uint64_t v58 = MEMORY[0x263E4C7A0](v54, v55, v56, v52, v53);
LABEL_22:
              (*v92)(v102, v49);
              goto LABEL_23;
            }
            if (v50 == v85)
            {
              long long v59 = v97;
              (*v86)(v97, v87, v88);
              v52.n128_u64[0] = 1.0;
              v53.n128_u64[0] = 1.0;
              long long v54 = v59;
              v55.n128_u64[0] = v80;
              long long v60 = &v110;
            }
            else if (v50 == v81)
            {
              uint64_t v61 = v97;
              (*v86)(v97, v87, v88);
              v55.n128_u64[0] = 0x3FD5555555555555;
              v52.n128_u64[0] = 1.0;
              v53.n128_u64[0] = 1.0;
              long long v54 = v61;
              long long v60 = (uint64_t *)&v109;
            }
            else
            {
              if (v50 != v78)
              {
                if (v50 != v76)
                {
                  uint64_t v58 = sub_261B8E888();
                  (*v92)(v99, v49);
                  goto LABEL_22;
                }
                uint64_t v71 = v97;
                (*v86)(v97, v87, v88);
                v55.n128_u64[0] = 1.0;
                v53.n128_u64[0] = 1.0;
                long long v54 = v71;
                v56.n128_u64[0] = v73;
                char v57 = &v104;
                goto LABEL_12;
              }
              long long v62 = v97;
              (*v86)(v97, v87, v88);
              v52.n128_u64[0] = 1.0;
              v53.n128_u64[0] = 1.0;
              long long v54 = v62;
              v55.n128_u64[0] = v75;
              long long v60 = &v106;
            }
            v56.n128_u64[0] = *(v60 - 32);
            goto LABEL_21;
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_261A3CA74(uint64_t a1)
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(View - 8) + 8))(a1, View);
  return a1;
}

uint64_t sub_261A3CAD0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

unint64_t *sub_261A3CB18@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_261A3B904(a1, *(void *)(v2 + 16), v2 + 24, a2);
}

void *sub_261A3CB24(uint64_t a1, double a2, double a3)
{
  uint64_t v61 = sub_261B8E838();
  uint64_t v5 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  long long v60 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8C988();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v68 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v46 - v11;
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) + 32));
  uint64_t v67 = *v13;
  int v66 = *((unsigned __int8 *)v13 + 8);
  uint64_t v14 = sub_261B8C968();
  uint64_t v15 = *(void *)(v14 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v16 = v8 + 16;
  unint64_t v69 = v17;
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64);
  uint64_t v58 = v14;
  unint64_t v19 = v14 + v18;
  uint64_t v20 = *(void *)(v16 + 56);
  long long v63 = (uint64_t (**)(char *, uint64_t))(v16 + 72);
  uint64_t v64 = v20;
  int v62 = *MEMORY[0x263F42C00];
  int v57 = *MEMORY[0x263F42BF0];
  int v56 = *MEMORY[0x263F42BE0];
  int v53 = *MEMORY[0x263F42BE8];
  int v51 = *MEMORY[0x263F42BF8];
  uint64_t v21 = (void (**)(char *, uint64_t))(v16 - 8);
  unsigned int v59 = *MEMORY[0x263F1B388];
  uint64_t v22 = (void (**)(char *, void, uint64_t))(v5 + 104);
  long long v23 = (void *)MEMORY[0x263F8EE78];
  uint64_t v55 = 0x3FE0505050505050;
  uint64_t v54 = 0x3FE0D0D0D0D0D0D1;
  uint64_t v52 = 0x3FE5D5D5D5D5D5D6;
  uint64_t v50 = 0x3FE7575757575757;
  uint64_t v49 = 0x3FDC5C5C5C5C5C5CLL;
  uint64_t v48 = 0x3FDB1B1B1B1B1B1BLL;
  uint64_t v47 = 0x3FECBCBCBCBCBCBDLL;
  uint64_t v65 = v16;
  do
  {
    v69(v12, v19, v7);
    sub_261B8C938();
    double v25 = v24;
    sub_261B8C938();
    if (sub_261B8C978() || v25 <= a3) {
      sub_261B8C978();
    }
    uint64_t v26 = v68;
    v69(v68, (unint64_t)v12, v7);
    int v27 = (*v63)(v26, v7);
    if (v27 == v62)
    {
      unint64_t v28 = v60;
      (*v22)(v60, v59, v61);
      v29.n128_u64[0] = 1.0;
      unint64_t v30 = v28;
      v31.n128_u64[0] = 0x3FDF9F9F9F9F9FA0;
      v32.n128_u64[0] = 0x3FDA9A9A9A9A9A9BLL;
      v33.n128_u64[0] = 0x3FEAFAFAFAFAFAFBLL;
LABEL_15:
      MEMORY[0x263E4C7A0](v30, v31, v32, v33, v29);
      goto LABEL_16;
    }
    if (v27 == v57)
    {
      double v34 = v60;
      (*v22)(v60, v59, v61);
      v33.n128_u64[0] = 1.0;
      v29.n128_u64[0] = 1.0;
      unint64_t v30 = v34;
      v31.n128_u64[0] = v55;
      double v35 = &v72;
LABEL_14:
      v32.n128_u64[0] = *(v35 - 32);
      goto LABEL_15;
    }
    if (v27 == v56)
    {
      double v36 = v60;
      (*v22)(v60, v59, v61);
      v31.n128_u64[0] = 0x3FD5555555555555;
      v33.n128_u64[0] = 1.0;
      v29.n128_u64[0] = 1.0;
      unint64_t v30 = v36;
      double v35 = &v71;
      goto LABEL_14;
    }
    if (v27 == v53)
    {
      double v37 = v60;
      (*v22)(v60, v59, v61);
      v33.n128_u64[0] = 1.0;
      v29.n128_u64[0] = 1.0;
      unint64_t v30 = v37;
      v31.n128_u64[0] = v50;
      double v35 = &v70;
      goto LABEL_14;
    }
    if (v27 == v51)
    {
      double v44 = v60;
      (*v22)(v60, v59, v61);
      v31.n128_u64[0] = 1.0;
      v29.n128_u64[0] = 1.0;
      unint64_t v30 = v44;
      v32.n128_u64[0] = v48;
      v33.n128_u64[0] = v47;
      goto LABEL_15;
    }
    sub_261B8E888();
    (*v21)(v68, v7);
LABEL_16:
    uint64_t v38 = sub_261B8EC48();
    uint64_t v40 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v23 = sub_261A0B0D4(0, v23[2] + 1, 1, v23);
    }
    unint64_t v42 = v23[2];
    unint64_t v41 = v23[3];
    if (v42 >= v41 >> 1) {
      long long v23 = sub_261A0B0D4((void *)(v41 > 1), v42 + 1, 1, v23);
    }
    v23[2] = v42 + 1;
    double v43 = &v23[2 * v42];
    v43[4] = v38;
    v43[5] = v40;
    (*v21)(v12, v7);
    v19 += v64;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_261A3D138(uint64_t a1, uint64_t a2)
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(View - 8) + 32))(a2, a1, View);
  return a2;
}

uint64_t sub_261A3D19C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_261A3D224(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_261B8ADD8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
    uint64_t v9 = DayEntry[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = DayEntry[6];
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    *uint64_t v13 = v16;
    v13[1] = v15;
    uint64_t v17 = DayEntry[7];
    unint64_t v18 = (uint64_t *)((char *)a1 + v17);
    unint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)a1 + DayEntry[8]) = *(uint64_t *)((char *)a2 + DayEntry[8]);
    uint64_t v21 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v22 = (char *)a1 + v21;
    long long v23 = (char *)a2 + v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BA8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    uint64_t v25 = a3[7];
    uint64_t v26 = (uint64_t *)((char *)a1 + v25);
    int v27 = (uint64_t *)((char *)a2 + v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_261B8D728();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      void *v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_261A3D450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for TrainingLoadDayEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_261B8D728();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_261A3D5C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v8 = DayEntry[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = DayEntry[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  uint64_t v16 = DayEntry[7];
  uint64_t v17 = (void *)(a1 + v16);
  unint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  *(void *)(a1 + DayEntry[8]) = *(void *)(a2 + DayEntry[8]);
  uint64_t v20 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[7];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_261B8D728();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  else
  {
    void *v25 = *v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_261A3D794(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v8 = DayEntry[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v12 = DayEntry[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = DayEntry[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + DayEntry[8]) = *(void *)(a2 + DayEntry[8]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v18 = a3[6];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  if (a1 != a2)
  {
    uint64_t v22 = a3[7];
    uint64_t v23 = (void *)(a1 + v22);
    uint64_t v24 = (void *)(a2 + v22);
    sub_2619F8754(a1 + v22, &qword_26A943210);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_261B8D728();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      void *v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_261A3D9A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v8 = DayEntry[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(_OWORD *)(a1 + DayEntry[6]) = *(_OWORD *)(a2 + DayEntry[6]);
  *(_OWORD *)(a1 + DayEntry[7]) = *(_OWORD *)(a2 + DayEntry[7]);
  *(void *)(a1 + DayEntry[8]) = *(void *)(a2 + DayEntry[8]);
  uint64_t v11 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_261B8D728();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  return a1;
}

uint64_t sub_261A3DB5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v8 = DayEntry[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = DayEntry[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = DayEntry[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  void *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(void *)(a1 + DayEntry[8]) = *(void *)(a2 + DayEntry[8]);
  swift_release();
  uint64_t v21 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  if (a1 != a2)
  {
    uint64_t v25 = a3[7];
    uint64_t v26 = (void *)(a1 + v25);
    uint64_t v27 = (const void *)(a2 + v25);
    sub_2619F8754(a1 + v25, &qword_26A943210);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = sub_261B8D728();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_261A3DD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A3DD68);
}

uint64_t sub_261A3DD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  DayEntrdouble y = type metadata accessor for TrainingLoadDayEntry();
  uint64_t v7 = *(void *)(DayEntry - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = DayEntry;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BA8);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BB0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 28);
  return v15(v17, a2, v16);
}

uint64_t sub_261A3DEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A3DED0);
}

uint64_t sub_261A3DED0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  DayEntrdouble y = type metadata accessor for TrainingLoadDayEntry();
  uint64_t v9 = *(void *)(DayEntry - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = DayEntry;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BA8);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BB0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 28);
  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for TrainingLoadDayWidgetSystemSmallView()
{
  uint64_t result = qword_26A944BB8;
  if (!qword_26A944BB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_261A3E07C()
{
  type metadata accessor for TrainingLoadDayEntry();
  if (v0 <= 0x3F)
  {
    sub_261A3E18C();
    if (v1 <= 0x3F)
    {
      sub_261A3E23C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_261A3E18C()
{
  if (!qword_26A944BC8)
  {
    sub_261A3E1E8();
    unint64_t v0 = sub_261B8D458();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A944BC8);
    }
  }
}

unint64_t sub_261A3E1E8()
{
  unint64_t result = qword_26A944BD0;
  if (!qword_26A944BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944BD0);
  }
  return result;
}

void sub_261A3E23C()
{
  if (!qword_26A944BD8)
  {
    sub_261B8D728();
    unint64_t v0 = sub_261B8D3D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A944BD8);
    }
  }
}

uint64_t sub_261A3E294()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A3E2B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8D728();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v14 - v7;
  type metadata accessor for TrainingLoadDayWidgetSystemSmallView();
  sub_2619FA8A0((uint64_t)v8);
  sub_261A3FD70(&qword_26A944C38);
  sub_261B8F7D8();
  sub_261A3FD70(&qword_26A944C40);
  char v9 = sub_261B8F0A8();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  v10(v8, v2);
  if (v9)
  {
    uint64_t v11 = *(void *)(v1 + *(int *)(type metadata accessor for TrainingLoadDayEntry() + 24));
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v12 = (id)qword_26B416688;
    uint64_t v11 = sub_261B8AA48();
  }
  return v11;
}

uint64_t sub_261A3E51C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v70 = a1;
  uint64_t v3 = sub_261B8DF18();
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v67 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BE0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BE8);
  MEMORY[0x270FA5388](v57);
  char v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943438);
  MEMORY[0x270FA5388](v58);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943440);
  MEMORY[0x270FA5388](v62);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BF0);
  uint64_t v63 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BF8);
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C00);
  uint64_t v60 = *(void *)(v18 - 8);
  uint64_t v61 = v18;
  MEMORY[0x270FA5388](v18);
  unsigned int v59 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = sub_261B8DBE8();
  *((void *)v7 + sub_261A34804(3, 0, 0, 1) = 0;
  v7[16] = 0;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C08);
  sub_261A3EC20(v2, (uint64_t)&v7[*(int *)(v20 + 44)]);
  unsigned __int8 v21 = sub_261B8DFB8();
  unsigned __int8 v22 = sub_261B8DFD8();
  unsigned __int8 v23 = sub_261B8DFF8();
  char v24 = sub_261B8DFE8();
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v21) {
    char v24 = sub_261B8DFE8();
  }
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v22) {
    char v24 = sub_261B8DFE8();
  }
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v23) {
    char v24 = sub_261B8DFE8();
  }
  sub_261B8D358();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_2619F86F0((uint64_t)v7, (uint64_t)v9, &qword_26A944BE0);
  __n128 v33 = &v9[*(int *)(v57 + 36)];
  char *v33 = v24;
  *((void *)v33 + sub_261A34804(3, 0, 0, 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_2619F8754((uint64_t)v7, &qword_26A944BE0);
  char v34 = sub_261B8DFC8();
  sub_261B8D358();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  sub_2619F86F0((uint64_t)v9, (uint64_t)v11, &qword_26A944BE8);
  double v43 = &v11[*(int *)(v58 + 36)];
  *double v43 = v34;
  *((void *)v43 + sub_261A34804(3, 0, 0, 1) = v36;
  *((void *)v43 + 2) = v38;
  *((void *)v43 + 3) = v40;
  *((void *)v43 + 4) = v42;
  v43[40] = 0;
  sub_2619F8754((uint64_t)v9, &qword_26A944BE8);
  uint64_t v44 = sub_261B8EC98();
  sub_2619FED14(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, 0.0, 1, v44, v45);
  sub_2619F8754((uint64_t)v11, &qword_26A943438);
  uint64_t v46 = v67;
  sub_261B8DF08();
  sub_261B8EC98();
  uint64_t v47 = sub_261A3FC54(&qword_26A944C10, &qword_26A943440, (void (*)(void))sub_261A3FC24);
  uint64_t v48 = MEMORY[0x263F1B428];
  uint64_t v49 = MEMORY[0x263F1B440];
  uint64_t v50 = v62;
  sub_261B8E6A8();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v46, v69);
  sub_2619F8754((uint64_t)v13, &qword_26A943440);
  uint64_t v71 = v50;
  uint64_t v72 = v49;
  uint64_t v73 = v47;
  uint64_t v74 = v48;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v52 = v65;
  sub_261B8E508();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v15, v52);
  uint64_t v71 = v52;
  uint64_t v72 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  int v53 = v59;
  uint64_t v54 = v66;
  sub_261B8E488();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v54);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v70, v53, v61);
}

uint64_t sub_261A3EC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v104 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v3 - 8);
  long long v97 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943448);
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  char v99 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943450);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v103 = (uint64_t)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v98 = (uint64_t)&v79 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v102 = (uint64_t)&v79 - v11;
  uint64_t v12 = sub_261B8D728();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v79 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C30);
  MEMORY[0x270FA5388](v19 - 8);
  unsigned __int8 v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  Dayuint64_t View = type metadata accessor for TrainingLoadDayView();
  uint64_t v22 = MEMORY[0x270FA5388](DayView);
  char v24 = (uint64_t *)((char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v79 - v25;
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943428);
  MEMORY[0x270FA5388](v91);
  uint64_t v28 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943430);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  uint64_t v96 = (uint64_t)&v79 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v92 = (uint64_t)&v79 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v105 = (uint64_t)&v79 - v34;
  DayEntrdouble y = type metadata accessor for TrainingLoadDayEntry();
  uint64_t v35 = (uint64_t *)(a1 + *(int *)(DayEntry + 20));
  uint64_t v36 = *v35;
  LODWORD(v85) = *((unsigned __int8 *)v35 + 8);
  uint64_t v37 = sub_261B8EF18();
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
  uint64_t v90 = v21;
  v38(v21, 1, 1, v37);
  DayWidgetSystemSmalluint64_t View = type metadata accessor for TrainingLoadDayWidgetSystemSmallView();
  uint64_t v39 = *(int *)(DayWidgetSystemSmallView + 28);
  uint64_t v95 = a1;
  uint64_t v88 = a1 + v39;
  sub_2619FA8A0((uint64_t)v18);
  uint64_t v87 = sub_261A3FD70(&qword_26A944C38);
  sub_261B8F7D8();
  uint64_t v86 = sub_261A3FD70(&qword_26A944C40);
  LOBYTE(asub_261A34804(3, 0, 0, 1) = sub_261B8F0A8();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v13 + 8);
  v40(v16, v12);
  uint64_t v94 = v13 + 8;
  v40(v18, v12);
  char v41 = a1 ^ 1;
  uint64_t DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
  uint64_t v43 = DayViewModel;
  uint64_t v44 = 1;
  if ((v85 & 1) == 0)
  {
    *(void *)((char *)v24 + *(int *)(DayViewModel + 28)) = 0x3FE3333333333333;
    void *v24 = v36;
    sub_261B8C948();
    sub_261B8C938();
    uint64_t v44 = 0;
    uint64_t v45 = (void *)((char *)v24 + *(int *)(v43 + 24));
    *uint64_t v45 = v46;
    v45[1] = v47;
  }
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v24, v44, 1, v43);
  uint64_t v48 = DayView;
  sub_2619FB7EC((uint64_t)v90, (uint64_t)v24 + *(int *)(DayView + 20), &qword_26A944C30);
  *((unsigned char *)v24 + *(int *)(v48 + 24)) = v41 & 1;
  sub_261A3FDB4((uint64_t)v24, (uint64_t)v26);
  uint64_t v49 = v95;
  sub_261B8EC98();
  sub_261B8D4D8();
  sub_261A3FE18((uint64_t)v26, (uint64_t)v28);
  uint64_t v50 = &v28[*(int *)(v91 + 36)];
  long long v51 = v121;
  *(_OWORD *)uint64_t v50 = v120;
  *((_OWORD *)v50 + sub_261A34804(3, 0, 0, 1) = v51;
  *((_OWORD *)v50 + 2) = v122;
  sub_261A3FE7C((uint64_t)v26);
  uint64_t v52 = sub_261B8EC98();
  uint64_t v53 = v92;
  sub_2619FED70(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v92, 0.0, 1, 0.0, 1, v52, v54);
  sub_2619F8754((uint64_t)v28, &qword_26A943428);
  sub_2619FB7EC(v53, v105, &qword_26A943430);
  uint64_t v92 = sub_261B8DBF8();
  sub_261A3F7F4(v49, (uint64_t)&v106);
  uint64_t v91 = v106;
  uint64_t v90 = (char *)v107;
  LODWORD(DayView) = v108;
  uint64_t v85 = v109;
  uint64_t v84 = (uint64_t)v110;
  uint64_t v83 = v111;
  int v82 = v112;
  uint64_t v81 = v113;
  sub_2619FA8A0((uint64_t)v18);
  sub_261B8F7D8();
  LOBYTE(v48) = sub_261B8F0A8();
  v40(v16, v12);
  v40(v18, v12);
  if (v48)
  {
    uint64_t v55 = *(void *)(v49 + *(int *)(DayEntry + 32));
    swift_retain();
  }
  else
  {
    uint64_t v55 = sub_261B8E858();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BA8);
  sub_261B8D448();
  sub_261B8E168();
  uint64_t v56 = *MEMORY[0x263F1A610];
  uint64_t v57 = sub_261B8E118();
  uint64_t v58 = *(void *)(v57 - 8);
  unsigned int v59 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 104);
  uint64_t v60 = (uint64_t)v97;
  v59(v97, v56, v57);
  uint64_t v61 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56);
  v61(v60, 0, 1, v57);
  uint64_t v62 = sub_261B8E188();
  sub_2619F8754(v60, &qword_26A943488);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v106 = v92;
  uint64_t v107 = 0;
  unsigned __int8 v108 = 1;
  uint64_t v109 = v91;
  uint64_t v110 = v90;
  LOBYTE(v11sub_261A34804(3, 0, 0, 1) = DayView;
  uint64_t v112 = v85;
  uint64_t v113 = v84;
  uint64_t v114 = v83;
  char v115 = v82;
  uint64_t v116 = v81;
  uint64_t v117 = v55;
  uint64_t v118 = KeyPath;
  uint64_t v119 = v62;
  v59((char *)v60, v56, v57);
  v61(v60, 0, 1, v57);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C48);
  sub_261A3FEE0();
  uint64_t v64 = v99;
  sub_261B8E4E8();
  sub_2619F8754(v60, &qword_26A943488);
  uint64_t v65 = v113;
  uint64_t v66 = v114;
  LOBYTE(v59) = v115;
  sub_261A02A18(v109, (uint64_t)v110, v111);
  swift_bridgeObjectRelease();
  sub_261A02A18(v65, v66, (char)v59);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v67 = sub_261B8ECA8();
  uint64_t v68 = v98;
  double v70 = sub_2619FEDCC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v98, 0.0, 1, 0.0, 1, v67, v69);
  (*(void (**)(char *, uint64_t, double))(v100 + 8))(v64, v101, v70);
  uint64_t v71 = v102;
  sub_2619FB7EC(v68, v102, &qword_26A943450);
  uint64_t v72 = v105;
  uint64_t v73 = v96;
  sub_2619F86F0(v105, v96, &qword_26A943430);
  uint64_t v74 = v103;
  sub_2619F86F0(v71, v103, &qword_26A943450);
  uint64_t v75 = v104;
  sub_2619F86F0(v73, v104, &qword_26A943430);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C78);
  uint64_t v77 = v75 + *(int *)(v76 + 48);
  *(void *)uint64_t v77 = 0;
  *(unsigned char *)(v77 + 8) = 1;
  sub_2619F86F0(v74, v75 + *(int *)(v76 + 64), &qword_26A943450);
  sub_2619F8754(v71, &qword_26A943450);
  sub_2619F8754(v72, &qword_26A943430);
  sub_2619F8754(v74, &qword_26A943450);
  return sub_2619F8754(v73, &qword_26A943430);
}

uint64_t sub_261A3F7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_261B8D728();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v33 - v9;
  type metadata accessor for TrainingLoadDayWidgetSystemSmallView();
  sub_2619FA8A0((uint64_t)v10);
  sub_261A3FD70(&qword_26A944C38);
  sub_261B8F7D8();
  sub_261A3FD70(&qword_26A944C40);
  char v11 = sub_261B8F0A8();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v12(v10, v4);
  if (v11)
  {
    uint64_t v13 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TrainingLoadDayEntry() + 28));
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v16 = (id)qword_26B416688;
    uint64_t v14 = sub_261B8AA48();
    uint64_t v15 = v17;
  }
  uint64_t v34 = v14;
  uint64_t v35 = v15;
  sub_261A029C4();
  uint64_t v18 = sub_261B8E3D8();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  uint64_t v34 = sub_261A3E2B0();
  uint64_t v35 = v25;
  uint64_t v26 = sub_261B8E3D8();
  uint64_t v28 = v27;
  LOBYTE(v34) = v24;
  char v30 = v29 & 1;
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 16) = v24;
  *(void *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v26;
  *(void *)(a2 + 4sub_261A34804(0, 1, 2, 0) = v27;
  *(unsigned char *)(a2 + 48) = v29 & 1;
  *(void *)(a2 + 56) = v31;
  sub_261A001D0(v18, v20, v24);
  swift_bridgeObjectRetain();
  sub_261A001D0(v26, v28, v30);
  swift_bridgeObjectRetain();
  sub_261A02A18(v26, v28, v30);
  swift_bridgeObjectRelease();
  sub_261A02A18(v18, v20, v34);
  return swift_bridgeObjectRelease();
}

uint64_t sub_261A3FB3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_261B8E838();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void))(v5 + 104))(v4, *MEMORY[0x263F1B388]);
  uint64_t result = MEMORY[0x263E4C7A0](v4, 0.101960784, 0.101960784, 0.109803922, 1.0);
  *a1 = result;
  return result;
}

uint64_t sub_261A3FC24()
{
  return sub_261A3FC54(&qword_26A944C18, &qword_26A943438, (void (*)(void))sub_261A3FCD0);
}

uint64_t sub_261A3FC54(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A3FCD0()
{
  unint64_t result = qword_26A944C20;
  if (!qword_26A944C20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944BE8);
    sub_2619F8AB8(&qword_26A944C28, &qword_26A944BE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944C20);
  }
  return result;
}

uint64_t sub_261A3FD70(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_261B8D728();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A3FDB4(uint64_t a1, uint64_t a2)
{
  Dayuint64_t View = type metadata accessor for TrainingLoadDayView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DayView - 8) + 32))(a2, a1, DayView);
  return a2;
}

uint64_t sub_261A3FE18(uint64_t a1, uint64_t a2)
{
  Dayuint64_t View = type metadata accessor for TrainingLoadDayView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DayView - 8) + 16))(a2, a1, DayView);
  return a2;
}

uint64_t sub_261A3FE7C(uint64_t a1)
{
  Dayuint64_t View = type metadata accessor for TrainingLoadDayView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(DayView - 8) + 8))(a1, DayView);
  return a1;
}

unint64_t sub_261A3FEE0()
{
  unint64_t result = qword_26A944C50;
  if (!qword_26A944C50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944C48);
    sub_261A3FF80();
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944C50);
  }
  return result;
}

unint64_t sub_261A3FF80()
{
  unint64_t result = qword_26A944C58;
  if (!qword_26A944C58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944C60);
    sub_2619F8AB8(&qword_26A944C68, &qword_26A944C70);
    sub_2619F8AB8((unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944C58);
  }
  return result;
}

uint64_t sub_261A40044()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t EmbeddedIntervalConfigurationView.init(intervalConfiguration:formattingManager:referenceIntervalWorkoutConfiguration:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t EmbeddedIntervalConfigurationView.body.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = (void *)sub_261B8B978();
  unint64_t v5 = sub_261B8B948();

  if (!(v5 >> 62))
  {
    swift_bridgeObjectRelease();
LABEL_3:
    swift_getKeyPath();
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = v1;
    v6[3] = v2;
    v6[4] = v3;
    id v7 = v3;
    id v8 = v1;
    id v9 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C80);
    sub_261A03EF0();
    sub_261A40568();
    swift_getOpaqueTypeConformance2();
    return sub_261B8EBE8();
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_261B8F9D8();
  uint64_t result = swift_bridgeObjectRelease_n();
  if ((v11 & 0x8000000000000000) == 0) {
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

void sub_261A402DC(unint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_261B8DED8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *a1;
  uint64_t v12 = (void *)sub_261B8B978();
  uint64_t v13 = sub_261B8B948();

  if ((v13 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v12 = *(void **)(v13 + 8 * v11 + 32);
      swift_retain();
      goto LABEL_5;
    }
    __break(1u);
LABEL_16:
    uint64_t v15 = MEMORY[0x263E4D7B0](v11, v13);
    goto LABEL_10;
  }
  uint64_t v12 = (void *)MEMORY[0x263E4D7B0](v11, v13);
LABEL_5:
  swift_bridgeObjectRelease();
  if (!a4)
  {
    uint64_t v15 = 0;
    goto LABEL_12;
  }
  uint64_t v14 = (void *)sub_261B8B978();
  uint64_t v13 = sub_261B8B948();

  if ((v13 & 0xC000000000000001) != 0) {
    goto LABEL_16;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v11 < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v15 = *(void *)(v13 + 8 * v11 + 32);
    swift_retain();
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_12:
    v17[1] = v12;
    id v18 = a3;
    uint64_t v19 = v15;
    swift_retain();
    swift_retain();
    id v16 = a3;
    sub_261B8DEC8();
    sub_261A40568();
    sub_261B8E6B8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();

    swift_release();
    return;
  }
  __break(1u);
}

uint64_t sub_261A40514()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_261A4055C(unint64_t *a1)
{
  sub_261A402DC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

unint64_t sub_261A40568()
{
  unint64_t result = qword_26A944C88;
  if (!qword_26A944C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944C88);
  }
  return result;
}

uint64_t sub_261A405BC()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for EmbeddedIntervalConfigurationView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  unint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void destroy for EmbeddedIntervalConfigurationView(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for EmbeddedIntervalConfigurationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  unint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a1 + 16);
  unint64_t v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  return a1;
}

uint64_t assignWithTake for EmbeddedIntervalConfigurationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  unint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for EmbeddedIntervalConfigurationView()
{
  return &type metadata for EmbeddedIntervalConfigurationView;
}

unint64_t sub_261A40738()
{
  unint64_t result = qword_26A944C90;
  if (!qword_26A944C90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944C98);
    sub_261A40568();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944C90);
  }
  return result;
}

id sub_261A407DC()
{
  qword_26A9535C8 = *MEMORY[0x263F09970];
  return (id)qword_26A9535C8;
}

uint64_t sub_261A407F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  switch(*(void *)(a5 + 16))
  {
    case 0:
      if (qword_26A942CD0 != -1) {
        swift_once();
      }
      return sub_261B8CE48();
    case 1:
      if (qword_26A942CD0 != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_261B93F70;
      uint64_t v7 = v6 + 32;
      uint64_t v8 = a5 + 32;
      goto LABEL_28;
    case 2:
      if (qword_26A942CD0 != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_261B92AA0;
      sub_261A40D48(a5 + 32, v9 + 32);
      uint64_t v7 = v9 + 72;
      uint64_t v8 = a5 + 72;
      goto LABEL_28;
    case 3:
      if (qword_26A942CD0 != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_261B94B90;
      sub_261A40D48(a5 + 32, v10 + 32);
      sub_261A40D48(a5 + 72, v10 + 72);
      uint64_t v7 = v10 + 112;
      uint64_t v8 = a5 + 112;
      goto LABEL_28;
    case 4:
      if (qword_26A942CD0 != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_261B92900;
      sub_261A40D48(a5 + 32, v11 + 32);
      sub_261A40D48(a5 + 72, v11 + 72);
      sub_261A40D48(a5 + 112, v11 + 112);
      uint64_t v7 = v11 + 152;
      uint64_t v8 = a5 + 152;
      goto LABEL_28;
    case 5:
      if (qword_26A942CD0 != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_261B94FD0;
      sub_261A40D48(a5 + 32, v12 + 32);
      sub_261A40D48(a5 + 72, v12 + 72);
      sub_261A40D48(a5 + 112, v12 + 112);
      sub_261A40D48(a5 + 152, v12 + 152);
      uint64_t v7 = v12 + 192;
      uint64_t v8 = a5 + 192;
      goto LABEL_28;
    case 6:
      if (qword_26A942CD0 != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_261B94FC0;
      sub_261A40D48(a5 + 32, v13 + 32);
      sub_261A40D48(a5 + 72, v13 + 72);
      sub_261A40D48(a5 + 112, v13 + 112);
      sub_261A40D48(a5 + 152, v13 + 152);
      sub_261A40D48(a5 + 192, v13 + 192);
      uint64_t v7 = v13 + 232;
      uint64_t v8 = a5 + 232;
      goto LABEL_28;
    case 7:
      if (qword_26A942CD0 != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_261B94FB0;
      sub_261A40D48(a5 + 32, v14 + 32);
      sub_261A40D48(a5 + 72, v14 + 72);
      sub_261A40D48(a5 + 112, v14 + 112);
      sub_261A40D48(a5 + 152, v14 + 152);
      sub_261A40D48(a5 + 192, v14 + 192);
      sub_261A40D48(a5 + 232, v14 + 232);
      uint64_t v7 = v14 + 272;
      uint64_t v8 = a5 + 272;
LABEL_28:
      sub_261A40D48(v8, v7);
      sub_261B8CE48();
      unint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_261A40D48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_261A40DAC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TrainingLoadEffortExplanationView() + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = sub_261A43960;
  a2[1] = (uint64_t (*)())v6;
  return swift_retain();
}

uint64_t sub_261A40E2C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = (uint64_t (**)())(a2 + *(int *)(type metadata accessor for TrainingLoadEffortExplanationView() + 20));
  swift_retain();
  uint64_t result = swift_release();
  *uint64_t v6 = sub_261A43958;
  v6[1] = (uint64_t (*)())v5;
  return result;
}

uint64_t TrainingLoadEffortExplanationView.onNext.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TrainingLoadEffortExplanationView() + 20));
  swift_retain();
  return v1;
}

uint64_t type metadata accessor for TrainingLoadEffortExplanationView()
{
  uint64_t result = qword_26A944CD8;
  if (!qword_26A944CD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TrainingLoadEffortExplanationView.onNext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TrainingLoadEffortExplanationView() + 20));
  uint64_t result = swift_release();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrainingLoadEffortExplanationView.onNext.modify())(void)
{
  return nullsub_1;
}

uint64_t TrainingLoadEffortExplanationView.isStandalone.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TrainingLoadEffortExplanationView() + 24));
}

uint64_t TrainingLoadEffortExplanationView.isStandalone.setter(char a1)
{
  uint64_t result = type metadata accessor for TrainingLoadEffortExplanationView();
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*TrainingLoadEffortExplanationView.isStandalone.modify())(void)
{
  return nullsub_1;
}

uint64_t TrainingLoadEffortExplanationView.init(isStandalone:onNext:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  *a4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  swift_storeEnumTagMultiPayload();
  EffortExplanationuint64_t View = (int *)type metadata accessor for TrainingLoadEffortExplanationView();
  uint64_t v9 = (char *)a4 + EffortExplanationView[7];
  sub_261B8F378();
  uint64_t v10 = sub_261B8F368();
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = MEMORY[0x263F8F500];
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v12;
  uint64_t v13 = sub_261B8F368();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  uint64_t result = sub_261B8EB68();
  *(void *)uint64_t v9 = v17;
  *((void *)v9 + sub_261A34804(3, 0, 0, 1) = v18;
  unsigned char v9[16] = v19;
  *((unsigned char *)a4 + EffortExplanationView[6]) = a1;
  id v16 = (uint64_t *)((char *)a4 + EffortExplanationView[5]);
  void *v16 = a2;
  v16[1] = a3;
  return result;
}

uint64_t sub_261A411B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = FIShouldTrackTrainingLoad();
  *a1 = result;
  return result;
}

uint64_t sub_261A411DC(unsigned __int8 *a1)
{
  return MEMORY[0x270F29B28](*a1);
}

uint64_t sub_261A411E4()
{
  if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for TrainingLoadEffortExplanationView() + 24)) == 1)
  {
    if (qword_26B416690 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_26B416690 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  swift_beginAccess();
  id v1 = (id)qword_26B416688;
  uint64_t v2 = sub_261B8AA48();

  return v2;
}

uint64_t TrainingLoadEffortExplanationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  EffortExplanationuint64_t View = type metadata accessor for TrainingLoadEffortExplanationView();
  uint64_t v39 = *(void *)(EffortExplanationView - 8);
  MEMORY[0x270FA5388](EffortExplanationView);
  uint64_t v40 = v3;
  uint64_t v41 = (uint64_t)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944CA0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944CA8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9433F8);
  MEMORY[0x270FA5388](v38);
  uint64_t v42 = (uint64_t)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v13 = sub_261B8DBE8();
  *((void *)v13 + sub_261A34804(3, 0, 0, 1) = 0;
  v13[16] = 0;
  uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A944CB0) + 44);
  uint64_t v37 = v13;
  id v16 = &v13[v15];
  uint64_t v44 = v1;
  sub_261B8DF88();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944CB8);
  sub_2619F8AB8(&qword_26A944CC0, &qword_26A944CB8);
  sub_261B8D378();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v8, v10, v4);
  v17(v16, v8, v4);
  uint64_t v18 = &v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A944CC8) + 48)];
  *(void *)uint64_t v18 = 0;
  v18[8] = 1;
  char v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v10, v4);
  v19(v8, v4);
  uint64_t v20 = sub_261B8DBE8();
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v21 = (id)qword_26B416688;
  uint64_t v22 = sub_261B8AA48();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();

  uint64_t v25 = v41;
  sub_261A439E0(v1, v41, (uint64_t (*)(void))type metadata accessor for TrainingLoadEffortExplanationView);
  unint64_t v26 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v27 = swift_allocObject();
  sub_261A42DF8(v25, v27 + v26);
  int v28 = sub_261B8D498();
  LOBYTE(v25) = MEMORY[0x263E4BEE0]((2 * v28));
  uint64_t v29 = sub_261B8D6B8();
  uint64_t v30 = (uint64_t)v37;
  uint64_t v31 = v42;
  sub_2619F86F0((uint64_t)v37, v42, &qword_26A944CA8);
  uint64_t v32 = v31 + *(int *)(v38 + 36);
  *(void *)uint64_t v32 = v22;
  *(void *)(v32 + 8) = v24;
  *(void *)(v32 + 16) = sub_261A42E5C;
  *(void *)(v32 + 24) = v27;
  *(void *)(v32 + 32) = v29;
  *(void *)(v32 + 4sub_261A34804(0, 1, 2, 0) = 0;
  *(unsigned char *)(v32 + 48) = 1;
  *(unsigned char *)(v32 + 49) = v25;
  *(void *)(v32 + 56) = v20;
  sub_2619F8754(v30, &qword_26A944CA8);
  uint64_t v33 = sub_261B8EC98();
  sub_2619FEE28(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v43, 0.0, 1, INFINITY, 0, v33, v34);
  return sub_2619F8754(v31, &qword_26A9433F8);
}

uint64_t sub_261A418AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v190 = a2;
  uint64_t v188 = sub_261B8D748();
  MEMORY[0x270FA5388](v188);
  uint64_t v189 = (char *)&v171 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D00);
  uint64_t v178 = *(void *)(v4 - 8);
  uint64_t v179 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v176 = (char *)&v171 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D08);
  MEMORY[0x270FA5388](v174);
  char v177 = (char *)&v171 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D10);
  MEMORY[0x270FA5388](v175);
  uint64_t v181 = (uint64_t)&v171 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D18);
  MEMORY[0x270FA5388](v180);
  uint64_t v184 = (uint64_t)&v171 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D20);
  MEMORY[0x270FA5388](v182);
  uint64_t v186 = (uint64_t)&v171 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D28);
  MEMORY[0x270FA5388](v183);
  id v187 = (char *)&v171 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D30);
  uint64_t v11 = MEMORY[0x270FA5388](v185);
  uint64_t v214 = (uint64_t)&v171 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v213 = (uint64_t)&v171 - v13;
  uint64_t v206 = sub_261B8E1F8();
  uint64_t v215 = *(void *)(v206 - 8);
  MEMORY[0x270FA5388](v206);
  uint64_t v205 = (char *)&v171 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_261B8AA68();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t OnboardingCore = type metadata accessor for TrainingLoadOnboardingCore();
  uint64_t v17 = MEMORY[0x270FA5388](OnboardingCore);
  uint64_t v212 = (uint64_t)&v171 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v171 - v19);
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v21 = (id)qword_26B416688;
  uint64_t v22 = sub_261B8AA48();
  uint64_t v24 = v23;

  sub_261A411E4();
  uint64_t v171 = a1;
  sub_261B8AA58();
  sub_261B8AA28();
  void *v20 = 0xD000000000000028;
  v20[1] = 0x8000000261B9E890;
  v20[2] = v22;
  _OWORD v20[3] = v24;
  id v25 = (id)qword_26B416688;
  uint64_t v26 = sub_261B8AA48();
  uint64_t v28 = v27;

  uint64_t v274 = v26;
  uint64_t v275 = v28;
  unint64_t v198 = sub_261A029C4();
  uint64_t v29 = sub_261B8E3D8();
  uint64_t v31 = v30;
  uint64_t v211 = v32;
  char v34 = v33 & 1;
  sub_261B8E0D8();
  unsigned int v173 = *MEMORY[0x263F1A680];
  uint64_t v35 = v215;
  char v172 = *(void (**)(char *))(v215 + 104);
  uint64_t v197 = v215 + 104;
  uint64_t v36 = v205;
  uint64_t v37 = v206;
  v172(v205);
  sub_261B8E218();
  swift_release();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v35 + 8);
  uint64_t v215 = v35 + 8;
  uint64_t v196 = v38;
  v38(v36, v37);
  uint64_t v39 = sub_261B8E368();
  uint64_t v41 = v40;
  uint64_t v204 = v20;
  char v43 = v42;
  swift_release();
  sub_261A02A18(v29, v31, v34);
  swift_bridgeObjectRelease();
  id v195 = self;
  uint64_t v274 = MEMORY[0x263E4C7B0](objc_msgSend(v195, sel_secondaryLabelColor));
  uint64_t v44 = sub_261B8E328();
  uint64_t v210 = v45;
  uint64_t v211 = v44;
  LOBYTE(v37) = v46;
  uint64_t v203 = v47;
  sub_261A02A18(v39, v41, v43 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  int v208 = sub_261B8DF98();
  sub_261B8D358();
  uint64_t v193 = v49;
  uint64_t v194 = v48;
  uint64_t v191 = v51;
  uint64_t v192 = v50;
  int v209 = sub_261B8E008();
  sub_261B8D358();
  uint64_t v201 = v53;
  uint64_t v202 = v52;
  uint64_t v199 = v55;
  uint64_t v200 = v54;
  unsigned __int8 v227 = v37 & 1;
  unsigned __int8 v223 = 0;
  unsigned __int8 v220 = 0;
  id v56 = (id)qword_26B416688;
  uint64_t v57 = sub_261B8AA48();
  uint64_t v59 = v58;

  uint64_t v274 = v57;
  uint64_t v275 = v59;
  type metadata accessor for TrainingLoadEffortExplanationView();
  swift_retain();
  swift_retain();
  uint64_t v60 = v176;
  sub_261B8EAD8();
  LOBYTE(v56) = sub_261B8DF98();
  sub_261B8D358();
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = (uint64_t)v177;
  uint64_t v69 = v178;
  uint64_t v71 = v179;
  (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v177, v60, v179);
  uint64_t v72 = v70 + *(int *)(v174 + 36);
  *(unsigned char *)uint64_t v72 = (_BYTE)v56;
  *(void *)(v72 + 8) = v62;
  *(void *)(v72 + 16) = v64;
  *(void *)(v72 + 24) = v66;
  *(void *)(v72 + 32) = v68;
  *(unsigned char *)(v72 + 4sub_261A34804(0, 1, 2, 0) = 0;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v60, v71);
  LOBYTE(v56) = sub_261B8E008();
  sub_261B8D358();
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  uint64_t v81 = v181;
  sub_2619F86F0(v70, v181, &qword_26A944D08);
  uint64_t v82 = v81 + *(int *)(v175 + 36);
  *(unsigned char *)uint64_t v82 = (_BYTE)v56;
  *(void *)(v82 + 8) = v74;
  *(void *)(v82 + 16) = v76;
  *(void *)(v82 + 24) = v78;
  *(void *)(v82 + 32) = v80;
  *(unsigned char *)(v82 + 4sub_261A34804(0, 1, 2, 0) = 0;
  sub_2619F8754(v70, &qword_26A944D08);
  sub_261B8E0D8();
  uint64_t v83 = v205;
  uint64_t v84 = v206;
  uint64_t v85 = v173;
  uint64_t v86 = (void (*)(char *, uint64_t, uint64_t))v172;
  ((void (*)(char *, void, uint64_t))v172)(v205, v173, v206);
  sub_261B8E218();
  swift_release();
  v196(v83, v84);
  sub_261B8E168();
  uint64_t v87 = sub_261B8E1D8();
  swift_release();
  uint64_t v88 = swift_getKeyPath();
  uint64_t v89 = v184;
  sub_2619F86F0(v81, v184, &qword_26A944D10);
  uint64_t v90 = (uint64_t *)(v89 + *(int *)(v180 + 36));
  *uint64_t v90 = v88;
  v90[1] = v87;
  sub_2619F8754(v81, &qword_26A944D10);
  uint64_t v91 = MEMORY[0x263E4C7B0](objc_msgSend(v195, sel_secondarySystemGroupedBackgroundColor));
  LOBYTE(v88) = sub_261B8DFA8();
  uint64_t v92 = v186;
  sub_2619F86F0(v89, v186, &qword_26A944D18);
  uint64_t v93 = v92 + *(int *)(v182 + 36);
  *(void *)uint64_t v93 = v91;
  *(unsigned char *)(v93 + 8) = v88;
  sub_2619F8754(v89, &qword_26A944D18);
  uint64_t v94 = v189;
  uint64_t v95 = &v189[*(int *)(v188 + 20)];
  uint64_t v96 = *MEMORY[0x263F19860];
  uint64_t v97 = sub_261B8DBB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v97 - 8) + 104))(v95, v96, v97);
  __asm { FMOV            V0.2D, #12.0 }
  *uint64_t v94 = _Q0;
  uint64_t v103 = (uint64_t)v187;
  uint64_t v104 = (uint64_t)&v187[*(int *)(v183 + 36)];
  sub_261A439E0((uint64_t)v94, v104, MEMORY[0x263F19048]);
  *(_WORD *)(v104 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A944190) + 36)) = 256;
  sub_2619F86F0(v92, v103, &qword_26A944D20);
  sub_261A43AEC((uint64_t)v94, MEMORY[0x263F19048]);
  sub_2619F8754(v92, &qword_26A944D20);
  LOBYTE(v104) = sub_261B8DF98();
  sub_261B8D358();
  uint64_t v106 = v105;
  uint64_t v108 = v107;
  uint64_t v110 = v109;
  uint64_t v112 = v111;
  uint64_t v113 = v214;
  sub_2619F86F0(v103, v214, &qword_26A944D28);
  uint64_t v114 = v113 + *(int *)(v185 + 36);
  *(unsigned char *)uint64_t v114 = v104;
  *(void *)(v114 + 8) = v106;
  *(void *)(v114 + 16) = v108;
  *(void *)(v114 + 24) = v110;
  *(void *)(v114 + 32) = v112;
  *(unsigned char *)(v114 + 4sub_261A34804(0, 1, 2, 0) = 0;
  sub_2619F8754(v103, &qword_26A944D28);
  sub_261A43978(v113, v213);
  id v115 = (id)qword_26B416688;
  uint64_t v116 = sub_261B8AA48();
  uint64_t v118 = v117;

  uint64_t v274 = v116;
  uint64_t v275 = v118;
  uint64_t v119 = sub_261B8E3D8();
  uint64_t v121 = v120;
  LOBYTE(v92) = v122 & 1;
  sub_261B8E048();
  v86(v83, v85, v84);
  sub_261B8E218();
  swift_release();
  v196(v83, v84);
  uint64_t v123 = sub_261B8E368();
  uint64_t v125 = v124;
  LOBYTE(v86) = v126;
  swift_release();
  LOBYTE(v85) = v86 & 1;
  sub_261A02A18(v119, v121, v92);
  swift_bridgeObjectRelease();
  uint64_t v274 = MEMORY[0x263E4C7B0](objc_msgSend(v195, sel_secondaryLabelColor));
  uint64_t v127 = sub_261B8E328();
  id v195 = v128;
  uint64_t v196 = (void (*)(char *, uint64_t))v127;
  LOBYTE(v86) = v129;
  uint64_t v197 = v130;
  sub_261A02A18(v123, v125, v85);
  swift_release();
  swift_bridgeObjectRelease();
  LODWORD(v215) = sub_261B8DF98();
  sub_261B8D358();
  uint64_t v132 = v131;
  uint64_t v134 = v133;
  uint64_t v136 = v135;
  uint64_t v138 = v137;
  uint64_t v185 = swift_getKeyPath();
  LODWORD(v189) = sub_261B8DFB8();
  sub_261B8D358();
  uint64_t v140 = v139;
  id v187 = v142;
  uint64_t v188 = v141;
  uint64_t v186 = v143;
  unsigned __int8 v235 = v86 & 1;
  unsigned __int8 v232 = 0;
  unsigned __int8 v228 = 0;
  uint64_t v144 = v212;
  sub_261A439E0((uint64_t)v204, v212, (uint64_t (*)(void))type metadata accessor for TrainingLoadOnboardingCore);
  LOBYTE(v125) = v227;
  LODWORD(v206) = v227;
  v219[0] = *(_DWORD *)v225;
  *(_DWORD *)((char *)v219 + 3) = *(_DWORD *)&v225[3];
  v218[0] = *(_DWORD *)v224;
  *(_DWORD *)((char *)v218 + 3) = *(_DWORD *)&v224[3];
  LOBYTE(v12sub_261A34804(3, 0, 0, 1) = v223;
  LODWORD(v198) = v223;
  v217[0] = *(_DWORD *)v222;
  *(_DWORD *)((char *)v217 + 3) = *(_DWORD *)&v222[3];
  *(_DWORD *)((char *)v216 + 3) = *(_DWORD *)&v221[3];
  v216[0] = *(_DWORD *)v221;
  LOBYTE(v123) = v220;
  LODWORD(v205) = v220;
  uint64_t v145 = v214;
  sub_2619F86F0(v213, v214, &qword_26A944D30);
  LOBYTE(v118) = v235;
  LODWORD(v182) = v235;
  LOBYTE(v92) = v232;
  LODWORD(v183) = v232;
  LODWORD(v184) = v228;
  uint64_t v146 = v144;
  uint64_t v147 = v190;
  sub_261A439E0(v146, v190, (uint64_t (*)(void))type metadata accessor for TrainingLoadOnboardingCore);
  long long v148 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A944D38);
  long long v149 = (_OWORD *)(v147 + v148[12]);
  *(void *)&long long v236 = v211;
  *((void *)&v236 + sub_261A34804(3, 0, 0, 1) = v210;
  LOBYTE(v237) = v125;
  *(_DWORD *)((char *)&v237 + sub_261A34804(3, 0, 0, 1) = *(_DWORD *)v226;
  DWORD1(v237) = *(_DWORD *)&v226[3];
  *((void *)&v237 + sub_261A34804(3, 0, 0, 1) = v203;
  *(void *)&long long v238 = KeyPath;
  BYTE8(v238) = 1;
  *(_DWORD *)((char *)&v238 + 9) = *(_DWORD *)v225;
  HIDWORD(v238) = *(_DWORD *)&v225[3];
  LOBYTE(v239) = v208;
  *(_DWORD *)((char *)&v239 + sub_261A34804(3, 0, 0, 1) = *(_DWORD *)v224;
  DWORD1(v239) = *(_DWORD *)&v224[3];
  *((void *)&v239 + sub_261A34804(3, 0, 0, 1) = v194;
  *(void *)&long long v240 = v193;
  *((void *)&v240 + sub_261A34804(3, 0, 0, 1) = v192;
  *(void *)&long long v241 = v191;
  BYTE8(v24sub_261A34804(3, 0, 0, 1) = v121;
  *(_DWORD *)((char *)&v241 + 9) = *(_DWORD *)v222;
  HIDWORD(v24sub_261A34804(3, 0, 0, 1) = *(_DWORD *)&v222[3];
  LOBYTE(v242) = v209;
  DWORD1(v242) = *(_DWORD *)&v221[3];
  *(_DWORD *)((char *)&v242 + sub_261A34804(3, 0, 0, 1) = *(_DWORD *)v221;
  *((void *)&v242 + sub_261A34804(3, 0, 0, 1) = v202;
  *(void *)&v243[0] = v201;
  *((void *)&v243[0] + sub_261A34804(3, 0, 0, 1) = v200;
  *(void *)&v243[1] = v199;
  BYTE8(v243[1]) = v123;
  long long v150 = v240;
  long long v151 = v237;
  *long long v149 = v236;
  v149[1] = v151;
  long long v152 = v239;
  v149[2] = v238;
  v149[3] = v152;
  long long v153 = v241;
  long long v154 = v242;
  *(_OWORD *)((char *)v149 + 12sub_261A34804(3, 0, 0, 1) = *(_OWORD *)((char *)v243 + 9);
  long long v155 = v243[0];
  v149[6] = v154;
  v149[7] = v155;
  v149[4] = v150;
  v149[5] = v153;
  sub_2619F86F0(v145, v147 + v148[16], &qword_26A944D30);
  long long v156 = (_OWORD *)(v147 + v148[20]);
  id v158 = v195;
  long long v157 = v196;
  *(void *)&long long v244 = v196;
  *((void *)&v244 + sub_261A34804(3, 0, 0, 1) = v195;
  LOBYTE(v245) = v118;
  *(_DWORD *)((char *)&v245 + sub_261A34804(3, 0, 0, 1) = *(_DWORD *)v234;
  DWORD1(v245) = *(_DWORD *)&v234[3];
  uint64_t v159 = v197;
  *((void *)&v245 + sub_261A34804(3, 0, 0, 1) = v197;
  LOBYTE(v246) = v215;
  *(_DWORD *)((char *)&v246 + sub_261A34804(3, 0, 0, 1) = *(_DWORD *)v233;
  DWORD1(v246) = *(_DWORD *)&v233[3];
  *((void *)&v246 + sub_261A34804(3, 0, 0, 1) = v132;
  *(void *)&long long v247 = v134;
  *((void *)&v247 + sub_261A34804(3, 0, 0, 1) = v136;
  *(void *)&long long v248 = v138;
  BYTE8(v248) = v92;
  *(_DWORD *)((char *)&v248 + 9) = *(_DWORD *)v231;
  HIDWORD(v248) = *(_DWORD *)&v231[3];
  uint64_t v160 = v185;
  *(void *)&long long v249 = v185;
  BYTE8(v249) = 1;
  *(_DWORD *)((char *)&v249 + 9) = *(_DWORD *)v230;
  HIDWORD(v249) = *(_DWORD *)&v230[3];
  LOBYTE(v123) = (_BYTE)v189;
  LOBYTE(v25sub_261A34804(0, 1, 2, 0) = (_BYTE)v189;
  *(_DWORD *)((char *)&v250 + sub_261A34804(3, 0, 0, 1) = *(_DWORD *)v229;
  DWORD1(v25sub_261A34804(0, 1, 2, 0) = *(_DWORD *)&v229[3];
  *((void *)&v250 + sub_261A34804(3, 0, 0, 1) = v140;
  long long v162 = v187;
  uint64_t v161 = v188;
  *(void *)&v251[0] = v188;
  *((void *)&v251[0] + sub_261A34804(3, 0, 0, 1) = v187;
  uint64_t v163 = v186;
  *(void *)&v251[1] = v186;
  LOBYTE(v92) = v184;
  BYTE8(v251[1]) = v184;
  long long v164 = v244;
  long long v165 = v245;
  long long v166 = v247;
  v156[2] = v246;
  v156[3] = v166;
  *long long v156 = v164;
  v156[1] = v165;
  long long v167 = v248;
  long long v168 = v249;
  *(_OWORD *)((char *)v156 + 12sub_261A34804(3, 0, 0, 1) = *(_OWORD *)((char *)v251 + 9);
  long long v169 = v251[0];
  v156[6] = v250;
  v156[7] = v169;
  v156[4] = v167;
  v156[5] = v168;
  sub_261A43A48((uint64_t)&v236);
  sub_261A43A98((uint64_t)&v244);
  sub_2619F8754(v213, &qword_26A944D30);
  sub_261A43AEC((uint64_t)v204, (uint64_t (*)(void))type metadata accessor for TrainingLoadOnboardingCore);
  v252[0] = v157;
  v252[1] = v158;
  char v253 = v182;
  *(_DWORD *)uint64_t v254 = *(_DWORD *)v234;
  *(_DWORD *)&v254[3] = *(_DWORD *)&v234[3];
  uint64_t v255 = v159;
  char v256 = v215;
  *(_DWORD *)uint64_t v257 = *(_DWORD *)v233;
  *(_DWORD *)&v257[3] = *(_DWORD *)&v233[3];
  uint64_t v258 = v132;
  uint64_t v259 = v134;
  uint64_t v260 = v136;
  uint64_t v261 = v138;
  char v262 = v183;
  *(_DWORD *)char v263 = *(_DWORD *)v231;
  *(_DWORD *)&v263[3] = *(_DWORD *)&v231[3];
  uint64_t v264 = v160;
  char v265 = 1;
  *(_DWORD *)uint64_t v266 = *(_DWORD *)v230;
  *(_DWORD *)&v266[3] = *(_DWORD *)&v230[3];
  char v267 = v123;
  *(_DWORD *)char v268 = *(_DWORD *)v229;
  *(_DWORD *)&v268[3] = *(_DWORD *)&v229[3];
  uint64_t v269 = v140;
  uint64_t v270 = v161;
  long long v271 = v162;
  uint64_t v272 = v163;
  char v273 = v92;
  sub_261A43B4C((uint64_t)v252);
  sub_2619F8754(v214, &qword_26A944D30);
  uint64_t v274 = v211;
  uint64_t v275 = v210;
  char v276 = v206;
  *(_DWORD *)uint64_t v277 = *(_DWORD *)v226;
  *(_DWORD *)&v277[3] = *(_DWORD *)&v226[3];
  uint64_t v278 = v203;
  uint64_t v279 = KeyPath;
  char v280 = 1;
  *(_DWORD *)uint64_t v281 = v219[0];
  *(_DWORD *)&v281[3] = *(_DWORD *)((char *)v219 + 3);
  char v282 = v208;
  *(_DWORD *)char v283 = v218[0];
  *(_DWORD *)&v283[3] = *(_DWORD *)((char *)v218 + 3);
  uint64_t v284 = v194;
  uint64_t v285 = v193;
  uint64_t v286 = v192;
  uint64_t v287 = v191;
  char v288 = v198;
  *(_DWORD *)&v289[3] = *(_DWORD *)((char *)v217 + 3);
  *(_DWORD *)uint64_t v289 = v217[0];
  char v290 = v209;
  *(_DWORD *)&v291[3] = *(_DWORD *)((char *)v216 + 3);
  *(_DWORD *)uint64_t v291 = v216[0];
  uint64_t v292 = v202;
  uint64_t v293 = v201;
  uint64_t v294 = v200;
  uint64_t v295 = v199;
  char v296 = (char)v205;
  sub_261A43BA0((uint64_t)&v274);
  return sub_261A43AEC(v212, (uint64_t (*)(void))type metadata accessor for TrainingLoadOnboardingCore);
}

uint64_t sub_261A42C34()
{
  return sub_261B8D9C8();
}

uint64_t sub_261A42C58()
{
  return sub_261B8D9C8();
}

uint64_t sub_261A42C7C()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261A42CB4@<X0>(uint64_t a1@<X8>)
{
  return sub_261A418AC(*(void *)(v1 + 16), a1);
}

uint64_t sub_261A42CBC()
{
  uint64_t v1 = *(void *)(type metadata accessor for TrainingLoadEffortExplanationView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_261B8D518();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_261A42DF8(uint64_t a1, uint64_t a2)
{
  EffortExplanationuint64_t View = type metadata accessor for TrainingLoadEffortExplanationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(EffortExplanationView - 8) + 32))(a2, a1, EffortExplanationView);
  return a2;
}

uint64_t sub_261A42E5C()
{
  EffortExplanationuint64_t View = type metadata accessor for TrainingLoadEffortExplanationView();
  return (*(uint64_t (**)(void))(v0
                              + *(int *)(EffortExplanationView + 20)
                              + ((*(unsigned __int8 *)(*(void *)(EffortExplanationView - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(EffortExplanationView - 8) + 80))))();
}

uint64_t sub_261A42EC8()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for TrainingLoadEffortExplanationView(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_261B8D518();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)((char *)v4 + v9);
    uint64_t v12 = (void *)((char *)a2 + v9);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    LOBYTE(v12) = *((unsigned char *)a2 + v10);
    *uint64_t v11 = v14;
    v11[1] = v13;
    *((unsigned char *)v4 + v1sub_261A34804(0, 1, 2, 0) = (_BYTE)v12;
    uint64_t v15 = a3[7];
    id v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)id v16 = *(void *)v17;
    *((void *)v16 + sub_261A34804(3, 0, 0, 1) = v18;
    v16[16] = v17[16];
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for TrainingLoadEffortExplanationView(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_261B8D518();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for TrainingLoadEffortExplanationView(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_261B8D518();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  LOBYTE(v1sub_261A34804(0, 1, 2, 0) = *((unsigned char *)a2 + v8);
  *uint64_t v9 = v12;
  v9[1] = v11;
  *((unsigned char *)a1 + v8) = (_BYTE)v10;
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + sub_261A34804(3, 0, 0, 1) = v16;
  v14[16] = v15[16];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TrainingLoadEffortExplanationView(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_2619F8754((uint64_t)a1, &qword_26A943200);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_261B8D518();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)((char *)a1 + v1sub_261A34804(3, 0, 0, 1) = *(void *)((char *)a2 + v11);
  swift_retain();
  swift_release();
  *((void *)v12 + sub_261A34804(3, 0, 0, 1) = *((void *)v13 + 1);
  swift_retain();
  swift_release();
  v12[16] = v13[16];
  return a1;
}

char *initializeWithTake for TrainingLoadEffortExplanationView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_261B8D518();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  a1[v8] = a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  unsigned char v10[16] = v11[16];
  return a1;
}

char *assignWithTake for TrainingLoadEffortExplanationView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_2619F8754((uint64_t)a1, &qword_26A943200);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_261B8D518();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  swift_release();
  uint64_t v8 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)&a1[v8] = *(void *)v10;
  swift_release();
  *((void *)v9 + sub_261A34804(3, 0, 0, 1) = *((void *)v10 + 1);
  swift_release();
  unsigned char v9[16] = v10[16];
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadEffortExplanationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A43598);
}

uint64_t sub_261A43598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944CD0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1sub_261A34804(0, 1, 2, 0) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TrainingLoadEffortExplanationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A43670);
}

uint64_t sub_261A43670(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944CD0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_261A43730()
{
  sub_261A2CE08();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_261A437E0()
{
  unint64_t result = qword_26A944CE8;
  if (!qword_26A944CE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943400);
    sub_261A4385C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944CE8);
  }
  return result;
}

unint64_t sub_261A4385C()
{
  unint64_t result = qword_26A944CF0;
  if (!qword_26A944CF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9433F8);
    sub_2619F8AB8(&qword_26A944CF8, &qword_26A944CA8);
    sub_2619F8AB8(&qword_26A943368, &qword_26A943370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944CF0);
  }
  return result;
}

uint64_t sub_261A43920()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261A43958()
{
  return sub_261B1586C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_261A43960()
{
  return sub_261B057F8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_261A43978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A439E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A43A48(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A43A98(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A43AEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_261A43B4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A43BA0(uint64_t a1)
{
  return a1;
}

BOOL static LocationDisambiguation.Intent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LocationDisambiguation.Intent.hash(into:)()
{
  return sub_261B8FCA8();
}

uint64_t LocationDisambiguation.Intent.hashValue.getter()
{
  return sub_261B8FCE8();
}

int *LocationDisambiguation.init(workoutConfiguration:intent:onDisambiguationComplete:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  char v9 = *a2;
  *a5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  swift_storeEnumTagMultiPayload();
  unint64_t result = (int *)type metadata accessor for LocationDisambiguation();
  uint64_t v11 = result[6];
  uint64_t v12 = (uint64_t *)((char *)a5 + result[7]);
  *(uint64_t *)((char *)a5 + result[5]) = a1;
  *((unsigned char *)a5 + v1sub_261A34804(3, 0, 0, 1) = v9;
  void *v12 = a3;
  v12[1] = a4;
  return result;
}

uint64_t LocationDisambiguation.body.getter()
{
  return sub_261B8E278();
}

uint64_t sub_261A43DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D78);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v75 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v74 = (char *)v70 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v72 = (char *)v70 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v71 = (char *)v70 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D80);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v81 = (uint64_t)v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v80 = (uint64_t)v70 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v78 = (char *)v70 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v70 - v19;
  uint64_t v21 = type metadata accessor for LocationDisambiguation();
  uint64_t v22 = (void *)sub_261B8BA28();
  unsigned int v23 = objc_msgSend(v22, sel_requiresLocationDisambiguation);

  uint64_t v82 = v3;
  uint64_t v79 = v4;
  uint64_t v76 = a1;
  uint64_t v77 = v20;
  uint64_t v73 = v21;
  if (v23)
  {
    if (*(unsigned char *)(a1 + *(int *)(v21 + 24)) == 1)
    {
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v24 = (id)qword_26B416688;
      uint64_t v25 = sub_261B8AA48();
      unint64_t v27 = v26;
    }
    else
    {
      uint64_t v25 = 0;
      unint64_t v27 = 0xE000000000000000;
    }
    *(void *)&long long v84 = v25;
    *((void *)&v84 + sub_261A34804(3, 0, 0, 1) = v27;
    sub_261A029C4();
    uint64_t v29 = sub_261B8E3D8();
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    char v35 = v34 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v118 = v29;
    uint64_t v119 = v31;
    char v120 = v35;
    uint64_t v121 = v33;
    uint64_t v122 = KeyPath;
    char v123 = 1;
    sub_261B8EC98();
    sub_2619FEB38(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v102, 0.0, 1, 0.0, 1);
    sub_261A02A18(v29, v31, v35);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_261B8DFA8();
    v70[1] = v70;
    char v101 = 1;
    long long v91 = v109;
    long long v92 = v110;
    long long v93 = v111;
    long long v86 = v104;
    long long v87 = v105;
    long long v88 = v106;
    long long v89 = v107;
    long long v90 = v108;
    long long v84 = v102;
    long long v85 = v103;
    char v94 = v37;
    *(_DWORD *)uint64_t v95 = v112;
    *(_DWORD *)&v95[3] = *(_DWORD *)((char *)&v112 + 3);
    long long v96 = 0u;
    long long v97 = 0u;
    char v98 = 1;
    MEMORY[0x270FA5388](v37);
    uint64_t v38 = v76;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944720);
    sub_261A463A4(&qword_26A944D98, &qword_26A944D90, (void (*)(void))sub_261A339EC);
    sub_2619F8AB8(&qword_26A944778, &qword_26A944720);
    uint64_t v39 = v72;
    sub_261B8EC18();
    uint64_t v40 = v71;
    uint64_t v41 = v79;
    char v42 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
    char v43 = v39;
    uint64_t v3 = v82;
    v42(v71, v43, v82);
    uint64_t v20 = v77;
    v42(v77, v40, v3);
    a1 = v38;
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
    v28(v20, 0, 1, v3);
  }
  else
  {
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v28(v20, 1, 1, v3);
  }
  uint64_t v44 = (void *)sub_261B8BA28();
  uint64_t v45 = a1;
  unsigned int v46 = objc_msgSend(v44, sel_requiresSwimmingLocationDisambiguation);

  if (v46)
  {
    if (*(unsigned char *)(v45 + *(int *)(v73 + 24)) == 1)
    {
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v47 = (id)qword_26B416688;
      uint64_t v48 = sub_261B8AA48();
      unint64_t v50 = v49;
    }
    else
    {
      uint64_t v48 = 0;
      unint64_t v50 = 0xE000000000000000;
    }
    *(void *)&long long v84 = v48;
    *((void *)&v84 + sub_261A34804(3, 0, 0, 1) = v50;
    sub_261A029C4();
    uint64_t v52 = sub_261B8E3D8();
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    char v58 = v57 & 1;
    uint64_t v59 = swift_getKeyPath();
    uint64_t v112 = v52;
    uint64_t v113 = v54;
    char v114 = v58;
    uint64_t v115 = v56;
    uint64_t v116 = v59;
    char v117 = 1;
    sub_261B8EC98();
    sub_2619FEB38(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v102, 0.0, 1, 0.0, 1);
    sub_261A02A18(v52, v54, v58);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_261B8DFA8();
    char v99 = 1;
    long long v91 = v109;
    long long v92 = v110;
    long long v93 = v111;
    long long v86 = v104;
    long long v87 = v105;
    long long v88 = v106;
    long long v89 = v107;
    long long v90 = v108;
    long long v84 = v102;
    long long v85 = v103;
    char v94 = v60;
    *(_DWORD *)uint64_t v95 = *(_DWORD *)v100;
    *(_DWORD *)&v95[3] = *(_DWORD *)&v100[3];
    long long v96 = 0u;
    long long v97 = 0u;
    char v98 = 1;
    MEMORY[0x270FA5388](v60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A944720);
    sub_261A463A4(&qword_26A944D98, &qword_26A944D90, (void (*)(void))sub_261A339EC);
    sub_2619F8AB8(&qword_26A944778, &qword_26A944720);
    uint64_t v61 = v75;
    sub_261B8EC18();
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
    uint64_t v63 = v74;
    uint64_t v64 = v82;
    v62(v74, v61, v82);
    uint64_t v51 = (uint64_t)v78;
    v62(v78, v63, v64);
    v28((char *)v51, 0, 1, v64);
    uint64_t v20 = v77;
  }
  else
  {
    uint64_t v51 = (uint64_t)v78;
    v28(v78, 1, 1, v3);
  }
  uint64_t v65 = v80;
  sub_261A4632C((uint64_t)v20, v80);
  uint64_t v66 = v81;
  sub_261A4632C(v51, v81);
  uint64_t v67 = v83;
  sub_261A4632C(v65, v83);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D88);
  sub_261A4632C(v66, v67 + *(int *)(v68 + 48));
  sub_2619F8754(v51, &qword_26A944D80);
  sub_2619F8754((uint64_t)v20, &qword_26A944D80);
  sub_2619F8754(v66, &qword_26A944D80);
  return sub_2619F8754(v65, &qword_26A944D80);
}

uint64_t sub_261A44744@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for LocationDisambiguation();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944728);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v31 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)v28 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v29 = (char *)v28 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v28 - v15;
  sub_261A46428(a1, (uint64_t)v6);
  unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28[1] = v17 + v5;
  uint64_t v18 = swift_allocObject();
  sub_261A46490((uint64_t)v6, v18 + v17);
  uint64_t v34 = a1;
  v28[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9445C8);
  sub_261A339EC();
  sub_261B8EA58();
  sub_261A46428(a1, (uint64_t)v6);
  uint64_t v19 = swift_allocObject();
  sub_261A46490((uint64_t)v6, v19 + v17);
  uint64_t v33 = a1;
  uint64_t v20 = v29;
  sub_261B8EA58();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v22 = v30;
  v21(v30, v16, v7);
  unsigned int v23 = v31;
  v21(v31, v20, v7);
  id v24 = v32;
  v21(v32, v22, v7);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944770);
  v21(&v24[*(int *)(v25 + 48)], v23, v7);
  unint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v20, v7);
  v26(v16, v7);
  v26(v23, v7);
  return ((uint64_t (*)(char *, uint64_t))v26)(v22, v7);
}

uint64_t sub_261A44ADC(uint64_t a1, char a2, void (*a3)(char *, uint64_t), char a4)
{
  char v58 = a3;
  uint64_t v55 = a1;
  int v56 = a4 & 1;
  LODWORD(v57) = a2 & 1;
  uint64_t v45 = sub_261B8CE88();
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  char v43 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8ED78();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v51 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_261B8ED98();
  uint64_t v50 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  unint64_t v49 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocationDisambiguation();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v46 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v59 = sub_261B8EDB8();
  uint64_t v48 = *(void *)(v59 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v59);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v47 = (char *)&v43 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416BC8);
  MEMORY[0x270FA5388](v15 - 8);
  unint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_261B8D518();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2619FAB90((uint64_t)v21);
  sub_261B8D508();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  if (*(unsigned char *)(v4 + *(int *)(v9 + 24)) == 1)
  {
    sub_261B8AE28();
    uint64_t v22 = sub_261B8AE38();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 0, 1, v22);
  }
  else
  {
    uint64_t v23 = sub_261B8AE38();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v17, 1, 1, v23);
  }
  uint64_t v24 = (uint64_t)v17;
  uint64_t v25 = sub_261B8BA98();
  if (v25)
  {
    unint64_t v26 = (void *)v25;
    sub_261A46578();
    uint64_t v57 = sub_261B8F568();
    sub_261B8EDA8();
    unint64_t v27 = v47;
    MEMORY[0x263E4CC90](v13, 0.3);
    char v58 = *(void (**)(char *, uint64_t))(v48 + 8);
    v58(v13, v59);
    sub_261A46428(v4, (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v28 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v29 = v24;
    uint64_t v30 = swift_allocObject();
    sub_261A46490((uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v28);
    *(void *)(v30 + ((v10 + v28 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    aBlock[4] = sub_261A46704;
    aBlock[5] = v30;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_261B052D8;
    aBlock[3] = &block_descriptor;
    uint64_t v31 = _Block_copy(aBlock);
    id v32 = v26;
    swift_release();
    uint64_t v33 = v49;
    sub_261B8ED88();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_261A467A4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B416CB0);
    sub_2619F8AB8((unint64_t *)&qword_26B416CB8, &qword_26B416CB0);
    uint64_t v34 = v51;
    uint64_t v35 = v54;
    sub_261B8F7E8();
    uint64_t v36 = (void *)v57;
    MEMORY[0x263E4D410](v27, v33, v34, v31);
    uint64_t v37 = v31;
    uint64_t v24 = v29;
    _Block_release(v37);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v34, v35);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v33, v52);
    v58(v27, v59);
  }
  else
  {
    uint64_t v38 = v43;
    sub_261B8C628();
    uint64_t v39 = sub_261B8CE78();
    os_log_type_t v40 = sub_261B8F4B8();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_2619F0000, v39, v40, "Unable to start workout for managed configuration, disambiguated workout configuration was nil", v41, 2u);
      MEMORY[0x263E4E970](v41, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v45);
  }
  return sub_2619F8754(v24, &qword_26B416BC8);
}

uint64_t sub_261A45238@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  id v32 = a2;
  uint64_t v3 = type metadata accessor for LocationDisambiguation();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944728);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v31 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)v28 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v29 = (char *)v28 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v28 - v15;
  sub_261A46428(a1, (uint64_t)v6);
  unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28[1] = v17 + v5;
  uint64_t v18 = swift_allocObject();
  sub_261A46490((uint64_t)v6, v18 + v17);
  uint64_t v34 = a1;
  v28[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9445C8);
  sub_261A339EC();
  sub_261B8EA58();
  sub_261A46428(a1, (uint64_t)v6);
  uint64_t v19 = swift_allocObject();
  sub_261A46490((uint64_t)v6, v19 + v17);
  uint64_t v33 = a1;
  uint64_t v20 = v29;
  sub_261B8EA58();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v22 = v30;
  v21(v30, v16, v7);
  uint64_t v23 = v31;
  v21(v31, v20, v7);
  uint64_t v24 = v32;
  v21(v32, v22, v7);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944770);
  v21(&v24[*(int *)(v25 + 48)], v23, v7);
  unint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v20, v7);
  v26(v16, v7);
  v26(v23, v7);
  return ((uint64_t (*)(char *, uint64_t))v26)(v22, v7);
}

double sub_261A455D0@<D0>(_OWORD *a1@<X8>)
{
  type metadata accessor for LocationDisambiguation();
  uint64_t v2 = (void *)sub_261B8BA28();
  uint64_t v3 = (void *)sub_261B8F658();

  id v4 = objc_msgSend(v3, sel_localizedName);
  uint64_t v5 = sub_261B8F0F8();
  uint64_t v7 = v6;

  *(void *)&v20[0] = v5;
  *((void *)&v20[0] + sub_261A34804(3, 0, 0, 1) = v7;
  sub_261A029C4();
  uint64_t v8 = sub_261B8E3D8();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v21 = v8;
  uint64_t v22 = v9;
  char v23 = v11 & 1;
  uint64_t v24 = v13;
  uint64_t KeyPath = swift_getKeyPath();
  char v26 = 1;
  sub_261B8EC98();
  sub_2619FEB38(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v20, 0.0, 1, 0.0, 1);

  sub_261A02A18(v8, v10, v12);
  swift_release();
  swift_bridgeObjectRelease();
  long long v14 = v20[7];
  a1[6] = v20[6];
  a1[7] = v14;
  long long v15 = v20[9];
  a1[8] = v20[8];
  a1[9] = v15;
  long long v16 = v20[3];
  a1[2] = v20[2];
  a1[3] = v16;
  long long v17 = v20[5];
  a1[4] = v20[4];
  a1[5] = v17;
  double result = *(double *)v20;
  long long v19 = v20[1];
  *a1 = v20[0];
  a1[1] = v19;
  return result;
}

uint64_t sub_261A45770()
{
  return sub_261B8E278();
}

uint64_t type metadata accessor for LocationDisambiguation()
{
  uint64_t result = qword_26A944D58;
  if (!qword_26A944D58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A45854@<X0>(uint64_t a1@<X8>)
{
  return sub_261A43DA4(*(void *)(v1 + 16), a1);
}

unint64_t sub_261A45860()
{
  unint64_t result = qword_26A944D50;
  if (!qword_26A944D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944D50);
  }
  return result;
}

uint64_t sub_261A458B4()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for LocationDisambiguation(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_261B8D518();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    char v11 = *(void **)((char *)a2 + v9);
    *(void *)((char *)a1 + v9) = v11;
    *((unsigned char *)a1 + v1sub_261A34804(0, 1, 2, 0) = *((unsigned char *)a2 + v10);
    uint64_t v12 = a3[7];
    uint64_t v13 = (void *)((char *)a1 + v12);
    long long v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = *v14;
    id v16 = v11;
    if (v15)
    {
      uint64_t v17 = v14[1];
      *uint64_t v13 = v15;
      v13[1] = v17;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    }
  }
  return a1;
}

void destroy for LocationDisambiguation(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_261B8D518();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  if (*(void *)(a1 + *(int *)(a2 + 28)))
  {
    swift_release();
  }
}

void *initializeWithCopy for LocationDisambiguation(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_261B8D518();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = v9;
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  uint64_t v10 = a3[7];
  char v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = *v12;
  id v14 = v9;
  if (v13)
  {
    uint64_t v15 = v12[1];
    *char v11 = v13;
    v11[1] = v15;
    swift_retain();
  }
  else
  {
    *(_OWORD *)char v11 = *(_OWORD *)v12;
  }
  return a1;
}

void *assignWithCopy for LocationDisambiguation(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_2619F8754((uint64_t)a1, &qword_26A943200);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_261B8D518();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)((char *)a2 + v7);
  uint64_t v9 = *(void **)((char *)a1 + v7);
  *(void *)((char *)a1 + v7) = v8;
  id v10 = v8;

  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = *(void *)((char *)a1 + v11);
  uint64_t v15 = *v13;
  if (!v14)
  {
    if (v15)
    {
      uint64_t v17 = v13[1];
      void *v12 = v15;
      v12[1] = v17;
      swift_retain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    return a1;
  }
  if (!v15)
  {
    swift_release();
    goto LABEL_12;
  }
  uint64_t v16 = v13[1];
  void *v12 = v15;
  v12[1] = v16;
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for LocationDisambiguation(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_261B8D518();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  a1[v8] = a2[v8];
  uint64_t v9 = a3[7];
  id v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(void *)v11;
  if (*(void *)v11)
  {
    uint64_t v13 = *((void *)v11 + 1);
    *(void *)id v10 = v12;
    *((void *)v10 + sub_261A34804(3, 0, 0, 1) = v13;
  }
  else
  {
    *(_OWORD *)id v10 = *(_OWORD *)v11;
  }
  return a1;
}

char *assignWithTake for LocationDisambiguation(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_2619F8754((uint64_t)a1, &qword_26A943200);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_261B8D518();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = *(void **)&a1[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];

  uint64_t v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *(void *)v12;
  if (!*(void *)&a1[v10])
  {
    if (v13)
    {
      uint64_t v15 = *((void *)v12 + 1);
      *(void *)uint64_t v11 = v13;
      *((void *)v11 + sub_261A34804(3, 0, 0, 1) = v15;
      return a1;
    }
LABEL_11:
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    return a1;
  }
  if (!v13)
  {
    swift_release();
    goto LABEL_11;
  }
  uint64_t v14 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = v13;
  *((void *)v11 + sub_261A34804(3, 0, 0, 1) = v14;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A45FA8);
}

uint64_t sub_261A45FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944CD0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1sub_261A34804(0, 1, 2, 0) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for LocationDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A46080);
}

uint64_t sub_261A46080(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944CD0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_261A46140()
{
  sub_261A2CE08();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for LocationDisambiguation.Intent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_261A34804(3, 0, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261A462B8);
      case 4:
        *(_DWORD *)(result + sub_261A34804(3, 0, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_261A34804(3, 0, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_261A34804(3, 0, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationDisambiguation.Intent()
{
  return &type metadata for LocationDisambiguation.Intent;
}

uint64_t sub_261A462F0()
{
  return sub_2619F8AB8(&qword_26A944D68, &qword_26A944D70);
}

uint64_t sub_261A4632C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A4639C@<X0>(char *a1@<X8>)
{
  return sub_261A45238(*(void *)(v1 + 16), a1);
}

uint64_t sub_261A463A4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A46420@<X0>(char *a1@<X8>)
{
  return sub_261A44744(*(void *)(v1 + 16), a1);
}

uint64_t sub_261A46428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationDisambiguation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A46490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationDisambiguation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A464F4()
{
  return sub_261A46988(2, 0, 0, 1);
}

double sub_261A46508@<D0>(_OWORD *a1@<X8>)
{
  return sub_261A455D0(a1);
}

uint64_t sub_261A46538()
{
  return sub_261A46988(3, 0, 0, 1);
}

double sub_261A4654C@<D0>(_OWORD *a1@<X8>)
{
  return sub_261A455D0(a1);
}

unint64_t sub_261A46578()
{
  unint64_t result = qword_26B416D00;
  if (!qword_26B416D00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B416D00);
  }
  return result;
}

uint64_t sub_261A465B8()
{
  uint64_t v1 = type metadata accessor for LocationDisambiguation();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_261B8D518();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }

  if (*(void *)(v5 + *(int *)(v1 + 28))) {
    swift_release();
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return MEMORY[0x270FA0238](v0, v8, v2 | 7);
}

uint64_t sub_261A46704()
{
  uint64_t v1 = type metadata accessor for LocationDisambiguation();
  uint64_t v4 = *(void *)(v1 - 8);
  uint64_t result = v1 - 8;
  uint64_t v3 = v4;
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (uint64_t (**)(void))(v0 + *(int *)(result + 36) + v5);
  if (*v6) {
    return (*v6)(*(void *)(v0 + ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8)));
  }
  return result;
}

unint64_t sub_261A467A4()
{
  unint64_t result = qword_26B416BF0;
  if (!qword_26B416BF0)
  {
    sub_261B8ED78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B416BF0);
  }
  return result;
}

uint64_t sub_261A46800()
{
  return sub_261A46988(0, 1, (void (*)(char *, uint64_t))1, 0);
}

double sub_261A46814@<D0>(_OWORD *a1@<X8>)
{
  return sub_261A455D0(a1);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = type metadata accessor for LocationDisambiguation();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_261B8D518();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }

  if (*(void *)(v5 + *(int *)(v1 + 28))) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_261A46974()
{
  return sub_261A46988(0, 1, (void (*)(char *, uint64_t))2, 0);
}

uint64_t sub_261A46988(uint64_t a1, char a2, void (*a3)(char *, uint64_t), char a4)
{
  return sub_261A44ADC(a1, a2, a3, a4);
}

double sub_261A46A14@<D0>(_OWORD *a1@<X8>)
{
  return sub_261A455D0(a1);
}

uint64_t WorkoutStepRow.init(step:formattingManager:referenceStep:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_261B8BCA8();
  sub_261A484D4(&qword_26A9432E0, MEMORY[0x263F87CC8]);
  uint64_t result = sub_261B8D5E8();
  *a3 = result;
  a3[1] = v7;
  a3[2] = a1;
  a3[3] = a2;
  return result;
}

void WorkoutStepRow.body.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_261B8C688();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v38 - v8;
  unint64_t v10 = *(void **)(v1 + 16);
  uint64_t v39 = *(void *)(v1 + 24);
  swift_retain();
  uint64_t v11 = WorkoutStep.displayString.getter();
  uint64_t v42 = v12;
  uint64_t v43 = v11;
  swift_release();
  swift_retain();
  uint64_t v13 = (void *)sub_261B8BC88();
  swift_release();
  swift_retain();
  uint64_t v14 = (void *)sub_261B8BC08();
  swift_release();
  uint64_t v15 = FIUIDistanceTypeForActivityType();

  id v40 = v10;
  uint64_t v16 = NLSessionActivityGoal.intervalDisplayString(formattingManager:distanceType:)(v10, v15, 0);
  uint64_t v41 = v17;

  swift_retain();
  sub_261B8BC98();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  if (v18 == *MEMORY[0x263F87F80])
  {
    uint64_t v19 = v39;
LABEL_6:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    uint64_t v39 = sub_261B8E948();
    swift_retain();
    uint64_t v20 = (void *)sub_261B8BC88();
    swift_release();
    uint64_t v21 = v16;
    if (sub_261B8F608()) {
      uint64_t v22 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
    }
    else {
      uint64_t v22 = _HKWorkoutGoalType.color.getter((uint64_t)objc_msgSend(v20, sel_goalTypeIdentifier));
    }
    char v23 = v22;

    uint64_t v24 = MEMORY[0x263E4C7B0](v23);
    swift_retain();
    swift_retain_n();
    id v25 = v40;
    uint64_t v26 = sub_261B8BC48();
    uint64_t v28 = v27;
    swift_release();
    if (v28)
    {
      uint64_t v29 = sub_261B8E948();
      swift_release();

      swift_release();
      if (v19)
      {
LABEL_11:
        uint64_t v30 = (void *)sub_261B8BC88();
        swift_retain();
        uint64_t v31 = (void *)sub_261B8BC08();
        swift_release();
        uint64_t v32 = FIUIDistanceTypeForActivityType();

        uint64_t v33 = NLSessionActivityGoal.intervalDisplayString(formattingManager:distanceType:)(v25, v32, 0);
        uint64_t v35 = v34;

LABEL_14:
        uint64_t v36 = v42;
        *(void *)a1 = v43;
        *(void *)(a1 + 8) = v36;
        uint64_t v37 = v41;
        *(void *)(a1 + 16) = v21;
        *(void *)(a1 + 24) = v37;
        *(void *)(a1 + 32) = v39;
        *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v24;
        *(void *)(a1 + 48) = v29;
        *(void *)(a1 + 56) = v26;
        *(void *)(a1 + 64) = v28;
        *(unsigned char *)(a1 + 72) = 0;
        *(void *)(a1 + 8sub_261A34804(0, 1, 2, 0) = v33;
        *(void *)(a1 + 88) = v35;
        return;
      }
    }
    else
    {
      swift_release();

      swift_release();
      uint64_t v29 = 0;
      uint64_t v26 = 0;
      if (v19) {
        goto LABEL_11;
      }
    }
    uint64_t v33 = 0;
    uint64_t v35 = 0;
    goto LABEL_14;
  }
  uint64_t v19 = v39;
  if (v18 == *MEMORY[0x263F87F78] || v18 == *MEMORY[0x263F87F88] || v18 == *MEMORY[0x263F87F90]) {
    goto LABEL_6;
  }
  sub_261B8F9C8();
  __break(1u);
}

uint64_t WorkoutStep.displayString.getter()
{
  uint64_t v0 = sub_261B8C688();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8BCE8();
  v12[3] = v4;
  v12[4] = sub_261A484D4((unint64_t *)&qword_26A943490, MEMORY[0x263F87CE8]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v4 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F87CE0], v4);
  LOBYTE(v4) = sub_261B8C6E8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if ((v4 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v6 = sub_261B8BBF8();
  if (!v7) {
    goto LABEL_7;
  }
  uint64_t v8 = v6;
  uint64_t v9 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_261B8BC98();
    uint64_t v8 = sub_261B8C668();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v8;
}

uint64_t WorkoutSkippingStepRow.init(stepType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_261B8C688();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t WorkoutSkippingStepRow.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_261B8C688();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8C668();
  uint64_t v17 = v8;
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v9 = (id)qword_26B416688;
  uint64_t v10 = sub_261B8AA48();
  uint64_t v12 = v11;

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  int v13 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v13 == *MEMORY[0x263F87F80]
    || v13 == *MEMORY[0x263F87F78]
    || v13 == *MEMORY[0x263F87F88]
    || v13 == *MEMORY[0x263F87F90])
  {
    uint64_t v14 = sub_261B8E948();
    uint64_t result = sub_261B8E858();
    uint64_t v16 = v17;
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v16;
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v14;
    *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = result;
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 48) = 0;
    *(unsigned char *)(a1 + 72) = 0;
    *(void *)(a1 + 8sub_261A34804(0, 1, 2, 0) = 0;
    *(void *)(a1 + 88) = 0;
  }
  else
  {
    uint64_t result = sub_261B8F9C8();
    __break(1u);
  }
  return result;
}

uint64_t sub_261A47490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_261B8E978();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E38);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(void *)(a1 + 32);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F1B538], v7);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v4 + 36), v10, v7);
  *uint64_t v6 = KeyPath;
  sub_2619F86F0((uint64_t)v6, (uint64_t)v14 + *(int *)(v12 + 44), &qword_26A944E30);
  void *v14 = v22;
  swift_retain_n();
  sub_2619F8754((uint64_t)v6, &qword_26A944E30);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_261A49250((uint64_t)&v22);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = v21;
  sub_2619F86F0((uint64_t)v14, v21, &qword_26A944E38);
  uint64_t v19 = (uint64_t *)(v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A944E48) + 36));
  uint64_t *v19 = v17;
  v19[1] = v16;
  swift_retain();
  return sub_2619F8754((uint64_t)v14, &qword_26A944E38);
}

uint64_t sub_261A4770C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944DD8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944DE0);
  MEMORY[0x270FA5388](v58);
  uint64_t v60 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944DE8);
  uint64_t v7 = MEMORY[0x270FA5388](v59);
  uint64_t v62 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v57 = (uint64_t)&v50 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v61 = (uint64_t)&v50 - v11;
  uint64_t v54 = sub_261B8E1F8();
  uint64_t v12 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_261B8E078();
  uint64_t v15 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_261B8E258();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a1;
  uint64_t v22 = a1[1];
  uint64_t v64 = *a1;
  uint64_t v65 = v22;
  sub_261A029C4();
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_261B8E3D8();
  uint64_t v55 = v24;
  uint64_t v56 = v23;
  int v53 = v25;
  uint64_t v27 = v26;
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F1A730], v18);
  sub_261B8E068();
  sub_261B8E158();
  sub_261B8E198();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v51);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v28 = v54;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F1A680], v54);
  uint64_t v29 = sub_261B8E218();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v28);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)uint64_t v5 = sub_261B8DAD8();
  *((void *)v5 + sub_261A34804(3, 0, 0, 1) = 0;
  v5[16] = 1;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944DF0);
  uint64_t v32 = v52;
  sub_261A47CE4(v52, (uint64_t)&v5[*(int *)(v31 + 44)]);
  LOBYTE(v32) = *((unsigned char *)v32 + 72);
  uint64_t v33 = sub_261B8E238();
  if (v32)
  {
    uint64_t v34 = sub_261B8E098();
    swift_release();
    uint64_t v33 = v34;
  }
  char v35 = v53 & 1;
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = v60;
  sub_2619F86F0((uint64_t)v5, v60, &qword_26A944DD8);
  uint64_t v38 = (uint64_t *)(v37 + *(int *)(v58 + 36));
  uint64_t *v38 = v36;
  v38[1] = v33;
  sub_2619F8754((uint64_t)v5, &qword_26A944DD8);
  uint64_t v39 = sub_261B8E8C8();
  uint64_t v40 = swift_getKeyPath();
  uint64_t v41 = v57;
  sub_2619F86F0(v37, v57, &qword_26A944DE0);
  uint64_t v42 = (uint64_t *)(v41 + *(int *)(v59 + 36));
  *uint64_t v42 = v40;
  v42[1] = v39;
  sub_2619F8754(v37, &qword_26A944DE0);
  uint64_t v43 = v61;
  sub_2619FB7EC(v41, v61, &qword_26A944DE8);
  uint64_t v44 = v62;
  sub_2619F86F0(v43, v62, &qword_26A944DE8);
  uint64_t v45 = v63;
  uint64_t v47 = v55;
  uint64_t v46 = v56;
  uint64_t *v63 = v56;
  v45[1] = v47;
  *((unsigned char *)v45 + 16) = v35;
  v45[3] = v27;
  v45[4] = KeyPath;
  v45[5] = v29;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944DF8);
  sub_2619F86F0(v44, (uint64_t)v45 + *(int *)(v48 + 48), &qword_26A944DE8);
  sub_261A001D0(v46, v47, v35);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_2619F8754(v43, &qword_26A944DE8);
  sub_2619F8754(v44, &qword_26A944DE8);
  sub_261A02A18(v46, v47, v35);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_261A47CE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E00);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v34[-v8];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E08);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = &v34[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v34[-v14];
  uint64_t v16 = a1[3];
  uint64_t v37 = a1[2];
  uint64_t v38 = v16;
  sub_261A029C4();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_261B8E3D8();
  uint64_t v20 = v19;
  char v21 = v17;
  uint64_t v36 = v22;
  uint64_t v23 = a1[6];
  if (v23)
  {
    int v35 = v17;
    uint64_t v26 = a1 + 7;
    uint64_t v25 = a1[7];
    uint64_t v24 = v26[1];
    swift_retain();
    swift_bridgeObjectRetain();
    *(void *)uint64_t v9 = sub_261B8DAD8();
    *((void *)v9 + sub_261A34804(3, 0, 0, 1) = 0x3FF0000000000000;
    unsigned char v9[16] = 0;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E20);
    sub_261A48034(v23, v25, v24, (uint64_t)&v9[*(int *)(v27 + 44)]);
    sub_2619F86F0((uint64_t)v9, (uint64_t)v7, &qword_26A944E00);
    *(void *)uint64_t v13 = 0;
    v13[8] = 1;
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E28);
    sub_2619F86F0((uint64_t)v7, (uint64_t)&v13[*(int *)(v28 + 48)], &qword_26A944E00);
    char v21 = v35;
    swift_bridgeObjectRelease();
    swift_release();
    sub_2619F8754((uint64_t)v9, &qword_26A944E00);
    sub_2619F8754((uint64_t)v7, &qword_26A944E00);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E10);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v13, 0, 1, v29);
    sub_2619FB7EC((uint64_t)v13, (uint64_t)v15, &qword_26A944E08);
  }
  else
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E10);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v15, 1, 1, v30);
  }
  char v31 = v21 & 1;
  sub_2619F86F0((uint64_t)v15, (uint64_t)v13, &qword_26A944E08);
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 16) = v31;
  *(void *)(a2 + 24) = v36;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E18);
  sub_2619F86F0((uint64_t)v13, a2 + *(int *)(v32 + 48), &qword_26A944E08);
  sub_261A001D0(v18, v20, v31);
  swift_bridgeObjectRetain();
  sub_2619F8754((uint64_t)v15, &qword_26A944E08);
  sub_2619F8754((uint64_t)v13, &qword_26A944E08);
  sub_261A02A18(v18, v20, v31);
  return swift_bridgeObjectRelease();
}

uint64_t sub_261A48034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_261B8E978();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E38);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int v17 = (uint64_t *)((char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v30 - v18;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F1B538], v9);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v8 + *(int *)(v6 + 36), v12, v9);
  *uint64_t v8 = KeyPath;
  sub_2619F86F0((uint64_t)v8, (uint64_t)v17 + *(int *)(v14 + 44), &qword_26A944E30);
  void *v17 = a1;
  swift_retain_n();
  sub_2619F8754((uint64_t)v8, &qword_26A944E30);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  sub_2619FB7EC((uint64_t)v17, (uint64_t)v19, &qword_26A944E38);
  uint64_t v34 = v31;
  uint64_t v35 = v32;
  sub_261A029C4();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_261B8E3D8();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  LOBYTE(asub_261A34804(3, 0, 0, 1) = v26 & 1;
  sub_2619F86F0((uint64_t)v19, (uint64_t)v17, &qword_26A944E38);
  uint64_t v27 = v33;
  sub_2619F86F0((uint64_t)v17, v33, &qword_26A944E38);
  uint64_t v28 = v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A944E40) + 48);
  *(void *)uint64_t v28 = v21;
  *(void *)(v28 + 8) = v23;
  *(unsigned char *)(v28 + 16) = a1;
  *(void *)(v28 + 24) = v25;
  sub_261A001D0(v21, v23, a1);
  swift_bridgeObjectRetain();
  sub_2619F8754((uint64_t)v19, &qword_26A944E38);
  sub_261A02A18(v21, v23, a1);
  swift_bridgeObjectRelease();
  return sub_2619F8754((uint64_t)v17, &qword_26A944E38);
}

uint64_t sub_261A4834C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944DB8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944DC0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = v1[3];
  void v17[2] = v1[2];
  void v17[3] = v9;
  long long v10 = v1[5];
  v17[4] = v1[4];
  v17[5] = v10;
  long long v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  uint64_t v12 = sub_261B8DAA8();
  sub_261A47490((uint64_t)v17, a1);
  uint64_t v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A944DC8);
  uint64_t v14 = a1 + v13[13];
  *(void *)uint64_t v5 = sub_261B8DBF8();
  *((void *)v5 + sub_261A34804(3, 0, 0, 1) = 0;
  v5[16] = 1;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944DD0);
  sub_261A4770C(v17, (uint64_t *)&v5[*(int *)(v15 + 44)]);
  sub_2619F86F0((uint64_t)v5, (uint64_t)v8, &qword_26A944DB8);
  sub_2619F8754((uint64_t)v5, &qword_26A944DB8);
  uint64_t result = sub_2619FB7EC((uint64_t)v8, v14, &qword_26A944DC0);
  *(void *)(a1 + v13[14]) = 0x4022000000000000;
  *(void *)(a1 + v13[15]) = v12;
  return result;
}

uint64_t sub_261A484D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A4851C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A48538()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for WorkoutStepRow(uint64_t a1)
{
  swift_release();

  return swift_release();
}

void *initializeWithCopy for WorkoutStepRow(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  swift_retain();
  id v6 = v5;
  swift_retain();
  return a1;
}

void *assignWithCopy for WorkoutStepRow(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WorkoutStepRow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for WorkoutStepRow()
{
  return &type metadata for WorkoutStepRow;
}

uint64_t initializeBufferWithCopyOfBuffer for WorkoutSkippingStepRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8C688();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for WorkoutSkippingStepRow(uint64_t a1)
{
  uint64_t v2 = sub_261B8C688();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for WorkoutSkippingStepRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8C688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for WorkoutSkippingStepRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8C688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for WorkoutSkippingStepRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8C688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for WorkoutSkippingStepRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8C688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutSkippingStepRow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A4893C);
}

uint64_t sub_261A4893C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8C688();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for WorkoutSkippingStepRow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A489BC);
}

uint64_t sub_261A489BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8C688();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WorkoutSkippingStepRow()
{
  uint64_t result = qword_26A944DA0;
  if (!qword_26A944DA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A48A78()
{
  uint64_t result = sub_261B8C688();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_261A48B08()
{
  unint64_t result = qword_26A944DB0;
  if (!qword_26A944DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944DB0);
  }
  return result;
}

uint64_t destroy for WorkoutStepBaseRow(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 48))
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WorkoutStepBaseRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v6;
  uint64_t v8 = a2 + 48;
  uint64_t v7 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 56);
    uint64_t v10 = *(void *)(a2 + 64);
    *(void *)(a1 + 48) = v7;
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v10;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v8;
    *(void *)(a1 + 64) = *(void *)(v8 + 16);
  }
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 8sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WorkoutStepBaseRow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v5)
    {
      *(void *)(a1 + 48) = v5;
      swift_retain();
      swift_release();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_261A48DFC(a1 + 48);
      uint64_t v7 = *(void *)(a2 + 64);
      *uint64_t v4 = *v6;
      *(void *)(a1 + 64) = v7;
    }
  }
  else if (v5)
  {
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *v6;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *uint64_t v4 = v8;
  }
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 8sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_261A48DFC(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8sub_261A34804(0, 1, 2, 0) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for WorkoutStepBaseRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 40);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 48);
  if (!*(void *)(a1 + 48)) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_261A48DFC(a1 + 48);
LABEL_5:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    goto LABEL_6;
  }
  *(void *)(a1 + 48) = v6;
  swift_release();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 8sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutStepBaseRow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutStepBaseRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_261A34804(0, 1, 2, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutStepBaseRow()
{
  return &type metadata for WorkoutStepBaseRow;
}

uint64_t destroy for WorkoutStepAlertLabel()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void *_s9WorkoutUI21WorkoutStepAlertLabelVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WorkoutStepAlertLabel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for WorkoutStepAlertLabel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WorkoutStepAlertLabel()
{
  return &type metadata for WorkoutStepAlertLabel;
}

uint64_t sub_261A49110()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A4913C()
{
  return sub_261B8D7C8();
}

uint64_t sub_261A49160()
{
  return sub_261B8D7C8();
}

uint64_t sub_261A49184(uint64_t a1)
{
  uint64_t v2 = sub_261B8E978();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_261B8D7D8();
}

uint64_t sub_261A49250(uint64_t a1)
{
  return a1;
}

unint64_t sub_261A49280()
{
  unint64_t result = qword_26A944E50;
  if (!qword_26A944E50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944DC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944E50);
  }
  return result;
}

id CatalogWorkoutDetailBridge.__allocating_init(workoutDetail:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = &v3[OBJC_IVAR___SMCatalogWorkoutDetail_workoutDetail];
  uint64_t v5 = sub_261B8B668();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

id CatalogWorkoutDetailBridge.init(workoutDetail:)(uint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[OBJC_IVAR___SMCatalogWorkoutDetail_workoutDetail];
  uint64_t v5 = sub_261B8B668();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v1;
  v9.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

uint64_t CatalogWorkoutDetailBridge.assetLoadStatus.getter()
{
  char v0 = sub_261B8B638();
  if (v1 == -1) {
    return 5;
  }
  if (v1) {
    return qword_261B95528[v0];
  }
  return 6;
}

id CatalogWorkoutDetailBridge.workout.getter()
{
  uint64_t v0 = sub_261B8B488();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8B648();
  uint64_t v4 = (objc_class *)type metadata accessor for CatalogWorkoutBridge();
  uint64_t v5 = objc_allocWithZone(v4);
  (*(void (**)(unsigned char *, char *, uint64_t))(v1 + 16))(&v5[OBJC_IVAR___SMCatalogWorkout_workout], v3, v0);
  v5[OBJC_IVAR___SMCatalogWorkout_isPartOfAStack] = 0;
  v8.receiver = v5;
  v8.super_class = v4;
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t CatalogWorkoutDetailBridge.completedCount.getter()
{
  return sub_261B8B628();
}

id CatalogWorkoutDetailBridge.mediaTypeRawValue.getter()
{
  uint64_t v0 = sub_261B8B488();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8B648();
  uint64_t v4 = sub_261B8B478();
  uint64_t v6 = v5;
  char v8 = v7;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v8) {
    return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v4 + 1);
  }
  sub_261A49E4C(v4, v6, 0);
  return 0;
}

id CatalogWorkoutDetailBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CatalogWorkoutDetailBridge.init()()
{
}

id CatalogWorkoutDetailBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static CatalogWorkoutDetailBridge.canonical()()
{
  uint64_t v1 = sub_261B8B668();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8B658();
  id v5 = objc_allocWithZone(v0);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))((uint64_t)v5 + OBJC_IVAR___SMCatalogWorkoutDetail_workoutDetail, v4, v1);
  v8.receiver = v5;
  v8.super_class = v0;
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_261A49D2C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_261B8B668();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8B658();
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))((uint64_t)v7 + OBJC_IVAR___SMCatalogWorkoutDetail_workoutDetail, v6, v3);
  v10.receiver = v7;
  v10.super_class = v1;
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *a1 = v8;
  return result;
}

uint64_t sub_261A49E4C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_261A49E5C()
{
  return type metadata accessor for CatalogWorkoutDetailBridge();
}

uint64_t type metadata accessor for CatalogWorkoutDetailBridge()
{
  uint64_t result = qword_26A944E58;
  if (!qword_26A944E58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A49EB0()
{
  uint64_t result = sub_261B8B668();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CatalogWorkoutDetailBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CatalogWorkoutDetailBridge);
}

uint64_t dispatch thunk of CatalogWorkoutDetailBridge.__allocating_init(workoutDetail:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t WorkoutTimeView.init(startDate:showSubseconds:workoutStatePublisher:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = swift_getKeyPath();
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = swift_getKeyPath();
  *(unsigned char *)(a3 + 24) = 0;
  id v6 = (int *)type metadata accessor for WorkoutTimeView();
  uint64_t v7 = a3 + v6[6];
  uint64_t v8 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = v6[7];
  *(unsigned char *)(a3 + v9) = 0;
  sub_261A1F3C0(a1, v7);
  *(unsigned char *)(a3 + v9) = a2;
  objc_super v10 = (uint64_t *)(a3 + v6[8]);
  sub_261B8BB48();
  sub_261A4E078(&qword_26A943470, MEMORY[0x263F87C00]);
  uint64_t v11 = sub_261B8D5E8();
  uint64_t v13 = v12;
  uint64_t result = sub_2619F8754(a1, &qword_26A943B38);
  *objc_super v10 = v11;
  v10[1] = v13;
  return result;
}

uint64_t WorkoutTimeView.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for WorkoutTimeView();
  return sub_2619F86F0(v1 + *(int *)(v3 + 24), a1, &qword_26A943B38);
}

uint64_t WorkoutTimeView.startDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WorkoutTimeView() + 24);
  return sub_261A4C77C(a1, v3);
}

uint64_t (*WorkoutTimeView.startDate.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_261A4A184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  objc_super v10 = (char *)&v17 - v9;
  uint64_t v11 = sub_261B8ADD8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for WorkoutTimeView();
  sub_2619F86F0(v2 + *(int *)(v15 + 24), (uint64_t)v10, &qword_26A943B38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2619F8754((uint64_t)v10, &qword_26A943B38);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a2, a1, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    swift_retain();
    sub_261B8BAE8();
    swift_release();
    swift_retain();
    sub_261B8BB28();
    swift_release();
    sub_261B8ACE8();
    swift_bridgeObjectRelease();
    sub_2619F8754((uint64_t)v8, &qword_26A943B38);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t WorkoutTimeView.showSubseconds.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WorkoutTimeView() + 28));
}

uint64_t WorkoutTimeView.showSubseconds.setter(char a1)
{
  uint64_t result = type metadata accessor for WorkoutTimeView();
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*WorkoutTimeView.showSubseconds.modify())(void)
{
  return nullsub_1;
}

uint64_t WorkoutTimeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v94 = a1;
  uint64_t v93 = sub_261B8D748() - 8;
  MEMORY[0x270FA5388](v93);
  long long v92 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_261B8D668();
  uint64_t v90 = *(void *)(v3 - 8);
  uint64_t v91 = v3;
  MEMORY[0x270FA5388](v3);
  long long v89 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WorkoutTimeView();
  uint64_t v79 = *(void *)(v5 - 8);
  uint64_t v78 = *(void *)(v79 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v76 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_261B8DE58();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v73 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E68);
  uint64_t v8 = MEMORY[0x270FA5388](v95);
  uint64_t v77 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v69 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E70);
  uint64_t v86 = *(void *)(v12 - 8);
  uint64_t v87 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v80 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E78) - 8;
  MEMORY[0x270FA5388](v82);
  uint64_t v81 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E80) - 8;
  MEMORY[0x270FA5388](v85);
  long long v84 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_261B8ADD8();
  uint64_t v71 = v16;
  uint64_t v72 = *(void *)(v16 - 8);
  uint64_t v17 = v72;
  uint64_t v18 = *(void *)(v72 + 64);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v69 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v69 - v24;
  long long v88 = (char *)&v69 - v24;
  sub_261B8ADC8();
  uint64_t v70 = v1;
  sub_261A4A184((uint64_t)v25, (uint64_t)v23);
  char v26 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  uint64_t v83 = v23;
  v26(v20, v23, v16);
  uint64_t v27 = v73;
  sub_261B8DE48();
  swift_retain();
  char v28 = sub_261B8BAF8();
  swift_release();
  uint64_t v29 = v74;
  uint64_t v30 = v11;
  uint64_t v31 = v11;
  uint64_t v32 = v75;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v31, v27, v75);
  v30[*(int *)(v95 + 36)] = (v28 & 1) == 0;
  uint64_t v33 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v32);
  uint64_t v34 = v76;
  sub_261A4E1C8(v70, v76, (uint64_t (*)(void))type metadata accessor for WorkoutTimeView);
  uint64_t v35 = v71;
  v26(v20, v23, v71);
  unint64_t v36 = (*(unsigned __int8 *)(v79 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  uint64_t v37 = v72;
  unint64_t v38 = (v78 + *(unsigned __int8 *)(v72 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  uint64_t v39 = swift_allocObject();
  sub_261A4C9A0(v34, v39 + v36);
  uint64_t v40 = v35;
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v39 + v38, (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v35);
  sub_2619F86F0(v33, v77, &qword_26A944E68);
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_261A4CA04;
  *(void *)(v41 + 24) = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E88);
  sub_2619F8AB8(&qword_26A944E90, &qword_26A944E68);
  sub_2619F8AB8(&qword_26A944E98, &qword_26A944E88);
  uint64_t v42 = v80;
  sub_261B8D478();
  sub_2619F8754(v33, &qword_26A944E68);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v45 = v86;
  uint64_t v44 = v87;
  uint64_t v46 = (uint64_t)v81;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v81, v42, v87);
  uint64_t v47 = v46 + *(int *)(v82 + 44);
  *(_WORD *)uint64_t v47 = 256;
  *(void *)(v47 + 8) = KeyPath;
  *(unsigned char *)(v47 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
  uint64_t v48 = swift_getKeyPath();
  uint64_t v50 = v89;
  uint64_t v49 = v90;
  uint64_t v51 = v91;
  (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, *MEMORY[0x263F18DC8], v91);
  uint64_t v52 = (uint64_t)v84;
  int v53 = (uint64_t *)&v84[*(int *)(v85 + 44)];
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943A10);
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))((char *)v53 + *(int *)(v54 + 28), v50, v51);
  uint64_t *v53 = v48;
  sub_2619F86F0(v46, v52, &qword_26A944E78);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  sub_2619F8754(v46, &qword_26A944E78);
  uint64_t v55 = v92;
  uint64_t v56 = &v92[*(int *)(v93 + 28)];
  uint64_t v57 = *MEMORY[0x263F19860];
  uint64_t v58 = sub_261B8DBB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 104))(v56, v57, v58);
  __asm { FMOV            V0.2D, #5.0 }
  *uint64_t v55 = _Q0;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EA0);
  uint64_t v65 = v94;
  uint64_t v66 = v94 + *(int *)(v64 + 36);
  sub_261A4E1C8((uint64_t)v55, v66, MEMORY[0x263F19048]);
  *(unsigned char *)(v66 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A943A38) + 36)) = 0;
  sub_2619F86F0(v52, v65, &qword_26A944E80);
  sub_261A4E230((uint64_t)v55, MEMORY[0x263F19048]);
  sub_2619F8754(v52, &qword_26A944E80);
  uint64_t v67 = *(void (**)(char *, uint64_t))(v37 + 8);
  v67(v83, v40);
  return ((uint64_t (*)(char *, uint64_t))v67)(v88, v40);
}

uint64_t sub_261A4AD9C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)a3 = sub_261B8DAD8();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F00);
  return sub_261A4AE00(a1, a2, a3 + *(int *)(v6 + 44));
}

uint64_t sub_261A4AE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v124 = a2;
  uint64_t v141 = a1;
  uint64_t v139 = a3;
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F08);
  uint64_t v120 = *(void *)(v121 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v121);
  uint64_t v119 = (char *)v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v112 - v5;
  uint64_t v117 = sub_261B8DE58();
  uint64_t v116 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v115 = (char *)v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E68);
  uint64_t v8 = MEMORY[0x270FA5388](v126);
  uint64_t v10 = (char *)v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v118 = (char *)v112 - v11;
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F10);
  uint64_t v128 = *(void *)(v129 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v129);
  uint64_t v127 = (char *)v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v132 = (char *)v112 - v14;
  uint64_t v15 = type metadata accessor for WorkoutTimeView();
  uint64_t v113 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v123 = (uint64_t)v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v134 = (uint64_t (*)())((char *)v112 - v18);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F18);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v144 = (char *)v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v140 = (char *)v112 - v22;
  uint64_t v23 = sub_261B8DBD8();
  uint64_t v136 = *(void *)(v23 - 8);
  uint64_t v137 = (void (*)(char *, uint64_t, uint64_t))v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v135 = (char *)v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F20);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v143 = (char *)v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v142 = (uint64_t)v112 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v31 = (char *)v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_261B8ADD8();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  unint64_t v36 = (char *)v112 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  unint64_t v38 = (char *)v112 - v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EE0);
  sub_261B8D468();
  uint64_t v138 = v15;
  uint64_t v39 = *(int *)(v15 + 24);
  uint64_t v40 = v141;
  sub_2619F86F0(v141 + v39, (uint64_t)v31, &qword_26A943B38);
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32);
  sub_2619F8754((uint64_t)v31, &qword_26A943B38);
  uint64_t v130 = v6;
  uint64_t v125 = v10;
  uint64_t v131 = v33;
  uint64_t v122 = v36;
  if (v41 == 1)
  {
    uint64_t v42 = *(void (**)(char *, uint64_t))(v33 + 8);
  }
  else
  {
    sub_261A4A184((uint64_t)v38, (uint64_t)v36);
    sub_261B8AD28();
    uint64_t v42 = *(void (**)(char *, uint64_t))(v33 + 8);
    v42(v36, v32);
  }
  uint64_t v43 = v40;
  uint64_t v133 = v32;
  v42(v38, v32);
  sub_261B8C358();
  uint64_t v44 = *(void *)(v40 + 16);
  char v45 = *(unsigned char *)(v40 + 24);
  sub_2619F7774(v44, v45);
  sub_2619FA43C(v44, v45, &v145);
  sub_2619F7790(v44, v45);
  uint64_t v145 = sub_261B8C338();
  uint64_t v146 = v46;
  sub_261A029C4();
  uint64_t v47 = sub_261B8E3D8();
  uint64_t v49 = v48;
  char v51 = v50 & 1;
  uint64_t v145 = sub_261B8C348();
  uint64_t v146 = v52;
  uint64_t v53 = sub_261B8E338();
  uint64_t v55 = v54;
  char v57 = v56;
  uint64_t v59 = v58;
  sub_261A02A18(v47, v49, v51);
  swift_bridgeObjectRelease();
  uint64_t v60 = v43;
  swift_bridgeObjectRelease();
  uint64_t v145 = v53;
  uint64_t v146 = v55;
  char v147 = v57 & 1;
  uint64_t v148 = v59;
  uint64_t v61 = v135;
  sub_261B8DBC8();
  uint64_t v62 = (uint64_t)v143;
  sub_261B8E6F8();
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v136 + 8))(v61, v137);
  sub_261A02A18(v145, v146, v147);
  swift_bridgeObjectRelease();
  uint64_t v63 = v142;
  sub_2619FB7EC(v62, v142, &qword_26A944F20);
  uint64_t v64 = v138;
  if (*(unsigned char *)(v43 + *(int *)(v138 + 28)) != 1)
  {
    uint64_t v106 = v43;
    uint64_t v68 = v134;
    sub_261A4E1C8(v106, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for WorkoutTimeView);
    goto LABEL_9;
  }
  uint64_t v65 = v133;
  char v66 = sub_261B8F3D8();
  uint64_t v67 = v43;
  uint64_t v68 = v134;
  sub_261A4E1C8(v67, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for WorkoutTimeView);
  if (v66)
  {
LABEL_9:
    sub_261A4E230((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for WorkoutTimeView);
    uint64_t v72 = (uint64_t)v140;
    goto LABEL_10;
  }
  uint64_t v69 = *(void *)v68;
  char v70 = *((unsigned char *)v68 + 8);
  sub_2619F7774(*(void *)v68, v70);
  char v71 = sub_2619FABD0(v69, v70);
  sub_2619F7790(v69, v70);
  sub_261A4E230((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for WorkoutTimeView);
  uint64_t v72 = (uint64_t)v140;
  if (v71)
  {
LABEL_10:
    uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F28);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v72, 1, 1, v107);
    goto LABEL_11;
  }
  uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t))(v131 + 16);
  v131 += 16;
  uint64_t v137 = v73;
  v73(v122, v124, v65);
  uint64_t v74 = v115;
  sub_261B8DE48();
  uint64_t v138 = v60 + *(int *)(v64 + 32);
  swift_retain();
  char v75 = sub_261B8BAF8();
  swift_release();
  uint64_t v76 = v116;
  uint64_t v136 = *(void *)(v116 + 16);
  uint64_t v77 = (uint64_t)v118;
  uint64_t v78 = v117;
  ((void (*)(char *, char *, uint64_t))v136)(v118, v74, v117);
  *(unsigned char *)(v77 + *(int *)(v126 + 36)) = (v75 & 1) == 0;
  uint64_t v135 = *(char **)(v76 + 8);
  ((void (*)(char *, uint64_t))v135)(v74, v78);
  uint64_t v134 = type metadata accessor for WorkoutTimeView;
  uint64_t v79 = v123;
  sub_261A4E1C8(v60, v123, (uint64_t (*)(void))type metadata accessor for WorkoutTimeView);
  uint64_t v80 = *(unsigned __int8 *)(v113 + 80);
  v114 += (v80 + 16) & ~v80;
  uint64_t v81 = (v80 + 16) & ~v80;
  uint64_t v116 = v81;
  uint64_t v113 = v80 | 7;
  uint64_t v82 = swift_allocObject();
  sub_261A4C9A0(v79, v82 + v81);
  sub_2619F86F0(v77, (uint64_t)v125, &qword_26A944E68);
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 16) = sub_261A4DDCC;
  *(void *)(v83 + 24) = v82;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F38);
  v112[1] = sub_2619F8AB8(&qword_26A944E90, &qword_26A944E68);
  sub_2619F8AB8(&qword_26A944F40, &qword_26A944F38);
  long long v84 = v127;
  uint64_t v85 = v126;
  sub_261B8D478();
  sub_2619F8754(v77, &qword_26A944E68);
  uint64_t v86 = v128;
  (*(void (**)(char *, char *, uint64_t))(v128 + 32))(v132, v84, v129);
  v137(v122, v124, v133);
  sub_261B8DE48();
  swift_retain();
  char v87 = sub_261B8BAF8();
  swift_release();
  ((void (*)(uint64_t, char *, uint64_t))v136)(v77, v74, v78);
  *(unsigned char *)(v77 + *(int *)(v85 + 36)) = (v87 & 1) == 0;
  ((void (*)(char *, uint64_t))v135)(v74, v78);
  uint64_t v88 = v123;
  sub_261A4E1C8(v141, v123, (uint64_t (*)(void))v134);
  uint64_t v89 = swift_allocObject();
  sub_261A4C9A0(v88, v89 + v116);
  sub_2619F86F0(v77, (uint64_t)v125, &qword_26A944E68);
  uint64_t v90 = swift_allocObject();
  *(void *)(v90 + 16) = sub_261A4DFA8;
  *(void *)(v90 + 24) = v89;
  type metadata accessor for FastDigitView();
  sub_261A4E078(&qword_26A944F48, (void (*)(uint64_t))type metadata accessor for FastDigitView);
  uint64_t v91 = v119;
  sub_261B8D478();
  sub_2619F8754(v77, &qword_26A944E68);
  uint64_t v92 = v120;
  uint64_t v93 = v130;
  uint64_t v94 = v121;
  (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v130, v91, v121);
  uint64_t v95 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  long long v96 = v127;
  uint64_t v97 = v129;
  v95(v127, v132, v129);
  char v98 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
  v98(v91, v93, v94);
  uint64_t v99 = (uint64_t)v144;
  v95(v144, v96, v97);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F50);
  v98((char *)(v99 + *(int *)(v100 + 48)), v91, v94);
  char v101 = *(void (**)(char *, uint64_t))(v92 + 8);
  v101(v130, v94);
  long long v102 = *(void (**)(char *, uint64_t))(v128 + 8);
  v102(v132, v97);
  long long v103 = v91;
  uint64_t v63 = v142;
  uint64_t v104 = v94;
  uint64_t v72 = (uint64_t)v140;
  v101(v103, v104);
  uint64_t v62 = (uint64_t)v143;
  v102(v96, v97);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F28);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v99, 0, 1, v105);
  sub_2619FB7EC(v99, v72, &qword_26A944F18);
LABEL_11:
  sub_2619F86F0(v63, v62, &qword_26A944F20);
  uint64_t v108 = (uint64_t)v144;
  sub_2619F86F0(v72, (uint64_t)v144, &qword_26A944F18);
  uint64_t v109 = v139;
  sub_2619F86F0(v62, v139, &qword_26A944F20);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F30);
  sub_2619F86F0(v108, v109 + *(int *)(v110 + 48), &qword_26A944F18);
  sub_2619F8754(v72, &qword_26A944F18);
  sub_2619F8754(v63, &qword_26A944F20);
  sub_2619F8754(v108, &qword_26A944F18);
  return sub_2619F8754(v62, &qword_26A944F20);
}

uint64_t sub_261A4BDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = sub_261B8DAD8();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F68);
  return sub_261A4BE2C(a2, a1, a3 + *(int *)(v6 + 44));
}

uint64_t sub_261A4BE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v63 = a2;
  uint64_t v69 = a3;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9441C8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v67 = (uint64_t *)((char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v66 = type metadata accessor for FastDigitView();
  uint64_t v5 = MEMORY[0x270FA5388](v66);
  uint64_t v68 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v64 = (uint64_t)&v60 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_261B8ADD8();
  uint64_t v11 = *(void *)(v61 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v61);
  uint64_t v60 = (uint64_t)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v60 - v14;
  uint64_t v16 = sub_261B8AEF8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F20);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v65 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v60 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v60 - v26;
  sub_261B8AEB8();
  uint64_t v28 = sub_261B8AE48();
  unint64_t v30 = v29;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v31 = 46;
  if (v30) {
    uint64_t v31 = v28;
  }
  unint64_t v32 = 0xE100000000000000;
  if (v30) {
    unint64_t v32 = v30;
  }
  uint64_t v70 = v31;
  unint64_t v71 = v32;
  sub_261A029C4();
  uint64_t v33 = sub_261B8E3D8();
  uint64_t v35 = v34;
  uint64_t v70 = v33;
  unint64_t v71 = v34;
  char v37 = v36 & 1;
  char v72 = v36 & 1;
  uint64_t v73 = v38;
  sub_261B8E588();
  uint64_t v39 = v35;
  uint64_t v40 = (uint64_t)v27;
  uint64_t v41 = v61;
  sub_261A02A18(v33, v39, v37);
  swift_bridgeObjectRelease();
  uint64_t v42 = (uint64_t)v25;
  uint64_t v43 = v62;
  sub_2619FB7EC(v42, v40, &qword_26A944F20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EE0);
  sub_261B8D468();
  uint64_t v44 = type metadata accessor for WorkoutTimeView();
  sub_2619F86F0(v43 + *(int *)(v44 + 24), (uint64_t)v10, &qword_26A943B38);
  int v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v41);
  sub_2619F8754((uint64_t)v10, &qword_26A943B38);
  if (v45 == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v41);
  }
  else
  {
    uint64_t v46 = v60;
    sub_261A4A184((uint64_t)v15, v60);
    sub_261B8AD28();
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v47(v46, v41);
    v47((uint64_t)v15, v41);
  }
  uint64_t v48 = sub_261B8F3F8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v50 = (uint64_t)v67;
  *uint64_t v67 = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F8);
  swift_storeEnumTagMultiPayload();
  uint64_t v51 = swift_getKeyPath();
  uint64_t v52 = v64;
  sub_2619FB7EC(v50, v64, &qword_26A9441C8);
  uint64_t v54 = (uint64_t)v65;
  uint64_t v53 = v66;
  uint64_t v55 = v52 + *(int *)(v66 + 20);
  *(void *)uint64_t v55 = v51;
  *(unsigned char *)(v55 + 8) = 0;
  *(void *)(v52 + *(int *)(v53 + 24)) = v48;
  sub_2619F86F0(v40, v54, &qword_26A944F20);
  uint64_t v56 = v68;
  sub_261A4E1C8(v52, v68, (uint64_t (*)(void))type metadata accessor for FastDigitView);
  uint64_t v57 = v69;
  sub_2619F86F0(v54, v69, &qword_26A944F20);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F70);
  sub_261A4E1C8(v56, v57 + *(int *)(v58 + 48), (uint64_t (*)(void))type metadata accessor for FastDigitView);
  sub_261A4E230(v52, (uint64_t (*)(void))type metadata accessor for FastDigitView);
  sub_2619F8754(v40, &qword_26A944F20);
  sub_261A4E230(v56, (uint64_t (*)(void))type metadata accessor for FastDigitView);
  return sub_2619F8754(v54, &qword_26A944F20);
}

unint64_t sub_261A4C408@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9441C8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8ADD8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EE0);
  sub_261B8D468();
  uint64_t v16 = type metadata accessor for WorkoutTimeView();
  sub_2619F86F0(a1 + *(int *)(v16 + 24), (uint64_t)v8, &qword_26A943B38);
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  sub_2619F8754((uint64_t)v8, &qword_26A943B38);
  if (v17 == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {
    sub_261A4A184((uint64_t)v15, (uint64_t)v13);
    sub_261B8AD28();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
    v18(v13, v9);
    v18(v15, v9);
  }
  uint64_t v19 = sub_261B8F3E8();
  swift_retain();
  char v20 = sub_261B8BAF8();
  swift_release();
  if (v20) {
    unint64_t result = sub_261A4E13C(3uLL);
  }
  else {
    unint64_t result = 0;
  }
  unint64_t v22 = v19 + result;
  if (__OFADD__(v19, result))
  {
    __break(1u);
  }
  else
  {
    *uint64_t v5 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F8);
    swift_storeEnumTagMultiPayload();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v24 = (uint64_t)v5;
    uint64_t v25 = v28;
    sub_2619FB7EC(v24, v28, &qword_26A9441C8);
    unint64_t result = type metadata accessor for FastDigitView();
    uint64_t v26 = v25 + *(int *)(result + 20);
    *(void *)uint64_t v26 = KeyPath;
    *(unsigned char *)(v26 + 8) = 0;
    *(void *)(v25 + *(int *)(result + 24)) = v22;
  }
  return result;
}

uint64_t type metadata accessor for WorkoutTimeView()
{
  uint64_t result = qword_26A944EA8;
  if (!qword_26A944EA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A4C77C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A4C7E4()
{
  uint64_t v1 = type metadata accessor for WorkoutTimeView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v11 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_261B8ADD8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  sub_2619F7790(*(void *)(v0 + v3), *(unsigned char *)(v0 + v3 + 8));
  sub_2619F7790(*(void *)(v0 + v3 + 16), *(unsigned char *)(v0 + v3 + 24));
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  }
  uint64_t v9 = (v3 + v11 + v6) & ~v6;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v9, v4);
  return MEMORY[0x270FA0238](v0, v9 + v7, v2 | v6 | 7);
}

uint64_t sub_261A4C9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutTimeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A4CA04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for WorkoutTimeView() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_261B8ADD8() - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return sub_261A4AD9C(v1 + v4, v7, a1);
}

uint64_t sub_261A4CAE8(uint64_t a1)
{
  return sub_261A4D994(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), &qword_26A944EF8);
}

uint64_t sub_261A4CB14()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t initializeBufferWithCopyOfBuffer for WorkoutTimeView(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_2619F7774(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_2619F7774(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    uint64_t v14 = sub_261B8ADD8();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = a3[8];
    *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
    uint64_t v19 = (void *)(a1 + v18);
    char v20 = (void *)(a2 + v18);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for WorkoutTimeView(uint64_t a1, uint64_t a2)
{
  sub_2619F7790(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_2619F7790(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_261B8ADD8();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  return swift_release();
}

uint64_t initializeWithCopy for WorkoutTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_2619F7774(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_2619F7774(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_261B8ADD8();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WorkoutTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_2619F7774(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_2619F7790(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  char v11 = *(unsigned char *)(a2 + 24);
  sub_2619F7774(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v11;
  sub_2619F7790(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = sub_261B8ADD8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  void *v24 = *v25;
  v24[1] = v25[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for WorkoutTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_261B8ADD8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for WorkoutTimeView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_2619F7790(v8, v9);
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v10;
  sub_2619F7790(v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_261B8ADD8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 40))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  uint64_t v22 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)((char *)a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  void *v23 = v26;
  v23[1] = v25;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutTimeView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A4D490);
}

uint64_t sub_261A4D490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    char v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutTimeView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A4D570);
}

uint64_t sub_261A4D570(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

void sub_261A4D638()
{
  sub_261A4D6E4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_261A4D6E4()
{
  if (!qword_26A944EB8)
  {
    sub_261B8ADD8();
    unint64_t v0 = sub_261B8F6D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A944EB8);
    }
  }
}

unint64_t sub_261A4D740()
{
  unint64_t result = qword_26A944EC0;
  if (!qword_26A944EC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944EA0);
    sub_261A4D7E0();
    sub_2619F8AB8(&qword_26A943A78, &qword_26A943A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944EC0);
  }
  return result;
}

unint64_t sub_261A4D7E0()
{
  unint64_t result = qword_26A944EC8;
  if (!qword_26A944EC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944E80);
    sub_261A4D880();
    sub_2619F8AB8(&qword_26A943A70, &qword_26A943A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944EC8);
  }
  return result;
}

unint64_t sub_261A4D880()
{
  unint64_t result = qword_26A944ED0;
  if (!qword_26A944ED0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944E78);
    sub_261A4D8FC();
    sub_2619FBA38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944ED0);
  }
  return result;
}

unint64_t sub_261A4D8FC()
{
  unint64_t result = qword_26A944ED8;
  if (!qword_26A944ED8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944E70);
    sub_2619F8AB8(&qword_26A944E98, &qword_26A944E88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944ED8);
  }
  return result;
}

uint64_t sub_261A4D994(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EE0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t result = v10 - 8;
  if (*(void *)(v12 + 64) == v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    a2((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_261A4DAD4@<X0>(uint64_t a1@<X0>, void (*a2)(void *__return_ptr, char *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EE0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EE8);
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t result = v9 - 8;
  if (*(void *)(v11 + 64) == v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    a2(v19, (char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))((char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    uint64_t v12 = v19[1];
    char v13 = v22;
    char v14 = v23;
    long long v15 = v20;
    long long v16 = v21;
    long long v17 = v24;
    *(void *)a3 = v19[0];
    *(void *)(a3 + 8) = v12;
    *(_OWORD *)(a3 + 16) = v15;
    *(_OWORD *)(a3 + 32) = v16;
    *(unsigned char *)(a3 + 48) = v13;
    *(unsigned char *)(a3 + 49) = v14;
    *(_OWORD *)(a3 + 56) = v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_261A4DC3C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, char *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EE0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EF0);
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t result = v9 - 8;
  if (*(void *)(v11 + 64) == v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    a2(&v21, (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    uint64_t v12 = v24;
    char v13 = v25;
    uint64_t v14 = v26;
    char v15 = v27;
    char v16 = v29;
    char v17 = v30;
    long long v18 = v28;
    long long v19 = v22;
    long long v20 = v23;
    *(void *)a3 = v21;
    *(_OWORD *)(a3 + 8) = v19;
    *(_OWORD *)(a3 + 24) = v20;
    *(void *)(a3 + 4sub_261A34804(0, 1, 2, 0) = v12;
    *(unsigned char *)(a3 + 48) = v13;
    *(void *)(a3 + 56) = v14;
    *(unsigned char *)(a3 + 64) = v15;
    *(_OWORD *)(a3 + 72) = v18;
    *(unsigned char *)(a3 + 88) = v16;
    *(unsigned char *)(a3 + 89) = v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_261A4DDCC(uint64_t a1)
{
  return sub_261A4DFC0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_261A4BDD0);
}

uint64_t sub_261A4DDE4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261A4DE1C(uint64_t a1)
{
  return sub_261A4D994(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), &qword_26A944F60);
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v1 = type metadata accessor for WorkoutTimeView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_2619F7790(*(void *)(v0 + v3), *(unsigned char *)(v0 + v3 + 8));
  sub_2619F7790(*(void *)(v0 + v3 + 16), *(unsigned char *)(v0 + v3 + 24));
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_261A4DFA8(uint64_t a1)
{
  return sub_261A4DFC0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_261A4C408);
}

uint64_t sub_261A4DFC0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for WorkoutTimeView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5);
}

uint64_t sub_261A4E054(uint64_t a1)
{
  return sub_261A4D994(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), &qword_26A944F58);
}

uint64_t sub_261A4E078(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A4E0C0()
{
  return sub_261B8D958();
}

uint64_t sub_261A4E0E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_261B8D988();
  *a1 = result;
  return result;
}

uint64_t sub_261A4E110()
{
  return sub_261B8D998();
}

unint64_t sub_261A4E13C(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x263E4E990](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x263E4E990](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_261A4E1C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A4E230(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_261A4E298()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_261A4E2CC(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_261A4E30C())()
{
  return j__swift_endAccess;
}

uint64_t MetricApplicationLifecycleTracker.eventHub.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t MetricApplicationLifecycleTracker.__allocating_init(eventHub:metricClient:)(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 0;
  *(_OWORD *)(v6 + 8sub_261A34804(0, 1, 2, 0) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 16sub_261A34804(0, 1, 2, 0) = 0u;
  *(void *)(v6 + 176) = 0;
  uint64_t v7 = v6 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  uint64_t v8 = sub_261B8B098();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = a2;
  sub_261A4E500(a3, v6 + 40);
  return v6;
}

uint64_t MetricApplicationLifecycleTracker.init(eventHub:metricClient:)(uint64_t a1, uint64_t a2, long long *a3)
{
  *(unsigned char *)(v3 + 16) = 0;
  *(_OWORD *)(v3 + 8sub_261A34804(0, 1, 2, 0) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 16sub_261A34804(0, 1, 2, 0) = 0u;
  *(void *)(v3 + 176) = 0;
  uint64_t v7 = v3 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  uint64_t v8 = sub_261B8B098();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a2;
  sub_261A4E500(a3, v3 + 40);
  return v3;
}

uint64_t sub_261A4E500(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_261A4E518(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F78);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8B098();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v9 = v1 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  swift_beginAccess();
  sub_261A4EC88((uint64_t)v6, v9, &qword_26A944F78);
  swift_endAccess();
  id v10 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v11 = *MEMORY[0x263F833B8];
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_mainQueue);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  unint64_t v34 = sub_261A4EB64;
  uint64_t v35 = v14;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v31 = 1107296256;
  unint64_t v32 = sub_261A4EB94;
  ObjectType = &block_descriptor_0;
  char v15 = _Block_copy(&aBlock);
  swift_release();
  id v16 = objc_msgSend(v10, sel_addObserverForName_object_queue_usingBlock_, v11, 0, v13, v15);
  _Block_release(v15);

  ObjectType = (void *)swift_getObjectType();
  id aBlock = v16;
  swift_beginAccess();
  sub_261A4EC88((uint64_t)&aBlock, v2 + 80, &qword_26A943228);
  swift_endAccess();
  uint64_t v17 = *MEMORY[0x263F833C0];
  id v18 = [v12 (SEL)0x26558DF4BLL];
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  unint64_t v34 = sub_261A4ECEC;
  uint64_t v35 = v19;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v31 = 1107296256;
  unint64_t v32 = sub_261A4EB94;
  ObjectType = &block_descriptor_4;
  long long v20 = _Block_copy(&aBlock);
  swift_release();
  id v21 = objc_msgSend(v10, sel_addObserverForName_object_queue_usingBlock_, v17, 0, v18, v20);
  _Block_release(v20);

  ObjectType = (void *)swift_getObjectType();
  id aBlock = v21;
  swift_beginAccess();
  sub_261A4EC88((uint64_t)&aBlock, v2 + 112, &qword_26A943228);
  swift_endAccess();
  uint64_t v22 = *MEMORY[0x263F833C8];
  id v23 = objc_msgSend(v12, sel_mainQueue);
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  unint64_t v34 = sub_261A4ED7C;
  uint64_t v35 = v24;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v31 = 1107296256;
  unint64_t v32 = sub_261A4EB94;
  ObjectType = &block_descriptor_8;
  char v25 = _Block_copy(&aBlock);
  swift_release();
  id v26 = objc_msgSend(v10, sel_addObserverForName_object_queue_usingBlock_, v22, 0, v23, v25);
  _Block_release(v25);

  ObjectType = (void *)swift_getObjectType();
  id aBlock = v26;
  swift_beginAccess();
  sub_261A4EC88((uint64_t)&aBlock, v2 + 144, &qword_26A943228);
  swift_endAccess();
  sub_261B8CD68();
  swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v27 = sub_261B8CD58();
  swift_getObjectType();
  sub_261B8C8B8();
  swift_allocObject();
  swift_weakInit();
  sub_261A5095C(&qword_26A944F80, MEMORY[0x263F6B6F0]);
  sub_261B8CD08();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  *(void *)(v2 + 176) = v27;

  swift_release();
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v2 + 16) = 1;
  return result;
}

uint64_t sub_261A4EB2C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261A4EB64(uint64_t a1)
{
  return sub_261A4ED1C(a1, v1, (void (*)(void))sub_261A4F360);
}

uint64_t sub_261A4EB94(uint64_t a1)
{
  uint64_t v2 = sub_261B8A898();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_261B8A878();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_261A4EC88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A4ECEC(uint64_t a1)
{
  return sub_261A4ED1C(a1, v1, (void (*)(void))sub_261A4F75C);
}

uint64_t sub_261A4ED1C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_261A4ED7C(uint64_t a1)
{
  return sub_261A4ED1C(a1, v1, (void (*)(void))sub_261A4FBE4);
}

uint64_t sub_261A4EDAC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F78);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v11[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_261B8B098();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_261B8C8A8();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v2, v6, v3);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    uint64_t v9 = v8 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
    swift_beginAccess();
    sub_261A4EC88((uint64_t)v2, v9, &qword_26A944F78);
    swift_endAccess();
    swift_release();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_261A4EF84()
{
  return sub_261A4EDAC();
}

uint64_t sub_261A4EF8C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F78);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_defaultCenter);
  swift_beginAccess();
  sub_2619F86F0(v0 + 80, (uint64_t)&v9, &qword_26A943228);
  if (v10)
  {
    sub_261A0CCBC(&v9, &v11);
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    objc_msgSend(v4, sel_removeObserver_, sub_261B8FB98());
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
  else
  {
    sub_2619F8754((uint64_t)&v9, &qword_26A943228);
  }
  long long v11 = 0u;
  long long v12 = 0u;
  swift_beginAccess();
  sub_261A4EC88((uint64_t)&v11, v0 + 80, &qword_26A943228);
  swift_endAccess();
  swift_beginAccess();
  sub_2619F86F0(v0 + 112, (uint64_t)&v9, &qword_26A943228);
  if (v10)
  {
    sub_261A0CCBC(&v9, &v11);
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    objc_msgSend(v4, sel_removeObserver_, sub_261B8FB98());
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
  else
  {
    sub_2619F8754((uint64_t)&v9, &qword_26A943228);
  }
  long long v11 = 0u;
  long long v12 = 0u;
  swift_beginAccess();
  sub_261A4EC88((uint64_t)&v11, v0 + 112, &qword_26A943228);
  swift_endAccess();
  swift_beginAccess();
  sub_2619F86F0(v0 + 144, (uint64_t)&v9, &qword_26A943228);
  if (v10)
  {
    sub_261A0CCBC(&v9, &v11);
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    objc_msgSend(v4, sel_removeObserver_, sub_261B8FB98());
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
  else
  {
    sub_2619F8754((uint64_t)&v9, &qword_26A943228);
  }
  long long v11 = 0u;
  long long v12 = 0u;
  swift_beginAccess();
  sub_261A4EC88((uint64_t)&v11, v0 + 144, &qword_26A943228);
  swift_endAccess();
  *(void *)(v0 + 176) = 0;
  swift_release();
  uint64_t v5 = sub_261B8B098();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  swift_beginAccess();
  sub_261A4EC88((uint64_t)v3, v6, &qword_26A944F78);
  swift_endAccess();

  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_261A4F32C()
{
  return sub_261A4F36C(MEMORY[0x263F69D00]);
}

uint64_t sub_261A4F338()
{
  return sub_261A4F784(MEMORY[0x263F69978], (uint64_t)&unk_270DA5690, (uint64_t)sub_261A50508);
}

uint64_t sub_261A4F360()
{
  return sub_261A4F36C(MEMORY[0x263F69CE8]);
}

uint64_t sub_261A4F36C(unsigned int *a1)
{
  uint64_t v3 = sub_261B8B678();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  uint64_t v34 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F78);
  MEMORY[0x270FA5388](v7 - 8);
  long long v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8B098();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_261B8B558();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *a1, v14);
  uint64_t v32 = v1;
  uint64_t v18 = v1 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  swift_beginAccess();
  sub_2619F86F0(v18, (uint64_t)v9, &qword_26A944F78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2619F8754((uint64_t)v9, &qword_26A944F78);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    char v30 = v13;
    uint64_t v31 = v10;
    v19(v13, v9, v10);
    long long v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A944F88);
    long long v28 = &v6[v20[12]];
    uint64_t v29 = &v6[v20[16]];
    id v21 = &v6[v20[20]];
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v6, v17, v14);
    uint64_t v22 = sub_261B8ABF8();
    uint64_t v23 = v33;
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    v24(v28, 1, 1, v22);
    v24(v29, 1, 1, v22);
    *(void *)id v21 = 0;
    *((void *)v21 + sub_261A34804(3, 0, 0, 1) = 0;
    uint64_t v25 = v34;
    (*(void (**)(char *, void, uint64_t))(v34 + 104))(v6, *MEMORY[0x263F6A508], v23);
    uint64_t v26 = (uint64_t)v30;
    sub_261A4FC0C((uint64_t)v6, (uint64_t)v30);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v23);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v26, v31);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_261A4F75C()
{
  return sub_261A4F784(MEMORY[0x263F69968], (uint64_t)&unk_270DA5718, (uint64_t)sub_261A50508);
}

uint64_t sub_261A4F784(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F90);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v34 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8B678();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  MEMORY[0x270FA5388](v7);
  long long v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F78);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_261B8B098();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_261B8B4E8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  long long v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *a1, v17);
  uint64_t v21 = v3 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  swift_beginAccess();
  sub_2619F86F0(v21, (uint64_t)v12, &qword_26A944F78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_2619F8754((uint64_t)v12, &qword_26A944F78);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v31 = v16;
    v22(v16, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v9, v20, v17);
    uint64_t v24 = v32;
    uint64_t v23 = v33;
    (*(void (**)(char *, void, uint64_t))(v32 + 104))(v9, *MEMORY[0x263F6A4F0], v33);
    sub_261A4FC0C((uint64_t)v9, (uint64_t)v16);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v23);
    __swift_project_boxed_opaque_existential_1((void *)(v3 + 40), *(void *)(v3 + 64));
    uint64_t v25 = v34;
    sub_261B8CC58();
    uint64_t v26 = v38;
    uint64_t v27 = (void (*)(uint64_t, uint64_t))sub_261B8B7A8();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = 0;
    *(void *)(v28 + 24) = 0;
    v27(v36, v28);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v26);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v31, v13);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

uint64_t sub_261A4FBE4()
{
  return sub_261A4F784(MEMORY[0x263F69970], (uint64_t)&unk_270DA56F0, (uint64_t)sub_261A50508);
}

uint64_t sub_261A4FC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = a1;
  uint64_t v3 = sub_261B8C8D8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  uint64_t v50 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8B4F8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v47 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FB0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v46 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FB8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FC0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v43 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FC8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F78);
  MEMORY[0x270FA5388](v18 - 8);
  long long v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_261B8B678();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_261B8B548();
  uint64_t v25 = *(void *)(v44 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v44);
  uint64_t v28 = (char *)&v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v42 - v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v45, v21);
  uint64_t v31 = sub_261B8B098();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v20, a2, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v20, 0, 1, v31);
  uint64_t v33 = sub_261B8B5E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v17, 1, 1, v33);
  uint64_t v34 = sub_261B8B5F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v43, 1, 1, v34);
  sub_261B8B568();
  uint64_t v35 = sub_261B8B578();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v12, 0, 1, v35);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FD0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v46, 1, 1, v36);
  uint64_t v37 = sub_261B8B698();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v47, 1, 1, v37);
  sub_261B8B538();
  uint64_t v38 = v44;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v44);
  uint64_t v39 = v48;
  sub_261B8C8E8();
  swift_getObjectType();
  sub_261A5095C(&qword_26A944FD8, MEMORY[0x263F6B720]);
  uint64_t v40 = v49;
  sub_261B8CCF8();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v30, v38);
}

uint64_t MetricApplicationLifecycleTracker.deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  sub_2619F8754(v0 + 80, &qword_26A943228);
  sub_2619F8754(v0 + 112, &qword_26A943228);
  sub_2619F8754(v0 + 144, &qword_26A943228);
  swift_release();
  sub_2619F8754(v0 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage, &qword_26A944F78);
  return v0;
}

uint64_t MetricApplicationLifecycleTracker.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  sub_2619F8754(v0 + 80, &qword_26A943228);
  sub_2619F8754(v0 + 112, &qword_26A943228);
  sub_2619F8754(v0 + 144, &qword_26A943228);
  swift_release();
  sub_2619F8754(v0 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage, &qword_26A944F78);
  return swift_deallocClassInstance();
}

uint64_t sub_261A503C0()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_261A503EC()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t sub_261A5042C(uint64_t a1)
{
  return sub_261A4E518(a1);
}

uint64_t sub_261A50450()
{
  return sub_261A4EF8C();
}

uint64_t sub_261A50474()
{
  return sub_261A4F32C();
}

uint64_t sub_261A50498()
{
  return sub_261A4F338();
}

uint64_t sub_261A504BC(uint64_t result, uint64_t (*a2)(uint64_t *))
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *(void *)result;
  char v4 = v2;
  if (a2) {
    return a2(&v3);
  }
  return result;
}

uint64_t sub_261A5050C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_261A50554(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 16) = v2;
  return result;
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracking.eventHub.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracking.isActive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracking.startTrackingAppLifecycle(initialPage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracking.stopTrackingApplifecycle()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracking.enterGuidedWorkoutExperience()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracking.exitGuidedWorkoutExperience()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_261A50610()
{
  return type metadata accessor for MetricApplicationLifecycleTracker();
}

uint64_t type metadata accessor for MetricApplicationLifecycleTracker()
{
  uint64_t result = qword_26A944F98;
  if (!qword_26A944F98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_261A50664()
{
  sub_261A50874();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MetricApplicationLifecycleTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MetricApplicationLifecycleTracker);
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.isActive.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.isActive.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.isActive.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.__allocating_init(eventHub:metricClient:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.startTrackingAppLifecycle(initialPage:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.stopTrackingApplifecycle()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.enterGuidedWorkoutExperience()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.exitGuidedWorkoutExperience()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

void sub_261A50874()
{
  if (!qword_26A944FA8)
  {
    sub_261B8B098();
    unint64_t v0 = sub_261B8F6D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A944FA8);
    }
  }
}

uint64_t objectdestroy_11Tm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261A50914(uint64_t result)
{
  char v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  char v3 = *(unsigned char *)(result + 8);
  uint64_t v4 = *(void *)result;
  char v5 = v3;
  if (v2) {
    return v2(&v4);
  }
  return result;
}

uint64_t sub_261A5095C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A509FC()
{
  uint64_t v1 = v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_261A50A90(uint64_t a1)
{
  char v3 = (void *)(v1 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus);
  uint64_t result = swift_beginAccess();
  *char v3 = a1;
  return result;
}

uint64_t (*sub_261A50ADC())()
{
  return j__swift_endAccess;
}

char *WorkoutAssetLoadStatusProvider.__allocating_init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(uint64_t a1, uint64_t a2, char *a3, unint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  uint64_t v10 = *(void *)&a3[OBJC_IVAR___SMDependencies_dependencies];
  id v11 = objc_allocWithZone((Class)type metadata accessor for WorkoutAssetLoadStatusProvider());
  swift_retain();
  uint64_t v12 = WorkoutAssetLoadStatusProvider.init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(a1, a2, v10, a4, 2);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v12;
}

char *WorkoutAssetLoadStatusProvider.init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(uint64_t a1, uint64_t a2, char *a3, unint64_t a4)
{
  uint64_t v8 = *(void *)&a3[OBJC_IVAR___SMDependencies_dependencies];
  id v9 = objc_allocWithZone((Class)type metadata accessor for WorkoutAssetLoadStatusProvider());
  swift_retain();
  uint64_t v10 = WorkoutAssetLoadStatusProvider.init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(a1, a2, v8, a4, 2);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

char *WorkoutAssetLoadStatusProvider.__allocating_init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  return WorkoutAssetLoadStatusProvider.init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(a1, a2, a3, a4, a5);
}

uint64_t type metadata accessor for WorkoutAssetLoadStatusProvider()
{
  return self;
}

char *WorkoutAssetLoadStatusProvider.init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  unint64_t v58 = a4;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FE8);
  uint64_t v11 = *(void *)(v53 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v51 = (char *)&v49 - v14;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F90);
  uint64_t v57 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason;
  *(void *)&v5[OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason] = 2;
  *(void *)&v5[OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleProgressSubscriptionToken] = 0;
  *(void *)&v5[OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus] = a4;
  *(void *)&v5[v16] = a5;
  uint64_t v17 = &v5[OBJC_IVAR___WKUIAssetLoadStatusProvider_workoutIdentifier];
  *(void *)uint64_t v17 = a1;
  *((void *)v17 + sub_261A34804(3, 0, 0, 1) = a2;
  uint64_t v50 = a1;
  uint64_t v18 = v5;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945008);
  uint64_t v56 = a3;
  sub_261B8B298();
  uint64_t v19 = *((void *)&v60[0] + 1);
  long long v20 = &v18[OBJC_IVAR___WKUIAssetLoadStatusProvider_eventHub];
  *(void *)long long v20 = *(void *)&v60[0];
  *((void *)v20 + sub_261A34804(3, 0, 0, 1) = v19;
  id v21 = objc_msgSend(self, sel_weakObjectsHashTable);
  *(void *)&v18[OBJC_IVAR___WKUIAssetLoadStatusProvider_observers] = v21;
  sub_261B8CD68();
  swift_allocObject();
  swift_unknownObjectRetain();
  *(void *)&v18[OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleUpdatedSubscriptionToken] = sub_261B8CD58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945028);
  sub_261B8B298();
  sub_261A4E500(v60, (uint64_t)&v18[OBJC_IVAR___WKUIAssetLoadStatusProvider_assetClient]);

  StatusProvider = (objc_class *)type metadata accessor for WorkoutAssetLoadStatusProvider();
  v59.receiver = v18;
  v59.super_class = StatusProvider;
  uint64_t v23 = (char *)objc_msgSendSuper2(&v59, sel_init);
  __swift_project_boxed_opaque_existential_1(&v23[OBJC_IVAR___WKUIAssetLoadStatusProvider_assetClient], *(void *)&v23[OBJC_IVAR___WKUIAssetLoadStatusProvider_assetClient + 24]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943570);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_261B93F70;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 4sub_261A34804(0, 1, 2, 0) = a2;
  swift_bridgeObjectRetain();
  uint64_t v25 = v23;
  sub_261A53A7C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v26 = v51;
  sub_261B8CC48();
  swift_bridgeObjectRelease();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v25;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_261A549BC;
  *(void *)(v28 + 24) = v27;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_261A53C58;
  *(void *)(v29 + 24) = v28;
  uint64_t v30 = v52;
  uint64_t v31 = v26;
  uint64_t v32 = v26;
  uint64_t v33 = v53;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v52, v31, v53);
  unint64_t v34 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v35 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v35 + v34, v30, v33);
  uint64_t v36 = (uint64_t (**)(uint64_t *))(v35 + ((v12 + v34 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v36 = sub_261A53C84;
  v36[1] = (uint64_t (*)(uint64_t *))v29;
  uint64_t v37 = v25;
  uint64_t v38 = v54;
  sub_261B8B798();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v32, v33);
  uint64_t v39 = v55;
  uint64_t v40 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = 0;
  *(void *)(v41 + 24) = 0;
  v40(sub_261A53C98, v41);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v39);
  swift_getObjectType();
  sub_261B8CD88();
  uint64_t v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v43 = (void *)swift_allocObject();
  uint64_t v44 = v50;
  v43[2] = v50;
  v43[3] = a2;
  v43[4] = v42;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_261B8CD08();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  swift_release();
  uint64_t v45 = OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleProgressSubscriptionToken;
  uint64_t v46 = *(void *)&v37[OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleProgressSubscriptionToken];
  swift_retain();
  uint64_t v47 = sub_261A521A8(v58, v46, v44, a2);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  *(void *)&v37[v45] = v47;
  swift_release();
  return v37;
}

uint64_t sub_261A5145C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945038);
  MEMORY[0x270FA5388](v1 - 8);
  char v3 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8B188();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v59 - v9;
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_workoutIdentifier);
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_workoutIdentifier + 8);
  sub_261B8F458();
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  uint64_t v61 = v12;
  uint64_t v62 = v0;
  uint64_t v60 = v11;
  if (v13 == 1)
  {
    sub_261A53E7C((uint64_t)v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_261B92AA0;
    uint64_t v15 = MEMORY[0x263F8D310];
    *(void *)(inited + 56) = MEMORY[0x263F8D310];
    unint64_t v16 = sub_261A2B2E8();
    *(void *)(inited + 32) = v11;
    *(void *)(inited + 64) = v16;
    *(void *)(inited + 4sub_261A34804(0, 1, 2, 0) = v12;
    uint64_t v17 = (uint64_t *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus);
    swift_beginAccess();
    uint64_t v18 = *v17;
    unint64_t v19 = 0xE600000000000000;
    uint64_t v20 = 0x646575657571;
    switch(*v17)
    {
      case 0:
        goto LABEL_23;
      case 1:
        unint64_t v19 = 0xE700000000000000;
        uint64_t v20 = 0x676E6964616F6CLL;
        goto LABEL_23;
      case 2:
        uint64_t v20 = 0x6574656C706D6F63;
        goto LABEL_21;
      case 3:
        uint64_t v20 = 0x64656C696166;
        goto LABEL_23;
      case 4:
        uint64_t v20 = 0x656C6C65636E6163;
        goto LABEL_21;
      case 5:
        uint64_t v20 = 0x6564616F4C746F6ELL;
LABEL_21:
        unint64_t v19 = 0xE900000000000064;
        goto LABEL_23;
      case 6:
        unint64_t v19 = 0xE700000000000000;
        uint64_t v20 = 0x6E776F6E6B6E75;
LABEL_23:
        *(void *)(inited + 96) = v15;
        *(void *)(inited + 104) = v16;
        *(void *)(inited + 72) = v20;
        *(void *)(inited + 8sub_261A34804(0, 1, 2, 0) = v19;
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_261B8F4D8();
        uint64_t v29 = 2;
        sub_261A407F4((uint64_t)"[AssetLoadStatusProvider] handleAssetBundleResults workoutIdentifier: %@ nlassetLoadStatus: %@", 94, 2, v40, inited);
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A945040);
        swift_arrayDestroy();
        uint64_t v41 = 5;
        uint64_t v36 = &OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample;
        goto LABEL_28;
      default:
        goto LABEL_50;
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
  char v21 = sub_261B8B128();
  if (v22) {
    uint64_t v23 = qword_261B958A0[v21];
  }
  else {
    uint64_t v23 = 6;
  }
  uint64_t v65 = (unint64_t *)v23;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v24(v8, v10, v4);
  uint64_t v25 = (objc_class *)type metadata accessor for AssetBundleBridge();
  uint64_t v26 = (char *)objc_allocWithZone(v25);
  v24(&v26[OBJC_IVAR___SMAssetBundle_assetBundle], v8, v4);
  v66.receiver = v26;
  v66.super_class = v25;
  id v27 = objc_msgSendSuper2(&v66, sel_init);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v5 + 8);
  v64(v8, v4);
  sub_261B8B178();
  if (v28)
  {
    unint64_t v30 = sub_261B8B168();

    if (v30 >= 2) {
      uint64_t v29 = 2;
    }
    else {
      uint64_t v29 = v30;
    }
  }
  else
  {

    uint64_t v29 = 2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
  uint64_t v31 = swift_initStackObject();
  *(_OWORD *)(v31 + 16) = xmmword_261B92AA0;
  uint64_t v32 = sub_261B8B138();
  uint64_t v34 = v33;
  *(void *)(v31 + 56) = MEMORY[0x263F8D310];
  unint64_t v35 = sub_261A2B2E8();
  *(void *)(v31 + 32) = v32;
  *(void *)(v31 + 64) = v35;
  *(void *)(v31 + 4sub_261A34804(0, 1, 2, 0) = v34;
  uint64_t v36 = &OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample;
  uint64_t v37 = (uint64_t *)(v62 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus);
  swift_beginAccess();
  unint64_t v38 = 0xE600000000000000;
  uint64_t v39 = 0x646575657571;
  switch(*v37)
  {
    case 0:
      goto LABEL_27;
    case 1:
      unint64_t v38 = 0xE700000000000000;
      uint64_t v39 = 0x676E6964616F6CLL;
      goto LABEL_27;
    case 2:
      uint64_t v39 = 0x6574656C706D6F63;
      goto LABEL_25;
    case 3:
      uint64_t v39 = 0x64656C696166;
      goto LABEL_27;
    case 4:
      uint64_t v39 = 0x656C6C65636E6163;
      goto LABEL_25;
    case 5:
      uint64_t v39 = 0x6564616F4C746F6ELL;
LABEL_25:
      unint64_t v38 = 0xE900000000000064;
      goto LABEL_27;
    case 6:
      unint64_t v38 = 0xE700000000000000;
      uint64_t v39 = 0x6E776F6E6B6E75;
LABEL_27:
      *(void *)(v31 + 96) = MEMORY[0x263F8D310];
      *(void *)(v31 + 104) = v35;
      *(void *)(v31 + 72) = v39;
      *(void *)(v31 + 8sub_261A34804(0, 1, 2, 0) = v38;
      uint64_t v42 = sub_261B8F4D8();
      sub_261A407F4((uint64_t)"[AssetLoadStatusProvider] handleAssetBundleResults %@, nlassetLoadStatus: %@", 76, 2, v42, v31);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A945040);
      swift_arrayDestroy();
      v64(v10, v4);
      uint64_t v0 = v62;
      uint64_t v41 = (uint64_t)v65;
LABEL_28:
      uint64_t v43 = (unint64_t *)(v0 + v36[508]);
      swift_beginAccess();
      uint64_t v65 = v43;
      if (v41 == *v43)
      {
        uint64_t v44 = *(void *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason);
        *uint64_t v65 = v41;
        uint64_t v64 = (void (*)(char *, uint64_t))(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason);
        *(void *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason) = v29;
        if (v29 == v44) {
          goto LABEL_48;
        }
      }
      else
      {
        *uint64_t v65 = v41;
        uint64_t v64 = (void (*)(char *, uint64_t))(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason);
        *(void *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason) = v29;
      }
      if (v41 == 3) {
        unint64_t v45 = 0x8000000261B9EE60;
      }
      else {
        unint64_t v45 = 0;
      }
      id v46 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                  + OBJC_IVAR___WKUIAssetLoadStatusProvider_observers), sel_allObjects));
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A945048);
      unint64_t v47 = sub_261B8F2D8();

      unint64_t v59 = v45;
      if (v47 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_261B8F9D8();
        if (!v48) {
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v48) {
          goto LABEL_47;
        }
      }
      if (v48 < 1)
      {
        __break(1u);
LABEL_50:
        uint64_t v67 = v18;
        swift_bridgeObjectRetain();
LABEL_52:
        sub_261B8FBD8();
        __break(1u);
        JUMPOUT(0x261A51C78);
      }
      uint64_t v49 = 0;
      unint64_t v63 = 0x8000000261B9EE60;
      do
      {
        if ((v47 & 0xC000000000000001) != 0)
        {
          uint64_t v51 = (void *)MEMORY[0x263E4D7B0](v49, v47);
        }
        else
        {
          uint64_t v51 = *(void **)(v47 + 8 * v49 + 32);
          swift_unknownObjectRetain();
        }
        unint64_t v52 = *v65;
        uint64_t v53 = *(void *)v64;
        if (v41 == 3) {
          uint64_t v50 = (void *)sub_261B8F0B8();
        }
        else {
          uint64_t v50 = 0;
        }
        ++v49;
        objc_msgSend(v51, sel_didUpdateWithAssetLoadStatus_bundleReason_failureReason_, v52, v53, v50, v59, v60, v61);
        swift_unknownObjectRelease();
      }
      while (v48 != v49);
LABEL_47:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v0 = v62;
LABEL_48:
      unint64_t v54 = *v65;
      uint64_t v55 = OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleProgressSubscriptionToken;
      uint64_t v56 = *(void *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleProgressSubscriptionToken);
      swift_retain();
      uint64_t v57 = sub_261A521A8(v54, v56, v60, v61);
      swift_release();
      *(void *)(v0 + v55) = v57;
      return swift_release();
    default:
      uint64_t v67 = *v37;
      goto LABEL_52;
  }
}

uint64_t sub_261A51CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FE8);
  uint64_t v7 = *(void *)(v42 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v42);
  uint64_t v40 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v41 = (char *)&v39 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F90);
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v45 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v43 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_261B8B188();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8CD78();
  uint64_t v17 = sub_261B8B148();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (v17 == a2 && v19 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v21 = sub_261B8FBA8();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      return result;
    }
  }
  swift_beginAccess();
  uint64_t result = MEMORY[0x263E4EA60](a4 + 16);
  if (result)
  {
    uint64_t v23 = (void *)result;
    __swift_project_boxed_opaque_existential_1((void *)(result + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetClient), *(void *)(result + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetClient + 24));
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943570);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_261B93F70;
    *(void *)(inited + 32) = a2;
    *(void *)(inited + 4sub_261A34804(0, 1, 2, 0) = a3;
    swift_bridgeObjectRetain();
    sub_261A53A7C(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v25 = v41;
    sub_261B8CC48();
    swift_bridgeObjectRelease();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v23;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_261A54680;
    *(void *)(v27 + 24) = v26;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = sub_261A549D0;
    *(void *)(v28 + 24) = v27;
    uint64_t v29 = v40;
    uint64_t v30 = v42;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v40, v25, v42);
    unint64_t v31 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v32 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v32 + v31, v29, v30);
    uint64_t v33 = (uint64_t (**)(uint64_t *))(v32 + ((v8 + v31 + 7) & 0xFFFFFFFFFFFFFFF8));
    char *v33 = sub_261A549E8;
    v33[1] = (uint64_t (*)(uint64_t *))v28;
    id v34 = v23;
    unint64_t v35 = v43;
    sub_261B8B798();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v30);
    uint64_t v36 = v45;
    uint64_t v37 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = 0;
    *(void *)(v38 + 24) = 0;
    v37(sub_261A549EC, v38);

    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v35, v36);
  }
  return result;
}

uint64_t sub_261A521A8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 > 1) {
    return 0;
  }
  uint64_t v4 = a2;
  if (a2)
  {
    swift_retain();
  }
  else
  {
    sub_261B8CD68();
    swift_allocObject();
    swift_unknownObjectRetain();
    uint64_t v4 = sub_261B8CD58();
    swift_getObjectType();
    sub_261B8CDB8();
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = a3;
    v8[3] = a4;
    v8[4] = v7;
    swift_bridgeObjectRetain();
    sub_261B8CD08();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  return v4;
}

uint64_t sub_261A52310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_261B8B5C8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v37 - v13;
  v37[1] = a1;
  sub_261B8CDA8();
  uint64_t v15 = sub_261B8B5A8();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v37[0] = v8;
  v18(v14, v8);
  if (v15 == a2 && v17 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = sub_261B8FBA8();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      return result;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_261B93F70;
  sub_261B8CDA8();
  uint64_t v23 = sub_261B8B598();
  uint64_t v25 = v24;
  v18(v12, v37[0]);
  *(void *)(inited + 56) = MEMORY[0x263F8D310];
  *(void *)(inited + 64) = sub_261A2B2E8();
  *(void *)(inited + 32) = v23;
  *(void *)(inited + 4sub_261A34804(0, 1, 2, 0) = v25;
  uint64_t v26 = sub_261B8F4D8();
  sub_261A407F4((uint64_t)"[AssetLoadStatusProvider] AssetBundleProgressUpdated %@ ", 56, 2, v26, inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945040);
  swift_arrayDestroy();
  swift_beginAccess();
  uint64_t result = MEMORY[0x263E4EA60](a4 + 16);
  if (result)
  {
    uint64_t v27 = (void *)result;
    id v28 = *(id *)(result + OBJC_IVAR___WKUIAssetLoadStatusProvider_observers);

    id v29 = objc_msgSend(v28, sel_allObjects);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945048);
    unint64_t v30 = sub_261B8F2D8();

    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_261B8F9D8();
      uint64_t v31 = result;
      if (result) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v31)
      {
LABEL_11:
        if (v31 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v32 = 0;
        do
        {
          if ((v30 & 0xC000000000000001) != 0)
          {
            uint64_t v33 = (void *)MEMORY[0x263E4D7B0](v32, v30);
          }
          else
          {
            uint64_t v33 = *(void **)(v30 + 8 * v32 + 32);
            swift_unknownObjectRetain();
          }
          ++v32;
          sub_261B8CDA8();
          sub_261B8B5B8();
          int v35 = v34;
          v18(v12, v37[0]);
          LODWORD(v36) = v35;
          objc_msgSend(v33, sel_didUpdateWithAssetLoadProgress_, v36);
          swift_unknownObjectRelease();
        }
        while (v31 != v32);
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

id WorkoutAssetLoadStatusProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void WorkoutAssetLoadStatusProvider.init()()
{
}

id WorkoutAssetLoadStatusProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutAssetLoadStatusProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id WorkoutAssetLoadStatusProvider.add(observer:)(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR___WKUIAssetLoadStatusProvider_observers), sel_addObject_, a1);
}

id WorkoutAssetLoadStatusProvider.remove(observer:)(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR___WKUIAssetLoadStatusProvider_observers), sel_removeObject_, a1);
}

uint64_t sub_261A52858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_261A52A10(a1, a2, a3, a4, a5, &qword_26A9450C0, (uint64_t)&unk_270DA5B78, (uint64_t)sub_261A54638);
}

uint64_t sub_261A52880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_261A52A10(a1, a2, a3, a4, a5, &qword_26A9450B0, (uint64_t)&unk_270DA5B28, (uint64_t)sub_261A54624);
}

uint64_t sub_261A528A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_261A52A10(a1, a2, a3, a4, a5, &qword_26A9450A0, (uint64_t)&unk_270DA5AD8, (uint64_t)sub_261A54610);
}

uint64_t sub_261A528D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_261A52A10(a1, a2, a3, a4, a5, &qword_26A945068, (uint64_t)&unk_270DA5A88, (uint64_t)sub_261A54588);
}

uint64_t sub_261A528F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_261A52A10(a1, a2, a3, a4, a5, &qword_26A945078, (uint64_t)&unk_270DA5A38, (uint64_t)sub_261A54030);
}

uint64_t sub_261A52920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_261A52A10(a1, a2, a3, a4, a5, &qword_26A945070, (uint64_t)&unk_270DA5948, (uint64_t)sub_261A53F64);
}

uint64_t sub_261A52948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_261A52A10(a1, a2, a3, a4, a5, &qword_26A944FE8, (uint64_t)&unk_270DA5998, (uint64_t)sub_261A53FA8);
}

uint64_t sub_261A52970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_261A52A10(a1, a2, a3, a4, a5, &qword_26A944FE8, (uint64_t)&unk_270DA59E8, (uint64_t)sub_261A53FEC);
}

uint64_t sub_261A52998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_261A52A10(a1, a2, a3, a4, a5, &qword_26A945068, (uint64_t)&unk_270DA58F8, (uint64_t)sub_261A53F20);
}

uint64_t sub_261A529C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_261A52A10(a1, a2, a3, a4, a5, &qword_26A945050, (uint64_t)&unk_270DA58A8, (uint64_t)sub_261A53F0C);
}

uint64_t sub_261A529E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_261A52A10(a1, a2, a3, a4, a5, &qword_26A944F90, (uint64_t)&unk_270DA5858, (uint64_t)sub_261A53EE0);
}

uint64_t sub_261A52A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v13 = (void (*)(uint64_t, void *))sub_261B8B7A8();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a4;
  _OWORD v14[3] = a5;
  v14[4] = a1;
  v14[5] = a2;
  swift_retain();
  swift_retain();
  v13(a8, v14);
  swift_release();
  return swift_release();
}

void sub_261A52ACC(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(id *), uint64_t a5)
{
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v21 = a3;
  char v22 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450C8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8B618();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450D0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (id *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2619F86F0(a1, (uint64_t)v16, &qword_26A9450D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v25 = *v16;
    id v17 = v25;
    char v26 = 1;
    id v18 = v25;
    v23(&v25);
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v11 + 32))(v13, v16, v10);
    v22(v13);
    uint64_t v19 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v23;
    *(void *)(v20 + 24) = v24;
    swift_retain();
    v19(sub_261A53C98, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_261A52D98(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(id *), uint64_t a5)
{
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v21 = a3;
  char v22 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F90);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8B5D8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450B8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (id *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2619F86F0(a1, (uint64_t)v16, &qword_26A9450B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v25 = *v16;
    id v17 = v25;
    char v26 = 1;
    id v18 = v25;
    v23(&v25);
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v11 + 32))(v13, v16, v10);
    v22(v13);
    uint64_t v19 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v23;
    *(void *)(v20 + 24) = v24;
    swift_retain();
    v19(sub_261A549EC, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_261A53064(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(id *), uint64_t a5)
{
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v21 = a3;
  char v22 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F90);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8B7C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450A8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (id *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2619F86F0(a1, (uint64_t)v16, &qword_26A9450A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v25 = *v16;
    id v17 = v25;
    char v26 = 1;
    id v18 = v25;
    v23(&v25);
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v11 + 32))(v13, v16, v10);
    v22(v13);
    uint64_t v19 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v23;
    *(void *)(v20 + 24) = v24;
    swift_retain();
    v19(sub_261A549EC, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_261A53330(void *a1, char a2, void (*a3)(void **), uint64_t a4, void (*a5)(void **), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a7);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  if (a2)
  {
    char v22 = 1;
    id v20 = a1;
    a5(&v21);
    sub_261A5406C(a1, 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    a3(&v21);
    id v18 = (void (*)(uint64_t, uint64_t))sub_261B8B7A8();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a5;
    *(void *)(v19 + 24) = a6;
    swift_retain();
    v18(a9, v19);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    swift_bridgeObjectRelease();
  }
}

void sub_261A534D4(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(id *), uint64_t a5)
{
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v21 = a3;
  char v22 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945058);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8B668();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945060);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (id *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2619F86F0(a1, (uint64_t)v16, &qword_26A945060);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v25 = *v16;
    id v17 = v25;
    char v26 = 1;
    id v18 = v25;
    v23(&v25);
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v11 + 32))(v13, v16, v10);
    v22(v13);
    uint64_t v19 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v23;
    *(void *)(v20 + 24) = v24;
    swift_retain();
    v19(sub_261A53C98, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_261A537A0(void *a1, char a2, void (*a3)(double), uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F90);
  uint64_t v12 = *(void *)(v11 - 8);
  double v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v19 = a1;
    char v20 = 1;
    id v18 = a1;
    a5(&v19);
    sub_261A53EF8(a1, 1);
  }
  else
  {
    a3(v13);
    uint64_t v16 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a5;
    *(void *)(v17 + 24) = a6;
    swift_retain();
    v16(sub_261A549EC, v17);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_261A5393C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_261B8B798();
}

void sub_261A539E0(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t *), uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = *a5;
  a3(&v8, &v7);
  uint64_t v6 = v8;
  char v9 = 0;
  a1(&v8);
  sub_261A53EF8(v6, 0);
}

uint64_t sub_261A53A7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450D8);
    uint64_t v3 = sub_261B8F898();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_261B8FC98();
      swift_bridgeObjectRetain();
      sub_261B8F188();
      uint64_t result = sub_261B8FCE8();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_261B8FBA8(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_261B8FBA8();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_261A53C20()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261A53C58(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_261A53C84(uint64_t *a1)
{
  return sub_261A5393C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_261A53C98(uint64_t a1)
{
  return sub_261A504BC(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_261A53CA0()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261A53CD8()
{
  return objectdestroy_17Tm(MEMORY[0x263F8EEA0], MEMORY[0x263F8EED8]);
}

uint64_t sub_261A53D04(uint64_t a1)
{
  return sub_261A51CB0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_261A53D10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_261A53D64(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t method lookup function for WorkoutAssetLoadStatusProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WorkoutAssetLoadStatusProvider);
}

uint64_t dispatch thunk of WorkoutAssetLoadStatusProvider.assetLoadStatus.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of WorkoutAssetLoadStatusProvider.assetLoadStatus.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of WorkoutAssetLoadStatusProvider.assetLoadStatus.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of WorkoutAssetLoadStatusProvider.__allocating_init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t sub_261A53E7C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945038);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_261A53EE0(uint64_t a1)
{
  sub_261A537A0(*(void **)a1, *(unsigned char *)(a1 + 8), *(void (**)(double))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void **))(v1 + 32), *(void *)(v1 + 40));
}

void sub_261A53EF8(id a1, char a2)
{
  if (a2) {
}
  }

void sub_261A53F0C(uint64_t a1)
{
  sub_261A534D4(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(id *))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_261A53F20(uint64_t a1)
{
  return sub_261A548DC(a1, (uint64_t)&qword_26A944F90, (uint64_t)&unk_270DA5920, (uint64_t)sub_261A549EC, (uint64_t (*)(void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))sub_261A53330);
}

uint64_t sub_261A53F64(uint64_t a1)
{
  return sub_261A548DC(a1, (uint64_t)&qword_26A945068, (uint64_t)&unk_270DA5970, (uint64_t)sub_261A50508, (uint64_t (*)(void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))sub_261A53330);
}

uint64_t sub_261A53FA8(uint64_t a1)
{
  return sub_261A548DC(a1, (uint64_t)&unk_26A945070, (uint64_t)&unk_270DA59C0, (uint64_t)sub_261A50508, (uint64_t (*)(void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))sub_261A53330);
}

uint64_t sub_261A53FEC(uint64_t a1)
{
  return sub_261A548DC(a1, (uint64_t)&qword_26A944FE8, (uint64_t)&unk_270DA5A10, (uint64_t)sub_261A50508, (uint64_t (*)(void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))sub_261A53330);
}

uint64_t sub_261A54030(uint64_t a1)
{
  return sub_261A548DC(a1, (uint64_t)&qword_26A945068, (uint64_t)&unk_270DA5A60, (uint64_t)sub_261A50508, (uint64_t (*)(void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))sub_261A53330);
}

void sub_261A5406C(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_261A5407C(uint64_t a1)
{
  uint64_t v2 = sub_261B8AFB8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945088);
    uint64_t v9 = sub_261B8F898();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    int v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_261A545C8(&qword_26A945090);
      uint64_t v16 = sub_261B8F018();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_261A545C8(&qword_26A945098);
          char v23 = sub_261B8F0A8();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_261A5436C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945080);
    uint64_t v3 = sub_261B8F898();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v29 = v1;
    uint64_t v30 = a1 + 32;
    while (1)
    {
      char v6 = *(unsigned char *)(v30 + v4);
      sub_261B8FC98();
      sub_261B8B4D8();
      sub_261B8F188();
      swift_bridgeObjectRelease();
      uint64_t result = sub_261B8FCE8();
      uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v9 = result & ~v8;
      unint64_t v10 = v9 >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
      uint64_t v12 = 1 << v9;
      if (((1 << v9) & v11) != 0)
      {
        uint64_t v13 = sub_261B8B4D8();
        uint64_t v15 = v14;
        if (v13 == sub_261B8B4D8() && v15 == v16)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
          goto LABEL_4;
        }
        char v18 = sub_261B8FBA8();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_4;
        }
        uint64_t v19 = ~v8;
        while (1)
        {
          unint64_t v9 = (v9 + 1) & v19;
          unint64_t v10 = v9 >> 6;
          uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
          uint64_t v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0) {
            break;
          }
          uint64_t v20 = sub_261B8B4D8();
          uint64_t v22 = v21;
          if (v20 == sub_261B8B4D8() && v22 == v23) {
            goto LABEL_3;
          }
          char v25 = sub_261B8FBA8();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v25) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v1sub_261A34804(0, 1, 2, 0) = v12 | v11;
      *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
      uint64_t v26 = *(void *)(v3 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v28;
LABEL_4:
      if (++v4 == v29) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_261A54588(uint64_t a1)
{
  return sub_261A548DC(a1, (uint64_t)&unk_26A945068, (uint64_t)&unk_270DA5AB0, (uint64_t)sub_261A50508, (uint64_t (*)(void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))sub_261A53330);
}

uint64_t sub_261A545C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_261B8AFB8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_261A54610(uint64_t a1)
{
  sub_261A53064(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(id *))(v1 + 32), *(void *)(v1 + 40));
}

void sub_261A54624(uint64_t a1)
{
  sub_261A52D98(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(id *))(v1 + 32), *(void *)(v1 + 40));
}

void sub_261A54638(uint64_t a1)
{
  sub_261A52ACC(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(id *))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_261A54648()
{
  return objectdestroy_17Tm(MEMORY[0x263F8EEA0], MEMORY[0x263F8EED8]);
}

uint64_t sub_261A54674(uint64_t a1)
{
  return sub_261A52310(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_261A54680()
{
  return sub_261A5145C();
}

uint64_t sub_261A546A4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944FE8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_261A5478C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A944FE8) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_261A52A10(a1, a2, v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), &qword_26A944FE8, (uint64_t)&unk_270DA5CB8, (uint64_t)sub_261A548A0);
}

uint64_t objectdestroy_31Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_261A548A0(uint64_t a1)
{
  return sub_261A548DC(a1, (uint64_t)&qword_26A944F90, (uint64_t)&unk_270DA5CE0, (uint64_t)sub_261A549EC, (uint64_t (*)(void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))sub_261A53330);
}

uint64_t sub_261A548DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))
{
  return a5(*(void *)a1, *(unsigned __int8 *)(a1 + 8), v5[2], v5[3], v5[4], v5[5], a2, a3, a4);
}

uint64_t sub_261A5492C()
{
  return objectdestroy_17Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0]);
}

uint64_t objectdestroy_17Tm(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 24));
  a2(*(void *)(v2 + 32));
  return MEMORY[0x270FA0238](v2, 40, 7);
}

void sub_261A549B0(void (*a1)(void **), uint64_t a2)
{
  sub_261A539E0(a1, a2, *(void (**)(void **__return_ptr, uint64_t *))(v2 + 16), *(void *)(v2 + 24), (uint64_t *)(v2 + 32));
}

uint64_t sub_261A549D0(void *a1)
{
  return sub_261A53C58(a1);
}

id AssetClientBridge.__allocating_init(dependenciesWrapper:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450E0);
  sub_261B8B298();
  swift_release();
  sub_261A4E500(&v7, (uint64_t)v3 + OBJC_IVAR___SMAssetClient_artworkImageLoader);

  v6.receiver = v3;
  v6.super_class = v1;
  id v4 = objc_msgSendSuper2(&v6, sel_init);

  return v4;
}

id AssetClientBridge.init(dependenciesWrapper:)(void *a1)
{
  id v3 = v1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450E0);
  sub_261B8B298();
  swift_release();
  sub_261A4E500(&v7, (uint64_t)v3 + OBJC_IVAR___SMAssetClient_artworkImageLoader);

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for AssetClientBridge();
  id v4 = objc_msgSendSuper2(&v6, sel_init);

  return v4;
}

uint64_t type metadata accessor for AssetClientBridge()
{
  return self;
}

uint64_t sub_261A54C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450F0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR___SMAssetClient_artworkImageLoader), *(void *)(v3 + OBJC_IVAR___SMAssetClient_artworkImageLoader + 24));
  sub_261B8C828();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  swift_retain();
  uint64_t v11 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_261A54ED0;
  *(void *)(v12 + 24) = v10;
  swift_retain();
  v11(sub_261A50508, v12);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_261A54E20(uint64_t a1, void (*a2)(void *, void *))
{
  uint64_t v3 = *(void **)a1;
  if (*(unsigned char *)(a1 + 8))
  {
    id v4 = v3;
    uint64_t v5 = 0;
    uint64_t v6 = v3;
  }
  else
  {
    id v7 = v3;
    uint64_t v5 = v3;
    uint64_t v6 = 0;
  }
  a2(v5, v6);
  sub_261A55308(v3);
}

uint64_t sub_261A54E98()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_261A54ED0(uint64_t a1)
{
  sub_261A54E20(a1, *(void (**)(void *, void *))(v1 + 16));
}

void sub_261A55118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_261B8AAC8();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

id AssetClientBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AssetClientBridge.init()()
{
}

id AssetClientBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssetClientBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for AssetClientBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AssetClientBridge);
}

uint64_t dispatch thunk of AssetClientBridge.__allocating_init(dependenciesWrapper:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AssetClientBridge.fetchArtwork(_:size:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t sub_261A552C4()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_261A552FC(uint64_t a1, uint64_t a2)
{
  sub_261A55118(a1, a2, *(void *)(v2 + 16));
}

void sub_261A55308(id a1)
{
}

uint64_t WorkoutNotificationPacerCompleteView.body.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450F8);
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 56);
  *(double *)uint64_t v3 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
  *(_OWORD *)(v3 + 8) = xmmword_261B95920;
  *(_OWORD *)(v3 + 24) = xmmword_261B95930;
  *(_OWORD *)(v3 + 4sub_261A34804(0, 1, 2, 0) = xmmword_261B95940;
  sub_261A5544C((uint64_t *)v7);
  long long v4 = v7[1];
  long long v5 = v7[2];
  *a1 = v7[0];
  a1[1] = v4;
  a1[2] = v5;
  return sub_261A555A0((uint64_t)a1 + *(int *)(v2 + 52));
}

void sub_261A5544C(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  long long v4 = (void *)v1[1];
  if (!((unint64_t)*v1 >> 62))
  {
    if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2) {
      goto LABEL_3;
    }
LABEL_9:
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    id v10 = 0;
    uint64_t v11 = 0;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_261B8F9D8();
  swift_bridgeObjectRelease();
  if (v12 < 2) {
    goto LABEL_9;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = MEMORY[0x263E4D7B0](0, v3);
    id v13 = v4;
    uint64_t v7 = MEMORY[0x263E4D7B0](1, v3);
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    if (v5 != 1)
    {
      uint64_t v6 = *(void *)(v3 + 32);
      uint64_t v7 = *(void *)(v3 + 40);
      swift_retain();
      id v8 = v4;
      swift_retain();
LABEL_7:
      id v9 = objc_allocWithZone(MEMORY[0x263F825C8]);
      id v10 = v4;
      uint64_t v11 = MEMORY[0x263E4C7B0](objc_msgSend(v9, sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0));
      swift_retain();
      swift_release();
LABEL_10:
      *a1 = v6;
      a1[1] = (uint64_t)v10;
      a1[2] = 0;
      a1[3] = v7;
      a1[4] = (uint64_t)v10;
      a1[5] = v11;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_261A555A0@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  long long v12 = *v1;
  long long v13 = v3;
  long long v4 = v1[3];
  long long v14 = v1[2];
  long long v15 = v4;
  uint64_t v16 = *((void *)v1 + 8);
  uint64_t v17 = v12;
  if ((unint64_t)v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_261B8F9D8();
    sub_261A03DA8((uint64_t)&v17);
    if (v10 >= 3) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3)
  {
LABEL_3:
    swift_getKeyPath();
    uint64_t v5 = swift_allocObject();
    long long v6 = v15;
    *(_OWORD *)(v5 + 48) = v14;
    *(_OWORD *)(v5 + 64) = v6;
    *(void *)(v5 + 8sub_261A34804(0, 1, 2, 0) = v16;
    long long v7 = v13;
    *(_OWORD *)(v5 + 16) = v12;
    *(_OWORD *)(v5 + 32) = v7;
    sub_261A03EBC((uint64_t)&v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435F0);
    sub_261A03EF0();
    sub_261A03FC0();
    sub_261B8EBE8();
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435E0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
}

unint64_t sub_261A55768@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t result = *a1;
  uint64_t v6 = *a2;
  if ((v6 & 0xC000000000000001) != 0)
  {
    uint64_t v7 = MEMORY[0x263E4D7B0](result);
    goto LABEL_5;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v7 = *(void *)(v6 + 8 * result + 32);
    swift_retain();
LABEL_5:
    id v8 = (id)a2[1];
    unint64_t result = sub_261B8E898();
    *a3 = v7;
    a3[1] = (uint64_t)v8;
    a3[2] = result;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_261A557F4@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450F8);
  long long v3 = (char *)a1 + *(int *)(v2 + 56);
  *(double *)long long v3 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
  *(_OWORD *)(v3 + 8) = xmmword_261B95920;
  *(_OWORD *)(v3 + 24) = xmmword_261B95930;
  *(_OWORD *)(v3 + 4sub_261A34804(0, 1, 2, 0) = xmmword_261B95940;
  sub_261A5544C((uint64_t *)v7);
  long long v4 = v7[1];
  long long v5 = v7[2];
  *a1 = v7[0];
  a1[1] = v4;
  a1[2] = v5;
  return sub_261A555A0((uint64_t)a1 + *(int *)(v2 + 52));
}

uint64_t sub_261A55924()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for WorkoutNotificationPacerCompleteView()
{
  return &type metadata for WorkoutNotificationPacerCompleteView;
}

unint64_t sub_261A55954()
{
  unint64_t result = qword_26A945100;
  if (!qword_26A945100)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9450F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945100);
  }
  return result;
}

uint64_t sub_261A559B0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

unint64_t sub_261A559F0@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_261A55768(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_261A559F8()
{
  if (*v0 < 0.0)
  {
    if (qword_26B416690 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_26B416690 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  swift_beginAccess();
  id v1 = (id)qword_26B416688;
  uint64_t v2 = sub_261B8AA48();

  return v2;
}

uint64_t RaceSecondsAheadOfGhostMetricView.init(secondsAheadOfGhost:color:formattingManager:didCrossFinishLine:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  *(double *)a4 = a5;
  *(void *)(a4 + 8) = result;
  *(void *)(a4 + 16) = a2;
  *(unsigned char *)(a4 + 24) = a3;
  return result;
}

uint64_t RaceSecondsAheadOfGhostMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_261B8FB88();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_261B8FD48();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  id v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_261B8FD58();
  uint64_t v9 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  uint64_t v13 = v1[1];
  long long v14 = (void *)v1[2];
  int v15 = *((unsigned __int8 *)v1 + 24);
  uint64_t v16 = sub_261B8FD78();
  uint64_t v32 = v17;
  uint64_t v33 = v16;
  int v34 = v15;
  if (v15 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8E208], v3);
    swift_retain();
    id v18 = v14;
    sub_261B8FD38();
    uint64_t v19 = v3;
  }
  else
  {
    swift_retain();
    id v20 = v14;
    char v21 = sub_261B8F3D8();
    uint64_t v22 = *MEMORY[0x263F8E208];
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
    uint64_t v31 = v3;
    v23(v6, v22, v3);
    if (v21) {
      sub_261B8FD38();
    }
    else {
      sub_261B8FD28();
    }
    uint64_t v19 = v31;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);

  swift_release();
  sub_261B8A748();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v37);
  sub_261A55ED4();
  uint64_t v24 = v36;
  sub_261B8FD68();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v24);
  uint64_t v25 = v42;
  uint64_t v26 = v43;
  uint64_t v38 = v12;
  uint64_t v39 = v13;
  uint64_t v40 = v14;
  char v41 = v34;
  uint64_t v27 = sub_261A559F8();
  *(void *)a1 = v25;
  *(void *)(a1 + 8) = v26;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v27;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v28;
  *(_WORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = v13;
  return swift_retain();
}

unint64_t sub_261A55ED4()
{
  unint64_t result = qword_26A943A90;
  if (!qword_26A943A90)
  {
    sub_261B8FD58();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943A90);
  }
  return result;
}

uint64_t sub_261A55F2C()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for RaceSecondsAheadOfGhostMetricView(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t initializeWithCopy for RaceSecondsAheadOfGhostMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_retain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for RaceSecondsAheadOfGhostMetricView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for RaceSecondsAheadOfGhostMetricView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RaceSecondsAheadOfGhostMetricView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RaceSecondsAheadOfGhostMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RaceSecondsAheadOfGhostMetricView()
{
  return &type metadata for RaceSecondsAheadOfGhostMetricView;
}

unint64_t sub_261A56128()
{
  unint64_t result = qword_26A945108;
  if (!qword_26A945108)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945110);
    sub_261A02AC8();
    sub_261A561A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945108);
  }
  return result;
}

unint64_t sub_261A561A4()
{
  unint64_t result = qword_26A9439E0;
  if (!qword_26A9439E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9439E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9439E0);
  }
  return result;
}

BOOL SeymourAvailability.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_261A56228()
{
  unint64_t result = qword_26A945118;
  if (!qword_26A945118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945118);
  }
  return result;
}

void *sub_261A5627C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for SeymourAvailability()
{
  return &type metadata for SeymourAvailability;
}

uint64_t *sub_261A562BC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_261B8D668();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_261B8BE48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[6];
    long long v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)a1 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)a1 + v15;
    id v18 = (char *)a2 + v15;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = (char *)a1 + v16;
    id v20 = (char *)a2 + v16;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v16);
    char v22 = v20[8];
    sub_2619F7774(v21, v22);
    *(void *)uint64_t v19 = v21;
    v19[8] = v22;
  }
  return a1;
}

uint64_t sub_261A564B0(uint64_t a1, int *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_261B8D668();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_261B8BE48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  uint64_t v7 = a1 + a2[8];
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);
  return sub_2619F7790(v8, v9);
}

void *sub_261A565AC(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_261B8D668();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  char v9 = (char *)a2 + v7;
  uint64_t v10 = sub_261B8BE48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  long long v12 = *(_OWORD *)((char *)a2 + v11 + 24);
  *(_OWORD *)((char *)a1 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = (char *)a1 + v14;
  id v18 = (char *)a2 + v14;
  uint64_t v19 = *(void *)((char *)a2 + v14);
  char v20 = v18[8];
  sub_2619F7774(v19, v20);
  *(void *)uint64_t v17 = v19;
  v17[8] = v20;
  return a1;
}

void *sub_261A56750(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_2619F8754((uint64_t)a1, &qword_26A945120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_261B8D668();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  char v9 = (char *)a2 + v7;
  uint64_t v10 = sub_261B8BE48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[6]), (void *)((char *)a2 + a3[6]));
  uint64_t v11 = a3[7];
  long long v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  v12[8] = v13[8];
  *(void *)long long v12 = v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = v17[8];
  sub_2619F7774(*(void *)v17, v19);
  uint64_t v20 = *(void *)v16;
  char v21 = v16[8];
  *(void *)uint64_t v16 = v18;
  v16[8] = v19;
  sub_2619F7790(v20, v21);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

char *sub_261A56B08(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_261B8D668();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  int v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_261B8BE48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + sub_261A34804(3, 0, 0, 1) = v16;
  *((void *)v14 + 4) = *((void *)v15 + 4);
  uint64_t v17 = &a1[v13];
  uint64_t v18 = &a2[v13];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  char v21 = &a2[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  return a1;
}

char *sub_261A56C70(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_2619F8754((uint64_t)a1, &qword_26A945120);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_261B8D668();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  int v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_261B8BE48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v12]);
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + sub_261A34804(3, 0, 0, 1) = v15;
  *((void *)v13 + 4) = *((void *)v14 + 4);
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = &a1[v17];
  char v21 = &a2[v17];
  uint64_t v22 = *(void *)v21;
  LOBYTE(v2sub_261A34804(3, 0, 0, 1) = v21[8];
  uint64_t v23 = *(void *)v20;
  char v24 = v20[8];
  *(void *)uint64_t v20 = v22;
  v20[8] = (char)v21;
  sub_2619F7790(v23, v24);
  return a1;
}

uint64_t sub_261A56E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A56E18);
}

uint64_t sub_261A56E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945128);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_261B8BE48();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_261A56F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A56F48);
}

uint64_t sub_261A56F48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945128);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_261B8BE48();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ZoneView()
{
  uint64_t result = qword_26A945130;
  if (!qword_26A945130) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_261A570AC()
{
  sub_261A57190();
  if (v0 <= 0x3F)
  {
    sub_261B8BE48();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_261A57190()
{
  if (!qword_26A945140)
  {
    sub_261B8D668();
    unint64_t v0 = sub_261B8D3D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A945140);
    }
  }
}

uint64_t sub_261A571E8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_261A57204()
{
  qword_26A9535E0 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(131.0, 131.0, 131.0, 131.0, 131.0, 131.0, 131.0);
}

void sub_261A57248()
{
  qword_26A9535E8 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0);
}

void sub_261A57284()
{
  qword_26A9535F0 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(43.0, 43.0, 43.0, 43.0, 43.0, 43.0, 43.0);
}

void sub_261A572C8()
{
  qword_26A9535F8 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0);
}

void sub_261A57304()
{
  qword_26A953600 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(21.0, 21.0, 21.0, 21.0, 21.0, 21.0, 21.0);
}

void sub_261A57340()
{
  qword_26A953608 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0);
}

void sub_261A5737C()
{
  qword_26A953610 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0);
}

uint64_t sub_261A573B8()
{
  uint64_t v1 = type metadata accessor for ZoneView();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + *(int *)(v1 + 24)), *(void *)(v0 + *(int *)(v1 + 24) + 24));
  sub_261B8C248();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945190);
  uint64_t v2 = sub_261B8F998();
  swift_bridgeObjectRelease();
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_261ACA2D4(0, v3, 0);
    uint64_t v4 = v2 + 32;
    uint64_t v5 = v15;
    do
    {
      sub_261A40D48(v4, (uint64_t)v14);
      __swift_project_boxed_opaque_existential_1(v14, v14[3]);
      sub_261B8BE08();
      uint64_t v7 = v6;
      uint64_t v9 = v8;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_261ACA2D4(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v15;
      }
      unint64_t v11 = *(void *)(v5 + 16);
      unint64_t v10 = *(void *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_261ACA2D4(v10 > 1, v11 + 1, 1);
        uint64_t v5 = v15;
      }
      *(void *)(v5 + 16) = v11 + 1;
      uint64_t v12 = v5 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 4sub_261A34804(0, 1, 2, 0) = v9;
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v5;
}

uint64_t sub_261A57578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8DED8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945148);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v10 = sub_261B8DAD8();
  *((void *)v10 + sub_261A34804(3, 0, 0, 1) = 0x4008000000000000;
  unsigned char v10[16] = 0;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945150);
  sub_261A57728(a2, a1, (uint64_t)&v10[*(int *)(v11 + 44)]);
  sub_261B8DEC8();
  sub_2619F8AB8(&qword_26A945158, &qword_26A945148);
  sub_261B8E6B8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_2619F8754((uint64_t)v10, &qword_26A945148);
}

uint64_t sub_261A57728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v26 = a3;
  uint64_t v4 = sub_261B8D538();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = type metadata accessor for ZoneView();
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v23 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945160);
  uint64_t v10 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_261A57A80();
  int v21 = v13;
  uint64_t v14 = *(void *)(sub_261A573B8() + 16);
  swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v15 = *(void *)(sub_261A573B8() + 16);
    swift_bridgeObjectRelease();
LABEL_4:
    uint64_t v27 = 0;
    uint64_t v28 = v15;
    v20[1] = swift_getKeyPath();
    sub_261A59088(a1, (uint64_t)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ZoneView);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v4);
    unint64_t v17 = (*(unsigned __int8 *)(v23 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    unint64_t v18 = (v8 + *(unsigned __int8 *)(v5 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v22;
    *(unsigned char *)(v19 + 24) = v21 & 1;
    sub_261A58B34((uint64_t)v9, v19 + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v19 + v18, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9435F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945168);
    sub_261A03EF0();
    sub_261A58F04();
    sub_261B8EBE8();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(v26, v12, v25);
  }
  sub_261B8C408();
  uint64_t result = sub_261B8C3F8();
  uint64_t v15 = result;
  if ((result & 0x8000000000000000) == 0) {
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_261A57A80()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ZoneView() + 28);
  if (*(unsigned char *)(v1 + 8)) {
    return 0;
  }
  double v3 = *(double *)v1;
  uint64_t v2 = *(void *)(sub_261A573B8() + 16);
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v4 = sub_261A573B8();
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      uint64_t v2 = 0;
      uint64_t v6 = (double *)(v4 + 40);
      while (v3 >= *v6 || *(v6 - 1) > v3)
      {
        ++v2;
        v6 += 2;
        if (v5 == v2)
        {
          uint64_t v2 = 0;
          break;
        }
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_261A57B40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v45[1] = a5;
  uint64_t v52 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945128);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v47 = (void *)((char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_261B8BE48();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (int *)type metadata accessor for ZoneBarView();
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945180);
  MEMORY[0x270FA5388](v50);
  uint64_t v20 = (char *)v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945168);
  MEMORY[0x270FA5388](v51);
  uint64_t v49 = (uint64_t)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  v45[0] = *a1;
  BOOL v24 = (a3 & 1) == 0 && v22 == a2;
  uint64_t v25 = type metadata accessor for ZoneView();
  sub_261A40D48(a4 + *(int *)(v25 + 24), (uint64_t)v53);
  uint64_t v26 = a4 + *(int *)(v25 + 20);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  id v46 = v15;
  uint64_t v48 = v12;
  v27(v15, v26, v12);
  uint64_t v28 = 0;
  if (v24)
  {
    if (qword_26A942CD8 != -1) {
      swift_once();
    }
    uint64_t v28 = qword_26A9535E0;
  }
  sub_261B8D528();
  uint64_t v30 = v29;
  uint64_t v31 = *(void *)(sub_261A573B8() + 16);
  swift_bridgeObjectRelease();
  if (v31)
  {
    uint64_t v32 = *(void *)(sub_261A573B8() + 16);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_261B8C408();
    uint64_t v32 = sub_261B8C3F8();
  }
  uint64_t v33 = sub_261A57FD8();
  char v35 = v34;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v37 = (uint64_t)v47;
  uint64_t *v47 = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  swift_storeEnumTagMultiPayload();
  uint64_t v38 = swift_getKeyPath();
  sub_261A4E500(v53, (uint64_t)v18);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[v16[5]], v46, v48);
  *(void *)&v18[v16[6]] = v45[0];
  v18[v16[7]] = v24;
  *(void *)&v18[v16[8]] = v28;
  *(void *)&v18[v16[9]] = v30;
  *(void *)&v18[v16[10]] = v32;
  uint64_t v39 = &v18[v16[11]];
  *(void *)uint64_t v39 = v33;
  v39[8] = v35 & 1;
  *(void *)&v18[v16[12]] = 0x401E000000000000;
  *(void *)&v18[v16[13]] = 0x401E000000000000;
  sub_2619FB7EC(v37, (uint64_t)&v18[v16[14]], &qword_26A945128);
  uint64_t v40 = &v18[v16[15]];
  *(void *)uint64_t v40 = v38;
  v40[8] = 0;
  sub_261A59088((uint64_t)v18, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ZoneBarView);
  char v41 = &v20[*(int *)(v50 + 36)];
  *char v41 = v24;
  v41[1] = 0;
  sub_261A59158((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ZoneBarView);
  if (v24) {
    double v42 = 1.0;
  }
  else {
    double v42 = 0.0;
  }
  uint64_t v43 = v49;
  sub_261A590F0((uint64_t)v20, v49);
  *(double *)(v43 + *(int *)(v51 + 36)) = v42;
  sub_2619F8754((uint64_t)v20, &qword_26A945180);
  return sub_2619FB7EC(v43, v52, &qword_26A945168);
}

uint64_t sub_261A57FD8()
{
  uint64_t v1 = sub_261A58144();
  if ((v2 & 1) != 0
    || (unint64_t v3 = v1, v4 = type metadata accessor for ZoneView(), v5 = v0 + *(int *)(v4 + 28), (*(unsigned char *)(v5 + 8) & 1) != 0))
  {
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  double v7 = *(double *)v5;
  __swift_project_boxed_opaque_existential_1((void *)(v0 + *(int *)(v4 + 24)), *(void *)(v0 + *(int *)(v4 + 24) + 24));
  sub_261B8C248();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945190);
  uint64_t v8 = sub_261B8F998();
  *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRelease());
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v3 >= *(void *)(v8 + 16))
  {
LABEL_14:
    __break(1u);
    return result;
  }
  sub_261A40D48(v8 + 40 * v3 + 32, (uint64_t)v15);
  swift_bridgeObjectRelease();
  sub_261A582A8(v15);
  double v10 = v9;
  sub_261A58578(v15);
  double v12 = v11;
  if (v7 > v10) {
    double v13 = v7;
  }
  else {
    double v13 = v10;
  }
  if (v12 >= v13) {
    double v14 = v13;
  }
  else {
    double v14 = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  *(double *)&uint64_t result = (v14 - v10) / (v12 - v10);
  return result;
}

uint64_t sub_261A58144()
{
  uint64_t v1 = type metadata accessor for ZoneView();
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = 0;
  uint64_t v6 = v0 + *(int *)(v2 + 36);
  if ((*(unsigned char *)(v6 + 8) & 1) == 0)
  {
    double v7 = *(double *)v6;
    uint64_t v8 = sub_261A573B8();
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v5 = 0;
      double v10 = (double *)(v8 + 40);
      while (1)
      {
        double v11 = *(v10 - 1);
        BOOL v12 = v7 >= *v10 || v11 > v7;
        if (!v12 || v7 < v11) {
          break;
        }
        ++v5;
        v10 += 2;
        if (v9 == v5) {
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      sub_261A59088(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ZoneView);
      sub_261A59158((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ZoneView);
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease();
      sub_261A59088(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ZoneView);
      uint64_t v14 = *(void *)(sub_261A573B8() + 16);
      swift_bridgeObjectRelease();
      sub_261A59158((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ZoneView);
      return v14 - 1;
    }
  }
  return v5;
}

uint64_t sub_261A582A8(void *a1)
{
  uint64_t v3 = sub_261B8BE48();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (sub_261B8BE18())
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t result = sub_261B8BE28();
    if ((v8 & 1) == 0) {
      return result;
    }
LABEL_12:
    uint64_t result = sub_261B8F9C8();
    __break(1u);
    return result;
  }
  uint64_t v9 = type metadata accessor for ZoneView();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + *(int *)(v9 + 20), v3);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v10 == *MEMORY[0x263F87DA0])
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t result = sub_261B8BE38();
    if (v11) {
      goto LABEL_12;
    }
  }
  else if (v10 == *MEMORY[0x263F87D98])
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t result = sub_261B8BDF8();
    if (v12 >= 0.0)
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      return sub_261B8BDF8();
    }
  }
  else
  {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_261A58578(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_261B8BE48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v8 = sub_261B8BE18();
  sub_261B8BE18();
  uint64_t v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v8 != v10)
  {
    uint64_t result = sub_261B8BE38();
    if ((v14 & 1) == 0) {
      return result;
    }
LABEL_11:
    uint64_t result = sub_261B8F9C8();
    __break(1u);
    return result;
  }
  sub_261B8BE28();
  if (v11) {
    goto LABEL_11;
  }
  uint64_t v12 = type metadata accessor for ZoneView();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + *(int *)(v12 + 20), v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (result != *MEMORY[0x263F87DA0] && result != *MEMORY[0x263F87D98])
  {
    sub_261B8C5C8();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

double sub_261A58810@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  sub_261A59088(v2, (uint64_t)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ZoneView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  sub_261A58B34((uint64_t)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  if (qword_26A942CE8 != -1) {
    swift_once();
  }
  double v8 = *(double *)&qword_26A9535F0;
  uint64_t v9 = sub_261B8EC98();
  sub_2619FEE84(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v16, v8, 0, 0.0, 1, v9, v10, (uint64_t)sub_261A58B98, v7);
  swift_release();
  long long v11 = v20;
  a2[4] = v19;
  a2[5] = v11;
  long long v12 = v22;
  a2[6] = v21;
  a2[7] = v12;
  long long v13 = v16[1];
  *a2 = v16[0];
  a2[1] = v13;
  double result = *(double *)&v17;
  long long v15 = v18;
  a2[2] = v17;
  a2[3] = v15;
  return result;
}

uint64_t sub_261A589C0()
{
  uint64_t v1 = (int *)type metadata accessor for ZoneView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_261B8D668();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + v4;
  uint64_t v8 = v5 + v1[5];
  uint64_t v9 = sub_261B8BE48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  __swift_destroy_boxed_opaque_existential_1(v5 + v1[6]);
  sub_2619F7790(*(void *)(v5 + v1[8]), *(unsigned char *)(v5 + v1[8] + 8));
  return MEMORY[0x270FA0238](v0, v7, v2 | 7);
}

uint64_t sub_261A58B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ZoneView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A58B98(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ZoneView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_261A57578(a1, v4);
}

uint64_t sub_261A58C18()
{
  uint64_t v1 = (int *)type metadata accessor for ZoneView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 25) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = sub_261B8D538();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_261B8D668();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v3, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v2 | v7 | 7;
  uint64_t v12 = (v3 + v4 + v7) & ~v7;
  uint64_t v13 = v9 + v1[5];
  uint64_t v14 = sub_261B8BE48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  __swift_destroy_boxed_opaque_existential_1(v9 + v1[6]);
  sub_2619F7790(*(void *)(v9 + v1[8]), *(unsigned char *)(v9 + v1[8] + 8));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v12, v5);
  return MEMORY[0x270FA0238](v0, v12 + v8, v11);
}

uint64_t sub_261A58E18@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ZoneView() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_261B8D538() - 8);
  uint64_t v9 = *(void *)(v2 + 16);
  char v10 = *(unsigned char *)(v2 + 24);
  uint64_t v11 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return sub_261A57B40(a1, v9, v10, v2 + v6, v11, a2);
}

unint64_t sub_261A58F04()
{
  unint64_t result = qword_26A945170;
  if (!qword_26A945170)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945168);
    sub_261A58FA4();
    sub_2619F8AB8(&qword_26A9443C8, &qword_26A9443D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945170);
  }
  return result;
}

unint64_t sub_261A58FA4()
{
  unint64_t result = qword_26A945178;
  if (!qword_26A945178)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945180);
    sub_261A59020();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945178);
  }
  return result;
}

unint64_t sub_261A59020()
{
  unint64_t result = qword_26A945188;
  if (!qword_26A945188)
  {
    type metadata accessor for ZoneBarView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945188);
  }
  return result;
}

uint64_t sub_261A59088(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A590F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A59158(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_261A591BC()
{
  unint64_t result = qword_26A945198;
  if (!qword_26A945198)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9451A0);
    sub_2619F8AB8(&qword_26A9451A8, &qword_26A9451B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945198);
  }
  return result;
}

uint64_t DistanceMetricView.init(distance:formattingManager:distanceType:distanceUnit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t result = swift_getKeyPath();
  *(double *)a5 = a6;
  *(void *)(a5 + 8) = a1;
  *(void *)(a5 + 16) = a2;
  *(void *)(a5 + 24) = a3;
  *(unsigned char *)(a5 + 32) = a4 & 1;
  *(void *)(a5 + 4sub_261A34804(0, 1, 2, 0) = result;
  *(unsigned char *)(a5 + 48) = 0;
  return result;
}

uint64_t sub_261A592D0()
{
  uint64_t v1 = *(void **)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  id v4 = v1;
  sub_2619F7774(v2, v3);
  sub_2619F7774(v2, v3);
  sub_2619FA43C(v2, v3, v8);
  sub_2619F7790(v2, v3);

  sub_2619F7790(v2, v3);
  if (v8[0] != 5) {
    return 0;
  }
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v5 = (id)qword_26B416688;
  uint64_t v6 = sub_261B8AA48();

  return v6;
}

void DistanceMetricView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  char v6 = *((unsigned char *)v1 + 32);
  uint64_t v7 = v1[5];
  char v8 = *((unsigned char *)v1 + 48);
  id v9 = (id)v1[1];
  sub_2619F7774(v7, v8);
  sub_2619F7774(v7, v8);
  sub_2619FA43C(v7, v8, v14);
  sub_2619F7790(v7, v8);

  sub_2619F7790(v7, v8);
  if (v14[0] == 5)
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v10 = (id)qword_26B416688;
    uint64_t v11 = sub_261B8AA48();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v11;
  *(void *)(a1 + 48) = v13;
}

uint64_t sub_261A595C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  char v6 = *((unsigned char *)v1 + 32);
  id v7 = (id)v1[1];
  uint64_t result = sub_261A592D0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = result;
  *(void *)(a1 + 48) = v9;
  return result;
}

uint64_t sub_261A59664()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for DistanceMetricView(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);
  return sub_2619F7790(v2, v3);
}

uint64_t initializeWithCopy for DistanceMetricView(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  char v6 = *(unsigned char *)(a2 + 48);
  id v7 = v3;
  sub_2619F7774(v5, v6);
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithCopy for DistanceMetricView(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  uint64_t v4 = (void *)a2[1];
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = v2[2];
  uint64_t v7 = v2[3];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)v2 + 32);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = v2[5];
  LOBYTE(v2) = *((unsigned char *)v2 + 48);
  sub_2619F7774(v8, (char)v2);
  uint64_t v9 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v8;
  *(unsigned char *)(a1 + 48) = (_BYTE)v2;
  sub_2619F7790(v9, v10);
  return a1;
}

uint64_t assignWithTake for DistanceMetricView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  LOBYTE(v5) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v5;
  sub_2619F7790(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for DistanceMetricView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DistanceMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 4sub_261A34804(0, 1, 2, 0) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DistanceMetricView()
{
  return &type metadata for DistanceMetricView;
}

unint64_t sub_261A598C8()
{
  unint64_t result = qword_26A9451B8;
  if (!qword_26A9451B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9451B8);
  }
  return result;
}

uint64_t View.intervalStepBackground(color:)()
{
  uint64_t v0 = sub_261B8BCE8();
  v3[3] = v0;
  v3[4] = sub_261A59ADC();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v3);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v0 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F87CE0], v0);
  sub_261B8C6E8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  v3[0] = sub_261B8E8A8();
  sub_261B8DFA8();
  sub_261B8E4D8();
  return swift_release();
}

uint64_t Color.intervalBackgroundApplied()()
{
  uint64_t v0 = sub_261B8BCE8();
  v3[3] = v0;
  v3[4] = sub_261A59ADC();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v3);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v0 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F87CE0], v0);
  sub_261B8C6E8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return sub_261B8E8A8();
}

unint64_t sub_261A59ADC()
{
  unint64_t result = qword_26A943490;
  if (!qword_26A943490)
  {
    sub_261B8BCE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943490);
  }
  return result;
}

uint64_t sub_261A59B34()
{
  return swift_getWitnessTable();
}

unint64_t sub_261A59BA4()
{
  unint64_t result = qword_26A944358;
  if (!qword_26A944358)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944358);
  }
  return result;
}

uint64_t EmbeddedPacerConfigurationView.init(pacerConfiguration:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void sub_261A59C08()
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_26B416688;
  uint64_t v1 = sub_261B8AA48();
  uint64_t v3 = v2;

  qword_26A953618 = v1;
  unk_26A953620 = v3;
}

uint64_t EmbeddedPacerConfigurationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v2 = sub_261B8DED8();
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  MEMORY[0x270FA5388](v2);
  unint64_t v47 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_261B8D798();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  double v42 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9451C0);
  uint64_t v6 = (int *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9451C8);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9451D0);
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  char v41 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(v1 + 8);
  uint64_t v38 = sub_261B8DAD8();
  sub_261A5A170((uint64_t)v8);
  uint64_t v12 = &v8[v6[15]];
  uint64_t v13 = sub_261B8DBF8();
  sub_261A5A3E8(v11, (uint64_t)v51);
  uint64_t v14 = v51[0];
  uint64_t v15 = v51[1];
  char v16 = v52;
  long long v37 = v53;
  uint64_t v17 = v54;
  char v18 = v55;
  uint64_t v19 = v56;
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)uint64_t v12 = v13;
  *((void *)v12 + sub_261A34804(3, 0, 0, 1) = 0;
  v12[16] = 1;
  *((void *)v12 + 3) = v14;
  *((void *)v12 + 4) = v15;
  v12[40] = v16;
  *((_OWORD *)v12 + 3) = v37;
  *((void *)v12 + 8) = v17;
  v12[72] = v18;
  *((void *)v12 + 1sub_261A34804(0, 1, 2, 0) = v19;
  *((void *)v12 + 1sub_261A34804(3, 0, 0, 1) = KeyPath;
  v12[96] = 0;
  *(void *)&v8[v6[16]] = 0x4022000000000000;
  *(void *)&v8[v6[17]] = v38;
  long long v21 = v42;
  sub_261B8D788();
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = (uint64_t)v39;
  BOOL v24 = (uint64_t *)&v39[*(int *)(v40 + 36)];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B08);
  uint64_t v26 = v43;
  uint64_t v27 = v45;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))((char *)v24 + *(int *)(v25 + 28), v21, v45);
  uint64_t *v24 = v22;
  sub_2619F86F0((uint64_t)v8, v23, &qword_26A9451C0);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v27);
  sub_2619F8754((uint64_t)v8, &qword_26A9451C0);
  uint64_t v28 = v47;
  sub_261B8DEC8();
  sub_261A5A83C();
  uint64_t v29 = v41;
  sub_261B8E6B8();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v49);
  sub_2619F8754(v23, &qword_26A9451C8);
  uint64_t v30 = sub_261B8E898();
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = v44;
  uint64_t v33 = v50;
  uint64_t v34 = v46;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v50, v29, v46);
  char v35 = (uint64_t *)(v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A9451E8) + 36));
  uint64_t *v35 = v31;
  v35[1] = v30;
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v29, v34);
}

uint64_t sub_261A5A170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9451F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8D618();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945200);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (void *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_261B8E948();
  sub_261B8D608();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  sub_2619F86F0((uint64_t)v4, (uint64_t)v12 + *(int *)(v10 + 44), &qword_26A9451F8);
  uint64_t *v12 = v13;
  swift_retain();
  sub_2619F8754((uint64_t)v4, &qword_26A9451F8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  uint64_t v14 = WorkoutConfiguration.displayColor.getter();
  uint64_t v15 = MEMORY[0x263E4C7B0](v14);
  uint64_t KeyPath = swift_getKeyPath();
  v20[1] = v15;
  swift_retain();
  uint64_t v17 = sub_261B8D4E8();
  sub_2619F86F0((uint64_t)v12, a1, &qword_26A945200);
  swift_release();
  char v18 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945208) + 36));
  uint64_t *v18 = KeyPath;
  v18[1] = v17;
  return sub_2619F8754((uint64_t)v12, &qword_26A945200);
}

uint64_t sub_261A5A3E8@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  if (qword_26A942D10 != -1) {
    swift_once();
  }
  sub_261A029C4();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_261B8E3D8();
  uint64_t v28 = v5;
  uint64_t v29 = v4;
  uint64_t v30 = v6;
  char v27 = v7 & 1;
  WorkoutConfiguration.displayDetail(_:)(a1);
  uint64_t v8 = sub_261B8E3D8();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_261B8E0D8();
  sub_261B8E098();
  swift_release();
  uint64_t v13 = sub_261B8E368();
  uint64_t v15 = v14;
  char v17 = v16;
  swift_release();
  char v18 = v17 & 1;
  sub_261A02A18(v8, v10, v12);
  swift_bridgeObjectRelease();
  sub_261B8E8C8();
  uint64_t v19 = sub_261B8E318();
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  swift_release();
  sub_261A02A18(v13, v15, v18);
  swift_bridgeObjectRelease();
  *(void *)a2 = v29;
  *(void *)(a2 + 8) = v28;
  *(unsigned char *)(a2 + 16) = v27;
  *(void *)(a2 + 24) = v30;
  *(void *)(a2 + 32) = v19;
  *(void *)(a2 + 4sub_261A34804(0, 1, 2, 0) = v21;
  *(unsigned char *)(a2 + 48) = v23 & 1;
  *(void *)(a2 + 56) = v25;
  sub_261A001D0(v29, v28, v27);
  swift_bridgeObjectRetain();
  sub_261A001D0(v19, v21, v23 & 1);
  swift_bridgeObjectRetain();
  sub_261A02A18(v19, v21, v23 & 1);
  swift_bridgeObjectRelease();
  sub_261A02A18(v29, v28, v27);
  return swift_bridgeObjectRelease();
}

uint64_t sub_261A5A628@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_261B8D828();
  *a1 = result;
  return result;
}

uint64_t sub_261A5A654()
{
  return sub_261B8D838();
}

uint64_t sub_261A5A680()
{
  return sub_261B8D8D8();
}

uint64_t sub_261A5A6A4(uint64_t a1)
{
  uint64_t v2 = sub_261B8D798();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_261B8D8E8();
}

uint64_t sub_261A5A76C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_261B8D968();
  *a1 = result;
  return result;
}

uint64_t sub_261A5A798@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_261B8D968();
  *a1 = result;
  return result;
}

uint64_t sub_261A5A7C4()
{
  return sub_261B8D978();
}

uint64_t sub_261A5A7EC()
{
  return sub_261B8D978();
}

uint64_t sub_261A5A814()
{
  return sub_261B8D8D8();
}

unint64_t sub_261A5A83C()
{
  unint64_t result = qword_26A9451D8;
  if (!qword_26A9451D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9451C8);
    sub_2619F8AB8(&qword_26A9451E0, &qword_26A9451C0);
    sub_2619F8AB8(&qword_26A943B00, &qword_26A943B08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9451D8);
  }
  return result;
}

uint64_t sub_261A5A900@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_261B8D828();
  *a1 = result;
  return result;
}

uint64_t sub_261A5A92C()
{
  return sub_261B8D838();
}

uint64_t sub_261A5A958()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for EmbeddedPacerConfigurationView()
{
  return &type metadata for EmbeddedPacerConfigurationView;
}

unint64_t sub_261A5A988()
{
  unint64_t result = qword_26A9451F0;
  if (!qword_26A9451F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9451E8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9451C8);
    sub_261A5A83C();
    swift_getOpaqueTypeConformance2();
    sub_2619F8AB8((unint64_t *)&qword_26A943AF0, &qword_26A943AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9451F0);
  }
  return result;
}

id MusicTrackBridge.__allocating_init(musicTrack:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = &v3[OBJC_IVAR___SMMusicTrack_musicTrack];
  uint64_t v5 = sub_261B8B108();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

id MusicTrackBridge.init(musicTrack:)(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR___SMMusicTrack_musicTrack];
  uint64_t v4 = sub_261B8B108();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for MusicTrackBridge();
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t type metadata accessor for MusicTrackBridge()
{
  uint64_t result = qword_26A945218;
  if (!qword_26A945218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A5AC90()
{
  return sub_261B8B0A8();
}

uint64_t sub_261A5ACD4()
{
  return sub_261B8B0C8();
}

uint64_t sub_261A5AD18()
{
  return sub_261B8B0D8();
}

id sub_261A5AD5C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_261A5ADD8()
{
  return sub_261B8B0B8();
}

uint64_t sub_261A5AE4C()
{
  return sub_261B8B0F8();
}

uint64_t sub_261A5AEC0()
{
  return sub_261B8B0E8();
}

id MusicTrackBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MusicTrackBridge.init()()
{
}

id MusicTrackBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MusicTrackBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_261A5B024()
{
  return type metadata accessor for MusicTrackBridge();
}

uint64_t sub_261A5B02C()
{
  uint64_t result = sub_261B8B108();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MusicTrackBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MusicTrackBridge);
}

uint64_t dispatch thunk of MusicTrackBridge.__allocating_init(musicTrack:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MusicTrackBridge.identifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MusicTrackBridge.title.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MusicTrackBridge.artist.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MusicTrackBridge.album.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MusicTrackBridge.startTime.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MusicTrackBridge.duration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t TrainingLoadDayView.init(fractionalDifferenceFromAcuteToChronicBaseline:widgetRenderingMode:isLoading:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  if (a2)
  {
    uint64_t DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(DayViewModel - 8) + 56))(a5, 1, 1, DayViewModel);
  }
  else
  {
    uint64_t v9 = type metadata accessor for TrainingLoadDayViewModel();
    *(void *)((char *)a5 + *(int *)(v9 + 28)) = 0x3FE3333333333333;
    *a5 = a1;
    sub_261B8C948();
    sub_261B8C938();
    uint64_t v10 = (void *)((char *)a5 + *(int *)(v9 + 24));
    *uint64_t v10 = v11;
    v10[1] = v12;
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a5, 0, 1, v9);
  }
  Dayuint64_t View = type metadata accessor for TrainingLoadDayView();
  uint64_t result = sub_2619FB7EC(a3, (uint64_t)a5 + *(int *)(DayView + 20), &qword_26A944C30);
  *((unsigned char *)a5 + *(int *)(DayView + 24)) = a4 & 1;
  return result;
}

uint64_t type metadata accessor for TrainingLoadDayView()
{
  uint64_t result = qword_26A9452C0;
  if (!qword_26A9452C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TrainingLoadDayView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945228);
  MEMORY[0x270FA5388](v29);
  uint64_t v28 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945230);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
  uint64_t v7 = *(void *)(DayViewModel - 8);
  MEMORY[0x270FA5388](DayViewModel);
  uint64_t v27 = (uint64_t)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945238);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t (**)())((char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945240);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945248);
  MEMORY[0x270FA5388](v15);
  char v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for TrainingLoadDayView() + 24)) == 1)
  {
    uint64_t v18 = sub_261B8E898();
    *(void *)uint64_t v14 = 0x4010000000000000;
    *((void *)v14 + sub_261A34804(3, 0, 0, 1) = -1;
    *((_WORD *)v14 + 8) = 256;
    *((void *)v14 + 3) = v18;
    *((void *)v14 + 4) = 0x3FB999999999999ALL;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945268);
    sub_261A5D3F0();
    sub_261A5D5D4();
    sub_261B8DD68();
    sub_2619F86F0((uint64_t)v17, (uint64_t)v11, &qword_26A945248);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945250);
    sub_261A5D374();
    sub_2619F8AB8(&qword_26A9452B8, &qword_26A945250);
    sub_261B8DD68();
    sub_2619F8754((uint64_t)v17, &qword_26A945248);
    return swift_release();
  }
  else
  {
    v26[0] = v9;
    v26[1] = v15;
    uint64_t v20 = v29;
    uint64_t v21 = (void (*)(unsigned char *, uint64_t))v1;
    sub_2619F86F0(v1, (uint64_t)v5, &qword_26A945230);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, DayViewModel) == 1)
    {
      sub_2619F8754((uint64_t)v5, &qword_26A945230);
      *uint64_t v11 = sub_261A5D254;
      v11[1] = 0;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A945250);
      sub_261A5D374();
      sub_2619F8AB8(&qword_26A9452B8, &qword_26A945250);
      return sub_261B8DD68();
    }
    else
    {
      uint64_t v22 = v27;
      sub_261A5D698((uint64_t)v5, v27);
      char v23 = sub_261AB172C();
      sub_261AB1920();
      uint64_t v24 = (uint64_t)v28;
      unsigned char *v28 = v23;
      *(void *)(v24 + 8) = v25;
      sub_261A5B954(v22, v21, v24 + *(int *)(v20 + 44));
      sub_2619F86F0(v24, (uint64_t)v14, &qword_26A945228);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A945268);
      sub_261A5D3F0();
      sub_261A5D5D4();
      sub_261B8DD68();
      sub_2619F86F0((uint64_t)v17, (uint64_t)v11, &qword_26A945248);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A945250);
      sub_261A5D374();
      sub_2619F8AB8(&qword_26A9452B8, &qword_26A945250);
      sub_261B8DD68();
      sub_2619F8754((uint64_t)v17, &qword_26A945248);
      sub_2619F8754(v24, &qword_26A945228);
      return sub_261A5F4C0(v22, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayViewModel);
    }
  }
}

uint64_t sub_261A5B954@<X0>(uint64_t a1@<X0>, void (*a2)(unsigned char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v207 = a2;
  uint64_t v172 = a3;
  uint64_t v4 = sub_261B8DDF8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v171 = &v155[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v168 = sub_261B8ECD8();
  uint64_t v166 = *(void *)(v168 - 8);
  MEMORY[0x270FA5388](v168);
  uint64_t v163 = &v155[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9452F0);
  uint64_t v164 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v167);
  uint64_t v160 = &v155[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9452F8) - 8;
  MEMORY[0x270FA5388](v161);
  uint64_t v159 = &v155[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945300) - 8;
  uint64_t v9 = MEMORY[0x270FA5388](v162);
  uint64_t v170 = &v155[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v179 = &v155[-v11];
  uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945308);
  uint64_t v180 = *(void *)(v169 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v169);
  long long v165 = &v155[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v176 = &v155[-v14];
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945310) - 8;
  uint64_t v15 = MEMORY[0x270FA5388](v158);
  uint64_t v182 = &v155[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v185 = &v155[-v17];
  uint64_t v18 = sub_261B8C988();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v204 = &v155[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v20);
  char v23 = &v155[-v22];
  uint64_t v24 = sub_261B8D748();
  uint64_t v212 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = &v155[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945318);
  uint64_t v213 = *(void *)(v205 - 8);
  MEMORY[0x270FA5388](v205);
  uint64_t v215 = &v155[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945320) - 8;
  uint64_t v28 = MEMORY[0x270FA5388](v209);
  char v177 = &v155[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v178 = &v155[-v31];
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v175 = &v155[-v33];
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v174 = &v155[-v35];
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v183 = &v155[-v37];
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v181 = &v155[-v39];
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  unint64_t v198 = &v155[-v41];
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v199 = &v155[-v43];
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v200 = &v155[-v45];
  MEMORY[0x270FA5388](v44);
  uint64_t v184 = &v155[-v46];
  uint64_t v47 = *(int *)(v24 + 20);
  uint64_t v48 = v26;
  uint64_t v214 = v26;
  uint64_t v49 = &v26[v47];
  unsigned int v192 = *MEMORY[0x263F19860];
  uint64_t v50 = v192;
  uint64_t v210 = sub_261B8DBB8();
  uint64_t v51 = *(void *)(v210 - 8);
  uint64_t v193 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 104);
  uint64_t v194 = v51 + 104;
  v193(v49, v50, v210);
  __asm { FMOV            V0.2D, #4.0 }
  long long v211 = _Q0;
  *uint64_t v48 = _Q0;
  uint64_t v57 = *(int *)(type metadata accessor for TrainingLoadDayViewModel() + 20);
  uint64_t v196 = a1;
  uint64_t v58 = a1 + v57;
  LODWORD(v203) = *MEMORY[0x263F42BF8];
  uint64_t v186 = *(void (**)(unsigned char *))(v19 + 104);
  uint64_t v202 = v19 + 104;
  v186(v23);
  unint64_t v59 = (void (*)(uint64_t))MEMORY[0x263F42C08];
  uint64_t v188 = sub_261A5F320(&qword_26A945328, MEMORY[0x263F42C08]);
  uint64_t v201 = v58;
  sub_261B8F2A8();
  sub_261B8F2A8();
  uint64_t v60 = v19;
  uint64_t v61 = v19 + 8;
  uint64_t v62 = *(void (**)(unsigned char *, uint64_t))(v19 + 8);
  unint64_t v63 = v23;
  v62(v23, v18);
  uint64_t v64 = v61;
  uint64_t v206 = sub_261A5F320((unint64_t *)&qword_26A945330, MEMORY[0x263F19048]);
  uint64_t v65 = (uint64_t)v214;
  sub_261B8E488();
  int v208 = (uint64_t (*)(void))MEMORY[0x263F19048];
  objc_super v66 = (char *)v65;
  sub_261A5F4C0(v65, MEMORY[0x263F19048]);
  uint64_t v67 = sub_261AB172C();
  uint64_t v68 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v60 + 16);
  uint64_t v191 = v60 + 16;
  id v195 = v68;
  v68(v63, v58, v18);
  uint64_t v69 = v204;
  uint64_t v70 = (void (*)(unsigned char *, uint64_t, uint64_t))v186;
  ((void (*)(unsigned char *, void, uint64_t))v186)(v204, v203, v18);
  uint64_t v190 = sub_261A5F320(&qword_26A945338, v59);
  LOBYTE(v65) = sub_261B8F0A8();
  id v187 = v62;
  v62(v69, v18);
  v62(v63, v18);
  uint64_t v197 = (uint64_t)v207 + *(int *)(type metadata accessor for TrainingLoadDayView() + 20);
  uint64_t v71 = sub_261B2B5DC((v65 & 1) == 0, v197, v67);
  uint64_t v72 = v213;
  uint64_t v73 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v213 + 16);
  uint64_t v189 = v213 + 16;
  uint64_t v203 = v73;
  uint64_t v74 = v200;
  char v75 = v215;
  uint64_t v76 = v205;
  v73(v200, v215, v205);
  *(void *)&v74[*(int *)(v209 + 44)] = v71;
  uint64_t v77 = *(void (**)(unsigned char *, uint64_t))(v72 + 8);
  uint64_t v213 = v72 + 8;
  uint64_t v207 = v77;
  v77(v75, v76);
  sub_2619FB7EC((uint64_t)v74, (uint64_t)v184, &qword_26A945320);
  v193(&v66[*(int *)(v212 + 20)], v192, v210);
  *(_OWORD *)objc_super v66 = v211;
  uint64_t v78 = *MEMORY[0x263F42BE8];
  v70(v63, v78, v18);
  uint64_t v79 = v201;
  sub_261B8F2A8();
  sub_261B8F2A8();
  uint64_t v80 = v187;
  v187(v63, v18);
  uint64_t v81 = (uint64_t)v214;
  sub_261B8E488();
  sub_261A5F4C0(v81, v208);
  uint64_t v82 = sub_261AB172C();
  v195(v63, v79, v18);
  uint64_t v83 = v204;
  v70(v204, v78, v18);
  LOBYTE(v8sub_261A34804(3, 0, 0, 1) = sub_261B8F0A8();
  uint64_t v173 = v64;
  v80(v83, v18);
  v80(v63, v18);
  uint64_t v84 = sub_261B2B5DC((v81 & 1) == 0, v197, v82);
  uint64_t v85 = v199;
  uint64_t v86 = v215;
  uint64_t v87 = v205;
  v203(v199, v215, v205);
  *(void *)&v85[*(int *)(v209 + 44)] = v84;
  v207(v86, v87);
  sub_2619FB7EC((uint64_t)v85, (uint64_t)v200, &qword_26A945320);
  uint64_t v88 = v214;
  v193((char *)v214 + *(int *)(v212 + 20), v192, v210);
  _OWORD *v88 = v211;
  uint64_t v89 = *MEMORY[0x263F42BE0];
  uint64_t v90 = (void (*)(unsigned char *, uint64_t, uint64_t))v186;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v186)(v63, v89, v18);
  uint64_t v91 = v201;
  sub_261B8F2A8();
  sub_261B8F2A8();
  uint64_t v92 = v187;
  v187(v63, v18);
  uint64_t v93 = (uint64_t)v214;
  sub_261B8E488();
  sub_261A5F4C0(v93, v208);
  unsigned int v156 = sub_261AB172C();
  v195(v63, v91, v18);
  uint64_t v94 = v204;
  v90(v204, v89, v18);
  long long v157 = v63;
  LOBYTE(v93) = sub_261B8F0A8();
  v92(v94, v18);
  v92(v63, v18);
  uint64_t v95 = sub_261B2B5DC((v93 & 1) == 0, v197, v156);
  long long v96 = v198;
  uint64_t v97 = v215;
  uint64_t v98 = v205;
  v203(v198, v215, v205);
  *(void *)&v96[*(int *)(v209 + 44)] = v95;
  v207(v97, v98);
  sub_2619FB7EC((uint64_t)v96, (uint64_t)v199, &qword_26A945320);
  uint64_t v99 = v214;
  uint64_t v100 = v192;
  char v101 = v193;
  v193((char *)v214 + *(int *)(v212 + 20), v192, v210);
  *uint64_t v99 = v211;
  sub_261B8E488();
  sub_261A5F4C0((uint64_t)v99, v208);
  uint64_t v102 = sub_261B8E898();
  long long v103 = v182;
  v203(v182, v97, v98);
  *(void *)&v103[*(int *)(v158 + 44)] = v102;
  v207(v97, v98);
  sub_2619FB7EC((uint64_t)v103, (uint64_t)v185, &qword_26A945310);
  uint64_t v104 = v214;
  v101((char *)v214 + *(int *)(v212 + 20), v100, v210);
  *uint64_t v104 = v211;
  uint64_t v105 = *MEMORY[0x263F42BF0];
  uint64_t v106 = v157;
  uint64_t v107 = (void (*)(unsigned char *, uint64_t, uint64_t))v186;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v186)(v157, v105, v18);
  uint64_t v108 = v201;
  sub_261B8F2A8();
  sub_261B8F2A8();
  uint64_t v109 = v187;
  v187(v106, v18);
  uint64_t v110 = (uint64_t)v214;
  sub_261B8E488();
  long long v111 = (char *)v110;
  sub_261A5F4C0(v110, v208);
  LODWORD(v158) = sub_261AB172C();
  v195(v106, v108, v18);
  uint64_t v112 = v204;
  v107(v204, v105, v18);
  LOBYTE(v11sub_261A34804(0, 1, 2, 0) = sub_261B8F0A8();
  v109(v112, v18);
  v109(v106, v18);
  uint64_t v113 = sub_261B2B5DC((v110 & 1) == 0, v197, v158);
  uint64_t v114 = v181;
  uint64_t v115 = v215;
  uint64_t v116 = v205;
  v203(v181, v215, v205);
  *(void *)&v114[*(int *)(v209 + 44)] = v113;
  v207(v115, v116);
  sub_2619FB7EC((uint64_t)v114, (uint64_t)v198, &qword_26A945320);
  uint64_t v117 = (uint64_t)v111;
  v193(&v111[*(int *)(v212 + 20)], v192, v210);
  *(_OWORD *)long long v111 = v211;
  LODWORD(v21sub_261A34804(3, 0, 0, 1) = *MEMORY[0x263F42C00];
  uint64_t v118 = (void (*)(unsigned char *, void, uint64_t))v186;
  v186(v106);
  uint64_t v119 = v201;
  sub_261B8F2A8();
  sub_261B8F2A8();
  uint64_t v120 = v187;
  v187(v106, v18);
  sub_261B8E488();
  sub_261A5F4C0(v117, v208);
  uint64_t v121 = sub_261AB172C();
  v195(v106, v119, v18);
  uint64_t v122 = v204;
  v118(v204, v211, v18);
  LOBYTE(v113) = sub_261B8F0A8();
  v120(v122, v18);
  v120(v106, v18);
  uint64_t v123 = sub_261B2B5DC((v113 & 1) == 0, v197, v121);
  uint64_t v124 = v183;
  uint64_t v125 = v215;
  uint64_t v126 = v205;
  v203(v183, v215, v205);
  *(void *)&v124[*(int *)(v209 + 44)] = v123;
  v207(v125, v126);
  uint64_t v127 = v181;
  sub_2619FB7EC((uint64_t)v124, (uint64_t)v181, &qword_26A945320);
  uint64_t v128 = TrainingLoadBand.color.getter();
  TrainingLoadBand.color.getter();
  uint64_t v129 = sub_261B8E8A8();
  swift_release();
  uint64_t v216 = v128;
  uint64_t v217 = v129;
  uint64_t v218 = 0x4010000000000000;
  uint64_t v219 = 0;
  uint64_t v220 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945340);
  sub_261A5F368();
  uint64_t v130 = v176;
  sub_261B8E488();
  swift_release();
  swift_release();
  uint64_t v216 = sub_261B8E878();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945358);
  sub_261A5D490(&qword_26A945350, &qword_26A945358, (void (*)(void))sub_261A5F408);
  uint64_t v131 = v160;
  sub_261B8E488();
  swift_release();
  uint64_t v132 = v166;
  uint64_t v133 = v163;
  uint64_t v134 = v168;
  (*(void (**)(unsigned char *, void, uint64_t))(v166 + 104))(v163, *MEMORY[0x263F1B970], v168);
  uint64_t v135 = (uint64_t)v159;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v132 + 16))(&v159[*(int *)(v161 + 44)], v133, v134);
  uint64_t v136 = v164;
  uint64_t v137 = v131;
  uint64_t v138 = v131;
  uint64_t v139 = v167;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v164 + 16))(v135, v137, v167);
  (*(void (**)(unsigned char *, uint64_t))(v132 + 8))(v133, v134);
  (*(void (**)(unsigned char *, uint64_t))(v136 + 8))(v138, v139);
  sub_261B8DDE8();
  uint64_t v140 = v179;
  sub_261B8DF48();
  sub_2619FB7EC(v135, (uint64_t)v140, &qword_26A9452F8);
  uint64_t v141 = v183;
  sub_2619F86F0((uint64_t)v184, (uint64_t)v183, &qword_26A945320);
  uint64_t v142 = v174;
  sub_2619F86F0((uint64_t)v200, (uint64_t)v174, &qword_26A945320);
  uint64_t v143 = v175;
  sub_2619F86F0((uint64_t)v199, (uint64_t)v175, &qword_26A945320);
  uint64_t v144 = v182;
  sub_2619F86F0((uint64_t)v185, (uint64_t)v182, &qword_26A945310);
  sub_2619F86F0((uint64_t)v198, (uint64_t)v178, &qword_26A945320);
  sub_2619F86F0((uint64_t)v127, (uint64_t)v177, &qword_26A945320);
  uint64_t v215 = *(unsigned char **)(v180 + 16);
  uint64_t v145 = v165;
  uint64_t v146 = v130;
  uint64_t v147 = v169;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v215)(v165, v146, v169);
  uint64_t v148 = v170;
  sub_2619F86F0((uint64_t)v140, (uint64_t)v170, &qword_26A945300);
  uint64_t v149 = v172;
  sub_2619F86F0((uint64_t)v141, v172, &qword_26A945320);
  long long v150 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A945368);
  sub_2619F86F0((uint64_t)v142, v149 + v150[12], &qword_26A945320);
  sub_2619F86F0((uint64_t)v143, v149 + v150[16], &qword_26A945320);
  sub_2619F86F0((uint64_t)v144, v149 + v150[20], &qword_26A945310);
  long long v151 = v178;
  sub_2619F86F0((uint64_t)v178, v149 + v150[24], &qword_26A945320);
  long long v152 = v177;
  sub_2619F86F0((uint64_t)v177, v149 + v150[28], &qword_26A945320);
  ((void (*)(uint64_t, unsigned char *, uint64_t))v215)(v149 + v150[32], v145, v147);
  sub_2619F86F0((uint64_t)v148, v149 + v150[36], &qword_26A945300);
  sub_2619F8754((uint64_t)v179, &qword_26A945300);
  long long v153 = *(void (**)(unsigned char *, uint64_t))(v180 + 8);
  v153(v176, v147);
  sub_2619F8754((uint64_t)v181, &qword_26A945320);
  sub_2619F8754((uint64_t)v198, &qword_26A945320);
  sub_2619F8754((uint64_t)v185, &qword_26A945310);
  sub_2619F8754((uint64_t)v199, &qword_26A945320);
  sub_2619F8754((uint64_t)v200, &qword_26A945320);
  sub_2619F8754((uint64_t)v184, &qword_26A945320);
  sub_2619F8754((uint64_t)v148, &qword_26A945300);
  v153(v145, v147);
  sub_2619F8754((uint64_t)v152, &qword_26A945320);
  sub_2619F8754((uint64_t)v151, &qword_26A945320);
  sub_2619F8754((uint64_t)v182, &qword_26A945310);
  sub_2619F8754((uint64_t)v175, &qword_26A945320);
  sub_2619F8754((uint64_t)v174, &qword_26A945320);
  return sub_2619F8754((uint64_t)v183, &qword_26A945320);
}

uint64_t sub_261A5D254()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945370);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (uint64_t *)((char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_261B8D528();
  *uint64_t v2 = sub_261B8EC98();
  v2[1] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945378);
  sub_261A5D718((uint64_t)v2 + *(int *)(v4 + 44));
  sub_2619F8AB8(&qword_26A945380, &qword_26A945370);
  sub_261B8E488();
  return sub_2619F8754((uint64_t)v2, &qword_26A945370);
}

unint64_t sub_261A5D374()
{
  unint64_t result = qword_26A945258;
  if (!qword_26A945258)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945248);
    sub_261A5D3F0();
    sub_261A5D5D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945258);
  }
  return result;
}

unint64_t sub_261A5D3F0()
{
  unint64_t result = qword_26A945260;
  if (!qword_26A945260)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945268);
    sub_261A5D490(&qword_26A945270, &qword_26A945278, (void (*)(void))sub_261A5D534);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945260);
  }
  return result;
}

uint64_t sub_261A5D490(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_2619F8AB8((unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A5D534()
{
  unint64_t result = qword_26A945280;
  if (!qword_26A945280)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945288);
    sub_261A26184();
    sub_2619F8AB8(&qword_26A944368, &qword_26A944370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945280);
  }
  return result;
}

unint64_t sub_261A5D5D4()
{
  unint64_t result = qword_26A945290;
  if (!qword_26A945290)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945228);
    sub_2619F8AB8(&qword_26A945298, &qword_26A9452A0);
    sub_2619F8AB8(&qword_26A9452A8, &qword_26A9452B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945290);
  }
  return result;
}

uint64_t sub_261A5D698(uint64_t a1, uint64_t a2)
{
  uint64_t DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DayViewModel - 8) + 32))(a2, a1, DayViewModel);
  return a2;
}

uint64_t sub_261A5D6FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A5D718@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_261B8D768();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v57 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8ECD8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945388) - 8;
  MEMORY[0x270FA5388](v50);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945390) - 8;
  uint64_t v10 = MEMORY[0x270FA5388](v56);
  uint64_t v51 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v59 = (uint64_t)&v39 - v12;
  sub_261B8EC98();
  sub_2619FF044(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v106, 0.0, 1, INFINITY, 0);
  uint64_t v68 = v106;
  uint64_t v69 = v107;
  uint64_t v70 = v110;
  uint64_t v61 = v113;
  uint64_t v58 = v116;
  uint64_t v60 = v119;
  uint64_t v54 = v123;
  uint64_t v55 = v122;
  unsigned __int8 v88 = BYTE8(v106);
  unsigned __int8 v87 = v108;
  unsigned __int8 v86 = v111;
  unsigned __int8 v85 = v114;
  unsigned __int8 v84 = v117;
  unsigned __int8 v83 = v120;
  sub_261B8E898();
  uint64_t v52 = sub_261B8E8A8();
  swift_release();
  int v62 = v88;
  int v63 = v87;
  int v64 = v86;
  int v65 = v85;
  int v66 = v84;
  int v67 = v83;
  uint64_t v53 = sub_261B8E898();
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v49 = v71;
  int v48 = v72;
  uint64_t v47 = v73;
  int v46 = v74;
  uint64_t v44 = v76;
  uint64_t v45 = v75;
  sub_261B8E898();
  uint64_t v43 = sub_261B8E8A8();
  swift_release();
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v42 = v77;
  char v13 = v78;
  uint64_t v14 = v79;
  int v41 = v80;
  uint64_t v15 = v82;
  uint64_t v40 = v81;
  uint64_t v16 = v5;
  uint64_t v17 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  uint64_t v18 = v4;
  v17(v7, *MEMORY[0x263F1B970], v4);
  uint64_t v19 = v16;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v21 = (uint64_t)v57;
  v20(v57, v7, v18);
  sub_261A5F45C(v21, (uint64_t)&v9[*(int *)(v50 + 44)]);
  *(void *)uint64_t v9 = v42;
  v9[8] = v13;
  *((void *)v9 + 2) = v14;
  v9[24] = v41;
  *((void *)v9 + 4) = v40;
  *((void *)v9 + 5) = v15;
  sub_261A5F4C0(v21, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
  uint64_t v22 = sub_261B8E878();
  uint64_t v23 = v51;
  sub_2619F86F0((uint64_t)v9, v51, &qword_26A945388);
  *(void *)(v23 + *(int *)(v56 + 44)) = v22;
  sub_2619F8754((uint64_t)v9, &qword_26A945388);
  uint64_t v24 = v59;
  sub_2619FB7EC(v23, v59, &qword_26A945390);
  sub_2619F86F0(v24, v23, &qword_26A945390);
  *(void *)&long long v97 = v68;
  BYTE8(v97) = v62;
  *(_DWORD *)((char *)&v97 + 9) = *(_DWORD *)v96;
  HIDWORD(v97) = *(_DWORD *)&v96[3];
  *(void *)&long long v98 = v69;
  BYTE8(v98) = v63;
  *(_DWORD *)((char *)&v98 + 9) = *(_DWORD *)v95;
  HIDWORD(v98) = *(_DWORD *)&v95[3];
  *(void *)&long long v99 = v70;
  BYTE8(v99) = v64;
  HIDWORD(v99) = *(_DWORD *)&v94[3];
  *(_DWORD *)((char *)&v99 + 9) = *(_DWORD *)v94;
  *(void *)&long long v100 = v61;
  BYTE8(v10sub_261A34804(0, 1, 2, 0) = v65;
  *(_DWORD *)((char *)&v100 + 9) = *(_DWORD *)v93;
  HIDWORD(v10sub_261A34804(0, 1, 2, 0) = *(_DWORD *)&v93[3];
  *(void *)&long long v101 = v58;
  BYTE8(v10sub_261A34804(3, 0, 0, 1) = v66;
  *(_DWORD *)((char *)&v101 + 9) = *(_DWORD *)v92;
  HIDWORD(v10sub_261A34804(3, 0, 0, 1) = *(_DWORD *)&v92[3];
  *(void *)&long long v102 = v60;
  BYTE8(v102) = v67;
  *(_DWORD *)((char *)&v102 + 9) = *(_DWORD *)v91;
  HIDWORD(v102) = *(_DWORD *)&v91[3];
  uint64_t v26 = v54;
  uint64_t v25 = v55;
  *(void *)&long long v103 = v55;
  *((void *)&v103 + sub_261A34804(3, 0, 0, 1) = v54;
  *(void *)&long long v104 = 0x4010000000000000;
  *((void *)&v104 + sub_261A34804(3, 0, 0, 1) = -1;
  LOWORD(v105) = 256;
  WORD3(v105) = v90;
  *(_DWORD *)((char *)&v105 + 2) = v89;
  uint64_t v27 = v52;
  *((void *)&v105 + sub_261A34804(3, 0, 0, 1) = v52;
  long long v28 = v100;
  *(_OWORD *)(a1 + 32) = v99;
  *(_OWORD *)(a1 + 48) = v28;
  long long v29 = v98;
  *(_OWORD *)a1 = v97;
  *(_OWORD *)(a1 + 16) = v29;
  long long v30 = v101;
  long long v31 = v102;
  long long v32 = v105;
  long long v33 = v103;
  *(_OWORD *)(a1 + 112) = v104;
  *(_OWORD *)(a1 + 128) = v32;
  *(_OWORD *)(a1 + 8sub_261A34804(0, 1, 2, 0) = v31;
  *(_OWORD *)(a1 + 96) = v33;
  *(_OWORD *)(a1 + 64) = v30;
  uint64_t v34 = v49;
  *(void *)(a1 + 144) = v53;
  *(void *)(a1 + 152) = v34;
  *(unsigned char *)(a1 + 16sub_261A34804(0, 1, 2, 0) = v48;
  *(void *)(a1 + 168) = v47;
  *(unsigned char *)(a1 + 176) = v46;
  uint64_t v36 = v43;
  uint64_t v35 = v44;
  *(void *)(a1 + 184) = v45;
  *(void *)(a1 + 192) = v35;
  *(void *)(a1 + 20sub_261A34804(0, 1, 2, 0) = v36;
  *(void *)(a1 + 208) = 0x4010000000000000;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945398);
  sub_2619F86F0(v23, a1 + *(int *)(v37 + 64), &qword_26A945390);
  sub_261A5F520((uint64_t)&v97);
  swift_retain();
  swift_retain();
  sub_2619F8754(v59, &qword_26A945390);
  sub_2619F8754(v23, &qword_26A945390);
  swift_release();
  swift_release();
  *(void *)&long long v106 = v68;
  BYTE8(v106) = v62;
  *(_DWORD *)((char *)&v106 + 9) = *(_DWORD *)v96;
  HIDWORD(v106) = *(_DWORD *)&v96[3];
  uint64_t v107 = v69;
  unsigned __int8 v108 = v63;
  *(_DWORD *)uint64_t v109 = *(_DWORD *)v95;
  *(_DWORD *)&v109[3] = *(_DWORD *)&v95[3];
  uint64_t v110 = v70;
  unsigned __int8 v111 = v64;
  *(_DWORD *)uint64_t v112 = *(_DWORD *)v94;
  *(_DWORD *)&v112[3] = *(_DWORD *)&v94[3];
  uint64_t v113 = v61;
  unsigned __int8 v114 = v65;
  *(_DWORD *)uint64_t v115 = *(_DWORD *)v93;
  *(_DWORD *)&v115[3] = *(_DWORD *)&v93[3];
  uint64_t v116 = v58;
  unsigned __int8 v117 = v66;
  *(_DWORD *)uint64_t v118 = *(_DWORD *)v92;
  *(_DWORD *)&v118[3] = *(_DWORD *)&v92[3];
  uint64_t v119 = v60;
  unsigned __int8 v120 = v67;
  *(_DWORD *)uint64_t v121 = *(_DWORD *)v91;
  *(_DWORD *)&v121[3] = *(_DWORD *)&v91[3];
  uint64_t v122 = v25;
  uint64_t v123 = v26;
  uint64_t v124 = 0x4010000000000000;
  uint64_t v125 = -1;
  __int16 v126 = 256;
  __int16 v128 = v90;
  int v127 = v89;
  uint64_t v129 = v27;
  return sub_261A5F54C((uint64_t)&v106);
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainingLoadDayView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t DayViewModel = (int *)type metadata accessor for TrainingLoadDayViewModel();
    uint64_t v8 = *((void *)DayViewModel - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, DayViewModel))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945230);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v11 = DayViewModel[5];
      uint64_t v12 = (char *)a1 + v11;
      char v13 = (char *)a2 + v11;
      uint64_t v14 = sub_261B8C988();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      *(_OWORD *)((char *)a1 + DayViewModel[6]) = *(_OWORD *)((char *)a2 + DayViewModel[6]);
      *(uint64_t *)((char *)a1 + DayViewModel[7]) = *(uint64_t *)((char *)a2 + DayViewModel[7]);
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, DayViewModel);
    }
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_261B8EF18();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C30);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for TrainingLoadDayView(uint64_t a1, uint64_t a2)
{
  uint64_t DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DayViewModel - 8) + 48))(a1, 1, DayViewModel))
  {
    uint64_t v5 = a1 + *(int *)(DayViewModel + 20);
    uint64_t v6 = sub_261B8C988();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_261B8EF18();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *initializeWithCopy for TrainingLoadDayView(void *a1, void *a2, uint64_t a3)
{
  uint64_t DayViewModel = (int *)type metadata accessor for TrainingLoadDayViewModel();
  uint64_t v7 = *((void *)DayViewModel - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1, DayViewModel))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945230);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = DayViewModel[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_261B8C988();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    *(_OWORD *)((char *)a1 + DayViewModel[6]) = *(_OWORD *)((char *)a2 + DayViewModel[6]);
    *(void *)((char *)a1 + DayViewModel[7]) = *(void *)((char *)a2 + DayViewModel[7]);
    (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, DayViewModel);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_261B8EF18();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C30);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithCopy for TrainingLoadDayView(void *a1, void *a2, uint64_t a3)
{
  uint64_t DayViewModel = (int *)type metadata accessor for TrainingLoadDayViewModel();
  uint64_t v7 = *((void *)DayViewModel - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, DayViewModel);
  int v10 = v8(a2, 1, DayViewModel);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      uint64_t v11 = DayViewModel[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_261B8C988();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      *(_OWORD *)((char *)a1 + DayViewModel[6]) = *(_OWORD *)((char *)a2 + DayViewModel[6]);
      *(void *)((char *)a1 + DayViewModel[7]) = *(void *)((char *)a2 + DayViewModel[7]);
      (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, DayViewModel);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_261A5F4C0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayViewModel);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945230);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  uint64_t v26 = DayViewModel[5];
  uint64_t v27 = (char *)a1 + v26;
  long long v28 = (char *)a2 + v26;
  uint64_t v29 = sub_261B8C988();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  uint64_t v30 = DayViewModel[6];
  long long v31 = (void *)((char *)a1 + v30);
  long long v32 = (void *)((char *)a2 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  *(void *)((char *)a1 + DayViewModel[7]) = *(void *)((char *)a2 + DayViewModel[7]);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_261B8EF18();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C30);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *initializeWithTake for TrainingLoadDayView(void *a1, void *a2, uint64_t a3)
{
  uint64_t DayViewModel = (int *)type metadata accessor for TrainingLoadDayViewModel();
  uint64_t v7 = *((void *)DayViewModel - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1, DayViewModel))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945230);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = DayViewModel[5];
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_261B8C988();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    *(_OWORD *)((char *)a1 + DayViewModel[6]) = *(_OWORD *)((char *)a2 + DayViewModel[6]);
    *(void *)((char *)a1 + DayViewModel[7]) = *(void *)((char *)a2 + DayViewModel[7]);
    (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, DayViewModel);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_261B8EF18();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C30);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for TrainingLoadDayView(void *a1, void *a2, uint64_t a3)
{
  uint64_t DayViewModel = (int *)type metadata accessor for TrainingLoadDayViewModel();
  uint64_t v7 = *((void *)DayViewModel - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, DayViewModel);
  int v10 = v8(a2, 1, DayViewModel);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      uint64_t v11 = DayViewModel[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_261B8C988();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      *(_OWORD *)((char *)a1 + DayViewModel[6]) = *(_OWORD *)((char *)a2 + DayViewModel[6]);
      *(void *)((char *)a1 + DayViewModel[7]) = *(void *)((char *)a2 + DayViewModel[7]);
      (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, DayViewModel);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_261A5F4C0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayViewModel);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945230);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  uint64_t v26 = DayViewModel[5];
  uint64_t v27 = (char *)a1 + v26;
  long long v28 = (char *)a2 + v26;
  uint64_t v29 = sub_261B8C988();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  *(_OWORD *)((char *)a1 + DayViewModel[6]) = *(_OWORD *)((char *)a2 + DayViewModel[6]);
  *(void *)((char *)a1 + DayViewModel[7]) = *(void *)((char *)a2 + DayViewModel[7]);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_261B8EF18();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C30);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadDayView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A5EEC8);
}

uint64_t sub_261A5EEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945230);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C30);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadDayView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A5F008);
}

uint64_t sub_261A5F008(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945230);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C30);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_261A5F120()
{
  sub_261A5F228(319, &qword_26A9452D0, (void (*)(uint64_t))type metadata accessor for TrainingLoadDayViewModel);
  if (v0 <= 0x3F)
  {
    sub_261A5F228(319, &qword_26A9452D8, MEMORY[0x263F1FC90]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_261A5F228(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_261B8F6D8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_261A5F280()
{
  unint64_t result = qword_26A9452E0;
  if (!qword_26A9452E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9452E8);
    sub_261A5D374();
    sub_2619F8AB8(&qword_26A9452B8, &qword_26A945250);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9452E0);
  }
  return result;
}

uint64_t sub_261A5F320(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A5F368()
{
  unint64_t result = qword_26A945348;
  if (!qword_26A945348)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945340);
    sub_261A5D490(&qword_26A945350, &qword_26A945358, (void (*)(void))sub_261A5F408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945348);
  }
  return result;
}

unint64_t sub_261A5F408()
{
  unint64_t result = qword_26A945360;
  if (!qword_26A945360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945360);
  }
  return result;
}

uint64_t sub_261A5F45C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8D768();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A5F4C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_261A5F520(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A5F54C(uint64_t a1)
{
  return a1;
}

unint64_t _HKWorkoutGoalType.symbolName.getter(uint64_t a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0x72656D6974;
      break;
    case 3:
      unint64_t result = 0x656D616C66;
      break;
    default:
      sub_261B8F9C8();
      __break(1u);
      JUMPOUT(0x261A5F660);
  }
  return result;
}

id CatalogWorkoutBridge.__allocating_init(workout:isPartOfAStack:)(uint64_t a1, char a2)
{
  uint64_t v5 = objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR___SMCatalogWorkout_workout];
  uint64_t v7 = sub_261B8B488();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v5[OBJC_IVAR___SMCatalogWorkout_isPartOfAStack] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

uint64_t CatalogWorkoutBridge.workout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___SMCatalogWorkout_workout;
  uint64_t v4 = sub_261B8B488();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t CatalogWorkoutBridge.isPartOfAStack.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SMCatalogWorkout_isPartOfAStack);
}

id CatalogWorkoutBridge.init(workout:isPartOfAStack:)(uint64_t a1, char a2)
{
  uint64_t v5 = &v2[OBJC_IVAR___SMCatalogWorkout_workout];
  uint64_t v6 = sub_261B8B488();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  v2[OBJC_IVAR___SMCatalogWorkout_isPartOfAStack] = a2;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for CatalogWorkoutBridge();
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t type metadata accessor for CatalogWorkoutBridge()
{
  uint64_t result = qword_26A9453C8;
  if (!qword_26A9453C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A5F980()
{
  return sub_261B8B3D8();
}

uint64_t sub_261A5F9C4()
{
  return sub_261B8B3A8();
}

id sub_261A5FA08(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_261A5FA84()
{
  return sub_261B8B428();
}

uint64_t sub_261A5FAF4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453A0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v56 = (char *)&v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_261B8B1D8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v55 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int v62 = (char *)&v54 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v70 = (char *)&v54 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v61 = (char *)&v54 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v54 = (char *)&v54 - v12;
  uint64_t v13 = sub_261B8B3C8();
  uint64_t v14 = *(void *)(v13 + 56);
  uint64_t v57 = v13 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v58 = (unint64_t)(v15 + 63) >> 6;
  int v63 = (void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v64 = v3;
  int v65 = (void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  uint64_t v66 = v13;
  uint64_t v18 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v60 = (void (**)(char *, uint64_t))(v3 + 8);
  if (!v17) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v67 = (v17 - 1) & v17;
  int64_t v68 = v20;
  for (unint64_t i = __clz(__rbit64(v17)) | (v20 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v25 << 6))
  {
    uint64_t v27 = v64;
    unint64_t v28 = *(void *)(v66 + 48) + *(void *)(v64 + 72) * i;
    uint64_t v69 = *(void (**)(char *, unint64_t, uint64_t))(v64 + 16);
    uint64_t v29 = v61;
    v69(v61, v28, v2);
    uint64_t v30 = v70;
    uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v59(v70, v29, v2);
    uint64_t v31 = sub_261B8B1C8();
    uint64_t v33 = v32;
    uint64_t v73 = v31;
    uint64_t v74 = v32;
    char v35 = v34 & 1;
    char v75 = v34 & 1;
    char v72 = 4;
    sub_261A60134();
    sub_261A60188();
    char v36 = sub_261B8B2B8();
    sub_261A49E4C(v31, v33, v35);
    uint64_t v37 = v62;
    v69(v62, (unint64_t)v30, v2);
    if (v36) {
      break;
    }
    uint64_t v38 = sub_261B8B1C8();
    uint64_t v40 = v39;
    uint64_t v73 = v38;
    uint64_t v74 = v39;
    char v42 = v41 & 1;
    char v75 = v41 & 1;
    char v72 = 2;
    char v43 = sub_261B8B2B8();
    sub_261A49E4C(v38, v40, v42);
    uint64_t v18 = v60;
    uint64_t v44 = *v60;
    (*v60)(v37, v2);
    if (v43) {
      goto LABEL_28;
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v44)(v70, v2);
    unint64_t v17 = v67;
    int64_t v20 = v68;
    if (v67) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v22 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      return result;
    }
    if (v22 >= v58)
    {
      swift_release();
      uint64_t v45 = 1;
      uint64_t v23 = (uint64_t)v56;
      goto LABEL_29;
    }
    uint64_t v23 = (uint64_t)v56;
    unint64_t v24 = *(void *)(v57 + 8 * v22);
    int64_t v25 = v20 + 1;
    if (!v24)
    {
      int64_t v25 = v20 + 2;
      if (v20 + 2 >= v58) {
        goto LABEL_34;
      }
      unint64_t v24 = *(void *)(v57 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = v20 + 3;
        if (v20 + 3 >= v58) {
          goto LABEL_34;
        }
        unint64_t v24 = *(void *)(v57 + 8 * v25);
        if (!v24)
        {
          int64_t v25 = v20 + 4;
          if (v20 + 4 >= v58) {
            goto LABEL_34;
          }
          unint64_t v24 = *(void *)(v57 + 8 * v25);
          if (!v24)
          {
            int64_t v25 = v20 + 5;
            if (v20 + 5 >= v58) {
              goto LABEL_34;
            }
            unint64_t v24 = *(void *)(v57 + 8 * v25);
            if (!v24)
            {
              uint64_t v26 = v20 + 6;
              if (v20 + 6 >= v58)
              {
LABEL_34:
                swift_release();
                uint64_t v45 = 1;
                goto LABEL_29;
              }
              unint64_t v24 = *(void *)(v57 + 8 * v26);
              if (!v24)
              {
                while (1)
                {
                  int64_t v25 = v26 + 1;
                  if (__OFADD__(v26, 1)) {
                    goto LABEL_36;
                  }
                  if (v25 >= v58) {
                    goto LABEL_34;
                  }
                  unint64_t v24 = *(void *)(v57 + 8 * v25);
                  ++v26;
                  if (v24) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v25 = v20 + 6;
            }
          }
        }
      }
    }
LABEL_22:
    uint64_t v67 = (v24 - 1) & v24;
    int64_t v68 = v25;
  }
  uint64_t v18 = v60;
  (*v60)(v37, v2);
LABEL_28:
  swift_release();
  uint64_t v23 = (uint64_t)v56;
  v59(v56, v70, v2);
  uint64_t v45 = 0;
LABEL_29:
  uint64_t v46 = v64;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v23, v45, 1, v2);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v23, 1, v2) == 1)
  {
    sub_261A601DC(v23);
    return 0;
  }
  else
  {
    int v48 = v54;
    (*v65)(v54, v23, v2);
    uint64_t v49 = *v63;
    uint64_t v50 = v55;
    (*v63)(v55, v48, v2);
    uint64_t v51 = (objc_class *)type metadata accessor for ContributorBridge();
    uint64_t v52 = (char *)objc_allocWithZone(v51);
    v49(&v52[OBJC_IVAR___SMContributor_contributor], v50, v2);
    v71.receiver = v52;
    v71.super_class = v51;
    id v47 = objc_msgSendSuper2(&v71, sel_init);
    uint64_t v53 = *v18;
    (*v18)(v50, v2);
    v53(v48, v2);
  }
  return (uint64_t)v47;
}

unint64_t sub_261A60134()
{
  unint64_t result = qword_26A9453A8;
  if (!qword_26A9453A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9453A8);
  }
  return result;
}

unint64_t sub_261A60188()
{
  unint64_t result = qword_26A9453B0;
  if (!qword_26A9453B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9453B0);
  }
  return result;
}

uint64_t sub_261A601DC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_261A60254()
{
  return sub_261B8B468();
}

uint64_t sub_261A602C8()
{
  uint64_t v32 = sub_261B8B788();
  uint64_t v0 = *(void *)(v32 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v32);
  char v34 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v33 = (char *)v29 - v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v31 = (char *)v29 - v5;
  uint64_t v6 = sub_261B8B438();
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    unint64_t v39 = MEMORY[0x263F8EE78];
    sub_261B8F968();
    uint64_t result = sub_261A61A1C(v6);
    int64_t v10 = result;
    int v12 = v11 & 1;
    v29[4] = v0;
    uint64_t v30 = v6 + 56;
    v29[2] = v0 + 32;
    v29[3] = v0 + 16;
    v29[1] = v0 + 8;
    uint64_t v13 = v0;
    uint64_t v15 = v32;
    uint64_t v14 = v33;
    while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(v6 + 32))
    {
      if (((*(void *)(v30 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_12;
      }
      if (*(_DWORD *)(v6 + 36) != v9) {
        goto LABEL_13;
      }
      uint64_t v16 = *(void *)(v6 + 48);
      uint64_t v17 = *(void *)(v13 + 72);
      uint64_t v36 = v9;
      uint64_t v37 = v7;
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
      uint64_t v19 = v31;
      int v35 = v12;
      v18(v31, v16 + v17 * v10, v15);
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v14, v19, v15);
      int64_t v20 = v34;
      v18(v34, (uint64_t)v14, v15);
      uint64_t v21 = (objc_class *)type metadata accessor for ArtworkBridge();
      uint64_t v22 = v6;
      uint64_t v23 = (char *)objc_allocWithZone(v21);
      v18(&v23[OBJC_IVAR___SMArtwork_artwork], (uint64_t)v20, v15);
      v38.receiver = v23;
      v38.super_class = v21;
      objc_msgSendSuper2(&v38, sel_init);
      unint64_t v24 = *(void (**)(char *, uint64_t))(v13 + 8);
      v24(v20, v15);
      v24(v14, v15);
      sub_261B8F948();
      sub_261B8F978();
      uint64_t v6 = v22;
      uint64_t v25 = v37;
      sub_261B8F988();
      sub_261B8F958();
      uint64_t result = sub_261A61ACC(v10, v36, v35 & 1, v6);
      int64_t v10 = result;
      int v12 = v26 & 1;
      uint64_t v7 = v25 - 1;
      if (!v7)
      {
        sub_261A61ABC(result, v9, v12);
        unint64_t v27 = v39;
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v27 = MEMORY[0x263F8EE78];
LABEL_10:
    uint64_t v28 = sub_261AD22BC(v27);
    swift_bridgeObjectRelease();
    return v28;
  }
  return result;
}

id sub_261A6064C(void *a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v15 - v10;
  id v12 = a1;
  a4();

  uint64_t v13 = (void *)a5();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_261A60768()
{
  return sub_261B8B3F8();
}

uint64_t sub_261A607DC()
{
  return sub_261B8B458();
}

uint64_t sub_261A60820()
{
  return sub_261B8B448();
}

uint64_t sub_261A608B0()
{
  uint64_t v31 = sub_261B8B108();
  uint64_t v0 = *(void *)(v31 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v32 = (char *)v28 - v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = (char *)v28 - v5;
  uint64_t v6 = sub_261B8B3B8();
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_261B8F968();
    uint64_t result = sub_261A61A1C(v6);
    int64_t v10 = result;
    int v12 = v11 & 1;
    v28[4] = v0;
    uint64_t v29 = v6 + 56;
    void v28[2] = v0 + 32;
    v28[3] = v0 + 16;
    v28[1] = v0 + 8;
    uint64_t v13 = v0;
    uint64_t v15 = v31;
    uint64_t v14 = v32;
    while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(v6 + 32))
    {
      if (((*(void *)(v29 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_12;
      }
      if (*(_DWORD *)(v6 + 36) != v9) {
        goto LABEL_13;
      }
      uint64_t v16 = *(void *)(v6 + 48);
      uint64_t v17 = *(void *)(v13 + 72);
      uint64_t v35 = v9;
      uint64_t v36 = v7;
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
      uint64_t v19 = v30;
      int v34 = v12;
      v18(v30, v16 + v17 * v10, v15);
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v14, v19, v15);
      int64_t v20 = v33;
      v18(v33, (uint64_t)v14, v15);
      uint64_t v21 = (objc_class *)type metadata accessor for MusicTrackBridge();
      uint64_t v22 = v6;
      uint64_t v23 = (char *)objc_allocWithZone(v21);
      v18(&v23[OBJC_IVAR___SMMusicTrack_musicTrack], (uint64_t)v20, v15);
      v37.receiver = v23;
      v37.super_class = v21;
      objc_msgSendSuper2(&v37, sel_init);
      unint64_t v24 = *(void (**)(char *, uint64_t))(v13 + 8);
      v24(v20, v15);
      v24(v14, v15);
      sub_261B8F948();
      sub_261B8F978();
      uint64_t v6 = v22;
      uint64_t v25 = v36;
      sub_261B8F988();
      sub_261B8F958();
      uint64_t result = sub_261A61ACC(v10, v35, v34 & 1, v6);
      int64_t v10 = result;
      int v12 = v26 & 1;
      uint64_t v7 = v25 - 1;
      if (!v7)
      {
        sub_261A61ABC(result, v9, v12);
        uint64_t v27 = v38;
        swift_bridgeObjectRelease();
        return v27;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_261A60D0C()
{
  return sub_261B8B408();
}

id sub_261A60D50(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    uint64_t v7 = (void *)sub_261B8F0B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7;
}

uint64_t sub_261A60DD8()
{
  return sub_261B8B418();
}

id sub_261A60E4C(void *a1, uint64_t a2, void (*a3)(void), void (*a4)(void), unint64_t *a5, void (*a6)(uint64_t))
{
  id v10 = a1;
  a3();

  a4(0);
  sub_261A62098(a5, a6);
  char v11 = (void *)sub_261B8F438();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_261A60EEC()
{
  uint64_t v32 = sub_261B8B218();
  uint64_t v0 = *(void *)(v32 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v32);
  int v34 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v33 = (char *)v29 - v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v31 = (char *)v29 - v5;
  uint64_t v6 = sub_261B8B3E8();
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    unint64_t v39 = MEMORY[0x263F8EE78];
    sub_261B8F968();
    uint64_t result = sub_261A61A1C(v6);
    int64_t v10 = result;
    int v12 = v11 & 1;
    v29[4] = v0;
    uint64_t v30 = v6 + 56;
    v29[2] = v0 + 32;
    v29[3] = v0 + 16;
    v29[1] = v0 + 8;
    uint64_t v13 = v0;
    uint64_t v15 = v32;
    uint64_t v14 = v33;
    while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(v6 + 32))
    {
      if (((*(void *)(v30 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_12;
      }
      if (*(_DWORD *)(v6 + 36) != v9) {
        goto LABEL_13;
      }
      uint64_t v16 = *(void *)(v6 + 48);
      uint64_t v17 = *(void *)(v13 + 72);
      uint64_t v36 = v9;
      uint64_t v37 = v7;
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
      uint64_t v19 = v31;
      int v35 = v12;
      v18(v31, v16 + v17 * v10, v15);
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v14, v19, v15);
      int64_t v20 = v34;
      v18(v34, (uint64_t)v14, v15);
      uint64_t v21 = (objc_class *)type metadata accessor for MediaMomentBridge();
      uint64_t v22 = v6;
      uint64_t v23 = (char *)objc_allocWithZone(v21);
      v18(&v23[OBJC_IVAR___SMMediaMoment_mediaMoment], (uint64_t)v20, v15);
      v38.receiver = v23;
      v38.super_class = v21;
      objc_msgSendSuper2(&v38, sel_init);
      unint64_t v24 = *(void (**)(char *, uint64_t))(v13 + 8);
      v24(v20, v15);
      v24(v14, v15);
      sub_261B8F948();
      sub_261B8F978();
      uint64_t v6 = v22;
      uint64_t v25 = v37;
      sub_261B8F988();
      sub_261B8F958();
      uint64_t result = sub_261A61ACC(v10, v36, v35 & 1, v6);
      int64_t v10 = result;
      int v12 = v26 & 1;
      uint64_t v7 = v25 - 1;
      if (!v7)
      {
        sub_261A61ABC(result, v9, v12);
        unint64_t v27 = v39;
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v27 = MEMORY[0x263F8EE78];
LABEL_10:
    uint64_t v28 = sub_261AD2304(v27);
    swift_bridgeObjectRelease();
    return v28;
  }
  return result;
}

uint64_t sub_261A61238()
{
  return sub_261A6130C();
}

uint64_t sub_261A61248()
{
  return sub_261A6130C();
}

uint64_t sub_261A61258(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_261B8B478();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_261A61BB0();
  sub_261A61C04();
  char v7 = sub_261B8B2B8();
  sub_261A49E4C(v2, v4, v6);

  return v7 & 1;
}

uint64_t sub_261A61304()
{
  return sub_261A6130C();
}

uint64_t sub_261A6130C()
{
  uint64_t v0 = sub_261B8B478();
  uint64_t v2 = v1;
  char v4 = v3 & 1;
  sub_261A61BB0();
  sub_261A61C04();
  char v5 = sub_261B8B2B8();
  sub_261A49E4C(v0, v2, v4);
  return v5 & 1;
}

id sub_261A613E8()
{
  uint64_t v0 = sub_261B8B478();
  if (v2) {
    return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v0 + 1);
  }
  sub_261A49E4C(v0, v1, 0);
  return 0;
}

id CatalogWorkoutBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CatalogWorkoutBridge.init()()
{
}

id CatalogWorkoutBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CatalogWorkoutBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t CatalogWorkout.narrator.getter@<X0>(char *a1@<X8>)
{
  char v41 = a1;
  uint64_t v1 = sub_261B8B1D8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  int v48 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v55 = (char *)&v41 - v6;
  MEMORY[0x270FA5388](v5);
  id v47 = (char *)&v41 - v7;
  uint64_t v8 = sub_261B8B3C8();
  uint64_t v9 = *(void *)(v8 + 56);
  uint64_t v42 = v8 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v49 = v2 + 32;
  uint64_t v50 = v2;
  uint64_t v45 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v46 = v2 + 16;
  uint64_t v51 = v8;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  uint64_t v15 = MEMORY[0x263F69760];
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v52 = (v12 - 1) & v12;
  int64_t v53 = v14;
  for (unint64_t i = __clz(__rbit64(v12)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
  {
    uint64_t v22 = v50;
    unint64_t v23 = *(void *)(v51 + 48) + *(void *)(v50 + 72) * i;
    uint64_t v54 = *(void (**)(char *, unint64_t, uint64_t))(v50 + 16);
    unint64_t v24 = v47;
    v54(v47, v23, v1);
    uint64_t v25 = v55;
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v44(v55, v24, v1);
    uint64_t v26 = sub_261B8B1C8();
    uint64_t v28 = v27;
    uint64_t v57 = v26;
    uint64_t v58 = v27;
    LOBYTE(v24) = v29 & 1;
    char v59 = v29 & 1;
    char v56 = 4;
    sub_261A60134();
    sub_261A60188();
    char v30 = sub_261B8B2B8();
    sub_261A49E4C(v26, v28, (char)v24);
    uint64_t v31 = v48;
    v54(v48, (unint64_t)v25, v1);
    if (v30)
    {
      (*v45)(v31, v1);
LABEL_28:
      swift_release();
      uint64_t v18 = v41;
      v44(v41, v55, v1);
      uint64_t v40 = 0;
LABEL_29:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v18, v40, 1, v1);
      return swift_bridgeObjectRelease();
    }
    uint64_t v32 = sub_261B8B1C8();
    uint64_t v34 = v33;
    uint64_t v57 = v32;
    uint64_t v58 = v33;
    char v36 = v35 & 1;
    char v59 = v35 & 1;
    char v56 = 2;
    uint64_t v37 = v15;
    char v38 = sub_261B8B2B8();
    sub_261A49E4C(v32, v34, v36);
    unint64_t v39 = *v45;
    (*v45)(v31, v1);
    if (v38) {
      goto LABEL_28;
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v39)(v55, v1);
    uint64_t v15 = v37;
    unint64_t v12 = v52;
    int64_t v14 = v53;
    if (v52) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v17 >= v43)
    {
      swift_release();
      uint64_t v40 = 1;
      uint64_t v18 = v41;
      goto LABEL_29;
    }
    uint64_t v18 = v41;
    unint64_t v19 = *(void *)(v42 + 8 * v17);
    int64_t v20 = v14 + 1;
    if (v19) {
      goto LABEL_22;
    }
    int64_t v20 = v14 + 2;
    if (v14 + 2 >= v43) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v42 + 8 * v20);
    if (v19) {
      goto LABEL_22;
    }
    int64_t v20 = v14 + 3;
    if (v14 + 3 >= v43) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v42 + 8 * v20);
    if (v19) {
      goto LABEL_22;
    }
    int64_t v20 = v14 + 4;
    if (v14 + 4 >= v43) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v42 + 8 * v20);
    if (v19) {
      goto LABEL_22;
    }
    int64_t v20 = v14 + 5;
    if (v14 + 5 >= v43) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v42 + 8 * v20);
    if (v19) {
      goto LABEL_22;
    }
    uint64_t v21 = v14 + 6;
    if (v14 + 6 >= v43)
    {
LABEL_31:
      swift_release();
      uint64_t v40 = 1;
      goto LABEL_29;
    }
    unint64_t v19 = *(void *)(v42 + 8 * v21);
    if (!v19)
    {
      while (1)
      {
        int64_t v20 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          goto LABEL_33;
        }
        if (v20 >= v43) {
          goto LABEL_31;
        }
        unint64_t v19 = *(void *)(v42 + 8 * v20);
        ++v21;
        if (v19) {
          goto LABEL_22;
        }
      }
    }
    int64_t v20 = v14 + 6;
LABEL_22:
    uint64_t v52 = (v19 - 1) & v19;
    int64_t v53 = v20;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_261A61A1C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_261A61ABC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

int64_t sub_261A61ACC(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

unint64_t sub_261A61BB0()
{
  unint64_t result = qword_26A9453B8;
  if (!qword_26A9453B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9453B8);
  }
  return result;
}

unint64_t sub_261A61C04()
{
  unint64_t result = qword_26A9453C0;
  if (!qword_26A9453C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9453C0);
  }
  return result;
}

uint64_t sub_261A61C58()
{
  return type metadata accessor for CatalogWorkoutBridge();
}

uint64_t sub_261A61C60()
{
  uint64_t result = sub_261B8B488();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CatalogWorkoutBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CatalogWorkoutBridge);
}

uint64_t dispatch thunk of CatalogWorkoutBridge.__allocating_init(workout:isPartOfAStack:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.dateReleased.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.identifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.title.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.narrator.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.location.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.artwork.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.streamingURL.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.duration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.summary.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.musicTracks.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.musicPlaylistURL.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.musicPlaylistIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.mediaMoments.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.isGuidedWalk.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.isGuidedRun.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.isGuidedVideo.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.mediaTypeRawValue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t sub_261A62098(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Localization.workoutUILocalizedString(_:feature:)()
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_26B416688;
  uint64_t v1 = sub_261B8AA48();
  swift_bridgeObjectRelease();

  return v1;
}

BOOL static LocalizationFeature.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LocalizationFeature.hash(into:)()
{
  return sub_261B8FCA8();
}

uint64_t LocalizationFeature.hashValue.getter()
{
  return sub_261B8FCE8();
}

uint64_t LocalizationFeature.tableName.getter()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0x617A696C61636F4CLL;
  }
}

id sub_261A622E0()
{
  type metadata accessor for WorkoutUIBundlePlaceholder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_26B416688 = (uint64_t)result;
  return result;
}

id WorkoutUIBundle.getter()
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (void *)qword_26B416688;
  return v0;
}

void WorkoutUIBundle.setter(uint64_t a1)
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)qword_26B416688;
  qword_26B416688 = a1;
}

uint64_t (*WorkoutUIBundle.modify())()
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_261A624C8()
{
  unint64_t result = qword_26A9453F0;
  if (!qword_26A9453F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9453F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocalizationFeature(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_261A34804(3, 0, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261A625E8);
      case 4:
        *(_DWORD *)(result + sub_261A34804(3, 0, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_261A34804(3, 0, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_261A34804(3, 0, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationFeature()
{
  return &type metadata for LocalizationFeature;
}

ValueMetadata *type metadata accessor for Localization()
{
  return &type metadata for Localization;
}

Swift::Bool __swiftcall TargetZone.withinRange(rawValue:)(Swift::Double rawValue)
{
  uint64_t v2 = sub_261B8BD48();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = sub_261B8BD68();
  sub_261B8BD88();
  if (v6)
  {
    double v8 = vabdd_f64(rawValue, v7);
    sub_261B8BDA8();
    int v9 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v9 == *MEMORY[0x263F87D20] || v9 == *MEMORY[0x263F87D18] || v9 == *MEMORY[0x263F87D38])
    {
      v10.n128_u64[0] = 0x3FCC9C4DA9003EEALL;
    }
    else
    {
      v10.n128_u64[0] = 5.0;
      if (v9 != *MEMORY[0x263F87D48]
        && v9 != *MEMORY[0x263F87D30]
        && v9 != *MEMORY[0x263F87D40]
        && v9 != *MEMORY[0x263F87D28])
      {
        (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v10);
        v10.n128_u64[0] = 0;
      }
    }
    return v8 <= v10.n128_f64[0];
  }
  else if (v7 <= rawValue)
  {
    sub_261B8BD78();
    return v17 >= rawValue;
  }
  else
  {
    return 0;
  }
}

uint64_t TargetZone.targetState(rawValue:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = sub_261B8BD48();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  double v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  __n128 v10 = (char *)&v37 - v9;
  sub_261B8BD78();
  double v12 = v11;
  sub_261B8BD88();
  double v14 = v13;
  if (sub_261B8BD68())
  {
    uint64_t v38 = a1;
    sub_261B8BDA8();
    uint64_t v15 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
    int v16 = v15(v10, v4);
    int v17 = *MEMORY[0x263F87D20];
    int v18 = *MEMORY[0x263F87D18];
    int v19 = *MEMORY[0x263F87D38];
    double v20 = 0.22352;
    BOOL v22 = v16 == *MEMORY[0x263F87D20] || v16 == v18 || v16 == v19;
    double v23 = 0.22352;
    if (!v22)
    {
      double v23 = 5.0;
      BOOL v24 = v16 == *MEMORY[0x263F87D48] || v16 == *MEMORY[0x263F87D30];
      BOOL v25 = v24 || v16 == *MEMORY[0x263F87D40];
      if (!v25 && v16 != *MEMORY[0x263F87D28])
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        double v23 = 0.0;
      }
    }
    sub_261B8BDA8();
    int v27 = v15(v8, v4);
    if (v27 != v17 && v27 != v18 && v27 != v19)
    {
      double v20 = 5.0;
      BOOL v30 = v27 == *MEMORY[0x263F87D48] || v27 == *MEMORY[0x263F87D30];
      BOOL v31 = v30 || v27 == *MEMORY[0x263F87D40];
      if (!v31 && v27 != *MEMORY[0x263F87D28])
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        double v20 = 0.0;
      }
    }
    double v12 = v12 + v23;
    double v14 = v14 - v20;
    a1 = v38;
  }
  uint64_t v33 = sub_261B8BDB8();
  uint64_t v34 = (unsigned int *)MEMORY[0x263F87D50];
  char v35 = (unsigned int *)MEMORY[0x263F87D58];
  if (v14 <= a2) {
    char v35 = (unsigned int *)MEMORY[0x263F87D60];
  }
  if (v12 >= a2) {
    uint64_t v34 = v35;
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v33 - 8) + 104))(a1, *v34, v33);
}

uint64_t static TargetZone.backgroundColor(targetState:)(uint64_t a1)
{
  uint64_t v2 = sub_261B8E838();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8BDB8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  LODWORD(asub_261A34804(3, 0, 0, 1) = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  int v10 = *MEMORY[0x263F87D60];
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
  if (a1 == v10) {
    return MEMORY[0x263E4C7A0](v5, 0.0, 0.231, 0.149, 1.0);
  }
  uint64_t v11 = MEMORY[0x263E4C7A0](v5, 0.213, 0.086, 0.063, 1.0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

uint64_t static TargetZone.foregroundColor(targetState:)(uint64_t a1)
{
  uint64_t v2 = sub_261B8E838();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8BDB8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  LODWORD(asub_261A34804(3, 0, 0, 1) = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  int v10 = *MEMORY[0x263F87D60];
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
  if (a1 == v10) {
    return MEMORY[0x263E4C7A0](v5, 0.012, 1.0, 0.659, 1.0);
  }
  uint64_t v11 = MEMORY[0x263E4C7A0](v5, 1.0, 0.373, 0.271, 1.0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

double static HeartRateTargetZone.singleRangeThreshold.getter()
{
  return 5.0;
}

double HeartRateTargetZone.currentRange.getter()
{
  double result = COERCE_DOUBLE(sub_261B8C2F8());
  if (v1) {
    return 0.0;
  }
  return result;
}

double static PowerZonesAlertTargetZone.singleRangeThreshold.getter()
{
  return 5.0;
}

double PowerZonesAlertTargetZone.currentRange.getter()
{
  double result = COERCE_DOUBLE(sub_261B8C5A8());
  if (v1) {
    return 0.0;
  }
  return result;
}

uint64_t WorkoutStep.targetIconName.getter()
{
  uint64_t v0 = sub_261B8BD48();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_261B8BC18())
  {
    sub_261B8BDA8();
    int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
    int v5 = *MEMORY[0x263F87D40];
    int v6 = *MEMORY[0x263F87D28];
    swift_release();
    if (v4 == v5 || v4 == v6)
    {
      return 0x6C69662E746C6F62;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      return 0xD00000000000001BLL;
    }
  }
  else
  {
    uint64_t v8 = sub_261B8BC58();
    swift_release();
    if (v8)
    {
      return 0x69662E7472616568;
    }
    else
    {
      uint64_t v10 = sub_261B8BC78();
      swift_release();
      if (v10) {
        return 0x6C69662E746C6F62;
      }
      else {
        return 0;
      }
    }
  }
}

uint64_t GroundContactTimeMetricView.init(metricType:groundContactTime:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3 & 1;
  *(void *)(a5 + 24) = a4;
  return result;
}

unint64_t sub_261A63144()
{
  if (*v0 == 30)
  {
    if (qword_26B416690 == -1) {
      goto LABEL_6;
    }
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  if (*v0 != 31) {
    return 0xD000000000000012;
  }
  if (qword_26B416690 != -1) {
    goto LABEL_9;
  }
LABEL_6:
  swift_beginAccess();
  id v1 = (id)qword_26B416688;
  uint64_t v2 = sub_261B8AA48();

  return v2;
}

uint64_t sub_261A632CC()
{
  uint64_t v1 = sub_261B8ABA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  int v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8AEF8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453F8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  double v12 = (char *)v17 - v11;
  if (*(unsigned char *)(v0 + 16))
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v13 = (id)qword_26B416688;
    uint64_t v14 = sub_261B8AA48();
  }
  else
  {
    v17[0] = round(*(double *)(v0 + 8) * 1000.0);
    sub_261B8AE68();
    sub_261A63D24();
    sub_261B8AAE8();
    sub_261B8AB98();
    MEMORY[0x263E48A00](v4, v6);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v10, v6);
    sub_2619F8AB8((unint64_t *)&qword_26A945408, &qword_26A9453F8);
    sub_261B8EFD8();
    v15(v12, v6);
    return v17[1];
  }
  return v14;
}

uint64_t sub_261A63634()
{
  if (*(unsigned char *)(v0 + 16))
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v1 = (id)qword_26B416688;
    uint64_t v2 = sub_261B8AA48();
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + 24);
    sub_261A63144();
    sub_261A029C4();
    uint64_t v4 = sub_261B8F788();
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_261A632CC();
    uint64_t v9 = v8;
    uint64_t v10 = qword_26B416690;
    id v11 = v3;
    if (v10 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v12 = (id)qword_26B416688;
    uint64_t v13 = sub_261B8AA48();
    uint64_t v15 = v14;

    swift_bridgeObjectRetain();
    int v16 = sub_261A0B1E4(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    unint64_t v19 = v18 + 1;
    if (v18 >= v17 >> 1) {
      int v16 = sub_261A0B1E4((void *)(v17 > 1), v18 + 1, 1, v16);
    }
    _OWORD v16[2] = v19;
    double v20 = &v16[2 * v18];
    v20[4] = v7;
    v20[5] = v9;
    unint64_t v21 = v16[3];
    swift_bridgeObjectRetain();
    if (v19 >= v21 >> 1) {
      int v16 = sub_261A0B1E4((void *)(v21 > 1), v18 + 2, 1, v16);
    }
    _OWORD v16[2] = v18 + 2;
    BOOL v22 = &v16[2 * v19];
    v22[4] = v13;
    v22[5] = v15;
    unint64_t v23 = v16[2];
    unint64_t v24 = v16[3];
    swift_bridgeObjectRetain();
    if (v23 >= v24 >> 1) {
      int v16 = sub_261A0B1E4((void *)(v24 > 1), v23 + 1, 1, v16);
    }
    _OWORD v16[2] = v23 + 1;
    BOOL v25 = &v16[2 * v23];
    v25[4] = v4;
    v25[5] = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943578);
    sub_2619F8AB8((unint64_t *)&qword_26A943580, &qword_26A943578);
    uint64_t v2 = sub_261B8F048();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t GroundContactTimeMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void **)(v1 + 24);
  uint64_t v5 = sub_261A632CC();
  uint64_t v19 = v6;
  uint64_t v20 = v5;
  if (v3)
  {
    id v7 = v4;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = qword_26B416690;
    id v11 = v4;
    if (v10 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v12 = (id)qword_26B416688;
    uint64_t v8 = sub_261B8AA48();
    uint64_t v9 = v13;
  }
  unint64_t v14 = sub_261A63144();
  uint64_t v16 = v15;

  uint64_t result = sub_261A63634();
  *(void *)a1 = v20;
  *(void *)(a1 + 8) = v19;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v16;
  *(_WORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = result;
  *(void *)(a1 + 64) = v18;
  return result;
}

uint64_t sub_261A63B90()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for GroundContactTimeMetricView(uint64_t a1)
{
}

uint64_t initializeWithCopy for GroundContactTimeMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for GroundContactTimeMetricView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 24);
  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for GroundContactTimeMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for GroundContactTimeMetricView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroundContactTimeMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroundContactTimeMetricView()
{
  return &type metadata for GroundContactTimeMetricView;
}

unint64_t sub_261A63D24()
{
  unint64_t result = qword_26A945400;
  if (!qword_26A945400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945400);
  }
  return result;
}

double Double.smoothedForDisplay.getter(double a1)
{
  return round(a1 * 100.0) / 100.0;
}

uint64_t IntervalDistanceBasedTimeMetricView.init(step:formattingManager:intervalsMetricsPublisher:workoutStatePublisher:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  sub_261B8C548();
  sub_261A64C90(&qword_26A943468, MEMORY[0x263F87F58]);
  swift_retain();
  id v6 = a2;
  swift_retain();
  uint64_t v7 = sub_261B8D5E8();
  uint64_t v9 = v8;
  sub_261B8BB48();
  sub_261A64C90(&qword_26A943470, MEMORY[0x263F87C00]);
  uint64_t v10 = sub_261B8D5E8();
  uint64_t v12 = v11;
  swift_release();

  uint64_t result = swift_release();
  *a3 = a1;
  a3[1] = v6;
  a3[2] = v7;
  a3[3] = v9;
  a3[4] = v10;
  a3[5] = v12;
  return result;
}

uint64_t sub_261A63EC0()
{
  uint64_t v1 = *(void **)(v0 + 8);
  unint64_t v2 = (void *)sub_261B8BC88();
  char v3 = sub_261B8F608();

  if ((v3 & 1) != 0
    && (uint64_t v4 = (void *)sub_261B8BC88(),
        id v5 = objc_msgSend(v4, sel_requiredDistance),
        v4,
        v5))
  {
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3F1A0]), sel_initWithGoalTypeIdentifier_value_, 1, v5);
    uint64_t v7 = (void *)sub_261B8BC08();
    uint64_t v8 = FIUIDistanceTypeForActivityType();

    uint64_t v9 = NLSessionActivityGoal.intervalDisplayString(formattingManager:distanceType:)(v1, v8, 0);
    uint64_t v11 = v10;
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v12 = (id)qword_26B416688;
    sub_261B8AA48();

    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_261B93F70;
    *(void *)(v13 + 56) = MEMORY[0x263F8D310];
    *(void *)(v13 + 64) = sub_261A2B2E8();
    *(void *)(v13 + 32) = v9;
    *(void *)(v13 + 4sub_261A34804(0, 1, 2, 0) = v11;
    uint64_t v14 = sub_261B8F118();

    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    uint64_t result = sub_261B8F9C8();
    __break(1u);
  }
  return result;
}

uint64_t IntervalDistanceBasedTimeMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v84 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (int *)type metadata accessor for WorkoutTimeView();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v75 = (uint64_t)&v74 - v9;
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9433E8);
  MEMORY[0x270FA5388](v74);
  uint64_t v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9433F0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v77 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945410);
  uint64_t v14 = MEMORY[0x270FA5388](v83);
  uint64_t v76 = (uint64_t)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v78 = (uint64_t)&v74 - v16;
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945418);
  MEMORY[0x270FA5388](v82);
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v1[1];
  *(void *)&long long v79 = *v1;
  *((void *)&v79 + sub_261A34804(3, 0, 0, 1) = v19;
  uint64_t v20 = v1[3];
  uint64_t v21 = v1[4];
  uint64_t v22 = v1[5];
  uint64_t v80 = v1[2];
  uint64_t v81 = v21;
  swift_retain();
  sub_261B8C538();
  char v24 = v23;
  swift_release();
  if (v24)
  {
    swift_retain();
    sub_261B8C518();
    swift_release();
    *(void *)uint64_t v8 = swift_getKeyPath();
    v8[8] = 0;
    *((void *)v8 + 2) = swift_getKeyPath();
    unsigned char v8[24] = 0;
    uint64_t v45 = (uint64_t)&v8[v5[6]];
    uint64_t v46 = sub_261B8ADD8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
    uint64_t v47 = v5[7];
    v8[v47] = 0;
    swift_retain();
    sub_261A1F3C0((uint64_t)v4, v45);
    v8[v47] = 0;
    int v48 = (uint64_t *)&v8[v5[8]];
    sub_261B8BB48();
    sub_261A64C90(&qword_26A943470, MEMORY[0x263F87C00]);
    uint64_t v49 = sub_261B8D5E8();
    uint64_t v51 = v50;
    sub_2619F8754((uint64_t)v4, &qword_26A943B38);
    *int v48 = v49;
    v48[1] = v51;
    uint64_t v52 = v75;
    sub_261A4C9A0((uint64_t)v8, v75);
    long long v86 = v79;
    *(void *)&long long v87 = v80;
    *((void *)&v87 + sub_261A34804(3, 0, 0, 1) = v20;
    *(void *)&long long v88 = v81;
    *((void *)&v88 + sub_261A34804(3, 0, 0, 1) = v22;
    uint64_t v53 = sub_261A63EC0();
    uint64_t v55 = v54;
    id v56 = objc_msgSend(self, sel_secondaryLabelColor);
    uint64_t v57 = MEMORY[0x263E4C6F0](v56);
    sub_261A64A30(v52, (uint64_t)v11);
    uint64_t v58 = (uint64_t *)&v11[*(int *)(v74 + 36)];
    *uint64_t v58 = v53;
    v58[1] = v55;
    v58[2] = v57;
    v58[3] = 0x4008000000000000;
    sub_261A64A94(v52);
    if (qword_26A942CA8 != -1) {
      swift_once();
    }
    double v59 = *(double *)&qword_26A9447E0;
    uint64_t v60 = sub_261B8ECA8();
    uint64_t v61 = v77;
    sub_2619FF3A4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v77, 0.0, 1, v59, 0, v60, v62);
    sub_2619F8754((uint64_t)v11, &qword_26A9433E8);
    LOBYTE(v59) = sub_261B8DFD8();
    _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
    sub_261B8D358();
    uint64_t v64 = v63;
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    uint64_t v70 = v69;
    uint64_t v71 = v76;
    sub_2619F86F0(v61, v76, &qword_26A9433F0);
    uint64_t v72 = v71 + *(int *)(v83 + 36);
    *(unsigned char *)uint64_t v72 = LOBYTE(v59);
    *(void *)(v72 + 8) = v64;
    *(void *)(v72 + 16) = v66;
    *(void *)(v72 + 24) = v68;
    *(void *)(v72 + 32) = v70;
    *(unsigned char *)(v72 + 4sub_261A34804(0, 1, 2, 0) = 0;
    sub_2619F8754(v61, &qword_26A9433F0);
    uint64_t v73 = v78;
    sub_261A64AF0(v71, v78);
    sub_2619F86F0(v73, (uint64_t)v18, &qword_26A945410);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945420);
    sub_261A64B88(&qword_26A945428, &qword_26A945420, (void (*)(void))sub_261A64B58);
    sub_261A64B88(&qword_26A945450, &qword_26A945410, (void (*)(void))sub_261A64C60);
    sub_261B8DD68();
    return sub_2619F8754(v73, &qword_26A945410);
  }
  else
  {
    sub_261B8C358();
    uint64_t v25 = sub_261B8C338();
    uint64_t v27 = v26;
    long long v86 = v79;
    *(void *)&long long v87 = v80;
    *((void *)&v87 + sub_261A34804(3, 0, 0, 1) = v20;
    *(void *)&long long v88 = v81;
    *((void *)&v88 + sub_261A34804(3, 0, 0, 1) = v22;
    uint64_t v28 = sub_261A63EC0();
    uint64_t v30 = v29;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v100 = v25;
    uint64_t v101 = v27;
    uint64_t v102 = 0;
    uint64_t v103 = 0;
    uint64_t v104 = v28;
    uint64_t v105 = v30;
    __int16 v106 = 0;
    uint64_t v107 = 0;
    uint64_t v108 = 0;
    char v109 = 0;
    uint64_t v110 = KeyPath;
    char v111 = 0;
    uint64_t v112 = 0x3FD6666666666666;
    if (qword_26A942CA8 != -1) {
      swift_once();
    }
    double v32 = *(double *)&qword_26A9447E0;
    sub_261B8ECA8();
    sub_2619FF1D0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v86, 0.0, 1, v32, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_2619F7790(KeyPath, 0);
    char v33 = sub_261B8DFD8();
    _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
    sub_261B8D358();
    char v85 = 0;
    long long v34 = v97;
    *((_OWORD *)v18 + 1sub_261A34804(0, 1, 2, 0) = v96;
    *((_OWORD *)v18 + 1sub_261A34804(3, 0, 0, 1) = v34;
    *((_OWORD *)v18 + 12) = v98;
    *((void *)v18 + 26) = v99;
    long long v35 = v93;
    *((_OWORD *)v18 + 6) = v92;
    *((_OWORD *)v18 + 7) = v35;
    long long v36 = v95;
    *((_OWORD *)v18 + 8) = v94;
    *((_OWORD *)v18 + 9) = v36;
    long long v37 = v89;
    *((_OWORD *)v18 + 2) = v88;
    *((_OWORD *)v18 + 3) = v37;
    long long v38 = v91;
    *((_OWORD *)v18 + 4) = v90;
    *((_OWORD *)v18 + 5) = v38;
    long long v39 = v87;
    *(_OWORD *)uint64_t v18 = v86;
    *((_OWORD *)v18 + sub_261A34804(3, 0, 0, 1) = v39;
    v18[216] = v33;
    *((void *)v18 + 28) = v40;
    *((void *)v18 + 29) = v41;
    *((void *)v18 + 3sub_261A34804(0, 1, 2, 0) = v42;
    *((void *)v18 + 3sub_261A34804(3, 0, 0, 1) = v43;
    v18[256] = v85;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945420);
    sub_261A64B88(&qword_26A945428, &qword_26A945420, (void (*)(void))sub_261A64B58);
    sub_261A64B88(&qword_26A945450, &qword_26A945410, (void (*)(void))sub_261A64C60);
    return sub_261B8DD68();
  }
}

uint64_t sub_261A64A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutTimeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A64A94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WorkoutTimeView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_261A64AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A64B58()
{
  return sub_261A64B88(&qword_26A945430, &qword_26A945438, (void (*)(void))sub_261A64C04);
}

uint64_t sub_261A64B88(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A64C04()
{
  unint64_t result = qword_26A945440;
  if (!qword_26A945440)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945440);
  }
  return result;
}

uint64_t sub_261A64C60()
{
  return sub_261A64B88(&qword_26A945458, &qword_26A9433F0, (void (*)(void))sub_261A1F0E4);
}

uint64_t sub_261A64C90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A64CD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for IntervalDistanceBasedTimeMetricView(uint64_t a1)
{
  swift_release();

  swift_release();
  return swift_release();
}

void *initializeWithCopy for IntervalDistanceBasedTimeMetricView(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  id v6 = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for IntervalDistanceBasedTimeMetricView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for IntervalDistanceBasedTimeMetricView(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for IntervalDistanceBasedTimeMetricView()
{
  return &type metadata for IntervalDistanceBasedTimeMetricView;
}

unint64_t sub_261A64EAC()
{
  unint64_t result = qword_26A945460;
  if (!qword_26A945460)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945468);
    sub_261A64B88(&qword_26A945428, &qword_26A945420, (void (*)(void))sub_261A64B58);
    sub_261A64B88(&qword_26A945450, &qword_26A945410, (void (*)(void))sub_261A64C60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945460);
  }
  return result;
}

uint64_t WorkoutEffort.highestSubWorkoutEffort.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WorkoutEffort() + 28);
  return sub_261A65018(v3, a1);
}

uint64_t type metadata accessor for WorkoutEffort()
{
  uint64_t result = qword_26A9454A0;
  if (!qword_26A9454A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A65018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t WorkoutEffort.allSubWorkoutsAreSkipped.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WorkoutEffort() + 32));
}

uint64_t WorkoutEffort.allSubWorkoutsHaveEffort.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WorkoutEffort() + 36));
}

uint64_t WorkoutEffort.itemHasEffort.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WorkoutEffort() + 40));
}

uint64_t WorkoutEffort.numOfEfforts.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for WorkoutEffort() + 44));
}

uint64_t WorkoutEffort.init(efforts:isGroupWorkout:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v103 = a3;
  uint64_t v114 = sub_261B8BE88();
  uint64_t v97 = *(void *)(v114 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v114);
  uint64_t v113 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v112 = (char *)&v97 - v8;
  uint64_t v9 = sub_261B8C2D8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v116 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  char v111 = (char *)&v97 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v118 = (char *)&v97 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v105 = (char *)&v97 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v102 = (int *)((char *)&v97 - v20);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v119 = (char *)&v97 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v115 = (char *)&v97 - v24;
  MEMORY[0x270FA5388](v23);
  long long v98 = (char *)&v97 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910) - 8;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  double v32 = (char *)&v97 - v31;
  MEMORY[0x270FA5388](v30);
  *(void *)a3 = a1;
  *(unsigned char *)(a3 + 8) = a2;
  uint64_t v34 = *(void *)(a1 + 16);
  uint64_t v117 = v10;
  uint64_t v100 = a1;
  uint64_t v99 = (char *)&v97 - v35;
  uint64_t v101 = v34;
  if (v34)
  {
    uint64_t v36 = a1 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    long long v37 = *(void (**)(void))(v33 + 72);
    long long v38 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    long long v39 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    swift_bridgeObjectRetain();
    unint64_t v120 = MEMORY[0x263F8EE78];
    uint64_t v110 = v37;
    do
    {
      sub_261A65018(v36, (uint64_t)v32);
      sub_261A65D00((uint64_t)v32, (uint64_t)v29);
      if ((*v38)(v29, 1, v9) == 1)
      {
        sub_2619F8754((uint64_t)v29, &qword_26A943910);
      }
      else
      {
        uint64_t v40 = *v39;
        uint64_t v41 = v115;
        (*v39)(v115, v29, v9);
        v40(v119, v41, v9);
        unint64_t v42 = v120;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v42 = sub_261A0B2F4(0, *(void *)(v42 + 16) + 1, 1, v42);
        }
        unint64_t v43 = v42;
        unint64_t v44 = *(void *)(v42 + 16);
        unint64_t v120 = v43;
        unint64_t v45 = *(void *)(v43 + 24);
        if (v44 >= v45 >> 1) {
          unint64_t v120 = sub_261A0B2F4(v45 > 1, v44 + 1, 1, v120);
        }
        uint64_t v46 = v119;
        unint64_t v47 = v120;
        *(void *)(v120 + 16) = v44 + 1;
        uint64_t v48 = v117;
        v40((char *)(v47+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v117 + 72) * v44), v46, v9);
        uint64_t v10 = v48;
        long long v37 = v110;
      }
      v36 += (uint64_t)v37;
      --v34;
    }
    while (v34);
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v120 = MEMORY[0x263F8EE78];
  }
  uint64_t v49 = v103;
  unint64_t v50 = v120;
  *(void *)(v103 + 16) = v120;
  uint64_t v51 = *(char **)(v50 + 16);
  uint64_t v119 = v51;
  if (v51)
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    uint64_t v53 = v98;
    uint64_t v108 = (char *)(v50 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)));
    char v109 = v52;
    uint64_t v110 = (void (*)(void))(v10 + 16);
    ((void (*)(char *))v52)(v98);
    uint64_t result = swift_bridgeObjectRetain_n();
    uint64_t v55 = v51;
    id v56 = (char *)v102;
    if (v51 != (char *)1)
    {
      __int16 v106 = (void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v107 = (void (**)(char *, uint64_t))(v97 + 8);
      uint64_t v104 = (uint64_t (**)(char *, char *, uint64_t))(v10 + 32);
      unint64_t v75 = 1;
      uint64_t v76 = v114;
      while (v75 < *(void *)(v50 + 16))
      {
        v109(v56, &v108[*(void *)(v10 + 72) * v75], v9);
        uint64_t v77 = v112;
        sub_261B8C278();
        uint64_t v115 = (char *)sub_261B8BE78();
        uint64_t v78 = *v107;
        (*v107)(v77, v76);
        long long v79 = v113;
        sub_261B8C278();
        uint64_t v80 = sub_261B8BE78();
        v78(v79, v76);
        uint64_t v81 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
        if ((uint64_t)v115 >= v80)
        {
          uint64_t result = v81(v56, v9);
        }
        else
        {
          v81(v53, v9);
          uint64_t result = (*v104)(v53, v56, v9);
        }
        uint64_t v55 = v119;
        unint64_t v50 = v120;
        if (v119 == (char *)++v75) {
          goto LABEL_14;
        }
      }
      goto LABEL_48;
    }
LABEL_14:
    uint64_t v57 = v55;
    uint64_t v58 = (uint64_t)v99;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v99, v53, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v58, 0, 1, v9);
    swift_bridgeObjectRelease();
    uint64_t v49 = v103;
  }
  else
  {
    uint64_t v57 = 0;
    uint64_t v58 = (uint64_t)v99;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v99, 1, 1, v9);
    swift_bridgeObjectRetain();
  }
  double v59 = v111;
  uint64_t v60 = MEMORY[0x263F8EE78];
  uint64_t v61 = (int *)type metadata accessor for WorkoutEffort();
  sub_261A65D00(v58, v49 + v61[7]);
  uint64_t v102 = v61;
  if (v101)
  {
    uint64_t v62 = *(void *)(v120 + 16);
    uint64_t v63 = *(void *)(v100 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v49 + v61[9]) = v62 == v63;
    if (v62 == v63)
    {
      if (v57)
      {
        uint64_t v110 = *(void (**)(void))(v10 + 16);
        uint64_t v64 = v57;
        uint64_t v65 = v120 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
        LODWORD(v109) = *MEMORY[0x263F87EE0];
        uint64_t v108 = (char *)(v10 + 104);
        __int16 v106 = (void (**)(char *, uint64_t))(v10 + 8);
        uint64_t v107 = (void (**)(char *, uint64_t))(v97 + 8);
        uint64_t v115 = (char *)(v10 + 16);
        uint64_t v104 = *(uint64_t (***)(char *, char *, uint64_t))(v10 + 72);
        swift_bridgeObjectRetain();
        uint64_t v66 = v113;
        uint64_t v67 = v107;
        while (1)
        {
          v110();
          (*(void (**)(char *, void, uint64_t))v108)(v118, v109, v9);
          sub_261A674EC(&qword_26A945478, MEMORY[0x263F87EE8]);
          uint64_t v68 = v112;
          sub_261B8F2A8();
          sub_261B8F2A8();
          sub_261A674EC(&qword_26A945480, MEMORY[0x263F87DA8]);
          uint64_t v69 = v114;
          char v70 = sub_261B8F0A8();
          uint64_t v71 = *v67;
          (*v67)(v66, v69);
          v71(v68, v69);
          uint64_t v72 = *v106;
          (*v106)(v118, v9);
          v72(v105, v9);
          if ((v70 & 1) == 0) {
            break;
          }
          v65 += (uint64_t)v104;
          if (!--v64)
          {
            char v73 = 1;
            goto LABEL_36;
          }
        }
        char v73 = 0;
LABEL_36:
        unint64_t v74 = v120;
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v83 = (char *)v102;
        uint64_t v84 = v103;
        *(unsigned char *)(v103 + v102[8]) = v73;
        *(unsigned char *)(v84 + *((int *)v83 + 10)) = (v70 & 1) == 0;
        double v59 = v111;
        uint64_t v60 = MEMORY[0x263F8EE78];
        goto LABEL_37;
      }
      *(unsigned char *)(v49 + v61[8]) = 1;
      goto LABEL_33;
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v49 + v61[9]) = 0;
  }
  *(unsigned char *)(v49 + v61[8]) = 0;
  if (v57)
  {
    *(unsigned char *)(v49 + v61[10]) = 1;
    unint64_t v74 = v120;
LABEL_37:
    char v85 = 0;
    uint64_t v121 = v60;
    uint64_t v114 = v10 + 16;
    LODWORD(v113) = *MEMORY[0x263F87EE0];
    uint64_t v112 = (char *)(v10 + 104);
    uint64_t v115 = (char *)(v10 + 32);
    while ((unint64_t)v85 < *(void *)(v74 + 16))
    {
      unint64_t v87 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v88 = *(void *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v59, v74 + v87 + v88 * (void)v85, v9);
      long long v89 = v118;
      (*(void (**)(char *, void, uint64_t))(v10 + 104))(v118, v113, v9);
      sub_261A674EC(&qword_26A945470, MEMORY[0x263F87EE8]);
      char v90 = sub_261B8F0A8();
      long long v91 = *(void (**)(char *, uint64_t))(v10 + 8);
      v91(v89, v9);
      if (v90)
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v91)(v59, v9);
        long long v86 = v119;
      }
      else
      {
        long long v92 = *(uint64_t (**)(unint64_t, char *, uint64_t))v115;
        (*(void (**)(char *, char *, uint64_t))v115)(v116, v59, v9);
        uint64_t v93 = v121;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        long long v86 = v119;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_261ACA2FC(0, *(void *)(v93 + 16) + 1, 1);
          uint64_t v93 = v121;
        }
        unint64_t v96 = *(void *)(v93 + 16);
        unint64_t v95 = *(void *)(v93 + 24);
        if (v96 >= v95 >> 1)
        {
          sub_261ACA2FC(v95 > 1, v96 + 1, 1);
          uint64_t v93 = v121;
        }
        *(void *)(v93 + 16) = v96 + 1;
        uint64_t result = v92(v93 + v87 + v96 * v88, v116, v9);
        uint64_t v121 = v93;
        uint64_t v10 = v117;
        double v59 = v111;
      }
      ++v85;
      unint64_t v74 = v120;
      if (v86 == v85) {
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_48:
    __break(1u);
    return result;
  }
LABEL_33:
  *(unsigned char *)(v49 + v61[10]) = 0;
  uint64_t v121 = v60;
LABEL_34:
  swift_bridgeObjectRelease();
  uint64_t v82 = *(void *)(v121 + 16);
  uint64_t result = swift_release();
  *(void *)(v103 + v102[11]) = v82;
  return result;
}

uint64_t sub_261A65D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t WorkoutEffort.effortDescription.getter()
{
  uint64_t v1 = sub_261B8BE88();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8C2D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for WorkoutEffort();
  if (*(unsigned char *)(v0 + v12[8]) == 1)
  {
    if (qword_26B416690 == -1) {
      goto LABEL_12;
    }
    goto LABEL_15;
  }
  uint64_t v13 = v12;
  if (*(unsigned char *)(v0 + 8) != 1)
  {
    sub_261A65018(v0 + v12[7], (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_261B8C278();
      uint64_t v19 = sub_261B8BE68();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return v19;
    }
    sub_2619F8754((uint64_t)v7, &qword_26A943910);
    uint64_t v14 = qword_26B416690;
LABEL_11:
    if (v14 == -1)
    {
LABEL_12:
      swift_beginAccess();
      id v20 = (id)qword_26B416688;
      uint64_t v19 = sub_261B8AA48();

      return v19;
    }
LABEL_15:
    swift_once();
    goto LABEL_12;
  }
  uint64_t v14 = qword_26B416690;
  if (*(unsigned char *)(v0 + v12[9]) != 1) {
    goto LABEL_11;
  }
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v15 = (id)qword_26B416688;
  sub_261B8AA48();

  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_261B93F70;
  uint64_t v17 = *(void *)(v0 + v13[11]);
  uint64_t v18 = MEMORY[0x263F8D750];
  *(void *)(v16 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v16 + 64) = v18;
  *(void *)(v16 + 32) = v17;
  uint64_t v19 = sub_261B8F0C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

BOOL WorkoutEffort.needsToAddEffort.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for WorkoutEffort() + 36)) & 1) == 0;
}

uint64_t WorkoutEffort.addEffortDescriptionShortened.getter()
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_26B416688;
  uint64_t v1 = sub_261B8AA48();

  return v1;
}

id WorkoutEffort.effortTextColor.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = sub_261B8C2D8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for WorkoutEffort();
  if (*(unsigned char *)(v0 + v11[8]) != 1 && *(unsigned char *)(v0 + v11[9]) == 1)
  {
    sub_261A65018(v0 + v11[7], (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      sub_261A66DDC();
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v10, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
      _s9WorkoutUI12EffortColorsV9textColor8exertion05SwiftB00F0V0A4Core18AppleExertionScaleOSg_tFZ_0((uint64_t)v4);
      sub_2619F8754((uint64_t)v4, &qword_26A943910);
      uint64_t v14 = sub_261B8F668();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return (id)v14;
    }
    sub_2619F8754((uint64_t)v6, &qword_26A943910);
  }
  id v12 = objc_msgSend(self, sel_systemGrayColor);
  return v12;
}

uint64_t WorkoutEffort.effortSymbolSystemName.getter()
{
  uint64_t v1 = sub_261B8BE88();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8C2D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (int *)type metadata accessor for WorkoutEffort();
  if (*(unsigned char *)(v0 + v12[8])) {
    return 0xD00000000000002ALL;
  }
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    if (*(unsigned char *)(v0 + v12[9])) {
      return 0;
    }
    else {
      return 0x7269632E73756C70;
    }
  }
  else
  {
    sub_261A65018(v0 + v12[7], (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      uint64_t v13 = 0x7269632E73756C70;
      sub_2619F8754((uint64_t)v7, &qword_26A943910);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      uint64_t v20 = 0;
      unint64_t v21 = 0xE000000000000000;
      sub_261B8C278();
      uint64_t v14 = sub_261B8BE78();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v19[1] = v14;
      uint64_t v15 = sub_261B8FB78();
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      uint64_t v20 = v15;
      unint64_t v21 = v17;
      sub_261B8F1C8();
      uint64_t v13 = v20;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return v13;
}

uint64_t WorkoutEffort.effortSymbolRenderingMode.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WorkoutEffort();
  if (*(unsigned char *)(v0 + *(int *)(v4 + 32)) == 1)
  {
    return sub_261B8DC18();
  }
  sub_261A65018(v0 + *(int *)(v4 + 28), (uint64_t)v3);
  uint64_t v5 = sub_261B8C2D8();
  int v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  sub_2619F8754((uint64_t)v3, &qword_26A943910);
  if (v6 == 1) {
    return sub_261B8DC18();
  }
  return sub_261B8DC28();
}

uint64_t WorkoutEffort.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_261B8C2D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  swift_bridgeObjectRetain();
  sub_261A66E1C(a1, v11);
  swift_bridgeObjectRelease();
  sub_261B8FCB8();
  uint64_t v12 = v2[2];
  uint64_t v13 = *(void *)(v12 + 16);
  sub_261B8FCA8();
  if (v13)
  {
    uint64_t v19 = v7;
    unint64_t v14 = v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v15 = *(void *)(v5 + 72);
    sub_261A674EC(&qword_26A945490, MEMORY[0x263F87EE8]);
    swift_bridgeObjectRetain();
    do
    {
      sub_261B8F028();
      v14 += v15;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    uint64_t v7 = v19;
  }
  uint64_t v16 = type metadata accessor for WorkoutEffort();
  sub_261A65018((uint64_t)v2 + *(int *)(v16 + 28), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_261B8FCB8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_261B8FCB8();
    sub_261A674EC(&qword_26A945490, MEMORY[0x263F87EE8]);
    sub_261B8F028();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_261B8FCB8();
  sub_261B8FCB8();
  sub_261B8FCB8();
  return sub_261B8FCA8();
}

uint64_t WorkoutEffort.hashValue.getter()
{
  sub_261B8FC98();
  WorkoutEffort.hash(into:)((uint64_t)v1);
  return sub_261B8FCE8();
}

uint64_t sub_261A66D58()
{
  sub_261B8FC98();
  WorkoutEffort.hash(into:)((uint64_t)v1);
  return sub_261B8FCE8();
}

uint64_t sub_261A66D9C()
{
  sub_261B8FC98();
  WorkoutEffort.hash(into:)((uint64_t)v1);
  return sub_261B8FCE8();
}

unint64_t sub_261A66DDC()
{
  unint64_t result = qword_26A945488;
  if (!qword_26A945488)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A945488);
  }
  return result;
}

uint64_t sub_261A66E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8C2D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a2 + 16);
  v19[1] = a1;
  uint64_t result = sub_261B8FCA8();
  if (v12)
  {
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = *(void *)(v9 + 72);
    uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    unint64_t v17 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v18 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
    do
    {
      sub_261A65018(v14, (uint64_t)v11);
      if ((*v16)(v11, 1, v4) == 1)
      {
        uint64_t result = sub_261B8FCB8();
      }
      else
      {
        (*v17)(v7, v11, v4);
        sub_261B8FCB8();
        sub_261A674EC(&qword_26A945490, MEMORY[0x263F87EE8]);
        sub_261B8F028();
        uint64_t result = (*v18)(v7, v4);
      }
      v14 += v15;
      --v12;
    }
    while (v12);
  }
  return result;
}

BOOL _s9WorkoutUI0A6EffortV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8C2D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9454B0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  unint64_t v17 = (char *)&v27 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v27 - v18;
  if ((sub_261B730D4(*(void *)a1, *(void *)a2) & 1) == 0
    || *(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8)
    || (sub_261B734E8(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v20 = type metadata accessor for WorkoutEffort();
  uint64_t v30 = v5;
  unint64_t v21 = (int *)v20;
  sub_261A65018(a1 + *(int *)(v20 + 28), (uint64_t)v19);
  uint64_t v28 = v21;
  sub_261A65018(a2 + v21[7], (uint64_t)v17);
  uint64_t v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_261A65018((uint64_t)v19, (uint64_t)v10);
  uint64_t v29 = v22;
  sub_261A65018((uint64_t)v17, v22);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (v23((uint64_t)v10, 1, v4) != 1)
  {
    sub_261A65018((uint64_t)v10, (uint64_t)v14);
    if (v23(v29, 1, v4) != 1)
    {
      uint64_t v24 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v7, v29, v4);
      sub_261A674EC(&qword_26A945470, MEMORY[0x263F87EE8]);
      LODWORD(v29) = sub_261B8F0A8();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v24 + 8);
      v25(v7, v4);
      sub_2619F8754((uint64_t)v17, &qword_26A943910);
      sub_2619F8754((uint64_t)v19, &qword_26A943910);
      v25(v14, v4);
      sub_2619F8754((uint64_t)v10, &qword_26A943910);
      if ((v29 & 1) == 0) {
        return 0;
      }
      goto LABEL_11;
    }
    sub_2619F8754((uint64_t)v17, &qword_26A943910);
    sub_2619F8754((uint64_t)v19, &qword_26A943910);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v4);
LABEL_9:
    sub_2619F8754((uint64_t)v10, &qword_26A9454B0);
    return 0;
  }
  sub_2619F8754((uint64_t)v17, &qword_26A943910);
  sub_2619F8754((uint64_t)v19, &qword_26A943910);
  if (v23(v29, 1, v4) != 1) {
    goto LABEL_9;
  }
  sub_2619F8754((uint64_t)v10, &qword_26A943910);
LABEL_11:
  if (*(unsigned __int8 *)(a1 + v28[8]) == *(unsigned __int8 *)(a2 + v28[8])
    && *(unsigned __int8 *)(a1 + v28[9]) == *(unsigned __int8 *)(a2 + v28[9])
    && *(unsigned __int8 *)(a1 + v28[10]) == *(unsigned __int8 *)(a2 + v28[10]))
  {
    return *(void *)(a1 + v28[11]) == *(void *)(a2 + v28[11]);
  }
  return 0;
}

uint64_t sub_261A674A4()
{
  return sub_261A674EC(&qword_26A945498, (void (*)(uint64_t))type metadata accessor for WorkoutEffort);
}

uint64_t sub_261A674EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for WorkoutEffort(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    uint64_t v8 = a3[7];
    __dst = (void *)(a1 + v8);
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_261B8C2D8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    uint64_t v14 = a3[9];
    *(unsigned char *)(v7 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(unsigned char *)(v7 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[11];
    *(unsigned char *)(v7 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *(void *)(v7 + v15) = *(uint64_t *)((char *)a2 + v15);
  }
  return v7;
}

uint64_t destroy for WorkoutEffort(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_261B8C2D8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for WorkoutEffort(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[7];
  __dst = (void *)(a1 + v6);
  uint64_t v7 = (const void *)(a2 + v6);
  uint64_t v8 = sub_261B8C2D8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    memcpy(__dst, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(__dst, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
  }
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t assignWithCopy for WorkoutEffort(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_261B8C2D8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for WorkoutEffort(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_261B8C2D8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for WorkoutEffort(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_261B8C2D8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutEffort(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A67E88);
}

uint64_t sub_261A67E88(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutEffort(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A67F50);
}

void *sub_261A67F50(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943910);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_261A67FFC()
{
  sub_261A11C7C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

id sub_261A68170()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaMomentsScrollView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MediaMomentsScrollView()
{
  return self;
}

void *sub_261A681C8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_261B8BE48();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *((unsigned char *)v4 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v13 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(void *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[11];
    *(void *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = *(unsigned char *)(v16 + 8);
    uint64_t v17 = a3[13];
    *(void *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(void *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v18 = a3[14];
    uint64_t v19 = (void *)((char *)v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_261B8D668();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      void *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[15];
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (uint64_t)a2 + v23;
    uint64_t v26 = *(void *)v25;
    char v27 = *(unsigned char *)(v25 + 8);
    sub_2619F7774(*(void *)v25, v27);
    *(void *)uint64_t v24 = v26;
    v24[8] = v27;
  }
  return v4;
}

uint64_t sub_261A683F0(uint64_t a1, int *a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_261B8BE48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_261B8D668();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[15];
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);
  return sub_2619F7790(v9, v10);
}

uint64_t sub_261A684EC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8BE48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v1sub_261A34804(3, 0, 0, 1) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  uint64_t v16 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[14];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_261B8D668();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    void *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a3[15];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  sub_2619F7774(*(void *)v23, v25);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = v25;
  return a1;
}

uint64_t *sub_261A686BC(uint64_t *a1, uint64_t *a2, int *a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8BE48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  uint64_t v10 = a3[11];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  if (a1 != a2)
  {
    uint64_t v14 = a3[14];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_2619F8754((uint64_t)a1 + v14, &qword_26A945120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_261B8D668();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v18 = a3[15];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = v20[8];
  sub_2619F7774(*(void *)v20, v22);
  uint64_t v23 = *(void *)v19;
  char v24 = v19[8];
  *(void *)uint64_t v19 = v21;
  v19[8] = v22;
  sub_2619F7790(v23, v24);
  return a1;
}

uint64_t sub_261A68890(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8BE48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v1sub_261A34804(3, 0, 0, 1) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  uint64_t v16 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[14];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_261B8D668();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  uint64_t v22 = a3[15];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  return a1;
}

uint64_t sub_261A68A40(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_261B8BE48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v1sub_261A34804(3, 0, 0, 1) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  uint64_t v16 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  if (a1 != a2)
  {
    uint64_t v17 = a3[14];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (const void *)(a2 + v17);
    sub_2619F8754(a1 + v17, &qword_26A945120);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_261B8D668();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  uint64_t v22 = a3[15];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  LOBYTE(v24) = *((unsigned char *)v24 + 8);
  uint64_t v26 = *(void *)v23;
  char v27 = *(unsigned char *)(v23 + 8);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = (_BYTE)v24;
  sub_2619F7790(v26, v27);
  return a1;
}

uint64_t sub_261A68C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A68C2C);
}

uint64_t sub_261A68C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_261B8BE48();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945128);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 56);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_261A68D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A68D70);
}

uint64_t sub_261A68D70(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_261B8BE48();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945128);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 56);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ZoneBarView()
{
  uint64_t result = qword_26A9454C8;
  if (!qword_26A9454C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_261A68EEC()
{
  sub_261B8BE48();
  if (v0 <= 0x3F)
  {
    sub_261A57190();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_261A68FF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A69010@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9454D8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ZoneBarView();
  double v7 = *(double *)(v1 + *(int *)(v6 + 36));
  sub_261A691F4(*(void *)(v1 + *(int *)(v6 + 24)));
  *(void *)uint64_t v5 = sub_261B8DBE8();
  *((void *)v5 + sub_261A34804(3, 0, 0, 1) = 0;
  v5[16] = 0;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9454E0);
  sub_261A69440(v1, (uint64_t)&v5[*(int *)(v8 + 44)]);
  sub_261B8EC98();
  if (v7 < -INFINITY)
  {
    sub_261B8F4C8();
    uint64_t v9 = (void *)sub_261B8DF58();
    sub_261B8CE58();
  }
  sub_261B8D778();
  sub_2619F86F0((uint64_t)v5, a1, &qword_26A9454D8);
  uint64_t v10 = (_OWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A9454E8) + 36));
  long long v11 = v15[5];
  v10[4] = v15[4];
  v10[5] = v11;
  v10[6] = v15[6];
  long long v12 = v15[1];
  *uint64_t v10 = v15[0];
  v10[1] = v12;
  long long v13 = v15[3];
  _OWORD v10[2] = v15[2];
  v10[3] = v13;
  return sub_2619F8754((uint64_t)v5, &qword_26A9454D8);
}

uint64_t sub_261A691F4(unint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v4 = (char *)v1 + *(int *)(type metadata accessor for ZoneBarView() + 60);
  uint64_t v5 = *(void *)v4;
  char v6 = v4[8];
  sub_2619F7774(*(void *)v4, v6);
  sub_2619FA43C(v5, v6, &v12);
  uint64_t result = sub_2619F7790(v5, v6);
  if (v12 != 7 && v12 != 0)
  {
    if (qword_26A942CE8 != -1) {
      swift_once();
    }
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    sub_261B8C248();
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945190);
    uint64_t v9 = sub_261B8F998();
    uint64_t result = swift_bridgeObjectRelease();
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(v9 + 16) > a1)
    {
      sub_261A40D48(v9 + 40 * a1 + 32, (uint64_t)v11);
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(v2, v2[3]);
      sub_261B8C238();
      if ((v10 & 1) == 0)
      {
        __swift_project_boxed_opaque_existential_1(v11, v11[3]);
        sub_261B8BF58();
      }
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    }
    __break(1u);
    return result;
  }
  if (qword_26A942CE8 != -1) {
    return swift_once();
  }
  return result;
}

uint64_t sub_261A69440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9454F0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  double v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  char v10 = (uint64_t *)&v21[-v9];
  MEMORY[0x270FA5388](v8);
  char v12 = &v21[-v11];
  uint64_t v13 = a1 + *(int *)(type metadata accessor for ZoneBarView() + 60);
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_2619F7774(*(void *)v13, v15);
  sub_2619FA43C(v14, v15, &v22);
  sub_2619F7790(v14, v15);
  if (v22 <= 8u && ((1 << v22) & 0x181) != 0) {
    uint64_t v16 = sub_261B8EC98();
  }
  else {
    uint64_t v16 = sub_261B8EC88();
  }
  *char v10 = v16;
  v10[1] = v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9454F8);
  sub_261A69610(a1, (uint64_t)v10 + *(int *)(v18 + 44));
  sub_2619FB7EC((uint64_t)v10, (uint64_t)v12, &qword_26A9454F0);
  sub_2619F86F0((uint64_t)v12, (uint64_t)v7, &qword_26A9454F0);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 0;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945500);
  sub_2619F86F0((uint64_t)v7, a2 + *(int *)(v19 + 48), &qword_26A9454F0);
  sub_2619F8754((uint64_t)v12, &qword_26A9454F0);
  return sub_2619F8754((uint64_t)v7, &qword_26A9454F0);
}

uint64_t sub_261A69610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v159 = a1;
  uint64_t v163 = a2;
  uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945508);
  uint64_t v148 = *(void *)(v149 - 8);
  MEMORY[0x270FA5388](v149);
  uint64_t v147 = (char *)&v132 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945510);
  uint64_t v154 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  long long v153 = (char *)&v132 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945518);
  MEMORY[0x270FA5388](v150);
  long long v152 = (char *)&v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945520);
  uint64_t v5 = MEMORY[0x270FA5388](v151);
  uint64_t v157 = (uint64_t)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v156 = (uint64_t)&v132 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446E0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v144 = (char *)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v137 = (char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945528);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v133 = (uint64_t *)((char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945530);
  MEMORY[0x270FA5388](v132);
  uint64_t v135 = (uint64_t)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945538);
  MEMORY[0x270FA5388](v134);
  uint64_t v139 = (uint64_t)&v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945540);
  MEMORY[0x270FA5388](v136);
  uint64_t v140 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945548);
  MEMORY[0x270FA5388](v138);
  uint64_t v143 = (uint64_t)&v132 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945550);
  uint64_t v18 = MEMORY[0x270FA5388](v142);
  uint64_t v146 = (uint64_t)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v141 = (uint64_t)&v132 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v145 = (char *)&v132 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945558);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v162 = (uint64_t)&v132 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v161 = (uint64_t)&v132 - v26;
  uint64_t v27 = sub_261B8D748();
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (uint64_t *)((char *)&v132 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944860);
  MEMORY[0x270FA5388](v30);
  double v32 = (char *)&v132 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945560);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v132 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945568);
  uint64_t v36 = MEMORY[0x270FA5388](v158);
  uint64_t v160 = (uint64_t)&v132 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v40 = (char *)&v132 - v39;
  MEMORY[0x270FA5388](v38);
  unint64_t v42 = (char *)&v132 - v41;
  if (qword_26A942CE0 != -1) {
    swift_once();
  }
  uint64_t v43 = qword_26A9535E8;
  unint64_t v44 = (char *)v29 + *(int *)(v27 + 20);
  uint64_t v45 = *MEMORY[0x263F19860];
  uint64_t v46 = sub_261B8DBB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104))(v44, v45, v46);
  uint64_t *v29 = v43;
  v29[1] = v43;
  unint64_t v47 = (int *)type metadata accessor for ZoneBarView();
  uint64_t v48 = v159;
  uint64_t v49 = sub_261B8C6D8();
  sub_261A1396C((uint64_t)v29, (uint64_t)v32);
  *(void *)&v32[*(int *)(v30 + 52)] = v49;
  *(_WORD *)&v32[*(int *)(v30 + 56)] = 256;
  sub_261A139D0((uint64_t)v29);
  uint64_t v50 = v47[7];
  if (*(unsigned char *)(v48 + v50)) {
    double v51 = 1.0;
  }
  else {
    double v51 = 0.37;
  }
  sub_2619F86F0((uint64_t)v32, (uint64_t)v35, &qword_26A944860);
  *(double *)&v35[*(int *)(v33 + 36)] = v51;
  sub_2619F8754((uint64_t)v32, &qword_26A944860);
  sub_261B8EC98();
  sub_261B8D4D8();
  sub_2619F86F0((uint64_t)v35, (uint64_t)v40, &qword_26A945560);
  uint64_t v52 = &v40[*(int *)(v158 + 36)];
  long long v53 = v168;
  *(_OWORD *)uint64_t v52 = v167;
  *((_OWORD *)v52 + sub_261A34804(3, 0, 0, 1) = v53;
  *((_OWORD *)v52 + 2) = v169;
  sub_2619F8754((uint64_t)v35, &qword_26A945560);
  sub_2619FB7EC((uint64_t)v40, (uint64_t)v42, &qword_26A945568);
  int v54 = *(unsigned __int8 *)(v48 + v50);
  uint64_t v55 = (uint64_t)v42;
  if (v54 == 1)
  {
    uint64_t v56 = sub_261B8DAD8();
    uint64_t v57 = (uint64_t)v133;
    *uint64_t v133 = v56;
    *(void *)(v57 + 8) = 0x4010000000000000;
    *(unsigned char *)(v57 + 16) = 0;
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945580);
    sub_261A6A7F8(v48, v57 + *(int *)(v58 + 44));
    uint64_t v59 = sub_261B8E878();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v61 = v135;
    sub_2619F86F0(v57, v135, &qword_26A945528);
    uint64_t v62 = (uint64_t *)(v61 + *(int *)(v132 + 36));
    *uint64_t v62 = KeyPath;
    v62[1] = v59;
    sub_2619F8754(v57, &qword_26A945528);
    if (qword_26A942CF0 != -1) {
      swift_once();
    }
    sub_261B8E128();
    uint64_t v63 = *MEMORY[0x263F1A610];
    uint64_t v64 = sub_261B8E118();
    uint64_t v65 = *(void *)(v64 - 8);
    uint64_t v66 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 104))(v137, v63, v64);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v66, 0, 1, v64);
    uint64_t v67 = sub_261B8E188();
    sub_2619F8754(v66, &qword_26A943488);
    uint64_t v68 = swift_getKeyPath();
    uint64_t v69 = v139;
    sub_2619F86F0(v61, v139, &qword_26A945530);
    char v70 = (uint64_t *)(v69 + *(int *)(v134 + 36));
    *char v70 = v68;
    v70[1] = v67;
    sub_2619F8754(v61, &qword_26A945530);
    uint64_t v71 = *MEMORY[0x263F1A7B8];
    uint64_t v72 = sub_261B8E348();
    uint64_t v73 = *(void *)(v72 - 8);
    uint64_t v74 = (uint64_t)v144;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 104))(v144, v71, v72);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v74, 0, 1, v72);
    uint64_t v75 = swift_getKeyPath();
    uint64_t v76 = (uint64_t)v140;
    uint64_t v77 = (uint64_t *)&v140[*(int *)(v136 + 36)];
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446D8);
    sub_2619F86F0(v74, (uint64_t)v77 + *(int *)(v78 + 28), &qword_26A9446E0);
    *uint64_t v77 = v75;
    sub_2619F86F0(v69, v76, &qword_26A945538);
    sub_2619F8754(v74, &qword_26A9446E0);
    sub_2619F8754(v69, &qword_26A945538);
    LOBYTE(v75) = sub_261B8DF98();
    sub_261B8D358();
    uint64_t v80 = v79;
    uint64_t v82 = v81;
    uint64_t v84 = v83;
    uint64_t v86 = v85;
    uint64_t v87 = v143;
    sub_2619F86F0(v76, v143, &qword_26A945540);
    uint64_t v88 = v87 + *(int *)(v138 + 36);
    *(unsigned char *)uint64_t v88 = v75;
    *(void *)(v88 + 8) = v80;
    *(void *)(v88 + 16) = v82;
    *(void *)(v88 + 24) = v84;
    *(void *)(v88 + 32) = v86;
    *(unsigned char *)(v88 + 4sub_261A34804(0, 1, 2, 0) = 0;
    sub_2619F8754(v76, &qword_26A945540);
    LOBYTE(v72) = sub_261B8DFC8();
    char v89 = sub_261B8DFE8();
    sub_261B8DFE8();
    unsigned __int8 v90 = sub_261B8DFE8();
    uint64_t v91 = (uint64_t)v145;
    if (v90 != v72) {
      char v89 = sub_261B8DFE8();
    }
    sub_261B8D358();
    uint64_t v93 = v92;
    uint64_t v95 = v94;
    uint64_t v97 = v96;
    uint64_t v99 = v98;
    uint64_t v100 = v141;
    sub_2619F86F0(v87, v141, &qword_26A945548);
    uint64_t v101 = v100 + *(int *)(v142 + 36);
    *(unsigned char *)uint64_t v101 = v89;
    *(void *)(v101 + 8) = v93;
    *(void *)(v101 + 16) = v95;
    *(void *)(v101 + 24) = v97;
    *(void *)(v101 + 32) = v99;
    *(unsigned char *)(v101 + 4sub_261A34804(0, 1, 2, 0) = 0;
    sub_2619F8754(v87, &qword_26A945548);
    sub_2619FB7EC(v100, v91, &qword_26A945550);
    uint64_t v102 = v48 + v47[15];
    uint64_t v103 = *(void *)v102;
    char v104 = *(unsigned char *)(v102 + 8);
    sub_2619F7774(*(void *)v102, v104);
    sub_2619FA43C(v103, v104, &v165);
    sub_2619F7790(v103, v104);
    uint64_t v105 = v153;
    if (v165 <= 8u && ((1 << v165) & 0x181) != 0)
    {
      if (qword_26A942CE8 != -1) {
        swift_once();
      }
      double v106 = *(double *)&qword_26A9535F0;
      if (qword_26A942D00 != -1) {
        swift_once();
      }
      double v107 = v106 - *(double *)&qword_26A953608 + 2.5;
    }
    else
    {
      double v111 = *(double *)(v48 + v47[9]);
      if (qword_26A942D00 != -1) {
        swift_once();
      }
      double v107 = v111 + *(double *)&qword_26A953608 / -3.0;
    }
    uint64_t v112 = v48 + v47[11];
    uint64_t v113 = *(void *)v112;
    char v166 = *(unsigned char *)(v112 + 8);
    uint64_t v164 = 0x3FF0000000000000;
    uint64_t v165 = v113;
    sub_261A63D24();
    uint64_t v114 = v147;
    sub_261B8D428();
    sub_2619F8AB8(&qword_26A945588, &qword_26A945508);
    sub_261A6B474();
    uint64_t v115 = v149;
    sub_261B8E4C8();
    (*(void (**)(char *, uint64_t))(v148 + 8))(v114, v115);
    sub_261B8E878();
    uint64_t v116 = sub_261B8E8A8();
    swift_release();
    if (qword_26A942D08 != -1) {
      swift_once();
    }
    uint64_t v117 = qword_26A953610;
    uint64_t v118 = v154;
    uint64_t v119 = (uint64_t)v152;
    uint64_t v120 = v155;
    (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v152, v105, v155);
    uint64_t v121 = (uint64_t *)(v119 + *(int *)(v150 + 36));
    *uint64_t v121 = v116;
    v121[1] = v117;
    v121[2] = 0;
    v121[3] = 0;
    (*(void (**)(char *, uint64_t))(v118 + 8))(v105, v120);
    uint64_t v122 = v157;
    sub_2619F86F0(v119, v157, &qword_26A945518);
    uint64_t v123 = v122 + *(int *)(v151 + 36);
    *(void *)uint64_t v123 = 0;
    *(double *)(v123 + 8) = v107;
    sub_2619F8754(v119, &qword_26A945518);
    uint64_t v124 = v156;
    sub_2619FB7EC(v122, v156, &qword_26A945520);
    uint64_t v125 = v146;
    sub_2619F86F0(v91, v146, &qword_26A945550);
    sub_2619F86F0(v124, v122, &qword_26A945520);
    uint64_t v110 = v162;
    sub_2619F86F0(v125, v162, &qword_26A945550);
    uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945598);
    sub_2619F86F0(v122, v110 + *(int *)(v126 + 48), &qword_26A945520);
    sub_2619F8754(v124, &qword_26A945520);
    sub_2619F8754(v91, &qword_26A945550);
    sub_2619F8754(v122, &qword_26A945520);
    sub_2619F8754(v125, &qword_26A945550);
    uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945570);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56))(v110, 0, 1, v127);
    uint64_t v109 = v161;
    sub_2619FB7EC(v110, v161, &qword_26A945558);
  }
  else
  {
    uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945570);
    uint64_t v109 = v161;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v161, 1, 1, v108);
    uint64_t v110 = v162;
  }
  uint64_t v128 = v160;
  sub_2619F86F0(v55, v160, &qword_26A945568);
  sub_2619F86F0(v109, v110, &qword_26A945558);
  uint64_t v129 = v163;
  sub_2619F86F0(v128, v163, &qword_26A945568);
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945578);
  sub_2619F86F0(v110, v129 + *(int *)(v130 + 48), &qword_26A945558);
  sub_2619F8754(v109, &qword_26A945558);
  sub_2619F8754(v55, &qword_26A945568);
  sub_2619F8754(v110, &qword_26A945558);
  return sub_2619F8754(v128, &qword_26A945568);
}

uint64_t sub_261A6A7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9455A0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v65 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_261B8E978();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E38);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9455A8);
  uint64_t v17 = MEMORY[0x270FA5388](v63);
  uint64_t v60 = (uint64_t)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v62 = (uint64_t)&v59 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v64 = (uint64_t)&v59 - v21;
  uint64_t v22 = sub_261A6AE3C();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F1B538], v9);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v8 + *(int *)(v6 + 36), v12, v9);
  *uint64_t v8 = KeyPath;
  uint64_t v24 = *(int *)(v14 + 44);
  uint64_t v25 = a1;
  sub_2619F86F0((uint64_t)v8, (uint64_t)v16 + v24, &qword_26A944E30);
  uint64_t *v16 = v22;
  swift_retain();
  sub_2619F8754((uint64_t)v8, &qword_26A944E30);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  LOBYTE(v12) = sub_261B8DFB8();
  uint64_t v26 = type metadata accessor for ZoneBarView();
  uint64_t v27 = a1 + *(int *)(v26 + 60);
  uint64_t v28 = *(void *)v27;
  LOBYTE(KeyPath) = *(unsigned char *)(v27 + 8);
  sub_2619F7774(*(void *)v27, KeyPath);
  sub_2619FA43C(v28, KeyPath, v68);
  sub_2619F7790(v28, KeyPath);
  sub_261B8D358();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = v62;
  sub_2619F86F0((uint64_t)v16, v62, &qword_26A944E38);
  uint64_t v38 = v37 + *(int *)(v63 + 36);
  *(unsigned char *)uint64_t v38 = (_BYTE)v12;
  *(void *)(v38 + 8) = v30;
  *(void *)(v38 + 16) = v32;
  *(void *)(v38 + 24) = v34;
  *(void *)(v38 + 32) = v36;
  *(unsigned char *)(v38 + 4sub_261A34804(0, 1, 2, 0) = 0;
  sub_2619F8754((uint64_t)v16, &qword_26A944E38);
  uint64_t v39 = v64;
  sub_2619FB7EC(v37, v64, &qword_26A9455A8);
  uint64_t v40 = *(void *)(v25 + *(int *)(v26 + 24));
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v41 = (id)qword_26B416688;
  sub_261B8AA48();

  uint64_t v42 = (uint64_t)v65;
  sub_261B8AEB8();
  uint64_t v43 = sub_261B8AEF8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_261B93F70;
  if (__OFADD__(v40, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v45 = MEMORY[0x263F8D750];
    *(void *)(result + 56) = MEMORY[0x263F8D6C8];
    *(void *)(result + 64) = v45;
    *(void *)(result + 32) = v40 + 1;
    uint64_t v46 = sub_261B8F108();
    uint64_t v48 = v47;
    swift_bridgeObjectRelease();
    sub_2619F8754(v42, &qword_26A9455A0);
    uint64_t v66 = v46;
    uint64_t v67 = v48;
    sub_261A029C4();
    uint64_t v49 = sub_261B8E3D8();
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    char v55 = v54 & 1;
    uint64_t v56 = v60;
    sub_2619F86F0(v39, v60, &qword_26A9455A8);
    uint64_t v57 = v61;
    sub_2619F86F0(v56, v61, &qword_26A9455A8);
    uint64_t v58 = v57 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A9455B0) + 48);
    *(void *)uint64_t v58 = v49;
    *(void *)(v58 + 8) = v51;
    *(unsigned char *)(v58 + 16) = v55;
    *(void *)(v58 + 24) = v53;
    sub_261A001D0(v49, v51, v55);
    swift_bridgeObjectRetain();
    sub_2619F8754(v39, &qword_26A9455A8);
    sub_261A02A18(v49, v51, v55);
    swift_bridgeObjectRelease();
    return sub_2619F8754(v56, &qword_26A9455A8);
  }
  return result;
}

uint64_t sub_261A6AE3C()
{
  uint64_t v1 = sub_261B8CE88();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8BE48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ZoneBarView();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0 + *(int *)(v9 + 20), v5);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v10 == *MEMORY[0x263F87DA0] || v10 == *MEMORY[0x263F87D98]) {
    return sub_261B8E918();
  }
  sub_261B8C648();
  uint64_t v12 = sub_261B8CE78();
  os_log_type_t v13 = sub_261B8F4B8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_2619F0000, v12, v13, "Asked to display a zone image for an unknown zone type. Returning heart.", v14, 2u);
    MEMORY[0x263E4E970](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v11 = sub_261B8E918();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

double sub_261A6B0EC()
{
  if (qword_26A942CF8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26A953600;
  if (qword_26A942D00 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_26A953608;
  qword_26A9454B8 = v0;
  qword_26A9454C0 = qword_26A953608;
  return result;
}

double sub_261A6B184@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = sub_261B8E898();
  if (qword_26A942D18 != -1) {
    swift_once();
  }
  double v5 = *(double *)&qword_26A9454B8;
  sub_261B8EC98();
  sub_261B8D4D8();
  sub_261B8D528();
  *(void *)a1 = v4;
  *(_WORD *)(a1 + 8) = 256;
  *(void *)(a1 + 16) = v8;
  double result = v6 * a2 + v5 * -0.5;
  *(unsigned char *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v11;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(double *)(a1 + 64) = result;
  *(void *)(a1 + 72) = 0;
  return result;
}

double sub_261A6B29C@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_261A6B750((uint64_t)v8, a2, a3, a4, a5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_261A6B2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_261A6BA2C();
  return MEMORY[0x270F04808](a1, a2, a3, v6);
}

uint64_t sub_261A6B344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_261A6BA2C();
  return MEMORY[0x270F047D0](a1, a2, a3, v6);
}

uint64_t sub_261A6B3A8(uint64_t a1)
{
  unint64_t v2 = sub_261A6BA2C();
  return MEMORY[0x270F047E0](a1, v2);
}

uint64_t sub_261A6B3F4@<X0>(double (**a1)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v2 = sub_261B8DF28();
  if (v3)
  {
    unint64_t v6 = 0;
    uint64_t result = 0;
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    unint64_t v6 = sub_261A6B5B0;
  }
  *a1 = v6;
  a1[1] = (double (*)@<D0>(uint64_t@<X8>))result;
  return result;
}

unint64_t sub_261A6B474()
{
  unint64_t result = qword_26A945590;
  if (!qword_26A945590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945590);
  }
  return result;
}

ValueMetadata *type metadata accessor for ChevronProgressViewStyle()
{
  return &type metadata for ChevronProgressViewStyle;
}

unint64_t sub_261A6B4E4()
{
  unint64_t result = qword_26A9455B8;
  if (!qword_26A9455B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9454E8);
    sub_2619F8AB8(&qword_26A9455C0, &qword_26A9454D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9455B8);
  }
  return result;
}

uint64_t sub_261A6B584()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A6B5A0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

double sub_261A6B5B0@<D0>(uint64_t a1@<X8>)
{
  return sub_261A6B184(a1, *(double *)(v1 + 16));
}

ValueMetadata *type metadata accessor for ChevronProgressViewStyle.Chevron()
{
  return &type metadata for ChevronProgressViewStyle.Chevron;
}

unint64_t sub_261A6B5CC()
{
  unint64_t result = qword_26A9455C8;
  if (!qword_26A9455C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9455D0);
    sub_2619F8AB8(&qword_26A9455D8, &qword_26A9455E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9455C8);
  }
  return result;
}

uint64_t sub_261A6B664()
{
  return sub_2619F8AB8(&qword_26A9455E8, &qword_26A9455F0);
}

unint64_t sub_261A6B6A4()
{
  unint64_t result = qword_26A9455F8;
  if (!qword_26A9455F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9455F8);
  }
  return result;
}

unint64_t sub_261A6B6FC()
{
  unint64_t result = qword_26A945600;
  if (!qword_26A945600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945600);
  }
  return result;
}

double sub_261A6B750@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  CGMutablePathRef Mutable = CGPathCreateMutable();
  v19.origin.double x = a2;
  v19.origin.double y = a3;
  v19.size.double width = a4;
  v19.size.double height = a5;
  CGFloat Height = CGRectGetHeight(v19);
  CGFloat v12 = Height + Height;
  v20.origin.double x = a2;
  v20.origin.double y = a3;
  v20.size.double width = a4;
  v20.size.double height = a5;
  CGFloat Width = CGRectGetWidth(v20);
  double v14 = atan(v12 / Width);
  __sincos_stret(v14 * 0.5);
  v21.origin.double x = a2;
  v21.origin.double y = a3;
  v21.size.double width = a4;
  v21.size.double height = a5;
  CGRectGetMidX(v21);
  v22.origin.double x = a2;
  v22.origin.double y = a3;
  v22.size.double width = a4;
  v22.size.double height = a5;
  CGRectGetMaxY(v22);
  v23.origin.double x = a2;
  v23.origin.double y = a3;
  v23.size.double width = a4;
  v23.size.double height = a5;
  CGRectGetMidX(v23);
  v24.origin.double x = a2;
  v24.origin.double y = a3;
  v24.size.double width = a4;
  v24.size.double height = a5;
  CGRectGetMinY(v24);
  v25.origin.double x = a2;
  v25.origin.double y = a3;
  v25.size.double width = a4;
  v25.size.double height = a5;
  CGRectGetMaxX(v25);
  v26.origin.double x = a2;
  v26.origin.double y = a3;
  v26.size.double width = a4;
  v26.size.double height = a5;
  CGRectGetMaxY(v26);
  v27.origin.double x = a2;
  v27.origin.double y = a3;
  v27.size.double width = a4;
  v27.size.double height = a5;
  CGRectGetMaxX(v27);
  __sincos_stret(v14);
  v28.origin.double x = a2;
  v28.origin.double y = a3;
  v28.size.double width = a4;
  v28.size.double height = a5;
  CGRectGetMaxY(v28);
  v29.origin.double x = a2;
  v29.origin.double y = a3;
  v29.size.double width = a4;
  v29.size.double height = a5;
  CGRectGetMinX(v29);
  v30.origin.double x = a2;
  v30.origin.double y = a3;
  v30.size.double width = a4;
  v30.size.double height = a5;
  CGRectGetMaxX(v30);
  sub_261B8F4F8();
  sub_261B8F518();
  v31.origin.double x = a2;
  v31.origin.double y = a3;
  v31.size.double width = a4;
  v31.size.double height = a5;
  CGRectGetMaxX(v31);
  v32.origin.double x = a2;
  v32.origin.double y = a3;
  v32.size.double width = a4;
  v32.size.double height = a5;
  CGRectGetMaxY(v32);
  sub_261B8F508();
  sub_261B8F518();
  sub_261B8F518();
  v33.origin.double x = a2;
  v33.origin.double y = a3;
  v33.size.double width = a4;
  v33.size.double height = a5;
  CGRectGetMinX(v33);
  v34.origin.double x = a2;
  v34.origin.double y = a3;
  v34.size.double width = a4;
  v34.size.double height = a5;
  CGRectGetMaxY(v34);
  sub_261B8F508();
  CGPathCloseSubpath(Mutable);
  sub_261B8E2D8();
  double result = *(double *)&v16;
  *(_OWORD *)a1 = v16;
  *(_OWORD *)(a1 + 16) = v17;
  *(unsigned char *)(a1 + 32) = v18;
  return result;
}

unint64_t sub_261A6BA2C()
{
  unint64_t result = qword_26A945608;
  if (!qword_26A945608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945608);
  }
  return result;
}

uint64_t HeartRateMetricView.init(heartRate:heartRateValueType:isStale:workoutPaused:lowPowerModeAnimationSuspended:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  double v14 = (int *)type metadata accessor for HeartRateMetricView();
  uint64_t v15 = a7 + v14[9];
  *(void *)uint64_t v15 = swift_getKeyPath();
  *(unsigned char *)(v15 + 8) = 0;
  uint64_t v16 = a7 + v14[10];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(unsigned char *)(v16 + 8) = 0;
  uint64_t v17 = a7 + v14[11];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *(unsigned char *)(v17 + 8) = 0;
  *(void *)(a7 + v14[12]) = 0x3FD6666666666666;
  char v18 = (void *)(a7 + v14[13]);
  void *v18 = 0;
  v18[1] = 0;
  *(void *)a7 = a1;
  *(unsigned char *)(a7 + 8) = a2 & 1;
  uint64_t v19 = a7 + v14[5];
  uint64_t v20 = sub_261B8C488();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a3, v20);
  *(unsigned char *)(a7 + v14[6]) = a4;
  *(unsigned char *)(a7 + v14[7]) = a5;
  *(unsigned char *)(a7 + v14[8]) = a6;
  return result;
}

uint64_t type metadata accessor for HeartRateMetricView()
{
  uint64_t result = qword_26A945618;
  if (!qword_26A945618) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A6BC08()
{
  uint64_t v1 = (int *)type metadata accessor for HeartRateMetricView();
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  long long v7 = &v22[-v6];
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = &v22[-v9];
  uint64_t v11 = v0 + *(int *)(v8 + 36);
  uint64_t v12 = *(void *)v11;
  char v13 = *(unsigned char *)(v11 + 8);
  sub_2619F7774(*(void *)v11, v13);
  char v14 = sub_2619FABD0(v12, v13);
  sub_2619F7790(v12, v13);
  sub_261A6CE44(v0, (uint64_t)v10);
  if (v14)
  {
    sub_261A6CEA8((uint64_t)v10);
    sub_261A6CE44(v0, (uint64_t)v7);
LABEL_4:
    sub_261A6CEA8((uint64_t)v7);
    sub_261A6CE44(v0, (uint64_t)v4);
    goto LABEL_5;
  }
  char v15 = v10[v1[7]];
  sub_261A6CEA8((uint64_t)v10);
  sub_261A6CE44(v0, (uint64_t)v7);
  if (v15) {
    goto LABEL_4;
  }
  char v18 = &v7[v1[11]];
  uint64_t v19 = *(void *)v18;
  char v20 = v18[8];
  sub_2619F7774(*(void *)v18, v20);
  sub_2619FADD4(v19, v20, &v23);
  sub_2619F7790(v19, v20);
  sub_261A6CEA8((uint64_t)v7);
  char v21 = v23;
  sub_261A6CE44(v0, (uint64_t)v4);
  if ((v21 & 1) == 0)
  {
    uint64_t v16 = v4[v1[8]];
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v16 = 1;
LABEL_6:
  sub_261A6CEA8((uint64_t)v4);
  return v16;
}

uint64_t sub_261A6BDD4()
{
  uint64_t v1 = sub_261B8ABA8();
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  MEMORY[0x270FA5388](v1);
  CGRect v24 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_261B8FB88();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8AEF8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453F8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  char v15 = (char *)&v23 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v23 - v16;
  if (v0[1])
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v18 = (id)qword_26B416688;
    uint64_t v19 = sub_261B8AA48();
  }
  else
  {
    uint64_t v27 = *v0;
    sub_261B8AE68();
    sub_261A63D24();
    sub_261B8AAE8();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8E220], v3);
    MEMORY[0x263E489F0](v6, 0, 1, v8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    char v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v12, v8);
    char v21 = v24;
    sub_261B8AB98();
    MEMORY[0x263E48A00](v21, v8);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v26);
    v20(v15, v8);
    sub_2619F8AB8((unint64_t *)&qword_26A945408, &qword_26A9453F8);
    sub_261B8EFD8();
    v20(v17, v8);
    return v28;
  }
  return v19;
}

uint64_t sub_261A6C22C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8C488();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for HeartRateMetricView();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F87F40], v2);
  sub_261A6D978();
  sub_261B8F2A8();
  sub_261B8F2A8();
  uint64_t v7 = v15[0];
  uint64_t v8 = v15[3];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v7 == v8)
  {
    if (qword_26B416690 == -1) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  uint64_t v9 = v1 + *(int *)(v6 + 40);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_2619F7774(*(void *)v9, v11);
  sub_2619FA43C(v10, v11, v15);
  sub_2619F7790(v10, v11);
  if (LOBYTE(v15[0]) != 5) {
    return 0;
  }
  if (qword_26B416690 != -1) {
LABEL_9:
  }
    swift_once();
LABEL_6:
  swift_beginAccess();
  id v12 = (id)qword_26B416688;
  uint64_t v13 = sub_261B8AA48();

  return v13;
}

uint64_t sub_261A6C504()
{
  if (*(unsigned char *)(v0 + 8))
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v1 = (id)qword_26B416688;
    uint64_t v2 = sub_261B8AA48();
  }
  else
  {
    uint64_t v3 = sub_261A6C22C();
    if (v4)
    {
      sub_261A029C4();
      uint64_t v3 = sub_261B8F788();
      uint64_t v6 = v5;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945650);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_261B94B90;
    uint64_t v8 = sub_261A6BDD4();
    uint64_t v10 = v9;
    *(void *)(inited + 32) = v8;
    *(void *)(inited + 4sub_261A34804(0, 1, 2, 0) = v9;
    char v11 = (uint64_t *)(v0 + *(int *)(type metadata accessor for HeartRateMetricView() + 52));
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *(void *)(inited + 48) = *v11;
    *(void *)(inited + 56) = v12;
    *(void *)(inited + 64) = v3;
    *(void *)(inited + 72) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_261A0B1E4(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v16 = v14[2];
    unint64_t v15 = v14[3];
    unint64_t v17 = v16 + 1;
    if (v16 >= v15 >> 1) {
      uint64_t v14 = sub_261A0B1E4((void *)(v15 > 1), v16 + 1, 1, v14);
    }
    void v14[2] = v17;
    id v18 = &v14[2 * v16];
    v18[4] = v8;
    v18[5] = v10;
    if (v12)
    {
      unint64_t v19 = v14[3];
      swift_bridgeObjectRetain();
      if (v17 >= v19 >> 1) {
        uint64_t v14 = sub_261A0B1E4((void *)(v19 > 1), v16 + 2, 1, v14);
      }
      void v14[2] = v16 + 2;
      char v20 = &v14[2 * v17];
      v20[4] = v13;
      v20[5] = v12;
    }
    if (v6)
    {
      unint64_t v21 = v14[2];
      unint64_t v22 = v14[3];
      swift_bridgeObjectRetain();
      if (v21 >= v22 >> 1) {
        uint64_t v14 = sub_261A0B1E4((void *)(v22 > 1), v21 + 1, 1, v14);
      }
      void v14[2] = v21 + 1;
      uint64_t v23 = &v14[2 * v21];
      v23[4] = v3;
      v23[5] = v6;
    }
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943578);
    sub_2619F8AB8((unint64_t *)&qword_26A943580, &qword_26A943578);
    uint64_t v2 = sub_261B8F048();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t HeartRateMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v2 = type metadata accessor for HeartRateMetricView();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A945610);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = sub_261A6BDD4();
  uint64_t v28 = v12;
  uint64_t v29 = v11;
  uint64_t v13 = (uint64_t *)(v1 + *(int *)(v2 + 52));
  uint64_t v14 = v13[1];
  uint64_t v27 = *v13;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_261A6C22C();
  uint64_t v16 = v15;
  char v17 = *(unsigned char *)(v1 + 8);
  sub_261A6CE44(v1, (uint64_t)v4);
  if (v17) {
    char v18 = 0;
  }
  else {
    char v18 = v4[*(int *)(v2 + 24)];
  }
  sub_261A6CEA8((uint64_t)v4);
  uint64_t v19 = sub_261A6C504();
  uint64_t v21 = v20;
  unint64_t v22 = &v8[v5[11]];
  *(void *)unint64_t v22 = swift_getKeyPath();
  v22[8] = 0;
  *(void *)&v8[v5[12]] = 0x3FD6666666666666;
  uint64_t v23 = v28;
  *(void *)uint64_t v8 = v29;
  *((void *)v8 + sub_261A34804(3, 0, 0, 1) = v23;
  *((void *)v8 + 2) = v27;
  *((void *)v8 + 3) = v14;
  *((void *)v8 + 4) = v26;
  *((void *)v8 + 5) = v16;
  v8[48] = v18;
  v8[49] = 0;
  *((void *)v8 + 7) = v19;
  *((void *)v8 + 8) = v21;
  v8[72] = 0;
  sub_261A6CA3C(v1, (uint64_t)&v8[v5[10]]);
  sub_2619FB7EC((uint64_t)v8, (uint64_t)v10, &qword_26A945610);
  return sub_2619FB7EC((uint64_t)v10, v30, &qword_26A945610);
}

uint64_t sub_261A6CA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945630);
  uint64_t v3 = *(void *)(v27 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v27);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = sub_261B8C488();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for HeartRateMetricView();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F87F38], v9);
  sub_261A6D978();
  sub_261B8F2A8();
  sub_261B8F2A8();
  uint64_t v14 = v32;
  uint64_t v15 = v31;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v14 == v15)
  {
    if (*(unsigned char *)(a1 + *(int *)(v13 + 24)) == 1)
    {
      if (*(unsigned char *)(a1 + *(int *)(v13 + 28)))
      {
        uint64_t v16 = 6;
      }
      else if (*(unsigned char *)(a1 + 8))
      {
        uint64_t v16 = 1;
      }
      else
      {
        uint64_t v16 = 4;
      }
    }
    else if (*(unsigned char *)(a1 + *(int *)(v13 + 28)))
    {
      uint64_t v16 = 3;
    }
    else
    {
      uint64_t v16 = 2;
    }
    if (*(unsigned char *)(a1 + 8)) {
      double v19 = 0.0;
    }
    else {
      double v19 = *(double *)a1;
    }
    char v20 = sub_261A6BC08();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v32 = v16;
    double v33 = v19;
    char v34 = v20 & 1;
    uint64_t v35 = KeyPath;
    char v36 = 0;
    __int16 v37 = 257;
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v22 = (id)qword_26B416688;
    uint64_t v23 = sub_261B8AA48();
    uint64_t v25 = v24;

    uint64_t v29 = v23;
    uint64_t v30 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945640);
    sub_261A6D9D0();
    sub_261A029C4();
    sub_261B8E668();
    swift_release();
    swift_bridgeObjectRelease();
    sub_2619FB7EC((uint64_t)v6, (uint64_t)v8, &qword_26A945630);
    uint64_t v18 = v28;
    sub_2619FB7EC((uint64_t)v8, v28, &qword_26A945630);
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v17 = 1;
    uint64_t v18 = v28;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v18, v17, 1, v27);
}

uint64_t sub_261A6CE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeartRateMetricView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A6CEA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HeartRateMetricView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_261A6CF04()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for HeartRateMetricView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a3[5];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_261B8C488();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)v4 + v1sub_261A34804(3, 0, 0, 1) = *((unsigned char *)a2 + v11);
    uint64_t v12 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v12);
    LOBYTE(v9) = *((unsigned char *)a2 + v12 + 8);
    sub_2619F7774(v14, v9);
    *(void *)uint64_t v13 = v14;
    v13[8] = v9;
    uint64_t v15 = a3[10];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v9) = *(unsigned char *)(v17 + 8);
    sub_2619F7774(*(void *)v17, v9);
    *(void *)uint64_t v16 = v18;
    v16[8] = v9;
    uint64_t v19 = a3[11];
    char v20 = (char *)v4 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = *(void *)v21;
    LOBYTE(v9) = *(unsigned char *)(v21 + 8);
    sub_2619F7774(*(void *)v21, v9);
    *(void *)char v20 = v22;
    v20[8] = v9;
    uint64_t v23 = a3[13];
    *(void *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    uint64_t v24 = (void *)((char *)v4 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    void *v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for HeartRateMetricView(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_261B8C488();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_2619F7790(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  sub_2619F7790(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  sub_2619F7790(*(void *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HeartRateMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_261B8C488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v1sub_261A34804(0, 1, 2, 0) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(a2 + v11);
  LOBYTE(v8) = *(unsigned char *)(a2 + v11 + 8);
  sub_2619F7774(v13, v8);
  *(void *)uint64_t v12 = v13;
  *(unsigned char *)(v12 + 8) = v8;
  uint64_t v14 = a3[10];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)v16;
  LOBYTE(v8) = *(unsigned char *)(v16 + 8);
  sub_2619F7774(*(void *)v16, v8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = v8;
  uint64_t v18 = a3[11];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)v20;
  LOBYTE(v8) = *(unsigned char *)(v20 + 8);
  sub_2619F7774(*(void *)v20, v8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = v8;
  uint64_t v22 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = v24[1];
  void *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HeartRateMetricView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_261B8C488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v11 = a3[9];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t)a2 + v11;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v9) = *(unsigned char *)(v13 + 8);
  sub_2619F7774(*(void *)v13, v9);
  uint64_t v15 = *(void *)v12;
  char v16 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = v9;
  sub_2619F7790(v15, v16);
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  uint64_t v20 = *(void *)v19;
  LOBYTE(v9) = *(unsigned char *)(v19 + 8);
  sub_2619F7774(*(void *)v19, v9);
  uint64_t v21 = *(void *)v18;
  char v22 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v9;
  sub_2619F7790(v21, v22);
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t)a2 + v23;
  uint64_t v26 = *(void *)v25;
  LOBYTE(v9) = *(unsigned char *)(v25 + 8);
  sub_2619F7774(*(void *)v25, v9);
  uint64_t v27 = *(void *)v24;
  char v28 = *(unsigned char *)(v24 + 8);
  *(void *)uint64_t v24 = v26;
  *(unsigned char *)(v24 + 8) = v9;
  sub_2619F7790(v27, v28);
  *(void *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  uint64_t v29 = a3[13];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (uint64_t *)((char *)a2 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for HeartRateMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_261B8C488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v1sub_261A34804(0, 1, 2, 0) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = a3[10];
  uint64_t v15 = a3[11];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v2sub_261A34804(0, 1, 2, 0) = *(_OWORD *)(a2 + v20);
  return a1;
}

uint64_t assignWithTake for HeartRateMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_261B8C488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v1sub_261A34804(0, 1, 2, 0) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *v13;
  LOBYTE(v13) = *((unsigned char *)v13 + 8);
  uint64_t v15 = *(void *)v12;
  char v16 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = (_BYTE)v13;
  sub_2619F7790(v15, v16);
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  LOBYTE(v19) = *((unsigned char *)v19 + 8);
  uint64_t v21 = *(void *)v18;
  char v22 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = (_BYTE)v19;
  sub_2619F7790(v21, v22);
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  LOBYTE(v25) = *((unsigned char *)v25 + 8);
  uint64_t v27 = *(void *)v24;
  char v28 = *(unsigned char *)(v24 + 8);
  *(void *)uint64_t v24 = v26;
  *(unsigned char *)(v24 + 8) = (_BYTE)v25;
  sub_2619F7790(v27, v28);
  uint64_t v29 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  void *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartRateMetricView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A6D6C4);
}

uint64_t sub_261A6D6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8C488();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 52) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for HeartRateMetricView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A6D7AC);
}

uint64_t sub_261A6D7AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_261B8C488();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 52) + 8) = a2;
  }
  return result;
}

uint64_t sub_261A6D870()
{
  uint64_t result = sub_261B8C488();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_261A6D93C()
{
  return sub_2619F8AB8(&qword_26A945628, &qword_26A945610);
}

unint64_t sub_261A6D978()
{
  unint64_t result = qword_26A945638;
  if (!qword_26A945638)
  {
    sub_261B8C488();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945638);
  }
  return result;
}

unint64_t sub_261A6D9D0()
{
  unint64_t result = qword_26A945648;
  if (!qword_26A945648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945640);
    sub_261A15060();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945648);
  }
  return result;
}

uint64_t static Dependencies.workout(wheelchairStatusProvider:queue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8CCC8();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v44 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F90);
  uint64_t v42 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8B2A8();
  MEMORY[0x263E49140](a2);
  id v8 = objc_msgSend(self, sel_mainBundle);
  uint64_t v9 = sub_261B8CCE8();
  swift_allocObject();
  uint64_t v10 = sub_261B8CCD8();
  uint64_t v72 = v9;
  uint64_t v73 = MEMORY[0x263F685C0];
  v71[0] = v10;
  uint64_t v11 = sub_261B8C858();
  swift_allocObject();
  uint64_t v12 = sub_261B8C838();
  sub_261B8C848();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945008);
  sub_261B8B298();
  uint64_t v13 = v71[0];
  uint64_t v14 = v71[1];
  uint64_t v15 = type metadata accessor for WheelchairStatusBridge();
  uint64_t v16 = swift_allocObject();
  uint64_t v41 = a1;
  *(void *)(v16 + 16) = a1;
  uint64_t v72 = v11;
  uint64_t v73 = MEMORY[0x263F6B5D0];
  uint64_t v43 = v12;
  v71[0] = v12;
  uint64_t v69 = v15;
  uint64_t v70 = sub_261A6EA6C(&qword_26A945658, (void (*)(uint64_t))type metadata accessor for WheelchairStatusBridge);
  uint64_t v45 = v16;
  v68[0] = v16;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_261B8B298();
  sub_261B8C708();
  swift_allocObject();
  uint64_t v48 = sub_261B8C6F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945028);
  sub_261B8B298();
  uint64_t v17 = sub_261B8C7F8();
  swift_allocObject();
  uint64_t v18 = sub_261B8C7E8();
  uint64_t v69 = v17;
  uint64_t v70 = MEMORY[0x263F6B548];
  v68[0] = v18;
  sub_261A40D48((uint64_t)v71, (uint64_t)v67);
  uint64_t v19 = sub_261B8C818();
  swift_allocObject();
  uint64_t v20 = sub_261B8C808();
  uint64_t v69 = v19;
  uint64_t v70 = MEMORY[0x263F6B558];
  v68[0] = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945660);
  sub_261B8B298();
  sub_261B8C7D8();
  sub_261A40D48((uint64_t)v67, (uint64_t)v66);
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945668);
  sub_261B8B298();
  uint64_t v39 = sub_261B8C7C8();
  type metadata accessor for MetricNavigationTracker();
  swift_allocObject();
  uint64_t v21 = swift_unknownObjectRetain();
  uint64_t v38 = sub_261B2CA74(v21, v14);
  swift_unknownObjectRelease();
  sub_261A40D48((uint64_t)v67, (uint64_t)v66);
  type metadata accessor for MetricApplicationLifecycleTracker();
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = 0;
  *(_OWORD *)(v22 + 8sub_261A34804(0, 1, 2, 0) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_OWORD *)(v22 + 112) = 0u;
  *(_OWORD *)(v22 + 128) = 0u;
  *(_OWORD *)(v22 + 144) = 0u;
  *(_OWORD *)(v22 + 16sub_261A34804(0, 1, 2, 0) = 0u;
  *(void *)(v22 + 176) = 0;
  uint64_t v23 = v22 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  uint64_t v24 = sub_261B8B098();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  *(void *)(v22 + 24) = v13;
  *(void *)(v22 + 32) = v14;
  sub_261A4E500(v66, v22 + 40);
  sub_261B8CD38();
  swift_allocObject();
  swift_unknownObjectRetain_n();
  uint64_t v37 = sub_261B8CD28();
  uint64_t v25 = v7;
  sub_261B8CD18();
  uint64_t v26 = v40;
  uint64_t v27 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = 0;
  *(void *)(v28 + 24) = 0;
  v27(sub_261A53C98, v28);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v26);
  uint64_t v29 = sub_261B8C928();
  swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v30 = sub_261B8C918();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945670);
  sub_261B8B298();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945678);
  sub_261B8B298();
  sub_261A40D48((uint64_t)v65, (uint64_t)&v64);
  sub_261A40D48((uint64_t)v66, (uint64_t)&v63);
  uint64_t v61 = v29;
  uint64_t v62 = MEMORY[0x263F6B868];
  uint64_t v40 = v30;
  uint64_t v60 = v30;
  sub_261B8C898();
  swift_allocObject();
  v36[1] = v13;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v31 = sub_261B8C888();
  uint64_t v42 = v31;
  sub_261B8C878();
  swift_allocObject();
  swift_retain();
  uint64_t v32 = sub_261B8C868();
  uint64_t v33 = v44;
  sub_261B8CCB8();
  uint64_t v49 = v31;
  uint64_t v50 = v68;
  uint64_t v51 = v48;
  uint64_t v52 = v41;
  uint64_t v53 = v39;
  char v54 = v38;
  uint64_t v55 = v22;
  uint64_t v56 = v37;
  uint64_t v57 = v32;
  uint64_t v58 = v43;
  uint64_t v59 = v33;
  uint64_t v34 = sub_261B8B288();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v47);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  return v34;
}

uint64_t sub_261A6E224()
{
  id v0 = objc_msgSend(self, sel_sharedApplication);
  id v1 = objc_msgSend(v0, sel_connectedScenes);

  sub_261A6EA2C();
  sub_261A6EA6C(&qword_26A945780, (void (*)(uint64_t))sub_261A6EA2C);
  uint64_t v2 = sub_261B8F448();

  return v2;
}

uint64_t sub_261A6E2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v34[0] = a1;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945680);
  uint64_t v39 = sub_261A6E9DC(&qword_26A945688, &qword_26A945680);
  __swift_allocate_boxed_opaque_existential_1(v37);
  sub_261B8C898();
  swift_retain();
  sub_261B8B088();
  uint64_t v33 = sub_261B8B6C8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  sub_261A40D48(a2, (uint64_t)v34);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945690);
  uint64_t v39 = sub_261A6E9DC(&qword_26A945698, &qword_26A945690);
  __swift_allocate_boxed_opaque_existential_1(v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450E0);
  sub_261B8B088();
  uint64_t v32 = sub_261B8B6C8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  uint64_t v35 = sub_261B8C708();
  char v36 = (_UNKNOWN **)MEMORY[0x263F6B450];
  v34[0] = a3;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9456A0);
  uint64_t v39 = sub_261A6E9DC(&qword_26A9456A8, &qword_26A9456A0);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9456B0);
  sub_261B8B088();
  uint64_t v18 = sub_261B8B6C8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v34[0] = a4;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9456B8);
  uint64_t v39 = sub_261A6E9DC(&qword_26A9456C0, &qword_26A9456B8);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9456C8);
  sub_261B8B088();
  uint64_t v19 = sub_261B8B6C8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v34[0] = a5;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9456D0);
  uint64_t v39 = sub_261A6E9DC(&qword_26A9456D8, &qword_26A9456D0);
  __swift_allocate_boxed_opaque_existential_1(v37);
  sub_261B8C7D8();
  swift_retain();
  sub_261B8B088();
  uint64_t v20 = sub_261B8B6C8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  uint64_t v35 = type metadata accessor for MetricNavigationTracker();
  char v36 = &protocol witness table for MetricNavigationTracker;
  v34[0] = a6;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9456E0);
  uint64_t v39 = sub_261A6E9DC(&qword_26A9456E8, &qword_26A9456E0);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9456F0);
  sub_261B8B088();
  uint64_t v21 = sub_261B8B6C8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  uint64_t v35 = type metadata accessor for MetricApplicationLifecycleTracker();
  char v36 = &protocol witness table for MetricApplicationLifecycleTracker;
  v34[0] = a7;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9456F8);
  uint64_t v39 = sub_261A6E9DC(&qword_26A945700, &qword_26A9456F8);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945708);
  sub_261B8B088();
  uint64_t v22 = sub_261B8B6C8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  uint64_t v35 = sub_261B8CD38();
  char v36 = (_UNKNOWN **)MEMORY[0x263F68600];
  v34[0] = a8;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945710);
  uint64_t v39 = sub_261A6E9DC(&qword_26A945718, &qword_26A945710);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945720);
  sub_261B8B088();
  uint64_t v23 = sub_261B8B6C8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  uint64_t v35 = sub_261B8C878();
  char v36 = (_UNKNOWN **)MEMORY[0x263F6B5E0];
  v34[0] = a9;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945728);
  uint64_t v39 = sub_261A6E9DC(&qword_26A945730, &qword_26A945728);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945738);
  sub_261B8B088();
  uint64_t v24 = sub_261B8B6C8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  uint64_t v35 = sub_261B8C858();
  char v36 = (_UNKNOWN **)MEMORY[0x263F6B5D0];
  v34[0] = a10;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945740);
  uint64_t v39 = sub_261A6E9DC(&qword_26A945748, &qword_26A945740);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945750);
  sub_261B8B088();
  uint64_t v25 = sub_261B8B6C8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  uint64_t v26 = sub_261B8CCC8();
  uint64_t v35 = v26;
  char v36 = (_UNKNOWN **)MEMORY[0x263F684D0];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(boxed_opaque_existential_1, a11, v26);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945758);
  uint64_t v39 = sub_261A6E9DC(&qword_26A945760, &qword_26A945758);
  __swift_allocate_boxed_opaque_existential_1(v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945768);
  sub_261B8B088();
  uint64_t v28 = sub_261B8B6C8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945770);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_261B96720;
  *(void *)(v29 + 32) = v33;
  *(void *)(v29 + 4sub_261A34804(0, 1, 2, 0) = v32;
  *(void *)(v29 + 48) = v18;
  *(void *)(v29 + 56) = v19;
  *(void *)(v29 + 64) = v20;
  *(void *)(v29 + 72) = v21;
  *(void *)(v29 + 8sub_261A34804(0, 1, 2, 0) = v22;
  *(void *)(v29 + 88) = v23;
  *(void *)(v29 + 96) = v24;
  *(void *)(v29 + 104) = v25;
  *(void *)(v29 + 112) = v28;
  sub_261B8B6B8();
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_261B8B6A8();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_261A6E95C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261A6E99C()
{
  return sub_261A6E2DC(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11], v0[12]);
}

uint64_t sub_261A6E9DC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A6EA2C()
{
  unint64_t result = qword_26A945778;
  if (!qword_26A945778)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A945778);
  }
  return result;
}

uint64_t sub_261A6EA6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PaceMetricView.init(formattingManager:metricType:activityType:pace:gpsUnavailable:visualAlertDescription:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = result;
  *(unsigned char *)(a7 + 32) = 0;
  *(double *)(a7 + 4sub_261A34804(0, 1, 2, 0) = a8;
  *(unsigned char *)(a7 + 48) = a4;
  *(void *)(a7 + 56) = a5;
  *(void *)(a7 + 64) = a6;
  return result;
}

void sub_261A6EB34()
{
  id v1 = *(void **)v0;
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  double v5 = *(double *)(v0 + 40);
  if (sub_261A6ED64())
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v6 = (id)qword_26B416688;
    sub_261B8AA48();
    goto LABEL_7;
  }
  id v7 = objc_msgSend(self, sel_meterUnit);
  id v8 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v7, v5);

  id v9 = v1;
  id v10 = v3;
  sub_2619F7774(v2, v4);
  swift_bridgeObjectRetain();
  uint64_t v11 = FIUIDistanceTypeForActivityType();
  uint64_t v12 = MEMORY[0x263E4DEA0](v11);
  uint64_t v13 = FIUIDistanceTypeForActivityType();

  sub_2619F7790(v2, v4);
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v9, sel_localizedPaceStringWithDistance_overDuration_paceFormat_distanceType_, v8, v12, v13, 1.0);

  if (v6)
  {
    sub_261B8F0F8();
LABEL_7:

    return;
  }
  __break(1u);
}

uint64_t sub_261A6ED64()
{
  id v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 32);
  double v4 = *(double *)(v0 + 40);
  unsigned int v5 = *(unsigned __int8 *)(v0 + 48);
  id v6 = *(id *)v0;
  id v7 = v1;
  sub_2619F7774(v2, v3);
  swift_bridgeObjectRetain();
  uint64_t v8 = FIUIDistanceTypeForActivityType();
  uint64_t v9 = MEMORY[0x263E4DEA0](v8);

  sub_2619F7790(v2, v3);
  swift_bridgeObjectRelease();
  if (v9 == 4
    && v4 >= 0.0
    && objc_msgSend(v7, sel_effectiveTypeIdentifier) == (id)13
    && (objc_msgSend(v7, sel_isIndoor) & 1) != 0)
  {
    return 0;
  }
  id v10 = v6;
  id v11 = v7;
  sub_2619F7774(v2, v3);
  swift_bridgeObjectRetain();
  uint64_t v12 = FIUIDistanceTypeForActivityType();
  uint64_t v13 = MEMORY[0x263E4DEA0](v12);

  sub_2619F7790(v2, v3);
  swift_bridgeObjectRelease();
  if (v13 != 4) {
    return 0;
  }
  if (v4 < 0.0) {
    return 1;
  }
  return v5;
}

id sub_261A6EEAC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v3 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  id v5 = *(id *)v0;
  id v6 = v3;
  sub_2619F7774(v2, v4);
  swift_bridgeObjectRetain();
  sub_2619F7774(v2, v4);
  sub_2619FA43C(v2, v4, &v36);
  sub_2619F7790(v2, v4);

  sub_2619F7790(v2, v4);
  swift_bridgeObjectRelease();
  if (v36 - 6 < 2) {
    goto LABEL_4;
  }
  if (v36 == 5)
  {
    id v20 = v5;
    id v21 = v6;
    sub_2619F7774(v2, v4);
    swift_bridgeObjectRetain();
    uint64_t v22 = FIUIDistanceTypeForActivityType();
    id result = objc_msgSend(v20, sel_unitManager);
    if (!result)
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    uint64_t v23 = result;
    id v24 = objc_msgSend(result, sel_paceDistanceUnitForDistanceType_, FIUIDistanceTypeForActivityType());

    uint64_t v25 = FIUIDistanceTypeForActivityType();
    uint64_t v26 = MEMORY[0x263E4DEA0](v25);

    sub_2619F7790(v2, v4);
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(v20, sel_localizedDistinguishingPaceUnitStringWithMetricType_distanceType_distanceUnit_paceFormat_abbreviated_multiline_, v1, v22, v24, v26, v1 == 48, 0);
    if (v19) {
      goto LABEL_11;
    }
    return 0;
  }
  if (!v36)
  {
LABEL_4:
    id v7 = v5;
    id v8 = v6;
    sub_2619F7774(v2, v4);
    swift_bridgeObjectRetain();
    uint64_t v9 = FIUIDistanceTypeForActivityType();
    uint64_t v10 = MEMORY[0x263E4DEA0](v9);

    sub_2619F7790(v2, v4);
    swift_bridgeObjectRelease();
    if (v10 == 4 && v1 == 4) {
      return 0;
    }
    id v11 = v7;
    id v12 = v8;
    sub_2619F7774(v2, v4);
    swift_bridgeObjectRetain();
    uint64_t v13 = FIUIDistanceTypeForActivityType();
    id result = objc_msgSend(v11, sel_unitManager);
    if (result)
    {
      uint64_t v15 = result;
      id v16 = objc_msgSend(result, sel_paceDistanceUnitForDistanceType_, FIUIDistanceTypeForActivityType());

      uint64_t v17 = FIUIDistanceTypeForActivityType();
      uint64_t v18 = MEMORY[0x263E4DEA0](v17);

      sub_2619F7790(v2, v4);
      swift_bridgeObjectRelease();
      id v19 = objc_msgSend(v11, sel_localizedDistinguishingPaceUnitStringWithMetricType_distanceType_distanceUnit_paceFormat_abbreviated_multiline_, v1, v13, v16, v18, 0, 1);
      if (!v19) {
        return 0;
      }
LABEL_11:
      uint64_t v27 = v19;
      uint64_t v28 = sub_261B8F0F8();

      return (id)v28;
    }
    __break(1u);
    goto LABEL_17;
  }
  id v29 = v5;
  id v30 = v6;
  sub_2619F7774(v2, v4);
  swift_bridgeObjectRetain();
  uint64_t v31 = FIUIDistanceTypeForActivityType();
  id result = objc_msgSend(v29, sel_unitManager);
  if (result)
  {
    uint64_t v32 = result;
    id v33 = objc_msgSend(result, sel_paceDistanceUnitForDistanceType_, FIUIDistanceTypeForActivityType());

    uint64_t v34 = FIUIDistanceTypeForActivityType();
    uint64_t v35 = MEMORY[0x263E4DEA0](v34);

    sub_2619F7790(v2, v4);
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(v29, sel_localizedDistinguishingPaceUnitStringWithMetricType_distanceType_distanceUnit_paceFormat_abbreviated_multiline_, v1, v31, v33, v35, 0, 1);
    if (v19) {
      goto LABEL_11;
    }
    return 0;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_261A6F29C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  id v5 = *(id *)v0;
  id v6 = v2;
  sub_2619F7774(v3, v4);
  swift_bridgeObjectRetain();
  sub_2619F7774(v3, v4);
  sub_2619FA43C(v3, v4, &v15);
  sub_2619F7790(v3, v4);

  sub_2619F7790(v3, v4);
  swift_bridgeObjectRelease();
  int v7 = v15;
  id v8 = v5;
  id v9 = v6;
  sub_2619F7774(v3, v4);
  swift_bridgeObjectRetain();
  uint64_t v10 = FIUIDistanceTypeForActivityType();
  uint64_t v11 = MEMORY[0x263E4DEA0](v10);

  sub_2619F7790(v3, v4);
  swift_bridgeObjectRelease();
  if (v7)
  {
    if (v11 != 4) {
      return 0;
    }
    goto LABEL_6;
  }
  uint64_t v12 = 0;
  if (v11 == 4 && v1 == 4)
  {
LABEL_6:
    id v13 = objc_msgSend(v8, sel_localizedSpeedUnitStringForActivityType_, v9);
    if (v13)
    {
      uint64_t v12 = sub_261B8F0F8();

      return v12;
    }
    return 0;
  }
  return v12;
}

id sub_261A6F438()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 56);
  id v6 = *(id *)v0;
  id v7 = v3;
  sub_2619F7774(v2, v4);
  swift_bridgeObjectRetain();
  sub_2619F7774(v2, v4);
  sub_2619FA43C(v2, v4, &v14);
  sub_2619F7790(v2, v4);

  sub_2619F7790(v2, v4);
  swift_bridgeObjectRelease();
  if (v14 - 6 < 2) {
    return sub_261A6EEAC();
  }
  if (v14 == 8)
  {
    swift_bridgeObjectRetain();
    return (id)v5;
  }
  if (!v14) {
    return sub_261A6EEAC();
  }
  id v8 = v6;
  id v9 = v7;
  sub_2619F7774(v2, v4);
  swift_bridgeObjectRetain();
  uint64_t v10 = FIUIDistanceTypeForActivityType();
  uint64_t v11 = MEMORY[0x263E4DEA0](v10);

  sub_2619F7790(v2, v4);
  swift_bridgeObjectRelease();
  if (v11 != 4 || v1 != 4) {
    return sub_261A6EEAC();
  }
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v12 = (id)qword_26B416688;
  uint64_t v5 = sub_261B8AA48();

  return (id)v5;
}

uint64_t sub_261A6F67C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945788);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v4 = *(void **)v0;
  uint64_t v5 = *(void *)(v0 + 8);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  char v8 = *(unsigned char *)(v0 + 32);
  uint64_t v9 = *(void *)(v0 + 40);
  int v10 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v12 = *(void *)(v0 + 64);
  uint64_t v65 = *(void **)v0;
  uint64_t v66 = v5;
  uint64_t v67 = v7;
  uint64_t v68 = v6;
  char v69 = v8;
  uint64_t v70 = v9;
  char v71 = v10;
  uint64_t v72 = v11;
  uint64_t v73 = v12;
  if ((sub_261A6ED64() & 1) == 0)
  {
    uint64_t v65 = v4;
    uint64_t v66 = v5;
    uint64_t v67 = v7;
    uint64_t v68 = v6;
    char v69 = v8;
    uint64_t v70 = v9;
    int v58 = v10;
    char v71 = v10;
    uint64_t v59 = v11;
    uint64_t v72 = v11;
    uint64_t v73 = v12;
    uint64_t v60 = v12;
    sub_261A6EB34();
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    uint64_t v17 = sub_261B8C5D8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v3, 1, 1, v17);
    uint64_t v18 = sub_261B8F158();
    uint64_t v20 = v19;
    sub_261A6FF34((uint64_t)v3);
    if (v14 == v18 && v16 == v20)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v22 = sub_261B8FBA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = v59;
      char v24 = v58;
      if ((v22 & 1) == 0)
      {
        uint64_t v65 = v4;
        uint64_t v66 = v5;
        uint64_t v67 = v7;
        uint64_t v68 = v6;
        char v69 = v8;
        uint64_t v70 = v9;
        char v71 = v58;
        uint64_t v72 = v59;
        uint64_t v73 = v60;
        uint64_t v25 = sub_261A6F438();
        char v27 = v24;
        if (v26)
        {
          uint64_t v65 = v25;
          uint64_t v66 = v26;
          uint64_t v63 = 10;
          unint64_t v64 = 0xE100000000000000;
          uint64_t v61 = 32;
          unint64_t v62 = 0xE100000000000000;
          sub_261A029C4();
          uint64_t v56 = sub_261B8F788();
          uint64_t v57 = v28;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v57 = 0;
          uint64_t v56 = (uint64_t)v25;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A945650);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_261B94B90;
        uint64_t v65 = v4;
        uint64_t v66 = v5;
        uint64_t v67 = v7;
        uint64_t v68 = v6;
        char v69 = v8;
        uint64_t v70 = v9;
        char v71 = v24;
        uint64_t v72 = v23;
        uint64_t v33 = v23;
        char v34 = v27;
        uint64_t v35 = v60;
        uint64_t v73 = v60;
        sub_261A6EB34();
        uint64_t v55 = v36;
        *(void *)(inited + 32) = v36;
        *(void *)(inited + 4sub_261A34804(0, 1, 2, 0) = v37;
        uint64_t v65 = v4;
        uint64_t v66 = v5;
        uint64_t v67 = v7;
        uint64_t v68 = v6;
        char v69 = v8;
        uint64_t v70 = v9;
        char v71 = v34;
        uint64_t v72 = v33;
        uint64_t v73 = v35;
        uint64_t v38 = v37;
        uint64_t v39 = sub_261A6F29C();
        uint64_t v41 = v40;
        *(void *)(inited + 48) = v39;
        *(void *)(inited + 56) = v40;
        uint64_t v42 = v56;
        uint64_t v43 = v57;
        *(void *)(inited + 64) = v56;
        *(void *)(inited + 72) = v43;
        swift_bridgeObjectRetain();
        unint64_t v44 = sub_261A0B1E4(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v46 = v44[2];
        unint64_t v45 = v44[3];
        unint64_t v47 = v46 + 1;
        if (v46 >= v45 >> 1) {
          unint64_t v44 = sub_261A0B1E4((void *)(v45 > 1), v46 + 1, 1, v44);
        }
        v44[2] = v47;
        uint64_t v48 = &v44[2 * v46];
        v48[4] = v55;
        v48[5] = v38;
        if (v41)
        {
          unint64_t v49 = v44[3];
          int64_t v50 = v46 + 2;
          swift_bridgeObjectRetain();
          if (v47 >= v49 >> 1) {
            unint64_t v44 = sub_261A0B1E4((void *)(v49 > 1), v50, 1, v44);
          }
          v44[2] = v50;
          uint64_t v51 = &v44[2 * v47];
          v51[4] = v39;
          v51[5] = v41;
        }
        if (v43)
        {
          unint64_t v52 = v44[2];
          unint64_t v53 = v44[3];
          swift_bridgeObjectRetain();
          if (v52 >= v53 >> 1) {
            unint64_t v44 = sub_261A0B1E4((void *)(v53 > 1), v52 + 1, 1, v44);
          }
          v44[2] = v52 + 1;
          char v54 = &v44[2 * v52];
          v54[4] = v42;
          v54[5] = v43;
        }
        swift_release();
        uint64_t v65 = v44;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A943578);
        sub_261A2902C();
        uint64_t v30 = sub_261B8F048();
        swift_bridgeObjectRelease();
        return v30;
      }
    }
  }
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v29 = (id)qword_26B416688;
  uint64_t v30 = sub_261B8AA48();

  return v30;
}

uint64_t PaceMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  sub_261A6EB34();
  uint64_t v14 = v3;
  uint64_t v15 = v2;
  uint64_t v4 = sub_261A6F29C();
  uint64_t v12 = v5;
  uint64_t v13 = v4;
  id v6 = sub_261A6F438();
  uint64_t v10 = v7;
  id v11 = v6;
  uint64_t result = sub_261A6F67C();
  *(void *)a1 = v15;
  *(void *)(a1 + 8) = v14;
  *(void *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v10;
  *(_WORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = result;
  *(void *)(a1 + 64) = v9;
  return result;
}

uint64_t sub_261A6FCF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for PaceMetricView(uint64_t a1)
{
  sub_2619F7790(*(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaceMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v7 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  char v8 = *(unsigned char *)(a2 + 32);
  id v9 = v4;
  id v10 = v7;
  sub_2619F7774(v6, v8);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaceMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(void **)(a2 + 16);
  char v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  uint64_t v10 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  sub_2619F7774(v10, v11);
  uint64_t v12 = *(void *)(a1 + 24);
  char v13 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 32) = v11;
  sub_2619F7790(v12, v13);
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PaceMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;

  char v7 = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v7;
  sub_2619F7790(v8, v9);
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PaceMetricView()
{
  return &type metadata for PaceMetricView;
}

uint64_t sub_261A6FF34(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945788);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t RaceRemainingDistanceMetricView.init(remainingDistance:formattingManager:distanceType:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(unsigned char *)(a5 + 8) = a2 & 1;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  return result;
}

double RaceRemainingDistanceMetricView.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = qword_26B416690;
  if (*(unsigned char *)(v1 + 8))
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)qword_26B416688;
    sub_261B8AA48();

    id v5 = (id)qword_26B416688;
    sub_261B8AA48();

    id v6 = (id)qword_26B416688;
    sub_261B8AA48();

    sub_261A34BF8();
    sub_261A02AC8();
  }
  else
  {
    *(id *)(v1 + 16);
    if (v3 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (id)qword_26B416688;
    sub_261B8AA48();

    sub_261A34BF8();
    sub_261A02AC8();
  }
  sub_261B8DD68();
  double result = *(double *)&v9;
  *(_OWORD *)a1 = v9;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = v11;
  *(_OWORD *)(a1 + 48) = v12;
  *(void *)(a1 + 64) = v13;
  *(unsigned char *)(a1 + 72) = v14;
  return result;
}

uint64_t sub_261A702CC()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for RaceRemainingDistanceMetricView(uint64_t a1)
{
}

uint64_t initializeWithCopy for RaceRemainingDistanceMetricView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for RaceRemainingDistanceMetricView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  id v5 = (void *)a2[2];
  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v5;
  id v7 = v5;

  *(void *)(a1 + 24) = a2[3];
  return a1;
}

uint64_t assignWithTake for RaceRemainingDistanceMetricView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RaceRemainingDistanceMetricView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RaceRemainingDistanceMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RaceRemainingDistanceMetricView()
{
  return &type metadata for RaceRemainingDistanceMetricView;
}

unint64_t sub_261A7047C()
{
  unint64_t result = qword_26A945790;
  if (!qword_26A945790)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945798);
    sub_261A34BF8();
    sub_261A02AC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945790);
  }
  return result;
}

uint64_t sub_261A704F8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  char v13 = a4 & 1;
  sub_261A001D0(a2, a3, v13);
  uint64_t v14 = qword_26A942BE8;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  char v15 = a1 & 1;
  double v16 = *(double *)&qword_26A953598;
  if (FIUICurrentLanguageRequiresTallScript()) {
    double v16 = v16 + 1.0;
  }
  uint64_t v17 = swift_getKeyPath();
  *(void *)a6 = a2;
  *(void *)(a6 + 8) = a3;
  *(unsigned char *)(a6 + 16) = v13;
  *(void *)(a6 + 24) = a5;
  *(unsigned char *)(a6 + 32) = v15;
  *(void *)(a6 + 4sub_261A34804(0, 1, 2, 0) = KeyPath;
  *(unsigned char *)(a6 + 48) = 0;
  *(unsigned char *)(a6 + 56) = v15;
  *(double *)(a6 + 64) = v16;
  *(void *)(a6 + 72) = v17;
  *(unsigned char *)(a6 + 8sub_261A34804(0, 1, 2, 0) = 0;
  sub_261A001D0(a2, a3, v13);
  swift_bridgeObjectRetain();
  sub_2619F7774(KeyPath, 0);
  sub_261A02A18(a2, a3, v13);
  swift_bridgeObjectRelease();
  return sub_2619F7790(KeyPath, 0);
}

uint64_t View.metricDetail(_:color:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[0] = a1;
  v6[1] = a2;
  v6[2] = a3;
  v6[3] = 0x4008000000000000;
  return MEMORY[0x263E4C680](v6, a4, &type metadata for MetricDetail, a5);
}

uint64_t sub_261A70690()
{
  return swift_getWitnessTable();
}

uint64_t destroy for MetricDetail()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

void *initializeWithCopy for MetricDetail(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for MetricDetail(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for MetricDetail(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for MetricDetail()
{
  return &type metadata for MetricDetail;
}

uint64_t sub_261A70840()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A7085C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v45 = a5;
  uint64_t v46 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9457B8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v44 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v42 = (char *)&v37 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9457C0);
  uint64_t v13 = v12 - 8;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v43 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v41 = (uint64_t)&v37 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9457C8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a1, v18);
  *(void *)&v17[*(int *)(v13 + 44)] = 0x3FF0000000000000;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  sub_261A029C4();
  uint64_t v53 = sub_261B8F768();
  uint64_t v54 = v19;
  uint64_t v20 = sub_261B8E3D8();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_261A704F8(1, v20, v21, v23 & 1, v25, (uint64_t)&v53);
  sub_261A02A18(v20, v22, v24);
  swift_bridgeObjectRelease();
  uint64_t v27 = v53;
  uint64_t v26 = v54;
  char v28 = v55;
  uint64_t v38 = v56;
  LOBYTE(v17) = v57;
  uint64_t v39 = v58;
  int v40 = v59;
  uint64_t v60 = v46;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  uint64_t v49 = 10;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 32;
  unint64_t v48 = 0xE100000000000000;
  swift_retain();
  uint64_t v51 = sub_261B8F788();
  uint64_t v52 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9457D0);
  sub_261A70D84();
  uint64_t v30 = (uint64_t)v42;
  sub_261B8E668();
  swift_bridgeObjectRelease();
  sub_261A02A18(v27, v26, v28);
  swift_bridgeObjectRelease();
  sub_2619F7790(v38, (char)v17);
  sub_2619F7790(v39, v40);
  swift_release();
  uint64_t v31 = v41;
  uint64_t v32 = v43;
  sub_2619F86F0(v41, v43, &qword_26A9457C0);
  uint64_t v33 = v44;
  sub_2619F86F0(v30, v44, &qword_26A9457B8);
  uint64_t v34 = v45;
  sub_2619F86F0(v32, v45, &qword_26A9457C0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945800);
  sub_2619F86F0(v33, v34 + *(int *)(v35 + 48), &qword_26A9457B8);
  sub_2619F8754(v30, &qword_26A9457B8);
  sub_2619F8754(v31, &qword_26A9457C0);
  sub_2619F8754(v33, &qword_26A9457B8);
  return sub_2619F8754(v32, &qword_26A9457C0);
}

uint64_t sub_261A70C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9457A0);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  uint64_t v9 = v2[1];
  uint64_t v10 = v2[2];
  uint64_t v11 = v2[3];
  *(void *)id v7 = sub_261B8DAD8();
  *((void *)v7 + sub_261A34804(3, 0, 0, 1) = v11;
  v7[16] = 0;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9457A8);
  sub_261A7085C(a1, v8, v9, v10, (uint64_t)&v7[*(int *)(v12 + 44)]);
  sub_2619F86F0((uint64_t)v7, a2, &qword_26A9457A0);
  *(void *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A9457B0) + 36)) = 0;
  return sub_2619F8754((uint64_t)v7, &qword_26A9457A0);
}

unint64_t sub_261A70D84()
{
  unint64_t result = qword_26A9457D8;
  if (!qword_26A9457D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9457D0);
    sub_261A70E24();
    sub_2619F8AB8((unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9457D8);
  }
  return result;
}

unint64_t sub_261A70E24()
{
  unint64_t result = qword_26A9457E0;
  if (!qword_26A9457E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9457E8);
    sub_261A70EA0();
    sub_2619F7558();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9457E0);
  }
  return result;
}

unint64_t sub_261A70EA0()
{
  unint64_t result = qword_26A9457F0;
  if (!qword_26A9457F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9457F8);
    sub_2619F7460();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9457F0);
  }
  return result;
}

unint64_t sub_261A70F28()
{
  unint64_t result = qword_26A945808;
  if (!qword_26A945808)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9457B0);
    sub_2619F8AB8(&qword_26A945810, &qword_26A9457A0);
    sub_261A70FC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945808);
  }
  return result;
}

unint64_t sub_261A70FC8()
{
  unint64_t result = qword_26A945818;
  if (!qword_26A945818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945818);
  }
  return result;
}

uint64_t type metadata accessor for SharedPowerViewFunctionality.BundleLookup()
{
  return self;
}

uint64_t type metadata accessor for PowerStatusView.BundleLookup()
{
  return self;
}

ValueMetadata *type metadata accessor for PowerStatusView()
{
  return &type metadata for PowerStatusView;
}

id sub_261A71074()
{
  uint64_t v1 = *(void *)v0;
  double v2 = *(double *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 32);
  sub_2619F7774(v4, v5);
  sub_2619FA43C(v4, v5, &v7);
  sub_2619F7790(v4, v5);
  return sub_261A71240(v3, v1, &v7, v2);
}

uint64_t sub_261A710F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_261A71638();
  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_261A7115C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_261A71638();
  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_261A711C0()
{
}

unint64_t sub_261A711EC()
{
  unint64_t result = qword_26A945820;
  if (!qword_26A945820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945820);
  }
  return result;
}

id sub_261A71240(char a1, uint64_t a2, unsigned __int8 *a3, double a4)
{
  int v7 = *a3;
  if ((v7 - 2) < 3 || v7 == 5)
  {
    uint64_t v8 = self;
    id v9 = objc_msgSend(v8, sel_currentDevice);
    sub_261AAC430();

    id v10 = objc_msgSend(v8, sel_currentDevice);
    sub_261AAC430();

    id v11 = objc_msgSend(v8, sel_currentDevice);
    sub_261AAC430();
  }
  type metadata accessor for SharedPowerViewFunctionality.BundleLookup();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v13 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v14 = objc_allocWithZone(MEMORY[0x263F3F178]);
  uint64_t v15 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v14, sel_initWithFrame_heartFilledImageName_heartSpriteImageName_heartSuspendedSpriteImageName_spriteFrameCount_spriteColumnCount_resourceBundle_, v15, v16, v17, 60, 10, v13, 0.0, 0.0, 0.0, 0.0);

  objc_msgSend(v18, sel_setAnimationsSuspended_, a1 & 1);
  objc_msgSend(v18, sel_setState_, a2);
  objc_msgSend(v18, sel_setBeatsPerMinute_, a4);
  return v18;
}

unint64_t sub_261A71638()
{
  unint64_t result = qword_26A945828;
  if (!qword_26A945828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945828);
  }
  return result;
}

uint64_t static CatalogMediaTypeBridge.makeMediaTypeBridge(from:)(unsigned __int8 a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1 + 1;
  }
  else {
    return 0;
  }
}

uint64_t static CatalogMediaTypeBridge.makeMediaTypeBridge(from:)(unsigned __int8 a1)
{
  return a1 + 1;
}

uint64_t CatalogMediaTypeBridge.rawStringValue.getter(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 4)
  {
    uint64_t result = sub_261B8FBD8();
    __break(1u);
  }
  else
  {
    return sub_261B8B4D8();
  }
  return result;
}

unint64_t CatalogMediaType.init(mediaTypeBridge:)(uint64_t a1)
{
  unint64_t result = a1 - 1;
  if (result >= 4)
  {
    unint64_t result = sub_261B8FBD8();
    __break(1u);
  }
  return result;
}

uint64_t CatalogMediaTypeBridge.init(rawStringValue:)()
{
  unsigned __int8 v0 = MEMORY[0x263E49390]();
  if (v0 == 4) {
    return 0;
  }
  else {
    return v0 + 1;
  }
}

uint64_t CatalogMediaTypeBridge.init(rawValue:)(uint64_t a1)
{
  return sub_261A71C44(a1);
}

uint64_t sub_261A71794@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_261A71C44(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

id static CatalogMediaTypeHelper.mediaTypeBridgeRawValue(from:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  unsigned __int8 v4 = MEMORY[0x263E49390](a1, a2);
  uint64_t v5 = 1;
  uint64_t v6 = v4;
  id result = 0;
  switch(v6)
  {
    case 1:
      uint64_t v5 = 2;
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v5);
    case 2:
      uint64_t v5 = 3;
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v5);
    case 3:
      uint64_t v5 = 4;
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v5);
    case 4:
      return result;
    default:
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v5);
  }
}

id CatalogMediaTypeHelper.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id CatalogMediaTypeHelper.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CatalogMediaTypeHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

id CatalogMediaTypeHelper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CatalogMediaTypeHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t CatalogMediaTypeBridge.activityType.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  uint64_t result = 52;
  switch(v1)
  {
    case 0:
      uint64_t result = 37;
      break;
    case 1:
      return result;
    case 2:
    case 3:
      uint64_t result = 0;
      break;
    default:
      sub_261B8FBD8();
      __break(1u);
      JUMPOUT(0x261A71AA8);
  }
  return result;
}

uint64_t CatalogMediaTypeBridge.description.getter(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 4)
  {
    uint64_t result = sub_261B8FBD8();
    __break(1u);
  }
  else
  {
    return sub_261B8B4D8();
  }
  return result;
}

uint64_t sub_261A71B0C()
{
  if ((unint64_t)(*v0 - 1) >= 4)
  {
    uint64_t result = sub_261B8FBD8();
    __break(1u);
  }
  else
  {
    return sub_261B8B4D8();
  }
  return result;
}

uint64_t CatalogMediaTypeBridge.logString.getter(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 4)
  {
    uint64_t result = sub_261B8FBD8();
    __break(1u);
  }
  else
  {
    sub_261B8B4D8();
    sub_261B8F1C8();
    swift_bridgeObjectRelease();
    sub_261B8F1C8();
    sub_261B8FB78();
    sub_261B8F1C8();
    swift_bridgeObjectRelease();
    sub_261B8F1C8();
    return 0;
  }
  return result;
}

uint64_t sub_261A71C3C()
{
  return CatalogMediaTypeBridge.logString.getter(*v0);
}

uint64_t sub_261A71C44(uint64_t result)
{
  if ((unint64_t)(result - 5) < 0xFFFFFFFFFFFFFFFCLL) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for CatalogMediaTypeHelper()
{
  return self;
}

unint64_t sub_261A71C80()
{
  unint64_t result = qword_26A945830;
  if (!qword_26A945830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945830);
  }
  return result;
}

ValueMetadata *type metadata accessor for CatalogMediaTypeBridge()
{
  return &type metadata for CatalogMediaTypeBridge;
}

id static PacerWorkoutConfiguration.aheadColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 1.0, 0.658823529, 1.0);
}

id static PacerWorkoutConfiguration.behindColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithDisplayP3Red_green_blue_alpha_, 1.0, 0.37254902, 0.274509804, 1.0);
}

id static RaceWorkoutConfiguration.aheadColors.getter@<X0>(void *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  id v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);
  id result = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.2);
  *a1 = v4;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = result;
  return result;
}

id static RaceWorkoutConfiguration.behindColors.getter@<X0>(void *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.2, 0.0823529412, 0.0666666667, 1.0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  id v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);
  id result = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.2);
  *a1 = v4;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = result;
  return result;
}

BOOL WorkoutConfiguration.canBeAdded.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944590);
  MEMORY[0x270FA5388](v0 - 8);
  id v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_261B8BA58();
  swift_release();
  if (v3) {
    return 0;
  }
  sub_261B8BAC8();
  uint64_t v5 = sub_261B8AFF8();
  BOOL v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v2, 1, v5) == 1;
  sub_2619F8754((uint64_t)v2, &qword_26A944590);
  return v4;
}

SEL *WorkoutConfiguration.displayColor.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8C218();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8BAA8();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 != *MEMORY[0x263F87DF0])
  {
    if (v6 == *MEMORY[0x263F87E08]) {
      return (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
    }
    if (v6 == *MEMORY[0x263F87DF8])
    {
      id v11 = objc_allocWithZone(MEMORY[0x263F825C8]);
      return (SEL *)objc_msgSend(v11, sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    }
    else
    {
      if (v6 != *MEMORY[0x263F87E00])
      {
        if (v6 != *MEMORY[0x263F87DE8]) {
          goto LABEL_19;
        }
        id v13 = objc_msgSend(self, sel_keyColors);
        if (v13)
        {
          id v14 = v13;
          uint64_t v1 = (SEL *)objc_msgSend(v13, sel_nonGradientTextColor);

          if (v1) {
            return v1;
          }
          __break(1u);
        }
        __break(1u);
        while (1)
        {
LABEL_18:
          sub_261B8F9C8();
          __break(1u);
LABEL_19:
          v15[0] = 0;
          v15[1] = 0xE000000000000000;
          sub_261B8F8C8();
          swift_bridgeObjectRelease();
          uint64_t v1 = (SEL *)[(SEL *)v1 description];
          sub_261B8F0F8();

          sub_261B8F1C8();
          swift_bridgeObjectRelease();
        }
      }
      return (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
    }
  }
  sub_261B8B848();
  if (!swift_dynamicCastClass()) {
    goto LABEL_18;
  }
  uint64_t v7 = v0;
  uint64_t v8 = (void *)sub_261B8B838();
  id v9 = objc_msgSend(v8, sel_goalTypeIdentifier);

  uint64_t v1 = _HKWorkoutGoalType.color.getter((uint64_t)v9);
  return v1;
}

id static PacerWorkoutConfiguration.displayColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
}

uint64_t WorkoutConfiguration.displayDetail(_:)(void *a1)
{
  uint64_t v3 = sub_261B8BD28();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8B848();
  if (swift_dynamicCastClass())
  {
    id v7 = v1;
    uint64_t v8 = (void *)sub_261B8B838();
    id v9 = objc_msgSend(v8, sel_goalTypeIdentifier);

    if (v9)
    {
      id v10 = (void *)sub_261B8B838();
      id v11 = (void *)sub_261B8BA28();
      uint64_t v12 = FIUIDistanceTypeForActivityType();

      uint64_t v13 = NLSessionActivityGoal.displayString(formattingManager:distanceType:localizedOpenString:)(a1, v12, 0, 0, 0);
      unint64_t v15 = v14;

      unint64_t v54 = v13;
      unint64_t v55 = v15;
      sub_261A029C4();
      uint64_t v16 = sub_261B8F758();
      swift_bridgeObjectRelease();
    }
    else
    {

      return 0;
    }
    return v16;
  }
  sub_261B8B988();
  if (swift_dynamicCastClass())
  {
    id v17 = v1;
    id v18 = (void *)sub_261B8B978();
    uint64_t v16 = sub_261B8B938();

    return v16;
  }
  sub_261B8B8E8();
  if (swift_dynamicCastClass())
  {
    id v19 = v1;
    uint64_t v20 = RaceWorkoutConfiguration.cityAndLengthTitle(_:)(a1);
    if (!v21)
    {
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F87D10], v3);
      uint64_t v16 = (uint64_t)RaceWorkoutConfiguration.displayDistanceFor(_:formatter:)((uint64_t)v6, a1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return v16;
    }
    goto LABEL_9;
  }
  sub_261B8B918();
  if (swift_dynamicCastClass())
  {
    id v22 = v1;
    char v23 = (void *)sub_261B8B8F8();
    id v24 = objc_msgSend(v23, sel_goalTypeIdentifier);

    uint64_t v25 = (void *)sub_261B8B8F8();
    objc_msgSend(v25, sel_doubleValue);
    double v27 = v26;

    char v28 = (void *)sub_261B8BA28();
    id v29 = objc_msgSend(a1, sel_localizedCompactGoalDescriptionForGoalType_goalValue_activityType_, v24, v28, v27);

    if (v29)
    {
      uint64_t v30 = sub_261B8F0F8();
      uint64_t v32 = v31;
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v32 = 0;
    }
    uint64_t v37 = (void *)sub_261B8B908();
    id v38 = objc_msgSend(v37, sel_goalTypeIdentifier);

    uint64_t v39 = (void *)sub_261B8B908();
    objc_msgSend(v39, sel_doubleValue);
    double v41 = v40;

    uint64_t v42 = (void *)sub_261B8BA28();
    id v43 = objc_msgSend(a1, sel_localizedGoalDescriptionForGoalType_goalValue_activityType_, v38, v42, v41);

    if (v43 && (uint64_t v44 = sub_261B8F0F8(), v46 = v45, v43, v32) && v46)
    {
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v47 = (id)qword_26B416688;
      sub_261B8AA48();

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_261B92AA0;
      uint64_t v49 = MEMORY[0x263F8D310];
      *(void *)(v48 + 56) = MEMORY[0x263F8D310];
      unint64_t v50 = sub_261A2B2E8();
      *(void *)(v48 + 32) = v30;
      *(void *)(v48 + 4sub_261A34804(0, 1, 2, 0) = v32;
      *(void *)(v48 + 96) = v49;
      *(void *)(v48 + 104) = v50;
      *(void *)(v48 + 64) = v50;
      *(void *)(v48 + 72) = v44;
      *(void *)(v48 + 8sub_261A34804(0, 1, 2, 0) = v46;
      uint64_t v16 = sub_261B8F118();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

      return 0;
    }
    return v16;
  }
  sub_261B8B818();
  if (swift_dynamicCastClass())
  {
    id v19 = v1;
    uint64_t v33 = sub_261B8B808();
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v36 = HIBYTE(v35) & 0xF;
    if ((v35 & 0x2000000000000000) == 0) {
      uint64_t v36 = v33 & 0xFFFFFFFFFFFFLL;
    }
    if (v36) {
      uint64_t v20 = sub_261B8B808();
    }
    else {
      uint64_t v20 = sub_261B8F148();
    }
LABEL_9:
    uint64_t v16 = v20;

    return v16;
  }
  unint64_t v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  sub_261B8F8C8();
  swift_bridgeObjectRelease();
  unint64_t v54 = 0xD00000000000002FLL;
  unint64_t v55 = 0x8000000261B9FA50;
  id v52 = objc_msgSend(v1, sel_description);
  sub_261B8F0F8();

  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_261B8F9C8();
  __break(1u);
  return result;
}

uint64_t WorkoutConfiguration.displayName(formattingManager:)(void *a1)
{
  sub_261B8B848();
  if (swift_dynamicCastClass())
  {
    id v3 = v1;
    uint64_t v4 = (void *)sub_261B8B838();
    id v5 = objc_msgSend(v4, sel_goalTypeIdentifier);

    uint64_t v6 = _HKWorkoutGoalType.displayName(formattingManager:)(a1, (uint64_t)v5);
    return v6;
  }
  sub_261B8B988();
  if (!swift_dynamicCastClass())
  {
    sub_261B8B8E8();
    if (swift_dynamicCastClass())
    {
      if (qword_26B416690 == -1) {
        goto LABEL_12;
      }
      goto LABEL_16;
    }
    sub_261B8B918();
    if (swift_dynamicCastClass())
    {
      if (qword_26B416690 == -1) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_261B8B818();
      if (!swift_dynamicCastClass())
      {
        sub_261B8F8C8();
        swift_bridgeObjectRelease();
        id v10 = objc_msgSend(v1, sel_description);
        sub_261B8F0F8();

        sub_261B8F1C8();
        swift_bridgeObjectRelease();
        uint64_t result = sub_261B8F9C8();
        __break(1u);
        return result;
      }
      if (qword_26B416690 == -1)
      {
LABEL_12:
        swift_beginAccess();
        id v8 = (id)qword_26B416688;
        uint64_t v9 = sub_261B8AA48();

        return v9;
      }
    }
LABEL_16:
    swift_once();
    goto LABEL_12;
  }
  return sub_261B8F148();
}

uint64_t static IntervalWorkoutConfiguration.displayName.getter()
{
  return sub_261B8F148();
}

uint64_t static RaceWorkoutConfiguration.displayName.getter()
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_26B416688;
  uint64_t v1 = sub_261B8AA48();

  return v1;
}

uint64_t static PacerWorkoutConfiguration.displayName.getter()
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_26B416688;
  uint64_t v1 = sub_261B8AA48();

  return v1;
}

uint64_t static MultiSportWorkoutConfiguration.displayName.getter()
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_26B416688;
  uint64_t v1 = sub_261B8AA48();

  return v1;
}

uint64_t WorkoutConfiguration.displayNameShort(formattingManager:)(void *a1)
{
  sub_261B8B848();
  if (swift_dynamicCastClass())
  {
    id v3 = v1;
    uint64_t v4 = (void *)sub_261B8B838();
    id v5 = objc_msgSend(v4, sel_goalTypeIdentifier);

    uint64_t v6 = _HKWorkoutGoalType.displayNameShort(formattingManager:)(a1, (uint64_t)v5);
    return v6;
  }
  else
  {
    return WorkoutConfiguration.displayName(formattingManager:)(a1);
  }
}

uint64_t RaceWorkoutConfiguration.cityAndLengthTitle(_:)(void *a1)
{
  uint64_t v2 = sub_261B8BD28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8B8C8();
  unint64_t v8 = v7;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F87D10], v2);
  unint64_t v9 = (unint64_t)RaceWorkoutConfiguration.displayDistanceFor(_:formatter:)((uint64_t)v5, a1);
  unint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v12 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v12 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12) {
    goto LABEL_10;
  }
  uint64_t v13 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v13 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (v13)
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v14 = (id)qword_26B416688;
    sub_261B8AA48();

    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_261B92AA0;
    uint64_t v16 = MEMORY[0x263F8D310];
    *(void *)(v15 + 56) = MEMORY[0x263F8D310];
    unint64_t v17 = sub_261A2B2E8();
    *(void *)(v15 + 32) = v9;
    *(void *)(v15 + 4sub_261A34804(0, 1, 2, 0) = v11;
    *(void *)(v15 + 96) = v16;
    *(void *)(v15 + 104) = v17;
    *(void *)(v15 + 64) = v17;
    *(void *)(v15 + 72) = v6;
    *(void *)(v15 + 8sub_261A34804(0, 1, 2, 0) = v8;
    uint64_t v18 = sub_261B8F118();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v18;
}

id RaceWorkoutConfiguration.displayDistanceFor(_:formatter:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_261B8CE88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8BD28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x263F87D10])
  {
    sub_261B8B8A8();
    double v14 = v13;
  }
  else if (v12 == *MEMORY[0x263F87D08])
  {
    sub_261B8B878();
    double v14 = v15;
  }
  else
  {
    sub_261B8C648();
    uint64_t v16 = sub_261B8CE78();
    os_log_type_t v17 = sub_261B8F4B8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = v5;
      id v19 = v18;
      *(_WORD *)uint64_t v18 = 0;
      uint64_t v20 = v19;
      uint64_t v5 = v32;
      MEMORY[0x263E4E970](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_261B8B8A8();
    double v14 = v21;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  id v22 = (void *)sub_261B8BA28();
  uint64_t v23 = FIUIDistanceTypeForActivityType();

  id result = objc_msgSend(a2, sel_unitManager);
  if (result)
  {
    uint64_t v25 = result;
    id v26 = objc_msgSend(result, sel_userDistanceUnitForDistanceType_, v23);

    id v27 = objc_msgSend(a2, sel_localizedStringWithDistanceInMeters_distanceUnit_unitStyle_decimalPrecision_, v26, 2, 2, v14);
    if (v27)
    {
      uint64_t v28 = sub_261B8F0F8();
      uint64_t v30 = v29;

      uint64_t v37 = v28;
      uint64_t v38 = v30;
      uint64_t v35 = 32;
      unint64_t v36 = 0xE100000000000000;
      uint64_t v33 = 0;
      unint64_t v34 = 0xE000000000000000;
      sub_261A029C4();
      id v27 = (id)sub_261B8F788();
      swift_bridgeObjectRelease();
    }
    return v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t WorkoutConfiguration.titleForPreview(_:)(void *a1)
{
  sub_261B8B848();
  if (swift_dynamicCastClass())
  {
    uint64_t v3 = qword_26B416690;
    id v4 = v1;
    if (v3 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v5 = (id)qword_26B416688;
    sub_261B8AA48();

    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_261B92AA0;
    unint64_t v7 = (void *)sub_261B8BA28();
    id v8 = objc_msgSend(v7, sel_localizedName, 0xE000000000000000);

    uint64_t v9 = sub_261B8F0F8();
    uint64_t v11 = v10;

    uint64_t v12 = MEMORY[0x263F8D310];
    *(void *)(v6 + 56) = MEMORY[0x263F8D310];
    unint64_t v13 = sub_261A2B2E8();
    *(void *)(v6 + 64) = v13;
    *(void *)(v6 + 32) = v9;
    *(void *)(v6 + 4sub_261A34804(0, 1, 2, 0) = v11;
    double v14 = (void *)sub_261B8B838();
    id v15 = objc_msgSend(v14, sel_goalTypeIdentifier);

    uint64_t v16 = _HKWorkoutGoalType.displayName(formattingManager:)(a1, (uint64_t)v15);
    *(void *)(v6 + 96) = v12;
    *(void *)(v6 + 104) = v13;
    *(void *)(v6 + 72) = v16;
    *(void *)(v6 + 8sub_261A34804(0, 1, 2, 0) = v17;
    uint64_t v18 = sub_261B8F118();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_261B8B918();
    if (swift_dynamicCastClass())
    {
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v19 = (id)qword_26B416688;
      sub_261B8AA48();

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_261B92AA0;
      double v21 = (void *)sub_261B8BA28();
      id v22 = objc_msgSend(v21, sel_localizedName, 0xE000000000000000);

      uint64_t v23 = sub_261B8F0F8();
      uint64_t v25 = v24;

      uint64_t v26 = MEMORY[0x263F8D310];
      *(void *)(v20 + 56) = MEMORY[0x263F8D310];
      unint64_t v27 = sub_261A2B2E8();
      *(void *)(v20 + 64) = v27;
      *(void *)(v20 + 32) = v23;
      *(void *)(v20 + 4sub_261A34804(0, 1, 2, 0) = v25;
      id v28 = (id)qword_26B416688;
      uint64_t v29 = sub_261B8AA48();
      uint64_t v31 = v30;

      *(void *)(v20 + 96) = v26;
      *(void *)(v20 + 104) = v27;
      *(void *)(v20 + 72) = v29;
      *(void *)(v20 + 8sub_261A34804(0, 1, 2, 0) = v31;
      uint64_t v18 = sub_261B8F118();
      swift_bridgeObjectRelease();
    }
    else
    {
      return WorkoutConfiguration.displayDetail(_:)(a1);
    }
  }
  return v18;
}

BOOL WorkoutConfiguration.displayDetailUseLowercaseSmallCaps.getter()
{
  sub_261B8B988();
  BOOL result = 0;
  if (!swift_dynamicCastClass())
  {
    sub_261B8B818();
    if (!swift_dynamicCastClass())
    {
      sub_261B8B848();
      if (!swift_dynamicCastClass()) {
        return 1;
      }
      id v2 = v0;
      uint64_t v3 = (void *)sub_261B8B838();
      id v4 = objc_msgSend(v3, sel_goalTypeIdentifier);

      if (v4) {
        return 1;
      }
    }
  }
  return result;
}

id static IntervalWorkoutConfiguration.displayColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
}

id static RaceWorkoutConfiguration.displayColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
}

SEL *WorkoutConfiguration.displayColorForCurrentContrastMode.getter()
{
  id v1 = v0;
  uint64_t v2 = sub_261B8C218();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8BAA8();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 != *MEMORY[0x263F87DF0])
  {
    if (v6 == *MEMORY[0x263F87E08])
    {
      id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
      id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.721568627, 0.588235294, 0.980392157, 1.0);
      uint64_t v10 = (SEL *)(id)FIUIColorForCurrentContrastMode();

      if (v10) {
        return v10;
      }
      __break(1u);
    }
    if (v6 == *MEMORY[0x263F87DF8])
    {
      id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
      id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.521568627, 1.0, 0.835294118, 1.0);
      uint64_t v10 = (SEL *)(id)FIUIColorForCurrentContrastMode();

      if (v10) {
        return v10;
      }
      __break(1u);
    }
    if (v6 == *MEMORY[0x263F87E00])
    {
      id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.623529412, 1.0, 0.992156863, 1.0);
      uint64_t v10 = (SEL *)(id)FIUIColorForCurrentContrastMode();

      if (v10) {
        return v10;
      }
      __break(1u);
    }
    if (v6 != *MEMORY[0x263F87DE8]) {
      goto LABEL_26;
    }
    double v14 = self;
    id v15 = objc_msgSend(v14, sel_keyColors);
    if (v15)
    {
      uint64_t v16 = v15;
      id v1 = objc_msgSend(v15, sel_nonGradientTextColor);

      if (v1)
      {
        id v17 = objc_msgSend(v14, sel_keyColors);
        if (v17)
        {
          uint64_t v18 = v17;
          id v19 = objc_msgSend(v17, sel_nonGradientTextColor);

          if (v19)
          {
            uint64_t v10 = (SEL *)(id)FIUIColorForCurrentContrastMode();

            if (v10) {
              return v10;
            }
            goto LABEL_24;
          }
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          while (1)
          {
LABEL_25:
            sub_261B8F9C8();
            __break(1u);
LABEL_26:
            v21[0] = 0;
            v21[1] = 0xE000000000000000;
            sub_261B8F8C8();
            swift_bridgeObjectRelease();
            id v1 = objc_msgSend(v1, sel_description, 0xD00000000000002ELL, 0x8000000261B9F9D0);
            sub_261B8F0F8();

            sub_261B8F1C8();
            swift_bridgeObjectRelease();
          }
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  sub_261B8B848();
  if (!swift_dynamicCastClass()) {
    goto LABEL_25;
  }
  id v7 = v0;
  id v8 = (void *)sub_261B8B838();
  id v9 = objc_msgSend(v8, sel_goalTypeIdentifier);

  uint64_t v10 = _HKWorkoutGoalType.colorForCurrentContrastMode.getter((uint64_t)v9);
  return v10;
}

id static IntervalWorkoutConfiguration.highContrastDisplayColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithDisplayP3Red_green_blue_alpha_, 0.721568627, 0.588235294, 0.980392157, 1.0);
}

id static RaceWorkoutConfiguration.highContrastDisplayColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithRed_green_blue_alpha_, 0.521568627, 1.0, 0.835294118, 1.0);
}

id static PacerWorkoutConfiguration.highContrastDisplayColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithDisplayP3Red_green_blue_alpha_, 0.623529412, 1.0, 0.992156863, 1.0);
}

void _s11WorkoutCore010MultiSportA13ConfigurationC0A2UIE12displayColorSo7UIColorCvgZ_0()
{
  id v0 = objc_msgSend(self, sel_keyColors);
  if (!v0)
  {
    __break(1u);
    goto LABEL_5;
  }
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_nonGradientTextColor);

  if (!v2) {
LABEL_5:
  }
    __break(1u);
}

id WorkoutConfiguration.displayPlatterColor.getter()
{
  id v1 = v0;
  uint64_t v2 = sub_261B8C218();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8BAA8();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 != *MEMORY[0x263F87DF0])
  {
    if (v6 == *MEMORY[0x263F87E08])
    {
      id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
      id v10 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.22);
    }
    else if (v6 == *MEMORY[0x263F87DF8])
    {
      id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
      id v10 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.22);
    }
    else
    {
      if (v6 != *MEMORY[0x263F87E00])
      {
        if (v6 != *MEMORY[0x263F87DE8]) {
          goto LABEL_19;
        }
        id v11 = objc_msgSend(self, sel_keyColors);
        if (v11)
        {
          id v12 = v11;
          id v1 = objc_msgSend(v11, sel_nonGradientTextColor);

          if (v1)
          {
            id v10 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.16);
            goto LABEL_14;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        while (1)
        {
LABEL_18:
          sub_261B8F9C8();
          __break(1u);
LABEL_19:
          v15[0] = 0;
          v15[1] = 0xE000000000000000;
          sub_261B8F8C8();
          swift_bridgeObjectRelease();
          id v1 = objc_msgSend(v1, sel_description, 0xD00000000000002ELL, 0x8000000261B9F9D0);
          sub_261B8F0F8();

          sub_261B8F1C8();
          swift_bridgeObjectRelease();
        }
      }
      id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
      id v10 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.22);
    }
LABEL_14:
    id v9 = v10;
    goto LABEL_15;
  }
  sub_261B8B848();
  if (!swift_dynamicCastClass()) {
    goto LABEL_18;
  }
  id v1 = v0;
  id v7 = (void *)sub_261B8B838();
  id v8 = objc_msgSend(v7, sel_goalTypeIdentifier);

  id v9 = _HKWorkoutGoalType.platterColor.getter((uint64_t)v8);
LABEL_15:
  id v13 = v9;

  return v13;
}

id static IntervalWorkoutConfiguration.platterColor.getter()
{
  return sub_261A7473C((SEL *)&selRef_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157);
}

id static RaceWorkoutConfiguration.platterColor.getter()
{
  return sub_261A7473C((SEL *)&selRef_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098);
}

id static PacerWorkoutConfiguration.platterColor.getter()
{
  return sub_261A7473C((SEL *)&selRef_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216);
}

id sub_261A7473C(SEL *a1, double a2, double a3, double a4)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), *a1, a2, a3, a4, 1.0);
  id v5 = objc_msgSend(v4, sel_colorWithAlphaComponent_, 0.22);

  return v5;
}

void static MultiSportWorkoutConfiguration.platterColor.getter()
{
  id v0 = objc_msgSend(self, sel_keyColors);
  if (v0)
  {
    id v1 = v0;
    id v2 = objc_msgSend(v0, sel_nonGradientTextColor);

    if (v2)
    {
      objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.16);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id WorkoutConfiguration.displayThumbnailColor.getter()
{
  id v1 = v0;
  uint64_t v2 = sub_261B8C218();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8BAA8();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x263F87DF0])
  {
    sub_261B8B848();
    if (!swift_dynamicCastClass())
    {
      while (1)
      {
        sub_261B8F9C8();
        __break(1u);
LABEL_15:
        v13[0] = 0;
        v13[1] = 0xE000000000000000;
        sub_261B8F8C8();
        swift_bridgeObjectRelease();
        id v1 = objc_msgSend(v1, sel_description, 0xD00000000000002ELL, 0x8000000261B9F9D0);
        sub_261B8F0F8();

        sub_261B8F1C8();
        swift_bridgeObjectRelease();
      }
    }
    id v7 = v0;
    id v8 = (void *)sub_261B8B838();
    id v9 = objc_msgSend(v8, sel_goalTypeIdentifier);

    id v10 = _HKWorkoutGoalType.gradientStartingColor.getter((uint64_t)v9);
  }
  else
  {
    if (v6 == *MEMORY[0x263F87E08]) {
      return objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.133333333, 0.0941176471, 0.215686275, 1.0);
    }
    if (v6 == *MEMORY[0x263F87DF8]) {
      return objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    }
    if (v6 == *MEMORY[0x263F87E00]) {
      return objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0941176471, 0.196078431, 0.2, 1.0);
    }
    if (v6 != *MEMORY[0x263F87DE8]) {
      goto LABEL_15;
    }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.117647059, 0.160784314, 0.0235294118, 1.0);
  }
  return v10;
}

uint64_t WorkoutConfiguration.displaySymbolName.getter()
{
  id v1 = v0;
  uint64_t v2 = sub_261B8C218();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8BAA8();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x263F87DF0])
  {
    sub_261B8B848();
    if (swift_dynamicCastClass())
    {
      id v7 = v0;
      id v8 = (void *)sub_261B8B838();
      id v9 = objc_msgSend(v8, sel_goalTypeIdentifier);

      unint64_t v10 = 0xD000000000000015;
      id v1 = (id)0x8000000261B9F1D0;
      switch((unint64_t)v9)
      {
        case 0uLL:
          goto LABEL_13;
        case 1uLL:
          unint64_t v10 = 0xD00000000000001CLL;
          goto LABEL_13;
        case 2uLL:
          unint64_t v10 = 0x72656D6974;
          goto LABEL_13;
        case 3uLL:
          unint64_t v10 = 0x656D616C66;
LABEL_13:

          return v10;
        default:
          goto LABEL_17;
      }
    }
    while (1)
    {
LABEL_17:
      sub_261B8F9C8();
      __break(1u);
LABEL_18:
      v12[0] = 0;
      v12[1] = 0xE000000000000000;
      sub_261B8F8C8();
      sub_261B8F1C8();
      id v1 = objc_msgSend(v1, sel_description);
      sub_261B8F0F8();

      sub_261B8F1C8();
      swift_bridgeObjectRelease();
    }
  }
  if (v6 == *MEMORY[0x263F87E08]) {
    return 0x696C632E7473696CLL;
  }
  if (v6 == *MEMORY[0x263F87DF8]) {
    return 0x6574756F72;
  }
  if (v6 == *MEMORY[0x263F87E00]) {
    return 0xD000000000000022;
  }
  if (v6 != *MEMORY[0x263F87DE8]) {
    goto LABEL_18;
  }
  return 0xD00000000000001ALL;
}

uint64_t static IntervalWorkoutConfiguration.displaySymbolName.getter()
{
  return 0x696C632E7473696CLL;
}

uint64_t static RaceWorkoutConfiguration.displaySymbolName.getter()
{
  return 0x6574756F72;
}

unint64_t static PacerWorkoutConfiguration.displaySymbolName.getter()
{
  return 0xD000000000000022;
}

unint64_t static MultiSportWorkoutConfiguration.displaySymbolName.getter()
{
  return 0xD00000000000001ALL;
}

void WorkoutConfiguration.colors.getter(SEL **a1@<X8>)
{
  id v2 = v1;
  uint64_t v4 = sub_261B8C218();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8BAA8();
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x263F87DF0])
  {
    sub_261B8B848();
    if (swift_dynamicCastClass())
    {
      id v2 = v1;
      id v9 = (void *)sub_261B8B838();
      id v10 = objc_msgSend(v9, sel_goalTypeIdentifier);

      switch((unint64_t)v10)
      {
        case 0uLL:
          id v11 = WorkoutConfiguration.displayColor.getter();
          id v12 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.705882353, 1.0, 0.0, 1.0);
          id v13 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.243137255, 0.862745098, 0.0, 1.0);
          double v14 = (SEL *)_HKWorkoutGoalType.gradientStartingColor.getter(0);
          uint64_t v15 = 0;
          goto LABEL_15;
        case 1uLL:
          id v11 = WorkoutConfiguration.displayColor.getter();
          id v12 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.815686275, 1.0, 1.0);
          id v13 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.666666667, 1.0, 1.0);
          double v14 = (SEL *)_HKWorkoutGoalType.gradientStartingColor.getter(1);
          uint64_t v15 = 1;
          goto LABEL_15;
        case 2uLL:
          id v11 = WorkoutConfiguration.displayColor.getter();
          id v12 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 1.0, 0.917647059, 0.0, 1.0);
          id v13 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 1.0, 0.764705882, 0.0, 1.0);
          double v14 = (SEL *)_HKWorkoutGoalType.gradientStartingColor.getter(2);
          uint64_t v15 = 2;
          goto LABEL_15;
        case 3uLL:
          id v11 = WorkoutConfiguration.displayColor.getter();
          id v12 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 1.0, 0.196078431, 0.529411765, 1.0);
          id v13 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.882352941, 0.0, 0.0784313725, 1.0);
          double v14 = (SEL *)_HKWorkoutGoalType.gradientStartingColor.getter(3);
          uint64_t v15 = 3;
LABEL_15:
          id v22 = (SEL *)_HKWorkoutGoalType.gradientEndingColor.getter(v15);

          *a1 = v11;
          a1[1] = v12;
          a1[2] = v13;
          a1[3] = v14;
          a1[4] = v22;
          return;
        default:
          goto LABEL_18;
      }
    }
    while (1)
    {
LABEL_18:
      sub_261B8F9C8();
      __break(1u);
LABEL_19:
      v24[0] = 0;
      v24[1] = 0xE000000000000000;
      sub_261B8F8C8();
      sub_261B8F1C8();
      id v23 = objc_msgSend(v2, sel_description);
      id v2 = (id)sub_261B8F0F8();

      sub_261B8F1C8();
      swift_bridgeObjectRelease();
    }
  }
  if (v8 == *MEMORY[0x263F87E08])
  {
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.415686275, 0.160784314, 0.952941176, 1.0);
    uint64_t v18 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
    id v19 = (SEL *)objc_msgSend(v17, sel_colorWithAlphaComponent_, 0.2);
    id v20 = objc_msgSend(v16, sel_colorWithAlphaComponent_, 0.2);
LABEL_9:
    double v21 = (SEL *)v20;
    *a1 = v18;
    a1[1] = (SEL *)v16;
    a1[2] = (SEL *)v17;
    a1[3] = v19;
    a1[4] = v21;
    return;
  }
  if (v8 == *MEMORY[0x263F87DF8])
  {
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
    uint64_t v18 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    id v19 = (SEL *)objc_msgSend(v17, sel_colorWithAlphaComponent_, 0.2);
    id v20 = objc_msgSend(v16, sel_colorWithAlphaComponent_, 0.2);
    goto LABEL_9;
  }
  if (v8 == *MEMORY[0x263F87E00])
  {
    sub_261B8B918();
    static PacerWorkoutConfiguration.colors.getter(a1);
  }
  else
  {
    if (v8 != *MEMORY[0x263F87DE8]) {
      goto LABEL_19;
    }
    sub_261B8B818();
    static MultiSportWorkoutConfiguration.colors.getter(a1);
  }
}

id static IntervalWorkoutConfiguration.colors.getter@<X0>(void *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.415686275, 0.160784314, 0.952941176, 1.0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
  id v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);
  id result = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.2);
  *a1 = v4;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = result;
  return result;
}

id static RaceWorkoutConfiguration.colors.getter@<X0>(void *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  id v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);
  id result = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.2);
  *a1 = v4;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = result;
  return result;
}

id static PacerWorkoutConfiguration.colors.getter@<X0>(void *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.105882353, 0.654901961, 0.607843137, 1.0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
  id v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);
  id result = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.2);
  *a1 = v4;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = result;
  return result;
}

void static MultiSportWorkoutConfiguration.colors.getter(void *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_keyColors);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v2, sel_nonGradientTextColor);

    if (v4)
    {
      id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.717647059, 1.0, 0.0, 1.0);
      id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.215686275, 0.980392157, 0.0, 1.0);
      id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0823529412, 0.109803922, 0.00784313725, 1.0);
      id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.145098039, 0.196078431, 0.0666666667, 1.0);
      *a1 = v4;
      a1[1] = v5;
      a1[2] = v6;
      a1[3] = v7;
      a1[4] = v8;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t WorkoutConfiguration.logDisplayName.getter()
{
  id v1 = v0;
  uint64_t v2 = sub_261B8C218();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8AE38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8BAB8();
  sub_261A7AA54(&qword_26A945890, MEMORY[0x263F07508]);
  uint64_t v19 = sub_261B8FB78();
  uint64_t v20 = v10;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_261B8F1C8();
  sub_261B8BAA8();
  sub_261A7AA54(&qword_26A945898, MEMORY[0x263F87E10]);
  sub_261B8FB78();
  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_261B8F1C8();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_261A7AAD4;
  *(void *)(v12 + 24) = v11;
  uint64_t v17 = (uint64_t)sub_261A7AB30;
  unint64_t v18 = v12;
  v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9458A0);
  sub_261B8F128();
  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  sub_261B8F1C8();
  id v13 = (void *)sub_261B8BA28();
  id v14 = objc_msgSend(v13, sel_description);
  sub_261B8F0F8();

  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  uint64_t v15 = v19;
  if (sub_261B8BA58())
  {
    uint64_t v17 = 0x6469766F7270202CLL;
    unint64_t v18 = 0xEB000000003D7265;
    sub_261B8BF48();
    sub_261B8F1C8();
    swift_bridgeObjectRelease();
    sub_261B8F1C8();
    swift_release();
    swift_bridgeObjectRelease();
    return v19;
  }
  return v15;
}

uint64_t WorkoutConfiguration.firstActivityType.getter()
{
  sub_261B8B818();
  if (swift_dynamicCastClass())
  {
    id v1 = v0;
    uint64_t result = sub_261B8B7F8();
    if ((result & 0xC000000000000001) != 0)
    {
      id v3 = (id)MEMORY[0x263E4D7B0](0, result);
      goto LABEL_5;
    }
    if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v3 = *(id *)(result + 32);
LABEL_5:
      uint64_t v4 = v3;
      swift_bridgeObjectRelease();
      uint64_t v5 = sub_261B8BA28();

      return v5;
    }
    __break(1u);
  }
  else
  {
    return sub_261B8BA28();
  }
  return result;
}

uint64_t WorkoutConfiguration.accessibilityIdentifier.getter()
{
  sub_261B8B848();
  if (swift_dynamicCastClass())
  {
    id v1 = v0;
    uint64_t v2 = (void *)sub_261B8B838();
    objc_msgSend(v2, sel_goalTypeIdentifier);

    uint64_t v3 = _sSo18_HKWorkoutGoalTypeV9WorkoutUIE23accessibilityIdentifierSSvg_0();
    return v3;
  }
  sub_261B8B988();
  if (swift_dynamicCastClass())
  {
    uint64_t v4 = aCustom;
LABEL_11:
    swift_beginAccess();
    uint64_t v3 = *(void *)v4;
    swift_bridgeObjectRetain();
    return v3;
  }
  sub_261B8B8E8();
  if (swift_dynamicCastClass())
  {
    uint64_t v4 = aRaceRoute;
    goto LABEL_11;
  }
  sub_261B8B918();
  if (swift_dynamicCastClass())
  {
    uint64_t v4 = aPacer;
    goto LABEL_11;
  }
  sub_261B8B818();
  if (swift_dynamicCastClass())
  {
    uint64_t v4 = aMultisport;
    goto LABEL_11;
  }
  sub_261B8F8C8();
  sub_261B8F1C8();
  id v6 = objc_msgSend(v0, sel_description);
  sub_261B8F0F8();

  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_261B8F9C8();
  __break(1u);
  return result;
}

void WorkoutConfiguration.displayImage.getter()
{
  sub_261B8B8E8();
  if (swift_dynamicCastClass())
  {
    id v1 = v0;
    uint64_t v2 = sub_261B8B8D8();
    unint64_t v4 = v3;
    id v5 = objc_allocWithZone(MEMORY[0x263F827E8]);
    id v6 = (void *)sub_261B8AC08();
    id v7 = objc_msgSend(v5, sel_initWithData_, v6);
    sub_261A340C4(v2, v4);

    if (v7)
    {
      sub_261B8E908();

      return;
    }
  }
  sub_261B8B818();
  if (swift_dynamicCastClass())
  {
    uint64_t v8 = (void *)sub_261B8BA28();
    id v9 = (id)FIUIStaticScalableWorkoutIconImageWithPadding();

    if (v9)
    {
      id v10 = objc_msgSend(v9, sel_imageWithRenderingMode_, 2);

      sub_261B8E908();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    WorkoutConfiguration.displaySymbolName.getter();
    sub_261B8E948();
  }
}

uint64_t WorkoutConfiguration.detailDisplayImage.getter()
{
  sub_261B8B8E8();
  if (!swift_dynamicCastClass())
  {
    sub_261B8B818();
    if (!swift_dynamicCastClass()) {
      WorkoutConfiguration.displaySymbolName.getter();
    }
  }
  return sub_261B8E948();
}

BOOL WorkoutConfiguration.canBeModified.getter()
{
  uint64_t v0 = sub_261B8BA58();
  if (v0) {
    swift_release();
  }
  return v0 == 0;
}

uint64_t WorkoutConfiguration.canBeShared.getter()
{
  if (swift_dynamicCastClass()) {
    return 0;
  }
  if (sub_261B8BA58())
  {
    swift_release();
    return 0;
  }
  return 1;
}

uint64_t WorkoutConfiguration.canBeSaved.getter()
{
  sub_261B8B848();
  if (swift_dynamicCastClass())
  {
    id v1 = v0;
    uint64_t v2 = (void *)sub_261B8B838();
    id v3 = objc_msgSend(v2, sel_goalTypeIdentifier);

    if (!v3) {
      return 0;
    }
  }
  uint64_t result = sub_261B8BA58();
  if (result)
  {
    swift_release();
    return 1;
  }
  return result;
}

BOOL WorkoutConfiguration.showExternalProviderDescription.getter()
{
  uint64_t v0 = sub_261B8BA58();
  if (v0) {
    swift_release();
  }
  return v0 != 0;
}

uint64_t sub_261A764D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446D8) - 8;
  MEMORY[0x270FA5388](v46);
  uint64_t v45 = (uint64_t *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9446E0);
  MEMORY[0x270FA5388](v6 - 8);
  id v43 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943388) - 8;
  MEMORY[0x270FA5388](v44);
  id v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943390);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v47 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945958) - 8;
  MEMORY[0x270FA5388](v50);
  uint64_t v48 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945948) - 8;
  MEMORY[0x270FA5388](v51);
  uint64_t v49 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  sub_261A029C4();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_261B8E3D8();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_261B8E8C8();
  uint64_t v19 = sub_261B8E318();
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  swift_release();
  sub_261A02A18(v14, v16, v18);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = sub_261B8E348();
  uint64_t v28 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v43, 1, 1, v27);
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = v45;
  sub_2619F86F0(v28, (uint64_t)v45 + *(int *)(v46 + 36), &qword_26A9446E0);
  uint64_t *v30 = v29;
  sub_2619F86F0((uint64_t)v30, (uint64_t)&v9[*(int *)(v44 + 44)], &qword_26A9446D8);
  *(void *)id v9 = v19;
  *((void *)v9 + sub_261A34804(3, 0, 0, 1) = v21;
  unsigned char v9[16] = v23 & 1;
  *((void *)v9 + 3) = v25;
  *((void *)v9 + 4) = KeyPath;
  v9[40] = 0;
  sub_261A001D0(v19, v21, v23 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2619F8754((uint64_t)v30, &qword_26A9446D8);
  sub_2619F8754(v28, &qword_26A9446E0);
  sub_261A02A18(v19, v21, v23 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_261B8ECA8();
  uint64_t v32 = v47;
  sub_2619FEADC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v47, 0.0, 1, 0.0, 1, v31, v33);
  sub_2619F8754((uint64_t)v9, &qword_26A943388);
  uint64_t v34 = sub_261B8E228();
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = v48;
  sub_2619F86F0(v32, v48, &qword_26A943390);
  uint64_t v37 = (uint64_t *)(v36 + *(int *)(v50 + 44));
  *uint64_t v37 = v35;
  v37[1] = v34;
  sub_2619F8754(v32, &qword_26A943390);
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = v49;
  sub_2619F86F0(v36, v49, &qword_26A945958);
  uint64_t v40 = v39 + *(int *)(v51 + 44);
  *(void *)uint64_t v40 = v38;
  *(void *)(v40 + 8) = 0;
  *(unsigned char *)(v40 + 16) = 1;
  sub_2619F8754(v36, &qword_26A945958);
  sub_2619F86F0(v39, v52, &qword_26A945948);
  return sub_2619F8754(v39, &qword_26A945948);
}

uint64_t sub_261A769B8()
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_26B416688;
  sub_261B8AA48();

  id v1 = (void *)sub_261B8BA28();
  unsigned int v2 = objc_msgSend(v1, sel_requiresLocationDisambiguation, 0xE000000000000000);

  id v3 = (void *)sub_261B8BA28();
  unint64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (void *)sub_261B8F658();

    id v6 = objc_msgSend(v5, sel_localizedName);
    uint64_t v7 = sub_261B8F0F8();
    uint64_t v47 = v8;

    id v9 = (void *)sub_261B8BA28();
    uint64_t v10 = (void *)sub_261B8F658();

    id v11 = objc_msgSend(v10, sel_localizedName);
    uint64_t v12 = sub_261B8F0F8();
    uint64_t v14 = v13;

    id v15 = (id)qword_26B416688;
    sub_261B8AA48();

    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_261B92AA0;
    uint64_t v17 = MEMORY[0x263F8D310];
    *(void *)(v16 + 56) = MEMORY[0x263F8D310];
    unint64_t v18 = sub_261A2B2E8();
    *(void *)(v16 + 32) = v7;
    *(void *)(v16 + 4sub_261A34804(0, 1, 2, 0) = v47;
    *(void *)(v16 + 96) = v17;
    *(void *)(v16 + 104) = v18;
    *(void *)(v16 + 64) = v18;
    *(void *)(v16 + 72) = v12;
    *(void *)(v16 + 8sub_261A34804(0, 1, 2, 0) = v14;
    uint64_t v19 = sub_261B8F0C8();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_261B93F70;
    *(void *)(v22 + 56) = v17;
    *(void *)(v22 + 64) = v18;
    *(void *)(v22 + 32) = v19;
  }
  else
  {
    unsigned int v23 = objc_msgSend(v3, sel_requiresSwimmingLocationDisambiguation);

    if (v23)
    {
      uint64_t v24 = (void *)sub_261B8BA28();
      uint64_t v25 = (void *)sub_261B8F658();

      id v26 = objc_msgSend(v25, sel_localizedName);
      uint64_t v27 = sub_261B8F0F8();
      uint64_t v29 = v28;

      uint64_t v30 = (void *)sub_261B8BA28();
      uint64_t v31 = (void *)sub_261B8F658();

      id v32 = objc_msgSend(v31, sel_localizedName);
      uint64_t v33 = sub_261B8F0F8();
      uint64_t v35 = v34;

      id v36 = (id)qword_26B416688;
      sub_261B8AA48();

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_261B92AA0;
      uint64_t v38 = MEMORY[0x263F8D310];
      *(void *)(v37 + 56) = MEMORY[0x263F8D310];
      unint64_t v39 = sub_261A2B2E8();
      *(void *)(v37 + 32) = v27;
      *(void *)(v37 + 4sub_261A34804(0, 1, 2, 0) = v29;
      *(void *)(v37 + 96) = v38;
      *(void *)(v37 + 104) = v39;
      *(void *)(v37 + 64) = v39;
      *(void *)(v37 + 72) = v33;
      *(void *)(v37 + 8sub_261A34804(0, 1, 2, 0) = v35;
      uint64_t v40 = sub_261B8F0C8();
      uint64_t v21 = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_261B93F70;
      *(void *)(v22 + 56) = v38;
      *(void *)(v22 + 64) = v39;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_261B93F70;
      uint64_t v42 = (void *)sub_261B8BA28();
      id v43 = objc_msgSend(v42, sel_localizedName);

      uint64_t v40 = sub_261B8F0F8();
      uint64_t v21 = v44;

      *(void *)(v22 + 56) = MEMORY[0x263F8D310];
      *(void *)(v22 + 64) = sub_261A2B2E8();
    }
    *(void *)(v22 + 32) = v40;
  }
  *(void *)(v22 + 4sub_261A34804(0, 1, 2, 0) = v21;
  uint64_t v45 = sub_261B8F0C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t WorkoutConfiguration.saveConfigurationText()@<X0>(uint64_t a1@<X8>)
{
  sub_261A769B8();
  sub_261A029C4();
  uint64_t result = sub_261B8E3D8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t WorkoutConfiguration.externalProviderDescriptionHeaderStack()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_261B8DBF8();
  *(void *)(a1 + 8) = 0x4014000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9458A8);
  return sub_261A77004(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_261A77004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v108 = a2;
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9458F8);
  MEMORY[0x270FA5388](v94);
  uint64_t v96 = (uint64_t)v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945900);
  uint64_t v109 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v90 = (uint64_t)v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_261B8AFC8();
  uint64_t v93 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v92 = (char *)v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945908);
  MEMORY[0x270FA5388](v102);
  uint64_t v95 = (char *)v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945910);
  MEMORY[0x270FA5388](v99);
  uint64_t v101 = (uint64_t)v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945918);
  uint64_t v8 = MEMORY[0x270FA5388](v100);
  uint64_t v106 = (uint64_t)v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v105 = (char *)v89 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v91 = (uint64_t)v89 - v13;
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)v89 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v89 - v20;
  uint64_t v22 = sub_261B8ADD8();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v98 = (char *)v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v89 - v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945920);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  char v104 = (char *)v89 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v110 = (uint64_t)v89 - v31;
  sub_261B8BA68();
  id v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v33 = v32(v21, 1, v22);
  uint64_t v103 = v23;
  if (v33 == 1)
  {
    sub_2619F8754((uint64_t)v21, &qword_26A943B38);
    sub_261B8BA38();
    if (v32(v19, 1, v22) == 1)
    {
      sub_2619F8754((uint64_t)v19, &qword_26A943B38);
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945928);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v110, 1, 1, v34);
      uint64_t v35 = v107;
      uint64_t v36 = (uint64_t)v104;
      uint64_t v37 = (uint64_t)v105;
    }
    else
    {
      v89[1] = a1;
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v98, v19, v22);
      uint64_t v51 = v92;
      sub_261B8AFA8();
      char v52 = sub_261B8AF38();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v51, v97);
      uint64_t v37 = (uint64_t)v105;
      if (v52)
      {
        uint64_t v97 = v22;
        uint64_t v35 = v107;
        uint64_t v36 = (uint64_t)v104;
        if (qword_26B416690 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v53 = (id)qword_26B416688;
        uint64_t v54 = sub_261B8AA48();
        uint64_t v56 = v55;

        uint64_t v57 = v90;
        sub_261A764D4(v54, v56, v90);
        swift_bridgeObjectRelease();
        sub_2619F86F0(v57, v96, &qword_26A945900);
        swift_storeEnumTagMultiPayload();
        sub_261A7AFC0();
        sub_261A7B2EC();
        uint64_t v58 = (uint64_t)v95;
        sub_261B8DD68();
        sub_2619F8754(v57, &qword_26A945900);
        uint64_t v59 = v97;
      }
      else
      {
        if (qword_26B416690 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v61 = (id)qword_26B416688;
        sub_261B8AA48();

        unint64_t v62 = self;
        uint64_t v63 = (void *)sub_261B8AD48();
        id v64 = objc_msgSend(v62, sel_stringWithDayNameAndShortMonthFromDate_, v63);

        uint64_t v36 = (uint64_t)v104;
        if (v64)
        {
          uint64_t v65 = sub_261B8F0F8();
          uint64_t v67 = v66;

          __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
          uint64_t v68 = swift_allocObject();
          *(_OWORD *)(v68 + 16) = xmmword_261B93F70;
          *(void *)(v68 + 56) = MEMORY[0x263F8D310];
          *(void *)(v68 + 64) = sub_261A2B2E8();
          *(void *)(v68 + 32) = v65;
          *(void *)(v68 + 4sub_261A34804(0, 1, 2, 0) = v67;
          uint64_t v69 = sub_261B8F0C8();
          uint64_t v71 = v70;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v72 = v91;
          sub_261A764D4(v69, v71, v91);
          uint64_t v73 = 0;
          uint64_t v59 = v22;
        }
        else
        {
          uint64_t v73 = 1;
          uint64_t v59 = v22;
          uint64_t v72 = v91;
        }
        swift_bridgeObjectRelease();
        uint64_t v35 = v107;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56))(v72, v73, 1, v107);
        sub_2619F86F0(v72, v96, &qword_26A945918);
        swift_storeEnumTagMultiPayload();
        sub_261A7AFC0();
        sub_261A7B2EC();
        uint64_t v58 = (uint64_t)v95;
        sub_261B8DD68();
        sub_2619F8754(v72, &qword_26A945918);
      }
      sub_2619F86F0(v58, v101, &qword_26A945908);
      swift_storeEnumTagMultiPayload();
      sub_261A7B2EC();
      sub_261A7B360();
      sub_261B8DD68();
      sub_2619F8754(v58, &qword_26A945908);
      (*(void (**)(char *, uint64_t))(v103 + 8))(v98, v59);
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945928);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v36, 0, 1, v74);
      sub_261A7B3DC(v36, v110);
    }
  }
  else
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    uint64_t v97 = v22;
    v38(v27, v21, v22);
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v39 = (id)qword_26B416688;
    sub_261B8AA48();

    uint64_t v40 = self;
    uint64_t v41 = (void *)sub_261B8AD48();
    id v42 = objc_msgSend(v40, sel_stringWithDayNameAndShortMonthFromDate_, v41);

    uint64_t v35 = v107;
    uint64_t v36 = (uint64_t)v104;
    if (v42)
    {
      uint64_t v43 = sub_261B8F0F8();
      uint64_t v45 = v44;

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_261B93F70;
      *(void *)(v46 + 56) = MEMORY[0x263F8D310];
      *(void *)(v46 + 64) = sub_261A2B2E8();
      *(void *)(v46 + 32) = v43;
      *(void *)(v46 + 4sub_261A34804(0, 1, 2, 0) = v45;
      uint64_t v47 = sub_261B8F0C8();
      uint64_t v49 = v48;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_261A764D4(v47, v49, (uint64_t)v15);
      uint64_t v50 = 0;
    }
    else
    {
      uint64_t v50 = 1;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v109 + 56))(v15, v50, 1, v35);
    sub_2619F86F0((uint64_t)v15, v101, &qword_26A945918);
    swift_storeEnumTagMultiPayload();
    sub_261A7B2EC();
    sub_261A7B360();
    sub_261B8DD68();
    sub_2619F8754((uint64_t)v15, &qword_26A945918);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v27, v97);
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945928);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v36, 0, 1, v60);
    sub_261A7B3DC(v36, v110);
    uint64_t v37 = (uint64_t)v105;
  }
  if (sub_261B8BA58())
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v75 = (id)qword_26B416688;
    sub_261B8AA48();

    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = xmmword_261B93F70;
    uint64_t v77 = sub_261B8BF18();
    uint64_t v79 = v78;
    *(void *)(v76 + 56) = MEMORY[0x263F8D310];
    *(void *)(v76 + 64) = sub_261A2B2E8();
    *(void *)(v76 + 32) = v77;
    *(void *)(v76 + 4sub_261A34804(0, 1, 2, 0) = v79;
    uint64_t v80 = sub_261B8F0C8();
    uint64_t v82 = v81;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_261A764D4(v80, v82, v37);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v83 = 0;
  }
  else
  {
    uint64_t v83 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56))(v37, v83, 1, v35);
  uint64_t v84 = v110;
  sub_2619F86F0(v110, v36, &qword_26A945920);
  uint64_t v85 = v106;
  sub_2619F86F0(v37, v106, &qword_26A945918);
  uint64_t v86 = v108;
  sub_2619F86F0(v36, v108, &qword_26A945920);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945930);
  sub_2619F86F0(v85, v86 + *(int *)(v87 + 48), &qword_26A945918);
  sub_2619F8754(v37, &qword_26A945918);
  sub_2619F8754(v84, &qword_26A945920);
  sub_2619F8754(v85, &qword_26A945918);
  return sub_2619F8754(v36, &qword_26A945920);
}

uint64_t WorkoutConfiguration.externalProviderDescriptionHeaderListSection()()
{
  return sub_261B8EC28();
}

uint64_t sub_261A77FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9458D8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9458C8);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_261B8DBF8();
  *((void *)v6 + sub_261A34804(3, 0, 0, 1) = 0x4014000000000000;
  v6[16] = 0;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9458A8);
  sub_261A77004(a1, (uint64_t)&v6[*(int *)(v11 + 44)]);
  v15[1] = sub_261B8E888();
  swift_retain();
  uint64_t v12 = sub_261B8EB28();
  sub_2619F86F0((uint64_t)v6, (uint64_t)v10, &qword_26A9458D8);
  swift_release();
  *(void *)&v10[*(int *)(v8 + 44)] = v12;
  sub_2619F8754((uint64_t)v6, &qword_26A9458D8);
  sub_2619F86F0((uint64_t)v10, a2, &qword_26A9458C8);
  uint64_t v13 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A9458B0) + 36);
  *(_OWORD *)uint64_t v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  *(unsigned char *)(v13 + 32) = 1;
  return sub_2619F8754((uint64_t)v10, &qword_26A9458C8);
}

id static IntervalWorkoutConfiguration.displayListColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithDisplayP3Red_green_blue_alpha_, 0.122, 0.086, 0.196, 1.0);
}

uint64_t static IntervalWorkoutConfiguration.accessibilityIdentifier.getter()
{
  return sub_261A7A7A4((uint64_t *)aCustom);
}

uint64_t static IntervalWorkoutConfiguration.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_261A7A808(a1, a2, aCustom, &qword_26A945840);
}

uint64_t (*static IntervalWorkoutConfiguration.accessibilityIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t RaceWorkoutConfiguration.displayDateFor(_:)(uint64_t a1)
{
  uint64_t v2 = sub_261B8AEF8();
  uint64_t v67 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v64 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9455A0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v66 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9458E0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v65 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8AFB8();
  uint64_t v72 = *(void *)(v8 - 8);
  uint64_t v73 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v71 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_261B8AFC8();
  uint64_t v10 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_261B8CE88();
  uint64_t v69 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_261B8BD28();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_261B8ADD8();
  uint64_t v76 = *(void *)(v78 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v78);
  uint64_t v70 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v63 - v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v19, v16);
  int v25 = *MEMORY[0x263F87D10];
  uint64_t v68 = v2;
  if (v24 == v25)
  {
    sub_261B8B898();
    uint64_t v26 = v23;
  }
  else
  {
    uint64_t v74 = v23;
    if (v24 == *MEMORY[0x263F87D08])
    {
      uint64_t v26 = v74;
      sub_261B8B868();
    }
    else
    {
      sub_261B8C648();
      uint64_t v27 = sub_261B8CE78();
      os_log_type_t v28 = sub_261B8F4B8();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        MEMORY[0x263E4E970](v29, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v69 + 8))(v15, v13);
      uint64_t v30 = v74;
      sub_261B8B898();
      uint64_t v31 = v19;
      uint64_t v26 = v30;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v31, v16);
    }
  }
  id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  sub_261B8AFA8();
  char v33 = sub_261B8AF38();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v35 = v77;
  v34(v12, v77);
  uint64_t v36 = v78;
  uint64_t v37 = v76;
  if (v33 & 1) != 0 || (sub_261B8AFA8(), char v38 = sub_261B8AF58(), v34(v12, v35), (v38))
  {
    objc_msgSend(v32, sel_setDateStyle_, 2);
    objc_msgSend(v32, sel_setTimeStyle_, 0);
    objc_msgSend(v32, sel_setDoesRelativeDateFormatting_, 1);
LABEL_11:
    id v39 = (void *)sub_261B8AD48();
    id v40 = objc_msgSend(v32, sel_stringFromDate_, v39);

    uint64_t v41 = sub_261B8F0F8();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v36);
    return v41;
  }
  id v75 = v32;
  sub_261B8AFA8();
  uint64_t v43 = v70;
  sub_261B8ADA8();
  uint64_t v44 = v26;
  uint64_t v45 = v37;
  uint64_t v47 = v71;
  uint64_t v46 = v72;
  uint64_t v48 = v73;
  (*(void (**)(char *, void, uint64_t))(v72 + 104))(v71, *MEMORY[0x263F07830], v73);
  uint64_t v74 = v44;
  LOBYTE(v44) = sub_261B8AF98();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  uint64_t v36 = v78;
  uint64_t v37 = v45;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v78);
  v34(v12, v77);
  if (v44)
  {
    uint64_t v49 = (void *)sub_261B8F0B8();
    id v32 = v75;
    objc_msgSend(v75, sel_setDateFormat_, v49);

    uint64_t v26 = v74;
    goto LABEL_11;
  }
  id v32 = v75;
  id v50 = objc_msgSend(v75, sel_locale);
  if (v50)
  {
    uint64_t v51 = v50;
    char v52 = v64;
    sub_261B8AE78();

    id v53 = v66;
    uint64_t v54 = v67;
    uint64_t v55 = v68;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v52, v68);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v53, 0, 1, v55);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48))(v53, 1, v55);
    uint64_t v56 = (uint64_t)v65;
    uint64_t v26 = v74;
    if (result != 1)
    {
      sub_261B8AEA8();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
      uint64_t v57 = sub_261B8AE98();
      uint64_t v58 = *(void *)(v57 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57) == 1)
      {
        sub_2619F8754(v56, &qword_26A9458E0);
      }
      else
      {
        uint64_t v59 = sub_261B8AE88();
        uint64_t v61 = v60;
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);
        if (v59 == 20035 && v61 == 0xE200000000000000
          || (sub_261B8FBA8() & 1) != 0
          || v59 == 22356 && v61 == 0xE200000000000000
          || (sub_261B8FBA8() & 1) != 0
          || v59 == 19272 && v61 == 0xE200000000000000
          || (sub_261B8FBA8() & 1) != 0
          || v59 == 20054 && v61 == 0xE200000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_261B8FBA8();
          swift_bridgeObjectRelease();
        }
      }
      unint64_t v62 = (void *)sub_261B8F0B8();
      objc_msgSend(v32, sel_setLocalizedDateFormatFromTemplate_, v62);

      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56))(v66, 1, 1, v68);
  }
  __break(1u);
  return result;
}

id RaceWorkoutConfiguration.configurationViewTitle(_:)(void *a1)
{
  uint64_t v2 = sub_261B8BD28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8B8C8();
  uint64_t v8 = v7;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F87D10], v2);
  id v9 = RaceWorkoutConfiguration.displayDistanceFor(_:formatter:)((uint64_t)v5, a1);
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v6 && v8 == 0xE000000000000000
    || (sub_261B8FBA8() & 1) != 0
    || (!v9 ? (BOOL v12 = v11 == 0xE000000000000000) : (BOOL v12 = 0), v12 || (sub_261B8FBA8() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (v9) {
      BOOL v13 = 0;
    }
    else {
      BOOL v13 = v11 == 0xE000000000000000;
    }
    if (v13 || (sub_261B8FBA8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    v15[0] = v9;
    v15[1] = v11;
    sub_261B8F1C8();
    sub_261B8F1C8();
    swift_bridgeObjectRelease();
    return (id)v15[0];
  }
  return v9;
}

uint64_t RaceWorkoutConfiguration.displayDurationFor(_:formatter:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_261B8CE88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8BD28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x263F87D10])
  {
    sub_261B8B8B8();
    double v14 = v13;
  }
  else if (v12 == *MEMORY[0x263F87D08])
  {
    sub_261B8B888();
    double v14 = v15;
  }
  else
  {
    sub_261B8C648();
    uint64_t v16 = sub_261B8CE78();
    os_log_type_t v17 = sub_261B8F4B8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = a2;
      uint64_t v19 = v18;
      *(_WORD *)uint64_t v18 = 0;
      uint64_t v20 = v19;
      a2 = v27;
      MEMORY[0x263E4E970](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_261B8B8B8();
    double v14 = v21;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  id v22 = objc_msgSend(a2, sel_stringWithDuration_durationFormat_, 2, v14);
  if (!v22) {
    return 0;
  }
  uint64_t v23 = v22;
  uint64_t v24 = sub_261B8F0F8();

  return v24;
}

uint64_t RaceWorkoutConfiguration.displayPaceValueFor(_:formatter:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_261B8CE88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8BD28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x263F87D10])
  {
    sub_261B8B8A8();
    double v14 = v13;
    sub_261B8B8B8();
    double v16 = v15;
  }
  else if (v12 == *MEMORY[0x263F87D08])
  {
    sub_261B8B878();
    double v14 = v17;
    sub_261B8B888();
    double v16 = v18;
  }
  else
  {
    sub_261B8C648();
    uint64_t v19 = sub_261B8CE78();
    os_log_type_t v20 = sub_261B8F4B8();
    if (os_log_type_enabled(v19, v20))
    {
      double v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = a2;
      id v22 = v21;
      *(_WORD *)double v21 = 0;
      uint64_t v23 = v22;
      a2 = v37;
      MEMORY[0x263E4E970](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_261B8B8A8();
    double v14 = v24;
    sub_261B8B8B8();
    double v16 = v25;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  id v26 = objc_msgSend(self, sel_meterUnit);
  id v27 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v26, v14);

  os_log_type_t v28 = (void *)sub_261B8BA28();
  uint64_t v29 = FIUIPaceFormatForWorkoutActivityType();

  uint64_t v30 = (void *)sub_261B8BA28();
  uint64_t v31 = FIUIDistanceTypeForActivityType();

  id v32 = objc_msgSend(a2, sel_localizedPaceStringWithDistance_overDuration_paceFormat_distanceType_, v27, v29, v31, v16);
  if (v32)
  {
    char v33 = v32;
    uint64_t v34 = sub_261B8F0F8();
  }
  else
  {

    return 0;
  }
  return v34;
}

id RaceWorkoutConfiguration.displayPaceUnitWith(_:)(void *a1)
{
  uint64_t v2 = (void *)sub_261B8BA28();
  uint64_t v3 = FIUIPaceFormatForWorkoutActivityType();

  uint64_t v4 = (void *)sub_261B8BA28();
  uint64_t v5 = FIUIDistanceTypeForActivityType();

  id result = objc_msgSend(a1, sel_unitManager);
  if (result)
  {
    uint64_t v7 = result;
    id v8 = objc_msgSend(result, sel_userDistanceUnitForDistanceType_, v5);

    if (v3 == 4)
    {
      id v9 = objc_msgSend(a1, sel_localizedSpeedUnitStringForDistanceUnit_unitStyle_, v8, 1);
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = sub_261B8F0F8();
      }
      else
      {
        return 0;
      }
    }
    else
    {
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v12 = (id)qword_26B416688;
      unint64_t v13 = 0xE000000000000000;
      sub_261B8AA48();

      id v14 = objc_msgSend(a1, sel_localizedShortUnitStringForDistanceUnit_, v8, 0xE000000000000000);
      if (v14)
      {
        double v15 = v14;
        uint64_t v16 = sub_261B8F0F8();
        unint64_t v13 = v17;
      }
      else
      {
        uint64_t v16 = 0;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_261B93F70;
      *(void *)(v18 + 56) = MEMORY[0x263F8D310];
      *(void *)(v18 + 64) = sub_261A2B2E8();
      *(void *)(v18 + 32) = v16;
      *(void *)(v18 + 4sub_261A34804(0, 1, 2, 0) = v13;
      uint64_t v11 = sub_261B8F118();
      swift_bridgeObjectRelease();
    }
    return (id)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id static RaceWorkoutConfiguration.behindGhostColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
}

id static RaceWorkoutConfiguration.expiredColors.getter@<X0>(void *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.654901961, 0.654901961, 0.654901961, 1.0);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.133333333, 0.133333333, 0.133333333, 1.0);
  id v4 = v2;
  id v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);
  id result = objc_msgSend(v4, sel_colorWithAlphaComponent_, 0.2);
  *a1 = v4;
  a1[1] = v4;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = result;
  return result;
}

id static RaceWorkoutConfiguration.raceCompleteColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithRed_green_blue_alpha_, 0.6, 0.6, 0.6, 1.0);
}

id static RaceWorkoutConfiguration.raceGhostColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithDisplayP3Red_green_blue_alpha_, 0.568627451, 0.568627451, 0.568627451, 1.0);
}

id RaceWorkoutConfiguration.colorsFor(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_261B8C268();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x263F87E70])
  {
LABEL_2:
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.654901961, 0.654901961, 0.654901961, 1.0);
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.133333333, 0.133333333, 0.133333333, 1.0);
    id v11 = v9;
    id v12 = objc_msgSend(v10, sel_colorWithAlphaComponent_, 0.2);
    id result = objc_msgSend(v11, sel_colorWithAlphaComponent_, 0.2);
    *a2 = v11;
    a2[1] = v11;
    a2[2] = v10;
    a2[3] = v12;
LABEL_8:
    a2[4] = result;
    return result;
  }
  if (v8 == *MEMORY[0x263F87E68])
  {
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    id v17 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.2);
    id v18 = objc_msgSend(v14, sel_colorWithAlphaComponent_, 0.2);
LABEL_7:
    id result = v18;
    *a2 = v16;
    a2[1] = v14;
    a2[2] = v15;
    a2[3] = v17;
    goto LABEL_8;
  }
  if (v8 == *MEMORY[0x263F87E78])
  {
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.2, 0.0823529412, 0.0666666667, 1.0);
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
    id v17 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.2);
    id v18 = objc_msgSend(v14, sel_colorWithAlphaComponent_, 0.2);
    goto LABEL_7;
  }
  if (v8 == *MEMORY[0x263F87E88] || v8 == *MEMORY[0x263F87E80]) {
    goto LABEL_2;
  }
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  id v23 = objc_msgSend(v21, sel_colorWithAlphaComponent_, 0.2);
  id v24 = objc_msgSend(v20, sel_colorWithAlphaComponent_, 0.2);
  *a2 = v22;
  a2[1] = v20;
  a2[2] = v21;
  a2[3] = v23;
  a2[4] = v24;
  return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RaceWorkoutConfiguration.colorsFor(_:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_261B8C268();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8BDD8();
  RaceWorkoutConfiguration.colorsFor(_:)((uint64_t)v5, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id static RaceWorkoutConfiguration.routeBackgroundColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithDisplayP3Red_green_blue_alpha_, 0.0196078431, 0.619607843, 0.560784314, 1.0);
}

id _s11WorkoutCore04RaceA13ConfigurationC0A2UIE19routeHighlightColorSo7UIColorCvgZ_0()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
}

id static RaceWorkoutConfiguration.metricStoppedUpdatingColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithDisplayP3Red_green_blue_alpha_, 0.564705882, 0.564705882, 0.564705882, 1.0);
}

uint64_t static RaceWorkoutConfiguration.accessibilityIdentifier.getter()
{
  return sub_261A7A7A4((uint64_t *)aRaceRoute);
}

uint64_t static RaceWorkoutConfiguration.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_261A7A808(a1, a2, aRaceRoute, &aRaceRoute[1]);
}

uint64_t (*static RaceWorkoutConfiguration.accessibilityIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

id PacerWorkoutConfiguration.localizedPaceString(formatter:)(void *a1)
{
  uint64_t v2 = (void *)sub_261B8BA28();
  uint64_t v3 = FIUIPaceFormatForWorkoutActivityType();

  uint64_t v4 = (void *)sub_261B8BA28();
  uint64_t v5 = FIUIDistanceTypeForActivityType();

  uint64_t v6 = (void *)sub_261B8B8F8();
  id v7 = objc_msgSend(v6, sel_value);

  int v8 = (void *)sub_261B8B908();
  objc_msgSend(v8, sel_doubleValue);
  double v10 = v9;

  id v11 = objc_msgSend(a1, sel_localizedPaceStringWithDistance_overDuration_paceFormat_distanceType_, v7, v3, v5, v10);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = sub_261B8F0F8();

  if (v3 != 4) {
    return (id)v12;
  }
  id result = objc_msgSend(a1, sel_unitManager);
  if (result)
  {
    id v14 = result;
    id v15 = objc_msgSend(result, sel_paceDistanceUnitForDistanceType_, v5);

    id v16 = objc_msgSend(a1, sel_localizedSpeedUnitStringForDistanceUnit_unitStyle_, v15, 1);
    if (v16)
    {
      id v17 = v16;
      sub_261B8F0F8();

      sub_261B8F1C8();
      swift_bridgeObjectRelease();
      return (id)v12;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

id PacerWorkoutConfiguration.pickerPaceDescriptionString(formatter:)(void *a1)
{
  uint64_t v2 = (void *)sub_261B8BA28();
  uint64_t v3 = FIUIPaceFormatForWorkoutActivityType();

  if (v3 == 4)
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)qword_26B416688;
    sub_261B8AA48();

    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_261B93F70;
    id v6 = PacerWorkoutConfiguration.localizedPaceString(formatter:)(a1);
    uint64_t v8 = v7;
    *(void *)(v5 + 56) = MEMORY[0x263F8D310];
    *(void *)(v5 + 64) = sub_261A2B2E8();
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 4sub_261A34804(0, 1, 2, 0) = v8;
    sub_261B8F118();
    swift_bridgeObjectRelease();
    sub_261A029C4();
    uint64_t v9 = sub_261B8F768();
    swift_bridgeObjectRelease();
    return (id)v9;
  }
  id result = objc_msgSend(a1, sel_unitManager);
  if (result)
  {
    id v11 = result;
    uint64_t v12 = (void *)sub_261B8BA28();
    id v13 = objc_msgSend(v11, sel_userDistanceHKUnitForActivityType_, v12);

    id v14 = (void *)sub_261B8BA28();
    uint64_t v15 = FIUIDistanceTypeForActivityType();

    id result = objc_msgSend(a1, sel_localizedPaceUnitStringWithDistanceType_distanceUnit_, v15, MEMORY[0x263E4DE70](v13));
    if (result)
    {
      id v16 = result;
      uint64_t v17 = sub_261B8F0F8();
      uint64_t v19 = v18;

      id v20 = PacerWorkoutConfiguration.localizedPaceString(formatter:)(a1);
      uint64_t v22 = v21;
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v23 = (id)qword_26B416688;
      sub_261B8AA48();

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_261B92AA0;
      uint64_t v25 = MEMORY[0x263F8D310];
      *(void *)(v24 + 56) = MEMORY[0x263F8D310];
      unint64_t v26 = sub_261A2B2E8();
      *(void *)(v24 + 32) = v20;
      *(void *)(v24 + 4sub_261A34804(0, 1, 2, 0) = v22;
      *(void *)(v24 + 96) = v25;
      *(void *)(v24 + 104) = v26;
      *(void *)(v24 + 64) = v26;
      *(void *)(v24 + 72) = v17;
      *(void *)(v24 + 8sub_261A34804(0, 1, 2, 0) = v19;
      sub_261B8F118();
      swift_bridgeObjectRelease();
      sub_261A029C4();
      uint64_t v9 = sub_261B8F768();
      swift_bridgeObjectRelease();

      return (id)v9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static PacerWorkoutConfiguration.accessibilityIdentifier.getter()
{
  return sub_261A7A7A4((uint64_t *)aPacer);
}

uint64_t static PacerWorkoutConfiguration.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_261A7A808(a1, a2, aPacer, &qword_26A945860);
}

uint64_t (*static PacerWorkoutConfiguration.accessibilityIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

id static MultiSportWorkoutConfiguration.displayListColor.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F825C8]);
  return objc_msgSend(v0, sel_initWithDisplayP3Red_green_blue_alpha_, 0.09, 0.141, 0.0, 1.0);
}

id sub_261A7A5F8()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.216, 0.302, 0.0, 1.0);
  qword_26A945868 = (uint64_t)result;
  return result;
}

id static MultiSportWorkoutConfiguration.primaryPlatterColor.getter()
{
  return sub_261A7A748(&qword_26A942D20, (void **)&qword_26A945868);
}

id sub_261A7A668()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.149, 0.212, 0.0, 1.0);
  qword_26A945870 = (uint64_t)result;
  return result;
}

id static MultiSportWorkoutConfiguration.secondaryPlatterColor.getter()
{
  return sub_261A7A748(&qword_26A942D28, (void **)&qword_26A945870);
}

id sub_261A7A6D8()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.106, 0.149, 0.0, 1.0);
  qword_26A945878 = (uint64_t)result;
  return result;
}

id static MultiSportWorkoutConfiguration.tertiaryPlatterColor.getter()
{
  return sub_261A7A748(&qword_26A942D30, (void **)&qword_26A945878);
}

id sub_261A7A748(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  return v3;
}

uint64_t static MultiSportWorkoutConfiguration.accessibilityIdentifier.getter()
{
  return sub_261A7A7A4((uint64_t *)aMultisport);
}

uint64_t sub_261A7A7A4(uint64_t *a1)
{
  swift_beginAccess();
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static MultiSportWorkoutConfiguration.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_261A7A808(a1, a2, aMultisport, &aMultisport[1]);
}

uint64_t sub_261A7A808(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static MultiSportWorkoutConfiguration.accessibilityIdentifier.modify())()
{
  return j__swift_endAccess;
}

id _s11WorkoutCore04RaceA13ConfigurationC0A2UIE19performanceColorForySo7UIColorCSdFZ_0(double a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x263F825C8]);
  if (a1 >= 0.0)
  {
    id v3 = objc_msgSend(v2, sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  }
  else
  {
    id v3 = objc_msgSend(v2, sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.2, 0.0823529412, 0.0666666667, 1.0);
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  }
  id v6 = v5;
  id v7 = objc_msgSend(v4, sel_colorWithAlphaComponent_, 0.2);

  return v6;
}

uint64_t sub_261A7AA54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A7AA9C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261A7AAD4(void *a1)
{
  return WorkoutConfiguration.displayName(formattingManager:)(a1);
}

uint64_t sub_261A7AAF8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261A7AB30@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_261A7AB64@<X0>(uint64_t a1@<X8>)
{
  return sub_261A77FCC(*(void *)(v1 + 16), a1);
}

unint64_t sub_261A7AB6C()
{
  unint64_t result = qword_26A9458B8;
  if (!qword_26A9458B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9458B0);
    sub_261A7AC0C();
    sub_2619F8AB8(&qword_26A9432F8, &qword_26A943300);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9458B8);
  }
  return result;
}

unint64_t sub_261A7AC0C()
{
  unint64_t result = qword_26A9458C0;
  if (!qword_26A9458C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9458C8);
    sub_2619F8AB8(&qword_26A9458D0, &qword_26A9458D8);
    sub_2619F8AB8(&qword_26A9446A0, &qword_26A9446A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9458C0);
  }
  return result;
}

id _s11WorkoutCore04RaceA13ConfigurationC0A2UIE18pointOuterColorForySo7UIColorCAA0C8PositionOFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_261B8BDE8();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  id v6 = (double *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(double *, uint64_t, uint64_t, double))(v3 + 16))(v6, a1, v2, v4);
  int v7 = (*(uint64_t (**)(double *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x263F87D78])
  {
    (*(void (**)(double *, uint64_t))(v3 + 96))(v6, v2);
    double v8 = *v6;
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.662745098, 1.0, 0.882352941, 1.0);
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 1.0, 0.721568627, 0.682352941, 1.0);
    id v11 = v10;
    if (v8 >= 0.0)
    {
    }
    else
    {

      return v11;
    }
    return v9;
  }
  if (v7 == *MEMORY[0x263F87D88]) {
    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.835294118, 0.835294118, 0.835294118, 1.0);
  }
  id v13 = objc_msgSend(self, sel_whiteColor);
  (*(void (**)(double *, uint64_t))(v3 + 8))(v6, v2);
  return v13;
}

uint64_t sub_261A7AEF4()
{
  return MEMORY[0x263F1A820];
}

uint64_t sub_261A7AF00()
{
  return sub_2619F8AB8(&qword_26A9458D0, &qword_26A9458D8);
}

unint64_t sub_261A7AF40()
{
  unint64_t result = qword_26A9458E8;
  if (!qword_26A9458E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9458F0);
    sub_261A7AB6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9458E8);
  }
  return result;
}

unint64_t sub_261A7AFC0()
{
  unint64_t result = qword_26A945938;
  if (!qword_26A945938)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945900);
    sub_261A7B03C();
    sub_261A7B298();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945938);
  }
  return result;
}

unint64_t sub_261A7B03C()
{
  unint64_t result = qword_26A945940;
  if (!qword_26A945940)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945948);
    sub_261A7B0DC();
    sub_2619F8AB8(&qword_26A9430E8, &qword_26A9430F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945940);
  }
  return result;
}

unint64_t sub_261A7B0DC()
{
  unint64_t result = qword_26A945950;
  if (!qword_26A945950)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945958);
    sub_261A7B17C();
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945950);
  }
  return result;
}

unint64_t sub_261A7B17C()
{
  unint64_t result = qword_26A945960;
  if (!qword_26A945960)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943390);
    sub_261A7B1F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945960);
  }
  return result;
}

unint64_t sub_261A7B1F8()
{
  unint64_t result = qword_26A945968;
  if (!qword_26A945968)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943388);
    sub_261A33A68();
    sub_2619F8AB8(&qword_26A945970, &qword_26A9446D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945968);
  }
  return result;
}

unint64_t sub_261A7B298()
{
  unint64_t result = qword_26A945978;
  if (!qword_26A945978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945978);
  }
  return result;
}

unint64_t sub_261A7B2EC()
{
  unint64_t result = qword_26A945980;
  if (!qword_26A945980)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945918);
    sub_261A7AFC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945980);
  }
  return result;
}

unint64_t sub_261A7B360()
{
  unint64_t result = qword_26A945988;
  if (!qword_26A945988)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945908);
    sub_261A7AFC0();
    sub_261A7B2EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945988);
  }
  return result;
}

uint64_t sub_261A7B3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_261A7B468(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_261B8ADD8();
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    uint64_t v37 = v7;
    ((void (*)(void *, void *))v36)(a1, a2);
    uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    uint64_t v9 = View[5];
    id v10 = (char *)a1 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = sub_261B8EEC8();
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v35(v10, v11, v12);
    uint64_t v13 = View[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    *(void *)((char *)a1 + View[7]) = *(void *)((char *)a2 + View[7]);
    uint64_t v16 = View[8];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = a3[5];
    id v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *((void *)View - 1);
    id v23 = *(unsigned int (**)(char *, uint64_t, int *))(v22 + 48);
    swift_retain();
    if (v23(v21, 1, View))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      v36(v20, v21, v37);
      v35(&v20[View[5]], &v21[View[5]], v12);
      uint64_t v26 = View[6];
      id v27 = &v20[v26];
      os_log_type_t v28 = &v21[v26];
      *(void *)id v27 = *(void *)v28;
      v27[8] = v28[8];
      *(void *)&v20[View[7]] = *(void *)&v21[View[7]];
      uint64_t v29 = View[8];
      uint64_t v30 = &v20[v29];
      uint64_t v31 = &v21[v29];
      *(void *)uint64_t v30 = *(void *)v31;
      v30[8] = v31[8];
      id v32 = *(void (**)(char *, void, uint64_t, int *))(v22 + 56);
      swift_retain();
      v32(v20, 0, 1, View);
    }
    uint64_t v33 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *(void *)((char *)a1 + v33) = *(void *)((char *)a2 + v33);
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_261A7B744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8ADD8();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v7 = a1 + *(int *)(View + 20);
  uint64_t v8 = sub_261B8EEC8();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  swift_release();
  uint64_t v10 = a1 + *(int *)(a2 + 20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(View - 8) + 48))(v10, 1, View);
  if (!result)
  {
    v5(v10, v4);
    v9(v10 + *(int *)(View + 20), v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_261A7B8C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v34(a1, a2, v6);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v8 = View[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_261B8EEC8();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  v33(v9, v10, v11);
  uint64_t v12 = View[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)(a1 + View[7]) = *(void *)(a2 + View[7]);
  uint64_t v15 = View[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v35 = a3;
  uint64_t v18 = a3[5];
  uint64_t v19 = (char *)(a1 + v18);
  id v20 = (char *)(a2 + v18);
  uint64_t v21 = *((void *)View - 1);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, int *))(v21 + 48);
  swift_retain();
  if (v22(v20, 1, View))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v34((uint64_t)v19, (uint64_t)v20, v6);
    v33((uint64_t)&v19[View[5]], (uint64_t)&v20[View[5]], v11);
    uint64_t v24 = View[6];
    uint64_t v25 = &v19[v24];
    uint64_t v26 = &v20[v24];
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    *(void *)&v19[View[7]] = *(void *)&v20[View[7]];
    uint64_t v27 = View[8];
    os_log_type_t v28 = &v19[v27];
    uint64_t v29 = &v20[v27];
    *(void *)os_log_type_t v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = *(void (**)(char *, void, uint64_t, int *))(v21 + 56);
    swift_retain();
    v30(v19, 0, 1, View);
  }
  uint64_t v31 = v35[7];
  *(void *)(a1 + v35[6]) = *(void *)(a2 + v35[6]);
  *(void *)(a1 + v3sub_261A34804(3, 0, 0, 1) = *(void *)(a2 + v31);
  *(unsigned char *)(a1 + v35[8]) = *(unsigned char *)(a2 + v35[8]);
  return a1;
}

uint64_t sub_261A7BB54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v47 + 24);
  v49(a1, a2);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v8 = View[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_261B8EEC8();
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v46 + 24);
  v48(v9, v10);
  uint64_t v12 = View[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  char v15 = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = v15;
  *(void *)(a1 + View[7]) = *(void *)(a2 + View[7]);
  swift_retain();
  swift_release();
  uint64_t v16 = View[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v19 = *v18;
  *(unsigned char *)(v17 + 8) = *((unsigned char *)v18 + 8);
  *(void *)uint64_t v17 = v19;
  char v52 = a3;
  uint64_t v20 = a3[5];
  uint64_t v21 = (char *)(a1 + v20);
  uint64_t v22 = (char *)(a2 + v20);
  uint64_t v23 = *((void *)View - 1);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v23 + 48);
  int v25 = v24(a1 + v20, 1, View);
  int v26 = v24((uint64_t)v22, 1, View);
  if (!v25)
  {
    if (!v26)
    {
      ((void (*)(char *, char *, uint64_t))v49)(v21, v22, v51);
      ((void (*)(char *, char *, uint64_t))v48)(&v21[View[5]], &v22[View[5]], v50);
      uint64_t v38 = View[6];
      id v39 = &v21[v38];
      id v40 = &v22[v38];
      char v41 = v40[8];
      *(void *)id v39 = *(void *)v40;
      v39[8] = v41;
      *(void *)&v21[View[7]] = *(void *)&v22[View[7]];
      swift_retain();
      swift_release();
      uint64_t v42 = View[8];
      uint64_t v43 = &v21[v42];
      uint64_t v44 = &v22[v42];
      uint64_t v45 = *(void *)v44;
      v43[8] = v44[8];
      *(void *)uint64_t v43 = v45;
      goto LABEL_7;
    }
    sub_261A3CA74((uint64_t)v21);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
    memcpy(v21, v22, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v21, v22, v51);
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(&v21[View[5]], &v22[View[5]], v50);
  uint64_t v27 = View[6];
  os_log_type_t v28 = &v21[v27];
  uint64_t v29 = &v22[v27];
  char v30 = v29[8];
  *(void *)os_log_type_t v28 = *(void *)v29;
  v28[8] = v30;
  *(void *)&v21[View[7]] = *(void *)&v22[View[7]];
  uint64_t v31 = View[8];
  id v32 = &v21[v31];
  uint64_t v33 = &v22[v31];
  char v34 = v33[8];
  *(void *)id v32 = *(void *)v33;
  v32[8] = v34;
  uint64_t v35 = *(void (**)(char *, void, uint64_t, int *))(v23 + 56);
  swift_retain();
  v35(v21, 0, 1, View);
LABEL_7:
  *(void *)(a1 + v52[6]) = *(void *)(a2 + v52[6]);
  *(void *)(a1 + v52[7]) = *(void *)(a2 + v52[7]);
  *(unsigned char *)(a1 + v52[8]) = *(unsigned char *)(a2 + v52[8]);
  return a1;
}

uint64_t sub_261A7BF04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v33(a1, a2, v6);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v8 = View[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_261B8EEC8();
  uint64_t v12 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  id v32 = *v12;
  (*v12)(v9, v10, v11);
  uint64_t v13 = View[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  *(void *)(a1 + View[7]) = *(void *)(a2 + View[7]);
  uint64_t v16 = View[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a3[5];
  uint64_t v20 = (char *)(a1 + v19);
  uint64_t v21 = (char *)(a2 + v19);
  uint64_t v22 = *((void *)View - 1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v22 + 48))(a2 + v19, 1, View))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v33((uint64_t)v20, (uint64_t)v21, v6);
    v32((uint64_t)&v20[View[5]], (uint64_t)&v21[View[5]], v11);
    uint64_t v24 = View[6];
    int v25 = &v20[v24];
    int v26 = &v21[v24];
    *(void *)int v25 = *(void *)v26;
    v25[8] = v26[8];
    *(void *)&v20[View[7]] = *(void *)&v21[View[7]];
    uint64_t v27 = View[8];
    os_log_type_t v28 = &v20[v27];
    uint64_t v29 = &v21[v27];
    *(void *)os_log_type_t v28 = *(void *)v29;
    v28[8] = v29[8];
    (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v20, 0, 1, View);
  }
  uint64_t v30 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v3sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + v30);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_261A7C188(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v41 + 40);
  v43(a1, a2);
  uint64_t View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v8 = View[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_261B8EEC8();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v44 = v11;
  uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v40 + 40);
  v42(v9, v10);
  uint64_t v12 = View[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)(a1 + View[7]) = *(void *)(a2 + View[7]);
  swift_release();
  uint64_t v15 = View[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v46 = a3;
  uint64_t v18 = a3[5];
  uint64_t v19 = (char *)(a1 + v18);
  uint64_t v20 = (char *)(a2 + v18);
  uint64_t v21 = *((void *)View - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  int v23 = v22(a1 + v18, 1, View);
  int v24 = v22((uint64_t)v20, 1, View);
  if (!v23)
  {
    if (!v24)
    {
      ((void (*)(char *, char *, uint64_t))v43)(v19, v20, v45);
      ((void (*)(char *, char *, uint64_t))v42)(&v19[View[5]], &v20[View[5]], v44);
      uint64_t v34 = View[6];
      uint64_t v35 = &v19[v34];
      uint64_t v36 = &v20[v34];
      *(void *)uint64_t v35 = *(void *)v36;
      v35[8] = v36[8];
      *(void *)&v19[View[7]] = *(void *)&v20[View[7]];
      swift_release();
      uint64_t v37 = View[8];
      uint64_t v38 = &v19[v37];
      id v39 = &v20[v37];
      *(void *)uint64_t v38 = *(void *)v39;
      v38[8] = v39[8];
      goto LABEL_7;
    }
    sub_261A3CA74((uint64_t)v19);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
    memcpy(v19, v20, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v19, v20, v45);
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v19[View[5]], &v20[View[5]], v44);
  uint64_t v25 = View[6];
  int v26 = &v19[v25];
  uint64_t v27 = &v20[v25];
  *(void *)int v26 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)&v19[View[7]] = *(void *)&v20[View[7]];
  uint64_t v28 = View[8];
  uint64_t v29 = &v19[v28];
  uint64_t v30 = &v20[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v30[8];
  (*(void (**)(char *, void, uint64_t, int *))(v21 + 56))(v19, 0, 1, View);
LABEL_7:
  uint64_t v32 = v46[7];
  *(void *)(a1 + v46[6]) = *(void *)(a2 + v46[6]);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  *(unsigned char *)(a1 + v46[8]) = *(unsigned char *)(a2 + v46[8]);
  return a1;
}

uint64_t sub_261A7C520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A7C534);
}

uint64_t sub_261A7C534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v7 = *(void *)(View - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = View;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_261A7C65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A7C670);
}

uint64_t sub_261A7C670(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  uint64_t v9 = *(void *)(View - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = View;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B416C30);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for TrainingLoadBaselineMarks()
{
  uint64_t result = qword_26A945990;
  if (!qword_26A945990) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_261A7C7D0()
{
  type metadata accessor for TrainingLoadViewModel.ChartPoint(319);
  if (v0 <= 0x3F)
  {
    sub_261A7C8B0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_261A7C8B0()
{
  if (!qword_26B416E08)
  {
    type metadata accessor for TrainingLoadViewModel.ChartPoint(255);
    unint64_t v0 = sub_261B8F6D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B416E08);
    }
  }
}

uint64_t sub_261A7C908()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A7C924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v44 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459C8);
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v40 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v47 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459D8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_261B8D258();
  uint64_t v48 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459C0);
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459B8);
  uint64_t v33 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v45 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459B0);
  uint64_t v38 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v35 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459A8);
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v32 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8DB98();
  sub_261B8ADD8();
  uint64_t v43 = a1;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261B8DB98();
  v54[0] = a3;
  sub_261B8D088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v45;
  uint64_t v18 = v46;
  sub_261B8D248();
  sub_261B8D3F8();
  uint64_t v20 = MEMORY[0x263EFCD48];
  sub_261B8CFD8();
  sub_261A7D408((uint64_t)v54);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v10);
  uint64_t v50 = v10;
  uint64_t v51 = v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_261B8CF78();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v18);
  uint64_t result = sub_261B8DB98();
  if (qword_26A942D38 != -1) {
    uint64_t result = swift_once();
  }
  if (*(void *)(qword_26A953638 + 16))
  {
    uint64_t v23 = *(void *)(qword_26A953638 + 40);
    uint64_t v50 = *(void *)(qword_26A953638 + 32);
    uint64_t v51 = v23;
    swift_bridgeObjectRetain();
    uint64_t v24 = MEMORY[0x263F8D310];
    uint64_t v25 = MEMORY[0x263EFCE58];
    int v26 = v40;
    sub_261B8D088();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v50 = v18;
    uint64_t v51 = OpaqueTypeConformance2;
    uint64_t v27 = swift_getOpaqueTypeConformance2();
    uint64_t v28 = v35;
    uint64_t v29 = v37;
    sub_261B8CF28();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v42);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v29);
    type metadata accessor for TrainingLoadBaselineMarks();
    uint64_t v50 = v29;
    uint64_t v51 = v24;
    uint64_t v52 = v27;
    uint64_t v53 = v25;
    swift_getOpaqueTypeConformance2();
    uint64_t v30 = v32;
    uint64_t v31 = v39;
    sub_261B8CFC8();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v31);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v44, v30, v36);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_261A7D0EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_261B93F70;
  *(void *)(v0 + 32) = 0x656E696C65736162;
  *(void *)(v0 + 4sub_261A34804(0, 1, 2, 0) = 0xE800000000000000;
  sub_261B8E898();
  uint64_t result = sub_261B8D4E8();
  *(void *)(v0 + 48) = result;
  qword_26A953638 = v0;
  return result;
}

uint64_t sub_261A7D17C@<X0>(uint64_t a1@<X8>)
{
  uint64_t View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  if (*(unsigned char *)(v1 + *(int *)(View + 32) + 8))
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459A0);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    return v5(a1, 1, 1, v4);
  }
  else
  {
    MEMORY[0x270FA5388](View);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459A8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9459B0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9459B8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9459C0);
    sub_261B8D258();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_261B8D158();
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9459A0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
  }
}

uint64_t sub_261A7D3E0()
{
  return sub_261B8CEC8();
}

uint64_t sub_261A7D3FC@<X0>(uint64_t a1@<X8>)
{
  return sub_261A7C924(*(void *)(v1 + 16), a1, *(double *)(v1 + 24));
}

uint64_t sub_261A7D408(uint64_t a1)
{
  return a1;
}

unint64_t sub_261A7D438()
{
  unint64_t result = qword_26A9459E8;
  if (!qword_26A9459E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9459F0);
    sub_261A7D4AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9459E8);
  }
  return result;
}

unint64_t sub_261A7D4AC()
{
  unint64_t result = qword_26A9459F8;
  if (!qword_26A9459F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9459A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9459F8);
  }
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.base.getter()
{
  return 0x74756F6B726F57;
}

uint64_t sub_261A7D520()
{
  sub_261B8F8C8();
  uint64_t result = swift_bridgeObjectRelease();
  qword_26A945A00 = 0xD000000000000016;
  *(void *)algn_26A945A08 = 0x8000000261BA0080;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.base.getter()
{
  return sub_261A7F0FC(&qword_26A942D40, &qword_26A945A00);
}

uint64_t sub_261A7D5AC()
{
  if (qword_26A942D40 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945A00;
  uint64_t v2 = *(void *)algn_26A945A08;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945A10 = v1;
  *(void *)algn_26A945A18 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.tvConnectButton.getter()
{
  return sub_261A7F0FC(&qword_26A942D48, &qword_26A945A10);
}

uint64_t sub_261A7D668()
{
  if (qword_26A942D40 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945A00;
  uint64_t v2 = *(void *)algn_26A945A08;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945A20 = v1;
  *(void *)algn_26A945A28 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.predictedActivity.getter()
{
  return sub_261A7F0FC(&qword_26A942D50, &qword_26A945A20);
}

uint64_t sub_261A7D728()
{
  if (qword_26A942D40 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945A00;
  uint64_t v2 = *(void *)algn_26A945A08;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945A30 = v1;
  *(void *)algn_26A945A38 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.guided.getter()
{
  return sub_261A7F0FC(&qword_26A942D58, &qword_26A945A30);
}

uint64_t sub_261A7D7E4()
{
  if (qword_26A942D40 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945A00;
  uint64_t v2 = *(void *)algn_26A945A08;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945A40 = v1;
  *(void *)algn_26A945A48 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.guidedWalk.getter()
{
  return sub_261A7F0FC(&qword_26A942D60, &qword_26A945A40);
}

uint64_t sub_261A7D8A8()
{
  if (qword_26A942D40 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945A00;
  uint64_t v2 = *(void *)algn_26A945A08;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945A50 = v1;
  *(void *)algn_26A945A58 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.guidedRun.getter()
{
  return sub_261A7F0FC(&qword_26A942D68, &qword_26A945A50);
}

uint64_t sub_261A7D968()
{
  if (qword_26A942D40 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945A00;
  uint64_t v2 = *(void *)algn_26A945A08;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945A60 = v1;
  *(void *)algn_26A945A68 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.managed.getter()
{
  return sub_261A7F0FC(&qword_26A942D70, &qword_26A945A60);
}

uint64_t sub_261A7DA24()
{
  if (qword_26A942D40 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945A00;
  uint64_t v2 = *(void *)algn_26A945A08;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945A70 = v1;
  *(void *)algn_26A945A78 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.tip.getter()
{
  return sub_261A7F0FC(&qword_26A942D78, &qword_26A945A70);
}

uint64_t sub_261A7DAD8()
{
  if (qword_26A942D40 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945A00;
  uint64_t v2 = *(void *)algn_26A945A08;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945A80 = v1;
  *(void *)algn_26A945A88 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.addWorkout.getter()
{
  return sub_261A7F0FC(&qword_26A942D80, &qword_26A945A80);
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.configButton.getter()
{
  return 0x75426769666E6F43;
}

uint64_t sub_261A7DBBC()
{
  sub_261B8F8C8();
  uint64_t result = swift_bridgeObjectRelease();
  qword_26A945A90 = 0xD000000000000018;
  *(void *)algn_26A945A98 = 0x8000000261BA0060;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityTypeRoom.base.getter()
{
  return sub_261A7F0FC(&qword_26A942D88, &qword_26A945A90);
}

uint64_t sub_261A7DC48()
{
  sub_261B8F8C8();
  if (qword_26A942D88 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945A90;
  uint64_t v0 = *(void *)algn_26A945A98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = sub_261B8F1C8();
  qword_26A945AA0 = v1;
  *(void *)algn_26A945AA8 = v0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityTypeRoom.createWorkout.getter()
{
  return sub_261A7F0FC(&qword_26A942D90, &qword_26A945AA0);
}

uint64_t sub_261A7DD3C()
{
  sub_261B8F8C8();
  uint64_t result = swift_bridgeObjectRelease();
  qword_26A945AB0 = 0xD000000000000017;
  *(void *)algn_26A945AB8 = 0x8000000261BA0040;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.AlertsEntryView.base.getter()
{
  return sub_261A7F0FC(&qword_26A942D98, &qword_26A945AB0);
}

uint64_t sub_261A7DDC8()
{
  if (qword_26A942D98 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945AB0;
  uint64_t v2 = *(void *)algn_26A945AB8;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945AC0 = v1;
  *(void *)algn_26A945AC8 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.AlertsEntryView.picker.getter()
{
  return sub_261A7F0FC(&qword_26A942DA0, &qword_26A945AC0);
}

unint64_t static WorkoutAccessibilityIdentifier.DeleteButton.base.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_261A7DEA0()
{
  sub_261B8F8C8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_261B8F1C8();
  qword_26A945AD0 = 0xD000000000000014;
  *(void *)algn_26A945AD8 = 0x8000000261B9FF30;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.DeleteButton.deleteWorkout.getter()
{
  return sub_261A7F0FC(&qword_26A942DA8, &qword_26A945AD0);
}

unint64_t static WorkoutAccessibilityIdentifier.MetricPicker.base.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_261A7DF78()
{
  uint64_t result = sub_261B8F1C8();
  qword_26A945AE0 = 0xD000000000000014;
  *(void *)algn_26A945AE8 = 0x8000000261B9FF50;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.MetricPicker.off.getter()
{
  return sub_261A7F0FC(&qword_26A942DB0, &qword_26A945AE0);
}

uint64_t sub_261A7E004()
{
  sub_261B8F8C8();
  uint64_t result = swift_bridgeObjectRelease();
  qword_26A945AF0 = 0xD00000000000001CLL;
  *(void *)algn_26A945AF8 = 0x8000000261BA0020;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.PacerAlertsEntryView.base.getter()
{
  return sub_261A7F0FC(&qword_26A942DB8, &qword_26A945AF0);
}

uint64_t sub_261A7E090()
{
  if (qword_26A942DB8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945AF0;
  uint64_t v2 = *(void *)algn_26A945AF8;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945B00 = v1;
  *(void *)algn_26A945B08 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.PacerAlertsEntryView.toggle.getter()
{
  return sub_261A7F0FC(&qword_26A942DC0, &qword_26A945B00);
}

uint64_t sub_261A7E14C()
{
  sub_261B8F8C8();
  uint64_t result = swift_bridgeObjectRelease();
  qword_26A945B10 = 0xD000000000000016;
  *(void *)algn_26A945B18 = 0x8000000261BA0000;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionMetrics.base.getter()
{
  return sub_261A7F0FC(&qword_26A942DC8, &qword_26A945B10);
}

uint64_t sub_261A7E1D8()
{
  sub_261B8F8C8();
  if (qword_26A942DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945B10;
  uint64_t v0 = *(void *)algn_26A945B18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = sub_261B8F1C8();
  qword_26A945B20 = v1;
  *(void *)algn_26A945B28 = v0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionMetrics.workoutFigure.getter()
{
  return sub_261A7F0FC(&qword_26A942DD0, &qword_26A945B20);
}

uint64_t sub_261A7E2CC()
{
  if (qword_26A942DD0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945B20;
  uint64_t v2 = *(void *)algn_26A945B28;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945B30 = v1;
  *(void *)algn_26A945B38 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionMetrics.multisportFigure.getter()
{
  return sub_261A7F0FC(&qword_26A942DD8, &qword_26A945B30);
}

unint64_t static WorkoutAccessibilityIdentifier.SessionControls.base.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_261A7E3AC()
{
  uint64_t result = sub_261B8F1C8();
  qword_26A945B40 = 0xD000000000000010;
  *(void *)algn_26A945B48 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.endWorkout.getter()
{
  return sub_261A7F0FC(&qword_26A942DE0, &qword_26A945B40);
}

uint64_t sub_261A7E448()
{
  uint64_t result = sub_261B8F1C8();
  qword_26A945B50 = 0xD000000000000010;
  *(void *)algn_26A945B58 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.startWorkout.getter()
{
  return sub_261A7F0FC(&qword_26A942DE8, &qword_26A945B50);
}

uint64_t sub_261A7E4E8()
{
  uint64_t result = sub_261B8F1C8();
  qword_26A945B60 = 0xD000000000000010;
  *(void *)algn_26A945B68 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.quickSwitch.getter()
{
  return sub_261A7F0FC(&qword_26A942DF0, &qword_26A945B60);
}

uint64_t sub_261A7E584()
{
  sub_261B8F8C8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_261B8F1C8();
  qword_26A945B70 = 0xD000000000000010;
  *(void *)algn_26A945B78 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.resumeWorkout.getter()
{
  return sub_261A7F0FC(&qword_26A942DF8, &qword_26A945B70);
}

uint64_t sub_261A7E640()
{
  uint64_t result = sub_261B8F1C8();
  qword_26A945B80 = 0xD000000000000010;
  *(void *)algn_26A945B88 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.pauseWorkout.getter()
{
  return sub_261A7F0FC(&qword_26A942E00, &qword_26A945B80);
}

uint64_t sub_261A7E6E0()
{
  uint64_t result = sub_261B8F1C8();
  qword_26A945B90 = 0xD000000000000010;
  *(void *)algn_26A945B98 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.chooseLane.getter()
{
  return sub_261A7F0FC(&qword_26A942E08, &qword_26A945B90);
}

uint64_t sub_261A7E77C()
{
  sub_261B8F8C8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_261B8F1C8();
  qword_26A945BA0 = 0xD000000000000010;
  *(void *)algn_26A945BA8 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.startMirroring.getter()
{
  return sub_261A7F0FC(&qword_26A942E10, &qword_26A945BA0);
}

uint64_t sub_261A7E838()
{
  sub_261B8F8C8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_261B8F1C8();
  qword_26A945BB0 = 0xD000000000000010;
  *(void *)algn_26A945BB8 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.stopMirroring.getter()
{
  return sub_261A7F0FC(&qword_26A942E18, &qword_26A945BB0);
}

uint64_t sub_261A7E8F4()
{
  sub_261B8F8C8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_261B8F1C8();
  qword_26A945BC0 = 0xD000000000000010;
  *(void *)algn_26A945BC8 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.safetyCheckInSession.getter()
{
  return sub_261A7F0FC(&qword_26A942E20, &qword_26A945BC0);
}

uint64_t sub_261A7E9A8()
{
  uint64_t result = sub_261B8F1C8();
  qword_26A945BD0 = 0xD000000000000010;
  *(void *)algn_26A945BD8 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.markSegment.getter()
{
  return sub_261A7F0FC(&qword_26A942E28, &qword_26A945BD0);
}

uint64_t sub_261A7EA44()
{
  uint64_t result = sub_261B8F1C8();
  qword_26A945BE0 = 0xD000000000000010;
  *(void *)algn_26A945BE8 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.nextInterval.getter()
{
  return sub_261A7F0FC(&qword_26A942E30, &qword_26A945BE0);
}

uint64_t sub_261A7EAE4()
{
  uint64_t result = sub_261B8F1C8();
  qword_26A945BF0 = 0xD000000000000010;
  *(void *)algn_26A945BF8 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.nextLeg.getter()
{
  return sub_261A7F0FC(&qword_26A942E38, &qword_26A945BF0);
}

uint64_t sub_261A7EB78()
{
  uint64_t result = sub_261B8F1C8();
  qword_26A945C00 = 0xD000000000000010;
  *(void *)algn_26A945C08 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.blankSpace.getter()
{
  return sub_261A7F0FC(&qword_26A942E40, &qword_26A945C00);
}

uint64_t sub_261A7EC14()
{
  uint64_t result = sub_261B8F1C8();
  qword_26A945C10 = 0xD000000000000010;
  *(void *)algn_26A945C18 = 0x8000000261B9FF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.preferences.getter()
{
  return sub_261A7F0FC(&qword_26A942E48, &qword_26A945C10);
}

uint64_t sub_261A7ECB0()
{
  sub_261B8F8C8();
  uint64_t result = swift_bridgeObjectRelease();
  qword_26A945C20 = 0xD00000000000001ELL;
  *(void *)algn_26A945C28 = 0x8000000261B9FFC0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.StartOrCreateButtonRow.base.getter()
{
  return sub_261A7F0FC(&qword_26A942E50, &qword_26A945C20);
}

uint64_t sub_261A7ED3C()
{
  sub_261B8F8C8();
  if (qword_26A942E50 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945C20;
  uint64_t v0 = *(void *)algn_26A945C28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = sub_261B8F1C8();
  qword_26A945C30 = v1;
  *(void *)algn_26A945C38 = v0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.StartOrCreateButtonRow.createWorkout.getter()
{
  return sub_261A7F0FC(&qword_26A942E58, &qword_26A945C30);
}

uint64_t sub_261A7EE30()
{
  if (qword_26A942E50 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945C20;
  uint64_t v2 = *(void *)algn_26A945C28;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945C40 = v1;
  *(void *)algn_26A945C48 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.StartOrCreateButtonRow.startWorkout.getter()
{
  return sub_261A7F0FC(&qword_26A942E60, &qword_26A945C40);
}

uint64_t sub_261A7EEF8()
{
  sub_261B8F8C8();
  uint64_t result = swift_bridgeObjectRelease();
  qword_26A945C50 = 0xD000000000000020;
  *(void *)algn_26A945C58 = 0x8000000261B9FF90;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.WorkoutIntervalAlertView.base.getter()
{
  return sub_261A7F0FC(&qword_26A942E68, &qword_26A945C50);
}

uint64_t sub_261A7EF84()
{
  if (qword_26A942E68 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945C50;
  uint64_t v2 = *(void *)algn_26A945C58;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945C60 = v1;
  *(void *)algn_26A945C68 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.WorkoutIntervalAlertView.nextInterval.getter()
{
  return sub_261A7F0FC(&qword_26A942E70, &qword_26A945C60);
}

uint64_t sub_261A7F03C()
{
  if (qword_26A942E68 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A945C50;
  uint64_t v2 = *(void *)algn_26A945C58;
  swift_bridgeObjectRetain();
  uint64_t result = sub_261B8F1C8();
  qword_26A945C70 = v1;
  *(void *)algn_26A945C78 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.WorkoutIntervalAlertView.nextStep.getter()
{
  return sub_261A7F0FC(&qword_26A942E78, &qword_26A945C70);
}

uint64_t sub_261A7F0FC(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t static WorkoutAccessibilityIdentifier.build(_:)()
{
  return sub_261B8F048();
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier()
{
  return &type metadata for WorkoutAccessibilityIdentifier;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.ActivityPicker()
{
  return &type metadata for WorkoutAccessibilityIdentifier.ActivityPicker;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.ActivityTypeRoom()
{
  return &type metadata for WorkoutAccessibilityIdentifier.ActivityTypeRoom;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.AlertsEntryView()
{
  return &type metadata for WorkoutAccessibilityIdentifier.AlertsEntryView;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.DeleteButton()
{
  return &type metadata for WorkoutAccessibilityIdentifier.DeleteButton;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.MetricPicker()
{
  return &type metadata for WorkoutAccessibilityIdentifier.MetricPicker;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.PacerAlertsEntryView()
{
  return &type metadata for WorkoutAccessibilityIdentifier.PacerAlertsEntryView;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.SessionMetrics()
{
  return &type metadata for WorkoutAccessibilityIdentifier.SessionMetrics;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.SessionControls()
{
  return &type metadata for WorkoutAccessibilityIdentifier.SessionControls;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.StartOrCreateButtonRow()
{
  return &type metadata for WorkoutAccessibilityIdentifier.StartOrCreateButtonRow;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.WorkoutIntervalAlertView()
{
  return &type metadata for WorkoutAccessibilityIdentifier.WorkoutIntervalAlertView;
}

uint64_t sub_261A7F254()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_261A7F32C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 56;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    unint64_t v19 = (v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v20 = (v11 + v18) & 0xFFFFFFFFFFFFFFF8;
    long long v22 = *(_OWORD *)(v20 + 16);
    long long v21 = *(_OWORD *)(v20 + 32);
    long long v23 = *(_OWORD *)v20;
    *(void *)(v19 + 48) = *(void *)(v20 + 48);
    *(_OWORD *)(v19 + 16) = v22;
    *(_OWORD *)(v19 + 32) = v21;
    *(_OWORD *)unint64_t v19 = v23;
  }
  return v4;
}

uint64_t sub_261A7F4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return v6(v7);
}

uint64_t sub_261A7F578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  long long v18 = *(_OWORD *)(v16 + 16);
  long long v17 = *(_OWORD *)(v16 + 32);
  long long v19 = *(_OWORD *)v16;
  *(void *)(v15 + 48) = *(void *)(v16 + 48);
  *(_OWORD *)(v15 + 16) = v18;
  *(_OWORD *)(v15 + 32) = v17;
  *(_OWORD *)unint64_t v15 = v19;
  return a1;
}

uint64_t sub_261A7F658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  unint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  void *v15 = *v16;
  v15[1] = v16[1];
  void v15[2] = v16[2];
  v15[3] = v16[3];
  void v15[4] = v16[4];
  void v15[5] = v16[5];
  v15[6] = v16[6];
  return a1;
}

uint64_t sub_261A7F758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  long long v18 = *(_OWORD *)(v16 + 16);
  long long v17 = *(_OWORD *)(v16 + 32);
  long long v19 = *(_OWORD *)v16;
  *(void *)(v15 + 48) = *(void *)(v16 + 48);
  *(_OWORD *)(v15 + 16) = v18;
  *(_OWORD *)(v15 + 32) = v17;
  *(_OWORD *)unint64_t v15 = v19;
  return a1;
}

uint64_t sub_261A7F838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  unint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  void *v15 = *v16;
  v15[1] = v16[1];
  void v15[2] = v16[2];
  v15[3] = v16[3];
  void v15[4] = v16[4];
  void v15[5] = v16[5];
  v15[6] = v16[6];
  return a1;
}

uint64_t sub_261A7F938(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  if (v10 < a2)
  {
    unint64_t v12 = ((*(void *)(*(void *)(v5 - 8) + 64) + (v11 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 56;
    unsigned int v13 = a2 - v10;
    uint64_t v14 = v12 & 0xFFFFFFF8;
    if ((v12 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = v13 + 1;
    }
    if (v15 >= 0x10000) {
      LODWORD(v16) = 4;
    }
    else {
      LODWORD(v16) = 2;
    }
    if (v15 < 0x100) {
      LODWORD(v16) = 1;
    }
    if (v15 >= 2) {
      uint64_t v16 = v16;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)a1 + v12);
        if (!v17) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)a1 + v12);
        if (v17) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x261A7FAE8);
      case 4:
        int v17 = *(int *)((char *)a1 + v12);
        if (!v17) {
          break;
        }
LABEL_21:
        unsigned int v18 = v17 - 1;
        if (v14)
        {
          unsigned int v18 = 0;
          int v19 = *a1;
        }
        else
        {
          int v19 = 0;
        }
        return v10 + (v19 | v18) + 1;
      default:
        break;
    }
  }
  if (!v10) {
    return 0;
  }
  if (v6 >= v8) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
}

void sub_261A7FAFC(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = ((*(void *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 56;
  if (v12 >= a3)
  {
    int v18 = 0;
    int v19 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_17:
      switch(v18)
      {
        case 1:
          a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_41;
        case 4:
          *(_DWORD *)&a1[v14] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 >= v10)
            {
              uint64_t v24 = *(void (**)(void))(v6 + 56);
              v24();
            }
            else
            {
              unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
              long long v23 = *(void (**)(unint64_t))(v9 + 56);
              v23(v22);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v15 = a3 - v12;
    if (((*(_DWORD *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFF8) == 0xFFFFFFC8) {
      unsigned int v16 = v15 + 1;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v16 >= 0x10000) {
      int v17 = 4;
    }
    else {
      int v17 = 2;
    }
    if (v16 < 0x100) {
      int v17 = 1;
    }
    if (v16 >= 2) {
      int v18 = v17;
    }
    else {
      int v18 = 0;
    }
    int v19 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFF8) == 0xFFFFFFC8) {
    int v20 = v19;
  }
  else {
    int v20 = 1;
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFF8) != 0xFFFFFFC8)
  {
    unsigned int v21 = ~v12 + a2;
    bzero(a1, v14);
    *(_DWORD *)a1 = v21;
  }
  switch(v18)
  {
    case 1:
      a1[v14] = v20;
      break;
    case 2:
      *(_WORD *)&a1[v14] = v20;
      break;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x261A7FD5CLL);
    case 4:
      *(_DWORD *)&a1[v14] = v20;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for WorkoutNotificationResultView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_261A7FD9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A7FDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v33 = a2;
  uint64_t v4 = *(char **)(a1 + 24);
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v28 = v4;
  swift_getTupleTypeMetadata3();
  sub_261B8ECE8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = sub_261B8EAF8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&WitnessTable - v7;
  uint64_t v9 = sub_261B8D688();
  uint64_t v31 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&WitnessTable - v10;
  uint64_t v12 = sub_261B8D688();
  uint64_t v32 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v29 = (char *)&WitnessTable - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v30 = (char *)&WitnessTable - v15;
  sub_261B8DBF8();
  uint64_t v34 = v27;
  uint64_t v35 = v28;
  long long v36 = *(_OWORD *)(v3 + 32);
  uint64_t v37 = v2;
  sub_261B8EAE8();
  sub_261B8DFC8();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v28 = v11;
  uint64_t v17 = v16;
  sub_261B8E798();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v3) = sub_261B8DFD8();
  unsigned __int8 v18 = sub_261B8DFF8();
  sub_261B8DFE8();
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v3) {
    sub_261B8DFE8();
  }
  sub_261B8DFE8();
  if (sub_261B8DFE8() != v18) {
    sub_261B8DFE8();
  }
  uint64_t v19 = MEMORY[0x263F18C10];
  uint64_t v40 = v17;
  uint64_t v41 = MEMORY[0x263F18C10];
  uint64_t v20 = swift_getWitnessTable();
  unsigned int v21 = v29;
  unint64_t v22 = v28;
  sub_261B8E798();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v9);
  uint64_t v38 = v20;
  uint64_t v39 = v19;
  swift_getWitnessTable();
  long long v23 = v30;
  sub_261A8FE78(v21, v12);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v32 + 8);
  v24(v21, v12);
  sub_261A8FE78(v23, v12);
  return ((uint64_t (*)(char *, uint64_t))v24)(v23, v12);
}

uint64_t sub_261A80230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v33[1] = a6;
  uint64_t v11 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  v33[0] = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v33 - v14;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  long long v23 = (char *)v33 - v22;
  uint64_t v37 = v24;
  uint64_t v38 = v25;
  uint64_t v39 = v26;
  uint64_t v40 = v27;
  uint64_t v28 = type metadata accessor for WorkoutNotificationResultView();
  sub_261A8FE78(a1 + *(int *)(v28 + 52), a3);
  sub_261A8FE78(a1, a2);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v23, a3);
  uint64_t v35 = 0;
  char v36 = 1;
  uint64_t v37 = v20;
  uint64_t v38 = &v35;
  uint64_t v29 = (char *)v33[0];
  (*(void (**)(void, char *, uint64_t))(v11 + 16))(v33[0], v15, a2);
  uint64_t v39 = v29;
  v34[0] = a3;
  v34[1] = MEMORY[0x263F1B6B0];
  v34[2] = a2;
  v33[2] = a5;
  v33[3] = MEMORY[0x263F1B698];
  v33[4] = a4;
  sub_261A2CEA4((uint64_t)&v37, 3uLL, (uint64_t)v34);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v11 + 8);
  v30(v15, a2);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v17 + 8);
  v31(v23, a3);
  v30(v29, a2);
  return ((uint64_t (*)(char *, uint64_t))v31)(v20, a3);
}

uint64_t sub_261A804D8@<X0>(uint64_t a1@<X8>)
{
  return sub_261A80230(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_261A804E8()
{
  return swift_getWitnessTable();
}

id sub_261A80608()
{
  id v0 = objc_msgSend(self, sel_blackColor);
  id v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.39);

  return v1;
}

id sub_261A80680()
{
  sub_261A806DC();
  type metadata accessor for CGColor(0);
  id v0 = (void *)sub_261B8F2C8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_261A806DC()
{
  id v0 = objc_msgSend(self, sel_blackColor);
  id v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.39);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9443E8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_261B96F60;
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_clearColor);
  id v5 = objc_msgSend(v4, sel_CGColor);

  *(void *)(v2 + 32) = v5;
  id v6 = objc_msgSend(v3, sel_clearColor);
  id v7 = objc_msgSend(v6, sel_CGColor);

  *(void *)(v2 + 4sub_261A34804(0, 1, 2, 0) = v7;
  *(void *)(v2 + 48) = objc_msgSend(v1, sel_CGColor);
  sub_261B8F2E8();

  return v2;
}

uint64_t NullMetricImpressionTracker.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t NullMetricImpressionTracker.init()()
{
  return v0;
}

uint64_t sub_261A80848()
{
  return 0;
}

uint64_t NullMetricImpressionTracker.deinit()
{
  return v0;
}

uint64_t NullMetricImpressionTracker.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NullMetricImpressionTracker()
{
  return self;
}

uint64_t method lookup function for NullMetricImpressionTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NullMetricImpressionTracker);
}

uint64_t dispatch thunk of NullMetricImpressionTracker.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.trackIndexPathApperance(_:cell:identifier:name:element:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.trackIndexPathDisappearance(_:identifier:name:element:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.trackShelfWithCellApperance(cell:indexPath:shelfIdentifier:shelfName:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.updateVisibleBounds(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.snapshotOnScreenImpressions(on:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.consumeImpressions(on:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.removeAllImpressions()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t *sub_261A809B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_261B8ADD8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
    uint64_t v9 = DayEntry[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = DayEntry[6];
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    *uint64_t v13 = v16;
    v13[1] = v15;
    uint64_t v17 = DayEntry[7];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)a1 + DayEntry[8]) = *(uint64_t *)((char *)a2 + DayEntry[8]);
    uint64_t v21 = *(int *)(a3 + 20);
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    long long v23 = (uint64_t *)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_261B8EF38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      void *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_261A80B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for TrainingLoadDayEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_261B8EF38();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_261A80CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v8 = DayEntry[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = DayEntry[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  uint64_t v16 = DayEntry[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  *(void *)(a1 + DayEntry[8]) = *(void *)(a2 + DayEntry[8]);
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_261B8EF38();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    void *v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_261A80E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v8 = DayEntry[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v12 = DayEntry[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = DayEntry[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + DayEntry[8]) = *(void *)(a2 + DayEntry[8]);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v18 = *(int *)(a3 + 20);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    sub_2619F8754(a1 + v18, &qword_26A9431F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_261B8EF38();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      void *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_261A80FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v8 = DayEntry[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(_OWORD *)(a1 + DayEntry[6]) = *(_OWORD *)(a2 + DayEntry[6]);
  *(_OWORD *)(a1 + DayEntry[7]) = *(_OWORD *)(a2 + DayEntry[7]);
  *(void *)(a1 + DayEntry[8]) = *(void *)(a2 + DayEntry[8]);
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_261B8EF38();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_261A81140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v8 = DayEntry[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = DayEntry[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = DayEntry[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  void *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(void *)(a1 + DayEntry[8]) = *(void *)(a2 + DayEntry[8]);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v21 = *(int *)(a3 + 20);
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (const void *)(a2 + v21);
    sub_2619F8754(a1 + v21, &qword_26A9431F0);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9431F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_261B8EF38();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_261A812DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A812F0);
}

uint64_t sub_261A812F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  DayEntrdouble y = type metadata accessor for TrainingLoadDayEntry();
  uint64_t v7 = *(void *)(DayEntry - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, DayEntry);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D00);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_261A813EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A81400);
}

uint64_t sub_261A81400(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  DayEntrdouble y = type metadata accessor for TrainingLoadDayEntry();
  uint64_t v9 = *(void *)(DayEntry - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, DayEntry);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D00);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for TrainingLoadDayWidgetEntryView()
{
  uint64_t result = qword_26B4164C0;
  if (!qword_26B4164C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_261A81554()
{
  type metadata accessor for TrainingLoadDayEntry();
  if (v0 <= 0x3F)
  {
    sub_261A8161C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_261A8161C()
{
  if (!qword_26B416650)
  {
    sub_261B8EF38();
    unint64_t v0 = sub_261B8D3D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B416650);
    }
  }
}

uint64_t sub_261A81674()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A81690@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v2 = sub_261B8EF38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453E0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D08);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D10);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  sub_261A819A0(v1, (uint64_t)v11);
  v21[1] = 0;
  type metadata accessor for TrainingLoadDayWidgetEntryView();
  sub_2619FAFF4((uint64_t)v5);
  int v16 = (*(uint64_t (**)(unsigned __int8 *, uint64_t))(v3 + 88))(v5, v2);
  if (v16 == *MEMORY[0x263F1FCD8])
  {
    unsigned __int8 v17 = 5;
  }
  else
  {
    if (v16 != *MEMORY[0x263F1FD08]) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(v5, v2);
    }
    unsigned __int8 v17 = 2;
  }
  v21[0] = v17;
  TrainingLoadURLBuilder.url(route:source:)(v21, (uint64_t)v8);
  uint64_t v18 = sub_261B8ABF8();
  (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 0, 1, v18);
  sub_261A82178();
  sub_261B8E498();
  sub_2619F8754((uint64_t)v8, &qword_26A9453E0);
  sub_2619F8754((uint64_t)v11, &qword_26A945D08);
  return (*(uint64_t (**)(uint64_t, unsigned __int8 *, uint64_t))(v13 + 32))(v20, v15, v12);
}

uint64_t sub_261A819A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  DayWidgetSystemSmalluint64_t View = type metadata accessor for TrainingLoadDayWidgetSystemSmallView();
  MEMORY[0x270FA5388](DayWidgetSystemSmallView);
  uint64_t v38 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D50);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D58);
  MEMORY[0x270FA5388](v39);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D38);
  MEMORY[0x270FA5388](v43);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D60);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  DayEntrdouble y = type metadata accessor for TrainingLoadDayEntry();
  MEMORY[0x270FA5388](DayEntry - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  DayWidgetRectangularuint64_t View = type metadata accessor for TrainingLoadDayWidgetRectangularView();
  MEMORY[0x270FA5388](DayWidgetRectangularView);
  int v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_261B8EF38();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TrainingLoadDayWidgetEntryView();
  uint64_t v21 = a1;
  sub_2619FAFF4((uint64_t)v20);
  uint64_t v36 = v18;
  uint64_t v37 = v17;
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v22 == *MEMORY[0x263F1FCD8])
  {
    sub_261A82620(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayEntry);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v24 = DayWidgetSystemSmallView;
    uint64_t v25 = (uint64_t)v38;
    *(void *)&v38[*(int *)(DayWidgetSystemSmallView + 28)] = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
    swift_storeEnumTagMultiPayload();
    sub_261A82554((uint64_t)v14, v25);
    *(void *)(v25 + *(int *)(v24 + 20)) = 0x4053800000000000;
    uint64_t v46 = 0x4034000000000000;
    sub_261A3E1E8();
    sub_261B8D438();
    sub_261A82620(v25, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayWidgetSystemSmallView);
    swift_storeEnumTagMultiPayload();
    sub_261A82374(&qword_26A945D40, (void (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetRectangularView);
    sub_261A82374(&qword_26A945D48, (void (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetSystemSmallView);
    sub_261B8DD68();
    sub_261A82688((uint64_t)v8, v41);
    swift_storeEnumTagMultiPayload();
    sub_261A82298();
    sub_261B8DD68();
    sub_2619F8754((uint64_t)v8, &qword_26A945D38);
    return sub_261A826F0(v25, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayWidgetSystemSmallView);
  }
  else
  {
    int v27 = v22;
    uint64_t v35 = v8;
    uint64_t v28 = v41;
    LODWORD(v38) = *MEMORY[0x263F1FD08];
    sub_261A82620(v21, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayEntry);
    id v29 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v29, sel_scale);
    double v31 = v30;

    *uint64_t v11 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943218);
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = swift_getKeyPath();
    uint64_t v33 = DayWidgetRectangularView;
    *(void *)&v16[*(int *)(DayWidgetRectangularView + 28)] = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
    swift_storeEnumTagMultiPayload();
    sub_261A82554((uint64_t)v14, (uint64_t)v16);
    *(double *)&v16[*(int *)(v33 + 20)] = 340.0 / v31;
    sub_261A825B8((uint64_t)v11, (uint64_t)&v16[*(int *)(v33 + 24)]);
    if (v27 == v38)
    {
      sub_261A82620((uint64_t)v16, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayWidgetRectangularView);
      swift_storeEnumTagMultiPayload();
      sub_261A82374(&qword_26A945D40, (void (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetRectangularView);
      sub_261A82374(&qword_26A945D48, (void (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetSystemSmallView);
      uint64_t v34 = (uint64_t)v35;
      sub_261B8DD68();
      sub_261A82688(v34, v28);
      swift_storeEnumTagMultiPayload();
      sub_261A82298();
      sub_261B8DD68();
      sub_2619F8754(v34, &qword_26A945D38);
      return sub_261A826F0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayWidgetRectangularView);
    }
    else
    {
      sub_261A82620((uint64_t)v16, v28, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayWidgetRectangularView);
      swift_storeEnumTagMultiPayload();
      sub_261A82298();
      sub_261A82374(&qword_26A945D40, (void (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetRectangularView);
      sub_261B8DD68();
      sub_261A826F0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayWidgetRectangularView);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
    }
  }
}

unint64_t sub_261A82178()
{
  unint64_t result = qword_26A945D18;
  if (!qword_26A945D18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945D08);
    sub_261A821EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945D18);
  }
  return result;
}

unint64_t sub_261A821EC()
{
  unint64_t result = qword_26A945D20;
  if (!qword_26A945D20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945D28);
    sub_261A82298();
    sub_261A82374(&qword_26A945D40, (void (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetRectangularView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945D20);
  }
  return result;
}

unint64_t sub_261A82298()
{
  unint64_t result = qword_26A945D30;
  if (!qword_26A945D30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945D38);
    sub_261A82374(&qword_26A945D40, (void (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetRectangularView);
    sub_261A82374(&qword_26A945D48, (void (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetSystemSmallView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945D30);
  }
  return result;
}

uint64_t sub_261A82374(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A823BC()
{
  return sub_261B8DA08();
}

uint64_t sub_261A823E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_261A82444(a1, a2, a3, a4, MEMORY[0x263F1FC90], MEMORY[0x263F1FB98]);
}

uint64_t sub_261A82420()
{
  return sub_261B8D8A8();
}

uint64_t sub_261A82444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_261A82514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_261A82444(a1, a2, a3, a4, MEMORY[0x263F18FF8], MEMORY[0x263F19398]);
}

uint64_t sub_261A82554(uint64_t a1, uint64_t a2)
{
  DayEntrdouble y = type metadata accessor for TrainingLoadDayEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DayEntry - 8) + 32))(a2, a1, DayEntry);
  return a2;
}

uint64_t sub_261A825B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A82620(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A82688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A826F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_261A82750()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t DistanceDetailMetricView.init(distance:formattingManager:distanceType:distanceUnit:metricType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  *(double *)a6 = a7;
  *(void *)(a6 + 8) = result;
  *(void *)(a6 + 16) = a2;
  *(void *)(a6 + 24) = a3;
  *(unsigned char *)(a6 + 32) = a4 & 1;
  *(void *)(a6 + 4sub_261A34804(0, 1, 2, 0) = a5;
  return result;
}

uint64_t sub_261A827C8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1 > 34)
  {
    if (v1 == 35)
    {
      if (qword_26B416690 == -1)
      {
LABEL_11:
        swift_beginAccess();
        id v2 = (id)qword_26B416688;
        uint64_t v1 = sub_261B8AA48();

        return v1;
      }
    }
    else
    {
      if (v1 != 42) {
        return 0x6E776F6E6B6E550ALL;
      }
      if (qword_26B416690 == -1) {
        goto LABEL_11;
      }
    }
LABEL_14:
    swift_once();
    goto LABEL_11;
  }
  if (v1)
  {
    if (v1 == 22)
    {
      if (qword_26B416690 == -1) {
        goto LABEL_11;
      }
      goto LABEL_14;
    }
    return 0x6E776F6E6B6E550ALL;
  }
  return v1;
}

uint64_t DistanceDetailMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  char v6 = *((unsigned char *)v1 + 32);
  id v7 = (id)v1[1];
  uint64_t result = sub_261A827C8();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = result;
  *(void *)(a1 + 48) = v9;
  return result;
}

uint64_t sub_261A82A78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A82A94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  char v6 = *((unsigned char *)v1 + 32);
  id v7 = (id)v1[1];
  uint64_t result = sub_261A827C8();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = result;
  *(void *)(a1 + 48) = v9;
  return result;
}

void destroy for DistanceDetailMetricView(uint64_t a1)
{
}

uint64_t initializeWithCopy for DistanceDetailMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 40);
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for DistanceDetailMetricView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  id v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for DistanceDetailMetricView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for DistanceDetailMetricView()
{
  return &type metadata for DistanceDetailMetricView;
}

WorkoutUI::RaceCompleteRaceTimeMetricView __swiftcall RaceCompleteRaceTimeMetricView.init(raceTime:didWinRace:)(Swift::Double raceTime, Swift::Bool didWinRace)
{
  *(Swift::Double *)uint64_t v2 = raceTime;
  *(unsigned char *)(v2 + 8) = didWinRace;
  result.raceTime = raceTime;
  result.didWinRace = didWinRace;
  return result;
}

uint64_t RaceCompleteRaceTimeMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_261B8FB88();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_261B8FD48();
  uint64_t v7 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_261B8FD58();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v31 = *(unsigned __int8 *)(v1 + 8);
  sub_261B8FD78();
  v29[1] = v14;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8E208], v3);
  sub_261B8FD38();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_261B8A748();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v30);
  sub_261A55ED4();
  sub_261B8FD68();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v32 = v34;
  uint64_t v33 = v35;
  sub_261A029C4();
  uint64_t v15 = sub_261B8E3D8();
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v21 = v20;
  uint64_t KeyPath = swift_getKeyPath();
  id v23 = objc_allocWithZone(MEMORY[0x263F825C8]);
  if (v31 == 1)
  {
    double v24 = 0.62745098;
    double v25 = 0.0;
    double v26 = 1.0;
  }
  else
  {
    double v26 = 0.407843137;
    double v24 = 0.321568627;
    double v25 = 1.0;
  }
  uint64_t v27 = MEMORY[0x263E4C7B0](objc_msgSend(v23, sel_initWithRed_green_blue_alpha_, v25, v26, v24, 1.0));
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v15;
  *(void *)(a1 + 8) = v17;
  *(unsigned char *)(a1 + 16) = v19 & 1;
  *(void *)(a1 + 24) = v21;
  *(_WORD *)(a1 + 32) = 256;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = KeyPath;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = result;
  *(void *)(a1 + 64) = v27;
  return result;
}

uint64_t sub_261A82FA4()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for RaceCompleteRaceTimeMetricView()
{
  return &type metadata for RaceCompleteRaceTimeMetricView;
}

unint64_t sub_261A82FD4()
{
  unint64_t result = qword_26A945D68;
  if (!qword_26A945D68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945D70);
    sub_261A83050();
    sub_261A830CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945D68);
  }
  return result;
}

unint64_t sub_261A83050()
{
  unint64_t result = qword_26A945D78;
  if (!qword_26A945D78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945D80);
    sub_2619FBA38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945D78);
  }
  return result;
}

unint64_t sub_261A830CC()
{
  unint64_t result = qword_26A943AF0;
  if (!qword_26A943AF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A943AF0);
  }
  return result;
}

uint64_t GuidedWorkoutPickerItem.ItemType.hash(into:)()
{
  uint64_t v1 = sub_261B8B378();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261A83340(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v7[*(int *)(v8 + 48)], v1);
    sub_261B8FCA8();
    sub_261B8FCA8();
    sub_261A84270(&qword_26A945D90, MEMORY[0x263F69420]);
    sub_261B8F028();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    sub_261B8FCA8();
    sub_261B8FCA8();
    sub_261B8F188();
    return swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for GuidedWorkoutPickerItem.ItemType(uint64_t a1)
{
  return sub_261A84418(a1, (uint64_t *)&unk_26A945DD0);
}

uint64_t sub_261A83340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL static GuidedWorkoutPickerItem.ButtonType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GuidedWorkoutPickerItem.ItemType.hashValue.getter()
{
  return sub_261A83628((void (*)(unsigned char *))GuidedWorkoutPickerItem.ItemType.hash(into:));
}

uint64_t sub_261A833D8(uint64_t a1, uint64_t a2)
{
  return sub_261A83688(a1, a2, (void (*)(unsigned char *))GuidedWorkoutPickerItem.ItemType.hash(into:));
}

uint64_t sub_261A833F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_261A836EC(a1, a2, a3, (void (*)(unsigned char *))GuidedWorkoutPickerItem.ItemType.hash(into:));
}

uint64_t GuidedWorkoutPickerItem.ButtonType.hash(into:)()
{
  return sub_261B8FCA8();
}

uint64_t GuidedWorkoutPickerItem.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_261A83340(v1, a1);
}

uint64_t GuidedWorkoutPickerItem.init(type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_261A83D9C(a1, a2);
}

uint64_t GuidedWorkoutPickerItem.hash(into:)()
{
  uint64_t v1 = sub_261B8B378();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261A83340(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v7[*(int *)(v8 + 48)], v1);
    sub_261B8FCA8();
    sub_261B8B2D8();
    sub_261B8F188();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    swift_bridgeObjectRelease();
    return GuidedWorkoutPickerItem.ItemType.hash(into:)();
  }
}

uint64_t GuidedWorkoutPickerItem.hashValue.getter()
{
  return sub_261A83628((void (*)(unsigned char *))GuidedWorkoutPickerItem.hash(into:));
}

uint64_t sub_261A83628(void (*a1)(unsigned char *))
{
  sub_261B8FC98();
  a1(v3);
  return sub_261B8FCE8();
}

uint64_t sub_261A83670(uint64_t a1, uint64_t a2)
{
  return sub_261A83688(a1, a2, (void (*)(unsigned char *))GuidedWorkoutPickerItem.hash(into:));
}

uint64_t sub_261A83688(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_261B8FC98();
  a3(v5);
  return sub_261B8FCE8();
}

uint64_t sub_261A836D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_261A836EC(a1, a2, a3, (void (*)(unsigned char *))GuidedWorkoutPickerItem.hash(into:));
}

uint64_t sub_261A836EC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_261B8FC98();
  a4(v6);
  return sub_261B8FCE8();
}

uint64_t GuidedWorkoutPickerItem.ItemType.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8B378();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_261A83340(v1, (uint64_t)v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  char v10 = *v8;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88);
    (*(void (**)(unsigned char *, char *, uint64_t))(v3 + 32))(v5, &v8[*(int *)(v11 + 48)], v2);
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_261B8F8C8();
    sub_261B8F1C8();
    char v15 = v10;
    sub_261B8F9A8();
    sub_261B8F1C8();
    sub_261A84270(&qword_26A945D98, MEMORY[0x263F69420]);
    sub_261B8FB78();
    sub_261B8F1C8();
    swift_bridgeObjectRelease();
    uint64_t v12 = v16;
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_261B8F1C8();
    char v15 = v10;
    sub_261B8F9A8();
    sub_261B8F1C8();
    sub_261B8F1C8();
    swift_bridgeObjectRelease();
    return v16;
  }
  return v12;
}

uint64_t _s9WorkoutUI06GuidedA10PickerItemV0E4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8B378();
  uint64_t v37 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (unsigned __int8 *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v15 = (unsigned __int8 *)&v35 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945DE0);
  MEMORY[0x270FA5388](v16 - 8);
  char v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = &v18[*(int *)(v19 + 56)];
  sub_261A83340(a1, (uint64_t)v18);
  sub_261A83340(a2, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_261A83340((uint64_t)v18, (uint64_t)v15);
    uint64_t v29 = *((void *)v15 + 1);
    uint64_t v28 = *((void *)v15 + 2);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (*v15 == *v20)
      {
        if (v29 == *((void *)v20 + 1) && v28 == *((void *)v20 + 2))
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v33 = sub_261B8FBA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v33 & 1) == 0) {
            goto LABEL_17;
          }
        }
        sub_261A847E4((uint64_t)v18);
        char v30 = 1;
        return v30 & 1;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_17:
      sub_261A847E4((uint64_t)v18);
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
LABEL_8:
    sub_261A852F0((uint64_t)v18);
LABEL_18:
    char v30 = 0;
    return v30 & 1;
  }
  uint64_t v21 = v37;
  sub_261A83340((uint64_t)v18, (uint64_t)v12);
  uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
  id v23 = &v12[v22];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v21 + 8))(&v12[v22], v4);
    goto LABEL_8;
  }
  int v24 = *v12;
  int v35 = *v20;
  int v36 = v24;
  double v25 = (unsigned __int8 *)&v20[v22];
  double v26 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v21 + 32);
  v26(v9, v23, v4);
  v26(v6, v25, v4);
  if (v36 != v35)
  {
    uint64_t v27 = *(void (**)(char *, uint64_t))(v21 + 8);
    v27(v6, v4);
    v27(v9, v4);
    goto LABEL_17;
  }
  char v30 = MEMORY[0x263E49200](v9, v6);
  int v31 = *(void (**)(char *, uint64_t))(v21 + 8);
  v31(v6, v4);
  v31(v9, v4);
  sub_261A847E4((uint64_t)v18);
  return v30 & 1;
}

uint64_t sub_261A83D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s9WorkoutUI06GuidedA10PickerItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8B378();
  uint64_t v5 = *(void **)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v45 = &v43[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v46 = &v43[-v8];
  MEMORY[0x270FA5388](v9);
  uint64_t v47 = &v43[-v10];
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v43[-v12];
  uint64_t v14 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = &v43[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = &v43[-v18];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945DE0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = &v43[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v24 = &v22[*(int *)(v23 + 56)];
  sub_261A83340(a1, (uint64_t)v22);
  sub_261A83340(a2, (uint64_t)v24);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_261A83340((uint64_t)v22, (uint64_t)v16);
    uint64_t v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
    double v26 = &v16[v25];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      int v44 = *v16;
      int v27 = *v24;
      uint64_t v28 = (void (*)(unsigned char *, unsigned __int8 *, uint64_t))v5[4];
      v28(v13, v26, v4);
      uint64_t v29 = v47;
      v28(v47, &v24[v25], v4);
      char v30 = (void (*)(unsigned char *, unsigned char *, uint64_t))v5[2];
      int v31 = v46;
      v30(v46, v13, v4);
      uint64_t v32 = v45;
      v30(v45, v29, v4);
      if (v44 == v27)
      {
        uint64_t v36 = sub_261B8B2D8();
        uint64_t v38 = v37;
        if (v36 == sub_261B8B2D8() && v38 == v39) {
          char v33 = 1;
        }
        else {
          char v33 = sub_261B8FBA8();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v31 = v46;
      }
      else
      {
        char v33 = 0;
      }
      uint64_t v41 = (void (*)(unsigned char *, uint64_t))v5[1];
      v41(v32, v4);
      v41(v31, v4);
      v41(v47, v4);
      v41(v13, v4);
      goto LABEL_24;
    }
    ((void (*)(unsigned __int8 *, uint64_t))v5[1])(&v16[v25], v4);
  }
  else
  {
    sub_261A83340((uint64_t)v22, (uint64_t)v19);
    uint64_t v34 = *((void *)v19 + 1);
    uint64_t v35 = *((void *)v19 + 2);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (*v19 == *v24)
      {
        if (v34 == *((void *)v24 + 1) && v35 == *((void *)v24 + 2)) {
          char v33 = 1;
        }
        else {
          char v33 = sub_261B8FBA8();
        }
      }
      else
      {
        char v33 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_24:
      sub_261A847E4((uint64_t)v22);
      return v33 & 1;
    }
    swift_bridgeObjectRelease();
  }
  sub_261A852F0((uint64_t)v22);
  char v33 = 0;
  return v33 & 1;
}

uint64_t sub_261A84270(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A842B8()
{
  return sub_261A84270(&qword_26A945DA0, (void (*)(uint64_t))type metadata accessor for GuidedWorkoutPickerItem.ItemType);
}

unint64_t sub_261A84304()
{
  unint64_t result = qword_26A945DA8;
  if (!qword_26A945DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945DA8);
  }
  return result;
}

unint64_t sub_261A8435C()
{
  unint64_t result = qword_26A945DB0;
  if (!qword_26A945DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945DB0);
  }
  return result;
}

uint64_t sub_261A843B0()
{
  return sub_261A84270(&qword_26A945DB8, (void (*)(uint64_t))type metadata accessor for GuidedWorkoutPickerItem);
}

uint64_t type metadata accessor for GuidedWorkoutPickerItem(uint64_t a1)
{
  return sub_261A84418(a1, (uint64_t *)&unk_26A945DC0);
}

uint64_t sub_261A84418(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for GuidedWorkoutPickerItem(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for GuidedWorkoutPickerItem.ItemType(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_261B8B378();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      uint64_t v11 = a2[2];
      a1[1] = a2[1];
      a1[2] = v11;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for GuidedWorkoutPickerItem(uint64_t a1)
{
  type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
    uint64_t v3 = sub_261B8B378();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for GuidedWorkoutPickerItem(uint64_t a1, uint64_t a2)
{
  type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(unsigned char *)a1 = *(unsigned char *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = a2 + v5;
    uint64_t v8 = sub_261B8B378();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v9;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for GuidedWorkoutPickerItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_261A847E4(a1);
    type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_261B8B378();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_261A847E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *initializeWithTake for GuidedWorkoutPickerItem(unsigned char *a1, unsigned char *a2)
{
  uint64_t v4 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
    uint64_t v6 = &a1[v5];
    uint64_t v7 = &a2[v5];
    uint64_t v8 = sub_261B8B378();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for GuidedWorkoutPickerItem(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    sub_261A847E4((uint64_t)a1);
    uint64_t v4 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
      uint64_t v6 = &a1[v5];
      uint64_t v7 = &a2[v5];
      uint64_t v8 = sub_261B8B378();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for GuidedWorkoutPickerItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A84A24);
}

uint64_t sub_261A84A24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for GuidedWorkoutPickerItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A84AA4);
}

uint64_t sub_261A84AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_261A84B14()
{
  uint64_t result = type metadata accessor for GuidedWorkoutPickerItem.ItemType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for GuidedWorkoutPickerItem.ItemType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_261B8B378();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      uint64_t v12 = a2[2];
      a1[1] = a2[1];
      a1[2] = v12;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for GuidedWorkoutPickerItem.ItemType(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
    uint64_t v3 = sub_261B8B378();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for GuidedWorkoutPickerItem.ItemType(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(unsigned char *)a1 = *(unsigned char *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = a2 + v5;
    uint64_t v8 = sub_261B8B378();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v9;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for GuidedWorkoutPickerItem.ItemType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_261A847E4(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_261B8B378();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *initializeWithTake for GuidedWorkoutPickerItem.ItemType(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = sub_261B8B378();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for GuidedWorkoutPickerItem.ItemType(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_261A847E4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945D88) + 48);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = sub_261B8B378();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for GuidedWorkoutPickerItem.ItemType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for GuidedWorkoutPickerItem.ItemType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_261A85120()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_261A85130()
{
  v2[4] = &unk_261B973D8;
  uint64_t result = sub_261B8B378();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for GuidedWorkoutPickerItem.TileType()
{
  return &type metadata for GuidedWorkoutPickerItem.TileType;
}

unsigned char *_s9WorkoutUI23GuidedWorkoutPickerItemV10ButtonTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_261A34804(3, 0, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261A852B8);
      case 4:
        *(_DWORD *)(result + sub_261A34804(3, 0, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_261A34804(3, 0, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_261A34804(3, 0, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GuidedWorkoutPickerItem.ButtonType()
{
  return &type metadata for GuidedWorkoutPickerItem.ButtonType;
}

uint64_t sub_261A852F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

WorkoutUI::ListRowBackgroundViewModifier __swiftcall ListRowBackgroundViewModifier.init(applyListRowBackground:)(WorkoutUI::ListRowBackgroundViewModifier applyListRowBackground)
{
  v1->applyListRowBackground = applyListRowBackground.applyListRowBackground;
  return applyListRowBackground;
}

uint64_t ListRowBackgroundViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v72 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945DE8);
  uint64_t v71 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v67 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945DF0);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9433E0);
  uint64_t v69 = *(void *)(v7 - 8);
  uint64_t v70 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v63 - v11;
  uint64_t v13 = sub_261B8D748();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (_OWORD *)((char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9433D8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945DF8);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v68 = (uint64_t)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v63 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945E00);
  MEMORY[0x270FA5388](v24);
  double v29 = MEMORY[0x270FA5388](v25);
  if (*v74 == 1)
  {
    uint64_t v65 = v28;
    uint64_t v66 = (uint64_t)&v63 - v27;
    uint64_t v63 = v12;
    id v64 = v9;
    uint64_t v67 = v26;
    uint64_t v74 = (unsigned char *)v4;
    uint64_t v30 = v71;
    int v31 = (char *)v15 + *(int *)(v13 + 20);
    uint64_t v32 = *MEMORY[0x263F19860];
    uint64_t v33 = sub_261B8DBB8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v31, v32, v33);
    __asm { FMOV            V0.2D, #10.0 }
    _OWORD *v15 = _Q0;
    LODWORD(v3sub_261A34804(3, 0, 0, 1) = sub_261B8DE18();
    sub_261B8D3F8();
    sub_261A1396C((uint64_t)v15, (uint64_t)v18);
    double v39 = *(double *)&v75 * 0.5;
    uint64_t v40 = (uint64_t)&v18[*(int *)(v16 + 68)];
    sub_261A1396C((uint64_t)v15, v40);
    *(double *)(v40 + *(int *)(sub_261B8D738() + 20)) = v39;
    uint64_t v41 = v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945E18) + 36);
    long long v42 = v76;
    *(_OWORD *)uint64_t v41 = v75;
    *(_OWORD *)(v41 + 16) = v42;
    *(void *)(v41 + 32) = v77;
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945E20);
    *(_DWORD *)(v40 + *(int *)(v43 + 52)) = v31;
    *(_WORD *)(v40 + *(int *)(v43 + 56)) = 256;
    uint64_t v44 = sub_261B8EC98();
    uint64_t v46 = v45;
    uint64_t v47 = (uint64_t *)(v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945E28) + 36));
    uint64_t *v47 = v44;
    v47[1] = v46;
    sub_261A139D0((uint64_t)v15);
    uint64_t v48 = sub_261B8EC98();
    sub_2619FF400(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v23, 0.0, 1, INFINITY, 0, v48, v49);
    sub_2619F8754((uint64_t)v18, &qword_26A9433D8);
    uint64_t v50 = v69;
    uint64_t v51 = v70;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v23, 0, 1, v70);
    uint64_t v52 = v68;
    sub_2619F86F0((uint64_t)v23, v68, &qword_26A945DF8);
    int v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v52, 1, v51);
    uint64_t v54 = 0;
    if (v53 != 1)
    {
      uint64_t v55 = v52;
      uint64_t v56 = (uint64_t)v63;
      sub_2619FB7EC(v55, (uint64_t)v63, &qword_26A9433E0);
      sub_2619F86F0(v56, (uint64_t)v64, &qword_26A9433E0);
      sub_261A85B4C();
      uint64_t v54 = sub_261B8EB28();
      sub_2619F8754(v56, &qword_26A9433E0);
    }
    uint64_t v57 = v65;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v65, v72, v2);
    *(void *)(v57 + *((int *)v67 + 9)) = v54;
    sub_2619F8754((uint64_t)v23, &qword_26A945DF8);
    uint64_t v58 = v66;
    sub_2619FB7EC(v57, v66, &qword_26A945E00);
    sub_2619F86F0(v58, (uint64_t)v6, &qword_26A945E00);
    swift_storeEnumTagMultiPayload();
    sub_261A85A88();
    sub_2619F8AB8(&qword_26A945E10, &qword_26A945DE8);
    sub_261B8DD68();
    return sub_2619F8754(v58, &qword_26A945E00);
  }
  else
  {
    uint64_t v60 = v71;
    uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, double))(v71 + 16);
    unint64_t v62 = v67;
    v61(v67, v72, v2, v29);
    ((void (*)(char *, char *, uint64_t))v61)(v6, v62, v2);
    swift_storeEnumTagMultiPayload();
    sub_261A85A88();
    sub_2619F8AB8(&qword_26A945E10, &qword_26A945DE8);
    sub_261B8DD68();
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v62, v2);
  }
}

unint64_t sub_261A85A88()
{
  unint64_t result = qword_26A945E08;
  if (!qword_26A945E08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945E00);
    sub_2619F8AB8(&qword_26A945E10, &qword_26A945DE8);
    sub_2619F8AB8(&qword_26A9446A0, &qword_26A9446A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945E08);
  }
  return result;
}

unint64_t sub_261A85B4C()
{
  unint64_t result = qword_26A945E30;
  if (!qword_26A945E30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9433E0);
    sub_2619F8AB8(&qword_26A945E38, &qword_26A9433D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945E30);
  }
  return result;
}

uint64_t sub_261A85BEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for ListRowBackgroundViewModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ListRowBackgroundViewModifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_261A34804(3, 0, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261A85D78);
      case 4:
        *(_DWORD *)(result + sub_261A34804(3, 0, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_261A34804(3, 0, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_261A34804(3, 0, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListRowBackgroundViewModifier()
{
  return &type metadata for ListRowBackgroundViewModifier;
}

unint64_t sub_261A85DB4()
{
  unint64_t result = qword_26A945E40;
  if (!qword_26A945E40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945E48);
    sub_261A85A88();
    sub_2619F8AB8(&qword_26A945E10, &qword_26A945DE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945E40);
  }
  return result;
}

uint64_t sub_261A85E9C()
{
  uint64_t v1 = v0 + OBJC_IVAR___NLSeymourAvailabilityProvider_availability;
  swift_beginAccess();
  return *(void *)v1;
}

id sub_261A85F7C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___NLSeymourAvailabilityProvider_observers);
  swift_beginAccess();
  int v2 = *v1;
  return v2;
}

void sub_261A86034(void **a1, void *a2)
{
  int v2 = *a1;
  int v3 = (void **)(*a2 + OBJC_IVAR___NLSeymourAvailabilityProvider_observers);
  swift_beginAccess();
  unsigned int v4 = *v3;
  *int v3 = v2;
  id v5 = v2;
}

id SeymourAvailabilityProvider.__allocating_init(dependenciesWrapper:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = objc_allocWithZone((Class)type metadata accessor for SeymourAvailabilityProvider());
  swift_retain();
  id v5 = SeymourAvailabilityProvider.init(dependencies:)();

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

id SeymourAvailabilityProvider.init(dependenciesWrapper:)(void *a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for SeymourAvailabilityProvider());
  swift_retain();
  id v3 = SeymourAvailabilityProvider.init(dependencies:)();

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

id SeymourAvailabilityProvider.__allocating_init(dependencies:)()
{
  id v1 = objc_allocWithZone(v0);
  return SeymourAvailabilityProvider.init(dependencies:)();
}

uint64_t type metadata accessor for SeymourAvailabilityProvider()
{
  return self;
}

id SeymourAvailabilityProvider.init(dependencies:)()
{
  id v1 = &v0[OBJC_IVAR___NLSeymourAvailabilityProvider_availability];
  *(void *)&v0[OBJC_IVAR___NLSeymourAvailabilityProvider_availability] = 1;
  id v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945008);
  sub_261B8B298();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945E60);
  sub_261B8B298();
  sub_261A4E500(v11, (uint64_t)&v2[OBJC_IVAR___NLSeymourAvailabilityProvider_contentAvailabilityClient]);
  sub_261B8CD68();
  swift_allocObject();
  swift_unknownObjectRetain();
  *(void *)&v2[OBJC_IVAR___NLSeymourAvailabilityProvider_eventHubToken] = sub_261B8CD58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945E78);
  sub_261B8B298();
  sub_261A4E500(v11, (uint64_t)&v2[OBJC_IVAR___NLSeymourAvailabilityProvider_subscriptionClient]);
  id v3 = objc_msgSend(self, sel_weakObjectsHashTable);
  *(void *)&v2[OBJC_IVAR___NLSeymourAvailabilityProvider_observers] = v3;
  id v4 = objc_msgSend(self, sel_standardUserDefaults);
  id v5 = (void *)sub_261B8F0B8();
  unsigned int v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);

  swift_beginAccess();
  *(void *)id v1 = v6 ^ 1;

  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for SeymourAvailabilityProvider();
  id v7 = objc_msgSendSuper2(&v10, sel_init);
  swift_getObjectType();
  sub_261B8CDD8();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v8 = v7;
  sub_261B8CD08();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  sub_261B8CE08();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_261B8CD08();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  objc_msgSend(v8, sel_update);
  swift_unknownObjectRelease();

  swift_release();
  return v8;
}

uint64_t sub_261A865BC()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261A865F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_261B8B5D8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x263E4EA60](a2 + 16);
  if (result)
  {
    id v8 = (void *)result;
    sub_261B8CDC8();
    sub_261A86708((uint64_t)v6);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_261A86700(uint64_t a1)
{
  return sub_261A865F4(a1, v1);
}

id sub_261A86708(uint64_t a1)
{
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450C0);
  uint64_t v2 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v63 = v3;
  id v64 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  long long v75 = (char *)&v61 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450C8);
  uint64_t v72 = *(void *)(v6 - 8);
  uint64_t v73 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v66 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v67 = v10;
  uint64_t v68 = (char *)&v61 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v71 = (char *)&v61 - v12;
  uint64_t v13 = sub_261B8B738();
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  MEMORY[0x270FA5388](v13);
  long long v76 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_261B8B5D8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v61 - v21;
  (*(void (**)(char *, void, uint64_t, double))(v16 + 104))((char *)&v61 - v21, *MEMORY[0x263F6A190], v15, v20);
  sub_261A89BB8();
  uint64_t v62 = a1;
  sub_261B8F2A8();
  sub_261B8F2A8();
  if (v77 == v79 && v78 == v80)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
LABEL_5:
    uint64_t v24 = v2;
    sub_261B8B728();
    uint64_t v25 = v74;
    __swift_project_boxed_opaque_existential_1(&v74[OBJC_IVAR___NLSeymourAvailabilityProvider_subscriptionClient], *(void *)&v74[OBJC_IVAR___NLSeymourAvailabilityProvider_subscriptionClient + 24]);
    sub_261B8CC28();
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v25;
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v62, v15);
    unint64_t v28 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v29 + v28, v18, v15);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = sub_261A8973C;
    *(void *)(v30 + 24) = v29;
    uint64_t v32 = v64;
    uint64_t v31 = v65;
    uint64_t v33 = v75;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v64, v75, v65);
    unint64_t v34 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    unint64_t v35 = (v63 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v36 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v36 + v34, v32, v31);
    uint64_t v37 = (void *)(v36 + v35);
    *uint64_t v37 = sub_261A89E94;
    v37[1] = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945E90);
    uint64_t v38 = v68;
    sub_261B8B798();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v33, v31);
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = v27;
    *(void *)(v39 + 16) = v27;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = sub_261A89DA4;
    *(void *)(v41 + 24) = v39;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_261A89E7C;
    *(void *)(v42 + 24) = v41;
    uint64_t v44 = v72;
    uint64_t v43 = v73;
    uint64_t v45 = v66;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v66, v38, v73);
    unint64_t v46 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    unint64_t v47 = (v67 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v48 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v48 + v46, v45, v43);
    uint64_t v49 = (void *)(v48 + v47);
    *uint64_t v49 = sub_261A89E98;
    v49[1] = v42;
    id v50 = v40;
    uint64_t v51 = v71;
    sub_261B8B798();
    uint64_t v52 = *(void (**)(char *, uint64_t))(v44 + 8);
    v52(v38, v43);
    int v53 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = 0;
    *(void *)(v54 + 24) = 0;
    v53(sub_261A50508, v54);
    swift_release();
    swift_release();
    v52(v51, v43);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v76, v70);
  }
  char v23 = sub_261B8FBA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
  if (v23) {
    goto LABEL_5;
  }
  uint64_t v56 = v74;
  uint64_t v57 = &v74[OBJC_IVAR___NLSeymourAvailabilityProvider_availability];
  id result = (id)swift_beginAccess();
  uint64_t v58 = *(void *)v57;
  *(void *)uint64_t v57 = 1;
  if (v58 != 1)
  {
    id v59 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v60 = (void *)sub_261B8F0B8();
    objc_msgSend(v59, sel_setBool_forKey_, 0, v60);

    return objc_msgSend(v56, sel_notifyObservers);
  }
  return result;
}

void sub_261A86F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (void *)MEMORY[0x263E4EA60](v2);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_update);
  }
}

void sub_261A86F7C(uint64_t a1)
{
  sub_261A86F20(a1, v1);
}

id SeymourAvailabilityProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SeymourAvailabilityProvider.init()()
{
}

id SeymourAvailabilityProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeymourAvailabilityProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall SeymourAvailabilityProvider.update()()
{
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450B0);
  uint64_t v1 = *(void *)(v31 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x270FA5388](v31);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - v5;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944F90);
  uint64_t v7 = *(void *)(v34 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v34);
  uint64_t v33 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v32 = (char *)&v30 - v10;
  MEMORY[0x270FA5388](v11);
  unint64_t v35 = (char *)&v30 - v12;
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR___NLSeymourAvailabilityProvider_contentAvailabilityClient), *(void *)(v0 + OBJC_IVAR___NLSeymourAvailabilityProvider_contentAvailabilityClient + 24));
  sub_261B8CC18();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_261A87BBC;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = v31;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v31);
  unint64_t v16 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v17 + v16, v3, v15);
  uint64_t v18 = (uint64_t (**)(uint64_t))(v17 + ((v2 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  char *v18 = sub_261A888D4;
  v18[1] = (uint64_t (*)(uint64_t))v14;
  uint64_t v19 = v32;
  sub_261B8B798();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v15);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_261A880C4;
  *(void *)(v20 + 24) = 0;
  uint64_t v22 = v33;
  uint64_t v21 = v34;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v33, v19, v34);
  unint64_t v23 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24 + v23, v22, v21);
  uint64_t v25 = (uint64_t (**)(void *))(v24 + ((v8 + v23 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v25 = sub_261A88F7C;
  v25[1] = (uint64_t (*)(void *))v20;
  uint64_t v26 = v35;
  sub_261B8B798();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v7 + 8);
  v27(v19, v21);
  unint64_t v28 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = 0;
  *(void *)(v29 + 24) = 0;
  v28(sub_261A53C98, v29);
  swift_release();
  swift_release();
  v27(v26, v21);
}

uint64_t sub_261A87524(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = a1;
  uint64_t v57 = sub_261B8B5D8();
  uint64_t v4 = *(void *)(v57 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v57);
  uint64_t v54 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450C0);
  uint64_t v56 = *(void *)(v59 - 8);
  uint64_t v6 = *(void *)(v56 + 64);
  MEMORY[0x270FA5388](v59);
  uint64_t v58 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v50 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9450C8);
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  uint64_t v11 = *(void *)(v63 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v60 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v61 = (char *)&v50 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v62 = (char *)&v50 - v15;
  uint64_t v16 = sub_261B8B738();
  uint64_t v65 = *(void *)(v16 - 8);
  uint64_t v66 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v68 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8B728();
  swift_beginAccess();
  uint64_t v18 = MEMORY[0x263E4EA60](a2 + 16);
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    sub_261A40D48(v18 + OBJC_IVAR___NLSeymourAvailabilityProvider_subscriptionClient, (uint64_t)v67);

    uint64_t v53 = v2;
    uint64_t v20 = a2;
    uint64_t v52 = a2;
    __swift_project_boxed_opaque_existential_1(v67, v67[3]);
    uint64_t v51 = v9;
    sub_261B8CC28();
    uint64_t v21 = v54;
    uint64_t v22 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v54, v55, v57);
    unint64_t v23 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v24 + v23, v21, v22);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_261A8973C;
    *(void *)(v25 + 24) = v24;
    uint64_t v26 = v56;
    unint64_t v28 = v58;
    uint64_t v27 = v59;
    uint64_t v29 = v51;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v58, v51, v59);
    unint64_t v30 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    unint64_t v31 = (v6 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v32 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v32 + v30, v28, v27);
    uint64_t v33 = (uint64_t (**)(uint64_t))(v32 + v31);
    char *v33 = sub_261A89754;
    v33[1] = (uint64_t (*)(uint64_t))v25;
    uint64_t v34 = v52;
    swift_retain();
    uint64_t v58 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A945E90);
    unint64_t v35 = v61;
    sub_261B8B798();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_261A8984C;
    *(void *)(v36 + 24) = v34;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_261A89854;
    *(void *)(v37 + 24) = v36;
    uint64_t v39 = v63;
    uint64_t v38 = v64;
    uint64_t v40 = v60;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v35, v64);
    unint64_t v41 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    unint64_t v42 = (v11 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v43 + v41, v40, v38);
    uint64_t v44 = (uint64_t (**)(void *))(v43 + v42);
    *uint64_t v44 = sub_261A89894;
    v44[1] = (uint64_t (*)(void *))v37;
    swift_retain();
    uint64_t v45 = v62;
    sub_261B8B798();
    unint64_t v46 = *(void (**)(char *, uint64_t))(v39 + 8);
    v46(v35, v38);
    unint64_t v47 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_261B8B7A8();
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = 0;
    *(void *)(v48 + 24) = 0;
    v47(sub_261A50508, v48);
    swift_release();
    swift_release();
    v46(v45, v38);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v68, v66);
}

uint64_t sub_261A87BBC(uint64_t a1)
{
  return sub_261A87524(a1, v1);
}

id sub_261A87BD8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_261B8B5D8();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x263F6A190], v5, v7);
  sub_261A89BB8();
  sub_261B8F2A8();
  sub_261B8F2A8();
  if (v17[1] == v17[4] && v17[2] == v17[5])
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_261B8FBA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 &= v10;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v11 = &v2[OBJC_IVAR___NLSeymourAvailabilityProvider_availability];
  id result = (id)swift_beginAccess();
  uint64_t v13 = *(void *)v11;
  uint64_t v14 = (a2 & 1) == 0;
  *(void *)uint64_t v11 = v14;
  if (v13 != v14)
  {
    id v15 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v16 = (void *)sub_261B8F0B8();
    objc_msgSend(v15, sel_setBool_forKey_, a2 & 1, v16);

    return objc_msgSend(v3, sel_notifyObservers);
  }
  return result;
}

void sub_261A87E00(uint64_t a1, uint64_t a2)
{
  swift_getErrorValue();
  uint64_t v3 = sub_261B8FC38();
  uint64_t v5 = v4;
  sub_261A899B0();
  if (v3 == sub_261B8FC38() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = sub_261B8FBA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      goto LABEL_13;
    }
  }
  swift_getErrorValue();
  uint64_t v9 = sub_261B8FC28();
  if (v9 != sub_261B8FC28())
  {
LABEL_13:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_261B93F70;
    swift_getErrorValue();
    uint64_t v18 = sub_261B8FC08();
    uint64_t v20 = v19;
    *(void *)(inited + 56) = MEMORY[0x263F8D310];
    *(void *)(inited + 64) = sub_261A2B2E8();
    *(void *)(inited + 32) = v18;
    *(void *)(inited + 4sub_261A34804(0, 1, 2, 0) = v20;
    uint64_t v21 = sub_261B8F4B8();
    sub_261A407F4((uint64_t)"Seymour Availability Provider failed with error: %@", 51, 2, v21, inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945040);
    swift_arrayDestroy();
    return;
  }
  uint64_t v10 = sub_261B8F4D8();
  sub_261A407F4((uint64_t)"Seymour Availability Provider found no subscription", 51, 2, v10, MEMORY[0x263F8EE78]);
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x263E4EA60](a2 + 16);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    uint64_t v13 = (uint64_t *)(v11 + OBJC_IVAR___NLSeymourAvailabilityProvider_availability);
    swift_beginAccess();
    uint64_t v14 = *v13;
    *uint64_t v13 = 1;
    if (v14 != 1)
    {
      id v15 = objc_msgSend(self, sel_standardUserDefaults);
      uint64_t v16 = (void *)sub_261B8F0B8();
      objc_msgSend(v15, sel_setBool_forKey_, 0, v16);

      objc_msgSend(v12, sel_notifyObservers);
    }
  }
}

uint64_t sub_261A880C4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_261B93F70;
  swift_getErrorValue();
  uint64_t v1 = sub_261B8FC08();
  uint64_t v3 = v2;
  *(void *)(inited + 56) = MEMORY[0x263F8D310];
  *(void *)(inited + 64) = sub_261A2B2E8();
  *(void *)(inited + 32) = v1;
  *(void *)(inited + 4sub_261A34804(0, 1, 2, 0) = v3;
  uint64_t v4 = sub_261B8F4B8();
  sub_261A407F4((uint64_t)"Seymour Availability Provider failed with error: %@", 51, 2, v4, inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945040);
  return swift_arrayDestroy();
}

id SeymourAvailabilityProvider.addObserver(_:)(uint64_t a1)
{
  return sub_261A8821C(a1, (SEL *)&selRef_addObject_);
}

id SeymourAvailabilityProvider.removeObserver(_:)(uint64_t a1)
{
  return sub_261A8821C(a1, (SEL *)&selRef_removeObject_);
}

id sub_261A8821C(uint64_t a1, SEL *a2)
{
  uint64_t v5 = (id *)(v2 + OBJC_IVAR___NLSeymourAvailabilityProvider_observers);
  swift_beginAccess();
  return objc_msgSend(*v5, *a2, a1);
}

id sub_261A8828C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6 = (id *)(a1 + OBJC_IVAR___NLSeymourAvailabilityProvider_observers);
  swift_beginAccess();
  return objc_msgSend(*v6, *a4, a3);
}

Swift::Void __swiftcall SeymourAvailabilityProvider.notifyObservers()()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR___NLSeymourAvailabilityProvider_observers);
  swift_beginAccess();
  id v2 = objc_msgSend(*v1, sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945E88);
  unint64_t v3 = sub_261B8F2D8();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_261B8F9D8();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v5 = (void *)(v0 + OBJC_IVAR___NLSeymourAvailabilityProvider_availability);
    swift_beginAccess();
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        double v7 = (void *)MEMORY[0x263E4D7B0](i, v3);
      }
      else
      {
        double v7 = *(void **)(v3 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      objc_msgSend(v7, sel_availabilityDidUpdateWith_, *v5);
      swift_unknownObjectRelease();
    }
    goto LABEL_10;
  }
  __break(1u);
}

void sub_261A884A0(uint64_t a1@<X1>, uint64_t a2@<X2>, BOOL *a3@<X8>)
{
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v10 = (void *)MEMORY[0x263E4EA60](a1 + 16);
  if (v10)
  {
    sub_261B8ADC8();
    char v11 = sub_261B8B608();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_261A87BD8(a2, v11 & 1);
  }
  *a3 = v10 == 0;
}

id sub_261A885E0(uint64_t a1, char *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_261B93F70;
  swift_getErrorValue();
  uint64_t v4 = sub_261B8FC08();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = MEMORY[0x263F8D310];
  *(void *)(inited + 64) = sub_261A2B2E8();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 4sub_261A34804(0, 1, 2, 0) = v6;
  uint64_t v7 = sub_261B8F4B8();
  sub_261A407F4((uint64_t)"Seymour Availability Provider failed with error: %@", 51, 2, v7, inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945040);
  swift_arrayDestroy();
  uint64_t v8 = &a2[OBJC_IVAR___NLSeymourAvailabilityProvider_availability];
  id result = (id)swift_beginAccess();
  uint64_t v10 = *(void *)v8;
  *(void *)uint64_t v8 = 1;
  if (v10 != 1)
  {
    id v11 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v12 = (void *)sub_261B8F0B8();
    objc_msgSend(v11, sel_setBool_forKey_, 0, v12);

    return objc_msgSend(a2, sel_notifyObservers);
  }
  return result;
}

uint64_t sub_261A88770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8B618();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  double v9 = MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945E90);
  return sub_261B8B798();
}

uint64_t sub_261A888D4(uint64_t a1)
{
  return sub_261A88954(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), MEMORY[0x263F6A198]);
}

uint64_t sub_261A88920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_261A88954(a1, a2, a3, MEMORY[0x263F6B140]);
}

uint64_t sub_261A88954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v15 - v10, a1, v7, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  swift_retain();
  return sub_261B8B798();
}

uint64_t sub_261A88AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8B668();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  double v9 = MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  type metadata accessor for CatalogWorkoutDetailBridge();
  swift_retain();
  return sub_261B8B798();
}

void sub_261A88C10(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  a3(&v7, a5);
  unint64_t v6 = v7;
  uint64_t v7 = v7;
  char v8 = 0;
  a1(&v7);
  sub_261A53EF8((id)v6, 0);
}

void sub_261A88CA4(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  a3(&v7, a5);
  unint64_t v6 = v7;
  char v8 = 0;
  a1(&v7);
  sub_261A53EF8(v6, 0);
}

void sub_261A88D38(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  a3(&v7, a5);
  unint64_t v6 = v7;
  char v8 = 0;
  a1(&v7);
  sub_261A55308(v6);
}

uint64_t sub_261A88DCC()
{
  return objectdestroy_7Tm(&qword_26A9450B0);
}

uint64_t sub_261A88DD8(uint64_t a1, uint64_t a2)
{
  return sub_261A89788(a1, a2, &qword_26A9450B0, sub_261A52880);
}

uint64_t sub_261A88DF8(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  void v6[4] = a1;
  swift_retain();
  id v7 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A945E90);
  return sub_261B8B798();
}

uint64_t sub_261A88EA0(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  void v6[4] = a1;
  swift_retain();
  id v7 = a1;
  return sub_261B8B798();
}

uint64_t sub_261A88F44()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261A88F7C(void *a1)
{
  return sub_261A88EA0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_261A88F84(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  a3(&v7, a5);
  unint64_t v6 = v7;
  uint64_t v7 = v7;
  char v8 = 0;
  a1(&v7);
  sub_261A53EF8((id)v6, 0);
}

void sub_261A89018(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  a3(&v7, a5);
  unint64_t v6 = v7;
  char v8 = 0;
  a1(&v7);
  sub_261A53EF8(v6, 0);
}

uint64_t sub_261A890AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_261A890D4(a1, a2, a3, a4, a5, &qword_26A944F90, (uint64_t)&unk_270DA6B88, (uint64_t)sub_261A896B8);
}

uint64_t sub_261A890D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v13 = (void (*)(uint64_t, void *))sub_261B8B7A8();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a1;
  _OWORD v14[3] = a2;
  void v14[4] = a4;
  v14[5] = a5;
  swift_retain();
  swift_retain();
  v13(a8, v14);
  swift_release();
  return swift_release();
}

uint64_t sub_261A89190()
{
  return objectdestroy_7Tm(&qword_26A944F90);
}

uint64_t sub_261A8919C(uint64_t a1, uint64_t a2)
{
  return sub_261A891C4(a1, a2, &qword_26A944F90, (uint64_t)&unk_270DA6B88, (uint64_t)sub_261A896B8);
}

uint64_t sub_261A891C4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_261A890D4(a1, a2, v5 + v12, *(void *)(v5 + v13), *(void *)(v5 + v13 + 8), a3, a4, a5);
}

uint64_t sub_261A89288(void *a1, char a2, uint64_t (*a3)(void **, double), uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, void (*a10)(void *, uint64_t))
{
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a7);
  uint64_t v16 = *(void *)(v15 - 8);
  double v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v25 = a10;
    id v21 = a1;
    a5(a1);
    uint64_t v22 = (void (*)(uint64_t, uint64_t))sub_261B8B7A8();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a3;
    *(void *)(v23 + 24) = a4;
    swift_retain();
    v22(a9, v23);
    swift_release();
    swift_release();
    v25(a1, 1);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  else
  {
    uint64_t v26 = a1;
    char v27 = 0;
    return a3(&v26, v17);
  }
}

uint64_t sub_261A89424@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = (void *)(*a1 + OBJC_IVAR___NLSeymourAvailabilityProvider_availability);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_261A89478(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = (void *)(*a2 + OBJC_IVAR___NLSeymourAvailabilityProvider_availability);
  uint64_t result = swift_beginAccess();
  *unint64_t v3 = v2;
  return result;
}

id sub_261A894C8@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  unint64_t v3 = (void **)(*a1 + OBJC_IVAR___NLSeymourAvailabilityProvider_observers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for SeymourAvailabilityProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SeymourAvailabilityProvider);
}

uint64_t dispatch thunk of SeymourAvailabilityProvider.availability.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SeymourAvailabilityProvider.observers.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SeymourAvailabilityProvider.__allocating_init(dependencies:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_261A895C4()
{
  return objectdestroy_26Tm(MEMORY[0x263F6A450]);
}

uint64_t sub_261A895DC(uint64_t a1, uint64_t a2)
{
  return sub_261A89B1C(a1, a2, MEMORY[0x263F6A450], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_261A88D38);
}

uint64_t sub_261A89608()
{
  return objectdestroy_26Tm(MEMORY[0x263F6B140]);
}

void sub_261A89620(void (*a1)(void **), uint64_t a2)
{
}

void sub_261A89638(void (*a1)(void **), uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = *(void *)(a3(0) - 8);
  sub_261A88CA4(a1, a2, *(void (**)(void **__return_ptr, uint64_t))(v3 + 16), *(void *)(v3 + 24), v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
}

uint64_t sub_261A896B8(uint64_t a1)
{
  return sub_261A89914(a1, &qword_26A944F90, (uint64_t)&unk_270DA6BB0, (uint64_t)sub_261A549EC, (void (*)(void *, uint64_t))sub_261A53EF8);
}

void sub_261A896FC(void (*a1)(void **), uint64_t a2)
{
  sub_261A89018(a1, a2, *(void (**)(void **__return_ptr, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_261A89708()
{
  return objectdestroy_26Tm(MEMORY[0x263F6A198]);
}

void sub_261A89720(void (*a1)(void **), uint64_t a2)
{
}

void sub_261A8973C(BOOL *a1@<X8>)
{
}

uint64_t sub_261A89754(uint64_t a1)
{
  return sub_261A88770(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_261A8975C()
{
  return objectdestroy_7Tm(&qword_26A9450C0);
}

uint64_t sub_261A89768(uint64_t a1, uint64_t a2)
{
  return sub_261A89788(a1, a2, &qword_26A9450C0, sub_261A52858);
}

uint64_t sub_261A89788(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  unint64_t v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  return a4(a1, a2, v9, v11, v12);
}

void sub_261A8984C(uint64_t a1)
{
  sub_261A87E00(a1, v1);
}

uint64_t sub_261A89854@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = 0;
  return result;
}

uint64_t sub_261A89894(void *a1)
{
  return sub_261A88DF8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_261A8989C()
{
  return objectdestroy_7Tm(&qword_26A9450C8);
}

uint64_t sub_261A898A8(uint64_t a1, uint64_t a2)
{
  return sub_261A891C4(a1, a2, &qword_26A9450C8, (uint64_t)&unk_270DA6D40, (uint64_t)sub_261A898D8);
}

uint64_t sub_261A898D8(uint64_t a1)
{
  return sub_261A89914(a1, &qword_26A9450C8, (uint64_t)&unk_270DA6D68, (uint64_t)sub_261A50508, (void (*)(void *, uint64_t))sub_261A53EF8);
}

uint64_t sub_261A89914(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t))
{
  return sub_261A89288(*(void **)a1, *(unsigned char *)(a1 + 8), *(uint64_t (**)(void **, double))(v5 + 16), *(void *)(v5 + 24), *(void (**)(void *))(v5 + 32), *(void *)(v5 + 40), a2, a3, a4, a5);
}

uint64_t objectdestroy_39Tm()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_261A899A4(void (*a1)(uint64_t *), uint64_t a2)
{
  sub_261A88F84(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

unint64_t sub_261A899B0()
{
  unint64_t result = qword_26A945E98;
  if (!qword_26A945E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945E98);
  }
  return result;
}

uint64_t sub_261A89A04()
{
  return objectdestroy_26Tm(MEMORY[0x263F6A320]);
}

uint64_t objectdestroy_26Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t sub_261A89AF0(uint64_t a1, uint64_t a2)
{
  return sub_261A89B1C(a1, a2, MEMORY[0x263F6A320], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_261A88C10);
}

uint64_t sub_261A89B1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a3(0) - 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t v10 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a4(a1, a2, v8, v9, v10);
}

unint64_t sub_261A89BB8()
{
  unint64_t result = qword_26A945EA0;
  if (!qword_26A945EA0)
  {
    sub_261B8B5D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945EA0);
  }
  return result;
}

uint64_t objectdestroy_45Tm()
{
  uint64_t v1 = sub_261B8B5D8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_261A89CE0(BOOL *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_261B8B5D8() - 8);
  sub_261A884A0(*(void *)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_261A89D60()
{
  return objectdestroy_7Tm(&qword_26A9450C0);
}

uint64_t sub_261A89D6C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_261A89DA4(uint64_t a1)
{
  return sub_261A885E0(a1, *(char **)(v1 + 16));
}

uint64_t sub_261A89DAC()
{
  return objectdestroy_7Tm(&qword_26A9450C8);
}

uint64_t objectdestroy_7Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();
  return MEMORY[0x270FA0238](v1, v7, v6);
}

uint64_t sub_261A89E7C@<X0>(unsigned char *a1@<X8>)
{
  return sub_261A89854(a1);
}

void RingDetailView.init(ringType:value:goal:isWheelchairUser:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t KeyPath = swift_getKeyPath();
  double v11 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, 10.0, 11.0, 11.0, 12.0, 12.0);
  double v12 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, 16.0, 18.0, 18.0, 20.0, 20.0);
  double v13 = _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(0.0, 0.0, -2.0, -2.0, -2.0, -3.0, -3.0);
  *(void *)a3 = a1;
  *(double *)(a3 + 8) = a4;
  *(double *)(a3 + 16) = a5;
  *(unsigned char *)(a3 + 24) = a2;
  *(void *)(a3 + 32) = KeyPath;
  *(unsigned char *)(a3 + 4sub_261A34804(0, 1, 2, 0) = 0;
  *(double *)(a3 + 48) = v11;
  *(double *)(a3 + 56) = v12;
  *(double *)(a3 + 64) = v13;
}

uint64_t sub_261A89F78()
{
  uint64_t v49 = sub_261B8ABA8();
  uint64_t v1 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8AEF8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453F8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  double v13 = (char *)&v37 - v12;
  uint64_t v15 = *(void *)(v0 + 8);
  uint64_t v14 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v0 + 32);
  int v17 = *(unsigned __int8 *)(v0 + 40);
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v18 = (id)qword_26B416688;
  uint64_t v19 = sub_261B8AA48();
  uint64_t v45 = v20;
  uint64_t v46 = v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_261B92AA0;
  uint64_t v50 = v15;
  sub_2619F7774(v16, v17);
  sub_261B8AE68();
  unint64_t v22 = sub_261A63D24();
  uint64_t v43 = v6;
  unint64_t v48 = v22;
  uint64_t v23 = v10;
  sub_261B8AAE8();
  sub_261B8AB98();
  int v40 = v17;
  MEMORY[0x263E48A00](v3, v7);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v39 = v1 + 8;
  uint64_t v44 = v24;
  v24(v3, v49);
  unint64_t v47 = *(void (**)(char *, uint64_t))(v8 + 8);
  v47(v10, v7);
  uint64_t v42 = sub_2619F8AB8((unint64_t *)&qword_26A945408, &qword_26A9453F8);
  uint64_t v38 = v13;
  sub_261B8EFD8();
  v47(v13, v7);
  uint64_t v25 = v16;
  uint64_t v26 = v16;
  char v27 = v40;
  sub_2619F7790(v25, v40);
  uint64_t v28 = v51;
  uint64_t v29 = v52;
  *(void *)(v21 + 56) = MEMORY[0x263F8D310];
  unint64_t v41 = sub_261A2B2E8();
  *(void *)(v21 + 64) = v41;
  *(void *)(v21 + 32) = v28;
  *(void *)(v21 + 4sub_261A34804(0, 1, 2, 0) = v29;
  uint64_t v50 = v14;
  sub_2619F7774(v26, v27);
  sub_261B8AE68();
  sub_261B8AAE8();
  sub_261B8AB98();
  unint64_t v30 = v38;
  MEMORY[0x263E48A00](v3, v7);
  v44(v3, v49);
  unint64_t v31 = v47;
  v47(v23, v7);
  sub_261B8EFD8();
  v31(v30, v7);
  sub_2619F7790(v26, v27);
  uint64_t v32 = v51;
  uint64_t v33 = v52;
  unint64_t v34 = v41;
  *(void *)(v21 + 96) = MEMORY[0x263F8D310];
  *(void *)(v21 + 104) = v34;
  *(void *)(v21 + 72) = v32;
  *(void *)(v21 + 8sub_261A34804(0, 1, 2, 0) = v33;
  uint64_t v35 = sub_261B8F0C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t RingDetailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v2 = sub_261B8DED8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945EA8);
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v43 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945EB0);
  MEMORY[0x270FA5388](v11);
  double v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = v1[3];
  long long v55 = v1[2];
  long long v56 = v14;
  uint64_t v57 = *((void *)v1 + 8);
  long long v15 = v1[1];
  long long v53 = *v1;
  long long v54 = v15;
  uint64_t v16 = v55;
  char v17 = BYTE8(v55);
  sub_261A8B294((uint64_t)&v53);
  sub_2619FA43C(v16, v17, &v48);
  sub_261A8B2C4((uint64_t)&v53);
  if (v48 == 5)
  {
    *(_OWORD *)&v49[16] = v55;
    *(_OWORD *)uint64_t v50 = v56;
    *(void *)&v50[16] = v57;
    long long v48 = v53;
    *(_OWORD *)uint64_t v49 = v54;
    uint64_t v18 = sub_261A89F78();
    uint64_t v20 = v19;
    uint64_t v21 = v53;
    *(void *)&long long v48 = sub_261A8A99C(SBYTE8(v54), v53);
    *((void *)&v48 + sub_261A34804(3, 0, 0, 1) = v22;
    sub_261A029C4();
    uint64_t v23 = sub_261B8F768();
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_261A8AC54(v21);
    *(void *)double v13 = v18;
    *((void *)v13 + sub_261A34804(3, 0, 0, 1) = v20;
    *((void *)v13 + 2) = 0;
    *((void *)v13 + 3) = 0;
    *((void *)v13 + 4) = v23;
    *((void *)v13 + 5) = v25;
    *((_WORD *)v13 + 24) = 256;
    *((void *)v13 + 7) = 0;
    *((void *)v13 + 8) = 0;
    *((void *)v13 + 9) = v26;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945110);
    sub_261A56128();
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944C70);
    uint64_t v28 = sub_2619F8AB8(&qword_26A944C68, &qword_26A944C70);
    *(void *)&long long v48 = v27;
    *((void *)&v48 + sub_261A34804(3, 0, 0, 1) = v28;
    swift_getOpaqueTypeConformance2();
    return sub_261B8DD68();
  }
  else
  {
    uint64_t v30 = sub_261B8DBF8();
    uint64_t v31 = v57;
    sub_261A8ADCC((uint64_t)&v53, (uint64_t *)&v48);
    char v32 = v49[0];
    uint64_t v33 = *(void *)&v49[8];
    char v34 = v50[0];
    uint64_t v35 = *(void *)&v50[8];
    long long v36 = v48;
    long long v37 = *(_OWORD *)&v49[16];
    *(void *)&long long v48 = v30;
    *((void *)&v48 + sub_261A34804(3, 0, 0, 1) = v31;
    v49[0] = 0;
    *(_OWORD *)&v49[8] = v36;
    v49[24] = v32;
    *(void *)uint64_t v50 = v33;
    *(_OWORD *)&v50[8] = v37;
    char v51 = v34;
    uint64_t v52 = v35;
    sub_261B8DEC8();
    *(void *)&long long v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C70);
    *((void *)&v44 + sub_261A34804(3, 0, 0, 1) = sub_2619F8AB8(&qword_26A944C68, &qword_26A944C70);
    sub_261B8E6B8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v38 = *(void *)&v50[8];
    uint64_t v39 = *(void *)&v50[16];
    uint64_t v40 = v45;
    char v41 = v51;
    sub_261A02A18(*(uint64_t *)&v49[8], *(uint64_t *)&v49[16], v49[24]);
    swift_bridgeObjectRelease();
    sub_261A02A18(v38, v39, v41);
    swift_bridgeObjectRelease();
    uint64_t v42 = v46;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v10, v7, v46);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v13, v10, v42);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A945110);
    sub_261A56128();
    long long v48 = v44;
    swift_getOpaqueTypeConformance2();
    sub_261B8DD68();
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v10, v42);
  }
}

uint64_t sub_261A8A99C(char a1, uint64_t a2)
{
  uint64_t v2 = 0;
  switch(a2)
  {
    case 0:
      if (a1)
      {
        if (qword_26B416690 != -1) {
          swift_once();
        }
        goto LABEL_13;
      }
      if (qword_26B416690 == -1) {
        goto LABEL_13;
      }
      goto LABEL_12;
    case 1:
      if (qword_26B416690 == -1) {
        goto LABEL_13;
      }
      goto LABEL_12;
    case 2:
      if (qword_26B416690 == -1) {
        goto LABEL_13;
      }
LABEL_12:
      swift_once();
LABEL_13:
      swift_beginAccess();
      id v3 = (id)qword_26B416688;
      uint64_t v2 = sub_261B8AA48();

      break;
    case 3:
      return v2;
    default:
      uint64_t v2 = 0x6E776F6E6B6E55;
      break;
  }
  return v2;
}

uint64_t sub_261A8AC54(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      id v1 = objc_msgSend(self, sel_sedentaryColors);
      if (!v1)
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0x261A8ADBCLL);
      }
      uint64_t v2 = v1;
      id v3 = objc_msgSend(v1, sel_nonGradientTextColor);

      if (v3)
      {
LABEL_13:
        JUMPOUT(0x263E4C7B0);
      }
      __break(1u);
LABEL_5:
      return sub_261B8E898();
    case 1:
      id v5 = objc_msgSend(self, sel_briskColors);
      if (!v5) {
        goto LABEL_17;
      }
      uint64_t v6 = v5;
      id v7 = objc_msgSend(v5, sel_nonGradientTextColor);

      if (v7) {
        goto LABEL_13;
      }
      __break(1u);
LABEL_11:
      id v8 = objc_msgSend(self, sel_energyColors);
      if (!v8) {
        goto LABEL_18;
      }
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, sel_nonGradientTextColor);

      if (v10) {
        goto LABEL_13;
      }
      goto LABEL_19;
    case 2:
      goto LABEL_11;
    default:
      goto LABEL_5;
  }
}

uint64_t sub_261A8ADCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 24);
  uint64_t v58 = a1;
  uint64_t v70 = sub_261A8A99C(v6, v68);
  uint64_t v71 = v7;
  unint64_t v64 = sub_261A029C4();
  uint64_t v8 = sub_261B8F768();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v70 = v8;
  uint64_t v71 = v10;
  uint64_t v11 = sub_261B8E3D8();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  unsigned int v61 = *MEMORY[0x263F1A610];
  uint64_t v16 = v61;
  uint64_t v17 = sub_261B8E118();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(char *, void, uint64_t))(v18 + 104);
  uint64_t v60 = v18 + 104;
  uint64_t v62 = v19;
  uint64_t v20 = v16;
  uint64_t v21 = v17;
  uint64_t v57 = v17;
  ((void (*)(char *, uint64_t))v19)(v5, v20);
  uint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  v56[1] = v18 + 56;
  uint64_t v59 = v22;
  v22(v5, 0, 1, v21);
  sub_261B8E188();
  sub_261A010F8((uint64_t)v5);
  sub_261B8E088();
  swift_release();
  uint64_t v23 = sub_261B8E368();
  uint64_t v25 = v24;
  LOBYTE(v8) = v26;
  swift_release();
  sub_261A02A18(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_261B8E898();
  uint64_t v27 = sub_261B8E8A8();
  swift_release();
  uint64_t v70 = v27;
  uint64_t v28 = sub_261B8E328();
  uint64_t v66 = v29;
  uint64_t v67 = v28;
  uint64_t v65 = v30;
  int v63 = v31 & 1;
  sub_261A02A18(v23, v25, v8 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v70 = sub_261A89F78();
  uint64_t v71 = v32;
  uint64_t v33 = sub_261B8E3D8();
  uint64_t v35 = v34;
  LOBYTE(v18) = v36 & 1;
  sub_261B8E168();
  uint64_t v37 = v57;
  v62(v5, v61, v57);
  v59(v5, 0, 1, v37);
  sub_261B8E188();
  sub_261A010F8((uint64_t)v5);
  sub_261B8E088();
  swift_release();
  sub_261B8E208();
  swift_release();
  uint64_t v38 = sub_261B8E368();
  uint64_t v40 = v39;
  char v42 = v41;
  swift_release();
  LOBYTE(v25) = v42 & 1;
  sub_261A02A18(v33, v35, v18);
  swift_bridgeObjectRelease();
  sub_261A8AC54(v68);
  uint64_t v43 = sub_261B8E318();
  uint64_t v45 = v44;
  char v47 = v46;
  uint64_t v49 = v48;
  swift_release();
  sub_261A02A18(v38, v40, v25);
  swift_bridgeObjectRelease();
  char v50 = v63;
  LOBYTE(v7sub_261A34804(0, 1, 2, 0) = v63;
  char v51 = v69;
  uint64_t v52 = v66;
  uint64_t v53 = v67;
  uint64_t v54 = v65;
  uint64_t *v69 = v67;
  v51[1] = v54;
  *((unsigned char *)v51 + 16) = v50;
  v51[3] = v52;
  v51[4] = v43;
  v51[5] = v45;
  *((unsigned char *)v51 + 48) = v47 & 1;
  v51[7] = v49;
  sub_261A001D0(v53, v54, v50);
  swift_bridgeObjectRetain();
  sub_261A001D0(v43, v45, v47 & 1);
  swift_bridgeObjectRetain();
  sub_261A02A18(v43, v45, v47 & 1);
  swift_bridgeObjectRelease();
  sub_261A02A18(v53, v54, v70);
  return swift_bridgeObjectRelease();
}

uint64_t sub_261A8B294(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A8B2C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_261A8B2F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for RingDetailView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  sub_2619F7774(v4, v5);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t assignWithCopy for RingDetailView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  sub_2619F7774(v4, v5);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v5;
  sub_2619F7790(v6, v7);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for RingDetailView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v5;
  sub_2619F7790(v6, v7);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for RingDetailView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RingDetailView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 4sub_261A34804(0, 1, 2, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RingDetailView()
{
  return &type metadata for RingDetailView;
}

unint64_t sub_261A8B53C()
{
  unint64_t result = qword_26A945EB8;
  if (!qword_26A945EB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945EC0);
    sub_261A56128();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944C70);
    sub_2619F8AB8(&qword_26A944C68, &qword_26A944C70);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945EB8);
  }
  return result;
}

uint64_t CatalogLockupBridge.catalogLockup.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___SMCatalogLockup_catalogLockup;
  uint64_t v4 = sub_261B8B378();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t CatalogLockupBridge.mediaTagStringBuilder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_261A40D48(v1 + OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder, a1);
}

id CatalogLockupBridge.__allocating_init(catalogLockup:mediaTagStringBuilder:)(uint64_t a1, uint64_t a2)
{
  int v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR___SMCatalogLockup_catalogLockup];
  uint64_t v7 = sub_261B8B378();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  sub_261A40D48(a2, (uint64_t)&v5[OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder]);
  v11.receiver = v5;
  v11.super_class = v2;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

id CatalogLockupBridge.init(catalogLockup:mediaTagStringBuilder:)(uint64_t a1, uint64_t a2)
{
  int v5 = &v2[OBJC_IVAR___SMCatalogLockup_catalogLockup];
  uint64_t v6 = sub_261B8B378();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  sub_261A40D48(a2, (uint64_t)&v2[OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder]);
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for CatalogLockupBridge();
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t type metadata accessor for CatalogLockupBridge()
{
  uint64_t result = qword_26A945EF0;
  if (!qword_26A945EF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A8B914()
{
  return sub_261A8BB24(MEMORY[0x263F69410]);
}

uint64_t sub_261A8B944()
{
  return sub_261A8BB24(MEMORY[0x263F69408]);
}

id sub_261A8B974(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = sub_261B8C7B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(&a1[OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder], *(void *)&a1[OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder + 24]);
  id v9 = a1;
  a3();
  sub_261B8C778();
  objc_super v10 = (void *)sub_261B8C718();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  return v10;
}

uint64_t sub_261A8BB0C()
{
  return sub_261A8BB24(MEMORY[0x263F693F0]);
}

uint64_t sub_261A8BB24(void (*a1)(void))
{
  uint64_t v3 = sub_261B8C7B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder), *(void *)(v1 + OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder + 24));
  a1();
  sub_261B8C778();
  uint64_t v7 = sub_261B8C718();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t sub_261A8BCAC()
{
  return sub_261B8B2D8();
}

id sub_261A8BD1C()
{
  uint64_t v0 = sub_261B8B708();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_261B8B518();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_261B8B788();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  objc_super v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v20 - v12;
  sub_261B8B328();
  sub_261B8B508();
  sub_261A8BFA0((uint64_t)v6);
  sub_261B8B6F8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  char v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v10, v13, v7);
  char v15 = (objc_class *)type metadata accessor for ArtworkBridge();
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  v14(&v16[OBJC_IVAR___SMArtwork_artwork], v10, v7);
  v20.receiver = v16;
  v20.super_class = v15;
  id v17 = objc_msgSendSuper2(&v20, sel_init);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, v7);
  v18(v13, v7);
  return v17;
}

uint64_t sub_261A8BFA0(uint64_t a1)
{
  uint64_t v2 = sub_261B8B518();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_261A8C040()
{
  uint64_t v0 = sub_261B8B368();
  if (v2 == 0xFF) {
    return 0;
  }
  if ((v2 & 1) == 0)
  {
    sub_261A8C0AC(v0, v1, v2);
    return 0;
  }
  return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v0 + 1);
}

uint64_t sub_261A8C0AC(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_261A49E4C(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_261A8C0C4()
{
  uint64_t v0 = sub_261B8B368();
  if (v2 == 0xFF) {
    return 0;
  }
  char v3 = v0;
  if ((v2 & 1) == 0)
  {
    sub_261A8C0AC(v0, v1, v2);
    return 0;
  }
  uint64_t result = 2;
  switch(v3)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 3;
      break;
    case 3:
      uint64_t result = 4;
      break;
    default:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_261A8C1A8()
{
  char v0 = sub_261B8B318();
  if (v1 == -1) {
    return 5;
  }
  if (v1) {
    return qword_261B975E8[v0];
  }
  return 6;
}

unint64_t sub_261A8C238()
{
  sub_261B8B2F8();
  if (v0 == -1 || (v0 & 1) == 0) {
    return 2;
  }
  unint64_t result = sub_261B8B168();
  if (result >= 2) {
    return 2;
  }
  return result;
}

id sub_261A8C2B0(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_261B8F0B8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_261A8C3AC()
{
  return sub_261B8B2E8();
}

id CatalogLockupBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CatalogLockupBridge.init()()
{
}

id CatalogLockupBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CatalogLockupBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static CatalogLockupBridge.guidedWalkCanonical(mediaTagStringBuilder:)(uint64_t a1)
{
  uint64_t v71 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945EC8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v70 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v72 = (uint64_t)&v62 - v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453E0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945ED0);
  MEMORY[0x270FA5388](v8 - 8);
  objc_super v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945ED8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945EE0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v64 = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v62 - v21;
  uint64_t v65 = (char *)&v62 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945EE8);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = v25;
  uint64_t v26 = sub_261B8B378();
  uint64_t v68 = *(void *)(v26 - 8);
  uint64_t v69 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v67 = (char *)&v62 - v30;
  sub_261B8B358();
  uint64_t v31 = sub_261B8B518();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v25, 1, 1, v31);
  uint64_t v32 = sub_261B8ADD8();
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
  v33(v22, 1, 1, v32);
  uint64_t v34 = sub_261B8B5C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v16, 1, 1, v34);
  uint64_t v35 = v19;
  v33(v19, 1, 1, v32);
  uint64_t v36 = sub_261B8B198();
  uint64_t v37 = v13;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v13, 1, 1, v36);
  uint64_t v38 = sub_261B8B788();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v10, 1, 1, v38);
  uint64_t v39 = sub_261B8ABF8();
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56);
  int v63 = v7;
  v40(v7, 1, 1, v39);
  uint64_t v41 = sub_261B8B398();
  char v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
  v42(v72, 1, 1, v41);
  uint64_t v43 = (uint64_t)v70;
  v42((uint64_t)v70, 1, 1, v41);
  uint64_t v44 = (uint64_t)v10;
  uint64_t v45 = (uint64_t)v37;
  uint64_t v46 = (uint64_t)v35;
  uint64_t v47 = (uint64_t)v66;
  uint64_t v48 = v67;
  uint64_t v49 = (uint64_t)v64;
  uint64_t v50 = (uint64_t)v65;
  sub_261B8B348();
  sub_2619F8754(v43, &qword_26A945EC8);
  sub_2619F8754(v72, &qword_26A945EC8);
  sub_2619F8754((uint64_t)v63, &qword_26A9453E0);
  sub_2619F8754(v44, &qword_26A945ED0);
  sub_2619F8754(v45, &qword_26A945ED8);
  sub_2619F8754(v46, &qword_26A943B38);
  sub_2619F8754(v49, &qword_26A945EE0);
  sub_2619F8754(v50, &qword_26A943B38);
  sub_2619F8754(v47, &qword_26A945EE8);
  uint64_t v51 = v68;
  uint64_t v52 = v69;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v68 + 8);
  v53(v28, v69);
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  long long v55 = v48;
  long long v56 = v48;
  uint64_t v57 = v52;
  v54(v28, v56, v52);
  sub_261A40D48(v71, (uint64_t)v74);
  uint64_t v58 = (objc_class *)type metadata accessor for CatalogLockupBridge();
  uint64_t v59 = (char *)objc_allocWithZone(v58);
  v54(&v59[OBJC_IVAR___SMCatalogLockup_catalogLockup], v28, v57);
  sub_261A40D48((uint64_t)v74, (uint64_t)&v59[OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder]);
  v73.receiver = v59;
  v73.super_class = v58;
  id v60 = objc_msgSendSuper2(&v73, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
  v53(v28, v57);
  v53(v55, v57);
  return v60;
}

uint64_t sub_261A8CCAC()
{
  return type metadata accessor for CatalogLockupBridge();
}

uint64_t sub_261A8CCB4()
{
  uint64_t result = sub_261B8B378();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CatalogLockupBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CatalogLockupBridge);
}

uint64_t dispatch thunk of CatalogLockupBridge.__allocating_init(catalogLockup:mediaTagStringBuilder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of CatalogLockupBridge.title.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CatalogLockupBridge.subtitle.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CatalogLockupBridge.detail.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CatalogLockupBridge.identifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CatalogLockupBridge.artwork.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CatalogLockupBridge.mediaTypeRawValue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CatalogLockupBridge.mediaType.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CatalogLockupBridge.assetLoadStatus.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CatalogLockupBridge.bundleReason.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of CatalogLockupBridge.recencyTag.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t OvernightMetricsViewModel.overnightVitalsState.getter@<X0>(char *a1@<X8>)
{
  uint64_t result = sub_261B8CE38();
  if (result)
  {
    char v5 = 0;
  }
  else
  {
    uint64_t result = sub_261B8CE28();
    if (result) {
      char v4 = 3;
    }
    else {
      char v4 = 2;
    }
    if (v3) {
      char v5 = 1;
    }
    else {
      char v5 = v4;
    }
  }
  *a1 = v5;
  return result;
}

uint64_t WorkoutTypeImage.init(workoutType:iconSize:color:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

double WorkoutTypeImage.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_261B8E928();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  id v8 = (id)FIUIStaticScalableWorkoutIconImage();
  if (!v8) {
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }
  FIUIIconSize();
  id v9 = objc_msgSend(v8, sel_imageWithRenderingMode_, 2);
  sub_261B8E908();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F1B4B8], v3);
  uint64_t v10 = sub_261B8E988();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  sub_261B8EC98();
  sub_261B8D4D8();
  uint64_t v12 = v17;
  char v13 = v18;
  uint64_t v14 = v19;
  char v15 = v20;

  *(void *)a1 = v10;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = KeyPath;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v12;
  *(unsigned char *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v14;
  *(unsigned char *)(a1 + 64) = v15;
  double result = *(double *)&v21;
  *(_OWORD *)(a1 + 72) = v21;
  return result;
}

uint64_t sub_261A8D22C()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_261A8D24C(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WorkoutTypeImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WorkoutTypeImage(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for WorkoutTypeImage()
{
  return &type metadata for WorkoutTypeImage;
}

unint64_t sub_261A8D34C()
{
  unint64_t result = qword_26A945F00;
  if (!qword_26A945F00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945F08);
    sub_261A8D3C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945F00);
  }
  return result;
}

unint64_t sub_261A8D3C8()
{
  unint64_t result = qword_26A945F10;
  if (!qword_26A945F10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945F18);
    sub_261A8D444();
    sub_261A830CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945F10);
  }
  return result;
}

unint64_t sub_261A8D444()
{
  unint64_t result = qword_26A944690;
  if (!qword_26A944690)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A944698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A944690);
  }
  return result;
}

unint64_t HKWorkoutActivityType.accessibilityIdentifier.getter()
{
  id v0 = (id)_HKWorkoutActivityNameForActivityType();
  if (!v0) {
    return 0xD000000000000010;
  }
  uint64_t v1 = v0;
  uint64_t v2 = sub_261B8F0F8();
  unint64_t v4 = v3;

  if (sub_261B8F238())
  {
    unint64_t v5 = sub_261B8F198();
    unint64_t v6 = sub_261A28F7C(v5, v2, v4);
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v2 = MEMORY[0x263E4D030](v6, v8, v10, v12);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t *sub_261A8D5B4(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    unint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_261B8ADD8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)v4 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (uint64_t *)((char *)v4 + v9);
    char v13 = (uint64_t *)((char *)a2 + v9);
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (uint64_t *)((char *)v4 + v15);
    char v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_261A8D6CC(uint64_t a1)
{
  uint64_t v2 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_261A8D760(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (void *)(a2 + v8);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_261A8D82C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_261A8D92C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v1sub_261A34804(3, 0, 0, 1) = *(void *)(a2 + v11);
  return a1;
}

uint64_t sub_261A8D9D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (uint64_t *)(a2 + v8);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  void *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t sub_261A8DAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A8DABC);
}

uint64_t sub_261A8DABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_261B8ADD8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1sub_261A34804(0, 1, 2, 0) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_261A8DB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A8DB94);
}

uint64_t sub_261A8DB94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_261B8ADD8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TrainingLoadDayEntry()
{
  uint64_t result = qword_26B416698;
  if (!qword_26B416698) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261A8DCA0()
{
  uint64_t result = sub_261B8ADD8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_261A8DD50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_261B8ADD8();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CurrentStepMetricView.init(intervalsMetricsPublisher:workoutStatePublisher:step:formattingManager:activityType:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  sub_261B8C548();
  sub_261A8E784(&qword_26A943468, MEMORY[0x263F87F58]);
  swift_retain();
  uint64_t v8 = sub_261B8D5E8();
  uint64_t v10 = v9;
  sub_261B8BB48();
  sub_261A8E784(&qword_26A943470, MEMORY[0x263F87C00]);
  uint64_t v11 = sub_261B8D5E8();
  uint64_t v13 = v12;
  uint64_t result = swift_release();
  *a4 = v8;
  a4[1] = v10;
  a4[2] = v11;
  a4[3] = v13;
  a4[4] = a1;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

void sub_261A8DEE0()
{
  id v0 = (void *)sub_261B8BC88();
  id v1 = objc_msgSend(v0, sel_goalTypeIdentifier);

  if (v1 == (id)1
    && (uint64_t v2 = (void *)sub_261B8BC88(),
        id v3 = objc_msgSend(v2, sel_value),
        v2,
        v3))
  {
    id v4 = objc_msgSend(self, sel_meterUnit);
    objc_msgSend(v3, sel_doubleValueForUnit_, v4);

    swift_retain();
    sub_261B8C4F8();
    swift_release();
  }
  else
  {
    sub_261B8F9C8();
    __break(1u);
  }
}

void sub_261A8E024()
{
  id v0 = (void *)sub_261B8BC88();
  char v1 = sub_261B8F608();

  if ((v1 & 1) != 0
    && (uint64_t v2 = (void *)sub_261B8BC88(),
        id v3 = objc_msgSend(v2, sel_requiredDistance),
        v2,
        v3))
  {
    id v4 = objc_msgSend(self, sel_meterUnit);
    objc_msgSend(v3, sel_doubleValueForUnit_, v4);

    swift_retain();
    sub_261B8C4F8();
    swift_release();
  }
  else
  {
    sub_261B8F9C8();
    __break(1u);
  }
}

uint64_t CurrentStepMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v50 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v49 = (char *)&v44 - v5;
  uint64_t v56 = type metadata accessor for IntervalTimeMetricView();
  MEMORY[0x270FA5388](v56);
  uint64_t v48 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (uint64_t)&v44 - v8;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945F20);
  MEMORY[0x270FA5388](v53);
  uint64_t v55 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for DistanceRemainingMetricView();
  MEMORY[0x270FA5388](v54);
  uint64_t v11 = (uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v51 = (uint64_t)&v44 - v13;
  uint64_t v15 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v16 = v1[2];
  uint64_t v17 = v1[3];
  uint64_t v18 = v1[4];
  uint64_t v19 = (void *)v1[5];
  uint64_t v20 = v1[6];
  long long v21 = (void *)sub_261B8BC88();
  id v22 = objc_msgSend(v21, sel_goalTypeIdentifier);

  if (v22 == (id)1)
  {
    uint64_t v58 = v15;
    uint64_t v59 = v14;
    uint64_t v60 = v16;
    uint64_t v61 = v17;
    uint64_t v62 = v18;
    int v63 = v19;
    uint64_t v64 = v20;
    sub_261A8DEE0();
    uint64_t v24 = v23;
    uint64_t v25 = (void *)sub_261B8BC88();
    id v26 = objc_msgSend(v25, sel_value);

    if (!v26 || (id v27 = objc_msgSend(v26, sel__unit), v26, !v27)) {
      id v27 = objc_msgSend(self, sel_meterUnit);
    }
    uint64_t v28 = v54;
    sub_261B8BC98();
    id v29 = v19;
    uint64_t v30 = FIUIDistanceTypeForActivityType();
    *uint64_t v11 = v24;
    v11[1] = v27;
    *(void *)((char *)v11 + *(int *)(v28 + 28)) = v29;
    *(void *)((char *)v11 + *(int *)(v28 + 32)) = v30;
    uint64_t v31 = type metadata accessor for DistanceRemainingMetricView;
    uint64_t v32 = v51;
    sub_261A8E7CC((uint64_t)v11, v51, (uint64_t (*)(void))type metadata accessor for DistanceRemainingMetricView);
    sub_261A8E834(v32, v55, (uint64_t (*)(void))type metadata accessor for DistanceRemainingMetricView);
    swift_storeEnumTagMultiPayload();
    sub_261A8E784(&qword_26A945F28, (void (*)(uint64_t))type metadata accessor for DistanceRemainingMetricView);
    sub_261A8E784(&qword_26A945F30, (void (*)(uint64_t))type metadata accessor for IntervalTimeMetricView);
  }
  else
  {
    uint64_t v45 = v15;
    uint64_t v46 = v16;
    uint64_t v47 = v19;
    uint64_t v51 = v20;
    swift_retain();
    swift_retain();
    uint64_t v33 = (uint64_t)v49;
    sub_261B8C518();
    swift_release();
    swift_retain();
    uint64_t v34 = sub_261B8BAE8();
    swift_release();
    swift_retain();
    uint64_t v35 = (uint64_t)v50;
    sub_261B8BB28();
    swift_release();
    uint64_t v36 = (void *)sub_261B8BC88();
    char v37 = sub_261B8F608();

    uint64_t v38 = 0;
    if (v37)
    {
      uint64_t v58 = v45;
      uint64_t v59 = v14;
      uint64_t v60 = v46;
      uint64_t v61 = v17;
      uint64_t v62 = v18;
      int v63 = v47;
      uint64_t v64 = v51;
      sub_261A8E024();
      uint64_t v38 = v39;
    }
    uint64_t v40 = (uint64_t)v48;
    *uint64_t v48 = v18;
    uint64_t v41 = (int *)v56;
    sub_261A8E71C(v33, v40 + *(int *)(v56 + 20));
    *(void *)(v40 + v41[6]) = v34;
    sub_261A8E71C(v35, v40 + v41[7]);
    uint64_t v42 = v40 + v41[8];
    *(void *)uint64_t v42 = v38;
    *(unsigned char *)(v42 + 8) = (v37 & 1) == 0;
    uint64_t v31 = type metadata accessor for IntervalTimeMetricView;
    uint64_t v32 = v52;
    sub_261A8E7CC(v40, v52, (uint64_t (*)(void))type metadata accessor for IntervalTimeMetricView);
    sub_261A8E834(v32, v55, (uint64_t (*)(void))type metadata accessor for IntervalTimeMetricView);
    swift_storeEnumTagMultiPayload();
    sub_261A8E784(&qword_26A945F28, (void (*)(uint64_t))type metadata accessor for DistanceRemainingMetricView);
    sub_261A8E784(&qword_26A945F30, (void (*)(uint64_t))type metadata accessor for IntervalTimeMetricView);
  }
  sub_261B8DD68();
  return sub_261A8E89C(v32, (uint64_t (*)(void))v31);
}

uint64_t sub_261A8E71C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A8E784(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261A8E7CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A8E834(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A8E89C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_261A8E8FC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for CurrentStepMetricView()
{
  return &type metadata for CurrentStepMetricView;
}

unint64_t sub_261A8E92C()
{
  unint64_t result = qword_26A945F38;
  if (!qword_26A945F38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945F40);
    sub_261A8E784(&qword_26A945F28, (void (*)(uint64_t))type metadata accessor for DistanceRemainingMetricView);
    sub_261A8E784(&qword_26A945F30, (void (*)(uint64_t))type metadata accessor for IntervalTimeMetricView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945F38);
  }
  return result;
}

uint64_t RepeatRowView.init(repeatCount:referenceRepeatCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = a5 & 1;
  return result;
}

void sub_261A8EA1C()
{
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_26B416688;
  uint64_t v1 = sub_261B8AA48();
  uint64_t v3 = v2;

  qword_26A953650 = v1;
  *(void *)algn_26A953658 = v3;
}

uint64_t RepeatRowView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v24 = sub_261B8E1F8();
  uint64_t v2 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8E078();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_261B8E258();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945F48);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = *(_OWORD *)(v1 + 16);
  v26[0] = *(_OWORD *)v1;
  v26[1] = v16;
  char v27 = *(unsigned char *)(v1 + 32);
  *(void *)uint64_t v15 = sub_261B8DAD8();
  *((void *)v15 + sub_261A34804(3, 0, 0, 1) = 0;
  unsigned char v15[16] = 1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945F50);
  sub_261A8EE64(v26, (uint64_t)&v15[*(int *)(v17 + 44)]);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F1A6C8], v9);
  sub_261B8E068();
  sub_261B8E158();
  sub_261B8E198();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v18 = v24;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F1A680], v24);
  uint64_t v19 = sub_261B8E218();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = v25;
  sub_2619F86F0((uint64_t)v15, v25, &qword_26A945F48);
  id v22 = (uint64_t *)(v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A945F58) + 36));
  uint64_t *v22 = KeyPath;
  v22[1] = v19;
  return sub_2619F8754((uint64_t)v15, &qword_26A945F48);
}

uint64_t sub_261A8EE64@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945F70);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945F78);
  MEMORY[0x270FA5388](v25);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v24 - v10;
  if (qword_26A942E80 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_26A953650;
  uint64_t v27 = *(void *)algn_26A953658;
  sub_261A029C4();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_261B8E3D8();
  uint64_t v14 = v13;
  uint64_t v24 = v15;
  char v17 = v16 & 1;
  *(void *)uint64_t v6 = sub_261B8DAD8();
  *((void *)v6 + sub_261A34804(3, 0, 0, 1) = 0;
  v6[16] = 1;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945F80);
  sub_261A8F130(a1, (uint64_t)&v6[*(int *)(v18 + 44)]);
  uint64_t v19 = MEMORY[0x263E4C7B0](objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0));
  uint64_t KeyPath = swift_getKeyPath();
  sub_2619F86F0((uint64_t)v6, (uint64_t)v8, &qword_26A945F70);
  uint64_t v21 = (uint64_t *)&v8[*(int *)(v25 + 36)];
  uint64_t *v21 = KeyPath;
  v21[1] = v19;
  sub_2619F8754((uint64_t)v6, &qword_26A945F70);
  sub_2619FB7EC((uint64_t)v8, (uint64_t)v11, &qword_26A945F78);
  sub_2619F86F0((uint64_t)v11, (uint64_t)v8, &qword_26A945F78);
  *(void *)a2 = v12;
  *(void *)(a2 + 8) = v14;
  *(unsigned char *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v24;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 4sub_261A34804(0, 1, 2, 0) = 1;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945F88);
  sub_2619F86F0((uint64_t)v8, a2 + *(int *)(v22 + 64), &qword_26A945F78);
  sub_261A001D0(v12, v14, v17);
  swift_bridgeObjectRetain();
  sub_2619F8754((uint64_t)v11, &qword_26A945F78);
  sub_2619F8754((uint64_t)v8, &qword_26A945F78);
  sub_261A02A18(v12, v14, v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_261A8F130@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v83 = a2;
  uint64_t v2 = sub_261B8DB88();
  MEMORY[0x270FA5388](v2 - 8);
  v77[1] = (char *)v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E30);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (void *)((char *)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_261B8E978();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E38);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (void *)((char *)v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v77 - v17;
  uint64_t v19 = sub_261B8E918();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F1B540], v8);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v7 + *(int *)(v5 + 36), v11, v8);
  *uint64_t v7 = KeyPath;
  sub_2619F86F0((uint64_t)v7, (uint64_t)v15 + *(int *)(v13 + 44), &qword_26A944E30);
  uint64_t *v15 = v19;
  swift_retain();
  sub_2619F8754((uint64_t)v7, &qword_26A944E30);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v21 = v78;
  swift_release();
  uint64_t v82 = v15;
  uint64_t v81 = v18;
  sub_2619FB7EC((uint64_t)v15, (uint64_t)v18, &qword_26A944E38);
  sub_2619FB7EC((uint64_t)v21 + 24, (uint64_t)v92, &qword_26A945F90);
  sub_2619FB7EC((uint64_t)v92, (uint64_t)&v94, &qword_26A945F90);
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v84 = 0;
  uint64_t v24 = 0;
  if ((v95 & 1) == 0)
  {
    uint64_t v25 = v94;
    long long v90 = *v21;
    uint64_t v91 = *((void *)v21 + 2);
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945F98);
    MEMORY[0x263E4CA00](&v88, v26);
    if (v25 == (void)v88)
    {
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v84 = 0;
      uint64_t v24 = 0;
    }
    else
    {
      sub_261B8DB78();
      sub_261B8DB68();
      *(void *)&long long v90 = v25;
      sub_261B8DB38();
      sub_261B8DB68();
      sub_261B8DBA8();
      uint64_t v27 = sub_261B8E3B8();
      uint64_t v29 = v28;
      char v31 = v30 & 1;
      uint64_t v32 = sub_261B8E308();
      uint64_t v34 = v33;
      LODWORD(v84) = v35;
      sub_261A02A18(v27, v29, v31);
      swift_bridgeObjectRelease();
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v36 = (id)qword_26B416688;
      sub_261B8AA48();

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_261B93F70;
      uint64_t v38 = MEMORY[0x263F8D750];
      *(void *)(v37 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v37 + 64) = v38;
      *(void *)(v37 + 32) = v25;
      uint64_t v39 = sub_261B8F118();
      uint64_t v41 = v40;
      swift_bridgeObjectRelease();
      *(void *)&long long v90 = v39;
      *((void *)&v90 + sub_261A34804(3, 0, 0, 1) = v41;
      sub_261A029C4();
      LOBYTE(v39) = v84 & 1;
      uint64_t v22 = sub_261B8E338();
      uint64_t v23 = v42;
      uint64_t v24 = v43;
      uint64_t v84 = v44 & 1;
      sub_261A02A18(v32, v34, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v79 = v24;
  sub_261B8DB78();
  sub_261B8DB68();
  long long v90 = *v21;
  uint64_t v91 = *((void *)v21 + 2);
  long long v88 = *v21;
  uint64_t v89 = *((void *)v21 + 2);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945F98);
  MEMORY[0x263E4CA00](&v85);
  sub_261B8DB38();
  sub_261B8DB68();
  sub_261B8DBA8();
  uint64_t v46 = sub_261B8E3B8();
  uint64_t v48 = v47;
  int v50 = v49;
  sub_2619FB7EC((uint64_t)v92, (uint64_t)v93, &qword_26A945F90);
  uint64_t v80 = v22;
  if ((v93[8] & 1) != 0
    || (long long v88 = v90,
        uint64_t v89 = v91,
        MEMORY[0x263E4CA00](&v85, v45),
        uint64_t v51 = v85,
        sub_2619FB7EC((uint64_t)v92, (uint64_t)&v88, &qword_26A945F90),
        (void)v88 == v51))
  {
    uint64_t v52 = v23;
    long long v88 = v90;
    uint64_t v89 = v91;
    MEMORY[0x263E4CA00](&v85, v45);
    uint64_t v53 = sub_261B8FB78();
    uint64_t v55 = v54;
  }
  else
  {
    LODWORD(v78) = v50;
    uint64_t v52 = v23;
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v56 = (id)qword_26B416688;
    sub_261B8AA48();

    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_261B93F70;
    long long v85 = v90;
    uint64_t v86 = v91;
    MEMORY[0x263E4CA00](&v87, v45);
    uint64_t v58 = v87;
    uint64_t v59 = MEMORY[0x263F8D750];
    *(void *)(v57 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v57 + 64) = v59;
    *(void *)(v57 + 32) = v58;
    uint64_t v53 = sub_261B8F118();
    uint64_t v55 = v60;
    swift_bridgeObjectRelease();
    LOBYTE(v5sub_261A34804(0, 1, 2, 0) = (_BYTE)v78;
  }
  *(void *)&long long v85 = v53;
  *((void *)&v85 + sub_261A34804(3, 0, 0, 1) = v55;
  sub_261A029C4();
  uint64_t v61 = sub_261B8E338();
  uint64_t v63 = v62;
  uint64_t v78 = v64;
  char v66 = v65 & 1;
  sub_261A02A18(v46, v48, v50 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v67 = (uint64_t)v81;
  uint64_t v68 = (uint64_t)v82;
  sub_2619F86F0((uint64_t)v81, (uint64_t)v82, &qword_26A944E38);
  uint64_t v69 = v83;
  sub_2619F86F0(v68, v83, &qword_26A944E38);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(qword_26A945FA0);
  uint64_t v71 = (uint64_t *)(v69 + *(int *)(v70 + 48));
  uint64_t v72 = v80;
  uint64_t *v71 = v80;
  v71[1] = v52;
  char v73 = v84;
  uint64_t v74 = v79;
  v71[2] = v84;
  void v71[3] = v74;
  uint64_t v75 = v69 + *(int *)(v70 + 64);
  *(void *)uint64_t v75 = v61;
  *(void *)(v75 + 8) = v63;
  *(unsigned char *)(v75 + 16) = v66;
  *(void *)(v75 + 24) = v78;
  sub_261A8FDF0(v72, v52, v73, v74);
  sub_261A001D0(v61, v63, v66);
  swift_bridgeObjectRetain();
  sub_2619F8754(v67, &qword_26A944E38);
  sub_261A02A18(v61, v63, v66);
  swift_bridgeObjectRelease();
  sub_261A8FE34(v72, v52, v73, v74);
  return sub_2619F8754(v68, &qword_26A944E38);
}

uint64_t sub_261A8FB50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for RepeatRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RepeatRowView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for RepeatRowView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RepeatRowView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RepeatRowView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepeatRowView()
{
  return &type metadata for RepeatRowView;
}

unint64_t sub_261A8FD1C()
{
  unint64_t result = qword_26A945F60;
  if (!qword_26A945F60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A945F58);
    sub_2619F8AB8(&qword_26A945F68, &qword_26A945F48);
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A945F60);
  }
  return result;
}

uint64_t sub_261A8FDF0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_261A001D0(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_261A8FE34(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_261A02A18(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_261A8FE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t AlignedLeadingAccessoryContentView.init(alignment:leadingAccessory:content:)@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  a2();
  uint64_t v7 = type metadata accessor for AlignedLeadingAccessoryContentView();
  uint64_t result = a3(v7, v8, v9, v10);
  *(void *)(a4 + *(int *)(v7 + 56)) = 0x4022000000000000;
  *(void *)(a4 + *(int *)(v7 + 60)) = a1;
  return result;
}

uint64_t type metadata accessor for AlignedLeadingAccessoryContentView()
{
  return swift_getGenericMetadata();
}

uint64_t AlignedLeadingAccessoryContentView.init(spacing:alignment:leadingAccessory:content:)@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a4@<X8>, double a5@<D0>)
{
  a2();
  uint64_t v9 = type metadata accessor for AlignedLeadingAccessoryContentView();
  uint64_t result = a3(v9, v10, v11, v12);
  *(double *)(a4 + *(int *)(v9 + 56)) = a5;
  *(void *)(a4 + *(int *)(v9 + 60)) = a1;
  return result;
}

uint64_t AlignedLeadingAccessoryContentView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v19 = *(void *)(a1 + 16);
  sub_261B8D688();
  uint64_t v18 = *(void *)(a1 + 24);
  swift_getTupleTypeMetadata2();
  sub_261B8ECE8();
  swift_getWitnessTable();
  uint64_t v4 = sub_261B8EA78();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = sub_261B8D688();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v22 = v19;
  uint64_t v23 = v18;
  long long v24 = *(_OWORD *)(a1 + 32);
  uint64_t v25 = v2;
  sub_261B8EA68();
  sub_261B8ECA8();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_261B8E758();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  uint64_t v26 = WitnessTable;
  uint64_t v27 = MEMORY[0x263F19100];
  swift_getWitnessTable();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v13, v10, v7);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v10, v7);
  v14(v21, v13, v7);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v7);
}

uint64_t sub_261A9037C@<X0>(uint64_t a1@<X0>, char *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v36 = a4;
  uint64_t v30 = a1;
  uint64_t v37 = *((void *)a2 - 1);
  MEMORY[0x270FA5388](a1);
  uint64_t v34 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v33 = (char *)&v30 - v9;
  uint64_t v11 = v10;
  uint64_t v12 = sub_261B8D688();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v30 - v17;
  sub_261B8EC98();
  sub_261B8E748();
  uint64_t v45 = a3;
  uint64_t v46 = MEMORY[0x263F18860];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v20 = v18;
  v19(v18, v15, v12);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v13 + 8);
  v32(v15, v12);
  uint64_t v41 = v11;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v44 = v36;
  uint64_t v21 = type metadata accessor for AlignedLeadingAccessoryContentView();
  uint64_t v22 = *(void (**)(char *, uint64_t, char *))(v37 + 16);
  uint64_t v23 = v33;
  v22(v33, v30 + *(int *)(v21 + 52), a2);
  v19(v15, v18, v12);
  uint64_t v41 = v15;
  long long v24 = v34;
  v22(v34, (uint64_t)v23, a2);
  uint64_t v42 = v24;
  uint64_t v25 = v24;
  v40[0] = v12;
  v40[1] = a2;
  uint64_t v38 = WitnessTable;
  uint64_t v39 = v36;
  sub_261A2CEA4((uint64_t)&v41, 2uLL, (uint64_t)v40);
  uint64_t v26 = *(void (**)(char *, char *))(v37 + 8);
  v26(v23, a2);
  uint64_t v27 = v20;
  uint64_t v28 = (uint64_t (*)(char *, uint64_t))v32;
  v32(v27, v12);
  v26(v25, a2);
  return v28(v15, v12);
}

uint64_t sub_261A906B4@<X0>(uint64_t a1@<X8>)
{
  return sub_261A9037C(*(void *)(v1 + 48), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_261A906C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A9070C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_261A907EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    uint64_t v19 = (void *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
    void *v19 = *v20;
    *(void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_261A9099C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  void *v15 = *v16;
  *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_261A90A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  void *v15 = *v16;
  *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_261A90B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  void *v15 = *v16;
  *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_261A90C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  void *v15 = *v16;
  *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_261A90D1C(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  if (v10 < a2)
  {
    unint64_t v12 = ((((*(void *)(*(void *)(v5 - 8) + 64) + (v11 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    unsigned int v13 = a2 - v10;
    uint64_t v14 = v12 & 0xFFFFFFF8;
    if ((v12 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = v13 + 1;
    }
    if (v15 >= 0x10000) {
      LODWORD(v16) = 4;
    }
    else {
      LODWORD(v16) = 2;
    }
    if (v15 < 0x100) {
      LODWORD(v16) = 1;
    }
    if (v15 >= 2) {
      uint64_t v16 = v16;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)a1 + v12);
        if (!v17) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)a1 + v12);
        if (v17) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x261A90ED4);
      case 4:
        int v17 = *(int *)((char *)a1 + v12);
        if (!v17) {
          break;
        }
LABEL_21:
        unsigned int v18 = v17 - 1;
        if (v14)
        {
          unsigned int v18 = 0;
          int v19 = *a1;
        }
        else
        {
          int v19 = 0;
        }
        return v10 + (v19 | v18) + 1;
      default:
        break;
    }
  }
  if (!v10) {
    return 0;
  }
  if (v6 >= v8) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
}

void sub_261A90EE8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = ((((*(void *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v12 >= a3)
  {
    int v18 = 0;
    int v19 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_17:
      switch(v18)
      {
        case 1:
          a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_41;
        case 4:
          *(_DWORD *)&a1[v14] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 >= v10)
            {
              long long v24 = *(void (**)(void))(v6 + 56);
              v24();
            }
            else
            {
              unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
              uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
              v23(v22);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v15 = a3 - v12;
    if (((((*(_DWORD *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v16 = v15 + 1;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v16 >= 0x10000) {
      int v17 = 4;
    }
    else {
      int v17 = 2;
    }
    if (v16 < 0x100) {
      int v17 = 1;
    }
    if (v16 >= 2) {
      int v18 = v17;
    }
    else {
      int v18 = 0;
    }
    int v19 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_17;
    }
  }
  if (((((*(_DWORD *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v20 = v19;
  }
  else {
    int v20 = 1;
  }
  if (((((*(_DWORD *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v21 = ~v12 + a2;
    bzero(a1, v14);
    *(_DWORD *)a1 = v21;
  }
  switch(v18)
  {
    case 1:
      a1[v14] = v20;
      break;
    case 2:
      *(_WORD *)&a1[v14] = v20;
      break;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x261A91150);
    case 4:
      *(_DWORD *)&a1[v14] = v20;
      break;
    default:
      return;
  }
}

uint64_t sub_261A91178()
{
  return swift_getWitnessTable();
}

uint64_t *sub_261A91268(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_261B8ADD8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
    uint64_t v9 = DayEntry[5];
    unsigned int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(void *)unsigned int v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = DayEntry[6];
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    size_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    *uint64_t v13 = v16;
    v13[1] = v15;
    uint64_t v17 = DayEntry[7];
    int v18 = (uint64_t *)((char *)a1 + v17);
    int v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)a1 + DayEntry[8]) = *(uint64_t *)((char *)a2 + DayEntry[8]);
    uint64_t v21 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    unint64_t v22 = (uint64_t *)((char *)a1 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943218);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_261B8EF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      void *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[7];
    uint64_t v27 = (uint64_t *)((char *)a1 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = sub_261B8D728();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      void *v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_261A914D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for TrainingLoadDayEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943218);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_261B8EF18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_261B8D728();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_261A91670(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v8 = DayEntry[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = DayEntry[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  uint64_t v16 = DayEntry[7];
  uint64_t v17 = (void *)(a1 + v16);
  int v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  *(void *)(a1 + DayEntry[8]) = *(void *)(a2 + DayEntry[8]);
  uint64_t v20 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v21 = (void *)(a1 + v20);
  unint64_t v22 = (void *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943218);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_261B8EF18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    void *v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[7];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_261B8D728();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  else
  {
    void *v25 = *v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_261A91890(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v8 = DayEntry[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v12 = DayEntry[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = DayEntry[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + DayEntry[8]) = *(void *)(a2 + DayEntry[8]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  if (a1 != a2)
  {
    uint64_t v18 = a3[6];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    sub_2619F8754(a1 + v18, &qword_26A943218);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943218);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_261B8EF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      void *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[7];
    uint64_t v23 = (void *)(a1 + v22);
    uint64_t v24 = (void *)(a2 + v22);
    sub_2619F8754(a1 + v22, &qword_26A943210);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_261B8D728();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      void *v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_261A91B00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v8 = DayEntry[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(_OWORD *)(a1 + DayEntry[6]) = *(_OWORD *)(a2 + DayEntry[6]);
  *(_OWORD *)(a1 + DayEntry[7]) = *(_OWORD *)(a2 + DayEntry[7]);
  *(void *)(a1 + DayEntry[8]) = *(void *)(a2 + DayEntry[8]);
  uint64_t v11 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943218);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_261B8EF18();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_261B8D728();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  return a1;
}

uint64_t sub_261A91D08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_261B8ADD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v8 = DayEntry[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = DayEntry[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = DayEntry[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  void *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(void *)(a1 + DayEntry[8]) = *(void *)(a2 + DayEntry[8]);
  swift_release();
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  if (a1 != a2)
  {
    uint64_t v21 = a3[6];
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (const void *)(a2 + v21);
    sub_2619F8754(a1 + v21, &qword_26A943218);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943218);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_261B8EF18();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    uint64_t v26 = a3[7];
    uint64_t v27 = (void *)(a1 + v26);
    uint64_t v28 = (const void *)(a2 + v26);
    sub_2619F8754(a1 + v26, &qword_26A943210);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943210);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = sub_261B8D728();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_261A91F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A91F7C);
}

uint64_t sub_261A91F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  DayEntrdouble y = type metadata accessor for TrainingLoadDayEntry();
  uint64_t v7 = *(void *)(DayEntry - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = DayEntry;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D60);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BB0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 28);
  return v15(v17, a2, v16);
}

uint64_t sub_261A920D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A920E4);
}

uint64_t sub_261A920E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  DayEntrdouble y = type metadata accessor for TrainingLoadDayEntry();
  uint64_t v9 = *(void *)(DayEntry - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = DayEntry;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945D60);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944BB0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 28);
  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for TrainingLoadDayWidgetRectangularView()
{
  uint64_t result = qword_26A946028;
  if (!qword_26A946028) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_261A92290()
{
  type metadata accessor for TrainingLoadDayEntry();
  if (v0 <= 0x3F)
  {
    sub_261A923D8(319, &qword_26A946038, MEMORY[0x263F1FC90]);
    if (v1 <= 0x3F)
    {
      sub_261A923D8(319, (unint64_t *)&qword_26A944BD8, MEMORY[0x263F18FF8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_261A923D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_261B8D3D8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_261A9242C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A92448@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v132 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v131 = &v106[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v123 = sub_261B8E258();
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  uint64_t v119 = &v106[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946048);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v120 = (uint64_t *)&v106[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946050);
  MEMORY[0x270FA5388](v125);
  uint64_t v124 = &v106[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946058);
  uint64_t v127 = *(void *)(v9 - 8);
  uint64_t v128 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v126 = &v106[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946060);
  MEMORY[0x270FA5388](v121);
  uint64_t v130 = &v106[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v129 = &v106[-v13];
  uint64_t v14 = sub_261B8D728();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v106[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = &v106[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944C30);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = &v106[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Dayuint64_t View = type metadata accessor for TrainingLoadDayView();
  MEMORY[0x270FA5388](DayView);
  uint64_t v25 = &v106[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v26);
  double v111 = &v106[-v27];
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943428);
  MEMORY[0x270FA5388](v110);
  uint64_t v29 = &v106[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943430);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v115 = &v106[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946068);
  MEMORY[0x270FA5388](v112);
  uint64_t v116 = &v106[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946070);
  MEMORY[0x270FA5388](v114);
  uint64_t v117 = &v106[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v34);
  uint64_t v113 = &v106[-v35];
  MEMORY[0x270FA5388](v36);
  uint64_t v133 = &v106[-v37];
  uint64_t v38 = &a1[*(int *)(type metadata accessor for TrainingLoadDayEntry() + 20)];
  uint64_t v39 = *(void *)v38;
  int v107 = v38[8];
  type metadata accessor for TrainingLoadDayWidgetRectangularView();
  sub_2619FB030((uint64_t)v23);
  uint64_t v40 = sub_261B8EF18();
  uint64_t v41 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
  uint64_t v109 = v23;
  v41(v23, 0, 1, v40);
  uint64_t v118 = (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))a1;
  sub_2619FA8A0((uint64_t)v20);
  sub_261A3FD70(&qword_26A944C38);
  sub_261B8F7D8();
  sub_261A3FD70(&qword_26A944C40);
  char v42 = sub_261B8F0A8();
  uint64_t v43 = *(void (**)(unsigned char *, uint64_t))(v15 + 8);
  v43(v17, v14);
  v43(v20, v14);
  uint64_t DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
  uint64_t v45 = DayViewModel;
  uint64_t v46 = 1;
  if ((v107 & 1) == 0)
  {
    *(void *)((char *)v25 + *(int *)(DayViewModel + 28)) = 0x3FE3333333333333;
    void *v25 = v39;
    sub_261B8C948();
    sub_261B8C938();
    uint64_t v46 = 0;
    uint64_t v47 = (void *)((char *)v25 + *(int *)(v45 + 24));
    void *v47 = v48;
    v47[1] = v49;
  }
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v25, v46, 1, v45);
  uint64_t v50 = DayView;
  sub_2619FB7EC((uint64_t)v109, (uint64_t)v25 + *(int *)(DayView + 20), &qword_26A944C30);
  *((unsigned char *)v25 + *(int *)(v50 + 24)) = (v42 & 1) == 0;
  uint64_t v51 = v111;
  sub_261A3FDB4((uint64_t)v25, (uint64_t)v111);
  uint64_t v52 = (uint64_t)v118;
  sub_261B8EC98();
  sub_261B8D4D8();
  sub_261A93D20((uint64_t)v51, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayView);
  uint64_t v53 = &v29[*(int *)(v110 + 36)];
  long long v54 = v135;
  _OWORD *v53 = v134;
  v53[1] = v54;
  long long v53[2] = v136;
  sub_261A93D88((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayView);
  uint64_t v55 = sub_261B8EC98();
  id v56 = v115;
  sub_2619FED70(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v115, 0.0, 1, INFINITY, 0, v55, v57);
  sub_2619F8754((uint64_t)v29, &qword_26A943428);
  char v58 = sub_261B8DFF8();
  sub_261B8D358();
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v67 = v116;
  sub_2619F86F0((uint64_t)v56, (uint64_t)v116, &qword_26A943430);
  uint64_t v68 = &v67[*(int *)(v112 + 36)];
  *uint64_t v68 = v58;
  *((void *)v68 + sub_261A34804(3, 0, 0, 1) = v60;
  *((void *)v68 + 2) = v62;
  *((void *)v68 + 3) = v64;
  *((void *)v68 + 4) = v66;
  v68[40] = 0;
  sub_2619F8754((uint64_t)v56, &qword_26A943430);
  char v69 = sub_261B8E008();
  sub_261B8D358();
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v78 = v113;
  sub_2619F86F0((uint64_t)v67, (uint64_t)v113, &qword_26A946068);
  uint64_t v79 = &v78[*(int *)(v114 + 36)];
  *uint64_t v79 = v69;
  *((void *)v79 + sub_261A34804(3, 0, 0, 1) = v71;
  *((void *)v79 + 2) = v73;
  *((void *)v79 + 3) = v75;
  *((void *)v79 + 4) = v77;
  v79[40] = 0;
  sub_2619F8754((uint64_t)v67, &qword_26A946068);
  sub_2619FB7EC((uint64_t)v78, (uint64_t)v133, &qword_26A946070);
  uint64_t v80 = sub_261B8DBF8();
  uint64_t v81 = (uint64_t)v120;
  uint64_t *v120 = v80;
  *(void *)(v81 + 8) = 0;
  *(unsigned char *)(v81 + 16) = 1;
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946078);
  sub_261A93114(v52, (uint64_t *)(v81 + *(int *)(v82 + 44)));
  uint64_t v83 = v122;
  uint64_t v84 = v119;
  uint64_t v85 = v123;
  (*(void (**)(unsigned char *, void, uint64_t))(v122 + 104))(v119, *MEMORY[0x263F1A6C8], v123);
  uint64_t v86 = sub_261B8E118();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v118 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v87 + 56);
  uint64_t v88 = (uint64_t)v131;
  v118(v131, 1, 1, v86);
  sub_261B8E148();
  uint64_t v89 = sub_261B8E1A8();
  sub_2619F8754(v88, &qword_26A943488);
  (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v84, v85);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v91 = v124;
  sub_2619F86F0(v81, (uint64_t)v124, &qword_26A946048);
  uint64_t v92 = (uint64_t *)&v91[*(int *)(v125 + 36)];
  *uint64_t v92 = KeyPath;
  v92[1] = v89;
  sub_2619F8754(v81, &qword_26A946048);
  (*(void (**)(uint64_t, void, uint64_t))(v87 + 104))(v88, *MEMORY[0x263F1A610], v86);
  v118((unsigned char *)v88, 0, 1, v86);
  sub_261A93C54();
  uint64_t v93 = v126;
  sub_261B8E4E8();
  sub_2619F8754(v88, &qword_26A943488);
  sub_2619F8754((uint64_t)v91, &qword_26A946050);
  uint64_t v94 = swift_getKeyPath();
  uint64_t v96 = v127;
  uint64_t v95 = v128;
  uint64_t v97 = (uint64_t)v130;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v127 + 16))(v130, v93, v128);
  uint64_t v98 = (uint64_t *)(v97 + *(int *)(v121 + 36));
  uint64_t *v98 = v94;
  v98[1] = 0x3FE3333333333333;
  (*(void (**)(unsigned char *, uint64_t))(v96 + 8))(v93, v95);
  uint64_t v99 = v129;
  sub_2619FB7EC(v97, (uint64_t)v129, &qword_26A946060);
  uint64_t v100 = v133;
  uint64_t v101 = v117;
  sub_2619F86F0((uint64_t)v133, (uint64_t)v117, &qword_26A946070);
  sub_2619F86F0((uint64_t)v99, v97, &qword_26A946060);
  uint64_t v102 = v132;
  sub_2619F86F0((uint64_t)v101, v132, &qword_26A946070);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946090);
  sub_2619F86F0(v97, v102 + *(int *)(v103 + 48), &qword_26A946060);
  uint64_t v104 = v102 + *(int *)(v103 + 64);
  *(void *)uint64_t v104 = 0;
  *(unsigned char *)(v104 + 8) = 0;
  sub_2619F8754((uint64_t)v99, &qword_26A946060);
  sub_2619F8754((uint64_t)v100, &qword_26A946070);
  sub_2619F8754(v97, &qword_26A946060);
  return sub_2619F8754((uint64_t)v101, &qword_26A946070);
}

uint64_t sub_261A93114@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v113 = a2;
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946098);
  MEMORY[0x270FA5388](v111);
  uint64_t v118 = (uint64_t)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v110 = (char *)&v95 - v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v117 = (uint64_t)&v95 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460A0);
  uint64_t v114 = *(void *)(v8 - 8);
  uint64_t v115 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v112 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v109 = (char *)&v95 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v119 = (char *)&v95 - v13;
  uint64_t v14 = sub_261B8EF18();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v105 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v104 = (uint64_t)&v95 - v18;
  DayWidgetRectangularuint64_t View = type metadata accessor for TrainingLoadDayWidgetRectangularView();
  MEMORY[0x270FA5388](DayWidgetRectangularView);
  uint64_t v103 = (uint64_t)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v95 - v21;
  if (qword_26B416690 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v23 = (id)qword_26B416688;
  uint64_t v24 = sub_261B8AA48();
  uint64_t v26 = v25;

  uint64_t v120 = v24;
  uint64_t v121 = v26;
  uint64_t v116 = (void (*)(char *, uint64_t))sub_261A029C4();
  uint64_t v27 = sub_261B8E3D8();
  uint64_t v29 = v28;
  char v31 = v30 & 1;
  uint64_t v120 = sub_261B8E858();
  uint64_t v107 = sub_261B8E328();
  uint64_t v106 = v32;
  int v101 = v33;
  uint64_t v108 = v34;
  sub_261A02A18(v27, v29, v31);
  swift_release();
  swift_bridgeObjectRelease();
  DayEntrdouble y = (int *)type metadata accessor for TrainingLoadDayEntry();
  uint64_t v100 = a1 + DayEntry[5];
  LODWORD(v27) = *(unsigned __int8 *)(v100 + 8);
  sub_261A93D20(a1, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayWidgetRectangularView);
  uint64_t v97 = v14;
  uint64_t v96 = v15;
  if (v27 == 1)
  {
    uint64_t v36 = v104;
    sub_2619FB030(v104);
    uint64_t v37 = v105;
    sub_261B8EEF8();
    char v38 = sub_261B8EEE8();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v15 + 8);
    v39(v37, v14);
    v39((char *)v36, v14);
    sub_261A93D88((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayWidgetRectangularView);
    if (v38)
    {
      double v40 = 0.6;
      goto LABEL_8;
    }
  }
  else
  {
    sub_261A93D88((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayWidgetRectangularView);
  }
  double v40 = 1.0;
LABEL_8:
  uint64_t v41 = (uint64_t *)(a1 + DayEntry[7]);
  uint64_t v42 = v41[1];
  uint64_t v120 = *v41;
  uint64_t v121 = v42;
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_261B8E3D8();
  uint64_t v45 = v44;
  uint64_t v46 = a1;
  uint64_t v98 = a1;
  char v48 = v47 & 1;
  uint64_t v120 = *(void *)(v46 + DayEntry[8]);
  uint64_t v49 = v120;
  swift_retain();
  uint64_t v50 = sub_261B8E328();
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  char v56 = v55 & 1;
  sub_261A02A18(v43, v45, v48);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v120 = v50;
  uint64_t v121 = v52;
  char v122 = v56;
  uint64_t v123 = v54;
  int v57 = *(unsigned __int8 *)(v100 + 8);
  LODWORD(v10sub_261A34804(0, 1, 2, 0) = ~v57;
  BOOL v99 = (v57 & 1) == 0;
  sub_261B8E488();
  sub_261A02A18(v50, v52, v56);
  swift_bridgeObjectRelease();
  uint64_t v58 = v98;
  uint64_t v59 = (uint64_t *)(v98 + DayEntry[6]);
  uint64_t v60 = v59[1];
  uint64_t v120 = *v59;
  uint64_t v121 = v60;
  swift_bridgeObjectRetain();
  uint64_t v61 = sub_261B8E3D8();
  uint64_t v63 = v62;
  LOBYTE(v54) = v64 & 1;
  uint64_t v120 = v49;
  swift_retain();
  uint64_t v65 = sub_261B8E328();
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  LOBYTE(v45) = v70 & 1;
  sub_261A02A18(v61, v63, v54);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v120 = v65;
  uint64_t v121 = v67;
  char v122 = v45;
  uint64_t v123 = v69;
  uint64_t v71 = v109;
  sub_261B8E488();
  sub_261A02A18(v65, v67, v45);
  swift_bridgeObjectRelease();
  uint64_t v72 = v103;
  sub_261A93D20(v58, v103, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayWidgetRectangularView);
  if (v100)
  {
    sub_261A93D88(v72, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayWidgetRectangularView);
    goto LABEL_12;
  }
  uint64_t v73 = v104;
  sub_2619FB030(v104);
  uint64_t v74 = v105;
  sub_261B8EEF8();
  char v75 = sub_261B8EEE8();
  uint64_t v76 = *(void (**)(char *, uint64_t))(v96 + 8);
  uint64_t v77 = v74;
  uint64_t v78 = v97;
  v76(v77, v97);
  v76((char *)v73, v78);
  sub_261A93D88(v72, (uint64_t (*)(void))type metadata accessor for TrainingLoadDayWidgetRectangularView);
  if ((v75 & 1) == 0)
  {
LABEL_12:
    double v79 = 1.0;
    goto LABEL_13;
  }
  double v79 = 0.6;
LABEL_13:
  int v80 = v101 & 1;
  uint64_t v82 = v114;
  uint64_t v81 = v115;
  uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
  uint64_t v84 = (uint64_t)v110;
  v83(v110, v71, v115);
  *(double *)(v84 + *(int *)(v111 + 36)) = v79;
  uint64_t v116 = *(void (**)(char *, uint64_t))(v82 + 8);
  v116(v71, v81);
  uint64_t v85 = v117;
  sub_2619FB7EC(v84, v117, &qword_26A946098);
  LOBYTE(v84) = v80;
  LODWORD(v105) = v80;
  LOBYTE(v12sub_261A34804(0, 1, 2, 0) = v80;
  uint64_t v86 = v112;
  v83(v112, v119, v81);
  sub_2619F86F0(v85, v118, &qword_26A946098);
  uint64_t v87 = v113;
  uint64_t v88 = v107;
  uint64_t v89 = v106;
  *uint64_t v113 = v107;
  v87[1] = v89;
  *((unsigned char *)v87 + 16) = v84;
  v87[3] = v108;
  *((double *)v87 + 4) = v40;
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460A8);
  v83((char *)v87 + *(int *)(v90 + 48), v86, v81);
  uint64_t v91 = (uint64_t)v87 + *(int *)(v90 + 64);
  uint64_t v92 = v118;
  sub_2619F86F0(v118, v91, &qword_26A946098);
  LOBYTE(v83) = (_BYTE)v105;
  sub_261A001D0(v88, v89, (char)v105);
  swift_bridgeObjectRetain();
  sub_261A001D0(v88, v89, (char)v83);
  swift_bridgeObjectRetain();
  sub_2619F8754(v117, &qword_26A946098);
  uint64_t v93 = v116;
  v116(v119, v81);
  sub_261A02A18(v88, v89, (char)v83);
  swift_bridgeObjectRelease();
  sub_2619F8754(v92, &qword_26A946098);
  v93(v86, v81);
  sub_261A02A18(v88, v89, v120);
  return swift_bridgeObjectRelease();
}

uint64_t sub_261A93B50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943418);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = sub_261B8DAD8();
  *((void *)v5 + sub_261A34804(3, 0, 0, 1) = 0;
  v5[16] = 0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946040);
  sub_261A92448(v1, (uint64_t)&v5[*(int *)(v6 + 44)]);
  uint64_t v7 = sub_261B8EC98();
  sub_2619FF45C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v7, v8);
  return sub_2619F8754((uint64_t)v5, &qword_26A943418);
}

unint64_t sub_261A93C54()
{
  unint64_t result = qword_26A946080;
  if (!qword_26A946080)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946050);
    sub_2619F8AB8(&qword_26A946088, &qword_26A946048);
    sub_2619F8AB8((unint64_t *)&qword_26A9430D8, &qword_26A9430E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946080);
  }
  return result;
}

uint64_t sub_261A93D20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_261A93D88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_261A93DEC()
{
  unint64_t result = qword_26A9460B0;
  if (!qword_26A9460B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943420);
    sub_2619F8AB8(&qword_26A9460B8, &qword_26A943418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9460B0);
  }
  return result;
}

double sub_261A93E8C@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  if (a3 <= a2)
  {
    sub_261B8E858();
    swift_retain();
  }
  else
  {
    swift_retain();
    sub_261B8E858();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460C8);
  double v4 = COERCE_DOUBLE(swift_allocObject());
  *(_OWORD *)(*(void *)&v4 + 16) = xmmword_261B92AA0;
  *(void *)(*(void *)&v4 + 32) = sub_261B8E8A8();
  *(void *)(*(void *)&v4 + 4sub_261A34804(0, 1, 2, 0) = sub_261B8E8A8();
  *(double *)&long long v6 = v4;
  sub_261B8F2E8();
  MEMORY[0x263E4CB30](*(void *)&v4);
  sub_261B8ED58();
  sub_261B8ED68();
  sub_261B8D5D8();
  swift_release();
  swift_release();
  double result = v4;
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  *(void *)(a1 + 32) = v8;
  return result;
}

void *RaceElevationChartProperties.__allocating_init(activityType:chartPoints:)(void *a1, void *a2)
{
  swift_allocObject();
  double v4 = sub_261A95D28(a1, a2);

  return v4;
}

void *RaceElevationChartProperties.init(activityType:chartPoints:)(void *a1, void *a2)
{
  uint64_t v3 = sub_261A95D28(a1, a2);

  return v3;
}

uint64_t sub_261A9403C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460C0);
  MEMORY[0x270FA5388](v2 - 8);
  double v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_261B8BF08();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  swift_bridgeObjectRetain();
  sub_261A94874(&v20);
  uint64_t v9 = v20;
  unint64_t v10 = v20[2];
  if (v10)
  {
    uint64_t v11 = (char *)v20 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v12(v8, v11, v5);
    sub_261B8BED8();
    double v14 = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v10 > v9[2])
    {
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    v12(v4, &v11[*(void *)(v6 + 72) * (v10 - 1)], v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    double v14 = 0.0;
  }
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_261A960E4((uint64_t)v4);
    double v15 = 0.0;
  }
  else
  {
    sub_261B8BED8();
    double v15 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t result = sub_261B8C448();
  if (v15 - v14 < v18)
  {
    sub_261B8C468();
    return sub_261B8C468();
  }
  return result;
}

double sub_261A942E8(double a1, double a2)
{
  double v5 = vabdd_f64(a1, a2);
  sub_261B8C478();
  if (v5 > v6) {
    return *(double *)(v2 + 32);
  }
  if (a2 >= a1) {
    double v8 = a1;
  }
  else {
    double v8 = a2;
  }
  double v9 = v8 + v5 * 0.5;
  sub_261B8C438();
  double v7 = v9 - v10 * 0.5;
  sub_261B8C438();
  if (*(double *)(v2 + 40) < v11 + v7) {
    return 0.0;
  }
  if (v7 < 0.0)
  {
    sub_261B8C438();
    return 0.0;
  }
  return v7;
}

uint64_t sub_261A94384@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v5 = sub_261B8BF08();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v35 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  double v10 = (char *)&v34 - v9;
  MEMORY[0x270FA5388](v11);
  double v13 = (char *)&v34 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460C0);
  MEMORY[0x270FA5388](v14 - 8);
  double v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v2 + 24);
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v37 = v10;
    uint64_t v38 = v6;
    uint64_t v39 = a1;
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v20 = v6 + 16;
    uint64_t v19 = v21;
    uint64_t v22 = v17 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    uint64_t v23 = *(void *)(v20 + 56);
    uint64_t v36 = v17;
    swift_bridgeObjectRetain();
    while (1)
    {
      v19(v13, v22, v5);
      sub_261B8BEF8();
      if (v24 >= a2) {
        break;
      }
      (*(void (**)(char *, uint64_t))(v20 - 8))(v13, v5);
      v22 += v23;
      if (!--v18)
      {
        uint64_t v25 = 1;
        uint64_t v6 = v38;
        a1 = v39;
        goto LABEL_8;
      }
    }
    uint64_t v6 = v38;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v16, v13, v5);
    uint64_t v25 = 0;
    a1 = v39;
LABEL_8:
    uint64_t v17 = v36;
    double v10 = v37;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v16, v25, 1, v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v16, 1, v5) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v16, v5);
  }
  sub_261A960E4((uint64_t)v16);
  if (!*(void *)(v17 + 16)) {
    return sub_261B8BEE8();
  }
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v27 = v17 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v26(v10, v27, v5);
  sub_261B8BEF8();
  if (v28 >= a2) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v10, v5);
  }
  uint64_t v29 = *(void (**)(char *, uint64_t))(v6 + 8);
  v29(v10, v5);
  uint64_t v30 = *(void *)(v17 + 16);
  if (!v30) {
    return sub_261B8BEE8();
  }
  char v31 = v35;
  v26(v35, v27 + *(void *)(v6 + 72) * (v30 - 1), v5);
  sub_261B8BEF8();
  if (v32 > a2)
  {
    v29(v31, v5);
    return sub_261B8BEE8();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v31, v5);
}

uint64_t sub_261A9470C(double a1, double a2)
{
  double v2 = sub_261A942E8(a1, a2);
  double v4 = v3;
  sub_261B8C438();
  double v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9438F8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_261B93F70;
  *(double *)(v7 + 32) = v2;
  if (v2 <= v4)
  {
    double v9 = v6 * 0.25;
    uint64_t v10 = 5;
    do
    {
      unint64_t v11 = *(void *)(v7 + 24);
      if (v10 - 4 >= v11 >> 1) {
        uint64_t v7 = (uint64_t)sub_261A0AF84((void *)(v11 > 1), v10 - 3, 1, (void *)v7);
      }
      *(void *)(v7 + 16) = v10 - 3;
      *(double *)(v7 + 8 * v1sub_261A34804(0, 1, 2, 0) = v2;
      double v2 = v9 + v2;
      ++v10;
    }
    while (v2 <= v4);
  }
  return v7;
}

uint64_t RaceElevationChartProperties.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t RaceElevationChartProperties.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_261A94874(void **a1)
{
  uint64_t v2 = *(void *)(sub_261B8BF08() - 8);
  double v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    double v3 = (void *)sub_261B13B08(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_261A9491C(v5);
  *a1 = v3;
}

void sub_261A9491C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_261B8BF08();
  uint64_t v143 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v140 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v155 = (char *)&v134 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v150 = (char *)&v134 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v151 = (char *)&v134 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_261B8FB68();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      sub_261A9548C(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v136 = v13;
  if (v12 < 2)
  {
    uint64_t v19 = (char *)MEMORY[0x263F8EE78];
    unint64_t v142 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
    uint64_t v135 = MEMORY[0x263F8EE78];
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_106:
      uint64_t v127 = v143;
      if (v21 >= 2)
      {
        uint64_t v128 = *a1;
        do
        {
          unint64_t v129 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v128) {
            goto LABEL_147;
          }
          uint64_t v130 = *(void *)&v19[16 * v129 + 32];
          uint64_t v131 = *(void *)&v19[16 * v21 + 24];
          sub_261A9577C(v128 + *(void *)(v127 + 72) * v130, v128 + *(void *)(v127 + 72) * *(void *)&v19[16 * v21 + 16], v128 + *(void *)(v127 + 72) * v131, v142);
          if (v2) {
            break;
          }
          if (v131 < v130) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_261B13758((uint64_t)v19);
          }
          if (v129 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          uint64_t v132 = &v19[16 * v129 + 32];
          *(void *)uint64_t v132 = v130;
          *((void *)v132 + sub_261A34804(3, 0, 0, 1) = v131;
          unint64_t v133 = *((void *)v19 + 2);
          if (v21 > v133) {
            goto LABEL_138;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v133 - v21));
          *((void *)v19 + 2) = v133 - 1;
          unint64_t v21 = v133 - 1;
        }
        while (v133 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v135 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v17 = v143;
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_261B8F308();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = v143;
    unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v135 = v16;
    unint64_t v142 = v16 + v18;
  }
  uint64_t v20 = 0;
  uint64_t v148 = (void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v149 = v17 + 16;
  uint64_t v158 = (uint64_t *)(v17 + 32);
  uint64_t v19 = (char *)MEMORY[0x263F8EE78];
  long long v153 = a1;
  uint64_t v154 = v4;
  while (1)
  {
    uint64_t v22 = v20 + 1;
    uint64_t v141 = v20;
    if (v20 + 1 >= v12)
    {
      uint64_t v35 = v20;
      uint64_t v37 = v20 + 1;
    }
    else
    {
      uint64_t v23 = *a1;
      uint64_t v157 = *(void *)(v143 + 72);
      uint64_t v24 = v157;
      uint64_t v146 = v23;
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v143 + 16);
      v25(v151, v23 + v157 * v22, v4);
      uint64_t v156 = v12;
      uint64_t v26 = v150;
      v25(v150, v23 + v24 * v141, v4);
      uint64_t v27 = v151;
      sub_261B8BED8();
      double v29 = v28;
      sub_261B8BED8();
      double v31 = v30;
      double v32 = *(void (**)(char *, uint64_t))(v143 + 8);
      int v33 = v26;
      uint64_t v12 = v156;
      v32(v33, v4);
      uint64_t v34 = v27;
      uint64_t v35 = v141;
      v32(v34, v4);
      uint64_t v36 = v157;
      uint64_t v37 = v35 + 2;
      if (v35 + 2 < v12)
      {
        uint64_t v139 = v2;
        uint64_t v137 = v19;
        uint64_t v152 = v157 * v22;
        uint64_t v38 = v146;
        uint64_t v147 = v157 * v37;
        while (1)
        {
          uint64_t v39 = v37;
          double v40 = v151;
          v25(v151, v38 + v147, v4);
          uint64_t v41 = v150;
          v25(v150, v38 + v152, v4);
          sub_261B8BED8();
          double v43 = v42;
          sub_261B8BED8();
          BOOL v45 = v43 >= v44;
          v32(v41, v4);
          v32(v40, v4);
          if (v29 < v31 == v45) {
            break;
          }
          uint64_t v37 = v39 + 1;
          uint64_t v36 = v157;
          v38 += v157;
          if (v156 == v39 + 1)
          {
            uint64_t v12 = v156;
            uint64_t v37 = v156;
            uint64_t v19 = v137;
            uint64_t v2 = v139;
            uint64_t v35 = v141;
            goto LABEL_24;
          }
        }
        uint64_t v19 = v137;
        uint64_t v37 = v39;
        uint64_t v2 = v139;
        uint64_t v35 = v141;
        uint64_t v12 = v156;
        uint64_t v36 = v157;
      }
LABEL_24:
      a1 = v153;
      if (v29 < v31)
      {
        if (v37 < v35) {
          goto LABEL_141;
        }
        if (v35 < v37)
        {
          uint64_t v137 = v19;
          uint64_t v46 = 0;
          uint64_t v47 = v36 * (v37 - 1);
          uint64_t v48 = v37 * v36;
          uint64_t v49 = v35 * v36;
          do
          {
            if (v35 != v37 + v46 - 1)
            {
              uint64_t v139 = v2;
              uint64_t v50 = v146;
              if (!v146) {
                goto LABEL_146;
              }
              unint64_t v51 = v146 + v49;
              uint64_t v52 = v146 + v47;
              uint64_t v152 = *v158;
              ((void (*)(char *, uint64_t, uint64_t))v152)(v140, v146 + v49, v154);
              if (v49 < v47 || v51 >= v50 + v48)
              {
                uint64_t v4 = v154;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v4 = v154;
                if (v49 != v47) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(uint64_t, char *, uint64_t))v152)(v52, v140, v4);
              a1 = v153;
              uint64_t v2 = v139;
              uint64_t v36 = v157;
            }
            ++v35;
            --v46;
            v47 -= v36;
            v48 -= v36;
            v49 += v36;
          }
          while (v35 < v37 + v46);
          uint64_t v19 = v137;
          uint64_t v35 = v141;
          uint64_t v12 = v156;
        }
      }
    }
    if (v37 < v12)
    {
      if (__OFSUB__(v37, v35)) {
        goto LABEL_139;
      }
      if (v37 - v35 < v136) {
        break;
      }
    }
LABEL_56:
    if (v37 < v35) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v152 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_261B13500(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v76 = *((void *)v19 + 2);
    unint64_t v75 = *((void *)v19 + 3);
    unint64_t v21 = v76 + 1;
    if (v76 >= v75 >> 1) {
      uint64_t v19 = sub_261B13500((char *)(v75 > 1), v76 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    uint64_t v77 = v19 + 32;
    uint64_t v78 = &v19[16 * v76 + 32];
    uint64_t v79 = v152;
    *(void *)uint64_t v78 = v35;
    *((void *)v78 + sub_261A34804(3, 0, 0, 1) = v79;
    if (v76)
    {
      a1 = v153;
      while (1)
      {
        unint64_t v80 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v85 = &v77[16 * v21];
          uint64_t v86 = *((void *)v85 - 8);
          uint64_t v87 = *((void *)v85 - 7);
          BOOL v91 = __OFSUB__(v87, v86);
          uint64_t v88 = v87 - v86;
          if (v91) {
            goto LABEL_123;
          }
          uint64_t v90 = *((void *)v85 - 6);
          uint64_t v89 = *((void *)v85 - 5);
          BOOL v91 = __OFSUB__(v89, v90);
          uint64_t v83 = v89 - v90;
          char v84 = v91;
          if (v91) {
            goto LABEL_124;
          }
          unint64_t v92 = v21 - 2;
          uint64_t v93 = &v77[16 * v21 - 32];
          uint64_t v95 = *(void *)v93;
          uint64_t v94 = *((void *)v93 + 1);
          BOOL v91 = __OFSUB__(v94, v95);
          uint64_t v96 = v94 - v95;
          if (v91) {
            goto LABEL_126;
          }
          BOOL v91 = __OFADD__(v83, v96);
          uint64_t v97 = v83 + v96;
          if (v91) {
            goto LABEL_129;
          }
          if (v97 >= v88)
          {
            uint64_t v115 = &v77[16 * v80];
            uint64_t v117 = *(void *)v115;
            uint64_t v116 = *((void *)v115 + 1);
            BOOL v91 = __OFSUB__(v116, v117);
            uint64_t v118 = v116 - v117;
            if (v91) {
              goto LABEL_133;
            }
            BOOL v108 = v83 < v118;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v109 = *((void *)v19 + 4);
            uint64_t v110 = *((void *)v19 + 5);
            BOOL v91 = __OFSUB__(v110, v109);
            uint64_t v102 = v110 - v109;
            char v103 = v91;
            goto LABEL_88;
          }
          uint64_t v82 = *((void *)v19 + 4);
          uint64_t v81 = *((void *)v19 + 5);
          BOOL v91 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          char v84 = v91;
        }
        if (v84) {
          goto LABEL_125;
        }
        unint64_t v92 = v21 - 2;
        uint64_t v98 = &v77[16 * v21 - 32];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v101 = __OFSUB__(v99, v100);
        uint64_t v102 = v99 - v100;
        char v103 = v101;
        if (v101) {
          goto LABEL_128;
        }
        uint64_t v104 = &v77[16 * v80];
        uint64_t v106 = *(void *)v104;
        uint64_t v105 = *((void *)v104 + 1);
        BOOL v91 = __OFSUB__(v105, v106);
        uint64_t v107 = v105 - v106;
        if (v91) {
          goto LABEL_131;
        }
        if (__OFADD__(v102, v107)) {
          goto LABEL_132;
        }
        if (v102 + v107 >= v83)
        {
          BOOL v108 = v83 < v107;
LABEL_94:
          if (v108) {
            unint64_t v80 = v92;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v103) {
          goto LABEL_127;
        }
        uint64_t v111 = &v77[16 * v80];
        uint64_t v113 = *(void *)v111;
        uint64_t v112 = *((void *)v111 + 1);
        BOOL v91 = __OFSUB__(v112, v113);
        uint64_t v114 = v112 - v113;
        if (v91) {
          goto LABEL_130;
        }
        if (v114 < v102) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v119 = v80 - 1;
        if (v80 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v120 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v121 = v19;
        char v122 = &v77[16 * v119];
        uint64_t v123 = *(void *)v122;
        uint64_t v124 = &v77[16 * v80];
        uint64_t v125 = *((void *)v124 + 1);
        sub_261A9577C(v120 + *(void *)(v143 + 72) * *(void *)v122, v120 + *(void *)(v143 + 72) * *(void *)v124, v120 + *(void *)(v143 + 72) * v125, v142);
        if (v2) {
          goto LABEL_117;
        }
        if (v125 < v123) {
          goto LABEL_120;
        }
        if (v80 > *((void *)v121 + 2)) {
          goto LABEL_121;
        }
        *(void *)char v122 = v123;
        *(void *)&v77[16 * v119 + 8] = v125;
        unint64_t v126 = *((void *)v121 + 2);
        if (v80 >= v126) {
          goto LABEL_122;
        }
        uint64_t v19 = v121;
        unint64_t v21 = v126 - 1;
        memmove(&v77[16 * v80], v124 + 16, 16 * (v126 - 1 - v80));
        *((void *)v121 + 2) = v126 - 1;
        a1 = v153;
        uint64_t v4 = v154;
        if (v126 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
    a1 = v153;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v20 = v152;
    if (v152 >= v12) {
      goto LABEL_106;
    }
  }
  if (__OFADD__(v35, v136)) {
    goto LABEL_142;
  }
  if (v35 + v136 >= v12) {
    uint64_t v53 = v12;
  }
  else {
    uint64_t v53 = v35 + v136;
  }
  if (v53 >= v35)
  {
    if (v37 != v53)
    {
      uint64_t v137 = v19;
      uint64_t v139 = v2;
      uint64_t v54 = *(void *)(v143 + 72);
      uint64_t v144 = *(void (**)(char *, uint64_t, uint64_t))(v143 + 16);
      uint64_t v145 = v54;
      uint64_t v55 = v54 * (v37 - 1);
      uint64_t v56 = v37 * v54;
      uint64_t v138 = v53;
      do
      {
        uint64_t v58 = 0;
        uint64_t v152 = v37;
        uint64_t v146 = v56;
        uint64_t v147 = v55;
        while (1)
        {
          uint64_t v59 = *a1;
          uint64_t v156 = v56 + v58;
          uint64_t v157 = v35;
          uint64_t v60 = v56 + v58 + v59;
          uint64_t v61 = v151;
          uint64_t v62 = v144;
          v144(v151, v60, v4);
          uint64_t v63 = v55 + v58 + v59;
          char v64 = a1;
          uint64_t v65 = v150;
          v62(v150, v63, v4);
          sub_261B8BED8();
          double v67 = v66;
          sub_261B8BED8();
          double v69 = v68;
          char v70 = *v148;
          (*v148)(v65, v4);
          v70(v61, v4);
          if (v67 >= v69) {
            break;
          }
          uint64_t v71 = *v64;
          if (!*v64) {
            goto LABEL_144;
          }
          uint64_t v56 = v146;
          uint64_t v55 = v147;
          uint64_t v72 = v71 + v147 + v58;
          uint64_t v73 = (void (*)(uint64_t, char *, uint64_t))*v158;
          uint64_t v4 = v154;
          ((void (*)(char *, uint64_t, uint64_t))*v158)(v155, v71 + v146 + v58, v154);
          swift_arrayInitWithTakeFrontToBack();
          v73(v72, v155, v4);
          v58 -= v145;
          uint64_t v35 = v157 + 1;
          uint64_t v57 = v152;
          a1 = v153;
          if (v152 == v157 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v4 = v154;
        uint64_t v57 = v152;
        a1 = v64;
        uint64_t v56 = v146;
        uint64_t v55 = v147;
LABEL_49:
        uint64_t v37 = v57 + 1;
        v55 += v145;
        v56 += v145;
        uint64_t v35 = v141;
      }
      while (v37 != v138);
      uint64_t v37 = v138;
      uint64_t v2 = v139;
      uint64_t v19 = v137;
    }
    goto LABEL_56;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_261B8F9B8();
  __break(1u);
}

void sub_261A9548C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v33 = a1;
  uint64_t v7 = sub_261B8BF08();
  MEMORY[0x270FA5388](v7);
  double v44 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v39 = (char *)&v31 - v10;
  v13.n128_f64[0] = MEMORY[0x270FA5388](v11);
  uint64_t v38 = (char *)&v31 - v14;
  uint64_t v42 = a3;
  uint64_t v32 = a2;
  if (a3 != a2)
  {
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v37 = v12 + 16;
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v34 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v35 = a4;
    double v43 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v46 = v15 * (v42 - 1);
    uint64_t v40 = v15;
    uint64_t v16 = v15 * v42;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v45 = v33;
    uint64_t v41 = v16;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = v16 + v17 + *a4;
      uint64_t v20 = v38;
      unint64_t v21 = v36;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v36)(v38, v19, v7, v13);
      uint64_t v22 = v39;
      v21(v39, v46 + v17 + v18, v7);
      a4 = v35;
      sub_261B8BED8();
      double v24 = v23;
      sub_261B8BED8();
      double v26 = v25;
      uint64_t v27 = *v34;
      (*v34)(v22, v7);
      v27(v20, v7);
      uint64_t v16 = v41;
      if (v24 >= v26)
      {
LABEL_4:
        v46 += v40;
        v16 += v40;
        if (++v42 == v32) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v28 = *a4;
      if (!*a4) {
        break;
      }
      double v29 = (char *)(v28 + v46 + v17);
      double v30 = *v43;
      (*v43)(v44, v28 + v41 + v17, v7);
      swift_arrayInitWithTakeFrontToBack();
      v30(v29, (uint64_t)v44, v7);
      v17 -= v40;
      if (v42 == ++v45) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_261A9577C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_261B8BF08();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v67 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  double v66 = (char *)&v59 - v12;
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_71;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_72;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v70 = a1;
  unint64_t v69 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      unint64_t v19 = a3;
      uint64_t v20 = v17 * v14;
      if (a4 < a2 || a2 + v20 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v36 = a4 + v20;
      unint64_t v68 = a4 + v20;
      unint64_t v70 = a2;
      if (v20 >= 1 && a1 < a2)
      {
        unint64_t v38 = v19;
        uint64_t v39 = -v14;
        uint64_t v40 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
        uint64_t v65 = v9 + 16;
        uint64_t v61 = (void (**)(char *, uint64_t))(v9 + 8);
        uint64_t v62 = v40;
        unint64_t v60 = a4;
        unint64_t v63 = a1;
        uint64_t v41 = v66;
        do
        {
          unint64_t v64 = v38 + v39;
          uint64_t v42 = v8;
          unint64_t v43 = v38;
          uint64_t v44 = v8;
          uint64_t v45 = v62;
          v62(v41, v36 + v39, v42);
          unint64_t v46 = a2 + v39;
          uint64_t v47 = v67;
          v45(v67, a2 + v39, v44);
          uint64_t v8 = v44;
          sub_261B8BED8();
          double v49 = v48;
          sub_261B8BED8();
          double v51 = v50;
          uint64_t v52 = *v61;
          (*v61)(v47, v44);
          v52(v41, v44);
          if (v49 >= v51)
          {
            unint64_t v56 = v68;
            v68 += v39;
            unint64_t v38 = v64;
            if (v43 < v56 || v64 >= v56)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = a2;
              unint64_t v54 = v60;
              unint64_t v55 = v63;
            }
            else
            {
              unint64_t v55 = v63;
              if (v43 != v56) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v46 = a2;
              unint64_t v54 = v60;
            }
          }
          else
          {
            unint64_t v38 = v64;
            if (v43 < a2 || v64 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v54 = v60;
              unint64_t v55 = v63;
            }
            else
            {
              BOOL v53 = v43 == a2;
              unint64_t v54 = v60;
              unint64_t v55 = v63;
              if (!v53) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v70 += v39;
          }
          unint64_t v36 = v68;
          if (v68 <= v54) {
            break;
          }
          a2 = v46;
        }
        while (v46 > v55);
      }
      goto LABEL_69;
    }
  }
  else
  {
    unint64_t v64 = a3;
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v14;
      if (a4 < a1 || a1 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v63 = a4 + v18;
      unint64_t v68 = a4 + v18;
      if (v18 >= 1 && a2 < v64)
      {
        uint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
        uint64_t v65 = v9 + 16;
        double v23 = (void (**)(char *, uint64_t))(v9 + 8);
        double v24 = v66;
        do
        {
          v22(v24, a2, v8);
          double v25 = v67;
          v22(v67, a4, v8);
          sub_261B8BED8();
          double v27 = v26;
          sub_261B8BED8();
          double v29 = v28;
          double v30 = *v23;
          (*v23)(v25, v8);
          v30(v24, v8);
          unint64_t v31 = v70;
          if (v27 >= v29)
          {
            unint64_t v34 = v69 + v14;
            if (v70 < v69 || v70 >= v34)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v70 != v69)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v69 = v34;
            unint64_t v32 = a2;
          }
          else
          {
            unint64_t v32 = a2 + v14;
            if (v70 < a2 || v70 >= v32)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v70 == a2)
            {
              unint64_t v31 = a2;
            }
            else
            {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v70 = v31 + v14;
          a4 = v69;
          if (v69 >= v63) {
            break;
          }
          a2 = v32;
        }
        while (v32 < v64);
      }
LABEL_69:
      sub_261B135FC(&v70, &v69, (uint64_t *)&v68);
      return 1;
    }
  }
LABEL_73:
  uint64_t result = sub_261B8FA18();
  __break(1u);
  return result;
}

void *sub_261A95D28(void *a1, void *a2)
{
  double v3 = v2;
  uint64_t v6 = sub_261B8BF08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[8] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.682352941, 0.705882353, 0.749019608, 1.0);
  v3[2] = a1;
  v3[3] = a2;
  uint64_t v10 = a2[2];
  if (v10)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, (unint64_t)a2+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * (v10 - 1), v6);
    id v11 = a1;
    swift_bridgeObjectRetain();
    sub_261B8BEF8();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    id v14 = a1;
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
  }
  v3[4] = 0;
  uint64_t v3[5] = v13;
  sub_261A9403C(a2);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  v3[6] = v16;
  v3[7] = v18;
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  id v22 = objc_msgSend(v20, sel_colorWithAlphaComponent_, 0.2);

  v3[9] = MEMORY[0x263E4C7B0](v21);
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.2, 0.0823529412, 0.0666666667, 1.0);
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  id v26 = objc_msgSend(v24, sel_colorWithAlphaComponent_, 0.2);

  v3[10] = MEMORY[0x263E4C7B0](v25);
  return v3;
}

uint64_t type metadata accessor for RaceElevationChartProperties()
{
  return self;
}

uint64_t method lookup function for RaceElevationChartProperties(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RaceElevationChartProperties);
}

uint64_t dispatch thunk of RaceElevationChartProperties.__allocating_init(activityType:chartPoints:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_261A960E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_261A96144(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v8 = sub_261B8BDE8();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (double *)&v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(double *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v10);
  if ((*(unsigned int (**)(double *, uint64_t))(v9 + 88))(v12, v8) == *MEMORY[0x263F87D78])
  {
    (*(void (**)(double *, uint64_t))(v9 + 96))(v12, v8);
    if (*v12 >= 0.0)
    {
      uint64_t v13 = a2 + 9;
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(double *, uint64_t))(v9 + 8))(v12, v8);
  }
  uint64_t v13 = a2 + 10;
LABEL_6:
  uint64_t v14 = *v13;
  if (a4 >= a3) {
    double v15 = a3;
  }
  else {
    double v15 = a4;
  }
  if (a3 > a4) {
    double v16 = a3;
  }
  else {
    double v16 = a4;
  }
  swift_retain();
  sub_261A93E8C((uint64_t)v27, a3, a4);
  double v17 = sub_261A942E8(a3, a4);
  uint64_t v19 = v18;
  uint64_t v20 = a2[4];
  uint64_t v21 = a2[5];
  id v22 = _s11WorkoutCore04RaceA13ConfigurationC0A2UIE18pointOuterColorForySo7UIColorCAA0C8PositionOFZ_0(a1);
  uint64_t v23 = MEMORY[0x263E4C7B0](v22);
  MEMORY[0x270FA5388](v23);
  *(&v26 - 14) = a1;
  *(&v26 - 13) = (uint64_t)a2;
  *(&v26 - 12) = v20;
  *(&v26 - 1sub_261A34804(3, 0, 0, 1) = v21;
  *((double *)&v26 - 1sub_261A34804(0, 1, 2, 0) = a3;
  *((double *)&v26 - 9) = v17;
  *(&v26 - 8) = v19;
  *((double *)&v26 - 7) = v15;
  *((double *)&v26 - 6) = v16;
  *((double *)&v26 - 5) = a4;
  *(&v26 - 4) = (uint64_t)v27;
  *(&v26 - 3) = v14;
  *(&v26 - 2) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460D0);
  sub_261A9879C();
  sub_261B8D168();
  sub_261A03DA8((uint64_t)v27);
  swift_release();
  return swift_release();
}

uint64_t sub_261A963B4@<X0>(char *a1@<X0>, double *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, double a12@<D5>, double a13@<D6>, double a14@<D7>)
{
  uint64_t v209 = a5;
  uint64_t v208 = a4;
  uint64_t v202 = a3;
  uint64_t v218 = a1;
  uint64_t v223 = a6;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946210);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v191 = (uint64_t)&v189 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946220);
  uint64_t v195 = *(void *)(v194 - 8);
  MEMORY[0x270FA5388](v194);
  uint64_t v190 = (char *)&v189 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v196 = (char *)&v189 - v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9461F0);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v193 = (uint64_t)&v189 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9461E0);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v197 = (uint64_t)&v189 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946200);
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v192 = (uint64_t)&v189 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v201 = (uint64_t)&v189 - v35;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946140);
  MEMORY[0x270FA5388](v36 - 8);
  uint64_t v207 = (uint64_t)&v189 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946198);
  MEMORY[0x270FA5388](v38 - 8);
  uint64_t v205 = (uint64_t)&v189 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  char v222 = (uint64_t *)((char *)&v189 - v41);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946170);
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v204 = (uint64_t)&v189 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v44);
  uint64_t v221 = (uint64_t)&v189 - v45;
  uint64_t v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946228);
  uint64_t v219 = *(void *)(v220 - 8);
  MEMORY[0x270FA5388](v220);
  uint64_t v203 = (char *)&v189 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  double v49 = (char *)&v189 - v48;
  uint64_t v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946230);
  MEMORY[0x270FA5388](v199);
  unint64_t v198 = (char *)&v189 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946108);
  MEMORY[0x270FA5388](v51 - 8);
  uint64_t v200 = (char *)&v189 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460F8);
  MEMORY[0x270FA5388](v53 - 8);
  uint64_t v212 = (uint64_t)&v189 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9460E8);
  MEMORY[0x270FA5388](v55 - 8);
  uint64_t v217 = (uint64_t)&v189 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = sub_261B8BF08();
  uint64_t v213 = *(void *)(v214 - 8);
  MEMORY[0x270FA5388](v214);
  uint64_t v58 = (char *)&v189 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946188);
  uint64_t v226 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v216 = (uint64_t)&v189 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v61);
  long long v225 = (char *)&v189 - v62;
  uint64_t v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946218);
  uint64_t v227 = *(void *)(v224 - 8);
  MEMORY[0x270FA5388](v224);
  unint64_t v64 = (char *)&v189 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v65);
  uint64_t v211 = (uint64_t)&v189 - v66;
  MEMORY[0x270FA5388](v67);
  unint64_t v69 = (char *)&v189 - v68;
  uint64_t v70 = sub_261B8BDE8();
  uint64_t v71 = *(void *)(v70 - 8);
  double v72 = MEMORY[0x270FA5388](v70);
  uint64_t v74 = (char *)&v189 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, double))(v71 + 16))(v74, v218, v70, v72);
  int v75 = (*(uint64_t (**)(char *, uint64_t))(v71 + 88))(v74, v70);
  BOOL v76 = v75 == *MEMORY[0x263F87D78];
  uint64_t v215 = v69;
  if (v76)
  {
    sub_261B17440((uint64_t)a2, (uint64_t)v64, a10, a11);
    sub_261A942E8(a9, a14);
    sub_261B17994((uint64_t)a2, v202, (uint64_t)v49, a12, a13);
    sub_261B8C478();
    uint64_t v77 = v64;
    uint64_t v206 = v49;
    if (vabdd_f64(a9, a14) <= v78)
    {
      if (qword_26A942EF0 != -1) {
        swift_once();
      }
      double v104 = a2[6] + 4.0 / *(double *)&qword_26A953710 * (a2[7] - a2[6]);
      uint64_t v228 = sub_261A9470C(a9, a14);
      swift_getKeyPath();
      uint64_t v105 = swift_allocObject();
      *(void *)(v105 + 16) = a2;
      *(double *)(v105 + 24) = v104;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A9436B0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A946258);
      sub_2619F8AB8(&qword_26A946260, &qword_26A9436B0);
      uint64_t v106 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946130);
      uint64_t v229 = sub_261B8D278();
      uint64_t v230 = MEMORY[0x263F1B440];
      uint64_t v231 = MEMORY[0x263EFCD60];
      uint64_t v232 = MEMORY[0x263F1B420];
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v229 = v106;
      uint64_t v230 = OpaqueTypeConformance2;
      uint64_t v108 = swift_getOpaqueTypeConformance2();
      uint64_t v229 = v59;
      uint64_t v230 = v108;
      swift_getOpaqueTypeConformance2();
      uint64_t v80 = v221;
      sub_261B8EBD8();
      uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946180);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(v80, 0, 1, v109);
    }
    else
    {
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946180);
      uint64_t v80 = v221;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v221, 1, 1, v79);
    }
    double v110 = COERCE_DOUBLE(MEMORY[0x263E4C7B0](objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.568627451, 0.568627451, 0.568627451, 1.0)));
    sub_261A94384((uint64_t)v58, a14);
    sub_261B8BEF8();
    double v112 = v111;
    double v113 = a2[6];
    sub_261B8BED8();
    uint64_t v114 = v216;
    sub_261B1A598(v110, v216, v112, v113, v115);
    (*(void (**)(char *, uint64_t))(v213 + 8))(v58, v214);
    uint64_t v116 = v226;
    uint64_t v117 = (uint64_t)a2;
    uint64_t v118 = v225;
    (*(void (**)(void))(v226 + 32))();
    swift_release();
    unint64_t v119 = (void (*)(void, void, void))v222;
    sub_261B17D6C(v117, v208, v209, (uint64_t)v222, a9);
    uint64_t v120 = (uint64_t)v215;
    (*(void (**)(char *, char *, uint64_t))(v227 + 16))(v215, v77, v224);
    uint64_t v229 = v120;
    uint64_t v218 = v77;
    uint64_t v121 = v203;
    uint64_t v122 = v220;
    (*(void (**)(char *, char *, uint64_t))(v219 + 16))(v203, v206, v220);
    uint64_t v230 = (uint64_t)v121;
    uint64_t v123 = v80;
    uint64_t v124 = v59;
    uint64_t v210 = v59;
    uint64_t v125 = v204;
    sub_2619F86F0(v123, v204, &qword_26A946170);
    uint64_t v231 = v125;
    (*(void (**)(uint64_t, char *, uint64_t))(v116 + 16))(v114, v118, v124);
    uint64_t v232 = v114;
    uint64_t v126 = (uint64_t)v119;
    uint64_t v127 = v205;
    sub_2619F86F0(v126, v205, &qword_26A946198);
    uint64_t v233 = v127;
    uint64_t v128 = v207;
    sub_261A97E18(&v229, v207);
    sub_2619F8754(v127, &qword_26A946198);
    uint64_t v226 = *(void *)(v116 + 8);
    ((void (*)(uint64_t, uint64_t))v226)(v114, v124);
    sub_2619F8754(v125, &qword_26A946170);
    unint64_t v129 = *(void (**)(char *, uint64_t))(v219 + 8);
    v129(v121, v122);
    uint64_t v130 = *(void (**)(uint64_t, uint64_t))(v227 + 8);
    uint64_t v131 = v224;
    v130(v120, v224);
    uint64_t v132 = v212;
    sub_2619F86F0(v128, v212, &qword_26A946140);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946250);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v128, &qword_26A946140);
    uint64_t v133 = v217;
    sub_2619F86F0(v132, v217, &qword_26A9460F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946248);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v132, &qword_26A9460F8);
    sub_2619F86F0(v133, v223, &qword_26A9460E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946238);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v133, &qword_26A9460E8);
    sub_2619F8754((uint64_t)v222, &qword_26A946198);
    ((void (*)(char *, uint64_t))v226)(v225, v210);
    sub_2619F8754(v221, &qword_26A946170);
    v129(v206, v220);
    return ((uint64_t (*)(char *, uint64_t))v130)(v218, v131);
  }
  else if (v75 == *MEMORY[0x263F87D68])
  {
    sub_261B17440((uint64_t)a2, (uint64_t)v69, a7, a8);
    double v81 = COERCE_DOUBLE(MEMORY[0x263E4C7B0](objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.568627451, 0.568627451, 0.568627451, 1.0)));
    sub_261A94384((uint64_t)v58, a9);
    sub_261B8BEF8();
    double v83 = v82;
    double v84 = a2[6];
    sub_261B8BED8();
    uint64_t v85 = v216;
    sub_261B1A598(v81, v216, v83, v84, v86);
    (*(void (**)(char *, uint64_t))(v213 + 8))(v58, v214);
    uint64_t v87 = v225;
    uint64_t v88 = v226;
    char v222 = *(void **)(v226 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v222)(v225, v85, v59);
    swift_release();
    uint64_t v89 = *(void (**)(uint64_t, char *, uint64_t))(v227 + 16);
    uint64_t v90 = v211;
    BOOL v91 = v69;
    uint64_t v92 = v224;
    v89(v211, v91, v224);
    uint64_t v93 = *(void (**)(uint64_t, char *, uint64_t))(v88 + 16);
    v93(v85, v87, v59);
    sub_261B8CFF8();
    sub_261A98C5C(&qword_26A946118, &qword_26A946110, &qword_26A946120, &qword_26A946128);
    uint64_t v94 = v198;
    v89((uint64_t)v198, (char *)v90, v92);
    sub_261B8D278();
    uint64_t v95 = v199;
    uint64_t v96 = &v94[*(int *)(v199 + 48)];
    uint64_t v210 = v59;
    v93((uint64_t)v96, (char *)v85, v59);
    uint64_t v97 = v227;
    uint64_t v98 = (uint64_t)v200;
    (*(void (**)(char *, char *, uint64_t))(v227 + 32))(v200, v94, v92);
    ((void (*)(uint64_t, char *, uint64_t))v222)(v98 + *(int *)(v95 + 48), v96, v59);
    uint64_t v99 = *(void (**)(uint64_t, uint64_t))(v226 + 8);
    v226 += 8;
    v99(v85, v59);
    uint64_t v100 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
    v100(v211, v92);
    uint64_t v101 = v212;
    sub_2619F86F0(v98, v212, &qword_26A946108);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946250);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v98, &qword_26A946108);
    uint64_t v102 = v217;
    sub_2619F86F0(v101, v217, &qword_26A9460F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946248);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v101, &qword_26A9460F8);
    sub_2619F86F0(v102, v223, &qword_26A9460E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946238);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v102, &qword_26A9460E8);
    v99((uint64_t)v225, v210);
    return ((uint64_t (*)(char *, uint64_t))v100)(v215, v92);
  }
  else if (v75 == *MEMORY[0x263F87D88])
  {
    sub_261B17440((uint64_t)a2, (uint64_t)v69, a7, a8);
    uint64_t v134 = v69;
    double v135 = COERCE_DOUBLE(MEMORY[0x263E4C7B0](objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.568627451, 0.568627451, 0.568627451, 1.0)));
    sub_261A94384((uint64_t)v58, a14);
    sub_261B8BEF8();
    double v137 = v136;
    double v138 = a2[6];
    sub_261B8BED8();
    uint64_t v139 = v216;
    sub_261B1A598(v135, v216, v137, v138, v140);
    (*(void (**)(char *, uint64_t))(v213 + 8))(v58, v214);
    uint64_t v141 = v225;
    uint64_t v142 = v226;
    (*(void (**)(char *, uint64_t, uint64_t))(v226 + 32))(v225, v139, v59);
    swift_release();
    uint64_t v143 = MEMORY[0x263E4C7B0](objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.568627451, 0.568627451, 0.568627451, 1.0));
    uint64_t v144 = v201;
    sub_261B181C8((uint64_t)a2, v143, v209, v201, a9);
    swift_release();
    uint64_t v145 = v227;
    uint64_t v146 = v211;
    uint64_t v147 = v141;
    uint64_t v148 = v224;
    (*(void (**)(uint64_t, char *, uint64_t))(v227 + 16))(v211, v134, v224);
    uint64_t v229 = v146;
    (*(void (**)(uint64_t, char *, uint64_t))(v142 + 16))(v139, v141, v59);
    uint64_t v230 = v139;
    uint64_t v149 = v144;
    uint64_t v150 = v192;
    sub_2619F86F0(v149, v192, &qword_26A946200);
    uint64_t v231 = v150;
    uint64_t v151 = v193;
    sub_261A980FC(&v229, v193);
    sub_2619F8754(v150, &qword_26A946200);
    uint64_t v152 = *(void (**)(uint64_t, uint64_t))(v142 + 8);
    v152(v139, v59);
    long long v153 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
    v153(v146, v148);
    uint64_t v154 = v197;
    sub_2619F86F0(v151, v197, &qword_26A9461F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946240);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v151, &qword_26A9461F0);
    uint64_t v155 = v59;
    uint64_t v156 = v217;
    sub_2619F86F0(v154, v217, &qword_26A9461E0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946248);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v154, &qword_26A9461E0);
    sub_2619F86F0(v156, v223, &qword_26A9460E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946238);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v156, &qword_26A9460E8);
    sub_2619F8754(v201, &qword_26A946200);
    v152((uint64_t)v147, v155);
    return ((uint64_t (*)(char *, uint64_t))v153)(v215, v148);
  }
  else if (v75 == *MEMORY[0x263F87D70])
  {
    sub_261B17440((uint64_t)a2, (uint64_t)v69, a2[4], a9);
    uint64_t v157 = v211;
    sub_261B17440((uint64_t)a2, v211, a9, a2[5]);
    uint64_t v158 = v69;
    uint64_t v159 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946110);
    uint64_t v160 = sub_261B8CFF8();
    uint64_t v161 = sub_261A98C5C(&qword_26A946118, &qword_26A946110, &qword_26A946120, &qword_26A946128);
    uint64_t v229 = v159;
    uint64_t v230 = v160;
    uint64_t v231 = v161;
    uint64_t v232 = MEMORY[0x263EFCC18];
    swift_getOpaqueTypeConformance2();
    uint64_t v162 = v190;
    uint64_t v210 = v59;
    uint64_t v163 = v224;
    sub_261B8CFC8();
    uint64_t v164 = v227;
    uint64_t v165 = *(void **)(v227 + 8);
    uint64_t v221 = v227 + 8;
    char v222 = v165;
    ((void (*)(uint64_t, uint64_t))v165)(v157, v163);
    uint64_t v166 = v194;
    (*(void (**)(char *, char *, uint64_t))(v195 + 32))(v196, v162, v194);
    double v167 = COERCE_DOUBLE(MEMORY[0x263E4C7B0](objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.568627451, 0.568627451, 0.568627451, 1.0)));
    sub_261A94384((uint64_t)v58, a9);
    sub_261B8BEF8();
    double v169 = v168;
    double v170 = a2[6];
    sub_261B8BED8();
    uint64_t v171 = v216;
    sub_261B1A598(v167, v216, v169, v170, v172);
    (*(void (**)(char *, uint64_t))(v213 + 8))(v58, v214);
    uint64_t v173 = v225;
    uint64_t v174 = v226;
    uint64_t v175 = v210;
    (*(void (**)(char *, uint64_t, uint64_t))(v226 + 32))(v225, v171, v210);
    swift_release();
    uint64_t v176 = v158;
    uint64_t v177 = v224;
    (*(void (**)(uint64_t, char *, uint64_t))(v164 + 16))(v157, v176, v224);
    uint64_t v229 = v157;
    uint64_t v178 = v195;
    uint64_t v179 = v166;
    (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v162, v196, v166);
    uint64_t v230 = (uint64_t)v162;
    (*(void (**)(uint64_t, char *, uint64_t))(v174 + 16))(v171, v173, v175);
    uint64_t v231 = v171;
    uint64_t v180 = v191;
    sub_261A982F8(&v229, v191);
    uint64_t v227 = *(void *)(v174 + 8);
    ((void (*)(uint64_t, uint64_t))v227)(v171, v175);
    uint64_t v181 = *(void (**)(char *, uint64_t))(v178 + 8);
    v181(v162, v179);
    uint64_t v182 = (uint64_t (*)(char *, uint64_t))v222;
    ((void (*)(uint64_t, uint64_t))v222)(v157, v177);
    uint64_t v183 = v197;
    sub_2619F86F0(v180, v197, &qword_26A946210);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946240);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v180, &qword_26A946210);
    uint64_t v184 = v217;
    sub_2619F86F0(v183, v217, &qword_26A9461E0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946248);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v183, &qword_26A9461E0);
    sub_2619F86F0(v184, v223, &qword_26A9460E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946238);
    swift_storeEnumTagMultiPayload();
    sub_2619F8754(v184, &qword_26A9460E8);
    ((void (*)(char *, uint64_t))v227)(v173, v210);
    v181(v196, v194);
    return v182(v215, v224);
  }
  else
  {
    sub_261B17440((uint64_t)a2, (uint64_t)v69, a7, a8);
    uint64_t v185 = v227;
    uint64_t v186 = v69;
    id v187 = v69;
    uint64_t v188 = v224;
    (*(void (**)(uint64_t, char *, uint64_t))(v227 + 16))(v223, v186, v224);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A946238);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v185 + 8))(v187, v188);
    return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v74, v70);
  }
}

uint64_t sub_261A97E18@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946268);
  uint64_t v4 = (int *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946218);
  sub_261B8CFF8();
  sub_261A98C5C(&qword_26A946118, &qword_26A946110, &qword_26A946120, &qword_26A946128);
  uint64_t v8 = *a1;
  uint64_t v20 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, v8, v7);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946228);
  sub_261A98C5C(&qword_26A946150, &qword_26A946148, &qword_26A946158, &qword_26A946160);
  uint64_t v19 = &v6[v4[14]];
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(void))(v11 + 16))();
  sub_261A98CF0();
  uint64_t v18 = &v6[v4[18]];
  sub_2619F86F0(a1[2], (uint64_t)v18, &qword_26A946170);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946188);
  sub_261B8D278();
  uint64_t v13 = &v6[v4[22]];
  uint64_t v14 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v13, a1[3], v12);
  sub_261A98E8C();
  uint64_t v15 = (uint64_t)&v6[v4[26]];
  sub_2619F86F0(a1[4], v15, &qword_26A946198);
  uint64_t v16 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v21, v6, v20);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v16 + v4[14], v19, v10);
  sub_2619FB7EC((uint64_t)v18, v16 + v4[18], &qword_26A946170);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v16 + v4[22], v13, v12);
  return sub_2619FB7EC(v15, v16 + v4[26], &qword_26A946198);
}

uint64_t sub_261A980FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946270);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946218);
  sub_261B8CFF8();
  sub_261A98C5C(&qword_26A946118, &qword_26A946110, &qword_26A946120, &qword_26A946128);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, void, uint64_t))(v9 + 16))(v7, *a1, v8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946188);
  sub_261B8D278();
  uint64_t v11 = &v7[*(int *)(v5 + 56)];
  uint64_t v12 = *(void *)(v10 - 8);
  (*(void (**)(char *, void, uint64_t))(v12 + 16))(v11, a1[1], v10);
  sub_261A993B0();
  uint64_t v13 = (uint64_t)&v7[*(int *)(v5 + 72)];
  sub_2619F86F0(a1[2], v13, &qword_26A946200);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2 + *(int *)(v5 + 56), v11, v10);
  return sub_2619FB7EC(v13, a2 + *(int *)(v5 + 72), &qword_26A946200);
}

uint64_t sub_261A982F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946278);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946218);
  sub_261B8CFF8();
  sub_261A98C5C(&qword_26A946118, &qword_26A946110, &qword_26A946120, &qword_26A946128);
  uint64_t v9 = *a1;
  uint64_t v20 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, v9, v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946220);
  uint64_t v12 = &v7[*(int *)(v5 + 56)];
  uint64_t v13 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, a1[1], v11);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946188);
  sub_261B8D278();
  uint64_t v15 = &v7[*(int *)(v5 + 72)];
  uint64_t v16 = a1[2];
  uint64_t v17 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, v16, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v20);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2 + *(int *)(v5 + 56), v12, v11);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2 + *(int *)(v5 + 72), v15, v14);
}

uint64_t sub_261A98548@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946280);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946288);
  sub_261B8D1C8();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, void, uint64_t))(v9 + 16))(v7, *a1, v8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946290);
  sub_261B8D258();
  uint64_t v18 = &v7[*(int *)(v5 + 56)];
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(void))(v11 + 16))();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946298);
  sub_261B8D308();
  sub_261A996EC();
  uint64_t v13 = &v7[*(int *)(v5 + 72)];
  uint64_t v14 = a1[2];
  uint64_t v15 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, v14, v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2 + *(int *)(v5 + 56), v18, v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2 + *(int *)(v5 + 72), v13, v12);
}

uint64_t sub_261A9877C@<X0>(uint64_t a1@<X8>)
{
  return sub_261A963B4(*(char **)(v1 + 16), *(double **)(v1 + 24), *(long long **)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), a1, *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), *(double *)(v1 + 80), *(double *)(v1 + 88));
}

unint64_t sub_261A9879C()
{
  unint64_t result = qword_26A9460D8;
  if (!qword_26A9460D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9460D0);
    sub_261A991B0(&qword_26A9460E0, &qword_26A9460E8, (void (*)(void))sub_261A988CC, (void (*)(void))sub_261A99174);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946110);
    sub_261B8CFF8();
    sub_261A98C5C(&qword_26A946118, &qword_26A946110, &qword_26A946120, &qword_26A946128);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9460D8);
  }
  return result;
}

uint64_t sub_261A988CC()
{
  return sub_261A991B0(&qword_26A9460F0, &qword_26A9460F8, (void (*)(void))sub_261A98908, (void (*)(void))sub_261A98A78);
}

unint64_t sub_261A98908()
{
  unint64_t result = qword_26A946100;
  if (!qword_26A946100)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946108);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946110);
    sub_261B8CFF8();
    sub_261A98C5C(&qword_26A946118, &qword_26A946110, &qword_26A946120, &qword_26A946128);
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946130);
    sub_261B8D278();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946100);
  }
  return result;
}

unint64_t sub_261A98A78()
{
  unint64_t result = qword_26A946138;
  if (!qword_26A946138)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946140);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946110);
    sub_261B8CFF8();
    sub_261A98C5C(&qword_26A946118, &qword_26A946110, &qword_26A946120, &qword_26A946128);
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946148);
    sub_261A98C5C(&qword_26A946150, &qword_26A946148, &qword_26A946158, &qword_26A946160);
    swift_getOpaqueTypeConformance2();
    sub_261A98CF0();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946130);
    sub_261B8D278();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_261A98E8C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946138);
  }
  return result;
}

uint64_t sub_261A98C5C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_2619F8AB8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A98CF0()
{
  unint64_t result = qword_26A946168;
  if (!qword_26A946168)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946170);
    sub_261A98D64();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946168);
  }
  return result;
}

unint64_t sub_261A98D64()
{
  unint64_t result = qword_26A946178;
  if (!qword_26A946178)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946180);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946188);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946130);
    sub_261B8D278();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946178);
  }
  return result;
}

unint64_t sub_261A98E8C()
{
  unint64_t result = qword_26A946190;
  if (!qword_26A946190)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946198);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946130);
    sub_261B8D278();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9461A0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9461A8);
    sub_261B8D308();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9461B0);
    sub_261A99034();
    swift_getOpaqueTypeConformance2();
    sub_261A990D4();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946190);
  }
  return result;
}

unint64_t sub_261A99034()
{
  unint64_t result = qword_26A9461B8;
  if (!qword_26A9461B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9461B0);
    sub_2619F8AB8(&qword_26A9461C0, &qword_26A9461C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9461B8);
  }
  return result;
}

unint64_t sub_261A990D4()
{
  unint64_t result = qword_26A9461D0;
  if (!qword_26A9461D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9461A8);
    sub_2619F8AB8((unint64_t *)&qword_26A9439E0, &qword_26A9439E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9461D0);
  }
  return result;
}

uint64_t sub_261A99174()
{
  return sub_261A991B0(&qword_26A9461D8, &qword_26A9461E0, (void (*)(void))sub_261A99238, (void (*)(void))sub_261A99500);
}

uint64_t sub_261A991B0(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A99238()
{
  unint64_t result = qword_26A9461E8;
  if (!qword_26A9461E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9461F0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946110);
    sub_261B8CFF8();
    sub_261A98C5C(&qword_26A946118, &qword_26A946110, &qword_26A946120, &qword_26A946128);
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946130);
    sub_261B8D278();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_261A993B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9461E8);
  }
  return result;
}

unint64_t sub_261A993B0()
{
  unint64_t result = qword_26A9461F8;
  if (!qword_26A9461F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946200);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946130);
    sub_261B8D278();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_261B8D308();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9461B0);
    sub_261A99034();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9461F8);
  }
  return result;
}

unint64_t sub_261A99500()
{
  unint64_t result = qword_26A946208;
  if (!qword_26A946208)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946210);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946110);
    sub_261B8CFF8();
    sub_261A98C5C(&qword_26A946118, &qword_26A946110, &qword_26A946120, &qword_26A946128);
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946218);
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A946130);
    sub_261B8D278();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946208);
  }
  return result;
}

uint64_t sub_261A996A8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261A996E0@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_261B19FC4(a1, *(void *)(v2 + 16), a2, *(void *)(v2 + 24));
}

unint64_t sub_261A996EC()
{
  unint64_t result = qword_26A9462A0;
  if (!qword_26A9462A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9462A0);
  }
  return result;
}

uint64_t *sub_261A99740(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_261B8ADD8();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v16 = (char *)v7 + v15;
    uint64_t v17 = (char *)a2 + v15;
    swift_bridgeObjectRetain();
    if (v13(v17, 1, v11))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)a2 + v19;
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = v21[8];
  }
  return v7;
}

uint64_t sub_261A99998(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_261B8ADD8();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *sub_261A99ACC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8ADD8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_retain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  swift_bridgeObjectRetain();
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  return a1;
}

char *sub_261A99CC4(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8ADD8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)&a1[a3[6]] = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[8];
  id v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)id v22 = v24;
  return a1;
}

void *sub_261A99F90(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_261B8ADD8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)&a2[a3[6]];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[8];
  int v18 = (char *)a1 + v17;
  int v19 = &a2[v17];
  *(void *)int v18 = *(void *)v19;
  v18[8] = v19[8];
  return a1;
}

char *sub_261A9A17C(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_261B8ADD8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  *(void *)&a1[a3[6]] = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[8];
  id v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  *(void *)id v22 = *(void *)v23;
  v22[8] = v23[8];
  return a1;
}

uint64_t sub_261A9A438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_261A9A44C);
}

uint64_t sub_261A9A44C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_261A9A500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_261A9A514);
}

void *sub_261A9A514(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for IntervalTimeMetricView()
{
  uint64_t result = qword_26A9462A8;
  if (!qword_26A9462A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_261A9A60C()
{
  sub_261A4D6E4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_261A9A6C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_261A9A6DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_261B8ADD8();
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int v13 = (char *)&v28 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v28 - v15;
  uint64_t v17 = (void *)sub_261B8BC88();
  id v18 = objc_msgSend(v17, sel_goalTypeIdentifier);

  if (v18 == (id)2
    && (int v19 = (void *)sub_261B8BC88(),
        id v20 = objc_msgSend(v19, sel_value),
        v19,
        v20))
  {
    uint64_t v21 = type metadata accessor for IntervalTimeMetricView();
    sub_2619F86F0(v3 + *(int *)(v21 + 20), (uint64_t)v7, &qword_26A943B38);
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v13, a1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v7, 1, v8) == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v16, v13, v8);
      sub_2619F8754((uint64_t)v7, &qword_26A943B38);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v8);
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v16, v7, v8);
    }
    sub_261B8ACE8();
    id v25 = objc_msgSend(self, sel_secondUnit);
    objc_msgSend(v20, sel_doubleValueForUnit_, v25);

    uint64_t v26 = v28;
    sub_261B8AD38();

    uint64_t v27 = *(void (**)(char *, uint64_t))(v29 + 8);
    v27(v10, v8);
    v27(v16, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v8);
  }
  else
  {
    uint64_t v22 = v28;
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
    return v23(v22, 1, 1, v8);
  }
}

double sub_261A9AA78(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_261B8ADD8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v28 - v14;
  MEMORY[0x270FA5388](v16);
  id v18 = (char *)&v28 - v17;
  uint64_t v29 = a1;
  sub_261A9A6DC(a1, (uint64_t)v8);
  int v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v19(v8, 1, v9) == 1)
  {
    uint64_t v28 = v12;
    sub_2619F8754((uint64_t)v8, &qword_26A943B38);
    uint64_t v20 = type metadata accessor for IntervalTimeMetricView();
    sub_2619F86F0(v1 + *(int *)(v20 + 20), (uint64_t)v5, &qword_26A943B38);
    int v21 = v19(v5, 1, v9);
    uint64_t v22 = v29;
    if (v21 == 1)
    {
      sub_2619F8754((uint64_t)v5, &qword_26A943B38);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, v22, v9);
    }
    else
    {
      id v25 = v28;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v28, v5, v9);
      sub_261B8ACE8();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v25, v9);
    }
    sub_261B8AD28();
    double v24 = v26;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v8, v9);
    sub_261B8AD28();
    double v24 = v23;
    uint64_t v15 = v18;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v24;
}

void sub_261A9AD70()
{
  unint64_t v0 = (void *)sub_261B8BC88();
  id v1 = objc_msgSend(v0, sel_goalTypeIdentifier);

  if (v1 == (id)2)
  {
    uint64_t v2 = (void *)sub_261B8BC88();
    char v3 = sub_261B8F608();

    if (v3)
    {
      uint64_t v4 = (void *)sub_261B8BC88();
      if (sub_261B8F608()) {
        objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
      }
      else {
        _HKWorkoutGoalType.color.getter((uint64_t)objc_msgSend(v4, sel_goalTypeIdentifier));
      }

      goto LABEL_13;
    }
  }
  else
  {
    id v5 = objc_msgSend(self, sel_keyColors);
    if (!v5)
    {
      __break(1u);
      goto LABEL_17;
    }
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_nonGradientTextColor);

    if (v7) {
      goto LABEL_13;
    }
    __break(1u);
  }
  id v8 = objc_msgSend(self, sel_elapsedTimeColors);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_nonGradientTextColor);

    if (v10)
    {
LABEL_13:
LABEL_19:
      JUMPOUT(0x263E4C7B0);
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_17:
  __break(1u);
  goto LABEL_18;
}

uint64_t sub_261A9AEF8(double a1)
{
  uint64_t v2 = sub_261B8FB88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)v22 - v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v22 - v10;
  uint64_t v12 = (void *)sub_261B8BC88();
  id v13 = objc_msgSend(v12, sel_goalTypeIdentifier);

  uint64_t v14 = (_DWORD *)MEMORY[0x263F8E218];
  uint64_t v15 = (_DWORD *)MEMORY[0x263F8E220];
  if (v13 == (id)2) {
    uint64_t v16 = (unsigned int *)MEMORY[0x263F8E218];
  }
  else {
    uint64_t v16 = (unsigned int *)MEMORY[0x263F8E220];
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v11, *v16, v2);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v17(v8, v11, v2);
  v22[1] = round(a1 * 100.0) / 100.0;
  v17(v5, v8, v2);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v18 == *MEMORY[0x263F8E210]
    || v18 == *MEMORY[0x263F8E208]
    || v18 == *v14
    || v18 == *v15
    || v18 == *MEMORY[0x263F8E1F8]
    || v18 == *MEMORY[0x263F8E200])
  {
    int v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v8, v2);
  }
  else
  {
    sub_261B8F418();
    int v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v8, v2);
    v19(v5, v2);
  }
  sub_261B8C358();
  uint64_t v20 = sub_261B8C338();
  v19(v11, v2);
  return v20;
}

uint64_t sub_261A9B228@<X0>(uint64_t a1@<X8>)
{
  uint64_t v88 = a1;
  uint64_t v1 = type metadata accessor for IntervalTimeMetricView();
  uint64_t v74 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v75 = v2;
  uint64_t v76 = (uint64_t)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_261B8DE58();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v71 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A944E68);
  MEMORY[0x270FA5388](v79);
  uint64_t v77 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  double v78 = (char *)&v65 - v6;
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943378);
  uint64_t v81 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v80 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943380);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v86 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9462B8);
  MEMORY[0x270FA5388](v82);
  uint64_t v87 = (uint64_t)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9462C0);
  MEMORY[0x270FA5388](v84);
  uint64_t v85 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943B38);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v67 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v65 - v15;
  uint64_t v17 = sub_261B8ADD8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  double v23 = (char *)&v65 - v22;
  MEMORY[0x270FA5388](v24);
  double v26 = (char *)&v65 - v25;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v65 - v28;
  sub_261B8ADC8();
  uint64_t v89 = v1;
  uint64_t v30 = v70;
  sub_2619F86F0(v70 + *(int *)(v1 + 20), (uint64_t)v16, &qword_26A943B38);
  uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v66(v16, 1, v17) == 1)
  {
    sub_2619F8754((uint64_t)v16, &qword_26A943B38);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v29, v26, v17);
    uint64_t v31 = *(void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v32 = (v18 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v16, v17);
    sub_261B8ACE8();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v32 = (v18 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v31(v23, v17);
  }
  uint64_t v68 = v29;
  unint64_t v69 = v31;
  uint64_t v70 = v32;
  v31(v26, v17);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v29, v17);
  uint64_t v33 = v71;
  sub_261B8DE48();
  uint64_t v34 = v67;
  sub_2619F86F0(v30 + *(int *)(v89 + 28), v67, &qword_26A943B38);
  BOOL v35 = v66((char *)v34, 1, v17) != 1;
  sub_2619F8754(v34, &qword_26A943B38);
  uint64_t v36 = v72;
  uint64_t v37 = (uint64_t)v78;
  uint64_t v38 = v73;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v78, v33, v73);
  *(unsigned char *)(v37 + *(int *)(v79 + 36)) = v35;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v38);
  uint64_t v39 = v76;
  sub_261A9BD94(v30, v76);
  unint64_t v40 = (*(unsigned __int8 *)(v74 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  uint64_t v41 = swift_allocObject();
  sub_261A9BF90(v39, v41 + v40);
  sub_2619F86F0(v37, v77, &qword_26A944E68);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = sub_261A9BFF4;
  *(void *)(v42 + 24) = v41;
  sub_2619F8AB8(&qword_26A944E90, &qword_26A944E68);
  sub_261A02AC8();
  uint64_t v43 = v80;
  sub_261B8D478();
  sub_2619F8754(v37, &qword_26A944E68);
  if (qword_26A942CA8 != -1) {
    swift_once();
  }
  double v44 = *(double *)&qword_26A9447E0;
  uint64_t v45 = sub_261B8ECA8();
  uint64_t v46 = v86;
  double v48 = sub_2619FF4B8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v86, 0.0, 1, v44, 0, v45, v47);
  (*(void (**)(char *, uint64_t, double))(v81 + 8))(v43, v83, v48);
  LOBYTE(v44) = sub_261B8DFD8();
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
  sub_261B8D358();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v57 = v87;
  sub_2619F86F0(v46, v87, &qword_26A943380);
  uint64_t v58 = v57 + *(int *)(v82 + 36);
  *(unsigned char *)uint64_t v58 = LOBYTE(v44);
  *(void *)(v58 + 8) = v50;
  *(void *)(v58 + 16) = v52;
  *(void *)(v58 + 24) = v54;
  *(void *)(v58 + 32) = v56;
  *(unsigned char *)(v58 + 4sub_261A34804(0, 1, 2, 0) = 0;
  sub_2619F8754(v46, &qword_26A943380);
  sub_261A9AD70();
  uint64_t v60 = v59;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v62 = v85;
  sub_2619F86F0(v57, v85, &qword_26A9462B8);
  uint64_t v63 = (uint64_t *)(v62 + *(int *)(v84 + 36));
  uint64_t *v63 = KeyPath;
  v63[1] = v60;
  sub_2619F8754(v57, &qword_26A9462B8);
  v69(v68, v17);
  return sub_261A9C0BC(v62, v88);
}

void sub_261A9BB88(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_261B8ADD8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A944EE0);
  sub_261B8D468();
  double v6 = sub_261A9AA78((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v7 = sub_261A9AEF8(v6);
  uint64_t v9 = v8;
  uint64_t v10 = (void *)sub_261B8BC88();
  id v11 = objc_msgSend(v10, sel_goalTypeIdentifier);

  uint64_t v12 = 0;
  uint64_t v13 = 0;
  if (v11 == (id)2)
  {
    if (qword_26B416690 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v14 = (id)qword_26B416688;
    uint64_t v12 = sub_261B8AA48();
    uint64_t v13 = v15;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = v13;
  *(_WORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
}

uint64_t sub_261A9BD94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IntervalTimeMetricView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_261A9BDF8()
{
  uint64_t v1 = type metadata accessor for IntervalTimeMetricView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v10 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v4 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v5 = sub_261B8ADD8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 28);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  return MEMORY[0x270FA0238](v0, v3 + v10, v2 | 7);
}

uint64_t sub_261A9BF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IntervalTimeMetricView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_261A9BFF4(uint64_t a1@<X8>)
{
  type metadata accessor for IntervalTimeMetricView();
  sub_261A9BB88(a1);
}

uint64_t sub_261A9C074()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261A9C0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_261A4DAD4(a1, *(void (**)(void *__return_ptr, char *))(v2 + 16), a2);
}

uint64_t sub_261A9C0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9462C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_261A9C128()
{
  unint64_t result = qword_26A9462C8;
  if (!qword_26A9462C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A9462C0);
    sub_261A9C224(&qword_26A9462D0, &qword_26A9462B8, (void (*)(void))sub_261A9C1F4);
    sub_2619F8AB8((unint64_t *)&qword_26A943AF0, &qword_26A943AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9462C8);
  }
  return result;
}

uint64_t sub_261A9C1F4()
{
  return sub_261A9C224(&qword_26A9462D8, &qword_26A943380, (void (*)(void))sub_261A9C2A0);
}

uint64_t sub_261A9C224(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_261A9C2A0()
{
  unint64_t result = qword_26A9462E0;
  if (!qword_26A9462E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A943378);
    sub_261A02AC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9462E0);
  }
  return result;
}

uint64_t NLSessionActivityGoal.intervalDisplayString(formattingManager:distanceType:)(void *a1, uint64_t a2, char a3)
{
  if (objc_msgSend(v3, sel_goalTypeIdentifier) == (id)2
    && (id v7 = objc_msgSend(v3, sel_requiredDistance), v7, !v7))
  {
    objc_msgSend(v3, sel_doubleValue);
    sub_261B8C358();
    return sub_261B8C338();
  }
  else
  {
    uint64_t v8 = sub_261B8F148();
    uint64_t v10 = NLSessionActivityGoal.displayString(formattingManager:distanceType:localizedOpenString:)(a1, a2, a3 & 1, v8, v9);
    swift_bridgeObjectRelease();
    return v10;
  }
}

uint64_t NLSessionActivityGoal.displayString(formattingManager:distanceType:localizedOpenString:)(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945788);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a3 & 1;
  switch((unint64_t)objc_msgSend(v6, sel_goalTypeIdentifier))
  {
    case 0uLL:
      if (a5)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v38 = sub_261B8C5D8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v14, 1, 1, v38);
        a4 = sub_261B8F158();
        sub_261A6FF34((uint64_t)v14);
      }
      return a4;
    case 1uLL:
      goto LABEL_9;
    case 2uLL:
      id v16 = objc_msgSend(v6, sel_requiredDistance);
      if (!v16) {
        goto LABEL_24;
      }
      uint64_t v17 = v16;
      id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3F1A0]), sel_initWithGoalTypeIdentifier_value_, 1, v16);
      uint64_t v19 = NLSessionActivityGoal.displayString(formattingManager:distanceType:localizedOpenString:)(a1, a2, v15, 0, 0);
      uint64_t v21 = v20;

      objc_msgSend(v6, sel_doubleValue);
      id v22 = objc_msgSend(a1, sel_stringWithDuration_durationFormat_, 3);
      if (v22)
      {
        double v23 = v22;
        uint64_t v24 = sub_261B8F0F8();
        uint64_t v26 = v25;
      }
      else
      {
        uint64_t v24 = 0;
        uint64_t v26 = 0;
      }
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v39 = (id)qword_26B416688;
      sub_261B8AA48();

      if (v26)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
        uint64_t v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = xmmword_261B92AA0;
        uint64_t v41 = MEMORY[0x263F8D310];
        *(void *)(v40 + 56) = MEMORY[0x263F8D310];
        unint64_t v42 = sub_261A2B2E8();
        *(void *)(v40 + 32) = v19;
        *(void *)(v40 + 4sub_261A34804(0, 1, 2, 0) = v21;
        *(void *)(v40 + 96) = v41;
        *(void *)(v40 + 104) = v42;
        *(void *)(v40 + 64) = v42;
        *(void *)(v40 + 72) = v24;
        *(void *)(v40 + 8sub_261A34804(0, 1, 2, 0) = v26;
        a4 = sub_261B8F118();

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_24:
        objc_msgSend(v6, sel_doubleValue);
        id v27 = objc_msgSend(a1, sel_stringWithDuration_durationFormat_, 7);
        if (!v27)
        {
          __break(1u);
LABEL_28:
          unint64_t v47 = 0;
          unint64_t v48 = 0xE000000000000000;
          sub_261B8F8C8();
          swift_bridgeObjectRelease();
          unint64_t v47 = 0xD000000000000012;
          unint64_t v48 = 0x8000000261BA0770;
          id v45 = objc_msgSend(v6, sel_description);
          sub_261B8F0F8();

          sub_261B8F1C8();
          swift_bridgeObjectRelease();
LABEL_29:
          sub_261B8F9C8();
          __break(1u);
          JUMPOUT(0x261A9CA68);
        }
LABEL_25:
        uint64_t v43 = v27;
        a4 = sub_261B8F0F8();
      }
      break;
    case 3uLL:
      objc_msgSend(v6, sel_doubleValue);
      id v27 = objc_msgSend(a1, sel_localizedStringWithEnergyInCalories_energyType_unitStyle_, 1, 1);
      if (v27) {
        goto LABEL_25;
      }
      __break(1u);
LABEL_9:
      id v28 = objc_msgSend(v6, sel_value);
      if (!v28) {
        goto LABEL_29;
      }
      uint64_t v29 = v28;
      id v30 = objc_msgSend(v28, sel__unit);
      uint64_t v31 = sub_261A14958(v30);

      id v32 = objc_msgSend(self, sel_defaultPrecisionForDistanceUnit_, v31);
      objc_msgSend(v6, sel_doubleValue);
      if (v15 || a2 != 3) {
        id v33 = objc_msgSend(a1, sel_localizedStringWithDistanceInMeters_distanceUnit_unitStyle_decimalPrecision_roundingMode_decimalTrimmingMode_, v31, 2, v32, 6, 2);
      }
      else {
        id v33 = objc_msgSend(a1, sel_localizedStringWithDistanceInMeters_distanceType_distanceUnit_unitStyle_roundingMode_, 3, v31, 2, 6);
      }
      id v34 = v33;
      if (v34)
      {
        uint64_t v35 = sub_261B8F0F8();
        unint64_t v37 = v36;

        unint64_t v47 = v35;
        unint64_t v48 = v37;
        uint64_t v51 = 32;
        unint64_t v52 = 0xE100000000000000;
        uint64_t v49 = 0;
        unint64_t v50 = 0xE000000000000000;
        sub_261A029C4();
        a4 = sub_261B8F788();
        swift_bridgeObjectRelease();
      }
      else
      {

        a4 = 0;
      }
      break;
    default:
      goto LABEL_28;
  }
  return a4;
}

uint64_t sub_261A9CA78(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x736C61746976;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x736C61746976;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000015;
      uint64_t v6 = "watchSmartStackWidget";
      goto LABEL_4;
    case 2:
      unint64_t v5 = 0xD00000000000001FLL;
      uint64_t v6 = "watchAccessoryRectangularWidget";
LABEL_4:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x7974697669746361;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x7373656E746966;
      break;
    case 5:
      unint64_t v3 = 0x8000000261B9D470;
      unint64_t v5 = 0xD000000000000014;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v8 = 0xD000000000000015;
      uint64_t v9 = "watchSmartStackWidget";
      goto LABEL_11;
    case 2:
      unint64_t v8 = 0xD00000000000001FLL;
      uint64_t v9 = "watchAccessoryRectangularWidget";
LABEL_11:
      unint64_t v7 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      if (v5 != v8) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 3:
      unint64_t v7 = 0xE800000000000000;
      if (v5 != 0x7974697669746361) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v2 = 0x7373656E746966;
      goto LABEL_16;
    case 5:
      unint64_t v7 = 0x8000000261B9D470;
      if (v5 != 0xD000000000000014) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v5 != v2) {
        goto LABEL_20;
      }
LABEL_17:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_20:
      }
        char v10 = sub_261B8FBA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_261A9CC94()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A9CDB4()
{
  sub_261B8F188();
  return swift_bridgeObjectRelease();
}

uint64_t sub_261A9CEC0()
{
  return sub_261B8FCE8();
}

uint64_t TrainingLoadURLBuilder.url(route:source:)@<X0>(unsigned __int8 *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  unint64_t v14 = 0x736C61746976;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9453E0);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_261B8A978();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *a1;
  sub_261B8A968();
  sub_261B8A948();
  MEMORY[0x263E487F0](0x65636E616C6162, 0xE700000000000000);
  unint64_t v16 = 47;
  unint64_t v17 = 0xE100000000000000;
  sub_261B8F1C8();
  swift_bridgeObjectRelease();
  sub_261B8A938();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9462E8);
  sub_261B8A8D8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_261B93F70;
  sub_261B8A8A8();
  swift_bridgeObjectRelease();
  sub_261B8A8F8();
  sub_261B8A918();
  uint64_t v11 = sub_261B8ABF8();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11) == 1)
  {
    sub_2619F8754((uint64_t)v5, &qword_26A9453E0);
    unint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_261B8F8C8();
    swift_bridgeObjectRelease();
    unint64_t v16 = 0xD00000000000001FLL;
    unint64_t v17 = 0x8000000261BA07F0;
    sub_261B8F1C8();
    swift_bridgeObjectRelease();
    sub_261B8F1C8();
    switch(v10)
    {
      case 1:
        unint64_t v14 = 0xD000000000000015;
        break;
      case 2:
        unint64_t v14 = 0xD00000000000001FLL;
        break;
      case 3:
        unint64_t v14 = 0x7974697669746361;
        break;
      case 4:
        unint64_t v14 = 0x7373656E746966;
        break;
      case 5:
        unint64_t v14 = 0xD000000000000014;
        break;
      default:
        break;
    }
    sub_261B8F1C8();
    swift_bridgeObjectRelease();
    sub_261B8F9C8();
    __break(1u);
    JUMPOUT(0x261A9D540);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v15, v5, v11);
}

uint64_t TrainingLoadURLBuilder.Route.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_261A9D7AC(a1);
}

unint64_t TrainingLoadURLBuilder.Route.rawValue.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_261A9D598()
{
  return sub_261A9D828();
}

uint64_t sub_261A9D5B4()
{
  return sub_261B8F188();
}

uint64_t sub_261A9D5D0()
{
  return sub_261A9D8A0();
}

uint64_t sub_261A9D5EC@<X0>(BOOL *a1@<X8>)
{
  return sub_261A9D8F8(a1);
}

void sub_261A9D5F8(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x8000000261B9D3F0;
}

WorkoutUI::TrainingLoadURLBuilder::Source_optional __swiftcall TrainingLoadURLBuilder.Source.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_261B8FA38();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t TrainingLoadURLBuilder.Source.rawValue.getter()
{
  unint64_t result = 0x736C61746976;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
      unint64_t result = 0x7974697669746361;
      break;
    case 4:
      unint64_t result = 0x7373656E746966;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_261A9D748(unsigned __int8 *a1, char *a2)
{
  return sub_261A9CA78(*a1, *a2);
}

uint64_t sub_261A9D754()
{
  return sub_261A9CC94();
}

uint64_t sub_261A9D75C()
{
  return sub_261A9CDB4();
}

uint64_t sub_261A9D764()
{
  return sub_261A9CEC0();
}

WorkoutUI::TrainingLoadURLBuilder::Source_optional sub_261A9D76C(Swift::String *a1)
{
  return TrainingLoadURLBuilder.Source.init(rawValue:)(*a1);
}

unint64_t sub_261A9D778@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = TrainingLoadURLBuilder.Source.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t TrainingLoadURLBuilder.RoutingKey.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_261A9D7AC(a1);
}

uint64_t sub_261A9D7AC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_261B8FA38();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t TrainingLoadURLBuilder.RoutingKey.rawValue.getter()
{
  return 0x656372756F73;
}

uint64_t sub_261A9D814()
{
  return sub_261A9D828();
}

uint64_t sub_261A9D828()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A9D878()
{
  return sub_261B8F188();
}

uint64_t sub_261A9D88C()
{
  return sub_261A9D8A0();
}

uint64_t sub_261A9D8A0()
{
  return sub_261B8FCE8();
}

uint64_t sub_261A9D8EC@<X0>(BOOL *a1@<X8>)
{
  return sub_261A9D8F8(a1);
}

uint64_t sub_261A9D8F8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_261B8FA38();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_261A9D948(void *a1@<X8>)
{
  *a1 = 0x656372756F73;
  a1[1] = 0xE600000000000000;
}

uint64_t TrainingLoadURLBuilder.getTrainingLoadRoute(from:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = sub_261B8ABC8();
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 16);
  if (!v4) {
    goto LABEL_8;
  }
  if (*(void *)(result + 32) != 47 || *(void *)(result + 40) != 0xE100000000000000)
  {
    uint64_t result = sub_261B8FBA8();
    if ((result & 1) == 0)
    {
LABEL_17:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_261B8F258();
      uint64_t v11 = sub_261B8FA38();
      uint64_t result = swift_bridgeObjectRelease();
      BOOL v6 = v11 != 0;
      goto LABEL_18;
    }
  }
  if (v4 == 1)
  {
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
    BOOL v6 = 1;
LABEL_18:
    *a1 = v6;
    return result;
  }
  uint64_t v7 = (void *)(v3 + 56);
  uint64_t v8 = 1;
  while (1)
  {
    uint64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (*(v7 - 1) != 47 || *v7 != 0xE100000000000000)
    {
      uint64_t result = sub_261B8FBA8();
      if ((result & 1) == 0) {
        goto LABEL_17;
      }
    }
    v7 += 2;
    ++v8;
    if (v9 == v4) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t TrainingLoadURLBuilder.getTrainingLoadSource(from:)@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_261B8A8D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9462F0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9462F8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_261B8A978();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261B8A908();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    uint64_t result = sub_2619F8754((uint64_t)v11, &qword_26A9462F8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    uint64_t v17 = sub_261B8A8E8();
    if (v17)
    {
      uint64_t v37 = v13;
      uint64_t v18 = *(void *)(v17 + 16);
      if (v18)
      {
        id v32 = v15;
        id v33 = v8;
        uint64_t v34 = v12;
        uint64_t v35 = v3;
        unint64_t v36 = a1;
        uint64_t v20 = v3 + 16;
        uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
        unint64_t v21 = v17 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
        id v22 = (void (**)(char *, uint64_t))(v3 + 8);
        uint64_t v23 = *(void *)(v20 + 56);
        v31[1] = v17;
        swift_bridgeObjectRetain();
        while (1)
        {
          v19(v5, v21, v2);
          if (sub_261B8A8B8() == 0x656372756F73 && v24 == 0xE600000000000000) {
            break;
          }
          char v25 = sub_261B8FBA8();
          swift_bridgeObjectRelease();
          if (v25) {
            goto LABEL_13;
          }
          (*v22)(v5, v2);
          v21 += v23;
          if (!--v18)
          {
            swift_bridgeObjectRelease();
            uint64_t v26 = 1;
            uint64_t v3 = v35;
            a1 = v36;
            uint64_t v8 = v33;
            uint64_t v12 = v34;
            uint64_t v13 = v37;
            goto LABEL_14;
          }
        }
        swift_bridgeObjectRelease();
LABEL_13:
        uint64_t v13 = v37;
        swift_bridgeObjectRelease();
        uint64_t v3 = v35;
        uint64_t v8 = v33;
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v33, v5, v2);
        uint64_t v26 = 0;
        a1 = v36;
        uint64_t v12 = v34;
LABEL_14:
        uint64_t v15 = v32;
      }
      else
      {
        uint64_t v26 = 1;
        uint64_t v13 = v37;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, v26, 1, v2);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
      {
        sub_2619F8754((uint64_t)v8, &qword_26A9462F0);
      }
      else
      {
        uint64_t v27 = sub_261B8A8C8();
        uint64_t v29 = v28;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        if (v29)
        {
          v30._countAndFlagsBits = v27;
          v30._object = v29;
          TrainingLoadURLBuilder.Source.init(rawValue:)(v30);
          return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        }
      }
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  *a1 = 6;
  return result;
}

unint64_t sub_261A9DF4C()
{
  unint64_t result = qword_26A946300;
  if (!qword_26A946300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946300);
  }
  return result;
}

unint64_t sub_261A9DFA4()
{
  unint64_t result = qword_26A946308;
  if (!qword_26A946308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946308);
  }
  return result;
}

unint64_t sub_261A9DFFC()
{
  unint64_t result = qword_26A946310;
  if (!qword_26A946310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946310);
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadURLBuilder()
{
  return &type metadata for TrainingLoadURLBuilder;
}

ValueMetadata *type metadata accessor for TrainingLoadURLBuilder.Route()
{
  return &type metadata for TrainingLoadURLBuilder.Route;
}

uint64_t getEnumTagSinglePayload for TrainingLoadURLBuilder.Source(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TrainingLoadURLBuilder.Source(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_261A34804(3, 0, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261A9E1D0);
      case 4:
        *(_DWORD *)(result + sub_261A34804(3, 0, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_261A34804(3, 0, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_261A34804(3, 0, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadURLBuilder.Source()
{
  return &type metadata for TrainingLoadURLBuilder.Source;
}

unsigned char *_s9WorkoutUI22TrainingLoadURLBuilderV5RouteOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x261A9E2A4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadURLBuilder.RoutingKey()
{
  return &type metadata for TrainingLoadURLBuilder.RoutingKey;
}

uint64_t DownhillRunCountMetricView.init(downhillRunCount:formattingManager:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a3;
  *(void *)(a4 + 8) = result;
  *(unsigned char *)(a4 + 16) = a2 & 1;
  return result;
}

uint64_t DownhillRunCountMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A945788);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + 8);
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t v6 = 0;
  }
  v15[1] = v6;
  sub_261A9E424();
  uint64_t v7 = sub_261B8F798();
  uint64_t v9 = v8;
  uint64_t v10 = sub_261B8C5D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  uint64_t v11 = sub_261B8F158();
  uint64_t v13 = v12;
  uint64_t result = sub_261A6FF34((uint64_t)v5);
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 4sub_261A34804(0, 1, 2, 0) = 0;
  *(_WORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  return result;
}

unint64_t sub_261A9E424()
{
  unint64_t result = qword_26A946318;
  if (!qword_26A946318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A946318);
  }
  return result;
}

uint64_t sub_261A9E478()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for DownhillRunCountMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  return a1;
}

void destroy for DownhillRunCountMetricView(id *a1)
{
}

uint64_t assignWithCopy for DownhillRunCountMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  return a1;
}

uint64_t assignWithTake for DownhillRunCountMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownhillRunCountMetricView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownhillRunCountMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownhillRunCountMetricView()
{
  return &type metadata for DownhillRunCountMetricView;
}

uint64_t SegmentDurationMetricView.init(segmentIndex:segmentDuration:workoutPaused:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a3 = a1;
  *(double *)(a3 + 8) = a4;
  *(unsigned char *)(a3 + 16) = a2;
  *(void *)(a3 + 24) = result;
  *(unsigned char *)(a3 + 32) = 0;
  return result;
}

uint64_t SegmentDurationMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946320);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *(_OWORD *)(v1 + 16);
  v9[0] = *(_OWORD *)v1;
  v9[1] = v6;
  char v10 = *(unsigned char *)(v1 + 32);
  *(void *)id v5 = sub_261B8DA98();
  *((void *)v5 + sub_261A34804(3, 0, 0, 1) = 0;
  v5[16] = 1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946328);
  sub_261A9E754((uint64_t)v9, (uint64_t)&v5[*(int *)(v7 + 44)]);
  sub_2619F86F0((uint64_t)v5, a1, &qword_26A946320);
  *(void *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A946330) + 36)) = 0;
  return sub_2619F8754((uint64_t)v5, &qword_26A946320);
}

void sub_261A9E754(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A943488);
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946348);
  MEMORY[0x270FA5388](v69);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946350);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946358);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v55 - v16;
  uint64_t v18 = *(void *)(a1 + 8);
  id v19 = objc_msgSend(self, sel_splitsColors);
  id v20 = objc_msgSend(v19, sel_valueDisplayColor);

  if (v20)
  {
    uint64_t v68 = MEMORY[0x263E4C7B0](v20);
    uint64_t v21 = *(void *)(a1 + 24);
    char v22 = *(unsigned char *)(a1 + 32);
    sub_261A9F264(a1);
    sub_2619FA43C(v21, v22, &v76);
    sub_261A9F294(a1);
    int v67 = v76;
    if (v76 == 2)
    {
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0(75.0, 80.0, 75.0, 80.0, 80.0, 84.0, 84.0);
      sub_261B8EC98();
      uint64_t v65 = 1;
      sub_261B8D4D8();
      uint64_t v64 = v76;
      uint64_t v63 = v77;
      uint64_t v62 = v78;
      uint64_t v61 = v79;
      uint64_t v60 = v80;
      uint64_t v59 = v81;
    }
    else
    {
      uint64_t v65 = 0;
      uint64_t v64 = 0;
      uint64_t v63 = 0;
      uint64_t v62 = 0;
      uint64_t v61 = 0;
      uint64_t v60 = 0;
      uint64_t v59 = 0;
    }
    sub_261A9F264(a1);
    sub_2619FA43C(v21, v22, &v73);
    sub_261A9F294(a1);
    uint64_t v66 = v9;
    if (v73 <= 8u && ((1 << v73) & 0x181) != 0)
    {
      uint64_t v56 = v8;
      uint64_t v23 = (uint64_t)v11;
      uint64_t v57 = v17;
      uint64_t v58 = v14;
      uint64_t v24 = *(void *)a1;
      uint64_t v72 = *(void *)a1;
      uint64_t v25 = MEMORY[0x263F8D6C8];
      uint64_t v73 = sub_261B8FB78();
      uint64_t v74 = v26;
      sub_261B8F1C8();
      uint64_t v27 = sub_261B8E918();
      uint64_t v28 = sub_261B8E1B8();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v73 = v27;
      uint64_t v74 = KeyPath;
      uint64_t v75 = v28;
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v30 = (id)qword_26B416688;
      sub_261B8AA48();

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_261B93F70;
      uint64_t v32 = MEMORY[0x263F8D750];
      *(void *)(v31 + 56) = v25;
      *(void *)(v31 + 64) = v32;
      *(void *)(v31 + 32) = v24;
      uint64_t v33 = sub_261B8F0C8();
      uint64_t v35 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v70 = v33;
      uint64_t v71 = v35;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A946360);
      sub_261A9F2CC();
      sub_261A029C4();
      uint64_t v36 = v23;
      sub_261B8E668();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_2619F86F0(v23, (uint64_t)v56, &qword_26A946350);
      swift_storeEnumTagMultiPayload();
      sub_261A9F36C();
      uint64_t v17 = v57;
      sub_261B8DD68();
      uint64_t v14 = v58;
    }
    else
    {
      uint64_t v58 = v11;
      uint64_t v37 = *(void *)a1;
      uint64_t v72 = *(void *)a1;
      uint64_t v73 = sub_261B8FB78();
      uint64_t v74 = v38;
      sub_261B8F1C8();
      uint64_t v39 = sub_261B8E918();
      uint64_t v40 = sub_261B8E118();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v6, 1, 1, v40);
      uint64_t v41 = sub_261B8E188();
      sub_2619F8754((uint64_t)v6, &qword_26A943488);
      uint64_t v42 = swift_getKeyPath();
      uint64_t v57 = (char *)v39;
      uint64_t v73 = v39;
      uint64_t v74 = v42;
      uint64_t v75 = v41;
      if (qword_26B416690 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v43 = (id)qword_26B416688;
      sub_261B8AA48();

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A943F60);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_261B93F70;
      uint64_t v45 = MEMORY[0x263F8D750];
      *(void *)(v44 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v44 + 64) = v45;
      *(void *)(v44 + 32) = v37;
      uint64_t v46 = sub_261B8F0C8();
      uint64_t v48 = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v70 = v46;
      uint64_t v71 = v48;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A946360);
      sub_261A9F2CC();
      sub_261A029C4();
      uint64_t v36 = (uint64_t)v58;
      sub_261B8E668();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_2619F86F0(v36, (uint64_t)v8, &qword_26A946350);
      swift_storeEnumTagMultiPayload();
      sub_261A9F36C();
      sub_261B8DD68();
    }
    BOOL v49 = v67 != 2;
    sub_2619F8754(v36, &qword_26A946350);
    sub_2619F86F0((uint64_t)v17, (uint64_t)v14, &qword_26A946358);
    *(void *)a2 = v18;
    *(unsigned char *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = v68;
    *(void *)(a2 + 24) = 0x3FF0000000000000;
    uint64_t v50 = v65;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 4sub_261A34804(0, 1, 2, 0) = v50;
    uint64_t v51 = v63;
    *(void *)(a2 + 48) = v64;
    *(void *)(a2 + 56) = v51;
    uint64_t v52 = v61;
    *(void *)(a2 + 64) = v62;
    *(void *)(a2 + 72) = v52;
    uint64_t v53 = v59;
    *(void *)(a2 + 8sub_261A34804(0, 1, 2, 0) = v60;
    *(void *)(a2 + 88) = v53;
    *(unsigned char *)(a2 + 96) = v49;
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A946378);
    sub_2619F86F0((uint64_t)v14, a2 + *(int *)(v54 + 64), &qword_26A946358);
    swift_retain();
    sub_2619F8754((uint64_t)v17, &qword_26A946358);
    sub_2619F8754((uint64_t)v14, &qword_26A946358);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}