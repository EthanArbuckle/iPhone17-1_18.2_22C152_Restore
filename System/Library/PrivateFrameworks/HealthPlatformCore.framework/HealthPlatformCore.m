uint64_t getEnumTagSinglePayload for ModelTrainingScenario(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelTrainingScenario(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for GeneratorPipelineManagerWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for GeneratorPipelineManager.GenerationState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t GeneratorPipelineManager.GenerationState.outstandingGenerators.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1DD44A0(uint64_t a1)
{
  return sub_1C1DE7DB4(a1, (uint64_t (*)(void))sub_1C1DFC5AC, sub_1C1E06EAC);
}

void sub_1C1DD44CC(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_1C1E0DC80(a1, *(void **)(v2 + 16), a2);
}

uint64_t getEnumTagSinglePayload for PipelineProviderWrappers(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t GeneratorPipelineManagerWrapper.pluginInfo.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1DFE408(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_1C1DD4534()
{
  sub_1C1DD455C();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1DD455C()
{
  swift_beginAccess();
  return *(void *)(v0 + 24);
}

uint64_t sub_1C1DD4590(uint64_t *a1)
{
  return sub_1C1E0F4E0(*a1, a1[1], *(uint64_t (**)(char *, uint64_t))(v1 + 16), (void (*)(uint64_t, unsigned char *))sub_1C1E10C8C, (void (*)(uint64_t, unsigned char *))sub_1C1E110DC, (void (*)(uint64_t, unsigned char *))sub_1C1E11F54, (void (*)(uint64_t, unsigned char *))sub_1C1E123A4);
}

uint64_t sub_1C1DD4604(uint64_t *a1)
{
  return sub_1C1E0F4E0(*a1, a1[1], *(uint64_t (**)(char *, uint64_t))(v1 + 16), (void (*)(uint64_t, unsigned char *))sub_1C1E10338, (void (*)(uint64_t, unsigned char *))sub_1C1E10788, (void (*)(uint64_t, unsigned char *))sub_1C1E115E0, (void (*)(uint64_t, unsigned char *))sub_1C1E11A50);
}

uint64_t sub_1C1DD4678@<X0>(uint64_t (**a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C1E010F4(a1, *(void *)(v2 + 16), *(uint64_t (***)(void))(v2 + 24));
  *a2 = result;
  return result;
}

uint64_t GeneratorPipelineManager.store.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1DFE408(v1 + 64, a1);
}

uint64_t SummaryTabFeedPopulationManager.__allocating_init(healthExperienceStore:healthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C1DFC548(0, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  v8 = (char *)v18 - v7;
  uint64_t v9 = sub_1C1EAD258();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFE408(a1, (uint64_t)v19);
  uint64_t v13 = type metadata accessor for SummaryTabRelevanceEngineCoordinator();
  sub_1C1DFE408(a1, (uint64_t)v18);
  static SummaryTabRelevanceEngineCoordinator.defaultModelURL.getter();
  if (qword_1EBB648C8 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v9, (uint64_t)qword_1EBB648A8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, v14, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  uint64_t v15 = SummaryTabRelevanceEngineCoordinator.__allocating_init(healthExperienceStore:engineName:modelURL:pretrainedModelURL:)((uint64_t)v18, 0xD000000000000016, 0x80000001C1EB4D50, (uint64_t)v12, (uint64_t)v8);
  v18[3] = v13;
  v18[4] = &protocol witness table for SummaryTabRelevanceEngineCoordinator;
  v18[0] = v15;
  uint64_t v16 = (*(uint64_t (**)(unsigned char *, uint64_t, void *))(v3 + 128))(v19, a2, v18);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v16;
}

uint64_t sub_1C1DD490C(uint64_t a1, uint64_t a2)
{
  sub_1C1DFC41C(0, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1DD49A0()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___crossedFeatures;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___crossedFeatures))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___crossedFeatures);
  }
  else
  {
    uint64_t v2 = sub_1C1DE4F9C();
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static SummaryTabRelevanceEngineCoordinator.defaultModelURL.getter()
{
  uint64_t v0 = sub_1C1EAD258();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SummaryTabRelevanceEngineCoordinator.defaultModelContainerURL.getter((uint64_t)v3);
  sub_1C1EAD228();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void *sub_1C1DD4B28(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1DF2AEC(0, &qword_1EBB670A8, (unint64_t *)&qword_1EBB66220);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C1E1646C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BasicPluginInfo()
{
  return self;
}

void sub_1C1DD4C84()
{
  if (!qword_1EBB660C0)
  {
    sub_1C1EADD48();
    unint64_t v0 = sub_1C1EAF2A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB660C0);
    }
  }
}

uint64_t sub_1C1DD4D38()
{
  return swift_initClassMetadata2();
}

void sub_1C1DD4D80()
{
  if (!*(void *)(v0 + 64))
  {
    uint64_t v1 = v0;
    uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 72);
    if (v2)
    {
      uint64_t v3 = swift_retain();
      uint64_t v4 = v2(v3);
      sub_1C1E16DFC((uint64_t)v2);
    }
    else
    {
      uint64_t v4 = 0;
    }
    *(void *)(v1 + 64) = v4;
    swift_release();
  }
}

uint64_t initializeWithCopy for LegacyFeedItemContextChangePublisher(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  unint64_t v6 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v6;
  id v7 = v6;
  return a1;
}

uint64_t type metadata accessor for RelevanceEngineMetricsBlockRecorder()
{
  return self;
}

uint64_t type metadata accessor for FoundationPluginBundleProvider()
{
  return self;
}

uint64_t sub_1C1DD4F54(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a2;
  sub_1C1DEB760(0, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  long long v5 = (char *)&v32 - v4;
  uint64_t v6 = sub_1C1EAD258();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  v45 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  v44 = (char *)&v32 - v11;
  uint64_t result = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v49 = MEMORY[0x1E4FBC860];
  uint64_t v43 = *(void *)(a1 + 16);
  if (v43)
  {
    unint64_t v15 = 0;
    uint64_t v39 = a1;
    uint64_t v40 = v7 + 48;
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    v36 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v37 = v7;
    uint64_t v41 = v7 + 56;
    uint64_t v42 = v7 + 16;
    unint64_t v32 = (v7 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v33 = v6;
    v34 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    v38 = v5;
    while (v15 < *(void *)(a1 + 16))
    {
      unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v18 = *(void *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, a1 + v17 + v18 * v15, v6);
      v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v35(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
        goto LABEL_15;
      }
      uint64_t v47 = v18;
      unint64_t v48 = v17;
      v19 = *v16;
      (*v16)(v14, v5, v6);
      v20 = v14;
      v21 = v44;
      sub_1C1EAD208();
      v22 = v16;
      uint64_t v23 = sub_1C1EAD1E8();
      uint64_t v25 = v24;
      v26 = *v36;
      (*v36)(v21, v6);
      LOBYTE(v23) = sub_1C1E73FD4(v23, v25, v46);
      swift_bridgeObjectRelease();
      if (v23)
      {
        uint64_t result = v26(v20, v6);
        long long v5 = v38;
        uint64_t v14 = v20;
        uint64_t v16 = v22;
      }
      else
      {
        v19(v45, v20, v6);
        uint64_t v27 = v49;
        uint64_t v14 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1E22054(0, *(void *)(v27 + 16) + 1, 1);
          uint64_t v27 = v49;
        }
        long long v5 = v38;
        unint64_t v28 = v48;
        unint64_t v30 = *(void *)(v27 + 16);
        unint64_t v29 = *(void *)(v27 + 24);
        uint64_t v6 = v33;
        if (v30 >= v29 >> 1)
        {
          sub_1C1E22054(v29 > 1, v30 + 1, 1);
          uint64_t v27 = v49;
        }
        *(void *)(v27 + 16) = v30 + 1;
        unint64_t v31 = v27 + v28 + v30 * v47;
        uint64_t v16 = v34;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v19)(v31, v45, v6);
        uint64_t v49 = v27;
      }
      ++v15;
      a1 = v39;
      uint64_t v7 = v37;
      if (v43 == v15)
      {
        v35(v5, 1, 1, v6);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1C1DD5EAC((uint64_t)v5);
    return v49;
  }
  return result;
}

uint64_t static FeedPopulationListenerSchedulerConfiguration.realtime(queue:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C1E17D10();
  uint64_t v5 = v4;
  id v6 = a1;
  sub_1C1EAF168();
  uint64_t v7 = (char *)a2 + *(int *)(v5 + 40);
  uint64_t v8 = sub_1C1EAF158();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *a2 = v6;
  return result;
}

uint64_t sub_1C1DD5410()
{
  uint64_t v1 = *(void *)(sub_1C1EAD368() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_1C1EAE4C8() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  char v7 = *(unsigned char *)(v0 + v6);
  uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFFF8) + v0 + 8);
  return sub_1C1DDEF48(v0 + v2, v0 + v5, v7, v8);
}

uint64_t sub_1C1DD550C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_1C1EAF3B8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *uint64_t v3 = sub_1C1E9318C(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1C1E160D8(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v10;
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for BaseFeedPopulationManager()
{
  return self;
}

uint64_t DispatchQueueOrchestrationScheduler.__allocating_init(environment:)(char a1)
{
  char v1 = a1 & 1;
  uint64_t v2 = sub_1C1EAE7C8();
  type metadata accessor for DispatchQueueOrchestrationScheduler();
  uint64_t v3 = swift_allocObject();
  DispatchQueueOrchestrationScheduler.init(environment:maxConcurrentPipelines:maxConcurrentGenerators:)(v1, v2, 3);
  return v3;
}

void *sub_1C1DD5680(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(void *)(a4 + 48) + 8 * v16);
    *uint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C1DD587C(id *a1)
{
  id v1 = *a1;
  return sub_1C1EAD5C8();
}

uint64_t sub_1C1DD58D4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  unint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1C1DD7BDC((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1C1DD7BDC((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1C874D2E0](v8, -1, -1);
  }
  return v7;
}

uint64_t objectdestroy_26Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));
  return MEMORY[0x1F4186498](v1, 40, 7);
}

uint64_t sub_1C1DD5AAC(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, void *a4)
{
  sub_1C1EAD408();
  uint64_t result = a2();
  *a3 = result;
  *a4 = v8;
  return result;
}

uint64_t type metadata accessor for DateRangeRelevanceProviderManager()
{
  return self;
}

uint64_t sub_1C1DD5B1C()
{
  sub_1C1DF318C(0, &qword_1EBB660B8, MEMORY[0x1E4FBB550], MEMORY[0x1E4F67098]);
  uint64_t v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1EBB660D8);
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBB660D8);
  sub_1C1EAED38();
  sub_1C1DF9F8C(0, &qword_1EBB68240);
  sub_1C1EAF108();
  return sub_1C1EAD6E8();
}

uint64_t GenerationOperationToGeneratorPipelineAdaptor.init(queue:pluginInfo:domain:context:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_queue) = a1;
  uint64_t v8 = v4 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_domain;
  uint64_t v9 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a3, v9);
  uint64_t v10 = v4 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_context;
  uint64_t v11 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a4, v11);
  sub_1C1DFE46C(a2, v4 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_pluginInfo);
  return v4;
}

uint64_t sub_1C1DD5CF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C1DD5D28@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C1DEC698(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C1DD5D58@<X0>(void *a1@<X0>, uint64_t (*a2)(void, void, void, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*a1, v3[2], v3[3], v3[4]);
  *a3 = result;
  return result;
}

uint64_t sub_1C1DD5D94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1C1DD5DCC(void *a1, uint64_t a2)
{
  return sub_1C1E02368(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1C1DD5DD8(void *a1, uint64_t a2)
{
  return sub_1C1E0396C(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.init(sourceProfilePublisher:country:interactiveSharableModelPublisher:isLaunchGeneration:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(v4 + 16) = a1;
  sub_1C1DD5E48(a2, v4 + qword_1EBB6AB88);
  *(void *)(v4 + qword_1EBB6AB80) = a3;
  *(unsigned char *)(v4 + qword_1EBB6ABE0) = a4;
  return v4;
}

uint64_t sub_1C1DD5E48(uint64_t a1, uint64_t a2)
{
  sub_1C1DF9328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1DD5EAC(uint64_t a1)
{
  sub_1C1DFC41C(0, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1DD5F38()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceProviderManagerClasses;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceProviderManagerClasses))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceProviderManagerClasses);
  }
  else
  {
    sub_1C1E15F88();
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1C1EB07F0;
    *(void *)(v2 + 32) = type metadata accessor for DateRangeRelevanceProviderManager();
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C1DD5FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = v11;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10);
  if (!result)
  {
    int64_t v14 = *(uint64_t (**)(unint64_t, uint64_t))(v15 + 8);
    return v14(v12, v10);
  }
  return result;
}

uint64_t sub_1C1DD61B4()
{
  uint64_t v0 = sub_1C1EAE568();
  MEMORY[0x1F4188790](v0);
  sub_1C1EAD4F8();
  sub_1C1EAD4E8();
  sub_1C1EAD4A8();
  return swift_release();
}

void sub_1C1DD64A8(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    sub_1C1EAF3B8();
  }
  sub_1C1DF9F8C(0, &qword_1EBB68260);
  sub_1C1E16A04((unint64_t *)&qword_1EBB67000, &qword_1EBB68260);
  v19[1] = (id)sub_1C1EAEF68();
  if (v2)
  {
    uint64_t v3 = sub_1C1EAF5C8();
    unint64_t v18 = 0;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v1 = v3 | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(v1 + 32);
    unint64_t v18 = v1 + 64;
    uint64_t v4 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(v1 + 64);
  }
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(v4 + 64) >> 6;
  while ((v1 & 0x8000000000000000) != 0)
  {
    if (!sub_1C1EAF608()) {
      goto LABEL_34;
    }
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v19[0];
    swift_unknownObjectRelease();
    if (!v14) {
      goto LABEL_34;
    }
    uint64_t v11 = v5;
    uint64_t v13 = v9;
LABEL_12:
    sub_1C1DD6CEC(v19, v14);

    uint64_t v9 = v13;
    unint64_t v5 = v11;
  }
  if (v5)
  {
    uint64_t v11 = (v5 - 1) & v5;
    unint64_t v12 = __clz(__rbit64(v5)) | (v9 << 6);
    uint64_t v13 = v9;
LABEL_11:
    id v14 = *(id *)(*(void *)(v1 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_34;
    }
    goto LABEL_12;
  }
  int64_t v15 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v15 >= v10) {
      goto LABEL_34;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    uint64_t v13 = v9 + 1;
    if (!v16)
    {
      uint64_t v13 = v9 + 2;
      if (v9 + 2 >= v10) {
        goto LABEL_34;
      }
      unint64_t v16 = *(void *)(v18 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v9 + 3;
        if (v9 + 3 >= v10) {
          goto LABEL_34;
        }
        unint64_t v16 = *(void *)(v18 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v9 + 4;
          if (v9 + 4 >= v10) {
            goto LABEL_34;
          }
          unint64_t v16 = *(void *)(v18 + 8 * v13);
          if (!v16)
          {
            uint64_t v13 = v9 + 5;
            if (v9 + 5 >= v10) {
              goto LABEL_34;
            }
            unint64_t v16 = *(void *)(v18 + 8 * v13);
            if (!v16)
            {
              uint64_t v17 = v9 + 6;
              while (v10 != v17)
              {
                unint64_t v16 = *(void *)(v18 + 8 * v17++);
                if (v16)
                {
                  uint64_t v13 = v17 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_1C1E00B40();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_11;
  }
  __break(1u);
}

void *sub_1C1DD675C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C1E16E70(0, (unint64_t *)&qword_1EBB68280, MEMORY[0x1E4F670C0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_1C1DD5680(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C1E00B40();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

id sub_1C1DD6864()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___metricsRecorder;
  unint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___metricsRecorder);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___metricsRecorder);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RelevanceEngineMetricsBlockRecorder()), sel_init);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t type metadata accessor for BundleFeedItemPluginBundleProvider()
{
  return self;
}

void sub_1C1DD68FC()
{
  uint64_t v1 = *(void *)(sub_1C1EAD368() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_1C1EAE4C8() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  sub_1C1DE90AC(v0 + v2, v5);
}

uint64_t sub_1C1DD6A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  static FeedPopulationListenerSupport.makeThrottledFeedItemSubmissionPublisher<A>(config:)(a1, a3, a4, (uint64_t)&protocol witness table for ProfileDashboardsFeedPopulationListener, a5);
  swift_allocObject();
  swift_weakInit();
  sub_1C1E17230();
  sub_1C1DFFC68(&qword_1EBB653E0, (void (*)(uint64_t))sub_1C1E17230);
  uint64_t v5 = sub_1C1EAEB48();
  swift_release();
  swift_release();
  return v5;
}

void destroy for LegacyFeedItemContextChangePublisher(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  unint64_t v2 = *(void **)(a1 + 80);
}

uint64_t sub_1C1DD6B80(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a3(a1, v6);
}

uint64_t sub_1C1DD6C18()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C1DD6C40()
{
  return sub_1C1DD6C6C((uint64_t (*)(void))sub_1C1DF7CD4, sub_1C1E06D34);
}

uint64_t sub_1C1DD6C6C(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4, v5, v6);
}

uint64_t sub_1C1DD6CEC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C1EAF3C8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C1DF9F8C(0, &qword_1EBB68260);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C1EAF3B8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C1DF1554(v7, result + 1, (unint64_t *)&qword_1EBB67068, &qword_1EBB68260, 0x1E4F2B358, (unint64_t *)&qword_1EBB67000);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C1E332A0(v26, (unint64_t *)&qword_1EBB67068, &qword_1EBB68260, 0x1E4F2B358, (unint64_t *)&qword_1EBB67000);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C1DF188C((uint64_t)v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C1EAF278();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C1DF9F8C(0, &qword_1EBB68260);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C1EAF288();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        int64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C1EAF288();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C1E16588((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (unint64_t *)&qword_1EBB67068, &qword_1EBB68260, 0x1E4F2B358, (unint64_t *)&qword_1EBB67000);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

id sub_1C1DD708C()
{
  uint64_t v1 = *(void **)(v0 + 256);
  if (v1)
  {
    id v2 = *(id *)(v0 + 256);
  }
  else
  {
    swift_beginAccess();
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B5E0]), sel_initWithHealthStore_, *(void *)(v0 + 48));
    uint64_t v4 = *(void **)(v0 + 256);
    *(void *)(v0 + 256) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

void sub_1C1DD711C()
{
  sub_1C1EAED38();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v1 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    sub_1C1E19570();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    qword_1EBB65CE0 = v3;
  }
  else
  {
    __break(1u);
  }
}

uint64_t ForYouSectionKind.localizedTitle.getter()
{
  type metadata accessor for SummaryTabFeedPopulationManager();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1EAD178();

  return v2;
}

uint64_t sub_1C1DD7470()
{
  uint64_t v1 = sub_1C1EAD9C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](v1);
  sub_1C1E17A3C();
  uint64_t v16 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v8 = v0 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_domain;
  sub_1C1EAD9D8();
  sub_1C1DFE408(v0 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_pluginInfo, (uint64_t)&v18);
  int64_t v19 = *(void **)(v0 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_queue);
  uint64_t v9 = v19;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v2 + 16))(&v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v8, v1);
  unint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v2 + 32))(v11 + v10, &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v1);
  sub_1C1E19AC0();
  sub_1C1E18074();
  id v12 = v9;
  sub_1C1EAEA68();
  swift_release();
  sub_1C1DD5CF0((uint64_t)v17);
  sub_1C1E17AA8();
  uint64_t v13 = v16;
  uint64_t v14 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
  return v14;
}

uint64_t static FoundationPluginBundleProvider.sharedInstance.getter()
{
  if (qword_1EBB65E18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

void sub_1C1DD775C(unint64_t a1, uint64_t (*a2)(id, id))
{
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v21 = 0;
    uint64_t v2 = 0;
    unint64_t v3 = 0;
    unint64_t v4 = sub_1C1EAF5C8() | 0x8000000000000000;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v2 = ~v5;
    unint64_t v21 = a1 + 64;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v3 = v7 & *(void *)(a1 + 64);
    unint64_t v4 = a1;
  }
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  int64_t v20 = (unint64_t)(v2 + 64) >> 6;
  while ((v4 & 0x8000000000000000) != 0)
  {
    if (!sub_1C1EAF5F8()) {
      goto LABEL_36;
    }
    sub_1C1DF9F8C(0, &qword_1EBB68260);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v23;
    swift_unknownObjectRelease();
    sub_1C1DF9F8C(0, &qword_1EBB66FE8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v23;
    swift_unknownObjectRelease();
    int64_t v11 = v8;
    uint64_t v9 = v3;
    if (!v23) {
      goto LABEL_36;
    }
LABEL_26:
    uint64_t v18 = a2(v12, v13);

    int64_t v8 = v11;
    unint64_t v3 = v9;
    if (v18)
    {
      MEMORY[0x1C874C090]();
      if (*(void *)(v24 + 16) >= *(void *)(v24 + 24) >> 1) {
        sub_1C1EAEEE8();
      }
      sub_1C1EAEF18();
      sub_1C1EAEEB8();
      int64_t v8 = v11;
      unint64_t v3 = v9;
    }
  }
  if (v3)
  {
    uint64_t v9 = (v3 - 1) & v3;
    unint64_t v10 = __clz(__rbit64(v3)) | (v8 << 6);
    int64_t v11 = v8;
LABEL_25:
    uint64_t v16 = 8 * v10;
    id v17 = *(void **)(*(void *)(v4 + 56) + v16);
    id v12 = *(id *)(*(void *)(v4 + 48) + v16);
    id v13 = v17;
    if (!v12) {
      goto LABEL_36;
    }
    goto LABEL_26;
  }
  int64_t v11 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v11 >= v20) {
      goto LABEL_36;
    }
    unint64_t v14 = *(void *)(v21 + 8 * v11);
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v20) {
        goto LABEL_36;
      }
      unint64_t v14 = *(void *)(v21 + 8 * v15);
      if (v14) {
        goto LABEL_23;
      }
      int64_t v15 = v8 + 3;
      if (v8 + 3 >= v20) {
        goto LABEL_36;
      }
      unint64_t v14 = *(void *)(v21 + 8 * v15);
      if (v14) {
        goto LABEL_23;
      }
      int64_t v15 = v8 + 4;
      if (v8 + 4 >= v20) {
        goto LABEL_36;
      }
      unint64_t v14 = *(void *)(v21 + 8 * v15);
      if (v14)
      {
LABEL_23:
        int64_t v11 = v15;
      }
      else
      {
        int64_t v11 = v8 + 5;
        if (v8 + 5 >= v20) {
          goto LABEL_36;
        }
        unint64_t v14 = *(void *)(v21 + 8 * v11);
        if (!v14)
        {
          int64_t v19 = v8 + 6;
          while (v20 != v19)
          {
            unint64_t v14 = *(void *)(v21 + 8 * v19++);
            if (v14)
            {
              int64_t v11 = v19 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          sub_1C1E00B40();
          return;
        }
      }
    }
LABEL_24:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_1C1DD7AD0(uint64_t (*a1)(unint64_t, unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_1C1EAD368() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_1C1EAE4C8() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v1 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a1(v1 + v3, v1 + v6, v7);
}

uint64_t sub_1C1DD7BDC(unint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  if (a3 >> 62) {
    goto LABEL_38;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v45 = v4;
  if (v5)
  {
    while (1)
    {
      uint64_t v46 = a4 + 56;
      if ((v4 & 0xC000000000000001) != 0) {
        break;
      }
      uint64_t v23 = 0;
      uint64_t v41 = v4 + 32;
      uint64_t v42 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v43 = 0;
      while (v23 != v42)
      {
        id v25 = *(id *)(v41 + 8 * v23);
        uint64_t v4 = (uint64_t)v25;
        uint64_t v26 = sub_1C1EAF278();
        uint64_t v27 = -1 << *(unsigned char *)(a4 + 32);
        unint64_t v28 = v26 & ~v27;
        unint64_t v29 = v28 >> 6;
        uint64_t v30 = 1 << v28;
        if (((1 << v28) & *(void *)(v46 + 8 * (v28 >> 6))) != 0)
        {
          uint64_t v4 = sub_1C1DF9F8C(0, &qword_1EBB68260);
          id v31 = *(id *)(*(void *)(a4 + 48) + 8 * v28);
          char v32 = sub_1C1EAF288();

          if (v32)
          {
          }
          else
          {
            uint64_t v33 = ~v27;
            for (unint64_t i = v28 + 1; ; unint64_t i = v35 + 1)
            {
              unint64_t v35 = i & v33;
              if (((*(void *)(v46 + (((i & v33) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v33)) & 1) == 0) {
                goto LABEL_20;
              }
              id v36 = *(id *)(*(void *)(a4 + 48) + 8 * v35);
              char v37 = sub_1C1EAF288();

              if (v37) {
                break;
              }
            }

            unint64_t v29 = v35 >> 6;
            uint64_t v30 = 1 << v35;
          }
          unint64_t v38 = a1[v29];
          a1[v29] = v30 | v38;
          uint64_t v24 = v5;
          if ((v30 & v38) == 0)
          {
            BOOL v9 = __OFADD__(v43++, 1);
            if (v9)
            {
              __break(1u);
LABEL_35:
              __break(1u);
              break;
            }
          }
        }
        else
        {
LABEL_20:

          uint64_t v24 = v5;
        }
        if (++v23 == v24) {
          goto LABEL_40;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C1EAF638();
      uint64_t v45 = v4;
      if (!v5) {
        goto LABEL_39;
      }
    }
    uint64_t v43 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v8 = MEMORY[0x1C874C6F0](v6, v45);
      BOOL v9 = __OFADD__(v6++, 1);
      if (v9) {
        goto LABEL_35;
      }
      uint64_t v4 = v8;
      uint64_t v10 = sub_1C1EAF278();
      uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v12 = v10 & ~v11;
      unint64_t v13 = v12 >> 6;
      uint64_t v14 = 1 << v12;
      if (((1 << v12) & *(void *)(v46 + 8 * (v12 >> 6))) == 0) {
        goto LABEL_5;
      }
      uint64_t v4 = sub_1C1DF9F8C(0, &qword_1EBB68260);
      id v15 = *(id *)(*(void *)(a4 + 48) + 8 * v12);
      char v16 = sub_1C1EAF288();

      if ((v16 & 1) == 0) {
        break;
      }
      swift_unknownObjectRelease();
LABEL_16:
      unint64_t v22 = a1[v13];
      a1[v13] = v14 | v22;
      uint64_t v7 = v5;
      if ((v14 & v22) == 0)
      {
        if (__OFADD__(v43, 1)) {
          goto LABEL_37;
        }
        ++v43;
      }
LABEL_6:
      if (v6 == v7) {
        goto LABEL_40;
      }
    }
    uint64_t v17 = ~v11;
    for (unint64_t j = v12 + 1; ; unint64_t j = v19 + 1)
    {
      unint64_t v19 = j & v17;
      if (((*(void *)(v46 + (((j & v17) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v17)) & 1) == 0) {
        break;
      }
      id v20 = *(id *)(*(void *)(a4 + 48) + 8 * v19);
      char v21 = sub_1C1EAF288();

      if (v21)
      {
        swift_unknownObjectRelease();
        unint64_t v13 = v19 >> 6;
        uint64_t v14 = 1 << v19;
        goto LABEL_16;
      }
    }
LABEL_5:
    swift_unknownObjectRelease();
    uint64_t v7 = v5;
    goto LABEL_6;
  }
LABEL_39:
  uint64_t v43 = 0;
LABEL_40:
  swift_bridgeObjectRelease();
  swift_retain();
  return sub_1C1E16740(a1, a2, v43, a4);
}

uint64_t sub_1C1DD7F98()
{
  return swift_retain();
}

id sub_1C1DD7FD0@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  char v5 = sub_1C1EAD7C8();
  uint64_t v6 = 0;
  if ((v5 & 1) == 0)
  {
    swift_retain();
    uint64_t v6 = v4;
  }
  *a3 = a2;
  a3[1] = v6;
  return a2;
}

uint64_t sub_1C1DD8038()
{
  int64_t v0 = *(void *)(sub_1C1EAE118() + 16);
  if (v0)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1C1DE1100(0, v0, 0);
    uint64_t v1 = 0;
    uint64_t v2 = v10;
    do
    {
      uint64_t v3 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      uint64_t v5 = v4;
      unint64_t v7 = *(void *)(v10 + 16);
      unint64_t v6 = *(void *)(v10 + 24);
      if (v7 >= v6 >> 1) {
        sub_1C1DE1100(v6 > 1, v7 + 1, 1);
      }
      ++v1;
      *(void *)(v10 + 16) = v7 + 1;
      uint64_t v8 = v10 + 16 * v7;
      *(void *)(v8 + 32) = v3;
      *(void *)(v8 + 40) = v5;
    }
    while (v0 != v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v2;
}

uint64_t Array<A>.makeGeneratorPipelineProviderWrappers()()
{
  return sub_1C1EAEE08();
}

uint64_t static BundleFeedItemPluginBundleProvider.sharedInstance.getter()
{
  if (qword_1EBB67100 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t BasicPluginInfo.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

id sub_1C1DD8260(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = (void *)a2(v2, ObjectType);
    BOOL v9 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v8;
    id v5 = v8;

    uint64_t v4 = 0;
  }
  id v10 = v4;
  return v5;
}

uint64_t *SummaryTabFeedPopulationManager.init(healthExperienceStore:healthStore:relevanceEngineCoordinator:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (char *)v3
     + OBJC_IVAR____TtC18HealthPlatformCore31SummaryTabFeedPopulationManager____lazy_storage___pertinentChangeDomain;
  uint64_t v9 = sub_1C1EADD48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = OBJC_IVAR____TtC18HealthPlatformCore31SummaryTabFeedPopulationManager_trainingAnalyticsCache;
  v22[0] = MEMORY[0x1E4FBC860];
  sub_1C1DFC548(0, &qword_1EBB67E00, (uint64_t (*)(uint64_t))sub_1C1E96400, MEMORY[0x1E4F674D8]);
  swift_allocObject();
  swift_retain();
  *(uint64_t *)((char *)v4 + v10) = sub_1C1EAE1D8();
  swift_release();
  sub_1C1DFE408(a1, (uint64_t)v22);
  sub_1C1DFE408(a3, (uint64_t)v19);
  uint64_t v11 = v20;
  uint64_t v12 = v21;
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
  MEMORY[0x1F4188790](v13);
  id v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v16 + 16))(v15);
  uint64_t v17 = sub_1C1DE2C78((uint64_t)v22, a2, (uint64_t)v15, v4, v11, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v17;
}

uint64_t sub_1C1DD84D0(uint64_t a1, uint64_t a2)
{
  sub_1C1DF7614(0, qword_1EBB678D8, (uint64_t (*)(uint64_t))sub_1C1E15248, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SummaryTabRelevanceEngineCoordinator.__allocating_init(healthExperienceStore:engineName:modelURL:pretrainedModelURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  sub_1C1DFC41C(0, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = sub_1C1EAD258();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1;
  sub_1C1DFE408(a1, (uint64_t)v29);
  if (qword_1EBB648A0 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1EBB64890;
  uint64_t v18 = (objc_class *)type metadata accessor for FeedItemREElementDataSource();
  unint64_t v19 = (char *)objc_allocWithZone(v18);
  sub_1C1DFE408((uint64_t)v29, (uint64_t)&v19[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_store]);
  *(void *)&v19[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles] = v17;
  v28.receiver = v19;
  v28.super_class = v18;
  swift_bridgeObjectRetain();
  id v20 = objc_msgSendSuper2(&v28, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  sub_1C1DFD274(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C1EB04A0;
  *(void *)(v21 + 32) = v20;
  v29[0] = v21;
  sub_1C1EAEEB8();
  uint64_t v22 = v29[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a4, v13);
  sub_1C1DD490C(a5, (uint64_t)v12);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, char *))(v6 + 184))(v22, v25, v26, v16, v12);
  sub_1C1DD5EAC(a5);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  __swift_destroy_boxed_opaque_existential_1(v27);
  return v23;
}

uint64_t sub_1C1DD8834(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1C1DD885C()
{
  return sub_1C1DD8864(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1C1DD8864(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C1DD888C()
{
  return sub_1C1DD889C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1C1DD889C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C1DD8CD8();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C1EAE568();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAD5A8();
  if (sub_1C1EADE58())
  {
    sub_1C1EAD758();
    uint64_t v17 = sub_1C1EAD748();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 0, 1, v17);
    return sub_1C1DD8C74((uint64_t)v12, a5);
  }
  else
  {
    sub_1C1EAE4F8();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v19 = sub_1C1EAE558();
    os_log_type_t v20 = sub_1C1EAF0D8();
    int v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v33 = v31;
      uint64_t v34 = a6;
      *(_DWORD *)uint64_t v22 = 136446722;
      int v30 = v21;
      swift_getMetatypeMetadata();
      uint64_t v29 = a3;
      uint64_t v23 = sub_1C1EAED68();
      uint64_t v32 = v14;
      uint64_t v34 = sub_1C1DF8D44(v23, v24, &v33);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      swift_retain();
      uint64_t v25 = HealthExperienceStoreFeedItemContext.description.getter();
      unint64_t v27 = v26;
      swift_release();
      uint64_t v34 = sub_1C1DF8D44(v25, v27, &v33);
      sub_1C1EAF2C8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1C1DF8D44(v29, a4, &v33);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1DD2000, v19, (os_log_type_t)v30, "[%{public}s]: No plugin storage found in context %{public}s, identifier %{public}s", (uint8_t *)v22, 0x20u);
      uint64_t v28 = v31;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v28, -1, -1);
      MEMORY[0x1C874D2E0](v22, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v13);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }
}

uint64_t sub_1C1DD8C74(uint64_t a1, uint64_t a2)
{
  sub_1C1DD8CD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C1DD8CD8()
{
  if (!qword_1EBB66170)
  {
    sub_1C1EAD748();
    unint64_t v0 = sub_1C1EAF2A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB66170);
    }
  }
}

void sub_1C1DD8D30(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C1EAF368();
    sub_1C1DF9F8C(0, &qword_1EBB68260);
    sub_1C1E9349C();
    sub_1C1EAEF98();
    uint64_t v3 = v35;
    uint64_t v4 = v36;
    uint64_t v5 = v37;
    uint64_t v6 = v38;
    unint64_t v7 = v39;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  int64_t v34 = (unint64_t)(v5 + 64) >> 6;
  while (1)
  {
    if (v3 < 0)
    {
      if (!sub_1C1EAF3E8()) {
        goto LABEL_46;
      }
      sub_1C1DF9F8C(0, &qword_1EBB68260);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v40;
      swift_unknownObjectRelease();
      uint64_t v13 = v6;
      uint64_t v11 = v7;
      if (!v40) {
        goto LABEL_46;
      }
    }
    else
    {
      if (v7)
      {
        uint64_t v11 = (v7 - 1) & v7;
        unint64_t v12 = __clz(__rbit64(v7)) | (v6 << 6);
        uint64_t v13 = v6;
      }
      else
      {
        int64_t v15 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_48;
        }
        if (v15 >= v34) {
          goto LABEL_46;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v15);
        uint64_t v13 = v6 + 1;
        if (!v16)
        {
          uint64_t v13 = v6 + 2;
          if (v6 + 2 >= v34) {
            goto LABEL_46;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v13);
          if (!v16)
          {
            uint64_t v13 = v6 + 3;
            if (v6 + 3 >= v34) {
              goto LABEL_46;
            }
            unint64_t v16 = *(void *)(v4 + 8 * v13);
            if (!v16)
            {
              uint64_t v13 = v6 + 4;
              if (v6 + 4 >= v34) {
                goto LABEL_46;
              }
              unint64_t v16 = *(void *)(v4 + 8 * v13);
              if (!v16)
              {
                uint64_t v13 = v6 + 5;
                if (v6 + 5 >= v34) {
                  goto LABEL_46;
                }
                unint64_t v16 = *(void *)(v4 + 8 * v13);
                if (!v16)
                {
                  uint64_t v17 = v6 + 6;
                  while (v34 != v17)
                  {
                    unint64_t v16 = *(void *)(v4 + 8 * v17++);
                    if (v16)
                    {
                      uint64_t v13 = v17 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_46:
                  sub_1C1E00B40();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v11 = (v16 - 1) & v16;
        unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
      }
      id v14 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
      if (!v14) {
        goto LABEL_46;
      }
    }
    uint64_t v18 = *a2;
    if ((*a2 & 0xC000000000000001) != 0) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_1C1E0DE00((uint64_t)v14);
    char v30 = v29;
    swift_bridgeObjectRelease();
    if (v30)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v32 = *a2;
      uint64_t v40 = (void *)*a2;
      *a2 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C1E9F538();
        uint64_t v32 = (uint64_t)v40;
      }

      uint64_t v33 = *(void **)(*(void *)(v32 + 56) + 8 * v28);
      sub_1C1E1624C(v28, v32);
      *a2 = v32;

      goto LABEL_9;
    }

LABEL_10:
    uint64_t v6 = v13;
    unint64_t v7 = v11;
  }
  if (v18 < 0) {
    uint64_t v19 = *a2;
  }
  else {
    uint64_t v19 = v18 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v20 = v14;
  uint64_t v21 = sub_1C1EAF5E8();

  if (!v21)
  {

LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_unknownObjectRelease();
  uint64_t v22 = sub_1C1EAF3B8();
  uint64_t v23 = sub_1C1E9318C(v19, v22);
  swift_retain();
  unint64_t v24 = sub_1C1E0DE00((uint64_t)v20);
  char v26 = v25;
  swift_release();
  if (v26)
  {

    unint64_t v27 = *(void **)(*(void *)(v23 + 56) + 8 * v24);
    sub_1C1E1624C(v24, v23);
    *a2 = v23;

    goto LABEL_9;
  }
  __break(1u);
LABEL_48:
  __break(1u);
}

id static SummaryTabRelevanceEngineCoordinator.defaultModelContainerURL.getter@<X0>(uint64_t a1@<X8>)
{
  v17[3] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1C1EAD258();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v16 - v7;
  sub_1C1EADA68();
  sub_1C1EADA58();
  sub_1C1EAD218();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  id v9 = objc_msgSend(self, sel_defaultManager);
  uint64_t v10 = (void *)sub_1C1EAD1F8();
  v17[0] = 0;
  unsigned int v11 = objc_msgSend(v9, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v10, 1, 0, v17);

  v16[0] = (id)v17[0];
  if (v11)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v8, v2);
    id v12 = v16[0];
    return v12;
  }
  else
  {
    id v14 = v16[0];
    int64_t v15 = (void *)sub_1C1EAD198();

    swift_willThrow();
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    sub_1C1EAF4A8();
    sub_1C1EAEDB8();
    v16[1] = v15;
    sub_1C1E15F30();
    sub_1C1EAED78();
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();
    id result = (id)sub_1C1EAF628();
    __break(1u);
  }
  return result;
}

id AppSessionAnalyticsManager.init()()
{
  uint64_t v1 = v0;
  if (qword_1EBB67888 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EBB667B8;
  *(void *)(v1 + 40) = type metadata accessor for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider();
  *(void *)(v1 + 48) = &protocol witness table for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider;
  *(void *)(v1 + 16) = v2;
  sub_1C1EAD608();
  swift_allocObject();
  swift_retain();
  uint64_t v3 = sub_1C1EAD5F8();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = v4;
  *(void *)(v1 + 72) = MEMORY[0x1E4FBC870];
  *(unsigned char *)(v1 + 80) = HKImproveHealthAndActivityAnalyticsAllowed();
  id result = objc_msgSend(self, sel_sharedConnection);
  if (result)
  {
    uint64_t v6 = result;
    unsigned __int8 v7 = objc_msgSend(result, sel_isDiagnosticSubmissionAllowed);

    *(unsigned char *)(v1 + 81) = v7;
    return (id)v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1DD94F4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  int64_t v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_1C1EAEFD8();
  if (!v20) {
    return sub_1C1EAEEF8();
  }
  uint64_t v21 = v20;
  unint64_t v27 = v15;
  uint64_t v43 = sub_1C1EAF588();
  uint64_t v35 = sub_1C1EAF598();
  sub_1C1EAF538();
  uint64_t v41 = v19;
  uint64_t result = sub_1C1EAEFB8();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    unint64_t v24 = v27;
    while (1)
    {
      char v25 = (void (*)(char *, void))sub_1C1EAEFF8();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_1C1EAF578();
      sub_1C1EAEFE8();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.__deallocating_deinit()
{
  GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.deinit()
{
  swift_release();
  sub_1C1DD9988(v0 + qword_1EBB6AB88);
  swift_release();
  return v0;
}

uint64_t sub_1C1DD9988(uint64_t a1)
{
  sub_1C1DF9328();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1DD99E4(uint64_t a1)
{
  sub_1C1DE01A4();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned __int8 v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v1 + 80);
  swift_retain();
  uint64_t v9 = v8(a1);
  swift_release();
  v17[0] = v9;
  sub_1C1E12B38(0, &qword_1EBB65918, &qword_1EBB67D68, (void (*)(uint64_t))sub_1C1E68084);
  sub_1C1E12BA0(&qword_1EBB65910, &qword_1EBB65918, &qword_1EBB67D68, (void (*)(uint64_t))sub_1C1E68084);
  uint64_t v10 = sub_1C1EAE958();
  swift_release();
  v17[0] = v10;
  uint64_t v11 = (void (*)(uint64_t))MEMORY[0x1E4F67288];
  sub_1C1E12B38(0, &qword_1EBB67D18, &qword_1EBB674A8, MEMORY[0x1E4F67288]);
  uint64_t v13 = v12;
  uint64_t v14 = sub_1C1E12BA0(&qword_1EBB67D10, &qword_1EBB67D18, &qword_1EBB674A8, v11);
  sub_1C1EAE918();
  swift_release();
  v17[0] = v13;
  v17[1] = v14;
  swift_getOpaqueTypeConformance2();
  uint64_t v15 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_1C1DD9C0C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C1EAD448();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAD4F8();
  sub_1C1EAD4E8();
  uint64_t v6 = sub_1C1EAD4B8();
  swift_release();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(v6 + 16);
  if (v8)
  {
    uint64_t v22 = v1;
    uint64_t v23 = 0;
    uint64_t v10 = *(void *)(v3 + 16);
    uint64_t v9 = v3 + 16;
    *(void *)&long long v24 = v10;
    unint64_t v11 = v6 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v12 = *(void *)(v9 + 56);
    v21[1] = v6;
    swift_bridgeObjectRetain();
    do
    {
      ((void (*)(char *, unint64_t, uint64_t))v24)(v5, v11, v2);
      sub_1C1EAD438();
      uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v9 - 8))(v5, v2);
      MEMORY[0x1C874C090](v13);
      if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C1EAEEE8();
      }
      sub_1C1EAEF18();
      sub_1C1EAEEB8();
      v11 += v12;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v7 = v25;
    uint64_t v1 = v22;
  }
  uint64_t v14 = swift_bridgeObjectRelease();
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v14);
  long long v24 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)&v21[-2] = v24;
  sub_1C1DDE354(0, &qword_1EBB65488, (void (*)(uint64_t))sub_1C1E56A64);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C1DDE310(&qword_1EBB65490, &qword_1EBB65488, (void (*)(uint64_t))sub_1C1E56A64);
  uint64_t v19 = sub_1C1DD94F4((void (*)(char *, char *))sub_1C1DD587C, (uint64_t)&v21[-4], v16, v24, MEMORY[0x1E4FBC248], v17, MEMORY[0x1E4FBC278], v18);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1C1DD9F14(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a3(a1, v6);
}

id sub_1C1DD9FAC(uint64_t a1, uint64_t a2, void *a3)
{
  v29[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1C1EAE568();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 64), *(void *)(a1 + 88));
  uint64_t v9 = (void *)sub_1C1EAD538();
  sub_1C1EAF238();

  __swift_project_boxed_opaque_existential_1((void *)(a1 + 64), *(void *)(a1 + 88));
  uint64_t v10 = (void *)sub_1C1EAD538();
  sub_1C1EAF218();

  __swift_project_boxed_opaque_existential_1((void *)(a1 + 64), *(void *)(a1 + 88));
  unint64_t v11 = (void *)sub_1C1EAD538();
  id v28 = 0;
  LODWORD(a1) = objc_msgSend(v11, sel_save_, &v28);

  id v12 = v28;
  if (a1)
  {
    return v12;
  }
  else
  {
    v27[1] = v28;
    id v14 = v28;
    uint64_t v15 = (void *)sub_1C1EAD198();

    swift_willThrow();
    sub_1C1EAE4F8();
    id v16 = v15;
    id v17 = v15;
    uint64_t v18 = sub_1C1EAE558();
    os_log_type_t v19 = sub_1C1EAF0B8();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      id v28 = a3;
      v29[0] = v21;
      *(_DWORD *)uint64_t v20 = 136446466;
      swift_getMetatypeMetadata();
      uint64_t v22 = sub_1C1EAED68();
      id v28 = (id)sub_1C1DF8D44(v22, v23, v29);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      id v28 = v15;
      id v24 = v15;
      sub_1C1E15F30();
      uint64_t v25 = sub_1C1EAED68();
      id v28 = (id)sub_1C1DF8D44(v25, v26, v29);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1DD2000, v18, v19, "[%{public}s]: Unable to update stored profiles: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v21, -1, -1);
      MEMORY[0x1C874D2E0](v20, -1, -1);
    }
    else
    {
    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1C1DDA378(uint64_t a1)
{
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v1; ++i)
    {
      id v4 = *(id *)(v2 + 8 * i + 32);
      uint64_t v5 = sub_1C1EAD778();

      if (v5)
      {
        MEMORY[0x1C874C090]();
        if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C1EAEEE8();
        }
        sub_1C1EAEF18();
        sub_1C1EAEEB8();
      }
    }
    a1 = swift_bridgeObjectRelease();
  }
  MEMORY[0x1F4188790](a1);
  swift_retain();
  sub_1C1EAE1B8();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C1DDA4B8(uint64_t a1)
{
  uint64_t v3 = *v1;
  __swift_project_boxed_opaque_existential_1(v1 + 8, v1[11]);
  uint64_t v4 = sub_1C1EAD538();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v1;
  v5[3] = a1;
  v5[4] = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1C1E182A4;
  *(void *)(v6 + 24) = v5;
  v9[4] = sub_1C1DD885C;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1C1DD8834;
  v9[3] = &block_descriptor_71;
  uint64_t v7 = _Block_copy(v9);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend((id)v4, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

void sub_1C1DDA678(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = sub_1C1EAE568();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE4F8();
  uint64_t v7 = sub_1C1EAE558();
  os_log_type_t v8 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v11 = sub_1C1DF8D44(0xD000000000000020, 0x80000001C1EB6910, &v12);
    sub_1C1EAF2C8();
    _os_log_impl(&dword_1C1DD2000, v7, v8, "[Contact Photo] Finished %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v10, -1, -1);
    MEMORY[0x1C874D2E0](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  dispatch_group_leave(a2);
}

unint64_t sub_1C1DDA958()
{
  unint64_t result = qword_1EBB67FA0;
  if (!qword_1EBB67FA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB67FA0);
  }
  return result;
}

void sub_1C1DDA998(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C1DDA9E4(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C1EAE568();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  sub_1C1EAE4F8();
  uint64_t v9 = sub_1C1EAE558();
  os_log_type_t v10 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = a2;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v19 = sub_1C1DF8D44(0xD000000000000020, 0x80000001C1EB6910, &v20);
    sub_1C1EAF2C8();
    _os_log_impl(&dword_1C1DD2000, v9, v10, "[Contact Photo] Running %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v13, -1, -1);
    id v14 = v12;
    a2 = v18;
    MEMORY[0x1C874D2E0](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C1DF9F8C(0, (unint64_t *)&unk_1EBB659F0);
  uint64_t v15 = (void *)sub_1C1EAF0F8();
  uint64_t v16 = sub_1C1DDC79C(v8, (uint64_t)v15);

  *a2 = v16;
}

id sub_1C1DDAC08(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = qword_1EBB64790;
  id v6 = v2;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = self;
  swift_bridgeObjectRetain();
  id v8 = objc_msgSend(v7, sel_standardUserDefaults);
  sub_1C1DE7D6C(0, &qword_1EBB67F28);
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  sub_1C1EAD6E8();
  if (qword_1EBB647A8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  id v9 = objc_msgSend(v7, sel_standardUserDefaults);
  sub_1C1EAD6E8();
  id v10 = objc_msgSend(v7, sel_standardUserDefaults);
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  sub_1C1EAD6E8();

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for HealthExperienceStoreCoreSpotlightDelegate();
  return objc_msgSendSuper2(&v12, sel_initForStoreWithDescription_coordinator_, a1, a2);
}

void sub_1C1DDAE1C(uint64_t a1)
{
  uint64_t v2 = sub_1C1EAE568();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  v56 = (void (*)(char *, unint64_t, uint64_t))((char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  id v8 = (char *)v52 - v7;
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)v52 - v9;
  sub_1C1DEB760(0, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  v62 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v52 - v14;
  uint64_t v16 = sub_1C1EAD258();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v59 = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v52 - v20;
  id v63 = objc_msgSend(self, sel_defaultManager);
  sub_1C1EADA68();
  sub_1C1EADA48();
  v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v61 = v17 + 48;
  if (v60(v15, 1, v16) == 1)
  {
    sub_1C1DD5EAC((uint64_t)v15);
    sub_1C1EAE538();
    uint64_t v22 = sub_1C1EAE558();
    os_log_type_t v23 = sub_1C1EAF0C8();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v24 = 0;
      _os_log_impl(&dword_1C1DD2000, v22, v23, "[Contact Photo] Could not access Health app group container directory", v24, 2u);
      MEMORY[0x1C874D2E0](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else
  {
    uint64_t v53 = v17;
    uint64_t v54 = v16;
    v57 = *(void (**)(void))(v17 + 32);
    uint64_t v58 = v17 + 32;
    ((void (*)(char *, char *, uint64_t))v57)(v21, v15, v16);
    int64_t v25 = *(void *)(a1 + 16);
    uint64_t v26 = MEMORY[0x1E4FBC860];
    v52[3] = v2;
    v52[1] = v10;
    v55 = v21;
    if (v25)
    {
      uint64_t v27 = v3;
      uint64_t v64 = MEMORY[0x1E4FBC860];
      sub_1C1DE1100(0, v25, 0);
      uint64_t v26 = v64;
      id v28 = (void **)(a1 + 32);
      do
      {
        uint64_t v29 = *v28++;
        id v30 = v29;
        uint64_t v31 = sub_1C1EAD788();
        uint64_t v33 = v32;

        uint64_t v64 = v26;
        unint64_t v35 = *(void *)(v26 + 16);
        unint64_t v34 = *(void *)(v26 + 24);
        if (v35 >= v34 >> 1)
        {
          sub_1C1DE1100(v34 > 1, v35 + 1, 1);
          uint64_t v26 = v64;
        }
        *(void *)(v26 + 16) = v35 + 1;
        uint64_t v36 = v26 + 16 * v35;
        *(void *)(v36 + 32) = v31;
        *(void *)(v36 + 40) = v33;
        --v25;
      }
      while (v25);
      uint64_t v21 = v55;
    }
    else
    {
      uint64_t v27 = v3;
    }
    uint64_t v37 = sub_1C1DDC140(v26);
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_1C1EAF088();
    v52[2] = v27;
    uint64_t v39 = sub_1C1DD4F54(v38, v37);
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void *)(v39 + 16);
    if (v40)
    {
      v56 = *(void (**)(char *, unint64_t, uint64_t))(v53 + 16);
      unint64_t v41 = v39 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
      uint64_t v42 = *(void *)(v53 + 72);
      uint64_t v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56);
      uint64_t v44 = v53 + 8;
      uint64_t v53 = v39;
      swift_bridgeObjectRetain();
      uint64_t v45 = (void (**)(uint64_t, uint64_t))v44;
      v52[0] = v44 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v46 = v54;
      while (1)
      {
        uint64_t v47 = v62;
        v56(v62, v41, v46);
        unint64_t v48 = *v43;
        (*v43)(v47, 0, 1, v46);
        if (v60(v47, 1, v46) == 1) {
          break;
        }
        uint64_t v49 = (uint64_t)v59;
        v57();
        sub_1C1E9242C(v49, v63);
        uint64_t v50 = v49;
        v51 = *v45;
        (*v45)(v50, v46);
        v41 += v42;
        if (!--v40)
        {
          v48(v62, 1, 1, v46);
          swift_bridgeObjectRelease_n();
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease_n();
      v51 = *v45;
LABEL_19:
      v51((uint64_t)v55, v46);
    }
    else
    {
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v53 + 8))(v21, v54);
    }
  }
}

uint64_t sub_1C1DDB7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C1DF8AE0(a1, a3, (uint64_t (*)(void))sub_1C1DFD354);
  sub_1C1DF92F4(0);
  uint64_t v6 = v5;
  uint64_t v7 = a2 + *(int *)(v5 + 28);
  sub_1C1DF7CD4(0);
  uint64_t v9 = v8;
  sub_1C1DFE408(v7, a3 + *(int *)(v8 + 28));
  uint64_t v10 = a2 + *(int *)(v6 + 32);
  uint64_t v11 = a3 + *(int *)(v9 + 32);
  uint64_t v12 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
  return sub_1C1EAD358();
}

uint64_t sub_1C1DDB88C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1C1E19B1C();
  uint64_t result = sub_1C1EAEF68();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      id v6 = v5;
      sub_1C1DDB910(&v7, v5);

      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1C1DDB910(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1C1EAF828();
  swift_bridgeObjectRetain();
  sub_1C1EAD7D8();
  uint64_t v7 = sub_1C1EAF858();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    id v10 = *(id *)(*(void *)(v6 + 48) + 8 * v9);
    char v11 = sub_1C1EAD7C8();

    if (v11)
    {
LABEL_6:
      swift_bridgeObjectRelease();

      uint64_t v15 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
      *a1 = v15;
      id v16 = v15;
      return 0;
    }
    uint64_t v12 = ~v8;
    while (1)
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        break;
      }
      id v13 = *(id *)(*(void *)(v6 + 48) + 8 * v9);
      char v14 = sub_1C1EAD7C8();

      if (v14) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  id v19 = a2;
  sub_1C1DDBAA0((uint64_t)a2, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v20;
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

void sub_1C1DDBAA0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C1E33934();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1C1E34EE8();
      goto LABEL_14;
    }
    sub_1C1E35E04();
  }
  uint64_t v9 = *v3;
  sub_1C1EAF828();
  sub_1C1EAD7D8();
  uint64_t v10 = sub_1C1EAF858();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1C1EAD7C8();

    if (v13)
    {
LABEL_13:
      sub_1C1EAF7C8();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1C1EAD7C8();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

id sub_1C1DDBC2C()
{
  unint64_t v0 = static RelevanceEngineCoordinator.makeStandardFeatureTagFeatures()();
  sub_1C1DDBCF8(v0);
  unint64_t v1 = sub_1C1DD49A0();
  sub_1C1DDBCF8(v1);
  id v2 = objc_allocWithZone(MEMORY[0x1E4F94940]);
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67FA0);
  uint64_t v3 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithFeatures_, v3);

  return v4;
}

uint64_t sub_1C1DDBCF8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    uint64_t v5 = v20 + v3;
    if (!__OFADD__(v20, v3)) {
      goto LABEL_5;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v5 = v4 + v3;
  if (__OFADD__(v4, v3)) {
    goto LABEL_26;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v1 = v6;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v8 = 1;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 <= v5) {
    uint64_t v10 = v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = MEMORY[0x1C874C700](v8, v10, 1, v6);
  swift_bridgeObjectRelease();
  *unint64_t v1 = v11;
  uint64_t v9 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = (*(void *)(v9 + 24) >> 1) - v12;
  uint64_t result = sub_1C1DDBEF8(v9 + 8 * v12 + 32, v13, a1);
  if (v15 < v3)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    sub_1C1E5AC88(0, &qword_1EA2C1458, (unint64_t *)&qword_1EBB67FA0);
    goto LABEL_20;
  }
  uint64_t v16 = v15;
  if (v15 >= 1)
  {
    uint64_t v17 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v18 = __OFADD__(v17, v15);
    uint64_t v19 = v17 + v15;
    if (v18)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
  }
  swift_bridgeObjectRelease();
  if (v16 == v13) {
    goto LABEL_28;
  }
LABEL_20:
  return sub_1C1EAEEB8();
}

uint64_t sub_1C1DDBEF8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C1E5AC88(0, &qword_1EA2C1458, (unint64_t *)&qword_1EBB67FA0);
        sub_1C1E5AF44(&qword_1EA2C1460, &qword_1EA2C1458, (unint64_t *)&qword_1EBB67FA0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C1E5A81C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67FA0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1DDC140(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C1EAEF68();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1C1DDC1D8(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1C1DDC1D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1C1EAF828();
  swift_bridgeObjectRetain();
  sub_1C1EAED98();
  uint64_t v8 = sub_1C1EAF858();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1C1EAF7A8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      BOOL v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1C1EAF7A8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1C1DDC388(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1C1DDC388(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1C1E32FC4();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1C1E348D8();
      goto LABEL_22;
    }
    sub_1C1E35534();
  }
  uint64_t v11 = *v4;
  sub_1C1EAF828();
  sub_1C1EAED98();
  uint64_t result = sub_1C1EAF858();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1C1EAF7A8(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1C1EAF7C8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1C1EAF7A8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1C1DDC524@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, void *a5@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a3(0);
  sub_1C1DFE408(a2 + *(int *)(v9 + 28), (uint64_t)(a5 + 1));
  uint64_t v10 = a2 + *(int *)(v9 + 32);
  uint64_t v11 = (char *)a5 + *(int *)(a4(0) + 32);
  uint64_t v12 = sub_1C1EADA28();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
  *a5 = v8;
  swift_bridgeObjectRetain();
  return sub_1C1EAD358();
}

uint64_t dispatch thunk of PluginBundleProvider.loadPluginBundle(withIdentifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t sub_1C1DDC630(uint64_t a1, uint64_t a2)
{
  return sub_1C1DDC660(a1, a2, 1, MEMORY[0x1E4F66F38]);
}

uint64_t sub_1C1DDC660(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = sub_1C1EAD448();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAD4F8();
  uint64_t v13 = sub_1C1EAD4E8();
  a4(a1, a2, a3);
  swift_release();
  if (!v4)
  {
    uint64_t v13 = sub_1C1EAD438();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v13;
}

uint64_t sub_1C1DDC79C(unint64_t a1, uint64_t a2)
{
  uint64_t v76 = a2;
  sub_1C1E15EB8(0, &qword_1EBB65998, MEMORY[0x1E4F1AC18]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v64 - v6;
  sub_1C1E174D4();
  uint64_t v72 = v8;
  uint64_t v70 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  v69 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E17580();
  uint64_t v73 = *(void *)(v10 - 8);
  uint64_t v74 = v10;
  MEMORY[0x1F4188790](v10);
  v71 = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E17418();
  uint64_t v78 = *(void *)(v12 - 8);
  uint64_t v79 = v12;
  MEMORY[0x1F4188790](v12);
  v75 = (char *)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E17824();
  uint64_t v81 = *(void *)(v14 - 8);
  uint64_t v82 = v14;
  MEMORY[0x1F4188790](v14);
  v77 = (char *)v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E17930();
  uint64_t v17 = v16;
  uint64_t v83 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  v80 = (char *)v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C1EAE568();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  v84 = (char *)v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v64 - v23;
  sub_1C1EAE4F8();
  swift_bridgeObjectRetain_n();
  int64_t v25 = sub_1C1EAE558();
  os_log_type_t v26 = sub_1C1EAF0D8();
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v85 = v20;
  if (v27)
  {
    uint64_t v65 = v19;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v68 = v4;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v66 = v17;
    uint64_t v31 = v30;
    unint64_t v87 = v30;
    uint64_t v67 = v5;
    *(_DWORD *)uint64_t v29 = 136380675;
    v64[1] = v29 + 4;
    uint64_t v32 = v7;
    uint64_t v33 = sub_1C1DF9F8C(0, &qword_1EBB65A00);
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = MEMORY[0x1C874C0C0](v34, v33);
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v38 = v35;
    uint64_t v7 = v32;
    uint64_t v86 = sub_1C1DF8D44(v38, v37, (uint64_t *)&v87);
    uint64_t v5 = v67;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    uint64_t v19 = v65;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v25, v26, "[Contact Photo] Processing shared summary entries: %{private}s", v29, 0xCu);
    swift_arrayDestroy();
    uint64_t v39 = v31;
    uint64_t v17 = v66;
    MEMORY[0x1C874D2E0](v39, -1, -1);
    uint64_t v40 = v29;
    uint64_t v4 = v68;
    MEMORY[0x1C874D2E0](v40, -1, -1);

    uint64_t v41 = v85;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v41 = v20;
  }
  uint64_t v42 = *(void (**)(char *, uint64_t))(v41 + 8);
  v42(v24, v19);
  if (!(a1 >> 62))
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
LABEL_11:
    sub_1C1E16AC0();
    sub_1C1E15F30();
    sub_1C1EAE8C8();
    sub_1C1E170C0((unint64_t *)&unk_1EBB65988, &qword_1EBB65998, MEMORY[0x1E4F1AC18]);
    uint64_t v55 = sub_1C1EAEA38();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v55;
  }
  swift_bridgeObjectRetain();
  uint64_t v63 = sub_1C1EAF638();
  swift_bridgeObjectRelease();
  if (!v63) {
    goto LABEL_11;
  }
LABEL_6:
  id v43 = objc_msgSend(self, sel_authorizationStatusForEntityType_, 0);
  if (v43 != (id)3)
  {
    uint64_t v56 = (uint64_t)v43;
    sub_1C1EAE4F8();
    v57 = sub_1C1EAE558();
    os_log_type_t v58 = sub_1C1EAF0B8();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = v19;
      v60 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v60 = 134217984;
      unint64_t v87 = v56;
      sub_1C1EAF2C8();
      _os_log_impl(&dword_1C1DD2000, v57, v58, "[Contact Photo] Contacts access not authorized. Current CNAuthorizationStatus: %ld", v60, 0xCu);
      uint64_t v61 = v60;
      uint64_t v19 = v59;
      MEMORY[0x1C874D2E0](v61, -1, -1);
    }

    v42(v84, v19);
    goto LABEL_11;
  }
  unint64_t v87 = a1;
  sub_1C1E936B4(0, &qword_1EBB659A0, &qword_1EBB65A00, 0x1E4F2B5D8, MEMORY[0x1E4FBB320]);
  sub_1C1E937F8();
  uint64_t v44 = v69;
  sub_1C1EAEDF8();
  sub_1C1E15F30();
  uint64_t v46 = v71;
  uint64_t v45 = v72;
  sub_1C1EAE6F8();
  uint64_t v47 = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v44, v45);
  MEMORY[0x1F4188790](v47);
  v64[-2] = v76;
  sub_1C1E9387C();
  unint64_t v48 = v75;
  uint64_t v49 = v74;
  sub_1C1EAE708();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v46, v49);
  sub_1C1E16AC0();
  uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C1E15EB8(0, &qword_1EBB65948, MEMORY[0x1E4F1AAE0]);
  sub_1C1DEB1C4(&qword_1EBB658B0, (void (*)(uint64_t))sub_1C1E17418);
  sub_1C1E170C0((unint64_t *)&unk_1EBB65938, &qword_1EBB65948, v50);
  v51 = v77;
  uint64_t v52 = v79;
  sub_1C1EAEAD8();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v48, v52);
  sub_1C1DEB1C4(&qword_1EBB65860, (void (*)(uint64_t))sub_1C1E17824);
  uint64_t v53 = v80;
  uint64_t v54 = v82;
  sub_1C1EAEA88();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v51, v54);
  sub_1C1DEB1C4(&qword_1EA2C15B0, (void (*)(uint64_t))sub_1C1E17930);
  uint64_t v55 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v53, v17);
  return v55;
}

uint64_t sub_1C1DDD22C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  swift_beginAccess();
  swift_retain();
  sub_1C1EAD558();
  swift_release();
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  *(void *)(swift_allocObject() + 16) = v1;
  sub_1C1DEB82C(0, &qword_1EBB65410, &qword_1EBB65468, MEMORY[0x1E4F670F0], MEMORY[0x1E4FBB320]);
  sub_1C1E171A0();
  swift_retain();
  uint64_t v5 = sub_1C1EAEA78();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  *(void *)(v2 + 16) = v5;
  swift_release();
  swift_retain();
  sub_1C1EAE368();
  swift_release();
  return swift_release();
}

uint64_t destroy for ModelTrainingScenario()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *HealthExperienceStoreCoreSpotlightDelegate.__allocating_init(for:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v4 = (void *)sub_1C1EAD518();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v5 = (void *)sub_1C1EAD508();
  id v6 = objc_msgSend(v3, sel_initForStoreWithDescription_coordinator_, v4, v5);

  uint64_t v7 = self;
  id v8 = v6;
  id v9 = objc_msgSend(v7, sel_defaultCenter);
  uint64_t v10 = *MEMORY[0x1E4F1BEE8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = v8;
  uint64_t v12 = (void *)sub_1C1EAD508();
  objc_msgSend(v9, sel_addObserver_selector_name_object_, v11, sel_indexSearchableItemsToCurrentHistoryToken, v10, v12);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = (void *)sub_1C1EAD528();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v11) + 0xB0))();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v11;
}

uint64_t sub_1C1DDD644(void *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  return a2(v3, v4);
}

uint64_t SharableModelGenerator.eraseToAnyGenerator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  v23[0] = sub_1C1EAD9C8();
  uint64_t v7 = *(void *)(v23[0] - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v23[0]);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v3, a1);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, v13, a1);
  sub_1C1EADEE8();
  v23[1] = swift_getDynamicType();
  swift_getMetatypeMetadata();
  uint64_t v16 = sub_1C1EAED68();
  uint64_t v18 = v17;
  *a3 = sub_1C1DF3E48;
  a3[1] = (uint64_t (*)())v15;
  sub_1C1DFB930(0, &qword_1EBB67710, sub_1C1E15248);
  uint64_t v20 = v19;
  uint64_t result = (*(uint64_t (**)(char *, char *, void))(v7 + 32))((char *)a3 + *(int *)(v19 + 44), v10, v23[0]);
  uint64_t v22 = (uint64_t *)((char *)a3 + *(int *)(v20 + 48));
  *uint64_t v22 = v16;
  v22[1] = v18;
  return result;
}

BOOL sub_1C1DDD8D8(void **a1)
{
  return sub_1C1DDD940(*a1, *(void *)(v1 + 16), (uint64_t)&unk_1F1D65110);
}

BOOL sub_1C1DDD90C(void **a1)
{
  return sub_1C1DDD940(*a1, *(void *)(v1 + 16), (uint64_t)&unk_1F1D65138);
}

BOOL sub_1C1DDD940(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1EAE568();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = sub_1C1DDDB64(a1, a3);
  swift_arrayDestroy();
  if (v10)
  {
    sub_1C1EAE4F8();
    uint64_t v11 = sub_1C1EAE558();
    os_log_type_t v12 = sub_1C1EAF0C8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446210;
      v18[1] = v13 + 4;
      uint64_t v19 = v14;
      uint64_t v20 = a2;
      swift_getMetatypeMetadata();
      uint64_t v15 = sub_1C1EAED68();
      uint64_t v20 = sub_1C1DF8D44(v15, v16, &v19);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v11, v12, "%{public}s: Received agnostic only source profiles, skipping pipeline for this set of profiles", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v14, -1, -1);
      MEMORY[0x1C874D2E0](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return (v10 & 1) == 0;
}

uint64_t sub_1C1DDDB64(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[2];
  if (v2 != *(void *)(a2 + 16)) {
    goto LABEL_7;
  }
  if (!v2 || a1 == (void *)a2) {
    goto LABEL_6;
  }
  uint64_t v5 = (void *)a1[4];
  id v6 = *(id *)(a2 + 32);
  id v7 = v5;
  LOBYTE(v5) = sub_1C1EAD7C8();

  if ((v5 & 1) == 0)
  {
LABEL_7:
    char v8 = 0;
    return v8 & 1;
  }
  if (v2 == 1)
  {
LABEL_6:
    char v8 = 1;
    return v8 & 1;
  }
  uint64_t v10 = v2 - 2;
  uint64_t v11 = (void **)(a1 + 5);
  os_log_type_t v12 = (void **)(a2 + 40);
  do
  {
    uint64_t v14 = *v11++;
    uint64_t v13 = v14;
    uint64_t v15 = *v12++;
    id v16 = v15;
    id v17 = v13;
    char v8 = sub_1C1EAD7C8();

    BOOL v19 = v10-- != 0;
  }
  while ((v8 & 1) != 0 && v19);
  return v8 & 1;
}

uint64_t BasicPluginInfo.init(bundle:)(void *a1)
{
  v1[2] = a1;
  id v2 = a1;
  id v3 = objc_msgSend(v2, sel_bundleIdentifier);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1C1EAED38();
    uint64_t v7 = v6;

    v1[3] = v5;
    v1[4] = v7;
    return (uint64_t)v1;
  }
  else
  {
    sub_1C1EAF4A8();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v2, sel_description);
    sub_1C1EAED38();

    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();
    sub_1C1EAEDB8();
    uint64_t result = sub_1C1EAF628();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1DDDDA0@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  a2[3] = &type metadata for DispatchQueueGeneratorScheduler;
  a2[4] = sub_1C1DDDE24();
  uint64_t v6 = (void *)swift_allocObject();
  *a2 = v6;
  v6[5] = type metadata accessor for HealthExperienceStoreFeedItemContext(0);
  v6[6] = a1;
  v6[2] = v5;
  return swift_retain();
}

unint64_t sub_1C1DDDE24()
{
  unint64_t result = qword_1EBB64878;
  if (!qword_1EBB64878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64878);
  }
  return result;
}

uint64_t sub_1C1DDDE78()
{
  uint64_t v0 = sub_1C1EAE568();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE4F8();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1C1EAE558();
  os_log_type_t v5 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v6 = 136315395;
    uint64_t v7 = sub_1C1EAF908();
    uint64_t v18 = sub_1C1DF8D44(v7, v8, &v19);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2081;
    uint64_t v9 = sub_1C1EAD888();
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = MEMORY[0x1C874C0C0](v10, v9);
    uint64_t v16 = v0;
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1C1DF8D44(v11, v13, &v19);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v4, v5, "[%s] Removed %{private}s", (uint8_t *)v6, 0x16u);
    uint64_t v14 = v17;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v14, -1, -1);
    MEMORY[0x1C874D2E0](v6, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v16);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t sub_1C1DDE0FC()
{
  sub_1C1EAD4F8();
  sub_1C1EAD4E8();
  sub_1C1EAD4A8();
  uint64_t v4 = sub_1C1EAD498();
  v2[1] = v2;
  uint64_t v3 = sub_1C1EAEC18();
  MEMORY[0x1F4188790](v3);
  uint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F66F28];
  sub_1C1DDE354(0, &qword_1EBB651D8, MEMORY[0x1E4F66F28]);
  sub_1C1EAEC98();
  sub_1C1DDE310(&qword_1EBB65460, &qword_1EBB651D8, v0);
  sub_1C1EAEE18();
  swift_bridgeObjectRelease();
  swift_release();
  return v5;
}

uint64_t sub_1C1DDE310(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1DDE354(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1DDE354(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C1EAEF28();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1DDE3A8(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C1EAE568();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v15 = a2 + 16;
  if (*a1)
  {
    sub_1C1EAE4F8();
    uint64_t v16 = sub_1C1EAE558();
    os_log_type_t v17 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v36 = v8;
      uint64_t v20 = v19;
      uint64_t v37 = v15;
      v38[0] = v19;
      *(_DWORD *)uint64_t v18 = 136446210;
      uint64_t v39 = a4;
      swift_getMetatypeMetadata();
      uint64_t v21 = sub_1C1EAED68();
      uint64_t v39 = sub_1C1DF8D44(v21, v22, v38);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v16, v17, "[%{public}s]: Pull all shared summaries successfully.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v20, -1, -1);
      MEMORY[0x1C874D2E0](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v36);
      goto LABEL_9;
    }

    uint64_t v33 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v34 = v12;
  }
  else
  {
    sub_1C1EAE4F8();
    uint64_t v23 = sub_1C1EAE558();
    os_log_type_t v24 = sub_1C1EAF0B8();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v37 = v15;
      v38[0] = v26;
      uint64_t v27 = v8;
      uint64_t v28 = v26;
      *(_DWORD *)uint64_t v25 = 136446466;
      uint64_t v39 = a4;
      swift_getMetatypeMetadata();
      uint64_t v36 = a3;
      uint64_t v29 = sub_1C1EAED68();
      uint64_t v39 = sub_1C1DF8D44(v29, v30, v38);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v31 = sub_1C1EAED68();
      uint64_t v39 = sub_1C1DF8D44(v31, v32, v38);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v23, v24, "[%{public}s]: Pull Shared Summaries Error: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v28, -1, -1);
      MEMORY[0x1C874D2E0](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v27);
      goto LABEL_9;
    }

    uint64_t v33 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v34 = v14;
  }
  v33(v34, v8);
LABEL_9:
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_1C1EAE378();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

id _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7hkTypes17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySo12HKObjectTypeCGSg10Foundation0M8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a3;
  sub_1C1DF2B44(0, &qword_1EBB68158, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v49 = (uint64_t)&v43 - v8;
  uint64_t v9 = sub_1C1EAD0E8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1C1EAD668();
  uint64_t v12 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v44 = v10;
    uint64_t v45 = v9;
    uint64_t v46 = a4;
    unint64_t v47 = a2;
    uint64_t v54 = MEMORY[0x1E4FBC860];
    sub_1C1DE1100(0, v15, 0);
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v17 = v12 + 16;
    uint64_t v19 = a1 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    uint64_t v51 = *(void *)(v17 + 56);
    uint64_t v52 = v18;
    uint64_t v20 = (void (**)(char *, uint64_t))(v17 - 8);
    do
    {
      uint64_t v21 = v53;
      uint64_t v22 = v17;
      v52(v14, v19, v53);
      uint64_t v23 = sub_1C1EAD658();
      uint64_t v25 = v24;
      (*v20)(v14, v21);
      uint64_t v16 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1DE1100(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v54;
      }
      unint64_t v27 = *(void *)(v16 + 16);
      unint64_t v26 = *(void *)(v16 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1C1DE1100(v26 > 1, v27 + 1, 1);
        uint64_t v16 = v54;
      }
      *(void *)(v16 + 16) = v27 + 1;
      unint64_t v28 = v16 + 16 * v27;
      *(void *)(v28 + 32) = v23;
      *(void *)(v28 + 40) = v25;
      v19 += v51;
      --v15;
      uint64_t v17 = v22;
    }
    while (v15);
    a4 = v46;
    a2 = v47;
    uint64_t v10 = v44;
    uint64_t v9 = v45;
  }
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1C1EB0800;
  uint64_t v30 = MEMORY[0x1E4FBB1A0];
  *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v29 + 64) = sub_1C1DF2A98();
  *(void *)(v29 + 32) = 0xD000000000000013;
  *(void *)(v29 + 40) = 0x80000001C1EB3CF0;
  sub_1C1DFD228(0, (unint64_t *)&qword_1EBB68358, v30, MEMORY[0x1E4FBB320]);
  *(void *)(v29 + 96) = v31;
  *(void *)(v29 + 104) = sub_1C1E16EBC();
  *(void *)(v29 + 72) = v16;
  unint64_t v32 = (void *)sub_1C1EAF018();
  sub_1C1DFD228(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C1EB04A0;
  *(void *)(v33 + 32) = v32;
  uint64_t v54 = v33;
  sub_1C1EAEEB8();
  uint64_t v34 = v49;
  sub_1C1E19CE4(v48, v49);
  int v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v34, 1, v9);
  uint64_t v36 = v50;
  if (v35 == 1)
  {
    id v37 = v32;
    sub_1C1E19C58(v34);
    if (!a4) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v50, v34, v9);
  id v38 = v32;
  _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor17relevantDateRangeSo11NSPredicateC10Foundation0I8IntervalV_tFZ_0();
  MEMORY[0x1C874C090]();
  if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v36, v9);
  if (a4)
  {
LABEL_15:
    sub_1C1EAE348();
    MEMORY[0x1C874B550](a4);
    MEMORY[0x1C874C090]();
    if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C1EAEEE8();
    }
    sub_1C1EAEF18();
    sub_1C1EAEEB8();
  }
LABEL_18:
  if (a2)
  {
    id v39 = (id)_s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor10objectypesSo11NSPredicateCSaySo12HKObjectTypeCG_tFZ_0(a2);
    MEMORY[0x1C874C090]();
    if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C1EAEEE8();
    }
    sub_1C1EAEF18();
    sub_1C1EAEEB8();
  }
  uint64_t v40 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v41 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v40);

  return v41;
}

void *SharableModelGeneratorPipelineManager.init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v16 = a4 & 1;
  sub_1C1E14CAC(0, &qword_1EBB650B8, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1AB88]);
  swift_allocObject();
  swift_retain();
  *(void *)(v9 + 248) = sub_1C1EAE808();
  swift_release();
  sub_1C1DFE408(a1, (uint64_t)v23);
  sub_1C1DFE408(a5, (uint64_t)v22);
  sub_1C1DFE408(a8, (uint64_t)v21);
  sub_1C1DFE408(a9, (uint64_t)v20);
  uint64_t v17 = sub_1C1E08BA4((uint64_t)v23, a2, a3, v16, (uint64_t)v22, a6, a7, (uint64_t)v21, (uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1(a9);
  __swift_destroy_boxed_opaque_existential_1(a8);
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v17;
}

uint64_t sub_1C1DDEF48(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v31 = a4;
  uint64_t v34 = a2;
  int v35 = a3 & 1;
  uint64_t v5 = sub_1C1EAE478();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1EAD368();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C1EAE568();
  uint64_t v32 = *(void *)(v13 - 8);
  uint64_t v33 = v13;
  MEMORY[0x1F4188790](v13);
  int64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE518();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  char v16 = sub_1C1EAE558();
  os_log_type_t v17 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v30 = v6;
    uint64_t v19 = v18;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v37 = v28;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v20 = sub_1C1EAF908();
    uint64_t v31 = v5;
    uint64_t v36 = sub_1C1DF8D44(v20, v21, &v37);
    uint64_t v29 = v8;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    sub_1C1DEB1C4((unint64_t *)&qword_1EBB66150, MEMORY[0x1E4F27990]);
    uint64_t v22 = sub_1C1EAF768();
    uint64_t v36 = sub_1C1DF8D44(v22, v23, &v37);
    uint64_t v8 = v29;
    uint64_t v5 = v31;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl(&dword_1C1DD2000, v16, v17, "[%{public}s] Feed item generation IDLE for 6 seconds: %{public}s", (uint8_t *)v19, 0x16u);
    uint64_t v24 = v28;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v24, -1, -1);
    uint64_t v25 = v19;
    uint64_t v6 = v30;
    MEMORY[0x1C874D2E0](v25, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v33);
  sub_1C1EAF1C8();
  id v26 = (id)_HKLogPersistedSignposts();
  sub_1C1EAE498();

  uint64_t result = sub_1C1EADF78();
  if (result)
  {
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F66800], v5);
    sub_1C1EAE468();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

void sub_1C1DDF3A4()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1C1EAE568();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t))(class metadata base offset for HealthExperienceStoreCoreSpotlightOperation
                                                  + (*MEMORY[0x1E4FBC8C8] & *v0)
                                                  + 16))(v4);
  objc_msgSend(v7, sel_startSpotlightIndexing);
  sub_1C1EAE4E8();
  id v8 = v7;
  uint64_t v9 = sub_1C1EAE558();
  os_log_type_t v10 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v21 = v3;
    uint64_t v12 = v11;
    uint64_t v18 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v19;
    uint64_t v23 = ObjectType;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v20 = v2;
    swift_getMetatypeMetadata();
    uint64_t v13 = sub_1C1EAED68();
    uint64_t v23 = sub_1C1DF8D44(v13, v14, &v22);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2112;
    uint64_t v23 = (uint64_t)v8;
    id v15 = v8;
    sub_1C1EAF2C8();
    char v16 = v18;
    *uint64_t v18 = v8;

    _os_log_impl(&dword_1C1DD2000, v9, v10, "[%s] spotlightDelegate: %@", (uint8_t *)v12, 0x16u);
    sub_1C1E1699C();
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v16, -1, -1);
    uint64_t v17 = v19;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v17, -1, -1);
    MEMORY[0x1C874D2E0](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  sub_1C1EAE3F8();
}

uint64_t sub_1C1DDF6B4(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C1EAE568();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = *a1;
  if (v12)
  {
    id v13 = v12;
    sub_1C1EAE4F8();
    id v14 = v12;
    id v15 = v12;
    char v16 = sub_1C1EAE558();
    os_log_type_t v17 = sub_1C1EAF0B8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v37 = v5;
      uint64_t v20 = v19;
      v40[0] = v19;
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v38 = a3;
      uint64_t v21 = sub_1C1EAF908();
      uint64_t v39 = sub_1C1DF8D44(v21, v22, v40);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v39 = (uint64_t)v12;
      id v23 = v12;
      sub_1C1E15F30();
      uint64_t v24 = sub_1C1EAED68();
      uint64_t v39 = sub_1C1DF8D44(v24, v25, v40);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1DD2000, v16, v17, "[%s] Error removing feed item notifications for removed profiles. %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v20, -1, -1);
      MEMORY[0x1C874D2E0](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v37);
      goto LABEL_9;
    }

    uint64_t v32 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v33 = v11;
  }
  else
  {
    sub_1C1EAE4F8();
    id v26 = sub_1C1EAE558();
    os_log_type_t v27 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v37 = v5;
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      v40[0] = v29;
      uint64_t v38 = a3;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v30 = sub_1C1EAF908();
      uint64_t v39 = sub_1C1DF8D44(v30, v31, v40);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v26, v27, "[%s] Successfully removed feed item notifications for removed profiles", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v29, -1, -1);
      MEMORY[0x1C874D2E0](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v37);
      goto LABEL_9;
    }

    uint64_t v32 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v33 = v9;
  }
  v32(v33, v5);
LABEL_9:
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_1C1EAE378();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    int v35 = *(void (**)(uint64_t))(result + 272);
    sub_1C1E16DEC((uint64_t)v35);
    uint64_t result = swift_release();
    if (v35)
    {
      v35(result);
      return sub_1C1E16DFC((uint64_t)v35);
    }
  }
  return result;
}

id _sSo6RERuleC18HealthPlatformCoreE47makeExcludeTwoBarComparisonWithLowMagnitudeRuleAByFZ_0()
{
  uint64_t v0 = sub_1C1EADE38();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB68110 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EBB6AD18;
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_conditionHasValueForFeature_, v4);
  LODWORD(v7) = 1036160860;
  id v8 = objc_msgSend(v5, sel_conditionForFeature_relation_floatValue_, v4, -1, v7);
  if (qword_1EBB68140 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EBB6AD38;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F67358], v0);
  id v10 = v9;
  sub_1C1EADE28();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v11 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v5, sel_conditionForFeature_hasValue_, v10, v11);

  sub_1C1DFD2C0(0, (unint64_t *)&qword_1EBB660F8);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1EB1B10;
  *(void *)(v13 + 32) = v6;
  *(void *)(v13 + 40) = v8;
  *(void *)(v13 + 48) = v12;
  v21[1] = v13;
  sub_1C1EAEEB8();
  sub_1C1DF9F8C(0, &qword_1EBB67F38);
  id v14 = v6;
  id v15 = v8;
  id v16 = v12;
  os_log_type_t v17 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v5, sel_andConditions_, v17);

  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94958]), sel_initWithCondition_type_, v18, 0);
  return v19;
}

uint64_t sub_1C1DDFE98(uint64_t a1)
{
  return sub_1C1DDFEBC(a1);
}

uint64_t sub_1C1DDFEBC(uint64_t a1)
{
  sub_1C1DE01A4();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1C1EAE0A8();
  uint64_t v8 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16)) {
    swift_bridgeObjectRetain();
  }
  sub_1C1EAE078();
  uint64_t v11 = *(uint64_t (**)(char *))(v1 + 80);
  swift_retain();
  uint64_t v12 = v11(v10);
  swift_release();
  uint64_t v22 = v12;
  sub_1C1E12B38(0, &qword_1EBB65918, &qword_1EBB67D68, (void (*)(uint64_t))sub_1C1E68084);
  sub_1C1E12BA0(&qword_1EBB65910, &qword_1EBB65918, &qword_1EBB67D68, (void (*)(uint64_t))sub_1C1E68084);
  uint64_t v13 = sub_1C1EAE958();
  swift_release();
  uint64_t v22 = v13;
  id v14 = (void (*)(uint64_t))MEMORY[0x1E4F67288];
  sub_1C1E12B38(0, &qword_1EBB67D18, &qword_1EBB674A8, MEMORY[0x1E4F67288]);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C1E12BA0(&qword_1EBB67D10, &qword_1EBB67D18, &qword_1EBB674A8, v14);
  sub_1C1EAE918();
  swift_release();
  uint64_t v22 = v16;
  uint64_t v23 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  return v18;
}

void sub_1C1DE01A4()
{
  if (!qword_1EBB65440)
  {
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F67288];
    sub_1C1E12B38(255, &qword_1EBB67D18, &qword_1EBB674A8, MEMORY[0x1E4F67288]);
    sub_1C1E12BA0(&qword_1EBB67D10, &qword_1EBB67D18, &qword_1EBB674A8, v0);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v2) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EBB65440);
    }
  }
}

uint64_t sub_1C1DE0280(uint64_t a1)
{
  return sub_1C1E13720(a1, v1[2], v1 + 3, v1[8], v1[9]);
}

uint64_t sub_1C1DE0290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1DF92F4(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1E01808(a4, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a3;
    sub_1C1E07A18((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
    swift_retain();
    sub_1C1E07024((uint64_t)sub_1C1E07440, v11, (uint64_t)&unk_1F1D672C0, (uint64_t)&unk_1F1D67450, (uint64_t)sub_1C1DF5FC8, (uint64_t)&block_descriptor_206);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1DE0408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1DF7CD4(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1E0776C(a4, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a3;
    sub_1C1E07754((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
    swift_retain();
    sub_1C1E07024((uint64_t)sub_1C1E073C0, v11, (uint64_t)&unk_1F1D672C0, (uint64_t)&unk_1F1D67450, (uint64_t)sub_1C1DF5FC8, (uint64_t)&block_descriptor_206);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = sub_1C1EAD3C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t objectdestroyTm_1()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C1DE06E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (swift_weakLoadStrong())
  {
    if (sub_1C1EADF78())
    {
      swift_beginAccess();
      swift_retain();
      sub_1C1EAE7F8();
      swift_release();
    }
    swift_release();
  }
  return sub_1C1DF8AE0(a1, a2, (uint64_t (*)(void))sub_1C1DFC68C);
}

void sub_1C1DE07A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C1EAE568();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[7];
  sub_1C1EAD5D8();
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, HKImproveHealthAndActivityAnalyticsAllowed());
  sub_1C1EAE548();
  id v9 = v8;
  unint64_t v10 = sub_1C1EAE558();
  os_log_type_t v11 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v29 = v7;
    uint64_t v13 = v12;
    uint64_t v27 = swift_slowAlloc();
    v33[0] = v27;
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v28 = v3;
    *(void *)&long long v30 = v2;
    swift_getMetatypeMetadata();
    uint64_t v14 = sub_1C1EAED68();
    *(void *)&long long v30 = sub_1C1DF8D44(v14, v15, v33);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    *(void *)&long long v30 = v9;
    id v16 = v9;
    uint64_t v17 = sub_1C1EAED68();
    *(void *)&long long v30 = sub_1C1DF8D44(v17, v18, v33);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v10, v11, "[%{public}s]: Updating current event with: %s", (uint8_t *)v13, 0x16u);
    uint64_t v19 = v27;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v19, -1, -1);
    MEMORY[0x1C874D2E0](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v20 = v1 + 8;
  swift_beginAccess();
  uint64_t v21 = (void *)v1[8];
  id v22 = v9;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v1[8] = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v21 = sub_1C1DD4B28(0, v21[2] + 1, 1, v21);
    void *v20 = v21;
  }
  unint64_t v25 = v21[2];
  unint64_t v24 = v21[3];
  if (v25 >= v24 >> 1)
  {
    uint64_t v21 = sub_1C1DD4B28((void *)(v24 > 1), v25 + 1, 1, v21);
    void *v20 = v21;
  }
  unint64_t v31 = &type metadata for AppSessionAnalyticsEvent.ImproveHealthAnalytics;
  unint64_t v32 = sub_1C1E19508();
  *(void *)&long long v30 = v22;
  void v21[2] = v25 + 1;
  sub_1C1DFE46C(&v30, (uint64_t)&v21[5 * v25 + 4]);
  swift_endAccess();
  sub_1C1EAD5E8();
}

id FeedItem.associatedDisplayCategory.getter()
{
  id v1 = objc_msgSend(v0, sel_categoryIdentifier);
  if (v1)
  {
    sub_1C1EAED38();

    uint64_t v2 = (void *)sub_1C1EAED28();
    swift_bridgeObjectRelease();
    id v1 = objc_msgSend(self, sel_categoryWithName_, v2);
  }
  return v1;
}

uint64_t sub_1C1DE0BE8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1C1DE0DB8(0, v1, 0);
    uint64_t v4 = a1 + 32;
    sub_1C1DE0FC8();
    sub_1C1DE0D78();
    do
    {
      swift_dynamicCast();
      uint64_t v2 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1DE0DB8(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C1DE0DB8(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      *(void *)(v2 + 8 * v6 + 32) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

id sub_1C1DE0D08(uint64_t a1)
{
  int64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  sub_1C1DE0D78();
  uint64_t v3 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1C1DE0D78()
{
  unint64_t result = qword_1EBB67FC8;
  if (!qword_1EBB67FC8)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB67FC8);
  }
  return result;
}

uint64_t sub_1C1DE0DB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1DE0DD8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1DE0DD8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1DE0F64(0, &qword_1EBB67FC0, (uint64_t (*)(uint64_t))sub_1C1DE0D78, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1DE0F64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C1DE0FC8()
{
  unint64_t result = qword_1EBB67F78;
  if (!qword_1EBB67F78)
  {
    sub_1C1DF9F8C(255, &qword_1EBB67F70);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB67F78);
  }
  return result;
}

uint64_t sub_1C1DE1014()
{
  return sub_1C1DE0BE8(*(void *)(v0 + 16));
}

uint64_t sub_1C1DE101C()
{
  sub_1C1DFC4E4(0, &qword_1EBB67FC0, (uint64_t (*)(uint64_t))sub_1C1DE0D78, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1EB07F0;
  *(void *)(v0 + 32) = type metadata accessor for GroupConfigurationLoader();
  return v0;
}

uint64_t type metadata accessor for GroupConfigurationLoader()
{
  return self;
}

uint64_t sub_1C1DE1100(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1DE1120(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1DE1120(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1DE15D4(0, &qword_1EBB683A8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1DE12AC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)result;
  uint64_t v3 = *(void *)(*(void *)result + 16);
  if (v3)
  {
    uint64_t v13 = a2;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = MEMORY[0x1E4FBC860];
    do
    {
      unint64_t v6 = *(void **)(v2 + 8 * v4 + 32);
      id v7 = v6;
      uint64_t v8 = (void *)sub_1C1EAD778();
      if (!v8) {
        goto LABEL_3;
      }
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, sel_type);

      if (qword_1EBB65680 != -1) {
        swift_once();
      }
      if (sub_1C1DE175C(v10, qword_1EBB65678))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C1DE1428(0, *(void *)(v5 + 16) + 1, 1);
        }
        unint64_t v12 = *(void *)(v5 + 16);
        unint64_t v11 = *(void *)(v5 + 24);
        if (v12 >= v11 >> 1) {
          sub_1C1DE1428(v11 > 1, v12 + 1, 1);
        }
        *(void *)(v5 + 16) = v12 + 1;
        *(void *)(v5 + 8 * v12 + 32) = v6;
      }
      else
      {
LABEL_3:
      }
      ++v4;
    }
    while (v3 != v4);
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v13;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1C1DE1428(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1DE1448(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1DE1448(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1DE15D4(0, (unint64_t *)&qword_1EBB68280, MEMORY[0x1E4F670C0], MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1DE15D4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C1DE1620(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

BOOL sub_1C1DE166C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_1C1EAF828();
  sub_1C1EAF838();
  uint64_t v4 = sub_1C1EAF858();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t static FeedPopulationListenerSupport.makeThrottledFeedItemSubmissionPublisher<A>(config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v57 = a4;
  uint64_t v46 = a1;
  uint64_t v8 = sub_1C1EAE658();
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = sub_1C1EAF1E8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DE1E60();
  uint64_t v16 = v15;
  uint64_t v52 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v43 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C1DE1E18(&qword_1EBB653C0, (void (*)(uint64_t))sub_1C1DE1E60);
  uint64_t v53 = v16;
  uint64_t v58 = v16;
  uint64_t v59 = a3;
  uint64_t v47 = v18;
  uint64_t v60 = v18;
  uint64_t v61 = a5;
  uint64_t v19 = sub_1C1EAE5C8();
  uint64_t v51 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v50 = (char *)&v41 - v20;
  uint64_t v21 = sub_1C1EADD48();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v56 = v21;
  uint64_t v44 = WitnessTable;
  uint64_t v23 = sub_1C1EAE668();
  uint64_t v48 = *(void *)(v23 - 8);
  uint64_t v49 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v45 = (char *)&v41 - v24;
  id v25 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EBB67D80 != -1) {
    swift_once();
  }
  sub_1C1EAF1F8();

  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = a2;
  v26[3] = a3;
  uint64_t v42 = a2;
  v26[4] = v57;
  v26[5] = a5;
  sub_1C1DE1E18((unint64_t *)&unk_1EBB65130, MEMORY[0x1E4F27FC8]);
  uint64_t v27 = v43;
  sub_1C1EAEA68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = &v10[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v30 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v10, v46, a3);
  uint64_t v31 = type metadata accessor for FeedPopulationListenerSchedulerConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v29, v30 + *(int *)(v31 + 36), AssociatedTypeWitness);
  uint64_t v33 = v54;
  uint64_t v32 = v55;
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v10, *MEMORY[0x1E4F1A928], v55);
  uint64_t v34 = v50;
  uint64_t v35 = v53;
  sub_1C1EAEAC8();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v32);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v27, v35);
  uint64_t v36 = (void *)swift_allocObject();
  v36[2] = v42;
  v36[3] = a3;
  v36[4] = v57;
  v36[5] = a5;
  uint64_t v37 = v45;
  sub_1C1EAEA68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v19);
  uint64_t v38 = v49;
  swift_getWitnessTable();
  uint64_t v39 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v38);
  return v39;
}

uint64_t sub_1C1DE1E18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1DE1E60()
{
  if (!qword_1EBB653C8)
  {
    sub_1C1EAF1E8();
    sub_1C1EADD48();
    sub_1C1DE1E18((unint64_t *)&unk_1EBB65130, MEMORY[0x1E4F27FC8]);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB653C8);
    }
  }
}

uint64_t type metadata accessor for FeedPopulationListenerSchedulerConfiguration()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C1DE1F24(void *a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v8 = sub_1C1EAE568();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE4F8();
  id v12 = a1;
  id v13 = a1;
  uint64_t v14 = sub_1C1EAE558();
  os_log_type_t v15 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v27 = v24;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v25 = v8;
    uint64_t v26 = a2(0);
    sub_1C1E09A34(0, a3, a4);
    uint64_t v17 = sub_1C1EAED68();
    uint64_t v26 = sub_1C1DF8D44(v17, v18, &v27);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v26 = (uint64_t)a1;
    id v19 = a1;
    sub_1C1DE21C4();
    uint64_t v20 = sub_1C1EAED68();
    uint64_t v26 = sub_1C1DF8D44(v20, v21, &v27);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1DD2000, v14, v15, "[%{public}s]: Sending completion event <%{public}s> for generation sent", (uint8_t *)v16, 0x16u);
    uint64_t v22 = v24;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v22, -1, -1);
    MEMORY[0x1C874D2E0](v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v25);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_1C1DE21C4()
{
  if (!qword_1EBB64760)
  {
    sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
    unint64_t v0 = sub_1C1EAE798();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64760);
    }
  }
}

uint64_t static RelevanceEngineCoordinator.makeStandardFeatureTagFeatures()()
{
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (qword_1EBB68138 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6AD30;
  MEMORY[0x1C874C090]();
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();

  if (qword_1EBB680C8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB6ACD8;
  MEMORY[0x1C874C090]();
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();

  if (qword_1EBB68120 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6AD20;
  MEMORY[0x1C874C090]();
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();

  if (qword_1EBB68100 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBB6AD08;
  MEMORY[0x1C874C090]();
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();

  if (qword_1EBB68108 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6AD10;
  MEMORY[0x1C874C090]();
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();

  if (qword_1EBB680C0 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EBB6ACD0;
  MEMORY[0x1C874C090]();
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();

  if (qword_1EBB680E8 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EBB6ACF8;
  MEMORY[0x1C874C090]();
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();

  if (qword_1EBB680D8 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EBB6ACE8;
  MEMORY[0x1C874C090]();
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();

  if (qword_1EBB680A8 != -1) {
    swift_once();
  }
  id v8 = (id)qword_1EBB6ACB8;
  MEMORY[0x1C874C090]();
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();

  return v10;
}

uint64_t AnyGenerator.debugDescription.getter(uint64_t a1)
{
  uint64_t v3 = sub_1C1EAD9C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = sub_1C1EAF908();
  v9[1] = v7;
  sub_1C1EAEDB8();
  swift_bridgeObjectRetain();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + *(int *)(a1 + 44), v3);
  sub_1C1EAED68();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  return v9[0];
}

uint64_t objectdestroy_198Tm()
{
  sub_1C1DF7CD4(0);
  id v2 = (int *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  uint64_t v7 = v0 + v4;
  swift_release();
  sub_1C1DFD354(0);
  uint64_t v9 = v0 + v4 + *(int *)(v8 + 44);
  uint64_t v10 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + v2[9]);
  uint64_t v11 = v0 + v4 + v2[10];
  uint64_t v12 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v7 + v2[11];
  uint64_t v14 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t objectdestroy_188Tm()
{
  sub_1C1DF7CD4(0);
  id v2 = (int *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  uint64_t v7 = v0 + v4;
  swift_release();
  sub_1C1DFD354(0);
  uint64_t v9 = v0 + v4 + *(int *)(v8 + 44);
  uint64_t v10 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + v2[9]);
  uint64_t v11 = v0 + v4 + v2[10];
  uint64_t v12 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v7 + v2[11];
  uint64_t v14 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t *sub_1C1DE2C78(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v83 = a1;
  uint64_t v68 = *a4;
  uint64_t v12 = sub_1C1EAE568();
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v82 = v12;
  MEMORY[0x1F4188790](v12);
  v80 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C1DE38AC(0, &qword_1EBB67F50, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  v69 = (char *)v63 - v15;
  sub_1C1E17298();
  uint64_t v73 = v16;
  uint64_t v74 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v70 = (char *)v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E17B94();
  uint64_t v76 = v18;
  uint64_t v77 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  v71 = (char *)v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E17638();
  unint64_t v21 = *(void (***)(void, void))(v20 - 8);
  uint64_t v78 = v20;
  uint64_t v79 = v21;
  MEMORY[0x1F4188790](v20);
  v75 = (char *)v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1C1EAF188();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v65 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C1EAF148();
  MEMORY[0x1F4188790](v24);
  v63[1] = (char *)v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1C1EAEBD8();
  MEMORY[0x1F4188790](v26 - 8);
  v86[3] = a5;
  v86[4] = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v86);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_0, a3, a5);
  sub_1C1E16FF0();
  swift_allocObject();
  a4[14] = sub_1C1EAE808();
  a4[15] = 0;
  sub_1C1DFE408(a1, (uint64_t)(a4 + 2));
  a4[7] = (uint64_t)a2;
  v63[0] = sub_1C1E16B8C();
  id v28 = a2;
  id v64 = v28;
  *(void *)&v85[0] = sub_1C1EAF908();
  *((void *)&v85[0] + 1) = v29;
  sub_1C1EAEDB8();
  id v30 = objc_msgSend(v28, sel_profileIdentifier);
  id v31 = objc_msgSend(v30, sel_description);
  sub_1C1EAED38();

  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  sub_1C1EAEB98();
  *(void *)&v85[0] = MEMORY[0x1E4FBC860];
  sub_1C1DFFCB0(&qword_1EBB68380, MEMORY[0x1E4FBCC10]);
  uint64_t v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C1DE38AC(0, &qword_1EBB68368, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C1E16E0C((unint64_t *)&qword_1EBB68370, &qword_1EBB68368, v32);
  sub_1C1EAF328();
  (*(void (**)(char *, void, uint64_t))(v66 + 104))(v65, *MEMORY[0x1E4FBCC58], v67);
  a4[13] = sub_1C1EAF1A8();
  sub_1C1DFE408((uint64_t)v86, (uint64_t)(a4 + 8));
  uint64_t v33 = (void *)a4[13];
  *(void *)&v85[0] = a4[14];
  *(void *)&v84[0] = v33;
  uint64_t v34 = sub_1C1EAF158();
  uint64_t v35 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v69, 1, 1, v34);
  sub_1C1DFFCB0(&qword_1EBB650A8, (void (*)(uint64_t))sub_1C1E16FF0);
  sub_1C1DFFCB0((unint64_t *)&qword_1EBB67F58, (void (*)(uint64_t))sub_1C1E16B8C);
  swift_retain();
  id v36 = v33;
  uint64_t v37 = v70;
  sub_1C1EAEAE8();
  sub_1C1E16BCC(v35, &qword_1EBB67F50, v72);

  swift_release();
  uint64_t v38 = swift_allocObject();
  uint64_t v39 = v64;
  uint64_t v40 = v68;
  *(void *)(v38 + 16) = v64;
  *(void *)(v38 + 24) = v40;
  sub_1C1DFFCB0(&qword_1EBB64FC0, (void (*)(uint64_t))sub_1C1E17298);
  id v41 = v39;
  uint64_t v42 = v71;
  uint64_t v43 = v73;
  sub_1C1EAEA18();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v37, v43);
  uint64_t v44 = swift_allocObject();
  swift_weakInit();
  sub_1C1DFE408(v83, (uint64_t)v85);
  sub_1C1DFE408((uint64_t)v86, (uint64_t)v84);
  uint64_t v45 = (void *)swift_allocObject();
  sub_1C1DFE46C(v85, (uint64_t)(v45 + 2));
  sub_1C1DFE46C(v84, (uint64_t)(v45 + 7));
  v45[12] = v44;
  v45[13] = v41;
  v45[14] = v40;
  sub_1C1E17B00();
  sub_1C1DFFCB0(&qword_1EBB64DA0, (void (*)(uint64_t))sub_1C1E17B94);
  sub_1C1DFFCB0(&qword_1EBB653A8, (void (*)(uint64_t))sub_1C1E17B00);
  id v46 = v41;
  uint64_t v47 = v75;
  uint64_t v48 = v76;
  sub_1C1EAEB68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v42, v48);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v46;
  *(void *)(v49 + 24) = v40;
  sub_1C1DFFCB0(&qword_1EBB653D0, (void (*)(uint64_t))sub_1C1E17638);
  id v50 = v46;
  uint64_t v51 = v78;
  uint64_t v52 = sub_1C1EAEB48();
  swift_release();
  ((void (**)(char *, uint64_t))v79)[1](v47, v51);
  a4[15] = v52;
  swift_release();
  uint64_t v53 = v80;
  sub_1C1EAE508();
  swift_retain_n();
  uint64_t v54 = v53;
  uint64_t v55 = sub_1C1EAE558();
  os_log_type_t v56 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    uint64_t v79 = (void (**)(void, void))v50;
    uint64_t v59 = v58;
    *(void *)&v85[0] = v58;
    *(_DWORD *)uint64_t v57 = 136446210;
    *(void *)&v84[0] = a4;
    type metadata accessor for BaseFeedPopulationManager();
    swift_retain();
    uint64_t v60 = sub_1C1EAED68();
    *(void *)&v84[0] = sub_1C1DF8D44(v60, v61, (uint64_t *)v85);
    sub_1C1EAF2C8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v55, v56, "Ready: %{public}s", v57, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v59, -1, -1);
    MEMORY[0x1C874D2E0](v57, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
  __swift_destroy_boxed_opaque_existential_1(v83);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v54, v82);
  return a4;
}

void sub_1C1DE38AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DE3910(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, void (*a5)(void))
{
  id v30 = a4;
  uint64_t v8 = sub_1C1EAD368();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C1EAE568();
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v32 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE518();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v15 = sub_1C1EAE558();
  os_log_type_t v16 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    id v28 = a5;
    uint64_t v18 = v17;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v34 = v27;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v19 = sub_1C1EAF908();
    uint64_t v33 = sub_1C1DF8D44(v19, v20, &v34);
    uint64_t v29 = a2;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    sub_1C1DF9B3C((unint64_t *)&qword_1EBB66150, MEMORY[0x1E4F27990]);
    uint64_t v21 = sub_1C1EAF768();
    uint64_t v33 = sub_1C1DF8D44(v21, v22, &v34);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    _os_log_impl(&dword_1C1DD2000, v15, v16, v30, (uint8_t *)v18, 0x16u);
    uint64_t v23 = v27;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v23, -1, -1);
    uint64_t v24 = v18;
    a5 = v28;
    MEMORY[0x1C874D2E0](v24, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v32);
  a5(v25);
  id v26 = (id)_HKLogPersistedSignposts();
  sub_1C1EAE498();
}

uint64_t initializeWithCopy for PipelineProviderWrappers(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 16, v5, v7);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = a2 + 72;
  long long v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v11;
  uint64_t v12 = v11;
  uint64_t v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  swift_retain();
  v13(a1 + 72, v10, v12);
  return a1;
}

uint64_t static RelevanceEngineCoordinator.instantiateEngine(engineName:modelVersion:pretrainedModelURL:modelURL:primaryFeatures:feedSections:dataSources:relevanceProviderManagerClasses:metricsRecorder:interactionDescriptors:observerQueue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12)
{
  sub_1C1DFC4E4(0, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v18 - 8);
  unint64_t v20 = (char *)v57 - v19;
  sub_1C1DF9F8C(0, &qword_1EBB67F80);
  id v21 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultConfiguration);
  objc_msgSend(v21, sel_removeAllSections);
  objc_msgSend(v21, sel_removeAllInteractions);
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v57[1] = a2;
  objc_msgSend(v21, sel_setModelVersion_, a3);
  sub_1C1E19BD8(a4, (uint64_t)v20, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0]);
  uint64_t v22 = sub_1C1EAD258();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) != 1)
  {
    uint64_t v24 = (void *)sub_1C1EAD1F8();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
  }
  objc_msgSend(v21, sel_setBaseModelFileURL_, v24);

  objc_msgSend(v21, sel_setWantsImmutableContent_, 1);
  uint64_t v25 = (void *)sub_1C1EAD1F8();
  objc_msgSend(v21, sel_setModelFileURL_, v25);

  objc_msgSend(v21, sel_setPrimaryFeatures_, a6);
  v57[0] = a1;
  if (a7 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C1EAF638();
    uint64_t v26 = result;
    if (!result) {
      goto LABEL_14;
    }
    goto LABEL_6;
  }
  uint64_t v26 = *(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v26) {
    goto LABEL_14;
  }
LABEL_6:
  if (v26 < 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  for (uint64_t i = 0; i != v26; ++i)
  {
    if ((a7 & 0xC000000000000001) != 0) {
      id v29 = (id)MEMORY[0x1C874C6F0](i, a7);
    }
    else {
      id v29 = *(id *)(a7 + 8 * i + 32);
    }
    id v30 = v29;
    objc_msgSend(v21, sel_addSectionWithDescriptor_, v29, v57[0]);
  }
LABEL_14:
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setObserverQueue_, a12);
  v62 = sub_1C1DE101C;
  uint64_t v63 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v59 = 1107296256;
  uint64_t v60 = sub_1C1DE0D08;
  unint64_t v61 = &block_descriptor_15;
  uint64_t v31 = _Block_copy(&aBlock);
  uint64_t v32 = self;
  id v33 = objc_msgSend(v32, sel_dataSourceLoaderWithBlock_, v31);
  _Block_release(v31);
  swift_release();
  sub_1C1DF9F8C(0, &qword_1EBB67F68);
  swift_bridgeObjectRetain();
  uint64_t v34 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(v32, sel_dataSourceLoaderWithDataSources_, v34);

  sub_1C1DFD2C0(0, &qword_1EBB683B8);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1C1EB0800;
  uint64_t v37 = sub_1C1DF9F8C(0, &qword_1EBB67F60);
  *(void *)(v36 + 32) = v35;
  *(void *)(v36 + 88) = v37;
  *(void *)(v36 + 56) = v37;
  *(void *)(v36 + 64) = v33;
  id v38 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
  id v39 = v35;
  id v40 = v33;
  id v41 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v42 = objc_msgSend(v38, sel_initWithArray_, v41);

  id v43 = objc_msgSend(v32, sel_aggregateDataSourceLoaderWithDataSourceLoaders_, v42);
  objc_msgSend(v21, sel_setDataSourceLoader_, v43);

  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = a9;
  v62 = sub_1C1DE1014;
  uint64_t v63 = v44;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v59 = 1107296256;
  uint64_t v60 = sub_1C1DE0D08;
  unint64_t v61 = &block_descriptor_21;
  uint64_t v45 = _Block_copy(&aBlock);
  id v46 = self;
  swift_bridgeObjectRetain();
  id v47 = objc_msgSend(v46, sel_relevanceProviderManagerLoaderWithBlock_, v45);
  _Block_release(v45);
  swift_release();
  objc_msgSend(v21, sel_setRelevanceProviderManagerLoader_, v47);

  if (!(a11 >> 62))
  {
    uint64_t v48 = *(void *)((a11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v48) {
      goto LABEL_16;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setTrainingBehavior_, 0);
    uint64_t v52 = (void *)MEMORY[0x1C874CBD0](objc_msgSend(v21, sel_setMetricsRecorder_, a10));
    id v53 = objc_allocWithZone(MEMORY[0x1E4F94988]);
    swift_bridgeObjectRetain();
    id v54 = v21;
    uint64_t v55 = (void *)sub_1C1EAED28();
    swift_bridgeObjectRelease();
    id v56 = objc_msgSend(v53, sel_initWithName_configuration_, v55, v54);

    return (uint64_t)v56;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C1EAF638();
  uint64_t v48 = result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_16:
  if (v48 >= 1)
  {
    for (uint64_t j = 0; j != v48; ++j)
    {
      if ((a11 & 0xC000000000000001) != 0) {
        id v50 = (id)MEMORY[0x1C874C6F0](j, a11);
      }
      else {
        id v50 = *(id *)(a11 + 8 * j + 32);
      }
      uint64_t v51 = v50;
      objc_msgSend(v21, sel_addInteractionWithDescriptor_, v50, v57[0]);
    }
    goto LABEL_23;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C1DE44C4@<X0>(uint64_t (**a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C1DF8364(a1, *(void *)(v2 + 16), *(uint64_t (***)(void))(v2 + 24));
  *a2 = result;
  return result;
}

uint64_t sub_1C1DE44F0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C1DFC68C(0);
  uint64_t result = sub_1C1DE456C(v2+ ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)), *a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C1DE456C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v61 = a2;
  uint64_t v51 = a1;
  uint64_t v56 = *v2;
  sub_1C1DE4EEC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  uint64_t v58 = v6;
  MEMORY[0x1F4188790](v5);
  id v54 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DE4E00();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  uint64_t v60 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v55 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DE4D00();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v47 = v11;
  uint64_t v48 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFC68C(0);
  v46[1] = v15;
  uint64_t v53 = *(void *)(v15 - 8);
  uint64_t v52 = *(void *)(v53 + 64);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DE4C98(0);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v22 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)v46 - v24;
  uint64_t v49 = v17;
  id v50 = sub_1C1DFC68C;
  sub_1C1DF8AE0(a1, (uint64_t)v17, (uint64_t (*)(void))sub_1C1DFC68C);
  sub_1C1EAE8B8();
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v23, v25, v19);
  unint64_t v26 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v27 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v27 + v26, v23, v19);
  *(void *)(v27 + ((v21 + v26 + 7) & 0xFFFFFFFFFFFFFFF8)) = v61;
  swift_retain();
  sub_1C1EAE7C8();
  sub_1C1E0D080(0);
  uint64_t v29 = v28;
  sub_1C1DE4CCC();
  uint64_t v30 = sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
  sub_1C1EAEB58();
  swift_release();
  sub_1C1DF9B3C(&qword_1EBB64ED8, (void (*)(uint64_t))sub_1C1DE4D00);
  uint64_t v31 = v47;
  uint64_t v32 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v31);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v19);
  uint64_t v33 = v3[23];
  uint64_t v34 = v3[24];
  __swift_project_boxed_opaque_existential_1(v3 + 20, v33);
  uint64_t v62 = v32;
  uint64_t v62 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 32))(&v62, v29, v30, v33, v34);
  swift_allocObject();
  swift_weakInit();
  id v35 = v54;
  sub_1C1EAEA68();
  swift_release();
  swift_release();
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v37 = (uint64_t)v49;
  sub_1C1DF8AE0(v51, (uint64_t)v49, (uint64_t (*)(void))v50);
  unint64_t v38 = (*(unsigned __int8 *)(v53 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  unint64_t v39 = (v52 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v36;
  sub_1C1DF7C54(v37, v40 + v38, (uint64_t (*)(void))sub_1C1DFC68C);
  *(void *)(v40 + v39) = v61;
  *(void *)(v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8)) = v56;
  sub_1C1DF9B3C(&qword_1EBB64DD8, (void (*)(uint64_t))sub_1C1DE4EEC);
  swift_retain();
  id v41 = v55;
  uint64_t v42 = v57;
  sub_1C1EAEA88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v42);
  sub_1C1DF9B3C(&qword_1EBB64E78, (void (*)(uint64_t))sub_1C1DE4E00);
  uint64_t v43 = v59;
  uint64_t v44 = sub_1C1EAEA38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v43);
  return v44;
}

void sub_1C1DE4C98(uint64_t a1)
{
}

uint64_t sub_1C1DE4CCC()
{
  return sub_1C1DF9B3C(&qword_1EBB650C8, sub_1C1DE4C98);
}

void sub_1C1DE4D00()
{
  if (!qword_1EBB64EE0)
  {
    sub_1C1E0D080(255);
    sub_1C1DF9C54(255, &qword_1EBB64D58, (uint64_t (*)(uint64_t))sub_1C1DE4C98, sub_1C1DE4CCC, MEMORY[0x1E4F1A8C0]);
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    sub_1C1E654F4();
    unint64_t v0 = sub_1C1EAE6C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64EE0);
    }
  }
}

void sub_1C1DE4E00()
{
  if (!qword_1EBB64E80)
  {
    sub_1C1DE4EEC();
    sub_1C1E0D080(255);
    sub_1C1DF9B3C(&qword_1EBB64DD8, (void (*)(uint64_t))sub_1C1DE4EEC);
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    unint64_t v0 = sub_1C1EAE678();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64E80);
    }
  }
}

void sub_1C1DE4EEC()
{
  if (!qword_1EBB64DE0)
  {
    sub_1C1E0D080(255);
    sub_1C1DFC68C(255);
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64DE0);
    }
  }
}

uint64_t sub_1C1DE4F9C()
{
  uint64_t v77 = MEMORY[0x1E4FBC860];
  unint64_t v0 = self;
  sub_1C1DFD274(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1EB07E0;
  if (qword_1EBB68138 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EBB6AD30;
  *(void *)(v1 + 32) = qword_1EBB6AD30;
  uint64_t v3 = qword_1EBB680D8;
  id v4 = v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_1EBB6ACE8;
  *(void *)(v1 + 40) = qword_1EBB6ACE8;
  sub_1C1EAEEB8();
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67FA0);
  id v6 = v5;
  uint64_t v7 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v7);

  id v9 = v8;
  MEMORY[0x1C874C090]();
  if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C1EB07E0;
  *(void *)(v10 + 32) = v9;
  uint64_t v11 = qword_1EBB680A8;
  id v76 = v9;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_1EBB6ACB8;
  *(void *)(v10 + 40) = qword_1EBB6ACB8;
  sub_1C1EAEEB8();
  id v13 = v12;
  uint64_t v14 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v14);

  MEMORY[0x1C874C090]();
  if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C1EB07E0;
  uint64_t v17 = (void *)qword_1EBB6AD30;
  *(void *)(v16 + 32) = qword_1EBB6AD30;
  uint64_t v18 = qword_1EBB680C8;
  id v19 = v17;
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v20 = (void *)qword_1EBB6ACD8;
  *(void *)(v16 + 40) = qword_1EBB6ACD8;
  sub_1C1EAEEB8();
  id v21 = v20;
  uint64_t v22 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v22);

  MEMORY[0x1C874C090]();
  if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C1EB07E0;
  uint64_t v25 = (void *)qword_1EBB6AD30;
  *(void *)(v24 + 32) = qword_1EBB6AD30;
  uint64_t v26 = qword_1EBB68108;
  id v27 = v25;
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v28 = (void *)qword_1EBB6AD10;
  *(void *)(v24 + 40) = qword_1EBB6AD10;
  sub_1C1EAEEB8();
  id v29 = v28;
  uint64_t v30 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v30);

  MEMORY[0x1C874C090]();
  if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1C1EB07E0;
  uint64_t v33 = (void *)qword_1EBB6AD30;
  *(void *)(v32 + 32) = qword_1EBB6AD30;
  uint64_t v34 = qword_1EBB68120;
  id v35 = v33;
  if (v34 != -1) {
    swift_once();
  }
  uint64_t v36 = (void *)qword_1EBB6AD20;
  *(void *)(v32 + 40) = qword_1EBB6AD20;
  sub_1C1EAEEB8();
  id v37 = v36;
  unint64_t v38 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v38);

  MEMORY[0x1C874C090]();
  if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1C1EB1B10;
  id v41 = (void *)qword_1EBB6AD30;
  uint64_t v42 = (void *)qword_1EBB6ACD8;
  *(void *)(v40 + 32) = qword_1EBB6AD30;
  *(void *)(v40 + 40) = v42;
  uint64_t v43 = (void *)qword_1EBB6AD10;
  *(void *)(v40 + 48) = qword_1EBB6AD10;
  sub_1C1EAEEB8();
  id v44 = v41;
  id v45 = v42;
  id v46 = v43;
  uint64_t v47 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v47);

  MEMORY[0x1C874C090]();
  if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1C1EB1B10;
  id v50 = (void *)qword_1EBB6AD30;
  uint64_t v51 = (void *)qword_1EBB6AD10;
  *(void *)(v49 + 32) = qword_1EBB6AD30;
  *(void *)(v49 + 40) = v51;
  uint64_t v52 = (void *)qword_1EBB6AD20;
  *(void *)(v49 + 48) = qword_1EBB6AD20;
  sub_1C1EAEEB8();
  id v53 = v50;
  id v54 = v51;
  id v55 = v52;
  uint64_t v56 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v57 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v56);

  MEMORY[0x1C874C090]();
  if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1C1EB1B10;
  uint64_t v59 = (void *)qword_1EBB6AD30;
  uint64_t v60 = (void *)qword_1EBB6AD20;
  *(void *)(v58 + 32) = qword_1EBB6AD30;
  *(void *)(v58 + 40) = v60;
  uint64_t v61 = (void *)qword_1EBB6ACD8;
  *(void *)(v58 + 48) = qword_1EBB6ACD8;
  sub_1C1EAEEB8();
  id v62 = v59;
  id v63 = v60;
  id v64 = v61;
  uint64_t v65 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v66 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v65);

  MEMORY[0x1C874C090]();
  if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();
  uint64_t v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_1C1EB07E0;
  uint64_t v68 = (void *)qword_1EBB6AD30;
  *(void *)(v67 + 32) = qword_1EBB6AD30;
  uint64_t v69 = qword_1EBB680C0;
  id v70 = v68;
  if (v69 != -1) {
    swift_once();
  }
  v71 = (void *)qword_1EBB6ACD0;
  *(void *)(v67 + 40) = qword_1EBB6ACD0;
  sub_1C1EAEEB8();
  id v72 = v71;
  uint64_t v73 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v74 = objc_msgSend(v0, (SEL)&selRef_topElementGroupWithIdentifier_ + 7, v73);

  MEMORY[0x1C874C090]();
  if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();

  return v77;
}

uint64_t sub_1C1DE5928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v93 = a1;
  sub_1C1DE4C98(0);
  v89 = (void (*)(uint64_t))*(v4 - 1);
  id v90 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v86 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF9BC8(0, &qword_1EBB65170, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1ACE0]);
  unint64_t v87 = *(void (**)(uint64_t))(v6 - 8);
  uint64_t v88 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v85 = (char *)&v72 - v7;
  uint64_t v8 = sub_1C1EAE568();
  uint64_t v83 = *(void *)(v8 - 8);
  uint64_t v84 = v8;
  MEMORY[0x1F4188790](v8);
  v92 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFC68C(0);
  uint64_t v11 = v10;
  uint64_t v12 = *((void *)v10 - 1);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v10);
  id v15 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v72 - v16;
  sub_1C1DED0D0();
  uint64_t v76 = v18;
  uint64_t v75 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DE643C();
  uint64_t v79 = v21;
  uint64_t v78 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v77 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DE6510();
  uint64_t v81 = *(void *)(v23 - 8);
  uint64_t v82 = v23;
  MEMORY[0x1F4188790](v23);
  v80 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v26 = Strong;
    uint64_t v73 = v12;
    id v27 = a3;
    uint64_t v28 = (void *)sub_1C1EADA08();
    uint64_t v29 = sub_1C1EAD778();

    id v72 = (void *)v29;
    if (v29)
    {
      v92 = v11;
      id v74 = v27;
      uint64_t v30 = sub_1C1EADA08();
      if (v30)
      {
        id v31 = (void *)v30;
        *(&v72 - 2) = (void *)MEMORY[0x1F4188790](v30);
        sub_1C1DF9F8C(0, &qword_1EBB66FE8);
        swift_retain();
        sub_1C1EAE198();

        swift_release();
        id v32 = (id)v94[0];
      }
      else
      {
        swift_beginAccess();
        id v32 = *(id *)(v26 + 48);
      }
      uint64_t v57 = v73;
      id v90 = v32;
      swift_retain();
      sub_1C1EAE008();
      swift_release();
      v89 = sub_1C1DFC68C;
      sub_1C1DF8AE0(v93, (uint64_t)v17, (uint64_t (*)(void))sub_1C1DFC68C);
      uint64_t v58 = *(unsigned __int8 *)(v57 + 80);
      uint64_t v59 = (uint64_t)v17;
      uint64_t v60 = (v58 + 24) & ~v58;
      uint64_t v86 = (char *)(v60 + v13);
      uint64_t v88 = v58 | 7;
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = v26;
      unint64_t v87 = sub_1C1DFC68C;
      sub_1C1DF7C54(v59, v61 + v60, (uint64_t (*)(void))sub_1C1DFC68C);
      swift_retain();
      sub_1C1EAE7C8();
      sub_1C1E0D080(0);
      uint64_t v85 = v62;
      swift_getOpaqueTypeConformance2();
      sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
      id v63 = v77;
      uint64_t v64 = v76;
      sub_1C1EAEAD8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v20, v64);
      sub_1C1DF8AE0(v93, v59, (uint64_t (*)(void))v89);
      unint64_t v65 = (unint64_t)(v86 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v66 = swift_allocObject();
      uint64_t v67 = v72;
      *(void *)(v66 + 16) = v72;
      sub_1C1DF7C54(v59, v66 + v60, (uint64_t (*)(void))v87);
      *(void *)(v66 + v65) = v91;
      sub_1C1DF9B3C(&qword_1EBB65AD8, (void (*)(uint64_t))sub_1C1DE643C);
      id v68 = v67;
      uint64_t v69 = v80;
      uint64_t v70 = v79;
      sub_1C1EAEA88();
      swift_release();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v63, v70);
      sub_1C1DF9B3C(&qword_1EBB65A98, (void (*)(uint64_t))sub_1C1DE6510);
      uint64_t v71 = v82;
      uint64_t v55 = sub_1C1EAEA38();
      swift_release();

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v69, v71);
      a3 = v74;
      goto LABEL_12;
    }
    swift_release();
    a3 = v27;
  }
  uint64_t v33 = v92;
  sub_1C1EAE4F8();
  sub_1C1DF8AE0(v93, (uint64_t)v15, (uint64_t (*)(void))sub_1C1DFC68C);
  uint64_t v34 = sub_1C1EAE558();
  os_log_type_t v35 = sub_1C1EAF0B8();
  int v36 = v35;
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v37 = swift_slowAlloc();
    id v74 = a3;
    uint64_t v38 = v37;
    uint64_t v82 = swift_slowAlloc();
    v94[0] = v82;
    *(_DWORD *)uint64_t v38 = 136315394;
    LODWORD(v81) = v36;
    uint64_t v39 = sub_1C1EAF908();
    uint64_t v95 = sub_1C1DF8D44(v39, v40, v94);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    id v41 = (void *)sub_1C1EADA08();
    uint64_t v42 = v17;
    uint64_t v43 = sub_1C1EAD798();
    unint64_t v45 = v44;

    uint64_t v46 = v43;
    uint64_t v17 = v42;
    uint64_t v95 = sub_1C1DF8D44(v46, v45, v94);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    sub_1C1DF9030((uint64_t)v15, (uint64_t (*)(void))sub_1C1DFC68C);
    _os_log_impl(&dword_1C1DD2000, v34, (os_log_type_t)v81, "%s Self is deallocated or we're unable to find a profile identifier for profile %s", (uint8_t *)v38, 0x16u);
    uint64_t v47 = v82;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v47, -1, -1);
    uint64_t v48 = v38;
    a3 = v74;
    MEMORY[0x1C874D2E0](v48, -1, -1);

    (*(void (**)(char *, uint64_t))(v83 + 8))(v92, v84);
  }
  else
  {
    sub_1C1DF9030((uint64_t)v15, (uint64_t (*)(void))sub_1C1DFC68C);

    (*(void (**)(char *, uint64_t))(v83 + 8))(v33, v84);
  }
  id v50 = v89;
  id v49 = v90;
  uint64_t v52 = v87;
  uint64_t v51 = v88;
  id v54 = v85;
  id v53 = v86;
  sub_1C1DF8AE0(v93, (uint64_t)v17, (uint64_t (*)(void))sub_1C1DFC68C);
  sub_1C1EAE8B8();
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  sub_1C1EAE888();
  (*((void (**)(char *, id))v50 + 1))(v53, v49);
  sub_1C1E6728C();
  uint64_t v55 = sub_1C1EAEA38();
  uint64_t result = (*((uint64_t (**)(char *, uint64_t))v52 + 1))(v54, v51);
LABEL_12:
  *a3 = v55;
  return result;
}

void sub_1C1DE643C()
{
  if (!qword_1EBB65AE0)
  {
    sub_1C1E0D080(255);
    sub_1C1DED0D0();
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_1C1EAE6C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65AE0);
    }
  }
}

void sub_1C1DE6510()
{
  if (!qword_1EBB65AA0)
  {
    sub_1C1DE643C();
    sub_1C1E0D080(255);
    sub_1C1DF9B3C(&qword_1EBB65AD8, (void (*)(uint64_t))sub_1C1DE643C);
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    unint64_t v0 = sub_1C1EAE678();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65AA0);
    }
  }
}

uint64_t sub_1C1DE65FC()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 88);
}

uint64_t objectdestroy_123Tm()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_1C1DE668C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C1E19B70();
  uint64_t v143 = v4;
  v141 = *(void (***)(os_log_t, uint64_t))(v4 - 8);
  MEMORY[0x1F4188790](v4);
  os_log_t v142 = (os_log_t)((char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v146 = sub_1C1EAE568();
  uint64_t v6 = *(void *)(v146 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v146);
  uint64_t v9 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v130 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  v139 = (char *)&v130 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v140 = (char *)&v130 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v130 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v130 - v20;
  id v22 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  id v23 = objc_msgSend(v22, sel_persistentStores);

  sub_1C1DF9F8C(0, &qword_1EBB68378);
  unint64_t v24 = sub_1C1EAEE98();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    if (v43)
    {
LABEL_3:
      if ((v24 & 0xC000000000000001) != 0)
      {
        id v25 = (id)MEMORY[0x1C874C6F0](0, v24);
      }
      else
      {
        if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_30:
          swift_once();
LABEL_7:
          if (!*((void *)v9 + 2))
          {
            long long v151 = 0u;
            long long v152 = 0u;
            goto LABEL_17;
          }
          uint64_t v29 = qword_1EBB64788;
          uint64_t v30 = qword_1EBB64780;
          swift_bridgeObjectRetain();
          unint64_t v31 = sub_1C1DE7C10(v30, v29);
          if ((v32 & 1) == 0)
          {
            long long v151 = 0u;
            long long v152 = 0u;
            swift_bridgeObjectRelease();
            goto LABEL_17;
          }
          sub_1C1DF8FD4(*((void *)v9 + 7) + 32 * v31, (uint64_t)&v151);
          swift_bridgeObjectRelease();
          if (!*((void *)&v152 + 1))
          {
LABEL_17:
            swift_bridgeObjectRelease();
            sub_1C1E60B10((uint64_t)&v151);
LABEL_18:
            sub_1C1EAE538();
            uint64_t v37 = sub_1C1EAE558();
            os_log_type_t v38 = sub_1C1EAF0B8();
            if (os_log_type_enabled(v37, v38))
            {
              uint64_t v39 = (uint8_t *)swift_slowAlloc();
              uint64_t v40 = swift_slowAlloc();
              *(void *)&long long v151 = v40;
              *(_DWORD *)uint64_t v39 = 136315138;
              uint64_t v41 = sub_1C1EAF908();
              os_log_t v147 = (os_log_t)sub_1C1DF8D44(v41, v42, (uint64_t *)&v151);
              sub_1C1EAF2C8();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1C1DD2000, v37, v38, "[%s] Could not get version or locale from metadata", v39, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1C874D2E0](v40, -1, -1);
              MEMORY[0x1C874D2E0](v39, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v146);
            return;
          }
          if ((swift_dynamicCast() & 1) == 0)
          {
LABEL_21:
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
          v137 = v147;
          unint64_t v138 = v148;
          if (qword_1EBB647A8 == -1)
          {
            if (*((void *)v9 + 2))
            {
LABEL_13:
              uint64_t v33 = qword_1EBB647A0;
              uint64_t v34 = qword_1EBB64798;
              swift_bridgeObjectRetain();
              unint64_t v35 = sub_1C1DE7C10(v34, v33);
              if (v36)
              {
                sub_1C1DF8FD4(*((void *)v9 + 7) + 32 * v35, (uint64_t)&v151);
              }
              else
              {
                long long v151 = 0u;
                long long v152 = 0u;
              }
              swift_bridgeObjectRelease();
LABEL_33:
              swift_bridgeObjectRelease();
              if (*((void *)&v152 + 1))
              {
                if (swift_dynamicCast())
                {
                  unint64_t v50 = v148;
                  v135 = v147;
                  sub_1C1EAE538();
                  swift_bridgeObjectRetain_n();
                  uint64_t v51 = v2;
                  uint64_t v52 = sub_1C1EAE558();
                  os_log_type_t v53 = sub_1C1EAF0D8();
                  int v54 = v53;
                  BOOL v55 = os_log_type_enabled(v52, v53);
                  unint64_t v136 = v50;
                  if (v55)
                  {
                    uint64_t v56 = swift_slowAlloc();
                    os_log_t v134 = v52;
                    uint64_t v57 = v56;
                    os_log_t v133 = (os_log_t)swift_slowAlloc();
                    os_log_t v147 = v133;
                    *(_DWORD *)uint64_t v57 = 136315650;
                    uint64_t v58 = sub_1C1EAF908();
                    LODWORD(v132) = v54;
                    *(void *)&long long v151 = sub_1C1DF8D44(v58, v59, (uint64_t *)&v147);
                    sub_1C1EAF2C8();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v57 + 12) = 2080;
                    unint64_t v60 = v138;
                    swift_bridgeObjectRetain();
                    *(void *)&long long v151 = sub_1C1DF8D44((uint64_t)v137, v60, (uint64_t *)&v147);
                    sub_1C1EAF2C8();
                    swift_bridgeObjectRelease_n();
                    *(_WORD *)(v57 + 22) = 2080;
                    uint64_t v131 = v57 + 24;
                    uint64_t v61 = &v51[OBJC_IVAR____TtC18HealthPlatformCore42HealthExperienceStoreCoreSpotlightDelegate__defaultsVersion];
                    swift_beginAccess();
                    id v62 = v141;
                    os_log_t v63 = v142;
                    uint64_t v64 = v61;
                    uint64_t v65 = v143;
                    ((void (*)(os_log_t, char *, uint64_t))v141[2])(v142, v64, v143);
                    sub_1C1EAD6C8();
                    v62[1](v63, v65);
                    sub_1C1DE7D6C(0, &qword_1EBB67F28);
                    uint64_t v66 = sub_1C1EAED68();
                    *(void *)&long long v151 = sub_1C1DF8D44(v66, v67, (uint64_t *)&v147);
                    unint64_t v50 = v136;
                    sub_1C1EAF2C8();

                    swift_bridgeObjectRelease();
                    os_log_t v68 = v134;
                    _os_log_impl(&dword_1C1DD2000, v134, (os_log_type_t)v132, "[%s] Comparing versions '%s' and '%s'", (uint8_t *)v57, 0x20u);
                    os_log_t v69 = v133;
                    swift_arrayDestroy();
                    MEMORY[0x1C874D2E0](v69, -1, -1);
                    MEMORY[0x1C874D2E0](v57, -1, -1);
                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                  }
                  uint64_t v70 = *(NSObject **)(v6 + 8);
                  ((void (*)(char *, uint64_t))v70)(v21, v146);
                  sub_1C1EAE538();
                  uint64_t v71 = v51;
                  swift_bridgeObjectRetain_n();
                  id v72 = v71;
                  uint64_t v73 = sub_1C1EAE558();
                  os_log_type_t v74 = sub_1C1EAF0D8();
                  int v75 = v74;
                  if (os_log_type_enabled(v73, v74))
                  {
                    uint64_t v76 = swift_slowAlloc();
                    os_log_t v134 = (os_log_t)swift_slowAlloc();
                    os_log_t v147 = v134;
                    *(_DWORD *)uint64_t v76 = 136315650;
                    os_log_t v133 = v73;
                    uint64_t v77 = sub_1C1EAF908();
                    *(void *)&long long v151 = sub_1C1DF8D44(v77, v78, (uint64_t *)&v147);
                    LODWORD(v132) = v75;
                    sub_1C1EAF2C8();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v76 + 12) = 2080;
                    swift_bridgeObjectRetain();
                    *(void *)&long long v151 = sub_1C1DF8D44((uint64_t)v135, v136, (uint64_t *)&v147);
                    sub_1C1EAF2C8();
                    swift_bridgeObjectRelease_n();
                    *(_WORD *)(v76 + 22) = 2080;
                    uint64_t v131 = v76 + 24;
                    uint64_t v79 = &v72[OBJC_IVAR____TtC18HealthPlatformCore42HealthExperienceStoreCoreSpotlightDelegate__defaultsLocale];
                    swift_beginAccess();
                    v80 = v141;
                    os_log_t v81 = v142;
                    uint64_t v82 = v143;
                    ((void (*)(os_log_t, char *, uint64_t))v141[2])(v142, v79, v143);
                    sub_1C1EAD6C8();
                    v80[1](v81, v82);
                    sub_1C1DE7D6C(0, &qword_1EBB67F28);
                    uint64_t v83 = sub_1C1EAED68();
                    *(void *)&long long v151 = sub_1C1DF8D44(v83, v84, (uint64_t *)&v147);
                    sub_1C1EAF2C8();

                    swift_bridgeObjectRelease();
                    os_log_t v85 = v133;
                    _os_log_impl(&dword_1C1DD2000, v133, (os_log_type_t)v132, "[%s] Comparing locales '%s' and '%s'", (uint8_t *)v76, 0x20u);
                    os_log_t v86 = v134;
                    swift_arrayDestroy();
                    MEMORY[0x1C874D2E0](v86, -1, -1);
                    uint64_t v87 = v76;
                    unint64_t v50 = v136;
                    MEMORY[0x1C874D2E0](v87, -1, -1);

                    os_log_t v134 = *(os_log_t *)(v6 + 8);
                    ((void (*)(char *, uint64_t))v134)(v19, v146);
                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                    os_log_t v134 = v70;
                    ((void (*)(char *, uint64_t))v70)(v19, v146);
                    uint64_t v82 = v143;
                    v80 = v141;
                    os_log_t v81 = v142;
                  }
                  v141 = (void (**)(os_log_t, uint64_t))v72;
                  uint64_t v88 = &v72[OBJC_IVAR____TtC18HealthPlatformCore42HealthExperienceStoreCoreSpotlightDelegate__defaultsVersion];
                  swift_beginAccess();
                  v89 = v80[2];
                  os_log_t v133 = v88;
                  ((void (*)(os_log_t, NSObject *, uint64_t))v89)(v81, v88, v82);
                  unint64_t v90 = v138;
                  swift_bridgeObjectRetain();
                  sub_1C1EAD6C8();
                  uint64_t v91 = v82;
                  v92 = v80[1];
                  v92(v81, v91);
                  if (!v148) {
                    goto LABEL_47;
                  }
                  if (v137 == v147 && v148 == v90)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    char v93 = sub_1C1EAF7A8();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v93 & 1) == 0) {
                      goto LABEL_65;
                    }
                  }
                  v94 = (char *)v141
                      + OBJC_IVAR____TtC18HealthPlatformCore42HealthExperienceStoreCoreSpotlightDelegate__defaultsLocale;
                  swift_beginAccess();
                  os_log_t v95 = v142;
                  v96 = v94;
                  uint64_t v97 = v143;
                  ((void (*)(os_log_t, char *, uint64_t))v89)(v142, v96, v143);
                  swift_bridgeObjectRetain();
                  sub_1C1EAD6C8();
                  v92(v95, v97);
                  if (v148)
                  {
                    if (v135 == v147 && v148 == v50)
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      char v98 = sub_1C1EAF7A8();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v98 & 1) == 0) {
                        goto LABEL_65;
                      }
                    }
                    id v99 = objc_msgSend(v144, sel_identifier);
                    if (v99)
                    {
                      v100 = v99;
                      uint64_t v132 = sub_1C1EAED38();
                      uint64_t v102 = v101;
                    }
                    else
                    {
                      uint64_t v132 = 0;
                      uint64_t v102 = 0;
                    }
                    v103 = (char *)v141
                         + OBJC_IVAR____TtC18HealthPlatformCore42HealthExperienceStoreCoreSpotlightDelegate__defaultsStoreIdentifier;
                    swift_beginAccess();
                    os_log_t v104 = v142;
                    v105 = v103;
                    uint64_t v106 = v143;
                    ((void (*)(os_log_t, char *, uint64_t))v89)(v142, v105, v143);
                    sub_1C1EAD6C8();
                    v92(v104, v106);
                    if (v102)
                    {
                      if (v148)
                      {
                        unint64_t v90 = v138;
                        if ((os_log_t)v132 == v147 && v102 == v148)
                        {
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
LABEL_74:
                          swift_bridgeObjectRelease();
                          v123 = v139;
                          sub_1C1EAE538();
                          v124 = sub_1C1EAE558();
                          os_log_type_t v125 = sub_1C1EAF0D8();
                          if (os_log_type_enabled(v124, v125))
                          {
                            v126 = (uint8_t *)swift_slowAlloc();
                            os_log_t v127 = (os_log_t)swift_slowAlloc();
                            os_log_t v147 = v127;
                            *(_DWORD *)v126 = 136315138;
                            uint64_t v128 = sub_1C1EAF908();
                            uint64_t v149 = sub_1C1DF8D44(v128, v129, (uint64_t *)&v147);
                            sub_1C1EAF2C8();
                            swift_bridgeObjectRelease();
                            _os_log_impl(&dword_1C1DD2000, v124, v125, "[%s] Version, locale, and store identifier match up; we don't need to do anything here!",
                              v126,
                              0xCu);
                            swift_arrayDestroy();
                            MEMORY[0x1C874D2E0](v127, -1, -1);
                            MEMORY[0x1C874D2E0](v126, -1, -1);
                          }

                          ((void (*)(char *, uint64_t))v134)(v123, v146);
                          return;
                        }
                        char v122 = sub_1C1EAF7A8();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if (v122)
                        {
LABEL_73:
                          swift_bridgeObjectRelease();
                          goto LABEL_74;
                        }
                        goto LABEL_65;
                      }
                    }
                    else if (!v148)
                    {
                      goto LABEL_73;
                    }
                    swift_bridgeObjectRelease();
                    unint64_t v90 = v138;
                  }
                  else
                  {
LABEL_47:
                    swift_bridgeObjectRelease();
                  }
LABEL_65:
                  sub_1C1E6026C();
                  v107 = v140;
                  sub_1C1EAE538();
                  swift_bridgeObjectRetain_n();
                  swift_bridgeObjectRetain_n();
                  v108 = sub_1C1EAE558();
                  os_log_type_t v109 = sub_1C1EAF0D8();
                  if (os_log_type_enabled(v108, v109))
                  {
                    uint64_t v110 = swift_slowAlloc();
                    os_log_t v142 = (os_log_t)swift_slowAlloc();
                    os_log_t v147 = v142;
                    *(_DWORD *)uint64_t v110 = 136315650;
                    uint64_t v111 = sub_1C1EAF908();
                    uint64_t v149 = sub_1C1DF8D44(v111, v112, (uint64_t *)&v147);
                    sub_1C1EAF2C8();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v110 + 12) = 2080;
                    swift_bridgeObjectRetain();
                    uint64_t v113 = (uint64_t)v137;
                    uint64_t v149 = sub_1C1DF8D44((uint64_t)v137, v138, (uint64_t *)&v147);
                    sub_1C1EAF2C8();
                    swift_bridgeObjectRelease_n();
                    *(_WORD *)(v110 + 22) = 2080;
                    swift_bridgeObjectRetain();
                    uint64_t v114 = (uint64_t)v135;
                    uint64_t v149 = sub_1C1DF8D44((uint64_t)v135, v50, (uint64_t *)&v147);
                    sub_1C1EAF2C8();
                    swift_bridgeObjectRelease_n();
                    _os_log_impl(&dword_1C1DD2000, v108, v109, "[%s] Updating UserDefaults with new version: %s and locale: %s", (uint8_t *)v110, 0x20u);
                    unint64_t v90 = v138;
                    os_log_t v115 = v142;
                    swift_arrayDestroy();
                    MEMORY[0x1C874D2E0](v115, -1, -1);
                    MEMORY[0x1C874D2E0](v110, -1, -1);

                    ((void (*)(char *, uint64_t))v134)(v140, v146);
                    id v116 = v144;
                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease_n();
                    ((void (*)(char *, uint64_t))v134)(v107, v146);
                    id v116 = v144;
                    uint64_t v113 = (uint64_t)v137;
                    uint64_t v114 = (uint64_t)v135;
                  }
                  uint64_t v149 = v113;
                  unint64_t v150 = v90;
                  swift_beginAccess();
                  sub_1C1EAD6D8();
                  swift_endAccess();
                  uint64_t v149 = v114;
                  unint64_t v150 = v50;
                  swift_beginAccess();
                  sub_1C1EAD6D8();
                  swift_endAccess();
                  id v117 = objc_msgSend(v116, sel_identifier);
                  if (v117)
                  {
                    v118 = v117;
                    uint64_t v119 = sub_1C1EAED38();
                    unint64_t v121 = v120;
                  }
                  else
                  {
                    uint64_t v119 = 0;
                    unint64_t v121 = 0;
                  }
                  uint64_t v149 = v119;
                  unint64_t v150 = v121;
                  swift_beginAccess();
                  sub_1C1EAD6D8();
                  swift_endAccess();

                  return;
                }
                goto LABEL_21;
              }
              goto LABEL_17;
            }
          }
          else
          {
            swift_once();
            if (*((void *)v9 + 2)) {
              goto LABEL_13;
            }
          }
          long long v151 = 0u;
          long long v152 = 0u;
          goto LABEL_33;
        }
        id v25 = *(id *)(v24 + 32);
      }
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      id v27 = objc_msgSend(a1, sel_persistentStoreCoordinator);
      id v144 = v26;
      id v28 = objc_msgSend(v27, sel_metadataForPersistentStore_, v26);

      uint64_t v9 = (char *)sub_1C1EAEC38();
      if (qword_1EBB64790 == -1) {
        goto LABEL_7;
      }
      goto LABEL_30;
    }
  }
  else if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  sub_1C1EAE538();
  unint64_t v44 = sub_1C1EAE558();
  os_log_type_t v45 = sub_1C1EAF0B8();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(void *)&long long v151 = v47;
    *(_DWORD *)uint64_t v46 = 136315138;
    uint64_t v48 = sub_1C1EAF908();
    os_log_t v147 = (os_log_t)sub_1C1DF8D44(v48, v49, (uint64_t *)&v151);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v44, v45, "[%s] No persistent store exists", v46, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v47, -1, -1);
    MEMORY[0x1C874D2E0](v46, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v146);
}

unint64_t sub_1C1DE7C10(uint64_t a1, uint64_t a2)
{
  sub_1C1EAF828();
  sub_1C1EAED98();
  uint64_t v4 = sub_1C1EAF858();
  return sub_1C1DE7C88(a1, a2, v4);
}

unint64_t sub_1C1DE7C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C1EAF7A8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C1EAF7A8() & 1) == 0);
    }
  }
  return v6;
}

void sub_1C1DE7D6C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C1EAF2A8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1C1DE7DB4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a3(a1, v6, v7, v8);
}

_OWORD *assignWithTake for ModelTrainingScenario(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t objectdestroy_87Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t objectdestroy_127Tm()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1C1DE7F20()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t GeneratorPipelineManager.__allocating_init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v14 = a4 & 1;
  uint64_t v15 = sub_1C1EAE7C8();
  uint64_t v16 = type metadata accessor for DispatchQueueOrchestrationScheduler();
  swift_allocObject();
  uint64_t v17 = DispatchQueueOrchestrationScheduler.init(environment:maxConcurrentPipelines:maxConcurrentGenerators:)(v14, v15, 3);
  sub_1C1DFE408(a1, (uint64_t)v25);
  sub_1C1DFE408(a5, (uint64_t)v24);
  v23[4] = &protocol witness table for DispatchQueueOrchestrationScheduler;
  v23[3] = v16;
  v22[4] = &protocol witness table for DispatchQueueOrchestrationScheduler;
  v23[0] = v17;
  v22[3] = v16;
  v22[0] = v17;
  uint64_t v18 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t, void *, void *))(v8 + 320);
  swift_retain();
  uint64_t v19 = v18(v25, a2, a3, v14, v24, a6, a7, v23, v22);
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v19;
}

uint64_t type metadata accessor for DispatchQueueOrchestrationScheduler()
{
  return self;
}

void *DispatchQueueOrchestrationScheduler.init(environment:maxConcurrentPipelines:maxConcurrentGenerators:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *v3;
  char v7 = a1 & 1;
  uint64_t v57 = sub_1C1EAEB88();
  os_log_t v68 = *(void **)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1EAF188();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v69 = v9;
  uint64_t v70 = v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v67 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C1EAF148();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C1EAEBD8();
  MEMORY[0x1F4188790](v15 - 8);
  *((unsigned char *)v3 + 16) = v7;
  v3[3] = a2;
  v3[4] = a3;
  uint64_t v16 = v3;
  uint64_t v61 = v6;
  id v62 = v3;
  uint64_t v71 = sub_1C1EAF908();
  unint64_t v72 = v17;
  sub_1C1EAEDB8();
  uint64_t v18 = sub_1C1EAED88();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)MEMORY[0x1C874CC70](v18 + 32);
  swift_release();
  v16[5] = (uint64_t)v19;
  uint64_t v60 = sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68388);
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  id v20 = v19;
  sub_1C1EAF4A8();
  uint64_t v21 = sub_1C1EAF908();
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v71 = v21;
  unint64_t v72 = v23;
  sub_1C1EAEDB8();
  sub_1C1EAEBA8();
  uint64_t v71 = MEMORY[0x1E4FBC860];
  uint64_t v65 = sub_1C1DE9018(&qword_1EBB68380, MEMORY[0x1E4FBCC10]);
  sub_1C1DFA600(0, &qword_1EBB68368, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  uint64_t v25 = v24;
  unint64_t v55 = sub_1C1DE8930();
  id v63 = v20;
  id v52 = v20;
  uint64_t v58 = v25;
  uint64_t v59 = v12;
  sub_1C1EAF328();
  unsigned int v66 = *MEMORY[0x1E4FBCC58];
  uint64_t v26 = v69;
  uint64_t v64 = *(void (**)(char *))(v70 + 104);
  v70 += 104;
  id v27 = v67;
  v64(v67);
  v62[9] = sub_1C1EAF1A8();
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  sub_1C1EAF4A8();
  uint64_t v28 = sub_1C1EAF908();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v71 = v28;
  unint64_t v72 = v30;
  sub_1C1EAEDB8();
  uint64_t v31 = *MEMORY[0x1E4FBCB28];
  char v32 = (void (*)(char *, void, uint64_t))v68[13];
  v68 += 13;
  os_log_type_t v53 = v32;
  v32(v56, v31, v57);
  sub_1C1EAEBC8();
  uint64_t v71 = MEMORY[0x1E4FBC860];
  id v52 = v52;
  int v54 = v14;
  sub_1C1EAF328();
  uint64_t v33 = v27;
  uint64_t v34 = v64;
  ((void (*)(char *, void, uint64_t))v64)(v33, v66, v26);
  v62[8] = sub_1C1EAF1A8();
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  sub_1C1EAF4A8();
  uint64_t v35 = sub_1C1EAF908();
  unint64_t v37 = v36;
  swift_bridgeObjectRelease();
  uint64_t v71 = v35;
  unint64_t v72 = v37;
  sub_1C1EAEDB8();
  v51[1] = v71;
  sub_1C1EAEBB8();
  uint64_t v71 = MEMORY[0x1E4FBC860];
  id v52 = v52;
  sub_1C1EAF328();
  uint64_t v38 = v66;
  ((void (*)(char *, void, uint64_t))v34)(v67, v66, v69);
  uint64_t v39 = sub_1C1EAF1A8();
  uint64_t v40 = v62;
  v62[7] = v39;
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  sub_1C1EAF4A8();
  uint64_t v41 = sub_1C1EAF908();
  unint64_t v43 = v42;
  swift_bridgeObjectRelease();
  uint64_t v71 = v41;
  unint64_t v72 = v43;
  sub_1C1EAEDB8();
  v53(v56, *MEMORY[0x1E4FBCB50], v57);
  sub_1C1EAEBC8();
  uint64_t v71 = MEMORY[0x1E4FBC860];
  os_log_t v68 = v52;
  sub_1C1EAF328();
  unint64_t v44 = v67;
  ((void (*)(char *, uint64_t, uint64_t))v64)(v67, v38, v69);
  v40[6] = sub_1C1EAF1A8();
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  sub_1C1EAF4A8();
  uint64_t v45 = sub_1C1EAF908();
  unint64_t v47 = v46;
  swift_bridgeObjectRelease();
  uint64_t v71 = v45;
  unint64_t v72 = v47;
  sub_1C1EAEDB8();
  sub_1C1EAEBB8();
  uint64_t v71 = MEMORY[0x1E4FBC860];
  uint64_t v48 = v68;
  sub_1C1EAF328();
  ((void (*)(char *, void, uint64_t))v64)(v44, v66, v69);
  uint64_t v49 = sub_1C1EAF1A8();

  v40[10] = v49;
  return v40;
}

unint64_t sub_1C1DE8930()
{
  unint64_t result = qword_1EBB68370;
  if (!qword_1EBB68370)
  {
    sub_1C1E2CDB0(255, &qword_1EBB68368, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB68370);
  }
  return result;
}

id SummaryTabRelevanceEngineCoordinator.init(dataSources:engineName:modelURL:pretrainedModelURL:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = a5;
  uint64_t v45 = a4;
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v41 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_1C1EAE568();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1EAF188();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C1EAF148();
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = sub_1C1EAEBD8();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v38 = OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dispatchQueue;
  uint64_t v36 = sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68388);
  uint64_t v15 = v5;
  sub_1C1EAEB98();
  uint64_t v48 = MEMORY[0x1E4FBC860];
  sub_1C1DE8FD0(&qword_1EBB68380, MEMORY[0x1E4FBCC10]);
  sub_1C1E09A74(0);
  sub_1C1DE8FD0((unint64_t *)&qword_1EBB68370, sub_1C1E09A74);
  sub_1C1EAF328();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCC58], v9);
  *(void *)(v37 + v38) = sub_1C1EAF1A8();
  *(void *)&v15[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___primaryFeatures] = 0;
  *(void *)&v15[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___crossedFeatures] = 0;
  *(void *)&v15[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceProviderManagerClasses] = 0;
  *(void *)&v15[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_modelVersion] = 9;
  *(void *)&v15[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext] = 0;
  *(void *)&v15[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___metricsRecorder] = 0;
  *(void *)&v15[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceEngine] = 0;
  uint64_t v16 = &v15[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_engineName];
  uint64_t v17 = v40;
  *(void *)uint64_t v16 = v39;
  *((void *)v16 + 1) = v17;
  *(void *)&v15[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dataSources] = v41;
  uint64_t v18 = &v15[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_modelPath];
  uint64_t v19 = sub_1C1EAD258();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, v45, v19);
  sub_1C1DD490C(v44, (uint64_t)&v15[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_pretrainedModelURL]);

  sub_1C1EAE508();
  uint64_t v41 = v8;
  uint64_t v21 = sub_1C1EAE558();
  os_log_type_t v22 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v46 = v24;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v48 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v25 = sub_1C1EAED68();
    uint64_t v48 = sub_1C1DF8D44(v25, v26, &v46);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 1024;
    id v27 = objc_msgSend(self, sel_standardUserDefaults);
    sub_1C1EAED38();
    uint64_t v28 = (void *)sub_1C1EAED28();
    swift_bridgeObjectRelease();
    unsigned int v29 = objc_msgSend(v27, sel_BOOLForKey_, v28);

    LODWORD(v48) = v29;
    sub_1C1EAF2C8();
    _os_log_impl(&dword_1C1DD2000, v21, v22, "[%s]: REUserDefaultMLExplanationsEnabled=%{BOOL}d", (uint8_t *)v23, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v24, -1, -1);
    MEMORY[0x1C874D2E0](v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  unint64_t v30 = (objc_class *)type metadata accessor for SummaryTabRelevanceEngineCoordinator();
  v47.receiver = v15;
  v47.super_class = v30;
  id v31 = objc_msgSendSuper2(&v47, sel_init);
  id v32 = sub_1C1E18054();

  sub_1C1DD5EAC(v44);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v45, v19);
  return v31;
}

uint64_t sub_1C1DE8FD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DE9018(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for PipelineProviderWrappers(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 72);
}

void sub_1C1DE90AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1EAD368();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C1EAE568();
  uint64_t v24 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE518();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v11 = sub_1C1EAE558();
  os_log_type_t v12 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = v8;
    uint64_t v14 = v13;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = v21;
    *(_DWORD *)uint64_t v14 = 136446466;
    uint64_t v15 = sub_1C1EAF908();
    uint64_t v25 = sub_1C1DF8D44(v15, v16, &v26);
    uint64_t v23 = a2;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    sub_1C1DEB1C4((unint64_t *)&qword_1EBB66150, MEMORY[0x1E4F27990]);
    uint64_t v17 = sub_1C1EAF768();
    uint64_t v25 = sub_1C1DF8D44(v17, v18, &v26);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1C1DD2000, v11, v12, "[%{public}s] Feed item generation STARTED: %{public}s", (uint8_t *)v14, 0x16u);
    uint64_t v19 = v21;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v19, -1, -1);
    MEMORY[0x1C874D2E0](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v8);
  }
  sub_1C1EAF1D8();
  id v20 = (id)_HKLogPersistedSignposts();
  sub_1C1EAE498();
}

uint64_t sub_1C1DE9440(unint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1C1E17364();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C1EADF78();
  if (result)
  {
    sub_1C1DD775C(a1, sub_1C1E1833C);
    uint64_t v11 = v10;
    uint64_t v12 = swift_allocObject();
    uint64_t v18 = v6;
    uint64_t v19 = v11;
    *(void *)(v12 + 16) = 0;
    uint64_t v13 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E17058(0, &qword_1EBB650A0, MEMORY[0x1E4F1AAE0]);
    sub_1C1E16F38();
    sub_1C1E16FAC(&qword_1EBB65098, &qword_1EBB650A0, v13);
    sub_1C1DEB1C4(&qword_1EBB65118, (void (*)(uint64_t))sub_1C1E16F38);
    sub_1C1EAE748();
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = v14;
    v15[3] = v12;
    v15[4] = v3;
    sub_1C1DEB1C4(&qword_1EBB64FB0, (void (*)(uint64_t))sub_1C1E17364);
    swift_retain();
    uint64_t v16 = sub_1C1EAEA78();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v5);
    swift_beginAccess();
    *(void *)(v12 + 16) = v16;
    swift_release();
    swift_retain();
    sub_1C1EAE368();
    swift_release();
    return swift_release();
  }
  return result;
}

void *sub_1C1DE976C(uint64_t a1)
{
  uint64_t v112 = a1;
  v138[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v115 = *v1;
  uint64_t v122 = sub_1C1EAEBF8();
  uint64_t v121 = *(void *)(v122 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v122);
  uint64_t v119 = (char *)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  unint64_t v120 = (char *)&v107 - v4;
  sub_1C1E17724();
  uint64_t v118 = v5;
  uint64_t v117 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v116 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C1EAE568();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v135 = v7;
  uint64_t v136 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  os_log_type_t v109 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v113 = (char *)&v107 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v111 = (char *)&v107 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v110 = (char *)&v107 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v114 = (char *)&v107 - v17;
  sub_1C1DEB760(0, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v18 - 8);
  id v20 = (char *)&v107 - v19;
  uint64_t v21 = sub_1C1EAD258();
  uint64_t v134 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  os_log_t v133 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C1EAE4C8();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v107 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1C1EAD6A8();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  unint64_t v30 = (char *)&v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAF1D8();
  id v31 = *(void (**)(void))(v28 + 104);
  unsigned int v125 = *MEMORY[0x1E4F67068];
  uint64_t v126 = v28 + 104;
  v124 = (void (*)(char *, void, uint64_t))v31;
  v31(v30);
  id v32 = (void *)sub_1C1EAD698();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  os_log_t v127 = v30;
  uint64_t v128 = v28 + 8;
  uint64_t v129 = v27;
  v123 = v33;
  v33(v30, v27);
  sub_1C1EAE4B8();
  sub_1C1EAE498();

  uint64_t v34 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v130 = v26;
  uint64_t v131 = v24 + 8;
  uint64_t v132 = v23;
  v34(v26, v23);
  sub_1C1EADA68();
  sub_1C1EADA48();
  uint64_t v35 = v134;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v20, 1, v21) == 1)
  {
    uint64_t v36 = v136;
    sub_1C1DD5EAC((uint64_t)v20);
    uint64_t v37 = v113;
    sub_1C1EAE538();
    uint64_t v38 = sub_1C1EAE558();
    os_log_type_t v39 = sub_1C1EAF0C8();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl(&dword_1C1DD2000, v38, v39, "[Contact Photo] Could not access Health app group container directory", v40, 2u);
      MEMORY[0x1C874D2E0](v40, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v135);
    return (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    v107 = v34;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v133, v20, v21);
    id v42 = objc_msgSend(self, sel_defaultManager);
    uint64_t v43 = (void *)sub_1C1EAD1F8();
    v138[0] = 0;
    unsigned int v44 = objc_msgSend(v42, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v43, 1, 0, v138);

    uint64_t v108 = v21;
    uint64_t v45 = v136;
    if (v44)
    {
      id v46 = v138[0];
      uint64_t v47 = v135;
      uint64_t v48 = v112;
    }
    else
    {
      id v49 = v138[0];
      unint64_t v50 = (void *)sub_1C1EAD198();

      swift_willThrow();
      uint64_t v51 = v109;
      sub_1C1EAE4F8();
      id v52 = v50;
      id v53 = v50;
      int v54 = sub_1C1EAE558();
      os_log_type_t v55 = sub_1C1EAF0B8();
      BOOL v56 = os_log_type_enabled(v54, v55);
      uint64_t v47 = v135;
      uint64_t v48 = v112;
      if (v56)
      {
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        uint64_t v58 = (void *)swift_slowAlloc();
        v138[0] = v58;
        *(_DWORD *)uint64_t v57 = 136315138;
        uint64_t v137 = (uint64_t)v50;
        id v59 = v50;
        sub_1C1E15F30();
        uint64_t v60 = sub_1C1EAED78();
        uint64_t v137 = sub_1C1DF8D44(v60, v61, (uint64_t *)v138);
        uint64_t v45 = v136;
        sub_1C1EAF2C8();
        uint64_t v47 = v135;
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C1DD2000, v54, v55, "[Contact Photo] Could not create notificationProfileImageDirectory: %s", v57, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C874D2E0](v58, -1, -1);
        MEMORY[0x1C874D2E0](v57, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v51, v47);
    }
    id v62 = (id)MEMORY[0x1E4FBC860];
    v138[0] = (id)MEMORY[0x1E4FBC860];
    uint64_t v63 = *(void *)(v48 + 16);
    if (v63)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v63; ++i)
      {
        id v65 = *(id *)(v48 + 8 * i + 32);
        unsigned int v66 = (void *)sub_1C1EAD778();
        if (v66)
        {
          unint64_t v67 = v66;
          id v68 = objc_msgSend(v66, sel_type);

          if (v68 == (id)2)
          {
            MEMORY[0x1C874C090]();
            if (*(void *)(((unint64_t)v138[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v138[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C1EAEEE8();
            }
            sub_1C1EAEF18();
            sub_1C1EAEEB8();
          }
          else
          {
          }
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      id v62 = v138[0];
    }
    uint64_t v69 = sub_1C1E16C3C((unint64_t)v62);
    swift_bridgeObjectRelease();
    id v70 = sub_1C1DD708C();
    *(void *)(swift_allocObject() + 16) = v69;
    uint64_t v71 = (char *)sub_1C1EAF258();

    swift_release();
    uint64_t v72 = swift_allocObject();
    uint64_t v73 = swift_bridgeObjectRetain();
    uint64_t v74 = sub_1C1DDB88C(v73);
    swift_bridgeObjectRelease();
    uint64_t v113 = (char *)v72;
    *(void *)(v72 + 16) = v74;
    uint64_t v112 = v72 + 16;
    int v75 = dispatch_group_create();
    dispatch_group_enter(v75);
    uint64_t v76 = v114;
    sub_1C1EAE4F8();
    uint64_t v77 = sub_1C1EAE558();
    os_log_type_t v78 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      v80 = (void *)swift_slowAlloc();
      v138[0] = v80;
      *(_DWORD *)uint64_t v79 = 136315138;
      uint64_t v137 = sub_1C1DF8D44(0xD000000000000020, 0x80000001C1EB6910, (uint64_t *)v138);
      sub_1C1EAF2C8();
      _os_log_impl(&dword_1C1DD2000, v77, v78, "[Contact Photo] Setting up %s", v79, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v80, -1, -1);
      MEMORY[0x1C874D2E0](v79, -1, -1);
    }

    os_log_type_t v109 = *(char **)(v136 + 8);
    ((void (*)(char *, uint64_t))v109)(v76, v47);
    uint64_t v114 = v71;
    v138[0] = v71;
    *(void *)(swift_allocObject() + 16) = v115;
    sub_1C1EAE7C8();
    sub_1C1E17104();
    sub_1C1E16AC0();
    os_log_t v81 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E15EB8(0, &qword_1EBB65948, MEMORY[0x1E4F1AAE0]);
    sub_1C1DEB1C4(&qword_1EBB65920, (void (*)(uint64_t))sub_1C1E17104);
    sub_1C1E170C0((unint64_t *)&unk_1EBB65938, &qword_1EBB65948, v81);
    uint64_t v82 = v116;
    sub_1C1EAEAD8();
    swift_release();
    *(void *)(swift_allocObject() + 16) = v75;
    uint64_t v83 = swift_allocObject();
    unint64_t v84 = v113;
    *(void *)(v83 + 16) = sub_1C1E937A4;
    *(void *)(v83 + 24) = v84;
    sub_1C1DEB1C4(&qword_1EBB65878, (void (*)(uint64_t))sub_1C1E17724);
    os_log_t v85 = v75;
    swift_retain();
    uint64_t v86 = v118;
    sub_1C1EAEA78();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v82, v86);
    swift_retain();
    sub_1C1EAE368();
    uint64_t v87 = v119;
    sub_1C1EAEBE8();
    uint64_t v88 = v120;
    MEMORY[0x1C874BE20](v87, 10.0);
    v89 = *(void (**)(char *, uint64_t))(v121 + 8);
    uint64_t v90 = v122;
    v89(v87, v122);
    LOBYTE(v87) = sub_1C1EAF128();
    v89(v88, v90);
    if (v87)
    {
      uint64_t v97 = v110;
      sub_1C1EAE4F8();
      swift_retain();
      char v98 = sub_1C1EAE558();
      os_log_type_t v99 = sub_1C1EAF0B8();
      if (os_log_type_enabled(v98, v99))
      {
        v100 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v100 = 134283521;
        v138[0] = (id)10;
        sub_1C1EAF2C8();
        swift_release();
        _os_log_impl(&dword_1C1DD2000, v98, v99, "[Contact Photo] Operation timed out after %{private}ld seconds", v100, 0xCu);
        MEMORY[0x1C874D2E0](v100, -1, -1);
      }
      else
      {

        swift_release();
      }
      uint64_t v96 = v108;
      ((void (*)(char *, uint64_t))v109)(v97, v135);
    }
    else
    {
      uint64_t v91 = v111;
      sub_1C1EAE4F8();
      v92 = sub_1C1EAE558();
      os_log_type_t v93 = sub_1C1EAF0D8();
      if (os_log_type_enabled(v92, v93))
      {
        v94 = (uint8_t *)swift_slowAlloc();
        os_log_t v95 = (void *)swift_slowAlloc();
        v138[0] = v95;
        *(_DWORD *)v94 = 136315138;
        uint64_t v137 = sub_1C1DF8D44(0xD000000000000020, 0x80000001C1EB6910, (uint64_t *)v138);
        sub_1C1EAF2C8();
        _os_log_impl(&dword_1C1DD2000, v92, v93, "[Contact Photo] Finished %s", v94, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C874D2E0](v95, -1, -1);
        MEMORY[0x1C874D2E0](v94, -1, -1);
      }

      ((void (*)(char *, uint64_t))v109)(v91, v135);
      uint64_t v96 = v108;
    }
    sub_1C1EAE378();
    swift_release();
    swift_release();
    sub_1C1EAF1C8();
    uint64_t v101 = v127;
    uint64_t v102 = v129;
    v124(v127, v125, v129);
    v103 = (void *)sub_1C1EAD698();
    v123(v101, v102);
    os_log_t v104 = v130;
    sub_1C1EAE4B8();
    sub_1C1EAE498();

    v107(v104, v132);
    swift_beginAccess();
    uint64_t v105 = swift_bridgeObjectRetain();
    uint64_t v41 = sub_1C1DD675C(v105);
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v134 + 8))(v133, v96);
    swift_release();
  }
  return v41;
}

uint64_t sub_1C1DEA940(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v71 = *v1;
  sub_1C1DEB938();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v77 = v4;
  uint64_t v78 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v76 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DEBA40();
  uint64_t v72 = v7;
  uint64_t v74 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v86 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DEBB48(0, &qword_1EBB657B8, (uint64_t (*)(uint64_t))sub_1C1DEBA40, sub_1C1DEBB14, MEMORY[0x1E4F67510]);
  uint64_t v73 = v9;
  uint64_t v75 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v70 = (char *)&v56 - v10;
  uint64_t v11 = sub_1C1EAE4C8();
  uint64_t v83 = *(void *)(v11 - 8);
  uint64_t v84 = v11;
  uint64_t v63 = *(void *)(v83 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v69 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  os_log_t v81 = (char *)&v56 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v56 - v16;
  uint64_t v80 = sub_1C1EAD368();
  uint64_t v85 = *(void *)(v80 - 8);
  uint64_t v18 = *(void *)(v85 + 64);
  uint64_t v19 = MEMORY[0x1F4188790](v80);
  unsigned int v66 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v79 = (char *)&v56 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v56 - v22;
  uint64_t v87 = (char *)&v56 - v22;
  sub_1C1EAD358();
  id v24 = (id)_HKLogPersistedSignposts();
  _HKLogSignpostIDGenerate();

  uint64_t v82 = v17;
  sub_1C1EAE4D8();
  int v64 = *((unsigned __int8 *)v2 + 40);
  uint64_t v88 = sub_1C1E09F04(a1);
  sub_1C1DEB82C(0, &qword_1EBB65020, (unint64_t *)&qword_1EBB678D0, (uint64_t (*)(uint64_t))sub_1C1E1A804, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
  uint64_t v67 = v25;
  sub_1C1DEB760(0, (unint64_t *)&qword_1EBB678D0, (uint64_t (*)(uint64_t))sub_1C1E1A804, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
  uint64_t v65 = v26;
  unint64_t v68 = sub_1C1DEB8A8();
  sub_1C1EAEA68();
  swift_release();
  uint64_t v62 = v2[19];
  uint64_t v27 = v85;
  unint64_t v61 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  uint64_t v28 = v80;
  v61(v79, v23, v80);
  uint64_t v29 = v83;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
  uint64_t v30 = v84;
  v60(v81, v17, v84);
  uint64_t v31 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v32 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v33 = v18 + v32 + ((v31 + 16) & ~v31);
  uint64_t v34 = (v31 + 16) & ~v31;
  uint64_t v59 = v34;
  uint64_t v35 = v33 & ~v32;
  v63 += v35;
  uint64_t v57 = v35;
  uint64_t v58 = v31 | v32 | 7;
  unint64_t v36 = (v63 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = swift_allocObject();
  BOOL v56 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
  v56(v37 + v34, v79, v28);
  uint64_t v38 = v37 + v35;
  uint64_t v79 = *(char **)(v29 + 32);
  uint64_t v39 = v30;
  ((void (*)(uint64_t, char *, uint64_t))v79)(v38, v81, v30);
  uint64_t v40 = v71;
  *(void *)(v37 + v36) = v71;
  uint64_t v41 = v66;
  v61(v66, v87, v28);
  id v42 = v69;
  v60(v69, v82, v39);
  uint64_t v43 = v63;
  uint64_t v44 = swift_allocObject();
  v56(v44 + v59, v41, v28);
  uint64_t v45 = v42;
  uint64_t v46 = v84;
  ((void (*)(uint64_t, char *, uint64_t))v79)(v44 + v57, v45, v84);
  *(unsigned char *)(v44 + v43) = v64;
  *(void *)((v43 & 0xFFFFFFFFFFFFFFF8) + v44 + 8) = v40;
  sub_1C1DEBB14();
  uint64_t v47 = v70;
  uint64_t v48 = v72;
  id v49 = v86;
  sub_1C1EAE908();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v49, v48);
  sub_1C1EAE7C8();
  sub_1C1DEBBC8();
  unint64_t v50 = v76;
  uint64_t v51 = v73;
  sub_1C1EAEAD8();
  sub_1C1DEB1C4((unint64_t *)&unk_1EBB65830, (void (*)(uint64_t))sub_1C1DEB938);
  uint64_t v52 = v77;
  uint64_t v53 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v50, v52);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v47, v51);
  uint64_t v88 = v53;
  uint64_t v54 = sub_1C1EAEA38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v46);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v87, v80);
  return v54;
}

uint64_t sub_1C1DEB1C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DEB20C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void (*a3)(unint64_t, uint64_t)@<X2>, void (*a4)(unint64_t, uint64_t)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = v6;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1C1DF6BD0(a1);
  LOBYTE(a1) = v15;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v11;
    uint64_t v29 = *v11;
    *uint64_t v11 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a5();
      uint64_t v17 = v29;
    }
    uint64_t v18 = *(void *)(v17 + 48);
    uint64_t v19 = sub_1C1EAD368();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v14, v19);
    uint64_t v20 = *(void *)(v17 + 56);
    uint64_t v21 = a2(0);
    uint64_t v28 = *(void *)(v21 - 8);
    a3(v20 + *(void *)(v28 + 72) * v14, a6);
    a4(v14, v17);
    *uint64_t v11 = v17;
    swift_bridgeObjectRelease();
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v23 = a6;
    uint64_t v24 = 0;
    uint64_t v25 = v21;
  }
  else
  {
    uint64_t v26 = a2(0);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    uint64_t v25 = v26;
    uint64_t v23 = a6;
    uint64_t v24 = 1;
  }
  return v22(v23, v24, 1, v25);
}

unint64_t sub_1C1DEB3F8(int64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v6 = sub_1C1EAD368();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t result = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    uint64_t v43 = a2 + 64;
    unint64_t result = sub_1C1EAF338();
    uint64_t v14 = v43;
    if ((*(void *)(v43 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v40 = (result + 1) & v13;
      uint64_t v41 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      uint64_t v42 = v7 + 16;
      char v15 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
      uint64_t v16 = *(void *)(v7 + 72);
      uint64_t v17 = v13;
      do
      {
        uint64_t v18 = v16;
        int64_t v19 = v16 * v12;
        uint64_t v20 = v17;
        v41(v10, *(void *)(a2 + 48) + v16 * v12, v6);
        sub_1C1DEB1C4(&qword_1EBB68168, MEMORY[0x1E4F27990]);
        uint64_t v21 = sub_1C1EAECB8();
        unint64_t result = (*v15)(v10, v6);
        uint64_t v17 = v20;
        unint64_t v22 = v21 & v20;
        if (a1 >= (uint64_t)v40)
        {
          if (v22 >= v40 && a1 >= (uint64_t)v22)
          {
LABEL_16:
            uint64_t v16 = v18;
            if (v18 * a1 < v19
              || *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            sub_1C1DEB760(0, v38, v39, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
            uint64_t v27 = *(void *)(*(void *)(v26 - 8) + 72);
            int64_t v28 = v27 * a1;
            unint64_t result = v25 + v27 * a1;
            int64_t v29 = v27 * v12;
            unint64_t v30 = v25 + v27 * v12 + v27;
            if (v28 < v29 || result >= v30)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v17 = v20;
            }
            else
            {
              a1 = v12;
              uint64_t v17 = v20;
              if (v28 != v29)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                uint64_t v17 = v20;
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v22 >= v40 || a1 >= (uint64_t)v22)
        {
          goto LABEL_16;
        }
        uint64_t v16 = v18;
LABEL_5:
        unint64_t v12 = (v12 + 1) & v17;
        uint64_t v14 = v43;
      }
      while (((*(void *)(v43 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    uint64_t v32 = (uint64_t *)(v14 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v33 = *v32;
    uint64_t v34 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v32 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v34 = *v32;
    uint64_t v33 = (-1 << a1) - 1;
  }
  *uint64_t v32 = v34 & v33;
  uint64_t v35 = *(void *)(a2 + 16);
  BOOL v36 = __OFSUB__(v35, 1);
  uint64_t v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1C1DEB760(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C1DEB7C4(int64_t a1, uint64_t a2)
{
  return sub_1C1DEB3F8(a1, a2, &qword_1EBB678A0, (uint64_t (*)(uint64_t))sub_1C1DFD354);
}

void *sub_1C1DEB7E4()
{
  return sub_1C1DFBBC4((uint64_t (*)(void))sub_1C1DF7CD4, &qword_1EBB67D98, sub_1C1DF7CD4, (uint64_t (*)(void))sub_1C1DF7CD4);
}

void sub_1C1DEB82C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C1DEB760(255, a3, a4, a5);
    sub_1C1E15F30();
    unint64_t v6 = sub_1C1EAE7D8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1C1DEB8A8()
{
  unint64_t result = qword_1EBB65018;
  if (!qword_1EBB65018)
  {
    sub_1C1DEB82C(255, &qword_1EBB65020, (unint64_t *)&qword_1EBB678D0, (uint64_t (*)(uint64_t))sub_1C1E1A804, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65018);
  }
  return result;
}

void sub_1C1DEB938()
{
  if (!qword_1EBB65840)
  {
    sub_1C1DEB82C(255, &qword_1EBB65020, (unint64_t *)&qword_1EBB678D0, (uint64_t (*)(uint64_t))sub_1C1E1A804, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
    sub_1C1DEBB48(255, &qword_1EBB657B8, (uint64_t (*)(uint64_t))sub_1C1DEBA40, sub_1C1DEBB14, MEMORY[0x1E4F67510]);
    sub_1C1DEB8A8();
    sub_1C1DEBBC8();
    unint64_t v0 = sub_1C1EAE6C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65840);
    }
  }
}

void sub_1C1DEBA40()
{
  if (!qword_1EBB64DD0)
  {
    sub_1C1DEB82C(255, &qword_1EBB65020, (unint64_t *)&qword_1EBB678D0, (uint64_t (*)(uint64_t))sub_1C1E1A804, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
    sub_1C1DEB760(255, (unint64_t *)&qword_1EBB678D0, (uint64_t (*)(uint64_t))sub_1C1E1A804, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
    sub_1C1DEB8A8();
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64DD0);
    }
  }
}

uint64_t sub_1C1DEBB14()
{
  return sub_1C1DEB1C4((unint64_t *)&unk_1EBB64DC0, (void (*)(uint64_t))sub_1C1DEBA40);
}

void sub_1C1DEBB48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

unint64_t sub_1C1DEBBC8()
{
  unint64_t result = qword_1EBB657A8;
  if (!qword_1EBB657A8)
  {
    sub_1C1DEBB48(255, &qword_1EBB657B8, (uint64_t (*)(uint64_t))sub_1C1DEBA40, sub_1C1DEBB14, MEMORY[0x1E4F67510]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB657A8);
  }
  return result;
}

uint64_t HealthExperienceStoreFeedItemContext.__deallocating_deinit()
{
  HealthExperienceStoreFeedItemContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t HealthExperienceStoreFeedItemContext.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_boundingRange;
  uint64_t v2 = sub_1C1EAD0E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_feedItemStorage;
  uint64_t v4 = sub_1C1EADE98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_queueProvider);
  return v0;
}

id sub_1C1DEBDC4()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 16);
  return v2;
}

void *assignWithCopy for ModelTrainingScenario(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1DEBE74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + 24;
  swift_beginAccess();
  return sub_1C1DFE408(v3, a1);
}

void *_s18HealthPlatformCore21ModelTrainingScenarioVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C1DEBEFC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C1DEBF2C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C1DEBF2C(void *a1)
{
  sub_1C1DF9BC8(0, &qword_1EBB65B08, (uint64_t (*)(uint64_t))sub_1C1DED3D4, MEMORY[0x1E4F1AC18]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v37 - v5;
  sub_1C1DED2A0();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DED16C();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v43 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF9C54(0, &qword_1EBB65A70, (uint64_t (*)(uint64_t))sub_1C1DED16C, sub_1C1DED26C, MEMORY[0x1E4F1A8C0]);
  uint64_t v15 = v14;
  uint64_t v46 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v42 = (char *)&v37 - v16;
  sub_1C1DED0D0();
  uint64_t v47 = v17;
  uint64_t v41 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  int64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v21 = Strong;
    uint64_t v39 = v12;
    uint64_t v40 = v11;
    uint64_t v38 = v15;
    if (a1)
    {
      MEMORY[0x1F4188790](Strong);
      *(&v37 - 2) = a1;
      sub_1C1DF9F8C(0, &qword_1EBB66FE8);
      swift_retain();
      id v22 = a1;
      sub_1C1EAE198();
      swift_release();

      id v23 = v49;
    }
    else
    {
      swift_beginAccess();
      id v23 = *(id *)(v21 + 48);
      id v22 = 0;
    }
    id v37 = v23;
    swift_retain();
    sub_1C1EAE008();
    swift_release();
    uint64_t v25 = *(void *)(v21 + 184);
    uint64_t v26 = *(void *)(v21 + 192);
    __swift_project_boxed_opaque_existential_1((void *)(v21 + 160), v25);
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 24);
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v48 = v27(v19, v47, OpaqueTypeConformance2, v25, v26);
    *(void *)(swift_allocObject() + 16) = a1;
    sub_1C1DF9BC8(0, &qword_1EBB653F8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AAE0]);
    sub_1C1DED3D4();
    sub_1C1DEE7AC();
    id v29 = v22;
    sub_1C1EAEA68();
    swift_release();
    swift_release();
    *(void *)(swift_allocObject() + 16) = a1;
    sub_1C1DED138(0);
    sub_1C1DF9B3C((unint64_t *)&qword_1EBB65A78, (void (*)(uint64_t))sub_1C1DED2A0);
    sub_1C1DF9B3C((unint64_t *)&qword_1EBB65AF8, sub_1C1DED138);
    id v30 = v29;
    uint64_t v31 = v43;
    uint64_t v32 = v45;
    sub_1C1EAEA88();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v32);
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    sub_1C1DED26C();
    uint64_t v33 = v42;
    uint64_t v34 = v40;
    sub_1C1EAEB38();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v34);
    sub_1C1DED34C();
    uint64_t v35 = v38;
    uint64_t v24 = sub_1C1EAEA38();
    swift_release();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v35);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v19, v47);
  }
  else
  {
    sub_1C1DED3D4();
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    sub_1C1EAE8C8();
    sub_1C1E4B9E8();
    uint64_t v24 = sub_1C1EAEA38();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v24;
}

uint64_t sub_1C1DEC698(void *a1)
{
  sub_1C1DF9BC8(0, &qword_1EBB65B08, (uint64_t (*)(uint64_t))sub_1C1DED3D4, MEMORY[0x1E4F1AC18]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v37 - v5;
  sub_1C1DED2A0();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DED16C();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v43 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF9C54(0, &qword_1EBB65A70, (uint64_t (*)(uint64_t))sub_1C1DED16C, sub_1C1DED26C, MEMORY[0x1E4F1A8C0]);
  uint64_t v15 = v14;
  uint64_t v46 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v42 = (char *)&v37 - v16;
  sub_1C1DED0D0();
  uint64_t v47 = v17;
  uint64_t v41 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  int64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v21 = Strong;
    uint64_t v39 = v12;
    uint64_t v40 = v11;
    uint64_t v38 = v15;
    if (a1)
    {
      MEMORY[0x1F4188790](Strong);
      *(&v37 - 2) = a1;
      sub_1C1DF9F8C(0, &qword_1EBB66FE8);
      swift_retain();
      id v22 = a1;
      sub_1C1EAE198();
      swift_release();

      id v23 = v49;
    }
    else
    {
      swift_beginAccess();
      id v23 = *(id *)(v21 + 48);
      id v22 = 0;
    }
    id v37 = v23;
    swift_retain();
    sub_1C1EAE008();
    swift_release();
    uint64_t v25 = *(void *)(v21 + 184);
    uint64_t v26 = *(void *)(v21 + 192);
    __swift_project_boxed_opaque_existential_1((void *)(v21 + 160), v25);
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 24);
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v48 = v27(v19, v47, OpaqueTypeConformance2, v25, v26);
    *(void *)(swift_allocObject() + 16) = a1;
    sub_1C1DF9BC8(0, &qword_1EBB653F8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AAE0]);
    sub_1C1DED3D4();
    sub_1C1DEE7AC();
    id v29 = v22;
    sub_1C1EAEA68();
    swift_release();
    swift_release();
    *(void *)(swift_allocObject() + 16) = a1;
    sub_1C1DED138(0);
    sub_1C1DF9B3C((unint64_t *)&qword_1EBB65A78, (void (*)(uint64_t))sub_1C1DED2A0);
    sub_1C1DF9B3C((unint64_t *)&qword_1EBB65AF8, sub_1C1DED138);
    id v30 = v29;
    uint64_t v31 = v43;
    uint64_t v32 = v45;
    sub_1C1EAEA88();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v32);
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    sub_1C1DED26C();
    uint64_t v33 = v42;
    uint64_t v34 = v40;
    sub_1C1EAEB38();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v34);
    sub_1C1DED34C();
    uint64_t v35 = v38;
    uint64_t v24 = sub_1C1EAEA38();
    swift_release();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v35);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v19, v47);
  }
  else
  {
    sub_1C1DED3D4();
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    sub_1C1EAE8C8();
    sub_1C1E4B9E8();
    uint64_t v24 = sub_1C1EAEA38();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v24;
}

uint64_t sub_1C1DECE04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DECE4C()
{
  return sub_1C1DED0CC();
}

uint64_t sub_1C1DECE70(uint64_t a1, void *a2, void *a3)
{
  sub_1C1DFA600(0, &qword_1EBB67F50, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v20 - v7;
  uint64_t v9 = (void *)sub_1C1DF9F8C(255, (unint64_t *)&qword_1EBB68388);
  uint64_t v10 = (void *)sub_1C1DFAEA0((unint64_t *)&qword_1EBB67F58, (unint64_t *)&qword_1EBB68388);
  v20[0] = a2;
  v20[1] = v9;
  v20[2] = a3;
  v20[3] = v10;
  uint64_t v11 = sub_1C1EAE768();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v20 - v13;
  uint64_t v15 = *(void **)(v3 + 64);
  v20[0] = v15;
  uint64_t v16 = sub_1C1EAF158();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  id v17 = v15;
  sub_1C1EAEAE8();
  sub_1C1DFAEE4((uint64_t)v8);

  swift_getWitnessTable();
  uint64_t v18 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v18;
}

void sub_1C1DED0D0()
{
  if (!qword_1EBB65A58)
  {
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EBB65A58);
    }
  }
}

void sub_1C1DED138(uint64_t a1)
{
}

void sub_1C1DED16C()
{
  if (!qword_1EBB65A90)
  {
    sub_1C1E4A2EC(255, (unint64_t *)&qword_1EBB65A80, sub_1C1E4B7E8, (void (*)(uint64_t))sub_1C1DED3D4, (void (*)(void))sub_1C1DEE7AC);
    sub_1C1DFA59C(255, &qword_1EBB65B00, (uint64_t (*)(uint64_t))sub_1C1DED3D4, MEMORY[0x1E4F1AC08]);
    sub_1C1E4B81C();
    sub_1C1E4B8B8();
    unint64_t v0 = sub_1C1EAE678();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65A90);
    }
  }
}

uint64_t sub_1C1DED26C()
{
  return sub_1C1DECE04(&qword_1EBB65A88, (void (*)(uint64_t))sub_1C1DED16C);
}

void sub_1C1DED2A0()
{
  if (!qword_1EBB65A80)
  {
    sub_1C1DF9BC8(255, &qword_1EBB653F8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AAE0]);
    sub_1C1DED3D4();
    sub_1C1DEE7AC();
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65A80);
    }
  }
}

unint64_t sub_1C1DED34C()
{
  unint64_t result = qword_1EBB65A68;
  if (!qword_1EBB65A68)
  {
    sub_1C1E4B940(255, &qword_1EBB65A70, (void (*)(uint64_t))sub_1C1DED16C, (void (*)(void))sub_1C1DED26C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65A68);
  }
  return result;
}

void sub_1C1DED3D4()
{
  if (!qword_1EBB65A50)
  {
    sub_1C1DFA59C(255, &qword_1EBB65A60, MEMORY[0x1E4F674B0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB65A50);
    }
  }
}

uint64_t sub_1C1DED46C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C1DE4C98(0);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t result = sub_1C1DED50C(a1, v2 + v6, *(void *)(v2 + ((*(void *)(*(void *)(v5 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
  *a2 = result;
  return result;
}

uint64_t sub_1C1DED50C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a2;
  sub_1C1DEEB4C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF7678(0, &qword_1EBB65428, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AC08]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v27 - v12;
  sub_1C1DF9BC8(0, &qword_1EBB654D8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1ACE0]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v27 - v17;
  uint64_t v38 = a3;
  sub_1C1EAE0B8();
  swift_retain();
  sub_1C1EAE8B8();
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  sub_1C1EAE888();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1C1E14EC0();
  uint64_t v19 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v20 = *a1;
  __swift_project_boxed_opaque_existential_1(a1 + 1, a1[4]);
  uint64_t v21 = sub_1C1EAD5B8();
  uint64_t v32 = v19;
  uint64_t v33 = v21;
  uint64_t v34 = v22;
  uint64_t v35 = a1;
  uint64_t v36 = v28;
  uint64_t v37 = a3;
  uint64_t v23 = sub_1C1DED93C((void (*)(uint64_t *__return_ptr, uint64_t))sub_1C1DEDA84, (uint64_t)v31, v20);
  swift_bridgeObjectRelease();
  uint64_t v38 = v23;
  sub_1C1E0D080(0);
  sub_1C1DEEB18(0);
  sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
  sub_1C1DF9B3C(&qword_1EBB650F8, sub_1C1DEEB18);
  sub_1C1EAE748();
  sub_1C1DF9B3C(&qword_1EBB64F88, (void (*)(uint64_t))sub_1C1DEEB4C);
  uint64_t v24 = v29;
  uint64_t v25 = sub_1C1EAEA38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v24);
  return v25;
}

uint64_t sub_1C1DED93C(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1C1EAF548();
    uint64_t v9 = *(void *)(sub_1C1EADF18() - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_1C1EAF518();
      sub_1C1EAF558();
      sub_1C1EAF568();
      sub_1C1EAF528();
      v10 += v11;
      if (!--v6) {
        return v13;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1DEDA84@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C1DEDAC8(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C1DEDAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v56 = a7;
  uint64_t v58 = a6;
  uint64_t v73 = a2;
  uint64_t v74 = a5;
  uint64_t v71 = a3;
  uint64_t v72 = a4;
  sub_1C1DF9BC8(0, &qword_1EBB650E8, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1AC18]);
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v57 = (char *)&v54 - v9;
  sub_1C1DEE9C0();
  uint64_t v62 = *(void *)(v10 - 8);
  uint64_t v63 = v10;
  MEMORY[0x1F4188790](v10);
  unint64_t v61 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DEEA6C();
  uint64_t v65 = *(void *)(v12 - 8);
  uint64_t v66 = v12;
  MEMORY[0x1F4188790](v12);
  int v64 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DEE914();
  uint64_t v67 = *(void *)(v14 - 8);
  uint64_t v68 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFC68C(0);
  uint64_t v75 = v17;
  uint64_t v70 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v70 + 64);
  MEMORY[0x1F4188790](v17);
  sub_1C1DEE868();
  uint64_t v20 = v19;
  uint64_t v69 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C1EADF18();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v26, a1, v23);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v26, v23);
  if (v27 == *MEMORY[0x1E4F67410])
  {
    (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
    uint64_t v76 = v73;
    uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1DF9BC8(0, &qword_1EBB653F8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AAE0]);
    sub_1C1DEE7AC();
    uint64_t v29 = sub_1C1EAE9C8();
    swift_bridgeObjectRelease();
    uint64_t v76 = v29;
    sub_1C1DF8AE0(v74, (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_1C1DFC68C);
    unint64_t v30 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    uint64_t v31 = swift_allocObject();
    sub_1C1DF7C54((uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v31 + v30, (uint64_t (*)(void))sub_1C1DFC68C);
    sub_1C1DF9BC8(0, &qword_1EBB67D08, (uint64_t (*)(uint64_t))sub_1C1E65C28, v28);
    sub_1C1DEE7E0();
    sub_1C1EAEA68();
    swift_release();
    swift_release();
    sub_1C1DF9B3C(&qword_1EBB64E18, (void (*)(uint64_t))sub_1C1DEE868);
    uint64_t v32 = sub_1C1EAEA38();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v22, v20);
    return v32;
  }
  uint64_t v33 = v73;
  uint64_t v55 = v20;
  uint64_t v34 = v74;
  if (v27 == *MEMORY[0x1E4F673E8])
  {
    (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
    uint64_t v76 = v33;
    uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1DF9BC8(0, &qword_1EBB653F8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AAE0]);
    sub_1C1DEE7AC();
    uint64_t v36 = sub_1C1EAE9C8();
    swift_bridgeObjectRelease();
    uint64_t v76 = v36;
    sub_1C1DF8AE0(v34, (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_1C1DFC68C);
    unint64_t v37 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    uint64_t v38 = swift_allocObject();
    sub_1C1DF7C54((uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v38 + v37, (uint64_t (*)(void))sub_1C1DFC68C);
    sub_1C1DF9BC8(0, &qword_1EBB67D08, (uint64_t (*)(uint64_t))sub_1C1E65C28, v35);
    sub_1C1DEE7E0();
    sub_1C1EAEA68();
    swift_release();
    swift_release();
    sub_1C1DF9B3C(&qword_1EBB64E18, (void (*)(uint64_t))sub_1C1DEE868);
    uint64_t v39 = v55;
    uint64_t v32 = sub_1C1EAEA38();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v22, v39);
    return v32;
  }
  if (v27 == *MEMORY[0x1E4F67408])
  {
    (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
    uint64_t v76 = v33;
    sub_1C1DF9BC8(0, &qword_1EBB653F8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AAE0]);
    sub_1C1DEE7AC();
    uint64_t v40 = sub_1C1EAE988();
    swift_bridgeObjectRelease();
    uint64_t v76 = v40;
    sub_1C1DF8AE0(v34, (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_1C1DFC68C);
    unint64_t v41 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    uint64_t v42 = swift_allocObject();
    sub_1C1DF7C54((uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v42 + v41, (uint64_t (*)(void))sub_1C1DFC68C);
    sub_1C1EAEA68();
    swift_release();
    swift_release();
    sub_1C1DF9B3C(&qword_1EA2C1528, (void (*)(uint64_t))sub_1C1DEE914);
    uint64_t v43 = v68;
    uint64_t v32 = sub_1C1EAEA38();
    uint64_t v44 = *(void (**)(char *, uint64_t))(v67 + 8);
    uint64_t v45 = v16;
LABEL_11:
    v44(v45, v43);
    return v32;
  }
  if (v27 == *MEMORY[0x1E4F67400])
  {
    (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
    uint64_t v76 = v33;
    sub_1C1DF9BC8(0, &qword_1EBB653F8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AAE0]);
    sub_1C1DEE7AC();
    uint64_t v46 = sub_1C1EAE9A8();
    swift_bridgeObjectRelease();
    uint64_t v76 = v46;
    uint64_t v47 = v64;
    sub_1C1EAEA48();
    swift_release();
    sub_1C1DF9B3C(&qword_1EBB65378, (void (*)(uint64_t))sub_1C1DEEA6C);
    uint64_t v43 = v66;
    uint64_t v32 = sub_1C1EAEA38();
    uint64_t v44 = *(void (**)(char *, uint64_t))(v65 + 8);
    uint64_t v45 = v47;
    goto LABEL_11;
  }
  if (v27 == *MEMORY[0x1E4F673F8])
  {
    (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
    uint64_t v76 = v33;
    uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1DF9BC8(0, &qword_1EBB653F8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AAE0]);
    sub_1C1DEE7AC();
    uint64_t v49 = sub_1C1EAE9C8();
    swift_bridgeObjectRelease();
    uint64_t v76 = v49;
    sub_1C1DF9BC8(0, &qword_1EBB67D08, (uint64_t (*)(uint64_t))sub_1C1E65C28, v48);
    sub_1C1DEE7E0();
    unint64_t v50 = v61;
    sub_1C1EAEA48();
    swift_release();
    sub_1C1DF9B3C(&qword_1EBB65388, (void (*)(uint64_t))sub_1C1DEE9C0);
    uint64_t v43 = v63;
    uint64_t v32 = sub_1C1EAEA38();
    uint64_t v44 = *(void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v45 = v50;
    goto LABEL_11;
  }
  if (v27 == *MEMORY[0x1E4F673F0]) {
    return sub_1C1E63638(v56, v74, v71, v72);
  }
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  uint64_t v52 = v57;
  sub_1C1EAE8C8();
  sub_1C1E65C5C();
  uint64_t v53 = v60;
  uint64_t v32 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v52, v53);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  return v32;
}

uint64_t sub_1C1DEE7AC()
{
  return sub_1C1DECE04(&qword_1EBB653F0, sub_1C1E4B7E8);
}

unint64_t sub_1C1DEE7E0()
{
  unint64_t result = qword_1EBB67D00;
  if (!qword_1EBB67D00)
  {
    sub_1C1DF9BC8(255, &qword_1EBB67D08, (uint64_t (*)(uint64_t))sub_1C1E65C28, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB67D00);
  }
  return result;
}

void sub_1C1DEE868()
{
  if (!qword_1EBB64E20)
  {
    sub_1C1DF9BC8(255, &qword_1EBB67D08, (uint64_t (*)(uint64_t))sub_1C1E65C28, MEMORY[0x1E4F1AAE0]);
    sub_1C1DFC68C(255);
    sub_1C1DEE7E0();
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64E20);
    }
  }
}

void sub_1C1DEE914()
{
  if (!qword_1EBB653B8)
  {
    sub_1C1DF9BC8(255, &qword_1EBB653F8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AAE0]);
    sub_1C1DFC68C(255);
    sub_1C1DEE7AC();
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB653B8);
    }
  }
}

void sub_1C1DEE9C0()
{
  if (!qword_1EBB65390)
  {
    sub_1C1DF9BC8(255, &qword_1EBB67D08, (uint64_t (*)(uint64_t))sub_1C1E65C28, MEMORY[0x1E4F1AAE0]);
    sub_1C1DFC68C(255);
    sub_1C1DEE7E0();
    unint64_t v0 = sub_1C1EAE588();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65390);
    }
  }
}

void sub_1C1DEEA6C()
{
  if (!qword_1EBB65380)
  {
    sub_1C1DF9BC8(255, &qword_1EBB653F8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AAE0]);
    sub_1C1DFC68C(255);
    sub_1C1DEE7AC();
    unint64_t v0 = sub_1C1EAE588();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65380);
    }
  }
}

void sub_1C1DEEB18(uint64_t a1)
{
}

void sub_1C1DEEB4C()
{
  if (!qword_1EBB64F90)
  {
    sub_1C1E0D080(255);
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    unint64_t v0 = sub_1C1EAE738();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64F90);
    }
  }
}

double sub_1C1DEEBE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1DEEBFC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

double sub_1C1DEEBFC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a3 + 48))(&v19, a2, a3);
  if (*((void *)&v20 + 1))
  {
    sub_1C1DFE46C(&v19, (uint64_t)v23);
    uint64_t v8 = v24;
    uint64_t v9 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    sub_1C1DEF7A0(v8, v9, (uint64_t (**)())&v18);
    uint64_t v10 = *(void *)(a3 + 8);
    *((void *)&v21 + 1) = a2;
    uint64_t v22 = v10;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v20);
    uint64_t v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16);
    v12(boxed_opaque_existential_0, a1, a2);
    long long v19 = v18;
    uint64_t v13 = v24;
    uint64_t v14 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    sub_1C1DEF678(v13, v14, (uint64_t (**)())&v18);
    *(void *)(a4 + 96) = a2;
    *(void *)(a4 + 104) = v10;
    uint64_t v15 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(a4 + 72));
    v12(v15, a1, a2);
    *(_OWORD *)(a4 + 56) = v18;
    long long v16 = v20;
    *(_OWORD *)a4 = v19;
    *(_OWORD *)(a4 + 16) = v16;
    *(_OWORD *)(a4 + 32) = v21;
    *(void *)(a4 + 48) = v22;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  else
  {
    sub_1C1E862E0((uint64_t)&v19);
    double result = 0.0;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_OWORD *)(a4 + 96) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

double sub_1C1DEEDF8@<D0>(uint64_t a1@<X8>)
{
  return sub_1C1DEEE1C(a1);
}

double sub_1C1DEEE1C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1C1EAE568();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v56[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v56[-v10];
  id v12 = sub_1C1DEF620();
  if (v12)
  {
    id v13 = v12;
    if (swift_conformsToProtocol2()) {
      id v14 = v13;
    }
    else {
      id v14 = 0;
    }
    if (v14)
    {
      uint64_t v15 = type metadata accessor for GenerationOperationToPluginDelegateAdaptor();
      uint64_t v16 = swift_allocObject();
      v61[3] = type metadata accessor for BundleFeedItemGenerationPluginInfo();
      v61[4] = sub_1C1E18118(&qword_1EBB66B40, v17, (void (*)(uint64_t))type metadata accessor for BundleFeedItemGenerationPluginInfo);
      v61[0] = v2;
      sub_1C1DFE408((uint64_t)v61, v16 + 16);
      sub_1C1DF9F8C(0, &qword_1EBB68250);
      uint64_t v63 = 0;
      unint64_t v64 = 0xE000000000000000;
      swift_retain_n();
      sub_1C1EAF4A8();
      swift_beginAccess();
      uint64_t v19 = v2[3];
      uint64_t v18 = v2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v60[0] = v19;
      v60[1] = v18;
      sub_1C1EAEDB8();
      *(void *)(v16 + 56) = sub_1C1EAF118();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
      swift_release();
      *(void *)(a1 + 24) = v15;
      *(void *)(a1 + 32) = sub_1C1E18118(&qword_1EBB66D80, 255, (void (*)(uint64_t))type metadata accessor for GenerationOperationToPluginDelegateAdaptor);
      *(void *)a1 = v16;
      return result;
    }
    uint64_t v35 = swift_conformsToProtocol2();
    if (v35) {
      uint64_t v36 = v35;
    }
    else {
      uint64_t v36 = 0;
    }
    if (!v35) {
      id v13 = 0;
    }
    if (v13)
    {
      *(void *)(a1 + 24) = v13;
      *(void *)(a1 + 32) = v36;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
      sub_1C1EAD488();
      return result;
    }
    sub_1C1EAE4F8();
    swift_retain_n();
    uint64_t v39 = sub_1C1EAE558();
    os_log_type_t v40 = sub_1C1EAF0B8();
    int v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      int v57 = v41;
      uint64_t v43 = v42;
      uint64_t v58 = swift_slowAlloc();
      v60[0] = v58;
      *(_DWORD *)uint64_t v43 = 136446978;
      v61[0] = v4;
      swift_getMetatypeMetadata();
      uint64_t v59 = v5;
      uint64_t v44 = sub_1C1EAED68();
      v61[0] = sub_1C1DF8D44(v44, v45, v60);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      swift_beginAccess();
      uint64_t v47 = v2[3];
      unint64_t v46 = v2[4];
      uint64_t v48 = v6;
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1C1DF8D44(v47, v46, v60);
      sub_1C1EAF2C8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 2082;
      uint64_t v63 = v2[5];
      sub_1C1E70AF4();
      uint64_t v49 = sub_1C1EAED68();
      uint64_t v63 = sub_1C1DF8D44(v49, v50, v60);
      sub_1C1EAF2C8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 32) = 2082;
      swift_beginAccess();
      id v51 = objc_msgSend((id)v2[2], sel_bundlePath);
      uint64_t v52 = sub_1C1EAED38();
      unint64_t v54 = v53;

      uint64_t v62 = sub_1C1DF8D44(v52, v54, v60);
      sub_1C1EAF2C8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v39, (os_log_type_t)v57, "[%{public}s]: Bundle %{public}s principal class %{public}s does not conform to FeedItemGenerator or HealthPluginDelegate protocol. Location: %{public}s", (uint8_t *)v43, 0x2Au);
      uint64_t v55 = v58;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v55, -1, -1);
      MEMORY[0x1C874D2E0](v43, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v11, v59);
      goto LABEL_21;
    }

    swift_release_n();
    unint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    uint64_t v38 = v11;
LABEL_20:
    v37(v38, v5);
    goto LABEL_21;
  }
  sub_1C1EAE4F8();
  swift_retain_n();
  long long v21 = sub_1C1EAE558();
  os_log_type_t v22 = sub_1C1EAF0B8();
  int v23 = v22;
  if (!os_log_type_enabled(v21, v22))
  {

    swift_release_n();
    unint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    uint64_t v38 = v9;
    goto LABEL_20;
  }
  uint64_t v24 = swift_slowAlloc();
  int v57 = v23;
  uint64_t v25 = v24;
  uint64_t v58 = swift_slowAlloc();
  v60[0] = v58;
  *(_DWORD *)uint64_t v25 = 136446722;
  v61[0] = v4;
  swift_getMetatypeMetadata();
  uint64_t v59 = v5;
  uint64_t v26 = sub_1C1EAED68();
  v61[0] = sub_1C1DF8D44(v26, v27, v60);
  sub_1C1EAF2C8();
  swift_bridgeObjectRelease();
  *(_WORD *)(v25 + 12) = 2082;
  swift_beginAccess();
  uint64_t v29 = v2[3];
  unint64_t v28 = v2[4];
  swift_bridgeObjectRetain();
  uint64_t v63 = sub_1C1DF8D44(v29, v28, v60);
  sub_1C1EAF2C8();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v25 + 22) = 2082;
  swift_beginAccess();
  id v30 = objc_msgSend((id)v2[2], sel_bundlePath);
  uint64_t v31 = sub_1C1EAED38();
  unint64_t v33 = v32;

  uint64_t v62 = sub_1C1DF8D44(v31, v33, v60);
  sub_1C1EAF2C8();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1C1DD2000, v21, (os_log_type_t)v57, "[%{public}s]: Bundle %{public}s doesn't have a principal class. Location: %{public}s", (uint8_t *)v25, 0x20u);
  uint64_t v34 = v58;
  swift_arrayDestroy();
  MEMORY[0x1C874D2E0](v34, -1, -1);
  MEMORY[0x1C874D2E0](v25, -1, -1);

  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v59);
LABEL_21:
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

id sub_1C1DEF620()
{
  id result = *(id *)(v0 + 40);
  if (result == (id)1)
  {
    swift_beginAccess();
    id result = objc_msgSend(*(id *)(v0 + 16), sel_principalClass);
    if (result) {
      id result = (id)swift_getObjCClassMetadata();
    }
    *(void *)(v0 + 40) = result;
  }
  return result;
}

uint64_t sub_1C1DEF678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v7 = *(void *)(a1 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a1);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  *a3 = sub_1C1E02944;
  a3[1] = (uint64_t (*)())v10;
  return result;
}

uint64_t sub_1C1DEF7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v7 = *(void *)(a1 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a1);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  *a3 = sub_1C1E04384;
  a3[1] = (uint64_t (*)())v10;
  return result;
}

uint64_t sub_1C1DEF8C8(uint64_t a1)
{
  uint64_t v2 = sub_1C1EAD258();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFC41C(0, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_engineName);
  uint64_t v26 = *(void *)(a1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_engineName + 8);
  uint64_t v27 = v9;
  sub_1C1DD490C(a1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_pretrainedModelURL, (uint64_t)&v25 - v7);
  uint64_t v29 = v3;
  uint64_t v30 = v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_modelPath, v2);
  id v28 = sub_1C1E17FD0();
  uint64_t v10 = sub_1C1EAE108();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    unint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1C1EAF548();
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = v12 + 1;
      sub_1C1DEFC48(*(unsigned char *)(v10 + v12 + 32));
      sub_1C1EAF518();
      sub_1C1EAF558();
      sub_1C1EAF568();
      sub_1C1EAF528();
      uint64_t v12 = v13;
    }
    while (v11 != v13);
    unint64_t v14 = v31;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = MEMORY[0x1E4FBC860];
  }
  uint64_t v25 = *(void *)(a1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dataSources);
  uint64_t v15 = sub_1C1DD5F38();
  id v16 = sub_1C1DD6864();
  sub_1C1DFD274(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1EB04A0;
  if (qword_1EBB65140 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_1EBB64778;
  *(void *)(inited + 32) = qword_1EBB64778;
  unint64_t v31 = inited;
  sub_1C1EAEEB8();
  unint64_t v19 = v31;
  uint64_t v20 = *(void *)(a1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dispatchQueue);
  id v21 = v18;
  id v22 = v28;
  uint64_t v23 = static RelevanceEngineCoordinator.instantiateEngine(engineName:modelVersion:pretrainedModelURL:modelURL:primaryFeatures:feedSections:dataSources:relevanceProviderManagerClasses:metricsRecorder:interactionDescriptors:observerQueue:)(v27, v26, 9, (uint64_t)v8, (uint64_t)v5, (uint64_t)v28, v14, v25, v15, (uint64_t)v16, v19, v20);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
  sub_1C1DD5EAC((uint64_t)v8);
  return v23;
}

id sub_1C1DEFC48(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1EAE568();
  id v171 = *(id *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v163 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C1EAD668();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v163 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F949B8]), sel_init);
  _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
  uint64_t v12 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setName_, v12);

  switch(a1)
  {
    case 1:
      if (qword_1EBB680E8 != -1) {
        swift_once();
      }
      uint64_t v13 = qword_1EBB6ACF8;
      id v14 = objc_msgSend(self, sel_conditionHasValueForFeature_, qword_1EBB6ACF8);
      id v15 = objc_msgSend(self, sel_conditionForLeftFeature_relation_rightFeature_, v13, 2, v13);
      id v16 = objc_allocWithZone(MEMORY[0x1E4F94980]);
      id v17 = v14;
      id v18 = objc_msgSend(v16, sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v17, v17, v15, 1);

      LODWORD(v19) = 1144750080;
      objc_msgSend(v18, sel_setPriority_, v19);
      id v20 = v18;
      id v21 = objc_msgSend(v11, sel_rules);
      sub_1C1DF9F8C(0, &qword_1EBB67F88);
      sub_1C1DF1890();
      uint64_t v22 = sub_1C1EAEF48();

      uint64_t v173 = v22;
      sub_1C1DF1254(&v174, v20);

      uint64_t v23 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      uint64_t v24 = v11;
      objc_msgSend(v11, sel_setRules_, v23);

      if (qword_1EBB680D0 != -1) {
        goto LABEL_28;
      }
      goto LABEL_23;
    case 2:
      uint64_t v25 = v11;
      if (qword_1EBB680E8 != -1) {
        swift_once();
      }
      uint64_t v26 = qword_1EBB6ACF8;
      id v27 = objc_msgSend(self, sel_conditionHasValueForFeature_, qword_1EBB6ACF8);
      id v28 = objc_msgSend(self, sel_conditionForLeftFeature_relation_rightFeature_, v26, 2, v26);
      id v29 = objc_allocWithZone(MEMORY[0x1E4F94980]);
      id v30 = v27;
      id v31 = objc_msgSend(v29, sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v30, v30, v28, 1);

      LODWORD(v32) = 1140457472;
      objc_msgSend(v31, sel_setPriority_, v32);
      id v33 = v31;
      id v34 = objc_msgSend(v11, sel_rules);
      sub_1C1DF9F8C(0, &qword_1EBB67F88);
      sub_1C1DF1890();
      uint64_t v35 = sub_1C1EAEF48();

      uint64_t v173 = v35;
      sub_1C1DF1254(&v174, v33);

      uint64_t v36 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setRules_, v36);

      if (qword_1EBB680D0 != -1) {
        swift_once();
      }
      id v37 = _sSo6RERuleC18HealthPlatformCoreE38makeExcludeIfValueIsZeroForFeatureRule7featureABSo9REFeatureC_tFZ_0(qword_1EBB6ACE0);
      LODWORD(v38) = 1148846080;
      objc_msgSend(v37, sel_setPriority_, v38);
      id v39 = v37;
      id v40 = objc_msgSend(v11, sel_rules);
      uint64_t v41 = sub_1C1EAEF48();

      uint64_t v173 = v41;
      sub_1C1DF1254(&v174, v39);

      uint64_t v42 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setRules_, v42);

      id v43 = _sSo6RERuleC18HealthPlatformCoreE47makeExcludeTwoBarComparisonWithLowMagnitudeRuleAByFZ_0();
      LODWORD(v44) = 1148846080;
      objc_msgSend(v43, sel_setPriority_, v44);
      id v45 = v43;
      id v46 = objc_msgSend(v11, sel_rules);
      uint64_t v47 = sub_1C1EAEF48();

      uint64_t v173 = v47;
      sub_1C1DF1254(&v174, v45);

      uint64_t v48 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      objc_msgSend(v25, sel_setRules_, v48);

      id v11 = v25;
      break;
    case 3:
      id v172 = v11;
      if (qword_1EBB680F0 != -1) {
        swift_once();
      }
      uint64_t v49 = (void *)qword_1EBB6AD00;
      uint64_t v50 = *MEMORY[0x1E4F66F90];
      id v51 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
      id v171 = (id)(v8 + 104);
      v51(v10, v50, v7);
      v165 = v51;
      sub_1C1EAD658();
      uint64_t v52 = *(void (**)(char *, uint64_t))(v8 + 8);
      id v169 = (id)(v8 + 8);
      v170 = v52;
      v52(v10, v7);
      id v53 = v49;
      swift_bridgeObjectRetain();
      unint64_t v54 = (void *)sub_1C1EAED28();
      swift_bridgeObjectRelease();
      uint64_t v55 = self;
      id v56 = objc_msgSend(v55, sel_conditionForFeature_hasValue_, v53, v54);

      id v57 = objc_msgSend(v55, sel_notCondition_, v56);
      id v166 = self;
      id v58 = objc_msgSend(v166, sel_trueCondition);
      id v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94980]), sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v56, v57, v58, 1);
      swift_bridgeObjectRelease();

      LODWORD(v60) = 1157234688;
      objc_msgSend(v59, sel_setPriority_, v60);
      id v61 = v59;
      id v62 = v172;
      id v63 = objc_msgSend(v172, sel_rules);
      sub_1C1DF9F8C(0, &qword_1EBB67F88);
      sub_1C1DF1890();
      uint64_t v64 = sub_1C1EAEF48();

      uint64_t v173 = v64;
      id v168 = v61;
      sub_1C1DF1254(&v174, v61);

      uint64_t v65 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      objc_msgSend(v62, sel_setRules_, v65);

      uint64_t v66 = (void *)qword_1EBB6AD00;
      uint64_t v67 = *MEMORY[0x1E4F66FD0];
      uint64_t v164 = v7;
      v51(v10, v67, v7);
      sub_1C1EAD658();
      v170(v10, v7);
      id v68 = v66;
      swift_bridgeObjectRetain();
      uint64_t v69 = (void *)sub_1C1EAED28();
      swift_bridgeObjectRelease();
      id v163 = v55;
      id v70 = objc_msgSend(v55, sel_conditionForFeature_hasValue_, v68, v69);

      id v71 = objc_msgSend(v55, sel_notCondition_, v70);
      id v72 = v166;
      id v73 = objc_msgSend(v166, sel_trueCondition);
      id v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94980]), sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v70, v71, v73, 1);
      swift_bridgeObjectRelease();

      LODWORD(v75) = 1148846080;
      objc_msgSend(v74, sel_setPriority_, v75);
      id v76 = v74;
      id v77 = v172;
      id v78 = objc_msgSend(v172, sel_rules);
      uint64_t v79 = sub_1C1EAEF48();

      uint64_t v173 = v79;
      id v167 = v76;
      sub_1C1DF1254(&v174, v76);

      uint64_t v80 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      objc_msgSend(v77, sel_setRules_, v80);

      os_log_t v81 = (void *)qword_1EBB6AD00;
      uint64_t v82 = v164;
      v165(v10, *MEMORY[0x1E4F66FB8], v164);
      sub_1C1EAD658();
      v170(v10, v82);
      id v83 = v81;
      swift_bridgeObjectRetain();
      uint64_t v84 = (void *)sub_1C1EAED28();
      swift_bridgeObjectRelease();
      id v85 = v163;
      id v86 = objc_msgSend(v163, sel_conditionForFeature_hasValue_, v83, v84);

      id v87 = objc_msgSend(v85, sel_notCondition_, v86);
      id v88 = objc_msgSend(v72, sel_trueCondition);
      id v89 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94980]), sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v86, v87, v88, 1);
      swift_bridgeObjectRelease();

      LODWORD(v90) = 1147207680;
      objc_msgSend(v89, sel_setPriority_, v90);
      id v91 = v89;
      id v92 = v172;
      id v93 = objc_msgSend(v172, sel_rules);
      uint64_t v94 = sub_1C1EAEF48();

      uint64_t v173 = v94;
      id v171 = v91;
      sub_1C1DF1254(&v174, v91);

      os_log_t v95 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      objc_msgSend(v92, sel_setRules_, v95);

      if (qword_1EBB680D0 != -1) {
        swift_once();
      }
      uint64_t v96 = qword_1EBB6ACE0;
      id v97 = objc_msgSend(v85, sel_conditionHasValueForFeature_, qword_1EBB6ACE0);
      id v98 = objc_msgSend(v72, sel_conditionForLeftFeature_relation_rightFeature_, v96, 2, v96);
      id v99 = objc_allocWithZone(MEMORY[0x1E4F94980]);
      id v100 = v97;
      id v101 = objc_msgSend(v99, sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v100, v100, v98, 1);

      LODWORD(v102) = 1144750080;
      objc_msgSend(v101, sel_setPriority_, v102);
      v103 = (void (*)(char *, uint64_t))v101;
      id v104 = v172;
      id v105 = objc_msgSend(v172, sel_rules);
      uint64_t v106 = sub_1C1EAEF48();

      uint64_t v173 = v106;
      v170 = v103;
      sub_1C1DF1254(&v174, v103);

      v107 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      objc_msgSend(v104, sel_setRules_, v107);

      if (qword_1EBB680E8 != -1) {
        swift_once();
      }
      uint64_t v108 = qword_1EBB6ACF8;
      id v109 = objc_msgSend(v85, sel_conditionHasValueForFeature_, qword_1EBB6ACF8);
      id v110 = objc_msgSend(v72, sel_conditionForLeftFeature_relation_rightFeature_, v108, 2, v108);
      id v111 = objc_allocWithZone(MEMORY[0x1E4F94980]);
      id v112 = v109;
      id v113 = objc_msgSend(v111, sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v112, v112, v110, 1);

      LODWORD(v114) = 1140457472;
      objc_msgSend(v113, property descriptor for SummaryTabRelevanceEngineCoordinator.trainingContext, v114);
      id v115 = v113;
      id v116 = v172;
      id v117 = objc_msgSend(v172, sel_rules);
      uint64_t v118 = sub_1C1EAEF48();

      uint64_t v173 = v118;
      id v169 = v115;
      sub_1C1DF1254(&v174, v115);

      uint64_t v119 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      objc_msgSend(v116, sel_setRules_, v119);

      id v120 = _sSo6RERuleC18HealthPlatformCoreE38makeExcludeIfValueIsZeroForFeatureRule7featureABSo9REFeatureC_tFZ_0(qword_1EBB6ACE0);
      LODWORD(v121) = 1148846080;
      objc_msgSend(v120, property descriptor for SummaryTabRelevanceEngineCoordinator.trainingContext, v121);
      id v122 = v120;
      id v123 = objc_msgSend(v116, sel_rules);
      uint64_t v124 = sub_1C1EAEF48();

      uint64_t v173 = v124;
      sub_1C1DF1254(&v174, v122);

      unsigned int v125 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      objc_msgSend(v116, sel_setRules_, v125);

      if (qword_1EBB64738 != -1) {
        swift_once();
      }
      uint64_t v126 = qword_1EBB6AB90;
      id v127 = objc_msgSend(v85, sel_conditionHasValueForFeature_, qword_1EBB6AB90);
      id v128 = objc_msgSend(v72, sel_conditionForLeftFeature_relation_rightFeature_, v126, 2, v126);
      id v129 = objc_allocWithZone(MEMORY[0x1E4F94980]);
      id v130 = v127;
      id v131 = objc_msgSend(v129, sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v130, v130, v128, -1);

      LODWORD(v132) = 1120403456;
      objc_msgSend(v131, sel_setPriority_, v132);
      id v133 = v131;
      id v134 = v172;
      id v135 = objc_msgSend(v172, sel_rules);
      uint64_t v136 = sub_1C1EAEF48();

      uint64_t v173 = v136;
      sub_1C1DF1254(&v174, v133);

      uint64_t v137 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      objc_msgSend(v134, sel_setRules_, v137);

      id v11 = v134;
      break;
    case 4:
      if (qword_1EBB680E8 != -1) {
        swift_once();
      }
      uint64_t v138 = qword_1EBB6ACF8;
      id v139 = objc_msgSend(self, sel_conditionHasValueForFeature_, qword_1EBB6ACF8);
      id v140 = objc_msgSend(self, sel_conditionForLeftFeature_relation_rightFeature_, v138, 2, v138);
      id v141 = objc_allocWithZone(MEMORY[0x1E4F94980]);
      id v142 = v139;
      id v143 = objc_msgSend(v141, sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v142, v142, v140, 1);

      LODWORD(v144) = 1144750080;
      objc_msgSend(v143, sel_setPriority_, v144);
      id v20 = v143;
      id v145 = objc_msgSend(v11, sel_rules);
      sub_1C1DF9F8C(0, &qword_1EBB67F88);
      sub_1C1DF1890();
      uint64_t v146 = sub_1C1EAEF48();

      uint64_t v173 = v146;
      sub_1C1DF1254(&v174, v20);

      os_log_t v147 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      uint64_t v24 = v11;
      objc_msgSend(v11, sel_setRules_, v147);

      if (qword_1EBB680D0 != -1) {
LABEL_28:
      }
        swift_once();
LABEL_23:
      id v148 = _sSo6RERuleC18HealthPlatformCoreE38makeExcludeIfValueIsZeroForFeatureRule7featureABSo9REFeatureC_tFZ_0(qword_1EBB6ACE0);
      LODWORD(v149) = 1148846080;
      objc_msgSend(v148, sel_setPriority_, v149);
      id v150 = v148;
      id v151 = objc_msgSend(v24, sel_rules);
      uint64_t v152 = sub_1C1EAEF48();

      uint64_t v173 = v152;
      sub_1C1DF1254(&v174, v150);

      v153 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_setRules_, v153);

      id v11 = v24;
      break;
    case 5:
      sub_1C1EAE508();
      v154 = sub_1C1EAE558();
      os_log_type_t v155 = sub_1C1EAF0B8();
      if (os_log_type_enabled(v154, v155))
      {
        v156 = (uint8_t *)swift_slowAlloc();
        uint64_t v157 = swift_slowAlloc();
        id v172 = v11;
        uint64_t v173 = v157;
        uint64_t v158 = v157;
        *(_DWORD *)v156 = 136315138;
        id v174 = v2;
        swift_getMetatypeMetadata();
        uint64_t v159 = sub_1C1EAED68();
        id v174 = (id)sub_1C1DF8D44(v159, v160, &v173);
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1DD2000, v154, v155, "[%s]: It's the shared dashboard manager's responsibility to pick the trends feed", v156, 0xCu);
        swift_arrayDestroy();
        uint64_t v161 = v158;
        id v11 = v172;
        MEMORY[0x1C874D2E0](v161, -1, -1);
        MEMORY[0x1C874D2E0](v156, -1, -1);
      }

      (*((void (**)(char *, uint64_t))v171 + 1))(v6, v4);
      break;
    default:
      return v11;
  }
  return v11;
}

uint64_t sub_1C1DF1254(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C1EAF3C8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C1DF9F8C(0, &qword_1EBB67F88);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C1EAF3B8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C1DF1554(v7, result + 1, &qword_1EBB67FB0, &qword_1EBB67F88, 0x1E4F949B0, (unint64_t *)&qword_1EBB67F90);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C1E332A0(v26, &qword_1EBB67FB0, &qword_1EBB67F88, 0x1E4F949B0, (unint64_t *)&qword_1EBB67F90);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C1DF188C((uint64_t)v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C1EAF278();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C1DF9F8C(0, &qword_1EBB67F88);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C1EAF288();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        double v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C1EAF288();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C1E16588((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_1EBB67FB0, &qword_1EBB67F88, 0x1E4F949B0, (unint64_t *)&qword_1EBB67F90);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C1DF1554(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  if (a2)
  {
    sub_1C1DF177C(0, a3, a4, a5, a6);
    uint64_t v10 = sub_1C1EAF478();
    uint64_t v23 = v10;
    sub_1C1EAF368();
    if (sub_1C1EAF3E8())
    {
      sub_1C1DF9F8C(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v10 = v23;
        unint64_t v17 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v17)
        {
          sub_1C1E332A0(v17 + 1, a3, a4, a5, a6);
          uint64_t v10 = v23;
        }
        uint64_t result = sub_1C1EAF278();
        uint64_t v12 = v10 + 56;
        uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
        unint64_t v14 = result & ~v13;
        unint64_t v15 = v14 >> 6;
        if (((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v15 == v19;
            if (v15 == v19) {
              unint64_t v15 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          unint64_t v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(void *)(*(void *)(v10 + 48) + 8 * v16) = v22;
        ++*(void *)(v10 + 16);
      }
      while (sub_1C1EAF3E8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v10;
}

void sub_1C1DF177C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C1DF9F8C(255, a3);
    sub_1C1E16A04(a5, a3);
    unint64_t v8 = sub_1C1EAF498();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C1DF1808(uint64_t a1, uint64_t a2)
{
  sub_1C1EAF278();
  unint64_t result = sub_1C1EAF348();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1C1DF1890()
{
  unint64_t result = qword_1EBB67F90;
  if (!qword_1EBB67F90)
  {
    sub_1C1DF9F8C(255, &qword_1EBB67F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB67F90);
  }
  return result;
}

id _sSo6RERuleC18HealthPlatformCoreE38makeExcludeIfValueIsZeroForFeatureRule7featureABSo9REFeatureC_tFZ_0(uint64_t a1)
{
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_conditionHasValueForFeature_, a1);
  id v4 = objc_msgSend(v2, sel_conditionForFeature_relation_floatValue_, a1, -1, 3.18618444e-58);
  sub_1C1DFD2C0(0, (unint64_t *)&qword_1EBB660F8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C1EB07E0;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v4;
  sub_1C1EAEEB8();
  sub_1C1DF9F8C(0, &qword_1EBB67F38);
  id v6 = v3;
  id v7 = v4;
  unint64_t v8 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v2, sel_andConditions_, v8);

  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94958]), sel_initWithCondition_type_, v9, 0);
  return v10;
}

uint64_t sub_1C1DF1A68@<X0>(uint64_t (**a1)(uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C1DF1E08(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C1DF1A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return HealthExperienceStoreFeedItemContext.fetchPluginStorage(havingUniqueIdentifier:)(a1, a2, a3);
}

uint64_t HealthExperienceStoreFeedItemContext.fetchPluginStorage(havingUniqueIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v4 = v3;
  uint64_t v25 = a3;
  uint64_t v26 = a1;
  uint64_t v27 = *v3;
  sub_1C1DD8CD8();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFCCCC();
  sub_1C1DF32F0();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1EB1830;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1C1DF2A98();
  *(void *)(v9 + 64) = v11;
  strcpy((char *)(v9 + 32), "plugin.package");
  *(unsigned char *)(v9 + 47) = -18;
  __swift_project_boxed_opaque_existential_1((void *)((char *)v3 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo), *(void *)((char *)v3 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24));
  uint64_t v12 = sub_1C1EAD5B8();
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 72) = v12;
  *(void *)(v9 + 80) = v13;
  *(void *)(v9 + 136) = v10;
  *(void *)(v9 + 144) = v11;
  *(void *)(v9 + 112) = 0xD000000000000010;
  *(void *)(v9 + 120) = 0x80000001C1EB32E0;
  *(void *)(v9 + 176) = v10;
  *(void *)(v9 + 184) = v11;
  uint64_t v14 = v26;
  *(void *)(v9 + 152) = v26;
  *(void *)(v9 + 160) = a2;
  swift_bridgeObjectRetain();
  unint64_t v15 = (void *)sub_1C1EAF018();
  uint64_t v16 = sub_1C1EAD748();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  unint64_t v17 = *(void **)((char *)v3 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_storageContext);
  char v18 = (void *)swift_allocObject();
  void v18[2] = v4;
  v18[3] = v15;
  v18[4] = v14;
  void v18[5] = a2;
  uint64_t v19 = v27;
  v18[6] = v8;
  v18[7] = v19;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1C1DD888C;
  *(void *)(v20 + 24) = v18;
  aBlock[4] = sub_1C1DD885C;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1DD8834;
  aBlock[3] = &block_descriptor_13;
  uint64_t v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  id v22 = v15;
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_performBlockAndWait_, v21);

  _Block_release(v21);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v21)
  {
    __break(1u);
  }
  else
  {
    sub_1C1DF3E60((uint64_t)v8, v25);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1DF1E08(uint64_t (**a1)(uint64_t))
{
  id v53 = a1;
  sub_1C1DF9BC8(0, &qword_1EBB650E8, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1AC18]);
  uint64_t v2 = v1;
  uint64_t v50 = *(const char **)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v42 - v3;
  uint64_t v5 = sub_1C1EAD6A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFD354(0);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C1EAE4C8();
  uint64_t v51 = *(void *)(v12 - 8);
  uint64_t v52 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    id v17 = (id)_HKLogPersistedSignposts();
    swift_retain();
    uint64_t v49 = v14;
    sub_1C1EAE4A8();
    sub_1C1DF7CD4(0);
    uint64_t v19 = v53;
    uint64_t v20 = (uint64_t (**)(uint64_t))((char *)v53 + *(int *)(v18 + 28));
    uint64_t v21 = v20[3];
    __swift_project_boxed_opaque_existential_1(v20, v21);
    uint64_t v50 = sub_1C1DF3EC4(v21);
    uint64_t v48 = v22;
    int v47 = v23;
    uint64_t v54 = 0x6F746172656E6547;
    unint64_t v55 = 0xEB00000000203A72;
    id v43 = sub_1C1DFD354;
    sub_1C1DF8AE0((uint64_t)v19, (uint64_t)v11, (uint64_t (*)(void))sub_1C1DFD354);
    sub_1C1EAED68();
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();
    unint64_t v45 = v55;
    uint64_t v46 = v54;
    int v44 = sub_1C1EAF0D8();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F67068], v5);
    uint64_t v24 = (void *)sub_1C1EAD698();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C1DF32F0();
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C1EB1480;
    __swift_project_boxed_opaque_existential_1(v20, v20[3]);
    uint64_t v26 = sub_1C1EAD5B8();
    uint64_t v28 = v27;
    uint64_t v29 = MEMORY[0x1E4FBB1A0];
    *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v30 = sub_1C1DF2A98();
    *(void *)(v25 + 64) = v30;
    *(void *)(v25 + 32) = v26;
    *(void *)(v25 + 40) = v28;
    sub_1C1DF8AE0((uint64_t)v19, (uint64_t)v11, (uint64_t (*)(void))v43);
    uint64_t v31 = sub_1C1EAED68();
    *(void *)(v25 + 96) = v29;
    *(void *)(v25 + 104) = v30;
    *(void *)(v25 + 72) = v31;
    *(void *)(v25 + 80) = v32;
    id v33 = (void *)sub_1C1EAD9A8();
    uint64_t v34 = sub_1C1EAD798();
    uint64_t v36 = v35;

    *(void *)(v25 + 136) = v29;
    *(void *)(v25 + 144) = v30;
    *(void *)(v25 + 112) = v34;
    *(void *)(v25 + 120) = v36;
    sub_1C1EAE488();

    uint64_t v37 = swift_bridgeObjectRelease();
    double v38 = (void *)MEMORY[0x1C874CBD0](v37);
    uint64_t v39 = (uint64_t)v49;
    uint64_t v40 = sub_1C1DF3358(v19, v16, (uint64_t)v50, v48, v47, (uint64_t)v49, v46, v45);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v39, v52);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C1DFC68C(0);
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    sub_1C1EAE8C8();
    sub_1C1E65C5C();
    uint64_t v40 = sub_1C1EAEA38();
    (*((void (**)(char *, uint64_t))v50 + 1))(v4, v2);
  }
  return v40;
}

id NSManagedObjectContext.makeFeedItemsFetchedResultsController(for:associatedProfileIdentifier:)(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  sub_1C1EAE348();
  id v4 = (void *)MEMORY[0x1C874B480]();
  id v5 = _sSo22NSManagedObjectContextC18HealthPlatformCoreE22makeFeedItemsPredicate3for27associatedProfileIdentifierSo11NSPredicateC0dE00H0C4KindO_So09HKProfileN0CSgtF_0(a1);
  objc_msgSend(v4, sel_setPredicate_, v5);

  id v6 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v7 = (void *)sub_1C1EAED28();
  id v8 = objc_msgSend(v6, sel_initWithKey_ascending_, v7, 1);

  id v9 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v10 = (void *)sub_1C1EAED28();
  id v11 = objc_msgSend(v9, sel_initWithKey_ascending_, v10, 1);

  sub_1C1DFD1DC(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C1EB07E0;
  *(void *)(v12 + 32) = v8;
  *(void *)(v12 + 40) = v11;
  sub_1C1EAEEB8();
  sub_1C1DF9F8C(0, &qword_1EBB68258);
  id v13 = v8;
  id v14 = v11;
  unint64_t v15 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setSortDescriptors_, v15);

  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v4, v2, 0, 0);
  return v16;
}

id _sSo22NSManagedObjectContextC18HealthPlatformCoreE22makeFeedItemsPredicate3for27associatedProfileIdentifierSo11NSPredicateC0dE00H0C4KindO_So09HKProfileN0CSgtF_0(unsigned __int8 a1)
{
  sub_1C1DF31D8(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v30 - v3;
  uint64_t v5 = sub_1C1EAD318();
  uint64_t v33 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v32 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE188();
  uint64_t v7 = (void *)sub_1C1EAE178();
  id v8 = (void *)sub_1C1EAED28();
  id v9 = self;
  id v10 = objc_msgSend(v9, sel_expressionForKeyPath_, v8);

  id v11 = v7;
  uint64_t v12 = (void *)sub_1C1EAED28();
  id v13 = objc_msgSend(v9, sel_expressionForSubquery_usingIteratorVariable_predicate_, v10, v12, v11);

  id v34 = v13;
  id v14 = objc_msgSend(v13, sel_predicate);
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2AEC(0, (unint64_t *)&qword_1EBB68288, (unint64_t *)&qword_1EBB68290);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C1EB07F0;
  *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v16 = sub_1C1DF2A98();
  *(void *)(v15 + 64) = v16;
  strcpy((char *)(v15 + 32), "hideInDiscover");
  *(unsigned char *)(v15 + 47) = -18;
  id v17 = (void *)sub_1C1EAF018();
  sub_1C1DFD1DC(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1EB07E0;
  *(void *)(v18 + 32) = v14;
  *(void *)(v18 + 40) = v17;
  uint64_t v35 = v18;
  sub_1C1EAEEB8();
  id v19 = v14;
  id v20 = v17;
  unsigned __int8 v21 = a1;
  uint64_t v22 = v33;
  Feed.Kind.earliestDisplayDateUpdated.getter(v21, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v4, 1, v5) == 1)
  {
    sub_1C1DF323C((uint64_t)v4);
  }
  else
  {
    id v30 = v20;
    id v31 = v19;
    int v23 = v32;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v32, v4, v5);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C1EB0800;
    *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v24 + 64) = v16;
    *(void *)(v24 + 32) = 0xD00000000000001CLL;
    *(void *)(v24 + 40) = 0x80000001C1EB3840;
    uint64_t v25 = sub_1C1EAD2C8();
    *(void *)(v24 + 96) = sub_1C1DF9F8C(0, &qword_1EBB66108);
    *(void *)(v24 + 104) = sub_1C1E16A54();
    *(void *)(v24 + 72) = v25;
    id v26 = (id)sub_1C1EAF018();
    MEMORY[0x1C874C090]();
    if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C1EAEEE8();
    }
    sub_1C1EAEF18();
    sub_1C1EAEEB8();

    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v5);
    id v20 = v30;
    id v19 = v31;
  }
  uint64_t v27 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v27);

  return v28;
}

unint64_t sub_1C1DF2A98()
{
  unint64_t result = qword_1EBB68228;
  if (!qword_1EBB68228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB68228);
  }
  return result;
}

void sub_1C1DF2AEC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C1DF9148(255, a3);
    unint64_t v4 = sub_1C1EAF778();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1DF2B44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t Feed.Kind.earliestDisplayDateUpdated.getter@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  LODWORD(v35) = a1;
  uint64_t v2 = sub_1C1EAD318();
  uint64_t v34 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v32 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1DF3128(0, &qword_1EBB68178, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v29 - v6;
  sub_1C1DF3128(0, &qword_1EBB68170, MEMORY[0x1E4F27CA0], v4);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v29 - v9;
  sub_1C1DF318C(0, &qword_1EBB660B8, MEMORY[0x1E4FBB550], MEMORY[0x1E4F67098]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = sub_1C1EAD168();
  uint64_t v30 = *(void *)(v16 - 8);
  uint64_t v31 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C1EAD3C8();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v35 == 2)
  {
    uint64_t v35 = v2;
    sub_1C1EAD3A8();
    if (qword_1EBB65F38 != -1) {
      swift_once();
    }
    uint64_t v23 = __swift_project_value_buffer(v12, (uint64_t)qword_1EBB660D8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v23, v12);
    sub_1C1EAD6C8();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (__OFSUB__(0, v36))
    {
      __break(1u);
    }
    else
    {
      sub_1C1EAD3A8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v10, 0, 1, v19);
      uint64_t v25 = sub_1C1EAD3F8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v7, 1, 1, v25);
      sub_1C1EAD158();
      id v26 = v32;
      sub_1C1EAD308();
      sub_1C1EAD398();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v35);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    }
  }
  else
  {
    uint64_t v27 = v33;
    id v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
    return v28(v27, 1, 1, v2);
  }
  return result;
}

void sub_1C1DF3128(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DF318C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C1DF31D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1DF323C(uint64_t a1)
{
  sub_1C1DF3298();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1DF3298()
{
  if (!qword_1EBB682A8)
  {
    sub_1C1EAD318();
    unint64_t v0 = sub_1C1EAF2A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB682A8);
    }
  }
}

void sub_1C1DF32F0()
{
  if (!qword_1EBB68288)
  {
    sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68290);
    unint64_t v0 = sub_1C1EAF778();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB68288);
    }
  }
}

uint64_t sub_1C1DF3358(uint64_t (**a1)(uint64_t), void *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v75 = a7;
  uint64_t v71 = a8;
  uint64_t v72 = a3;
  uint64_t v69 = a6;
  int v74 = a5;
  uint64_t v73 = a4;
  id v76 = a2;
  sub_1C1E00194(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v70 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v68 = (char *)&v58 - v12;
  sub_1C1DF7CD4(0);
  uint64_t v58 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v58 + 64);
  MEMORY[0x1F4188790](v13 - 8);
  sub_1C1DF3D50();
  uint64_t v59 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF3BC8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v60 = v19;
  uint64_t v61 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF9C54(0, &qword_1EBB64F60, (uint64_t (*)(uint64_t))sub_1C1DF3BC8, sub_1C1DF3C74, MEMORY[0x1E4F1AA60]);
  uint64_t v64 = *(void *)(v23 - 8);
  uint64_t v65 = v23;
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  id v63 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v58 - v26;
  sub_1C1DF3CA8();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v66 = v28;
  uint64_t v67 = v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  id v62 = (char *)&v58 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = (*a1)(v30);
  sub_1C1E01F14(0);
  uint64_t v77 = v33;
  uint64_t v78 = sub_1C1DF9B3C(&qword_1EBB67728, sub_1C1E01F14);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1C1E074C0((uint64_t)a1, KeyPath, v32, (uint64_t)v18);
  swift_release();
  swift_release();
  sub_1C1E0776C((uint64_t)a1, (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v35 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  uint64_t v36 = swift_allocObject();
  sub_1C1E07754((uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v35);
  sub_1C1DFC68C(0);
  sub_1C1DF9B3C(&qword_1EBB67C48, (void (*)(uint64_t))sub_1C1DF3D50);
  uint64_t v37 = v59;
  sub_1C1EAEA68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v37);
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  sub_1C1DF3C74();
  uint64_t v38 = v60;
  sub_1C1EAEB08();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v22, v38);
  id v39 = (id)_HKLogPersistedSignposts();
  uint64_t v40 = sub_1C1EAE4C8();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v68, v69, v40);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
  uint64_t v43 = v64;
  uint64_t v44 = v65;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v63, v27, v65);
  sub_1C1DF8AE0(v42, v70, (uint64_t (*)(void))sub_1C1E00194);
  sub_1C1DF3B2C();
  swift_bridgeObjectRetain();
  unint64_t v45 = v62;
  sub_1C1EAE5F8();
  sub_1C1DF9030(v42, (uint64_t (*)(void))sub_1C1E00194);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v44);
  sub_1C1DF9B3C(&qword_1EBB657E0, (void (*)(uint64_t))sub_1C1DF3CA8);
  uint64_t v46 = v66;
  uint64_t v47 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v46);
  uint64_t v48 = v76[23];
  uint64_t v49 = v76[24];
  __swift_project_boxed_opaque_existential_1(v76 + 20, v48);
  uint64_t v79 = v47;
  sub_1C1DFD354(0);
  uint64_t v51 = (char *)a1 + *(int *)(v50 + 44);
  uint64_t v52 = *(uint64_t (**)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 48);
  sub_1C1E0D080(0);
  uint64_t v54 = v53;
  uint64_t v55 = sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
  uint64_t v56 = v52(&v79, v51, v54, v55, v48, v49);
  swift_release();
  return v56;
}

unint64_t sub_1C1DF3B2C()
{
  unint64_t result = qword_1EBB64F58;
  if (!qword_1EBB64F58)
  {
    sub_1C1DF9C54(255, &qword_1EBB64F60, (uint64_t (*)(uint64_t))sub_1C1DF3BC8, sub_1C1DF3C74, MEMORY[0x1E4F1AA60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64F58);
  }
  return result;
}

void sub_1C1DF3BC8()
{
  if (!qword_1EBB67CA8)
  {
    sub_1C1DF3D50();
    sub_1C1DFC68C(255);
    sub_1C1DF9B3C(&qword_1EBB67C48, (void (*)(uint64_t))sub_1C1DF3D50);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67CA8);
    }
  }
}

uint64_t sub_1C1DF3C74()
{
  return sub_1C1DF9B3C(&qword_1EBB674A0, (void (*)(uint64_t))sub_1C1DF3BC8);
}

void sub_1C1DF3CA8()
{
  if (!qword_1EBB657E8)
  {
    sub_1C1DF9C54(255, &qword_1EBB64F60, (uint64_t (*)(uint64_t))sub_1C1DF3BC8, sub_1C1DF3C74, MEMORY[0x1E4F1AA60]);
    sub_1C1DF3B2C();
    unint64_t v0 = sub_1C1EAE5E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB657E8);
    }
  }
}

void sub_1C1DF3D50()
{
  if (!qword_1EBB67C50)
  {
    sub_1C1E14CAC(255, &qword_1EBB67D28, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AAE0]);
    sub_1C1E14E38();
    unint64_t v0 = sub_1C1EAE5B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67C50);
    }
  }
}

uint64_t sub_1C1DF3DE4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C1DF3E48()
{
  return sub_1C1DF3DE4(MEMORY[0x1E4F673D8]);
}

uint64_t sub_1C1DF3E60(uint64_t a1, uint64_t a2)
{
  sub_1C1DD8CD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

const char *sub_1C1DF3EC4(uint64_t a1)
{
  uint64_t v21 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C1EAE568();
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1EAD5B8();
  uint64_t v10 = v8;
  if (v9 == 0xD000000000000023 && v8 == 0x80000001C1EB4810 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_AppRecommendations";
  }
  if (v9 == 0xD00000000000002DLL && v10 == 0x80000001C1EB4840 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Balance";
  }
  if (v9 == 0xD00000000000001BLL && v10 == 0x80000001C1EB4870
    || (uint64_t v20 = 0xD00000000000001BLL, (sub_1C1EAF7A8() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return "Generation_Categories";
  }
  if (v9 == 0xD000000000000021 && v10 == 0x80000001C1EB4890 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_HearingAppPlugin";
  }
  if (v9 == 0xD000000000000016 && v10 == 0x80000001C1EB48C0 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Heart";
  }
  if (v9 == 0xD000000000000020 && v10 == 0x80000001C1EB48E0
    || (unint64_t v19 = 0xD000000000000020, (sub_1C1EAF7A8() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return "Generation_HighlightAlerts";
  }
  if (v9 == v20 && v10 == 0x80000001C1EB4910 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Highlights";
  }
  if (v9 == v19 && v10 == 0x80000001C1EB4930 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_MenstrualCycles";
  }
  if (v9 == 0xD000000000000019 && v10 == 0x80000001C1EB4960 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Profiles";
  }
  if (v9 == 0xD000000000000023 && v10 == 0x80000001C1EB4980 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_ResearchApp";
  }
  if (v9 == 0xD000000000000017 && v10 == 0x80000001C1EB49B0 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Safety";
  }
  if (v9 == 0xD000000000000025 && v10 == 0x80000001C1EB49D0 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_HealthRecords";
  }
  if (v9 == 0xD00000000000001FLL && v10 == 0x80000001C1EB4A00 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_HealthArticles";
  }
  if (v9 == 0xD00000000000001CLL && v10 == 0x80000001C1EB4A20 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Respiratory";
  }
  if (v9 == 0xD00000000000001ALL && v10 == 0x80000001C1EB4A40 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Summaries";
  }
  if (v9 == 0xD00000000000002BLL && v10 == 0x80000001C1EB4A60 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_MedicationsHealthAppPlugin";
  }
  if (v9 == 0xD000000000000022 && v10 == 0x80000001C1EB4A90 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_MobilityAppPlugin";
  }
  if (v9 == 0xD000000000000016 && v10 == 0x80000001C1EB4AC0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Sleep";
  }
  char v12 = sub_1C1EAF7A8();
  swift_bridgeObjectRelease();
  if (v12) {
    return "Generation_Sleep";
  }
  sub_1C1EAE4F8();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v4, v1, a1);
  uint64_t v13 = sub_1C1EAE558();
  os_log_type_t v14 = sub_1C1EAF0B8();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v20;
    *(_DWORD *)uint64_t v15 = 136315138;
    unint64_t v19 = (unint64_t)(v15 + 4);
    uint64_t v16 = sub_1C1EAD5B8();
    uint64_t v23 = sub_1C1DF8D44(v16, v17, &v24);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, a1);
    _os_log_impl(&dword_1C1DD2000, v13, v14, "You should add your bundle id: '%s' to generationSignpostID for better signposts", v15, 0xCu);
    uint64_t v18 = v20;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v18, -1, -1);
    MEMORY[0x1C874D2E0](v15, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, a1);
  }

  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  return "Generation_<unknown>";
}

uint64_t sub_1C1DF4854(uint64_t a1, uint64_t a2)
{
  return sub_1C1DF4870(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1C1DF4870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1C1EAF2A8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v11 - v5;
  uint64_t v7 = sub_1C1EAD418();
  uint64_t v9 = v8;
  sub_1C1EAD438();
  sub_1C1EAD5C8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(v6, 0, 1, a3);
  v11[0] = v7;
  v11[1] = v9;
  sub_1C1EAEC98();
  return sub_1C1EAECA8();
}

uint64_t sub_1C1DF4998@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for BundleFeedItemGenerationPluginInfo();
  uint64_t v4 = swift_allocObject();
  uint64_t result = BundleFeedItemGenerationPluginInfo.init(bundle:)(a1);
  *a2 = v4;
  return result;
}

uint64_t type metadata accessor for BundleFeedItemGenerationPluginInfo()
{
  return self;
}

uint64_t BundleFeedItemGenerationPluginInfo.init(bundle:)(void *a1)
{
  v1[5] = 1;
  v1[2] = a1;
  id v2 = a1;
  id v3 = objc_msgSend(v2, sel_bundleIdentifier);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1C1EAED38();
    uint64_t v7 = v6;

    v1[3] = v5;
    v1[4] = v7;
    return (uint64_t)v1;
  }
  else
  {
    sub_1C1EAF4A8();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v2, sel_description);
    sub_1C1EAED38();

    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();
    sub_1C1EAEDB8();
    uint64_t result = sub_1C1EAF628();
    __break(1u);
  }
  return result;
}

uint64_t objectdestroy_106Tm(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v4 = (int *)(a1(0) - 8);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v6 = (v5 + 24) & ~v5;
  uint64_t v7 = v6 + *(void *)(*(void *)v4 + 64);
  uint64_t v8 = v5 | 7;
  swift_release();
  uint64_t v9 = v2 + v6;
  swift_release();
  uint64_t v10 = v2 + v6 + *(int *)(a2(0) + 36);
  uint64_t v11 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v9 + v4[9]);
  uint64_t v12 = v9 + v4[10];
  uint64_t v13 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v9 + v4[11];
  uint64_t v15 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  return MEMORY[0x1F4186498](v2, v7, v8);
}

uint64_t AnyPipeline.debugDescription.getter(uint64_t a1)
{
  uint64_t v3 = sub_1C1EAD9C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = sub_1C1EAF908();
  v9[1] = v7;
  sub_1C1EAEDB8();
  swift_bridgeObjectRetain();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + *(int *)(a1 + 36), v3);
  sub_1C1EAED68();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  return v9[0];
}

uint64_t sub_1C1DF4E64()
{
  return HealthExperienceStoreFeedItemContext.description.getter();
}

uint64_t HealthExperienceStoreFeedItemContext.description.getter()
{
  sub_1C1EAF4A8();
  swift_bridgeObjectRelease();
  sub_1C1DF5014();
  sub_1C1EAED68();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  swift_beginAccess();
  sub_1C1EADF68();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_storageContext);
  id v2 = objc_msgSend(v1, sel_description);
  sub_1C1EAED38();

  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  return 60;
}

unint64_t sub_1C1DF5014()
{
  unint64_t result = qword_1EBB66490;
  if (!qword_1EBB66490)
  {
    type metadata accessor for HealthExperienceStoreFeedItemContext(255);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB66490);
  }
  return result;
}

uint64_t sub_1C1DF5050(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1C1DF5094()
{
  return sub_1C1DF50B4(*(void *)(v0 + 16), *(void (**)(uint64_t *__return_ptr, void *))(v0 + 24));
}

uint64_t sub_1C1DF50B4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, void *))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)MEMORY[0x1C874CBD0]();
    sub_1C1EAE838();
    v5[0] = v5[2];
    v5[1] = v5[3];
    a2(&v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C1EAE828();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1DF5198(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a3(a1, v6, v7);
}

uint64_t sub_1C1DF5234@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t (*a5)(void)@<X4>, void (*a6)(uint64_t, char *)@<X5>, void (*a7)(char *, char *)@<X6>, void *a8@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = a7;
  uint64_t v13 = a4(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = sub_1C1EAD368();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  uint64_t v21 = a1[1];
  *a8 = v20;
  a8[1] = v21;
  uint64_t v22 = a5(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a3 + *(int *)(v22 + 36), v16);
  a6(a3, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 0, 1, v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = (uint64_t (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  v26(v15, v19);
  return v23(v27, 0);
}

void sub_1C1DF5420(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v36 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v36 - 8);
  uint64_t v35 = v7;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v34 = sub_1C1EADA28();
  uint64_t v9 = *(void *)(v34 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v8 <= v10) {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v11 = v8;
  }
  uint64_t v12 = sub_1C1EAD368();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v7 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = *(void *)(v9 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v13 + 80);
  if (v11 <= *(_DWORD *)(v13 + 84)) {
    unsigned int v18 = *(_DWORD *)(v13 + 84);
  }
  else {
    unsigned int v18 = v11;
  }
  if (v18 <= 0x7FFFFFFF) {
    unsigned int v19 = 0x7FFFFFFF;
  }
  else {
    unsigned int v19 = v18;
  }
  size_t v20 = ((v16 + v17 + ((v15 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 40) & ~v15)) & ~v17)
      + *(void *)(*(void *)(v12 - 8) + 64);
  if (a3 <= v19)
  {
    int v21 = 0;
  }
  else if (v20 <= 3)
  {
    unsigned int v24 = ((a3 - v19 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
    if (HIWORD(v24))
    {
      int v21 = 4;
    }
    else if (v24 >= 0x100)
    {
      int v21 = 2;
    }
    else
    {
      int v21 = v24 > 1;
    }
  }
  else
  {
    int v21 = 1;
  }
  if (v19 < a2)
  {
    unsigned int v22 = ~v19 + a2;
    if (v20 < 4)
    {
      int v23 = (v22 >> (8 * v20)) + 1;
      if (v20)
      {
        int v25 = v22 & ~(-1 << (8 * v20));
        bzero(a1, v20);
        if (v20 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if (v20 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v20);
      *(_DWORD *)a1 = v22;
      int v23 = 1;
    }
    switch(v21)
    {
      case 1:
        a1[v20] = v23;
        break;
      case 2:
        *(_WORD *)&a1[v20] = v23;
        break;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&a1[v20] = v23;
        break;
      default:
        return;
    }
    return;
  }
  switch(v21)
  {
    case 1:
      a1[v20] = 0;
      if (a2) {
        goto LABEL_30;
      }
      return;
    case 2:
      *(_WORD *)&a1[v20] = 0;
      if (a2) {
        goto LABEL_30;
      }
      return;
    case 3:
LABEL_54:
      __break(1u);
      return;
    case 4:
      *(_DWORD *)&a1[v20] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (!a2) {
        return;
      }
LABEL_30:
      if (v8 == v19)
      {
        uint64_t v26 = v36;
        uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
        uint64_t v28 = (uint64_t)a1;
        uint64_t v29 = a2;
        uint64_t v30 = v8;
LABEL_32:
        v27(v28, v29, v30, v26);
        return;
      }
      unint64_t v31 = (unint64_t)&a1[v14 + 7] & 0xFFFFFFFFFFFFFFF8;
      if ((v18 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) != 0)
        {
          *(_OWORD *)(v31 + 8) = 0u;
          *(_OWORD *)(v31 + 24) = 0u;
          *(void *)unint64_t v31 = a2 ^ 0x80000000;
        }
        else
        {
          *(void *)(v31 + 24) = (a2 - 1);
        }
        return;
      }
      uint64_t v28 = (v31 + v15 + 40) & ~v15;
      if (v10 == v19)
      {
        uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v29 = a2;
        uint64_t v30 = v10;
        uint64_t v26 = v34;
        goto LABEL_32;
      }
      uint64_t v32 = (v28 + v16 + v17) & ~v17;
      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v13 + 56);
      v33(v32, a2);
      return;
  }
}

uint64_t sub_1C1DF581C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C1DF5A80(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFC5AC(0);
  MEMORY[0x1F4188790](v9);
  unsigned int v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1C1DF9030(a1, (uint64_t (*)(void))sub_1C1DF5A80);
    sub_1C1DEB20C(a2, (uint64_t (*)(void))sub_1C1DFC5AC, (void (*)(unint64_t, uint64_t))sub_1C1DF7CBC, (void (*)(unint64_t, uint64_t))sub_1C1E16400, (void (*)(void))sub_1C1DF5F00, (uint64_t)v8);
    uint64_t v13 = sub_1C1EAD368();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_1C1DF9030((uint64_t)v8, (uint64_t (*)(void))sub_1C1DF5A80);
  }
  else
  {
    sub_1C1DF7CBC(a1, (uint64_t)v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C1DF5AB4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1C1EAD368();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

void sub_1C1DF5A80(uint64_t a1)
{
}

uint64_t sub_1C1DF5AB4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1C1EAD368();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unsigned int v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1C1DF6BD0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    size_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      sub_1C1DFC5AC(0);
      return sub_1C1DF5CB0(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))sub_1C1DFC5AC);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1C1DF5F00();
    goto LABEL_7;
  }
  sub_1C1E000B8(v17, a3 & 1);
  unint64_t v24 = sub_1C1DF6BD0(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_1C1EAF7D8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  size_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1C1DF661C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))sub_1C1DFC5AC, (uint64_t (*)(uint64_t, unint64_t))sub_1C1DF7CBC);
}

uint64_t sub_1C1DF5CB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1DF5D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v7);
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  uint64_t v11 = sub_1C1EADA28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v12 + 40;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 40 + v7) & ~v14;
  uint64_t v16 = (v14 + 40 + v8) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v15, v16, v11);
  uint64_t v17 = *(void *)(v13 + 24);
  uint64_t v18 = sub_1C1EAD368();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 40))((v17 + *(unsigned __int8 *)(v19 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), (v17 + *(unsigned __int8 *)(v19 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), v18);
  return a1;
}

_OWORD *sub_1C1DF5E50(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 36);
  unint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1EAD9C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1C1DF5F00()
{
  return sub_1C1DFBBC4((uint64_t (*)(void))sub_1C1DFC5AC, (unint64_t *)&qword_1EBB67DA0, sub_1C1DFC5AC, (uint64_t (*)(void))sub_1C1DFC5AC);
}

uint64_t sub_1C1DF5F48(uint64_t a1)
{
  return sub_1C1DF5198(a1, (uint64_t (*)(void))sub_1C1DFC5AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C1DF5F74);
}

uint64_t sub_1C1DF5F74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C1DF5234(a1, a2, a3, (uint64_t (*)(void))sub_1C1DF5A80, (uint64_t (*)(void))sub_1C1DFC5AC, (void (*)(uint64_t, char *))sub_1C1DF8CF0, (void (*)(char *, char *))sub_1C1DF581C, a4);
}

uint64_t sub_1C1DF5FCC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t (*a4)(void)@<X4>, void (*a5)(char *, char *)@<X5>, void *a6@<X8>)
{
  int v23 = a5;
  uint64_t v10 = a3(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = sub_1C1EAD368();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  uint64_t v17 = a1[1];
  *a6 = v18;
  a6[1] = v17;
  uint64_t v19 = a4(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2 + *(int *)(v19 + 36), v13);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  size_t v20 = (uint64_t (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  v23(v12, v16);
  return v20(v24, 0);
}

uint64_t sub_1C1DF61A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C1DFEEB4(0);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF7CD4(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1C1DF9030(a1, (uint64_t (*)(void))sub_1C1DFEEB4);
    sub_1C1DEB20C(a2, (uint64_t (*)(void))sub_1C1DF7CD4, (void (*)(unint64_t, uint64_t))sub_1C1E07754, (void (*)(unint64_t, uint64_t))sub_1C1DEB7C4, (void (*)(void))sub_1C1DEB7E4, (uint64_t)v8);
    uint64_t v13 = sub_1C1EAD368();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_1C1DF9030((uint64_t)v8, (uint64_t (*)(void))sub_1C1DFEEB4);
  }
  else
  {
    sub_1C1E07754(a1, (uint64_t)v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C1DF6420((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1C1EAD368();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1C1DF640C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1E5FE0C);
}

uint64_t sub_1C1DF6420(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1C1EAD368();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1C1DF6BD0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    size_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      sub_1C1DF7CD4(0);
      return sub_1C1DF5CB0(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))sub_1C1DF7CD4);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1C1DEB7E4();
    goto LABEL_7;
  }
  sub_1C1E00BD0(v17, a3 & 1);
  unint64_t v24 = sub_1C1DF6BD0(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_1C1EAF7D8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  size_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1C1DF661C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))sub_1C1DF7CD4, (uint64_t (*)(uint64_t, unint64_t))sub_1C1E07754);
}

uint64_t sub_1C1DF661C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(uint64_t, unint64_t))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a4[6];
  uint64_t v13 = sub_1C1EAD368();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  uint64_t v14 = a4[7];
  uint64_t v15 = a5(0);
  uint64_t result = a6(a3, v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1);
  uint64_t v17 = a4[2];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    a4[2] = v19;
  }
  return result;
}

uint64_t sub_1C1DF6710(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  sub_1C1DFC5AC(0);
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v49 = (uint64_t)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v63 = (uint64_t)v47 - v13;
  uint64_t v14 = sub_1C1EAD368();
  uint64_t v50 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  BOOL v16 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF7678(0, &qword_1EBB674E8, (uint64_t (*)(uint64_t))sub_1C1DF76DC, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)v47 - v18;
  uint64_t v20 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = ~v20;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v23 = -v20;
  uint64_t v56 = a1;
  uint64_t v57 = a1 + 64;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  else {
    uint64_t v24 = -1;
  }
  uint64_t v58 = v21;
  uint64_t v59 = 0;
  uint64_t v60 = v24 & v22;
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  v47[1] = a1;
  swift_bridgeObjectRetain();
  v47[0] = a3;
  swift_retain();
  sub_1C1DF6E44((uint64_t)v19);
  sub_1C1DF76DC(0);
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 - 8);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  uint64_t v51 = v27 + 48;
  uint64_t v52 = v28;
  if (v28(v19, 1, v25) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C1E00B40();
    return swift_release();
  }
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  uint64_t v55 = v50 + 32;
  uint64_t v48 = (void (**)(char *, uint64_t))(v50 + 8);
  while (1)
  {
    uint64_t v32 = (uint64_t)&v19[*(int *)(v26 + 48)];
    uint64_t v33 = v14;
    v54(v16, v19, v14);
    sub_1C1DF7CBC(v32, v63);
    uint64_t v34 = *a5;
    unint64_t v36 = sub_1C1DF6BD0((uint64_t)v16);
    uint64_t v37 = *(void *)(v34 + 16);
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38)) {
      break;
    }
    char v40 = v35;
    if (*(void *)(v34 + 24) >= v39)
    {
      if (a4)
      {
        if (v35) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_1C1DF5F00();
        if (v40) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_1C1E000B8(v39, a4 & 1);
      unint64_t v41 = sub_1C1DF6BD0((uint64_t)v16);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_22;
      }
      unint64_t v36 = v41;
      if (v40)
      {
LABEL_7:
        uint64_t v30 = v63;
        uint64_t v31 = v49;
        sub_1C1DF8CF0(v63, v49);
        sub_1C1DF9030(v30, (uint64_t (*)(void))sub_1C1DFC5AC);
        uint64_t v14 = v33;
        (*v48)(v16, v33);
        sub_1C1DF5CB0(v31, *(void *)(*a5 + 56) + *(void *)(v53 + 72) * v36, (uint64_t (*)(void))sub_1C1DFC5AC);
        goto LABEL_8;
      }
    }
    uint64_t v43 = (void *)*a5;
    *(void *)(*a5 + 8 * (v36 >> 6) + 64) |= 1 << v36;
    uint64_t v14 = v33;
    v54((char *)(v43[6] + *(void *)(v50 + 72) * v36), v16, v33);
    sub_1C1DF7CBC(v63, v43[7] + *(void *)(v53 + 72) * v36);
    uint64_t v44 = v43[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_21;
    }
    v43[2] = v46;
LABEL_8:
    sub_1C1DF6E44((uint64_t)v19);
    a4 = 1;
    if (v52(v19, 1, v26) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1C1EAF7D8();
  __break(1u);
  return result;
}

unint64_t sub_1C1DF6BD0(uint64_t a1)
{
  sub_1C1EAD368();
  sub_1C1DF6E00(&qword_1EBB68168);
  uint64_t v2 = sub_1C1EAECB8();
  return sub_1C1DF6C54(a1, v2);
}

unint64_t sub_1C1DF6C54(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1C1EAD368();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1C1DF6E00((unint64_t *)&unk_1EBB66140);
      char v15 = sub_1C1EAED18();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_1C1DF6E00(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1EAD368();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DF6E44@<X0>(uint64_t a1@<X8>)
{
  sub_1C1DF76FC(0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF7678(0, &qword_1EBB674C8, (uint64_t (*)(uint64_t))sub_1C1DF76FC, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t result = MEMORY[0x1F4188790]((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v16 = v1[2];
  int64_t v15 = v1[3];
  int64_t v17 = v15;
  unint64_t v18 = v1[4];
  uint64_t v37 = v7;
  uint64_t v40 = result;
  if (v18)
  {
    uint64_t v38 = a1;
    uint64_t v39 = v14;
    uint64_t v19 = (v18 - 1) & v18;
    unint64_t v20 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
    uint64_t v21 = *(void *)(v13 + 48);
    uint64_t v22 = v13;
    uint64_t v23 = sub_1C1EAD368();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v12, v21 + *(void *)(*(void *)(v23 - 8) + 72) * v20, v23);
    uint64_t v24 = *(void *)(v22 + 56);
    sub_1C1DFC5AC(0);
    sub_1C1DF8CF0(v24 + *(void *)(*(void *)(v25 - 8) + 72) * v20, (uint64_t)&v12[*(int *)(v4 + 48)]);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v12, 0, 1, v4);
    a1 = v38;
    uint64_t v14 = v39;
    goto LABEL_23;
  }
  int64_t v26 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v27 = (unint64_t)(v16 + 64) >> 6;
  if (v26 < v27)
  {
    unint64_t v28 = *(void *)(v14 + 8 * v26);
    if (v28)
    {
LABEL_7:
      uint64_t v38 = a1;
      uint64_t v39 = v14;
      uint64_t v19 = (v28 - 1) & v28;
      unint64_t v20 = __clz(__rbit64(v28)) + (v26 << 6);
      int64_t v17 = v26;
      goto LABEL_3;
    }
    int64_t v29 = v15 + 2;
    int64_t v17 = v15 + 1;
    if (v15 + 2 < v27)
    {
      unint64_t v28 = *(void *)(v14 + 8 * v29);
      if (v28)
      {
LABEL_10:
        int64_t v26 = v29;
        goto LABEL_7;
      }
      int64_t v17 = v15 + 2;
      if (v15 + 3 < v27)
      {
        unint64_t v28 = *(void *)(v14 + 8 * (v15 + 3));
        if (v28)
        {
          int64_t v26 = v15 + 3;
          goto LABEL_7;
        }
        int64_t v29 = v15 + 4;
        int64_t v17 = v15 + 3;
        if (v15 + 4 < v27)
        {
          unint64_t v28 = *(void *)(v14 + 8 * v29);
          if (v28) {
            goto LABEL_10;
          }
          int64_t v26 = v15 + 5;
          int64_t v17 = v15 + 4;
          if (v15 + 5 < v27)
          {
            unint64_t v28 = *(void *)(v14 + 8 * v26);
            if (v28) {
              goto LABEL_7;
            }
            int64_t v17 = v27 - 1;
            int64_t v30 = v15 + 6;
            while (v27 != v30)
            {
              unint64_t v28 = *(void *)(v14 + 8 * v30++);
              if (v28)
              {
                int64_t v26 = v30 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v22 = v13;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v12, 1, 1, v4);
  uint64_t v19 = 0;
LABEL_23:
  *id v1 = v22;
  v1[1] = v14;
  v1[2] = v16;
  v1[3] = v17;
  v1[4] = v19;
  uint64_t v31 = (void (*)(uint64_t))v1[5];
  uint64_t v32 = v40;
  sub_1C1DF774C((uint64_t)v12, v40, &qword_1EBB674C8, (uint64_t (*)(uint64_t))sub_1C1DF76FC);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v32, 1, v4) == 1)
  {
    sub_1C1DF76DC(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a1, 1, 1, v33);
  }
  else
  {
    uint64_t v34 = v32;
    uint64_t v35 = (uint64_t)v37;
    sub_1C1DF7C54(v34, (uint64_t)v37, (uint64_t (*)(void))sub_1C1DF76FC);
    v31(v35);
    sub_1C1DF9030(v35, (uint64_t (*)(void))sub_1C1DF76FC);
    sub_1C1DF76DC(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a1, 0, 1, v36);
  }
}

uint64_t sub_1C1DF7298(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v35 = sub_1C1EADA28();
  uint64_t v8 = *(void *)(v35 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v7 <= v9) {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v10 = v7;
  }
  uint64_t v11 = sub_1C1EAD368();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = *(void *)(v8 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v12 + 80);
  if (v10 <= *(_DWORD *)(v12 + 84)) {
    unsigned int v17 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v17 = v10;
  }
  if (v17 <= 0x7FFFFFFF) {
    unsigned int v18 = 0x7FFFFFFF;
  }
  else {
    unsigned int v18 = v17;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v18) {
    goto LABEL_31;
  }
  unint64_t v19 = ((v15 + v16 + ((v14 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 40) & ~v14)) & ~v16)
      + *(void *)(*(void *)(v11 - 8) + 64);
  char v20 = 8 * v19;
  if (v19 > 3) {
    goto LABEL_13;
  }
  unsigned int v23 = ((a2 - v18 + ~(-1 << v20)) >> v20) + 1;
  if (HIWORD(v23))
  {
    int v21 = *(_DWORD *)((char *)a1 + v19);
    if (v21) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v23 <= 0xFF)
    {
      if (v23 < 2) {
        goto LABEL_31;
      }
LABEL_13:
      int v21 = *((unsigned __int8 *)a1 + v19);
      if (!*((unsigned char *)a1 + v19)) {
        goto LABEL_31;
      }
LABEL_21:
      int v24 = (v21 - 1) << v20;
      if (v19 > 3) {
        int v24 = 0;
      }
      if (v19)
      {
        if (v19 <= 3) {
          int v25 = v19;
        }
        else {
          int v25 = 4;
        }
        switch(v25)
        {
          case 2:
            int v26 = *a1;
            break;
          case 3:
            int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v26 = *(_DWORD *)a1;
            break;
          default:
            int v26 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v26 = 0;
      }
      return v18 + (v26 | v24) + 1;
    }
    int v21 = *(unsigned __int16 *)((char *)a1 + v19);
    if (*(unsigned __int16 *)((char *)a1 + v19)) {
      goto LABEL_21;
    }
  }
LABEL_31:
  if (v7 == v18)
  {
    int64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    uint64_t v28 = (uint64_t)a1;
    uint64_t v29 = v7;
    uint64_t v30 = v5;
LABEL_33:
    return v27(v28, v29, v30);
  }
  unint64_t v31 = ((unint64_t)a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  if ((v17 & 0x80000000) != 0)
  {
    uint64_t v28 = (v31 + v14 + 40) & ~v14;
    if (v9 == v18)
    {
      int64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
      uint64_t v29 = v9;
      uint64_t v30 = v35;
      goto LABEL_33;
    }
    uint64_t v33 = (v28 + v15 + v16) & ~v16;
    uint64_t v34 = *(uint64_t (**)(uint64_t))(v12 + 48);
    return v34(v33);
  }
  else
  {
    unint64_t v32 = *(void *)(v31 + 24);
    if (v32 >= 0xFFFFFFFF) {
      LODWORD(v32) = -1;
    }
    return (v32 + 1);
  }
}

uint64_t sub_1C1DF7600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1E1ABF8);
}

void sub_1C1DF7614(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DF7678(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DF76DC(uint64_t a1)
{
}

void sub_1C1DF76FC(uint64_t a1)
{
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C1DF774C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C1DF7678(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1DF77CC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = a1 + *(int *)(a2(0) + 48);
  uint64_t v9 = a5 + *(int *)(a3(0) + 48);
  uint64_t v10 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a5, a1, v10);
  return a4(v8, v9);
}

void sub_1C1DF788C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_1C1EAD368();
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C1DF7908(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_1C1EAD368();
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C1DF7980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1DF77CC(a1, (uint64_t (*)(void))sub_1C1DF76FC, (uint64_t (*)(void))sub_1C1DF76DC, sub_1C1DF8CF0, a2);
}

uint64_t sub_1C1DF79C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v18[0] = a4;
  sub_1C1DFC5AC(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = a3;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  sub_1C1DF8CF0(a1, (uint64_t)v10);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = a2;
  sub_1C1DF7CBC((uint64_t)v10, v13 + v12);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  sub_1C1DF8CF0(a1, (uint64_t)v10);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a2;
  sub_1C1DF7CBC((uint64_t)v10, v15 + v12);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1C1E66EDC;
  *(void *)(v16 + 24) = v15;
  sub_1C1DF7D08();
  sub_1C1DF9B3C(&qword_1EBB67CD0, (void (*)(uint64_t))sub_1C1DF7D08);
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1C1EAEA58();
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1C1DF7C54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1DF7CBC(uint64_t a1, uint64_t a2)
{
  return sub_1C1DF7C54(a1, a2, (uint64_t (*)(void))sub_1C1DFC5AC);
}

void sub_1C1DF7CD4(uint64_t a1)
{
}

void sub_1C1DF7D08()
{
  if (!qword_1EBB67CD8)
  {
    sub_1C1E0BF98(255, &qword_1EBB676F8, (unint64_t *)&qword_1EBB66FA8, MEMORY[0x1E4F67380], (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for AnyGenerator);
    unint64_t v0 = sub_1C1EAE7D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67CD8);
    }
  }
}

uint64_t sub_1C1DF7D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(unsigned char *, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v9 = sub_1C1EADA28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v52 = &v45[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v45[-v13];
  sub_1C1DF8D08(0);
  uint64_t v51 = v15;
  MEMORY[0x1F4188790](v15);
  unsigned int v17 = &v45[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_1C1EAE568();
  uint64_t v56 = *(void *)(v18 - 8);
  uint64_t v57 = v18;
  MEMORY[0x1F4188790](v18);
  char v20 = &v45[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C1EAE4F8();
  uint64_t v59 = a2;
  sub_1C1DF8AE0(a2, (uint64_t)v62, (uint64_t (*)(void))sub_1C1DF9198);
  uint64_t v58 = a1;
  sub_1C1DF8AE0(a1, (uint64_t)v17, (uint64_t (*)(void))sub_1C1DF8D08);
  uint64_t v54 = v14;
  uint64_t v55 = v10;
  int v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v60 = v9;
  v21(v14, a3, v9);
  uint64_t v22 = sub_1C1EAE558();
  os_log_type_t v23 = sub_1C1EAF0D8();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v49 = a3;
    uint64_t v26 = v25;
    uint64_t v48 = swift_slowAlloc();
    uint64_t v61 = v48;
    *(_DWORD *)uint64_t v26 = 136446978;
    os_log_t v47 = v22;
    uint64_t v64 = (uint64_t)v53;
    swift_getMetatypeMetadata();
    int v46 = v24;
    uint64_t v27 = sub_1C1EAED68();
    uint64_t v50 = a5;
    uint64_t v64 = sub_1C1DF8D44(v27, v28, &v61);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    uint64_t v53 = v21;
    __swift_project_boxed_opaque_existential_1(v63, v63[3]);
    uint64_t v29 = sub_1C1EAD5B8();
    uint64_t v64 = sub_1C1DF8D44(v29, v30, &v61);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    sub_1C1DF9030((uint64_t)v62, (uint64_t (*)(void))sub_1C1DF9198);
    *(_WORD *)(v26 + 22) = 2082;
    unint64_t v31 = (void *)sub_1C1EAD9A8();
    uint64_t v32 = sub_1C1EAD798();
    unint64_t v34 = v33;

    uint64_t v64 = sub_1C1DF8D44(v32, v34, &v61);
    sub_1C1EAF2C8();
    a5 = v50;
    swift_bridgeObjectRelease();
    sub_1C1DF9030((uint64_t)v17, (uint64_t (*)(void))sub_1C1DF8D08);
    *(_WORD *)(v26 + 32) = 2082;
    uint64_t v35 = v54;
    uint64_t v36 = v60;
    v53(v52, (uint64_t)v54, v60);
    uint64_t v37 = sub_1C1EAED68();
    uint64_t v64 = sub_1C1DF8D44(v37, v38, &v61);
    sub_1C1EAF2C8();
    int v21 = v53;
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v35, v36);
    uint64_t v22 = v47;
    _os_log_impl(&dword_1C1DD2000, v47, (os_log_type_t)v46, "[%{public}s]: delegate returned pipeline <%{public}s> for profile %{public}s and context %{public}s.", (uint8_t *)v26, 0x2Au);
    uint64_t v39 = v48;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v39, -1, -1);
    uint64_t v40 = v26;
    a3 = v49;
    MEMORY[0x1C874D2E0](v40, -1, -1);
  }
  else
  {
    sub_1C1DF9030((uint64_t)v62, (uint64_t (*)(void))sub_1C1DF9198);
    sub_1C1DF9030((uint64_t)v17, (uint64_t (*)(void))sub_1C1DF8D08);
    uint64_t v36 = v60;
    (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v54, v60);
  }

  (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v20, v57);
  sub_1C1DF8AE0(v58, a5, (uint64_t (*)(void))sub_1C1DF8D08);
  uint64_t v41 = v59 + 16;
  sub_1C1DFC5AC(0);
  uint64_t v43 = v42;
  sub_1C1DFE408(v41, a5 + *(int *)(v42 + 28));
  v21((unsigned char *)(a5 + *(int *)(v43 + 32)), a3, v36);
  return sub_1C1EAD358();
}

uint64_t sub_1C1DF8364(uint64_t (**a1)(void), uint64_t a2, uint64_t (**a3)(void))
{
  uint64_t v54 = a3;
  sub_1C1DF8D08(0);
  uint64_t v56 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v55 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C1DF9BC8(0, &qword_1EBB650E0, (uint64_t (*)(uint64_t))sub_1C1DFB308, MEMORY[0x1E4F1AC18]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v49[-v9];
  sub_1C1DFC5AC(0);
  uint64_t v57 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v60 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = &v49[-v15];
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = &v49[-v18];
  MEMORY[0x1F4188790](v17);
  int v21 = &v49[-v20];
  uint64_t v22 = sub_1C1EAE568();
  uint64_t v58 = *(void *)(v22 - 8);
  uint64_t v59 = v22;
  MEMORY[0x1F4188790](v22);
  int v24 = &v49[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v26 = Strong;
    sub_1C1EAE4F8();
    sub_1C1DF8CF0((uint64_t)a1, (uint64_t)v21);
    sub_1C1DF8CF0((uint64_t)a1, (uint64_t)v19);
    sub_1C1DF8CF0((uint64_t)a1, (uint64_t)v16);
    sub_1C1DF8CF0((uint64_t)a1, (uint64_t)v60);
    uint64_t v27 = sub_1C1EAE558();
    os_log_type_t v28 = sub_1C1EAF0D8();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v62 = v52;
      *(_DWORD *)uint64_t v30 = 136447234;
      os_log_t v51 = v27;
      uint64_t v61 = (uint64_t)v54;
      swift_getMetatypeMetadata();
      int v50 = v29;
      uint64_t v31 = sub_1C1EAED68();
      uint64_t v53 = v26;
      uint64_t v61 = sub_1C1DF8D44(v31, v32, &v62);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      unint64_t v33 = &v21[*(int *)(v57 + 28)];
      uint64_t v54 = a1;
      __swift_project_boxed_opaque_existential_1(v33, v33[3]);
      uint64_t v34 = sub_1C1EAD5B8();
      uint64_t v61 = sub_1C1DF8D44(v34, v35, &v62);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      sub_1C1DF9030((uint64_t)v21, (uint64_t (*)(void))sub_1C1DFC5AC);
      *(_WORD *)(v30 + 22) = 2082;
      sub_1C1DF8AE0((uint64_t)v19, (uint64_t)v55, (uint64_t (*)(void))sub_1C1DF8D08);
      uint64_t v36 = sub_1C1EAED68();
      uint64_t v61 = sub_1C1DF8D44(v36, v37, &v62);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      sub_1C1DF9030((uint64_t)v19, (uint64_t (*)(void))sub_1C1DFC5AC);
      *(_WORD *)(v30 + 32) = 2082;
      unint64_t v38 = (void *)sub_1C1EAD9A8();
      uint64_t v39 = sub_1C1EAD798();
      unint64_t v41 = v40;

      uint64_t v61 = sub_1C1DF8D44(v39, v41, &v62);
      sub_1C1EAF2C8();
      a1 = v54;
      swift_bridgeObjectRelease();
      sub_1C1DF9030((uint64_t)v16, (uint64_t (*)(void))sub_1C1DFC5AC);
      *(_WORD *)(v30 + 42) = 2082;
      uint64_t v42 = v60;
      sub_1C1EAD9D8();
      sub_1C1DF9148(0, &qword_1EBB66178);
      uint64_t v43 = sub_1C1EAED68();
      uint64_t v61 = sub_1C1DF8D44(v43, v44, &v62);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      sub_1C1DF9030((uint64_t)v42, (uint64_t (*)(void))sub_1C1DFC5AC);
      os_log_t v45 = v51;
      _os_log_impl(&dword_1C1DD2000, v51, (os_log_type_t)v50, "[%{public}s][%{public}s]: dispatching GeneratorPipeline <%{public}s> for profile %{public}s and context %{public}s to queue for execution", (uint8_t *)v30, 0x34u);
      uint64_t v46 = v52;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v46, -1, -1);
      MEMORY[0x1C874D2E0](v30, -1, -1);
    }
    else
    {
      sub_1C1DF9030((uint64_t)v21, (uint64_t (*)(void))sub_1C1DFC5AC);
      sub_1C1DF9030((uint64_t)v19, (uint64_t (*)(void))sub_1C1DFC5AC);
      sub_1C1DF9030((uint64_t)v16, (uint64_t (*)(void))sub_1C1DFC5AC);
      sub_1C1DF9030((uint64_t)v60, (uint64_t (*)(void))sub_1C1DFC5AC);
    }
    (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v24, v59);
    uint64_t v61 = sub_1C1DF9448(a1);
    sub_1C1DF91CC(0);
    sub_1C1DF9B3C((unint64_t *)&qword_1EBB65018, sub_1C1DF91CC);
    uint64_t v47 = sub_1C1EAEA38();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1C1DFB308();
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    sub_1C1EAE8C8();
    sub_1C1E66208();
    uint64_t v47 = sub_1C1EAEA38();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v47;
}

uint64_t sub_1C1DF8A78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1DF8AE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C1DF8B48(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1C1DFBA4C(a4, a5);
    unint64_t v8 = type metadata accessor for AnyPipeline();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DF8BDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1C1DFBA94(a4, a5);
    unint64_t v8 = type metadata accessor for AnyPipeline();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DF8C5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1C1E22F88(a4, a5);
    unint64_t v8 = type metadata accessor for AnyPipeline();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1DF8CF0(uint64_t a1, uint64_t a2)
{
  return sub_1C1DF8AE0(a1, a2, (uint64_t (*)(void))sub_1C1DFC5AC);
}

void sub_1C1DF8D08(uint64_t a1)
{
}

uint64_t sub_1C1DF8D44(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1C1DF8E18(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1C1DF8FD4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1C1DF8FD4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1C1DF8E18(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1C1EAF2D8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1C1DFCF40(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1C1EAF508();
  if (!v8)
  {
    sub_1C1EAF618();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1C1EAF6A8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1C1DF8FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C1DF9030(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C1DF9090(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DF90F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C1EAEF28();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1DF9148(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1C1DF9198(uint64_t a1)
{
}

void sub_1C1DF91CC(uint64_t a1)
{
}

uint64_t sub_1C1DF9200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 24);
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

void *sub_1C1DF92C4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void sub_1C1DF92F4(uint64_t a1)
{
}

void sub_1C1DF9328()
{
  if (!qword_1EBB65188)
  {
    sub_1C1EADEC8();
    sub_1C1EADE08();
    sub_1C1DECE04(&qword_1EBB647D0, MEMORY[0x1E4F67348]);
    unint64_t v0 = sub_1C1EAF8B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65188);
    }
  }
}

uint64_t sub_1C1DF93D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  return __swift_destroy_boxed_opaque_existential_1(v4);
}

uint64_t sub_1C1DF9440()
{
  return swift_release();
}

uint64_t sub_1C1DF9448(uint64_t (**a1)(void))
{
  uint64_t v2 = v1;
  uint64_t v43 = a1;
  sub_1C1DFB4DC(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  uint64_t v54 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v52 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFC5AC(0);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v44 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  sub_1C1DFB5F8();
  uint64_t v46 = v8;
  uint64_t v48 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFB518();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF9C54(0, &qword_1EBB64F30, (uint64_t (*)(uint64_t))sub_1C1DFB518, sub_1C1DFB5C4, MEMORY[0x1E4F1AA60]);
  uint64_t v47 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v43 - v17;
  os_log_t v45 = v1 + 20;
  uint64_t v19 = v1[23];
  uint64_t v20 = v1[24];
  __swift_project_boxed_opaque_existential_1(v1 + 20, v19);
  uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
  uint64_t v21 = (uint64_t)v43;
  uint64_t v22 = (*v43)();
  sub_1C1DFB710(0);
  uint64_t v55 = v23;
  uint64_t v56 = sub_1C1DF9B3C(&qword_1EBB67718, sub_1C1DFB710);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1C1DF79C0(v21, KeyPath, v22, (uint64_t)v10);
  swift_release();
  swift_release();
  sub_1C1DF8CF0(v21, (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v25 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  uint64_t v26 = swift_allocObject();
  sub_1C1DF7CBC((uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25);
  sub_1C1DFB68C();
  sub_1C1DF9B3C(&qword_1EBB67C28, (void (*)(uint64_t))sub_1C1DFB5F8);
  uint64_t v27 = v46;
  sub_1C1EAEA68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v27);
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  sub_1C1DFB5C4();
  uint64_t v28 = v49;
  sub_1C1EAEB08();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v28);
  sub_1C1DFB440();
  uint64_t v29 = v47;
  uint64_t v30 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v29);
  uint64_t v31 = v2[23];
  uint64_t v32 = v2[24];
  __swift_project_boxed_opaque_existential_1(v45, v31);
  uint64_t v57 = v30;
  sub_1C1DF8D08(0);
  uint64_t v34 = v21 + *(int *)(v33 + 36);
  unint64_t v35 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v32 + 40);
  sub_1C1DF9BC8(0, &qword_1EBB64FE0, (uint64_t (*)(uint64_t))sub_1C1DFB68C, MEMORY[0x1E4F1AAE0]);
  uint64_t v37 = v36;
  unint64_t v38 = sub_1C1DFB3B8();
  uint64_t v57 = v35(&v57, v34, v37, v38, v31, v32);
  swift_allocObject();
  swift_weakInit();
  sub_1C1DFB308();
  sub_1C1DF91CC(0);
  sub_1C1DF9B3C((unint64_t *)&qword_1EBB65018, sub_1C1DF91CC);
  uint64_t v39 = v52;
  sub_1C1EAEAD8();
  swift_release();
  swift_release();
  sub_1C1DF9B3C(&qword_1EBB64EB8, sub_1C1DFB4DC);
  uint64_t v40 = v53;
  uint64_t v41 = sub_1C1EAEA38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v40);
  return v41;
}

uint64_t sub_1C1DF9B3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

void sub_1C1DF9BC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    uint64_t v8 = sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C1DF9C54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
    void v11[2] = a4();
    v11[3] = MEMORY[0x1E4FBC0F0];
    unint64_t v9 = a5(a1, v11);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C1DF9D04()
{
  return sub_1C1DFB178();
}

uint64_t sub_1C1DF9D28(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  v21[1] = a1;
  sub_1C1DFA600(0, &qword_1EBB67F50, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = sub_1C1DF9F8C(255, (unint64_t *)&qword_1EBB68388);
  uint64_t v11 = sub_1C1DFAEA0((unint64_t *)&qword_1EBB67F58, (unint64_t *)&qword_1EBB68388);
  uint64_t v22 = a3;
  uint64_t v23 = v10;
  uint64_t v24 = a4;
  uint64_t v25 = v11;
  uint64_t v12 = sub_1C1EAE5A8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v21 - v14;
  sub_1C1DF9FC8(a2);
  uint64_t v17 = v16;
  uint64_t v22 = v16;
  uint64_t v18 = sub_1C1EAF158();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 1, 1, v18);
  sub_1C1EAEB28();
  sub_1C1DFAEE4((uint64_t)v9);
  swift_getWitnessTable();
  uint64_t v19 = sub_1C1EAEA38();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v19;
}

uint64_t sub_1C1DF9F8C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1C1DF9FC8(uint64_t a1)
{
  uint64_t v64 = a1;
  sub_1C1DFAE0C();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void (**)(char *, void, uint64_t))((char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1C1EAD948();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C1EAD668();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v63 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v58 - v14;
  if (sub_1C1EADF78())
  {
    uint64_t v61 = v7;
    uint64_t v62 = v15;
    uint64_t v59 = v1;
    uint64_t v60 = v6;
    sub_1C1DFA600(0, &qword_1EBB68278, MEMORY[0x1E4F67030], MEMORY[0x1E4FBBE00]);
    uint64_t v16 = *(void *)(v11 + 72);
    unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C1EB0800;
    unint64_t v19 = v18 + v17;
    uint64_t v20 = *(void (**)(char *, void, uint64_t))(v11 + 104);
    v20((char *)v19, *MEMORY[0x1E4F66FC8], v10);
    uint64_t v21 = *MEMORY[0x1E4F66FE0];
    uint64_t v58 = v20;
    v20((char *)(v19 + v16), v21, v10);
    uint64_t v22 = sub_1C1DFA664(v18);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v65 = v22;
    uint64_t v23 = self;
    id v24 = objc_msgSend(v23, sel_sharedBehavior);
    if (v24)
    {
      uint64_t v25 = v24;
      id v26 = objc_msgSend(v24, sel_features);

      if (v26)
      {
        unsigned int v27 = objc_msgSend(v26, sel_stanley);

        uint64_t v28 = (uint64_t)v62;
        if (!v27) {
          goto LABEL_8;
        }
        id v29 = objc_msgSend(v23, sel_sharedBehavior);
        if (v29)
        {
          uint64_t v30 = v29;
          unsigned int v31 = objc_msgSend(v29, sel_isiPad);

          if (v31)
          {
            uint64_t v32 = v63;
            v58(v63, *MEMORY[0x1E4F67008], v10);
            sub_1C1DFA800(v28, v32);
            (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v28, v10);
          }
LABEL_8:
          uint64_t v33 = (void *)sub_1C1EAD9A8();
          sub_1C1EAD958();
          uint64_t v34 = sub_1C1EAD978();
          uint64_t v35 = sub_1C1EAD9B8();
          uint64_t v36 = (char *)v5 + v3[12];
          uint64_t v37 = v3[16];
          uint64_t v38 = v3[20];
          *uint64_t v5 = v33;
          uint64_t v40 = v60;
          uint64_t v39 = v61;
          (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v36, v9, v60);
          swift_bridgeObjectRelease();
          *(void *)((char *)v5 + v37) = v34;
          *(void *)((char *)v5 + v38) = v35;
          id v41 = v33;
          uint64_t v42 = (void *)sub_1C1EAD7E8();
          LOBYTE(v37) = sub_1C1EAD7C8();

          if (v37)
          {
            uint64_t v43 = sub_1C1DFB10C(v65, v34);
            swift_bridgeObjectRelease();
            uint64_t v44 = *(void *)(v43 + 16);
            swift_release();
            if (v44)
            {

              os_log_t v45 = (void *)v59[9];
LABEL_21:
              uint64_t v55 = *(void (**)(char *, uint64_t))(v39 + 8);
LABEL_25:
              v45;
              v55(v36, v40);
              return;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          int v48 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v36, v40);
          if (v48 == *MEMORY[0x1E4F671A8])
          {
            id v49 = v41;
            uint64_t v50 = (void *)sub_1C1EAD7E8();
            char v51 = sub_1C1EAD7C8();

            if (v51)
            {

              os_log_t v45 = (void *)v59[7];
              goto LABEL_21;
            }
          }
          else if (v48 == *MEMORY[0x1E4F671A0])
          {
            id v52 = v41;
            uint64_t v53 = (void *)sub_1C1EAD7E8();
            char v54 = sub_1C1EAD7C8();

            if (v54)
            {

              os_log_t v45 = (void *)v59[6];
              goto LABEL_21;
            }
          }
          uint64_t v56 = (void *)sub_1C1EAD7E8();
          char v57 = sub_1C1EAD7C8();

          uint64_t v55 = *(void (**)(char *, uint64_t))(v39 + 8);
          if (v57) {
            os_log_t v45 = (void *)v59[8];
          }
          else {
            os_log_t v45 = (void *)v59[6];
          }
          goto LABEL_25;
        }
        goto LABEL_28;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  uint64_t v46 = (void *)v1[10];
  id v47 = v46;
}

void sub_1C1DFA59C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DFA600(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1DFA664(uint64_t a1)
{
  uint64_t v2 = sub_1C1EAD668();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1C1DFAB24(&qword_1EBB66160, MEMORY[0x1E4F67030]);
  uint64_t result = sub_1C1EAEF68();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1C1DFA800((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1C1DFA800(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C1EAD668();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1C1DFAB24(&qword_1EBB66160, MEMORY[0x1E4F67030]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1C1EAECB8();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1C1DFAB24(&qword_1EBB66168, MEMORY[0x1E4F67030]);
      char v21 = sub_1C1EAED18();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C1DFAB6C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1C1DFAB24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DFAB6C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1C1EAD668();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C1E3353C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C1E34C40();
      goto LABEL_12;
    }
    sub_1C1E35A58();
  }
  uint64_t v12 = *v3;
  sub_1C1DFAB24(&qword_1EBB66160, MEMORY[0x1E4F67030]);
  uint64_t v13 = sub_1C1EAECB8();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1C1DFAB24(&qword_1EBB66168, MEMORY[0x1E4F67030]);
      char v21 = sub_1C1EAED18();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C1EAF7C8();
  __break(1u);
  return result;
}

void sub_1C1DFAE0C()
{
  if (!qword_1EBB647C8)
  {
    sub_1C1EAD948();
    sub_1C1E811F4();
    sub_1C1E81288();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EBB647C8);
    }
  }
}

uint64_t sub_1C1DFAEA0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1DF9F8C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DFAEE4(uint64_t a1)
{
  sub_1C1DFA600(0, &qword_1EBB67F50, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1DFAF70(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(a2 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a3((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v5);
    swift_release();
  }
  else
  {
    unint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = a3((char *)v10, v7, a2, v5);
    swift_release();
    MEMORY[0x1C874D2E0](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_1C1DFB10C(uint64_t a1, uint64_t a2)
{
  return sub_1C1DFAF70(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1C1DFF414);
}

void sub_1C1DFB17C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1C1DFBA4C(a4, a5);
    unint64_t v8 = type metadata accessor for AnyPipelineProvider();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DFB210(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    sub_1C1DF91CC(255);
    sub_1C1DF9BC8(255, a3, a4, MEMORY[0x1E4F1AAE0]);
    sub_1C1DF9B3C((unint64_t *)&qword_1EBB65018, sub_1C1DF91CC);
    a5();
    unint64_t v9 = sub_1C1EAE6C8();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C1DFB2FC()
{
  return *(void *)(*(void *)v0 + 32);
}

void sub_1C1DFB308()
{
  if (!qword_1EBB678D0)
  {
    sub_1C1E10020(255, (unint64_t *)&qword_1EBB66FA8);
    unint64_t v0 = type metadata accessor for GeneratorPipelineManagerWrapper();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB678D0);
    }
  }
}

uint64_t sub_1C1DFB370(uint64_t (*a1)(unint64_t))
{
  return a1(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)));
}

unint64_t sub_1C1DFB3B8()
{
  unint64_t result = qword_1EBB64FD8;
  if (!qword_1EBB64FD8)
  {
    sub_1C1DF9BC8(255, &qword_1EBB64FE0, (uint64_t (*)(uint64_t))sub_1C1DFB68C, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64FD8);
  }
  return result;
}

unint64_t sub_1C1DFB440()
{
  unint64_t result = qword_1EBB64F28;
  if (!qword_1EBB64F28)
  {
    sub_1C1DF9C54(255, &qword_1EBB64F30, (uint64_t (*)(uint64_t))sub_1C1DFB518, sub_1C1DFB5C4, MEMORY[0x1E4F1AA60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64F28);
  }
  return result;
}

void sub_1C1DFB4DC(uint64_t a1)
{
}

void sub_1C1DFB518()
{
  if (!qword_1EBB67C80)
  {
    sub_1C1DFB5F8();
    sub_1C1DFB68C();
    sub_1C1DF9B3C(&qword_1EBB67C28, (void (*)(uint64_t))sub_1C1DFB5F8);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67C80);
    }
  }
}

uint64_t sub_1C1DFB5C4()
{
  return sub_1C1DF9B3C(&qword_1EBB67C78, (void (*)(uint64_t))sub_1C1DFB518);
}

void sub_1C1DFB5F8()
{
  if (!qword_1EBB67C30)
  {
    sub_1C1DF7D08();
    sub_1C1DF9B3C(&qword_1EBB67CD0, (void (*)(uint64_t))sub_1C1DF7D08);
    unint64_t v0 = sub_1C1EAE5B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67C30);
    }
  }
}

void sub_1C1DFB68C()
{
  if (!qword_1EBB67890)
  {
    sub_1C1E0BF98(255, &qword_1EBB676F8, (unint64_t *)&qword_1EBB66FA8, MEMORY[0x1E4F67380], (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for AnyGenerator);
    unint64_t v0 = type metadata accessor for GeneratorPipelineManagerWrapper();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67890);
    }
  }
}

void sub_1C1DFB710(uint64_t a1)
{
}

uint64_t sub_1C1DFB74C()
{
  return sub_1C1DFB370((uint64_t (*)(unint64_t))sub_1C1DFB764);
}

uint64_t sub_1C1DFB764()
{
  sub_1C1DFBAE8();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = sub_1C1EADAF8();
  sub_1C1DFB994(0, &qword_1EBB66EE0, (unint64_t *)&qword_1EBB66218);
  sub_1C1DFBBA4(0);
  sub_1C1DFB9FC(&qword_1EBB66ED8, &qword_1EBB66EE0, (unint64_t *)&qword_1EBB66218);
  sub_1C1EAEA68();
  swift_release();
  sub_1C1DFBA4C(&qword_1EBB67C68, (void (*)(uint64_t))sub_1C1DFBAE8);
  uint64_t v5 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

void sub_1C1DFB930(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for AnyGenerator();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1DFB994(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C1DF9148(255, a3);
    unint64_t v4 = sub_1C1EAE7D8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1DFB9FC(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1DFB994(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DFBA4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DFBA94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1DFBAE8()
{
  if (!qword_1EBB67C70)
  {
    sub_1C1DFB994(255, &qword_1EBB66EE0, (unint64_t *)&qword_1EBB66218);
    sub_1C1DFBBA4(255);
    sub_1C1DFB9FC(&qword_1EBB66ED8, &qword_1EBB66EE0, (unint64_t *)&qword_1EBB66218);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67C70);
    }
  }
}

void sub_1C1DFBBA4(uint64_t a1)
{
}

void *sub_1C1DFBBC4(uint64_t (*a1)(void), unint64_t *a2, void (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t v46 = a4;
  uint64_t v7 = a1(0);
  uint64_t v45 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v44 = (char *)&v37 - v8;
  uint64_t v43 = sub_1C1EAD368();
  uint64_t v9 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v42 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFC5E0(0, a2, a3);
  uint64_t v37 = v4;
  uint64_t v11 = *v4;
  uint64_t v12 = sub_1C1EAF658();
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v48 = v12;
  if (!v13)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v36 = v48;
    uint64_t v35 = v37;
LABEL_25:
    *uint64_t v35 = v36;
    return result;
  }
  uint64_t v14 = v12;
  uint64_t result = (void *)(v12 + 64);
  unint64_t v16 = (unint64_t)((1 << *(unsigned char *)(v14 + 32)) + 63) >> 6;
  if (v14 != v11 || (unint64_t)result >= v11 + 64 + 8 * v16)
  {
    uint64_t result = memmove(result, (const void *)(v11 + 64), 8 * v16);
    uint64_t v14 = v48;
  }
  uint64_t v38 = v11 + 64;
  int64_t v17 = 0;
  *(void *)(v14 + 16) = *(void *)(v11 + 16);
  uint64_t v18 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v47 = v11;
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v11 + 64);
  uint64_t v41 = v9 + 16;
  int64_t v39 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v40 = v9 + 32;
  uint64_t v22 = v42;
  uint64_t v21 = v43;
  uint64_t v23 = (uint64_t)v44;
  for (i = v48; ; uint64_t result = (void *)sub_1C1DFC3B4(v23, *(void *)(i + 56) + v31, v30))
  {
    if (v20)
    {
      unint64_t v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v26 = v25 | (v17 << 6);
      uint64_t v27 = v47;
      goto LABEL_9;
    }
    int64_t v32 = v17 + 1;
    uint64_t v27 = v47;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v32 >= v39) {
      goto LABEL_23;
    }
    unint64_t v33 = *(void *)(v38 + 8 * v32);
    ++v17;
    if (!v33)
    {
      int64_t v17 = v32 + 1;
      if (v32 + 1 >= v39) {
        goto LABEL_23;
      }
      unint64_t v33 = *(void *)(v38 + 8 * v17);
      if (!v33) {
        break;
      }
    }
LABEL_22:
    unint64_t v20 = (v33 - 1) & v33;
    unint64_t v26 = __clz(__rbit64(v33)) + (v17 << 6);
LABEL_9:
    unint64_t v28 = *(void *)(v9 + 72) * v26;
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v22, *(void *)(v27 + 48) + v28, v21);
    uint64_t v29 = *(void *)(v27 + 56);
    uint64_t v30 = v46;
    unint64_t v31 = *(void *)(v45 + 72) * v26;
    sub_1C1DFBF3C(v29 + v31, v23, v46);
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(void *)(i + 48) + v28, v22, v21);
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v39)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v35 = v37;
    uint64_t v36 = v48;
    goto LABEL_25;
  }
  unint64_t v33 = *(void *)(v38 + 8 * v34);
  if (v33)
  {
    int64_t v17 = v34;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v17 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v17 >= v39) {
      goto LABEL_23;
    }
    unint64_t v33 = *(void *)(v38 + 8 * v17);
    ++v34;
    if (v33) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C1DFBF3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1DFBFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v4);
  uint64_t v5 = sub_1C1EADA28();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v4 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = sub_1C1EAD368();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(unint64_t, uint64_t))(v11 + 8);
  uint64_t v13 = v10;
  unint64_t v14 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return v12(v14, v13);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1C1DFC0F8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1DFC188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 24);
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  (**(void (***)(unint64_t, unint64_t))(v9 - 8))(v7, v8);
  uint64_t v10 = sub_1C1EADA28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11 + 16;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 40 + v7) & ~v13;
  uint64_t v15 = (v13 + 40 + v8) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
  uint64_t v16 = *(void *)(v12 + 48);
  uint64_t v17 = sub_1C1EAD368();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 16))((v16 + *(unsigned __int8 *)(v18 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (v16 + *(unsigned __int8 *)(v18 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), v17);
  return a1;
}

void *sub_1C1DFC2F4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 36);
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1EAD9C8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C1DFC3B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C1DFC41C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DFC480(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DFC4E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DFC548(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1DFC5AC(uint64_t a1)
{
}

void sub_1C1DFC5E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_1C1EAD368();
    a3(255);
    sub_1C1DFFC68(&qword_1EBB68168, MEMORY[0x1E4F27990]);
    unint64_t v5 = sub_1C1EAF698();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C1DFC68C(uint64_t a1)
{
}

uint64_t sub_1C1DFC6C0(void *a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v60 = a7;
  uint64_t v58 = a6;
  char v54 = a3;
  uint64_t v55 = a10;
  uint64_t v53 = a9;
  char v16 = a4 & 1;
  uint64_t v49 = sub_1C1EADBF8();
  MEMORY[0x1F4188790](v49);
  uint64_t v45 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFCD8C(0, &qword_1EBB65970, MEMORY[0x1E4F67270], MEMORY[0x1E4F1AC08]);
  uint64_t v47 = *(void *)(v18 - 8);
  uint64_t v48 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v44 = (char *)&v43 - v19;
  sub_1C1DFCD0C();
  uint64_t v50 = *(void *)(v20 - 8);
  uint64_t v51 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v46 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1C1EADE98();
  uint64_t v22 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  id v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v11 + 88) = v16;
  uint64_t v25 = v11 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_boundingRange;
  uint64_t v26 = sub_1C1EAD0E8();
  uint64_t v56 = *(void *)(v26 - 8);
  uint64_t v57 = v26;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v56 + 16);
  uint64_t v59 = a8;
  v27(v25, a8);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  id v28 = a1;
  sub_1C1EAD5B8();
  sub_1C1DFCCCC();
  sub_1C1EAF018();
  sub_1C1DFE408(a5, (uint64_t)v61);
  sub_1C1EADE78();
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v11 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_feedItemStorage, v24, v52);
  uint64_t v29 = v53;
  *(void *)(v11 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_storageContext) = v28;
  sub_1C1DFE408((uint64_t)a2, v11 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo);
  uint64_t v30 = v54;
  *(void *)(v11 + 16) = v54;
  sub_1C1DFE408(a5, v11 + 24);
  sub_1C1DFE408(v60, v11 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_queueProvider);
  id v31 = objc_allocWithZone(MEMORY[0x1E4F67C98]);
  id v32 = v28;
  uint64_t v33 = v55;
  id v34 = v30;
  *(void *)(v11 + 80) = objc_msgSend(v31, sel_initWithHealthStore_, v33);
  if (v29)
  {
    uint64_t v35 = v29;
  }
  else
  {
    sub_1C1EADBE8();
    uint64_t v36 = v44;
    sub_1C1EAE8B8();
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    uint64_t v37 = v46;
    uint64_t v38 = v48;
    sub_1C1EAE888();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v38);
    sub_1C1E5383C(&qword_1EA2C1420, (void (*)(uint64_t))sub_1C1DFCD0C);
    uint64_t v39 = v51;
    uint64_t v35 = sub_1C1EAEA38();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v39);
  }
  *(void *)(v11 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_displayNamePublisher) = v35;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  swift_retain();
  sub_1C1EAD5B8();
  sub_1C1EAD578();
  swift_allocObject();
  uint64_t v40 = sub_1C1EAD568();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v59, v57);
  __swift_destroy_boxed_opaque_existential_1(v60);
  __swift_destroy_boxed_opaque_existential_1(a5);
  uint64_t v41 = MEMORY[0x1E4F66F50];
  *(void *)(v11 + 64) = v40;
  *(void *)(v11 + 72) = v41;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v11;
}

uint64_t sub_1C1DFCC7C()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t sub_1C1DFCCCC()
{
  unint64_t result = qword_1EBB68238;
  if (!qword_1EBB68238)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB68238);
  }
  return result;
}

void sub_1C1DFCD0C()
{
  if (!qword_1EBB65A38)
  {
    sub_1C1EADBF8();
    sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
    unint64_t v0 = sub_1C1EAF8A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65A38);
    }
  }
}

void sub_1C1DFCD8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_1C1DFCDF0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 44);
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1EAD9C8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 48);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C1DFCEB0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1DFCF40(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1C1DFCFD8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C1E1CB18(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1C1E1CB18(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1C1DFCFD8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1C1DFD150(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1C1EAF4B8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1C1EAF618();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1C1EAEDC8();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1C1EAF6A8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1C1EAF618();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1C1DFD150(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C1DFD1DC(0, &qword_1EBB683E8, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_1C1DFD1DC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C1DFD228(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C1DFD274(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C1DFD2C0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C1EAF778();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1C1DFD308(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C1DFD354(uint64_t a1)
{
}

uint64_t PipelineProviderWrappers.sharableModel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1DFD3DC(v1 + 56, a1, (uint64_t (*)(void))sub_1C1DFD444);
}

uint64_t PipelineProviderWrappers.feedItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1DFD3DC(v1, a1, (uint64_t (*)(void))sub_1C1DF9198);
}

uint64_t sub_1C1DFD3DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C1DFD444(uint64_t a1)
{
}

uint64_t sub_1C1DFD478@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  uint64_t v51 = a6;
  int v60 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = a7;
  sub_1C1DF9328();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v57 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C1EAD0E8();
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v55 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = a1;
  if (a1)
  {
    MEMORY[0x1F4188790](v15);
    sub_1C1DF9F8C(0, &qword_1EBB66FE8);
    swift_retain();
    id v17 = a1;
    sub_1C1EAE198();
    swift_release();
    id v54 = v17;

    id v18 = (id)v63;
  }
  else
  {
    swift_beginAccess();
    id v18 = *(id *)(v7 + 48);
    id v54 = 0;
  }
  *(void *)&long long v63 = HKHealthStore.makePreferredTransactionPublisher()();
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C1DFEB90(0, &qword_1EBB65080, MEMORY[0x1E4F1AAE0]);
  sub_1C1DFEE5C(&qword_1EBB65078, &qword_1EBB65080, v19);
  uint64_t v20 = sub_1C1EAE9F8();
  swift_release();
  *(void *)&long long v63 = v20;
  sub_1C1DFECCC();
  sub_1C1DF9B3C((unint64_t *)&qword_1EBB65790, (void (*)(uint64_t))sub_1C1DFECCC);
  uint64_t v21 = sub_1C1EAEA38();
  swift_release();
  sub_1C1DFE408(a4, (uint64_t)&v63);
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = a5;
  sub_1C1DFE46C(&v63, (uint64_t)(v22 + 3));
  v22[8] = v18;
  v22[9] = v21;
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  sub_1C1DFE408(a4, (uint64_t)&v63);
  id v24 = (void *)swift_allocObject();
  v24[2] = v23;
  v24[3] = v18;
  sub_1C1DFE46C(&v63, (uint64_t)(v24 + 4));
  v24[9] = v21;
  v24[10] = a5;
  uint64_t v53 = v21;
  v24[11] = v51;
  sub_1C1DFE408(a4, (uint64_t)&v63);
  swift_beginAccess();
  uint64_t v25 = *(void **)(v8 + 48);
  uint64_t v52 = type metadata accessor for HealthStoreSharableModelContext();
  uint64_t v26 = swift_allocObject();
  uint64_t v49 = a4;
  uint64_t v27 = (void *)v26;
  swift_retain();
  id v28 = v25;
  uint64_t v29 = v22;
  uint64_t v50 = v22;
  swift_retain();
  swift_retain();
  id v30 = v18;
  swift_retain_n();
  swift_retain_n();
  id v31 = v30;
  v27[2] = sub_1C1EAF058();
  sub_1C1DFE408((uint64_t)&v63, (uint64_t)(v27 + 4));
  void v27[3] = v31;
  id v32 = objc_allocWithZone(MEMORY[0x1E4F2B5E0]);
  id v33 = v31;
  id v34 = objc_msgSend(v32, sel_initWithHealthStore_, v28);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
  v27[9] = v34;
  v27[10] = sub_1C1DE027C;
  v27[11] = v29;
  v27[12] = sub_1C1E67B90;
  v27[13] = v24;
  uint64_t v35 = type metadata accessor for HealthExperienceStoreFeedItemContext(0);
  uint64_t v51 = sub_1C1DF9B3C(&qword_1EBB662D0, (void (*)(uint64_t))type metadata accessor for HealthExperienceStoreFeedItemContext);
  id v36 = v34;
  uint64_t v37 = sub_1C1EAD8B8();

  *(void *)&long long v63 = v37;
  sub_1C1DF9BC8(0, &qword_1EBB65908, MEMORY[0x1E4F67270], MEMORY[0x1E4F1AAE0]);
  sub_1C1DFEC44();
  uint64_t v38 = sub_1C1EAE9F8();
  swift_release();
  *(void *)&long long v63 = v38;
  sub_1C1DFED60();
  sub_1C1DF9B3C((unint64_t *)&qword_1EBB65780, (void (*)(uint64_t))sub_1C1DFED60);
  uint64_t v39 = sub_1C1EAEA38();
  swift_release();
  __swift_project_boxed_opaque_existential_1((void *)(v8 + 64), *(void *)(v8 + 88));
  uint64_t v40 = (void *)sub_1C1EAD538();
  sub_1C1DFE408(v49, (uint64_t)&v63);
  LOBYTE(v34) = *(unsigned char *)(v8 + 40);
  sub_1C1DFE408(v8 + 104, (uint64_t)v62);
  swift_beginAccess();
  uint64_t v41 = *(void *)(v8 + 144);
  sub_1C1DFE408(v8 + 200, (uint64_t)v61);
  id v42 = v33;
  swift_retain();
  swift_retain();
  uint64_t v43 = (uint64_t)v55;
  sub_1C1EAD078();
  id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  swift_allocObject();
  uint64_t v45 = sub_1C1DFC6C0(v40, &v63, v42, (char)v34, (uint64_t)v62, v41, (uint64_t)v61, v43, v39, (uint64_t)v44);

  swift_release();
  sub_1C1DF8AE0(v56, v57, (uint64_t (*)(void))sub_1C1DF9328);
  uint64_t v64 = v35;
  uint64_t v65 = v51;
  *(void *)&long long v63 = v45;
  v62[3] = v52;
  v62[4] = sub_1C1DF9B3C(&qword_1EBB67528, (void (*)(uint64_t))type metadata accessor for HealthStoreSharableModelContext);
  v62[0] = v27;
  id v46 = v54;
  swift_retain();
  swift_retain();
  sub_1C1EAD9F8();
  sub_1C1EADA18();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C1DFDC40@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  uint64_t v51 = a6;
  int v60 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = a7;
  sub_1C1DF9328();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v57 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C1EAD0E8();
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v55 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = a1;
  if (a1)
  {
    MEMORY[0x1F4188790](v15);
    sub_1C1DF9F8C(0, &qword_1EBB66FE8);
    swift_retain();
    id v17 = a1;
    sub_1C1EAE198();
    swift_release();
    id v54 = v17;

    id v18 = (id)v63;
  }
  else
  {
    swift_beginAccess();
    id v18 = *(id *)(v7 + 48);
    id v54 = 0;
  }
  *(void *)&long long v63 = HKHealthStore.makePreferredTransactionPublisher()();
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C1DFEB90(0, &qword_1EBB65080, MEMORY[0x1E4F1AAE0]);
  sub_1C1DFEE5C(&qword_1EBB65078, &qword_1EBB65080, v19);
  uint64_t v20 = sub_1C1EAE9F8();
  swift_release();
  *(void *)&long long v63 = v20;
  sub_1C1DFECCC();
  sub_1C1DF9B3C((unint64_t *)&qword_1EBB65790, (void (*)(uint64_t))sub_1C1DFECCC);
  uint64_t v21 = sub_1C1EAEA38();
  swift_release();
  sub_1C1DFE408(a4, (uint64_t)&v63);
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = a5;
  sub_1C1DFE46C(&v63, (uint64_t)(v22 + 3));
  v22[8] = v18;
  v22[9] = v21;
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  sub_1C1DFE408(a4, (uint64_t)&v63);
  id v24 = (void *)swift_allocObject();
  v24[2] = v23;
  v24[3] = v18;
  sub_1C1DFE46C(&v63, (uint64_t)(v24 + 4));
  v24[9] = v21;
  v24[10] = a5;
  uint64_t v53 = v21;
  v24[11] = v51;
  sub_1C1DFE408(a4, (uint64_t)&v63);
  swift_beginAccess();
  uint64_t v25 = *(void **)(v8 + 48);
  uint64_t v52 = type metadata accessor for HealthStoreSharableModelContext();
  uint64_t v26 = swift_allocObject();
  uint64_t v49 = a4;
  uint64_t v27 = (void *)v26;
  swift_retain();
  id v28 = v25;
  uint64_t v29 = v22;
  uint64_t v50 = v22;
  swift_retain();
  swift_retain();
  id v30 = v18;
  swift_retain_n();
  swift_retain_n();
  id v31 = v30;
  v27[2] = sub_1C1EAF058();
  sub_1C1DFE408((uint64_t)&v63, (uint64_t)(v27 + 4));
  void v27[3] = v31;
  id v32 = objc_allocWithZone(MEMORY[0x1E4F2B5E0]);
  id v33 = v31;
  id v34 = objc_msgSend(v32, sel_initWithHealthStore_, v28);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
  v27[9] = v34;
  v27[10] = sub_1C1DE0280;
  v27[11] = v29;
  v27[12] = sub_1C1E12CE4;
  v27[13] = v24;
  uint64_t v35 = type metadata accessor for HealthExperienceStoreFeedItemContext(0);
  uint64_t v51 = sub_1C1DF9B3C(&qword_1EBB662D0, (void (*)(uint64_t))type metadata accessor for HealthExperienceStoreFeedItemContext);
  id v36 = v34;
  uint64_t v37 = sub_1C1EAD8B8();

  *(void *)&long long v63 = v37;
  sub_1C1DF9BC8(0, &qword_1EBB65908, MEMORY[0x1E4F67270], MEMORY[0x1E4F1AAE0]);
  sub_1C1DFEC44();
  uint64_t v38 = sub_1C1EAE9F8();
  swift_release();
  *(void *)&long long v63 = v38;
  sub_1C1DFED60();
  sub_1C1DF9B3C((unint64_t *)&qword_1EBB65780, (void (*)(uint64_t))sub_1C1DFED60);
  uint64_t v39 = sub_1C1EAEA38();
  swift_release();
  __swift_project_boxed_opaque_existential_1((void *)(v8 + 64), *(void *)(v8 + 88));
  uint64_t v40 = (void *)sub_1C1EAD538();
  sub_1C1DFE408(v49, (uint64_t)&v63);
  LOBYTE(v34) = *(unsigned char *)(v8 + 40);
  sub_1C1DFE408(v8 + 104, (uint64_t)v62);
  swift_beginAccess();
  uint64_t v41 = *(void *)(v8 + 144);
  sub_1C1DFE408(v8 + 200, (uint64_t)v61);
  id v42 = v33;
  swift_retain();
  swift_retain();
  uint64_t v43 = (uint64_t)v55;
  sub_1C1EAD078();
  id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  swift_allocObject();
  uint64_t v45 = sub_1C1DFC6C0(v40, &v63, v42, (char)v34, (uint64_t)v62, v41, (uint64_t)v61, v43, v39, (uint64_t)v44);

  swift_release();
  sub_1C1DF8AE0(v56, v57, (uint64_t (*)(void))sub_1C1DF9328);
  uint64_t v64 = v35;
  uint64_t v65 = v51;
  *(void *)&long long v63 = v45;
  v62[3] = v52;
  v62[4] = sub_1C1DF9B3C(&qword_1EBB67528, (void (*)(uint64_t))type metadata accessor for HealthStoreSharableModelContext);
  v62[0] = v27;
  id v46 = v54;
  swift_retain();
  swift_retain();
  sub_1C1EAD9F8();
  sub_1C1EADA18();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C1DFE408(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C1DFE46C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1C1DFE484(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for HealthExperienceStoreFeedItemContext(uint64_t a1)
{
  return sub_1C1DFE484(a1, (uint64_t *)&unk_1EBB662D8);
}

uint64_t HKHealthStore.makePreferredTransactionPublisher()()
{
  sub_1C1DFE9E8();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v21 = v0;
  uint64_t v22 = v1;
  MEMORY[0x1F4188790](v0);
  long long v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C1EAD3C8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = sub_1C1EAF078();
  uint64_t v20 = v11;
  sub_1C1EAD3A8();
  uint64_t v23 = v11;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, v8, v4);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C1DFE85C(0, &qword_1EBB65070, &qword_1EBB65128, MEMORY[0x1E4FBB320]);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1DFE938(0, &qword_1EBB65148, &qword_1EBB67D88, 0x1E4F2B4B8, MEMORY[0x1E4FBB718]);
  sub_1C1DFE8E8(&qword_1EBB65068, &qword_1EBB65070, &qword_1EBB65128, v14);
  sub_1C1EAEA68();
  swift_release();
  sub_1C1DFE9A0(&qword_1EBB64E28, (void (*)(uint64_t))sub_1C1DFE9E8);
  uint64_t v16 = v21;
  uint64_t v17 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  swift_release();
  uint64_t v23 = v17;
  sub_1C1DFE85C(0, &qword_1EBB65080, &qword_1EBB65148, v15);
  sub_1C1DFE8E8(&qword_1EBB65078, &qword_1EBB65080, &qword_1EBB65148, v15);
  uint64_t v18 = sub_1C1EAEA38();
  swift_release();
  return v18;
}

void sub_1C1DFE85C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C1DFE938(255, a3, &qword_1EBB67D88, 0x1E4F2B4B8, a4);
    sub_1C1E15F30();
    unint64_t v5 = sub_1C1EAE7D8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C1DFE8E8(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1DFE85C(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1DFE938(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1DF9F8C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C1DFE9A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1DFE9E8()
{
  if (!qword_1EBB64E30)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C1DFE85C(255, &qword_1EBB65070, &qword_1EBB65128, MEMORY[0x1E4FBB320]);
    sub_1C1DFE938(255, &qword_1EBB65148, &qword_1EBB67D88, 0x1E4F2B4B8, MEMORY[0x1E4FBB718]);
    sub_1C1DFE8E8(&qword_1EBB65068, &qword_1EBB65070, &qword_1EBB65128, v0);
    unint64_t v1 = sub_1C1EAE668();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB64E30);
    }
  }
}

void sub_1C1DFEADC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_1C1E4935C(255, &qword_1EBB65148, &qword_1EBB67D88, 0x1E4F2B4B8, MEMORY[0x1E4FBB718]);
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C1DFEB90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_1C1E66FD4(255, &qword_1EBB65148, &qword_1EBB67D88, 0x1E4F2B4B8, MEMORY[0x1E4FBB718]);
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C1DFEC44()
{
  unint64_t result = qword_1EBB65900;
  if (!qword_1EBB65900)
  {
    sub_1C1E15464(255, &qword_1EBB65908, MEMORY[0x1E4F67270], MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65900);
  }
  return result;
}

void sub_1C1DFECCC()
{
  if (!qword_1EBB65798)
  {
    sub_1C1E4B1B0();
    sub_1C1DF9B3C(&qword_1EBB658F0, (void (*)(uint64_t))sub_1C1E4B1B0);
    unint64_t v0 = sub_1C1EAE598();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65798);
    }
  }
}

void sub_1C1DFED60()
{
  if (!qword_1EBB65788)
  {
    sub_1C1E4B3FC();
    sub_1C1DF9B3C(&qword_1EBB658E0, (void (*)(uint64_t))sub_1C1E4B3FC);
    unint64_t v0 = sub_1C1EAE598();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65788);
    }
  }
}

uint64_t type metadata accessor for HealthStoreSharableModelContext()
{
  return self;
}

uint64_t sub_1C1DFEE18(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1DFEADC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DFEE5C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1DFEB90(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DFEEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1E1ACA8);
}

void sub_1C1DFEEB4(uint64_t a1)
{
}

void sub_1C1DFEEE8(uint64_t a1)
{
}

void sub_1C1DFEF08(uint64_t a1)
{
}

uint64_t sub_1C1DFEF28(uint64_t a1, int a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t (*a6)(void))
{
  int v60 = a6;
  unint64_t v9 = v6;
  uint64_t v11 = a3(0);
  uint64_t v54 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v59 = (uint64_t)&v49 - v12;
  uint64_t v13 = sub_1C1EAD368();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v56 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v6;
  sub_1C1DFC5E0(0, a4, a5);
  int v55 = a2;
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C1EAF668();
  uint64_t v19 = v18;
  if (!*(void *)(v16 + 16)) {
    goto LABEL_41;
  }
  uint64_t v20 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v21 = *(void *)(v16 + 64);
  uint64_t v51 = (void *)(v16 + 64);
  if (v20 < 64) {
    uint64_t v22 = ~(-1 << v20);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v23 = v22 & v21;
  uint64_t v49 = v6;
  int64_t v50 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v14 + 16);
  uint64_t v57 = (void (**)(char *, unint64_t, uint64_t))(v14 + 32);
  uint64_t v58 = v13;
  uint64_t v24 = v18 + 64;
  uint64_t result = swift_retain();
  int64_t v26 = 0;
  uint64_t v53 = v17;
  uint64_t v27 = v56;
  while (1)
  {
    if (v23)
    {
      unint64_t v29 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      unint64_t v30 = v29 | (v26 << 6);
      goto LABEL_22;
    }
    int64_t v31 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v31 >= v50) {
      break;
    }
    id v32 = v51;
    unint64_t v33 = v51[v31];
    ++v26;
    if (!v33)
    {
      int64_t v26 = v31 + 1;
      if (v31 + 1 >= v50) {
        goto LABEL_34;
      }
      unint64_t v33 = v51[v26];
      if (!v33)
      {
        int64_t v34 = v31 + 2;
        if (v34 >= v50)
        {
LABEL_34:
          swift_release();
          unint64_t v9 = v49;
          if ((v55 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v33 = v51[v34];
        if (!v33)
        {
          while (1)
          {
            int64_t v26 = v34 + 1;
            if (__OFADD__(v34, 1)) {
              goto LABEL_43;
            }
            if (v26 >= v50) {
              goto LABEL_34;
            }
            unint64_t v33 = v51[v26];
            ++v34;
            if (v33) {
              goto LABEL_21;
            }
          }
        }
        int64_t v26 = v34;
      }
    }
LABEL_21:
    unint64_t v23 = (v33 - 1) & v33;
    unint64_t v30 = __clz(__rbit64(v33)) + (v26 << 6);
    uint64_t v27 = v56;
LABEL_22:
    uint64_t v35 = v14;
    uint64_t v36 = *(void *)(v14 + 72);
    unint64_t v37 = *(void *)(v17 + 48) + v36 * v30;
    if (v55)
    {
      (*v57)(v27, v37, v58);
      uint64_t v38 = *(void *)(v17 + 56);
      uint64_t v39 = *(void *)(v54 + 72);
      sub_1C1DFC3B4(v38 + v39 * v30, v59, v60);
    }
    else
    {
      (*v52)(v27, v37, v58);
      uint64_t v40 = *(void *)(v17 + 56);
      uint64_t v39 = *(void *)(v54 + 72);
      sub_1C1DFBF3C(v40 + v39 * v30, v59, v60);
    }
    sub_1C1DFFC68(&qword_1EBB68168, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1C1EAECB8();
    uint64_t v41 = -1 << *(unsigned char *)(v19 + 32);
    unint64_t v42 = result & ~v41;
    unint64_t v43 = v42 >> 6;
    if (((-1 << v42) & ~*(void *)(v24 + 8 * (v42 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v42) & ~*(void *)(v24 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v27 = v56;
    }
    else
    {
      char v44 = 0;
      unint64_t v45 = (unint64_t)(63 - v41) >> 6;
      uint64_t v27 = v56;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v46 = v43 == v45;
        if (v43 == v45) {
          unint64_t v43 = 0;
        }
        v44 |= v46;
        uint64_t v47 = *(void *)(v24 + 8 * v43);
      }
      while (v47 == -1);
      unint64_t v28 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    *(void *)(v24 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    (*v57)((char *)(*(void *)(v19 + 48) + v36 * v28), (unint64_t)v27, v58);
    uint64_t result = sub_1C1DFC3B4(v59, *(void *)(v19 + 56) + v39 * v28, v60);
    ++*(void *)(v19 + 16);
    uint64_t v17 = v53;
    uint64_t v14 = v35;
  }
  swift_release();
  unint64_t v9 = v49;
  id v32 = v51;
  if ((v55 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v48 = 1 << *(unsigned char *)(v17 + 32);
  if (v48 >= 64) {
    bzero(v32, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *id v32 = -1 << v48;
  }
  *(void *)(v17 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v9 = v19;
  return result;
}

uint64_t sub_1C1DFF414(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v66 = a2;
  uint64_t v69 = a1;
  uint64_t v6 = sub_1C1EAD668();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v66 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v66 - v13;
  uint64_t result = MEMORY[0x1F4188790](v12);
  uint64_t v18 = (char *)&v66 - v16;
  unint64_t v19 = *(void *)(a3 + 16);
  unint64_t v20 = *(void *)(a4 + 16);
  uint64_t v81 = v7 + 16;
  uint64_t v78 = a3;
  uint64_t v79 = a4;
  uint64_t v76 = v7;
  if (v20 >= v19)
  {
    uint64_t v73 = 0;
    int64_t v43 = 0;
    uint64_t v44 = *(void *)(a3 + 56);
    int64_t v68 = a3 + 56;
    uint64_t v45 = 1 << *(unsigned char *)(a3 + 32);
    if (v45 < 64) {
      uint64_t v46 = ~(-1 << v45);
    }
    else {
      uint64_t v46 = -1;
    }
    unint64_t v47 = v46 & v44;
    int64_t v70 = (unint64_t)(v45 + 63) >> 6;
    uint64_t v77 = a4 + 56;
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v80 = v17;
    if ((v46 & v44) != 0) {
      goto LABEL_39;
    }
LABEL_40:
    int64_t v50 = v43 + 1;
    if (!__OFADD__(v43, 1))
    {
      if (v50 < v70)
      {
        unint64_t v51 = *(void *)(v68 + 8 * v50);
        int64_t v52 = v43 + 1;
        if (!v51)
        {
          int64_t v52 = v43 + 2;
          if (v43 + 2 >= v70) {
            goto LABEL_62;
          }
          unint64_t v51 = *(void *)(v68 + 8 * v52);
          if (!v51)
          {
            int64_t v52 = v43 + 3;
            if (v43 + 3 >= v70) {
              goto LABEL_62;
            }
            unint64_t v51 = *(void *)(v68 + 8 * v52);
            if (!v51)
            {
              uint64_t v53 = v43 + 4;
              if (v43 + 4 >= v70) {
                goto LABEL_62;
              }
              unint64_t v51 = *(void *)(v68 + 8 * v53);
              if (!v51)
              {
                while (1)
                {
                  int64_t v52 = v53 + 1;
                  if (__OFADD__(v53, 1)) {
                    goto LABEL_68;
                  }
                  if (v52 >= v70) {
                    goto LABEL_62;
                  }
                  unint64_t v51 = *(void *)(v68 + 8 * v52);
                  ++v53;
                  if (v51) {
                    goto LABEL_53;
                  }
                }
              }
              int64_t v52 = v43 + 4;
            }
          }
        }
LABEL_53:
        uint64_t v74 = (v51 - 1) & v51;
        int64_t v75 = v52;
        for (unint64_t i = __clz(__rbit64(v51)) + (v52 << 6); ; unint64_t i = __clz(__rbit64(v47)) | (v43 << 6))
        {
          uint64_t v54 = *(void *)(a3 + 48);
          uint64_t v55 = *(void *)(v7 + 72);
          unint64_t v72 = i;
          uint64_t v56 = *(void (**)(void (**)(char *, uint64_t), unint64_t, uint64_t))(v7 + 16);
          v56(v80, v54 + v55 * i, v6);
          sub_1C1DFFC20(&qword_1EBB66160, MEMORY[0x1E4F67030]);
          uint64_t v57 = sub_1C1EAECB8();
          uint64_t v58 = -1 << *(unsigned char *)(a4 + 32);
          unint64_t v59 = v57 & ~v58;
          if ((*(void *)(v77 + ((v59 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v59))
          {
            uint64_t v71 = (char *)((unint64_t)v48 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
            uint64_t v60 = ~v58;
            while (1)
            {
              v56((void (**)(char *, uint64_t))v11, *(void *)(v79 + 48) + v59 * v55, v6);
              sub_1C1DFFC20(&qword_1EBB66168, MEMORY[0x1E4F67030]);
              char v61 = sub_1C1EAED18();
              uint64_t v62 = *v48;
              (*v48)(v11, v6);
              if (v61) {
                break;
              }
              unint64_t v59 = (v59 + 1) & v60;
              if (((*(void *)(v77 + ((v59 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v59) & 1) == 0)
              {
                a3 = v78;
                a4 = v79;
                int64_t v43 = v75;
                uint64_t v7 = v76;
                long long v63 = v80;
                unint64_t v47 = v74;
                goto LABEL_60;
              }
            }
            uint64_t result = ((uint64_t (*)(void, uint64_t))v62)(v80, v6);
            *(unint64_t *)((char *)v69 + ((v72 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v72;
            unint64_t v47 = v74;
            BOOL v28 = __OFADD__(v73++, 1);
            a3 = v78;
            a4 = v79;
            int64_t v43 = v75;
            uint64_t v7 = v76;
            if (v28) {
              goto LABEL_66;
            }
            if (!v74) {
              goto LABEL_40;
            }
          }
          else
          {
            uint64_t v62 = *v48;
            a3 = v78;
            int64_t v43 = v75;
            uint64_t v7 = v76;
            long long v63 = v80;
            unint64_t v47 = v74;
LABEL_60:
            uint64_t result = ((uint64_t (*)(void, uint64_t))v62)(v63, v6);
            if (!v47) {
              goto LABEL_40;
            }
          }
LABEL_39:
          uint64_t v74 = (v47 - 1) & v47;
          int64_t v75 = v43;
        }
      }
      goto LABEL_62;
    }
  }
  else
  {
    int64_t v21 = 0;
    uint64_t v22 = *(void *)(a4 + 56);
    uint64_t v67 = a4 + 56;
    uint64_t v23 = 1 << *(unsigned char *)(a4 + 32);
    if (v23 < 64) {
      uint64_t v24 = ~(-1 << v23);
    }
    else {
      uint64_t v24 = -1;
    }
    unint64_t v25 = v24 & v22;
    int64_t v68 = (unint64_t)(v23 + 63) >> 6;
    unint64_t v72 = v7 + 32;
    uint64_t v73 = 0;
    uint64_t v77 = a3 + 56;
    uint64_t v80 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v71 = (char *)&v66 - v16;
    if ((v24 & v22) != 0) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v30 = v21 + 1;
    if (!__OFADD__(v21, 1))
    {
      if (v30 < v68)
      {
        unint64_t v31 = *(void *)(v67 + 8 * v30);
        int64_t v32 = v21 + 1;
        if (v31) {
          goto LABEL_23;
        }
        int64_t v32 = v21 + 2;
        if (v21 + 2 >= v68) {
          goto LABEL_62;
        }
        unint64_t v31 = *(void *)(v67 + 8 * v32);
        if (v31) {
          goto LABEL_23;
        }
        int64_t v32 = v21 + 3;
        if (v21 + 3 >= v68) {
          goto LABEL_62;
        }
        unint64_t v31 = *(void *)(v67 + 8 * v32);
        if (v31)
        {
LABEL_23:
          uint64_t v74 = (v31 - 1) & v31;
          int64_t v75 = v32;
          for (unint64_t j = __clz(__rbit64(v31)) + (v32 << 6); ; unint64_t j = __clz(__rbit64(v25)) | (v21 << 6))
          {
            uint64_t v34 = *(void *)(v7 + 72);
            uint64_t v35 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
            v35(v18, *(void *)(a4 + 48) + v34 * j, v6);
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v18, v6);
            sub_1C1DFFC20(&qword_1EBB66160, MEMORY[0x1E4F67030]);
            uint64_t v36 = v14;
            uint64_t v37 = sub_1C1EAECB8();
            uint64_t v38 = -1 << *(unsigned char *)(a3 + 32);
            unint64_t v39 = v37 & ~v38;
            if ((*(void *)(v77 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39))
            {
              int64_t v70 = (unint64_t)v80 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
              uint64_t v40 = ~v38;
              while (1)
              {
                v35(v11, *(void *)(v78 + 48) + v39 * v34, v6);
                sub_1C1DFFC20(&qword_1EBB66168, MEMORY[0x1E4F67030]);
                char v41 = sub_1C1EAED18();
                unint64_t v42 = *v80;
                (*v80)(v11, v6);
                if (v41) {
                  break;
                }
                unint64_t v39 = (v39 + 1) & v40;
                if (((*(void *)(v77 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
                {
                  a3 = v78;
                  int64_t v21 = v75;
                  uint64_t v7 = v76;
                  uint64_t v14 = v36;
                  uint64_t v18 = v71;
                  goto LABEL_30;
                }
              }
              uint64_t result = ((uint64_t (*)(char *, uint64_t))v42)(v36, v6);
              uint64_t v26 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
              uint64_t v27 = 1 << v39;
              uint64_t v14 = v36;
              *(unint64_t *)((char *)v69 + v26) |= v27;
              unint64_t v25 = v74;
              BOOL v28 = __OFADD__(v73++, 1);
              a3 = v78;
              a4 = v79;
              int64_t v21 = v75;
              uint64_t v7 = v76;
              uint64_t v18 = v71;
              if (v28) {
                goto LABEL_65;
              }
              if (!v74) {
                goto LABEL_10;
              }
            }
            else
            {
              unint64_t v42 = *v80;
              int64_t v21 = v75;
              uint64_t v7 = v76;
              uint64_t v14 = v36;
              uint64_t v18 = v71;
LABEL_30:
              unint64_t v25 = v74;
              uint64_t result = ((uint64_t (*)(char *, uint64_t))v42)(v14, v6);
              a4 = v79;
              if (!v25) {
                goto LABEL_10;
              }
            }
LABEL_9:
            uint64_t v74 = (v25 - 1) & v25;
            int64_t v75 = v21;
          }
        }
        uint64_t v33 = v21 + 4;
        if (v21 + 4 < v68)
        {
          unint64_t v31 = *(void *)(v67 + 8 * v33);
          if (v31)
          {
            int64_t v32 = v21 + 4;
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v32 = v33 + 1;
            if (__OFADD__(v33, 1)) {
              goto LABEL_67;
            }
            if (v32 >= v68) {
              break;
            }
            unint64_t v31 = *(void *)(v67 + 8 * v32);
            ++v33;
            if (v31) {
              goto LABEL_23;
            }
          }
        }
      }
LABEL_62:
      uint64_t v64 = v66;
      uint64_t v65 = v73;
      swift_retain();
      return sub_1C1DFFCF8(v69, v64, v65, a3);
    }
    __break(1u);
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
  return result;
}

uint64_t sub_1C1DFFC20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DFFC68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DFFCB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1DFFCF8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1C1EAD668();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_1C1E00100();
  uint64_t result = sub_1C1EAF488();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1C1DFFC20(&qword_1EBB66160, MEMORY[0x1E4F67030]);
    uint64_t result = sub_1C1EAECB8();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1C1E000B8(uint64_t a1, int a2)
{
  return sub_1C1DFEF28(a1, a2, (uint64_t (*)(void))sub_1C1DFC5AC, (unint64_t *)&qword_1EBB67DA0, sub_1C1DFC5AC, (uint64_t (*)(void))sub_1C1DFC5AC);
}

void sub_1C1E00100()
{
  if (!qword_1EBB67058)
  {
    sub_1C1EAD668();
    sub_1C1DFAB24(&qword_1EBB66160, MEMORY[0x1E4F67030]);
    unint64_t v0 = sub_1C1EAF498();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67058);
    }
  }
}

void sub_1C1E00194(uint64_t a1)
{
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1C1E0022C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  sub_1C1DF92F4(0);
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v49 = (uint64_t)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v63 = (uint64_t)v47 - v13;
  uint64_t v14 = sub_1C1EAD368();
  uint64_t v50 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF7678(0, (unint64_t *)&unk_1EBB674F8, (uint64_t (*)(uint64_t))sub_1C1DFEEE8, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)v47 - v18;
  uint64_t v20 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = ~v20;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v23 = -v20;
  uint64_t v56 = a1;
  uint64_t v57 = a1 + 64;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  else {
    uint64_t v24 = -1;
  }
  uint64_t v58 = v21;
  uint64_t v59 = 0;
  uint64_t v60 = v24 & v22;
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  v47[1] = a1;
  swift_bridgeObjectRetain();
  v47[0] = a3;
  swift_retain();
  sub_1C1E006EC((uint64_t)v19);
  sub_1C1DFEEE8(0);
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 - 8);
  unint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  uint64_t v51 = v27 + 48;
  int64_t v52 = v28;
  if (v28(v19, 1, v25) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C1E00B40();
    return swift_release();
  }
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  uint64_t v55 = v50 + 32;
  uint64_t v48 = (void (**)(char *, uint64_t))(v50 + 8);
  while (1)
  {
    uint64_t v32 = (uint64_t)&v19[*(int *)(v26 + 48)];
    uint64_t v33 = v14;
    v54(v16, v19, v14);
    sub_1C1E07A18(v32, v63);
    uint64_t v34 = *a5;
    unint64_t v36 = sub_1C1DF6BD0((uint64_t)v16);
    uint64_t v37 = *(void *)(v34 + 16);
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38)) {
      break;
    }
    char v40 = v35;
    if (*(void *)(v34 + 24) >= v39)
    {
      if (a4)
      {
        if (v35) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_1C1E010AC();
        if (v40) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_1C1E00B88(v39, a4 & 1);
      unint64_t v41 = sub_1C1DF6BD0((uint64_t)v16);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_22;
      }
      unint64_t v36 = v41;
      if (v40)
      {
LABEL_7:
        uint64_t v30 = v63;
        uint64_t v31 = v49;
        sub_1C1E01808(v63, v49);
        sub_1C1DF9030(v30, (uint64_t (*)(void))sub_1C1DF92F4);
        uint64_t v14 = v33;
        (*v48)(v16, v33);
        sub_1C1DF5CB0(v31, *(void *)(*a5 + 56) + *(void *)(v53 + 72) * v36, (uint64_t (*)(void))sub_1C1DF92F4);
        goto LABEL_8;
      }
    }
    int64_t v43 = (void *)*a5;
    *(void *)(*a5 + 8 * (v36 >> 6) + 64) |= 1 << v36;
    uint64_t v14 = v33;
    v54((char *)(v43[6] + *(void *)(v50 + 72) * v36), v16, v33);
    sub_1C1E07A18(v63, v43[7] + *(void *)(v53 + 72) * v36);
    uint64_t v44 = v43[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_21;
    }
    v43[2] = v46;
LABEL_8:
    sub_1C1E006EC((uint64_t)v19);
    a4 = 1;
    if (v52(v19, 1, v26) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1C1EAF7D8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E006EC@<X0>(uint64_t a1@<X8>)
{
  sub_1C1DFEF08(0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF7678(0, &qword_1EBB674D8, (uint64_t (*)(uint64_t))sub_1C1DFEF08, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t result = MEMORY[0x1F4188790]((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v16 = v1[2];
  int64_t v15 = v1[3];
  int64_t v17 = v15;
  unint64_t v18 = v1[4];
  uint64_t v37 = v7;
  uint64_t v40 = result;
  if (v18)
  {
    uint64_t v38 = a1;
    uint64_t v39 = v14;
    uint64_t v19 = (v18 - 1) & v18;
    unint64_t v20 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
    uint64_t v21 = *(void *)(v13 + 48);
    uint64_t v22 = v13;
    uint64_t v23 = sub_1C1EAD368();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v12, v21 + *(void *)(*(void *)(v23 - 8) + 72) * v20, v23);
    uint64_t v24 = *(void *)(v22 + 56);
    sub_1C1DF92F4(0);
    sub_1C1E01808(v24 + *(void *)(*(void *)(v25 - 8) + 72) * v20, (uint64_t)&v12[*(int *)(v4 + 48)]);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v12, 0, 1, v4);
    a1 = v38;
    uint64_t v14 = v39;
    goto LABEL_23;
  }
  int64_t v26 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v27 = (unint64_t)(v16 + 64) >> 6;
  if (v26 < v27)
  {
    unint64_t v28 = *(void *)(v14 + 8 * v26);
    if (v28)
    {
LABEL_7:
      uint64_t v38 = a1;
      uint64_t v39 = v14;
      uint64_t v19 = (v28 - 1) & v28;
      unint64_t v20 = __clz(__rbit64(v28)) + (v26 << 6);
      int64_t v17 = v26;
      goto LABEL_3;
    }
    int64_t v29 = v15 + 2;
    int64_t v17 = v15 + 1;
    if (v15 + 2 < v27)
    {
      unint64_t v28 = *(void *)(v14 + 8 * v29);
      if (v28)
      {
LABEL_10:
        int64_t v26 = v29;
        goto LABEL_7;
      }
      int64_t v17 = v15 + 2;
      if (v15 + 3 < v27)
      {
        unint64_t v28 = *(void *)(v14 + 8 * (v15 + 3));
        if (v28)
        {
          int64_t v26 = v15 + 3;
          goto LABEL_7;
        }
        int64_t v29 = v15 + 4;
        int64_t v17 = v15 + 3;
        if (v15 + 4 < v27)
        {
          unint64_t v28 = *(void *)(v14 + 8 * v29);
          if (v28) {
            goto LABEL_10;
          }
          int64_t v26 = v15 + 5;
          int64_t v17 = v15 + 4;
          if (v15 + 5 < v27)
          {
            unint64_t v28 = *(void *)(v14 + 8 * v26);
            if (v28) {
              goto LABEL_7;
            }
            int64_t v17 = v27 - 1;
            int64_t v30 = v15 + 6;
            while (v27 != v30)
            {
              unint64_t v28 = *(void *)(v14 + 8 * v30++);
              if (v28)
              {
                int64_t v26 = v30 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v22 = v13;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v12, 1, 1, v4);
  uint64_t v19 = 0;
LABEL_23:
  *uint64_t v1 = v22;
  v1[1] = v14;
  v1[2] = v16;
  v1[3] = v17;
  v1[4] = v19;
  uint64_t v31 = (void (*)(uint64_t))v1[5];
  uint64_t v32 = v40;
  sub_1C1DF774C((uint64_t)v12, v40, &qword_1EBB674D8, (uint64_t (*)(uint64_t))sub_1C1DFEF08);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v32, 1, v4) == 1)
  {
    sub_1C1DFEEE8(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a1, 1, 1, v33);
  }
  else
  {
    uint64_t v34 = v32;
    uint64_t v35 = (uint64_t)v37;
    sub_1C1DF7C54(v34, (uint64_t)v37, (uint64_t (*)(void))sub_1C1DFEF08);
    v31(v35);
    sub_1C1DF9030(v35, (uint64_t (*)(void))sub_1C1DFEF08);
    sub_1C1DFEEE8(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a1, 0, 1, v36);
  }
}

uint64_t sub_1C1E00B40()
{
  return swift_release();
}

uint64_t sub_1C1E00B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1DF77CC(a1, (uint64_t (*)(void))sub_1C1DFEF08, (uint64_t (*)(void))sub_1C1DFEEE8, sub_1C1E01808, a2);
}

uint64_t sub_1C1E00B88(uint64_t a1, int a2)
{
  return sub_1C1DFEF28(a1, a2, (uint64_t (*)(void))sub_1C1DF92F4, (unint64_t *)&qword_1EBB67DA8, sub_1C1DF92F4, (uint64_t (*)(void))sub_1C1DF92F4);
}

uint64_t sub_1C1E00BD0(uint64_t a1, int a2)
{
  return sub_1C1DFEF28(a1, a2, (uint64_t (*)(void))sub_1C1DF7CD4, &qword_1EBB67D98, sub_1C1DF7CD4, (uint64_t (*)(void))sub_1C1DF7CD4);
}

uint64_t sub_1C1E00C18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C1E00E7C(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF92F4(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1C1DF9030(a1, (uint64_t (*)(void))sub_1C1E00E7C);
    sub_1C1DEB20C(a2, (uint64_t (*)(void))sub_1C1DF92F4, (void (*)(unint64_t, uint64_t))sub_1C1E07A18, (void (*)(unint64_t, uint64_t))sub_1C1E933DC, (void (*)(void))sub_1C1E010AC, (uint64_t)v8);
    uint64_t v13 = sub_1C1EAD368();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_1C1DF9030((uint64_t)v8, (uint64_t (*)(void))sub_1C1E00E7C);
  }
  else
  {
    sub_1C1E07A18(a1, (uint64_t)v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C1E00EB0((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1C1EAD368();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

void sub_1C1E00E7C(uint64_t a1)
{
}

uint64_t sub_1C1E00EB0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1C1EAD368();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1C1DF6BD0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      sub_1C1DF92F4(0);
      return sub_1C1DF5CB0(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))sub_1C1DF92F4);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1C1E010AC();
    goto LABEL_7;
  }
  sub_1C1E00B88(v17, a3 & 1);
  unint64_t v24 = sub_1C1DF6BD0(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_1C1EAF7D8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1C1DF661C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))sub_1C1DF92F4, (uint64_t (*)(uint64_t, unint64_t))sub_1C1E07A18);
}

void *sub_1C1E010AC()
{
  return sub_1C1DFBBC4((uint64_t (*)(void))sub_1C1DF92F4, (unint64_t *)&qword_1EBB67DA8, sub_1C1DF92F4, (uint64_t (*)(void))sub_1C1DF92F4);
}

uint64_t sub_1C1E010F4(uint64_t (**a1)(void), uint64_t a2, uint64_t (**a3)(void))
{
  uint64_t v54 = a3;
  sub_1C1E02B88(0);
  uint64_t v56 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v55 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C1DF9BC8(0, &qword_1EBB650E8, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1AC18]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v49[-v9];
  sub_1C1DF92F4(0);
  uint64_t v57 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v60 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  BOOL v16 = &v49[-v15];
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = &v49[-v18];
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = &v49[-v20];
  uint64_t v22 = sub_1C1EAE568();
  uint64_t v58 = *(void *)(v22 - 8);
  uint64_t v59 = v22;
  MEMORY[0x1F4188790](v22);
  unint64_t v24 = &v49[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v26 = Strong;
    sub_1C1EAE4F8();
    sub_1C1E01808((uint64_t)a1, (uint64_t)v21);
    sub_1C1E01808((uint64_t)a1, (uint64_t)v19);
    sub_1C1E01808((uint64_t)a1, (uint64_t)v16);
    sub_1C1E01808((uint64_t)a1, (uint64_t)v60);
    int64_t v27 = sub_1C1EAE558();
    os_log_type_t v28 = sub_1C1EAF0D8();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v62 = v52;
      *(_DWORD *)uint64_t v30 = 136447234;
      os_log_t v51 = v27;
      uint64_t v61 = (uint64_t)v54;
      swift_getMetatypeMetadata();
      int v50 = v29;
      uint64_t v31 = sub_1C1EAED68();
      uint64_t v53 = v26;
      uint64_t v61 = sub_1C1DF8D44(v31, v32, &v62);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      uint64_t v33 = &v21[*(int *)(v57 + 28)];
      uint64_t v54 = a1;
      __swift_project_boxed_opaque_existential_1(v33, v33[3]);
      uint64_t v34 = sub_1C1EAD5B8();
      uint64_t v61 = sub_1C1DF8D44(v34, v35, &v62);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      sub_1C1DF9030((uint64_t)v21, (uint64_t (*)(void))sub_1C1DF92F4);
      *(_WORD *)(v30 + 22) = 2082;
      sub_1C1DF8AE0((uint64_t)v19, (uint64_t)v55, (uint64_t (*)(void))sub_1C1E02B88);
      uint64_t v36 = sub_1C1EAED68();
      uint64_t v61 = sub_1C1DF8D44(v36, v37, &v62);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      sub_1C1DF9030((uint64_t)v19, (uint64_t (*)(void))sub_1C1DF92F4);
      *(_WORD *)(v30 + 32) = 2082;
      uint64_t v38 = (void *)sub_1C1EAD9A8();
      uint64_t v39 = sub_1C1EAD798();
      unint64_t v41 = v40;

      uint64_t v61 = sub_1C1DF8D44(v39, v41, &v62);
      sub_1C1EAF2C8();
      a1 = v54;
      swift_bridgeObjectRelease();
      sub_1C1DF9030((uint64_t)v16, (uint64_t (*)(void))sub_1C1DF92F4);
      *(_WORD *)(v30 + 42) = 2082;
      char v42 = v60;
      sub_1C1EAD9D8();
      sub_1C1DF9148(0, &qword_1EBB66178);
      uint64_t v43 = sub_1C1EAED68();
      uint64_t v61 = sub_1C1DF8D44(v43, v44, &v62);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      sub_1C1DF9030((uint64_t)v42, (uint64_t (*)(void))sub_1C1DF92F4);
      os_log_t v45 = v51;
      _os_log_impl(&dword_1C1DD2000, v51, (os_log_type_t)v50, "[%{public}s][%{public}s]: dispatching GeneratorPipeline <%{public}s> for profile %{public}s and context %{public}s to queue for execution", (uint8_t *)v30, 0x34u);
      uint64_t v46 = v52;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v46, -1, -1);
      MEMORY[0x1C874D2E0](v30, -1, -1);
    }
    else
    {
      sub_1C1DF9030((uint64_t)v21, (uint64_t (*)(void))sub_1C1DF92F4);
      sub_1C1DF9030((uint64_t)v19, (uint64_t (*)(void))sub_1C1DF92F4);
      sub_1C1DF9030((uint64_t)v16, (uint64_t (*)(void))sub_1C1DF92F4);
      sub_1C1DF9030((uint64_t)v60, (uint64_t (*)(void))sub_1C1DF92F4);
    }
    (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v24, v59);
    uint64_t v61 = sub_1C1E01820(a1);
    sub_1C1E0D080(0);
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    uint64_t v47 = sub_1C1EAEA38();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1C1DFC68C(0);
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    sub_1C1EAE8C8();
    sub_1C1E65C5C();
    uint64_t v47 = sub_1C1EAEA38();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v47;
}

uint64_t sub_1C1E01808(uint64_t a1, uint64_t a2)
{
  return sub_1C1DF8AE0(a1, a2, (uint64_t (*)(void))sub_1C1DF92F4);
}

uint64_t sub_1C1E01820(uint64_t (**a1)(void))
{
  uint64_t v2 = v1;
  uint64_t v43 = a1;
  sub_1C1E02074(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  uint64_t v54 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v52 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF92F4(0);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v44 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  sub_1C1E02190();
  uint64_t v46 = v8;
  uint64_t v48 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E020B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF9C54(0, &qword_1EBB64F40, (uint64_t (*)(uint64_t))sub_1C1E020B0, sub_1C1E0215C, MEMORY[0x1E4F1AA60]);
  uint64_t v47 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v43 - v17;
  os_log_t v45 = v1 + 20;
  uint64_t v19 = v1[23];
  uint64_t v20 = v1[24];
  __swift_project_boxed_opaque_existential_1(v1 + 20, v19);
  uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
  uint64_t v21 = (uint64_t)v43;
  uint64_t v22 = (*v43)();
  sub_1C1E01F14(0);
  uint64_t v55 = v23;
  uint64_t v56 = sub_1C1DF9B3C(&qword_1EBB67728, sub_1C1E01F14);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1C1E07784(v21, KeyPath, v22, (uint64_t)v10);
  swift_release();
  swift_release();
  sub_1C1E01808(v21, (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v25 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  uint64_t v26 = swift_allocObject();
  sub_1C1E07A18((uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25);
  sub_1C1DF7CD4(0);
  sub_1C1DF9B3C(&qword_1EBB67C38, (void (*)(uint64_t))sub_1C1E02190);
  uint64_t v27 = v46;
  sub_1C1EAEA68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v27);
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  sub_1C1E0215C();
  uint64_t v28 = v49;
  sub_1C1EAEB08();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v28);
  sub_1C1E01FD8();
  uint64_t v29 = v47;
  uint64_t v30 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v29);
  uint64_t v31 = v2[23];
  uint64_t v32 = v2[24];
  __swift_project_boxed_opaque_existential_1(v45, v31);
  uint64_t v57 = v30;
  sub_1C1E02B88(0);
  uint64_t v34 = v21 + *(int *)(v33 + 36);
  unint64_t v35 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v32 + 40);
  sub_1C1DF9BC8(0, &qword_1EBB64FF0, (uint64_t (*)(uint64_t))sub_1C1DF7CD4, MEMORY[0x1E4F1AAE0]);
  uint64_t v37 = v36;
  unint64_t v38 = sub_1C1E01F50();
  uint64_t v57 = v35(&v57, v34, v37, v38, v31, v32);
  swift_allocObject();
  swift_weakInit();
  sub_1C1DFC68C(0);
  sub_1C1E0D080(0);
  sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
  uint64_t v39 = v52;
  sub_1C1EAEAD8();
  swift_release();
  swift_release();
  sub_1C1DF9B3C(&qword_1EBB64EE8, sub_1C1E02074);
  uint64_t v40 = v53;
  uint64_t v41 = sub_1C1EAEA38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v40);
  return v41;
}

void sub_1C1E01F14(uint64_t a1)
{
}

unint64_t sub_1C1E01F50()
{
  unint64_t result = qword_1EBB64FE8;
  if (!qword_1EBB64FE8)
  {
    sub_1C1DF9BC8(255, &qword_1EBB64FF0, (uint64_t (*)(uint64_t))sub_1C1DF7CD4, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64FE8);
  }
  return result;
}

unint64_t sub_1C1E01FD8()
{
  unint64_t result = qword_1EBB64F38;
  if (!qword_1EBB64F38)
  {
    sub_1C1DF9C54(255, &qword_1EBB64F40, (uint64_t (*)(uint64_t))sub_1C1E020B0, sub_1C1E0215C, MEMORY[0x1E4F1AA60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64F38);
  }
  return result;
}

void sub_1C1E02074(uint64_t a1)
{
}

void sub_1C1E020B0()
{
  if (!qword_1EBB67C90)
  {
    sub_1C1E02190();
    sub_1C1DF7CD4(255);
    sub_1C1DF9B3C(&qword_1EBB67C38, (void (*)(uint64_t))sub_1C1E02190);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67C90);
    }
  }
}

uint64_t sub_1C1E0215C()
{
  return sub_1C1DF9B3C(&qword_1EBB67C88, (void (*)(uint64_t))sub_1C1E020B0);
}

void sub_1C1E02190()
{
  if (!qword_1EBB67C40)
  {
    sub_1C1E14CAC(255, &qword_1EBB67CE8, (uint64_t (*)(uint64_t))sub_1C1DFD354, MEMORY[0x1E4F1AAE0]);
    sub_1C1E07A30();
    unint64_t v0 = sub_1C1EAE5B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67C40);
    }
  }
}

uint64_t sub_1C1E02224@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C1E02270(*a1, a1[1], *(void *)(v2 + 16), (uint64_t)sub_1C1E00B48, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_1C1E0022C, a2);
}

uint64_t sub_1C1E02270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t, uint64_t, void, uint64_t, uint64_t *)@<X4>, void *a6@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = a1;
  a5(a3, a4, 0, isUniquelyReferenced_nonNull_native, &v15);
  uint64_t v13 = v15;
  uint64_t result = swift_bridgeObjectRelease();
  *a6 = v13;
  a6[1] = a2;
  return result;
}

uint64_t sub_1C1E0231C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C1E02270(*a1, a1[1], *(void *)(v2 + 16), (uint64_t)sub_1C1DF7980, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_1C1DF6710, a2);
}

uint64_t sub_1C1E02368(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C1E02BC4(0, &qword_1EBB67CB8, sub_1C1E02F6C, (void (*)(void))sub_1C1E02F38);
  uint64_t v11 = v10;
  uint64_t v32 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v30 = (char *)&v26 - v12;
  sub_1C1DF9C54(0, &qword_1EBB64F80, (uint64_t (*)(uint64_t))sub_1C1E02F6C, sub_1C1E02F38, MEMORY[0x1E4F1AA70]);
  uint64_t v31 = v13;
  uint64_t v29 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v28 = (char *)&v26 - v14;
  swift_beginAccess();
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v33 = MEMORY[0x1E4FBC860];
  uint64_t v17 = *(void *)(v15 + 16);
  if (v17)
  {
    uint64_t v26 = a3;
    uint64_t v27 = v11;
    uint64_t v18 = (uint64_t (**)(char *))(v15 + 32);
    swift_bridgeObjectRetain_n();
    do
    {
      uint64_t v19 = sub_1C1E026FC(v18, v16, a1, a4, a2, a5);
      sub_1C1E026D0(v19);
      v18 += 7;
      --v17;
    }
    while (v17);
    swift_release();
    swift_bridgeObjectRelease_n();
    uint64_t v20 = v33;
    uint64_t v11 = v27;
  }
  else
  {
    swift_release();
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  sub_1C1E0303C(v20);
  uint64_t v33 = v20;
  sub_1C1E02F6C(0);
  sub_1C1E02F38();
  uint64_t v21 = v30;
  sub_1C1EAEDF8();
  swift_bridgeObjectRelease();
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  uint64_t v22 = v28;
  sub_1C1EAE6F8();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v11);
  sub_1C1E02FA0();
  uint64_t v23 = v31;
  uint64_t v24 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v23);
  return v24;
}

uint64_t sub_1C1E026D0(uint64_t a1)
{
  return sub_1C1E03CD4(a1, (uint64_t (*)(void))sub_1C1E05378, (uint64_t (*)(void))sub_1C1DF92F4);
}

uint64_t sub_1C1E026FC(uint64_t (**a1)(char *), uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v17 = a6;
  uint64_t v10 = sub_1C1EADA28();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C1DFD478(a3, a4 + qword_1EBB6AB88, *(unsigned __int8 *)(a4 + qword_1EBB6ABE0), (uint64_t)(a1 + 2), a5, *(void *)(a4 + qword_1EBB6AB80), (uint64_t)v13);
  uint64_t v14 = (*a1)(v13);
  MEMORY[0x1F4188790](v14);
  *(&v17 - 4) = (uint64_t)a1;
  *(&v17 - 3) = (uint64_t)v13;
  *(&v17 - 2) = v17;
  uint64_t v15 = sub_1C1E040D8((void (*)(uint64_t))sub_1C1E06D08, (uint64_t)(&v17 - 6), v14, (uint64_t)v18, (uint64_t (*)(void))sub_1C1DF92F4, (void (*)(BOOL, unint64_t, uint64_t))sub_1C1E0584C, (uint64_t (*)(void))sub_1C1E02B88, (void (*)(char *, unint64_t))sub_1C1E07A18);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v15;
}

uint64_t sub_1C1E02944()
{
  return sub_1C1E02984();
}

uint64_t sub_1C1E02984()
{
  sub_1C1E02B88(0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v3 = (uint64_t (**)())((char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1C1EAD468();
  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1C1E02C50(0, v5, 0);
    uint64_t v6 = v4 + 32;
    uint64_t v7 = v16;
    do
    {
      sub_1C1DFE408(v6, (uint64_t)v13);
      uint64_t v8 = v14;
      uint64_t v9 = v15;
      __swift_project_boxed_opaque_existential_1(v13, v14);
      SharableModelGeneratorPipeline.eraseToAnyPipeline()(v8, v9, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1E02C50(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v16;
      }
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C1E02C50(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v16;
      }
      *(void *)(v7 + 16) = v11 + 1;
      sub_1C1DF7C54((uint64_t)v3, v7+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v11, (uint64_t (*)(void))sub_1C1E02B88);
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v7;
}

void sub_1C1E02B88(uint64_t a1)
{
}

void sub_1C1E02BC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C1EAE718();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C1E02C50(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E02C70(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C1E02C70(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C1E0525C(0, &qword_1EBB67DC8, MEMORY[0x1E4FBBE00]);
  sub_1C1DF8C5C(0, &qword_1EBB676E8, sub_1C1DFD354, (unint64_t *)&unk_1EBB67700, sub_1C1DFD354);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C1DF8C5C(0, &qword_1EBB676E8, sub_1C1DFD354, (unint64_t *)&unk_1EBB67700, sub_1C1DFD354);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (char *)v13 + v18;
  uint64_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E02F38()
{
  return sub_1C1DF9B3C(&qword_1EBB67D60, sub_1C1E02F6C);
}

void sub_1C1E02F6C(uint64_t a1)
{
}

unint64_t sub_1C1E02FA0()
{
  unint64_t result = qword_1EBB64F78;
  if (!qword_1EBB64F78)
  {
    sub_1C1DF9C54(255, &qword_1EBB64F80, (uint64_t (*)(uint64_t))sub_1C1E02F6C, sub_1C1E02F38, MEMORY[0x1E4F1AA70]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64F78);
  }
  return result;
}

uint64_t sub_1C1E0303C(uint64_t a1)
{
  sub_1C1DFEEE8(0);
  uint64_t v24 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v23 = v1;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C1E16420(0, v7, 0);
    uint64_t v8 = v25;
    sub_1C1DF92F4(0);
    uint64_t v10 = v9;
    uint64_t v11 = a1
        + ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
    uint64_t v12 = *(void *)(*(void *)(v9 - 8) + 72);
    do
    {
      uint64_t v13 = (uint64_t)&v6[*(int *)(v24 + 48)];
      sub_1C1E01808(v11, v13);
      uint64_t v14 = v13 + *(int *)(v10 + 36);
      uint64_t v15 = sub_1C1EAD368();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v6, v14, v15);
      uint64_t v25 = v8;
      unint64_t v17 = *(void *)(v8 + 16);
      unint64_t v16 = *(void *)(v8 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C1E16420(v16 > 1, v17 + 1, 1);
        uint64_t v8 = v25;
      }
      *(void *)(v8 + 16) = v17 + 1;
      sub_1C1DF7C54((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v17, (uint64_t (*)(void))sub_1C1DFEEE8);
      v11 += v12;
      --v7;
    }
    while (v7);
  }
  if (*(void *)(v8 + 16))
  {
    sub_1C1E1602C();
    uint64_t v18 = sub_1C1EAF688();
  }
  else
  {
    uint64_t v18 = MEMORY[0x1E4FBC868];
  }
  uint64_t v25 = v18;
  uint64_t v19 = swift_bridgeObjectRetain();
  sub_1C1E03354(v19, 1, &v25);
  swift_bridgeObjectRelease();
  uint64_t v20 = v25;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  sub_1C1E07024((uint64_t)sub_1C1E02224, v21, (uint64_t)&unk_1F1D672C0, (uint64_t)&unk_1F1D67450, (uint64_t)sub_1C1DF5FC8, (uint64_t)&block_descriptor_206);
  return swift_release();
}

void sub_1C1E03354(uint64_t a1, int a2, void *a3)
{
  LODWORD(v60) = a2;
  sub_1C1DF92F4(0);
  uint64_t v59 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1EAD368();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFEEE8(0);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v56 = v3;
  uint64_t v19 = (uint64_t)&v17[*(int *)(v14 + 48)];
  unint64_t v55 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v20 = a1 + v55;
  uint64_t v62 = *(void *)(v15 + 72);
  uint64_t v58 = a1;
  swift_bridgeObjectRetain();
  sub_1C1DF8AE0(v20, (uint64_t)v17, (uint64_t (*)(void))sub_1C1DFEEE8);
  uint64_t v57 = v10;
  uint64_t v21 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  uint64_t v63 = v9;
  uint64_t v64 = v21;
  v21((unint64_t)v12, v17, v9);
  uint64_t v61 = v19;
  uint64_t v65 = v8;
  sub_1C1E07A18(v19, (uint64_t)v8);
  uint64_t v22 = (void *)*a3;
  unint64_t v24 = sub_1C1DF6BD0((uint64_t)v12);
  uint64_t v25 = v22[2];
  BOOL v26 = (v23 & 1) == 0;
  uint64_t v27 = v25 + v26;
  if (__OFADD__(v25, v26)) {
    goto LABEL_24;
  }
  char v28 = v23;
  if (v22[3] >= v27)
  {
    if (v60)
    {
      if (v23) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1C1E010AC();
      if (v28) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v33 = (void *)*a3;
    *(void *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    uint64_t v34 = v33[6];
    uint64_t v60 = *(void *)(v57 + 72);
    uint64_t v35 = v63;
    v64(v34 + v60 * v24, v12, v63);
    uint64_t v36 = v33[7];
    uint64_t v59 = *(void *)(v59 + 72);
    sub_1C1E07A18((uint64_t)v65, v36 + v59 * v24);
    uint64_t v37 = v33[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v33[2] = v39;
    uint64_t v40 = v18 - 1;
    if (v18 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v41 = v58 + v62 + v55;
    while (1)
    {
      sub_1C1DF8AE0(v41, (uint64_t)v17, (uint64_t (*)(void))sub_1C1DFEEE8);
      v64((unint64_t)v12, v17, v35);
      sub_1C1E07A18(v61, (uint64_t)v65);
      char v42 = (void *)*a3;
      unint64_t v44 = sub_1C1DF6BD0((uint64_t)v12);
      uint64_t v45 = v42[2];
      BOOL v46 = (v43 & 1) == 0;
      uint64_t v47 = v45 + v46;
      if (__OFADD__(v45, v46)) {
        break;
      }
      char v48 = v43;
      if (v42[3] < v47)
      {
        sub_1C1E00B88(v47, 1);
        unint64_t v49 = sub_1C1DF6BD0((uint64_t)v12);
        if ((v48 & 1) != (v50 & 1)) {
          goto LABEL_26;
        }
        unint64_t v44 = v49;
      }
      if (v48) {
        goto LABEL_10;
      }
      uint64_t v51 = (void *)*a3;
      *(void *)(*a3 + 8 * (v44 >> 6) + 64) |= 1 << v44;
      uint64_t v35 = v63;
      v64(v51[6] + v60 * v44, v12, v63);
      sub_1C1E07A18((uint64_t)v65, v51[7] + v59 * v44);
      uint64_t v52 = v51[2];
      BOOL v38 = __OFADD__(v52, 1);
      uint64_t v53 = v52 + 1;
      if (v38) {
        goto LABEL_25;
      }
      void v51[2] = v53;
      v41 += v62;
      if (!--v40) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1C1E00B88(v27, v60 & 1);
  unint64_t v29 = sub_1C1DF6BD0((uint64_t)v12);
  if ((v28 & 1) == (v30 & 1))
  {
    unint64_t v24 = v29;
    if ((v28 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v31 = (void *)swift_allocError();
    swift_willThrow();
    id v68 = v31;
    id v32 = v31;
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1C1DF9030((uint64_t)v65, (uint64_t (*)(void))sub_1C1DF92F4);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v63);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1C1EAF7D8();
  __break(1u);
LABEL_27:
  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  sub_1C1EAF4A8();
  sub_1C1EAEDB8();
  sub_1C1EAF5B8();
  sub_1C1EAEDB8();
  sub_1C1EAF628();
  __break(1u);
}

uint64_t sub_1C1E0396C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C1E02BC4(0, &qword_1EBB67CB0, sub_1C1E058D8, (void (*)(void))sub_1C1E058A4);
  uint64_t v11 = v10;
  uint64_t v32 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v30 = (char *)&v26 - v12;
  sub_1C1DF9C54(0, &qword_1EBB64F70, (uint64_t (*)(uint64_t))sub_1C1E058D8, sub_1C1E058A4, MEMORY[0x1E4F1AA70]);
  uint64_t v31 = v13;
  uint64_t v29 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v28 = (char *)&v26 - v14;
  swift_beginAccess();
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v33 = MEMORY[0x1E4FBC860];
  uint64_t v17 = *(void *)(v15 + 16);
  if (v17)
  {
    uint64_t v26 = a3;
    uint64_t v27 = v11;
    uint64_t v18 = (uint64_t (**)(char *))(v15 + 32);
    swift_bridgeObjectRetain_n();
    do
    {
      uint64_t v19 = sub_1C1E03E90(v18, v16, a1, a4, a2, a5);
      sub_1C1E04358(v19);
      v18 += 7;
      --v17;
    }
    while (v17);
    swift_release();
    swift_bridgeObjectRelease_n();
    uint64_t v20 = v33;
    uint64_t v11 = v27;
  }
  else
  {
    swift_release();
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  sub_1C1E059A8(v20);
  uint64_t v33 = v20;
  sub_1C1E058D8(0);
  sub_1C1E058A4();
  uint64_t v21 = v30;
  sub_1C1EAEDF8();
  swift_bridgeObjectRelease();
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  uint64_t v22 = v28;
  sub_1C1EAE6F8();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v11);
  sub_1C1E0590C();
  uint64_t v23 = v31;
  uint64_t v24 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v23);
  return v24;
}

uint64_t sub_1C1E03CD4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E03E90(uint64_t (**a1)(char *), uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v17 = a6;
  uint64_t v10 = sub_1C1EADA28();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C1DFDC40(a3, a4 + qword_1EBB6AB88, *(unsigned __int8 *)(a4 + qword_1EBB6ABE0), (uint64_t)(a1 + 2), a5, *(void *)(a4 + qword_1EBB6AB80), (uint64_t)v13);
  uint64_t v14 = (*a1)(v13);
  MEMORY[0x1F4188790](v14);
  *(&v17 - 4) = (uint64_t)a1;
  *(&v17 - 3) = (uint64_t)v13;
  *(&v17 - 2) = v17;
  uint64_t v15 = sub_1C1E040D8((void (*)(uint64_t))sub_1C1E042EC, (uint64_t)(&v17 - 6), v14, (uint64_t)v18, (uint64_t (*)(void))sub_1C1DFC5AC, (void (*)(BOOL, unint64_t, uint64_t))sub_1C1E0483C, (uint64_t (*)(void))sub_1C1DF8D08, (void (*)(char *, unint64_t))sub_1C1DF7CBC);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v15;
}

uint64_t sub_1C1E040D8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(BOOL, unint64_t, uint64_t), uint64_t (*a7)(void), void (*a8)(char *, unint64_t))
{
  uint64_t v27 = a8;
  char v28 = a1;
  uint64_t v11 = v8;
  uint64_t v29 = a2;
  uint64_t v13 = a5(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v16 = (char *)&v24 - v15;
  unint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = MEMORY[0x1E4FBC860];
  if (v17)
  {
    uint64_t v30 = MEMORY[0x1E4FBC860];
    uint64_t v25 = a6;
    a6(0, v17, 0);
    uint64_t v18 = v30;
    uint64_t v19 = *(void *)(a7(0) - 8);
    uint64_t v20 = a3 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v26 = *(void *)(v19 + 72);
    while (1)
    {
      v28(v20);
      if (v11) {
        break;
      }
      uint64_t v11 = 0;
      uint64_t v30 = v18;
      unint64_t v22 = *(void *)(v18 + 16);
      unint64_t v21 = *(void *)(v18 + 24);
      if (v22 >= v21 >> 1)
      {
        v25(v21 > 1, v22 + 1, 1);
        uint64_t v18 = v30;
      }
      *(void *)(v18 + 16) = v22 + 1;
      v27(v16, v18+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v22);
      v20 += v26;
      if (!--v17) {
        return v18;
      }
    }
    swift_release();
  }
  return v18;
}

uint64_t sub_1C1E042EC(uint64_t a1, uint64_t a2)
{
  return sub_1C1E04318(a1, a2, (uint64_t (*)(uint64_t, void, void, void, unsigned char *))sub_1C1DF7D9C);
}

uint64_t sub_1C1E04318(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, unsigned char *))
{
  return a3(a1, v3[2], v3[3], v3[4], v5);
}

uint64_t sub_1C1E04358(uint64_t a1)
{
  return sub_1C1E03CD4(a1, (uint64_t (*)(void))sub_1C1E04F10, (uint64_t (*)(void))sub_1C1DFC5AC);
}

uint64_t sub_1C1E04384()
{
  return sub_1C1E043C4();
}

uint64_t sub_1C1E043C4()
{
  sub_1C1DF8D08(0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v3 = (uint64_t (**)())((char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1C1EAD458();
  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1C1E04C28(0, v5, 0);
    uint64_t v6 = v4 + 32;
    uint64_t v7 = v16;
    do
    {
      sub_1C1DFE408(v6, (uint64_t)v13);
      uint64_t v8 = v14;
      uint64_t v9 = v15;
      __swift_project_boxed_opaque_existential_1(v13, v14);
      GeneratorPipeline.eraseToAnyPipeline()(v8, v9, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1E04C28(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v16;
      }
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C1E04C28(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v16;
      }
      *(void *)(v7 + 16) = v11 + 1;
      sub_1C1E045B4((uint64_t)v3, v7+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v11);
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v7;
}

uint64_t sub_1C1E045B4(uint64_t a1, uint64_t a2)
{
  sub_1C1DF8D08(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t GeneratorPipeline.eraseToAnyPipeline()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  v23[0] = sub_1C1EAD9C8();
  uint64_t v7 = *(void *)(v23[0] - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v23[0]);
  unint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v3, a1);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, v13, a1);
  sub_1C1EADAE8();
  v23[1] = swift_getDynamicType();
  swift_getMetatypeMetadata();
  uint64_t v16 = sub_1C1EAED68();
  uint64_t v18 = v17;
  *a3 = sub_1C1DFB74C;
  a3[1] = (uint64_t (*)())v15;
  sub_1C1DF8D08(0);
  uint64_t v20 = v19;
  uint64_t result = (*(uint64_t (**)(char *, char *, void))(v7 + 32))((char *)a3 + *(int *)(v19 + 36), v10, v23[0]);
  unint64_t v22 = (uint64_t *)((char *)a3 + *(int *)(v20 + 40));
  *unint64_t v22 = v16;
  v22[1] = v18;
  return result;
}

uint64_t sub_1C1E0483C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E04894(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_1EBB67DD0, (uint64_t)&qword_1EBB678B0, (void (*)(uint64_t, uint64_t, uint64_t (*)()))sub_1C1E04B24, (uint64_t (*)(void, uint64_t, uint64_t (*)()))sub_1C1E04B24);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C1E04894(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t (*)()), uint64_t (*a8)(void, uint64_t, uint64_t (*)()))
{
  if (a3)
  {
    unint64_t v12 = a4[3];
    int64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v13 = a2;
      }
    }
  }
  else
  {
    int64_t v13 = a2;
  }
  uint64_t v14 = a4[2];
  if (v13 <= v14) {
    uint64_t v15 = a4[2];
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C1E04BBC(0, a5, a6, a7);
  uint64_t v16 = *(void *)(a8(0, a6, type metadata accessor for GeneratorPipelineManagerWrapper) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v20 - v18 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_34;
  }
  id v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a8(0, a6, type metadata accessor for GeneratorPipelineManagerWrapper) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = (char *)v19 + v23;
  uint64_t v25 = (char *)a4 + v23;
  if (a1)
  {
    if (v19 < a4 || v24 >= &v25[*(void *)(v22 + 72) * v14])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v26 = *(void *)(v22 + 72) * v14;
  uint64_t v27 = &v24[v26];
  unint64_t v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v19;
  }
LABEL_36:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1E04B24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C1DF8C5C(255, &qword_1EBB676D8, sub_1C1DFBBA4, &qword_1EBB676F0, sub_1C1DFBBA4);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C1E04BBC(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t (*)()))
{
  if (!*a2)
  {
    a4(255, a3, type metadata accessor for GeneratorPipelineManagerWrapper);
    unint64_t v5 = sub_1C1EAF778();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C1E04C28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E04C48(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C1E04C48(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C1E04B24(0, &qword_1EBB67DC0, MEMORY[0x1E4FBBE00]);
  sub_1C1DF8C5C(0, &qword_1EBB676D8, sub_1C1DFBBA4, &qword_1EBB676F0, sub_1C1DFBBA4);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C1DF8C5C(0, &qword_1EBB676D8, sub_1C1DFBBA4, &qword_1EBB676F0, sub_1C1DFBBA4);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (char *)v13 + v18;
  size_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E04F10(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C1E052F4();
  sub_1C1E051F8(0, &qword_1EBB678B0, &qword_1EBB676D8, sub_1C1DFBBA4, &qword_1EBB676F0);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1C1EAF618();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C1E051F8(0, &qword_1EBB678B0, &qword_1EBB676D8, sub_1C1DFBBA4, &qword_1EBB676F0);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (unint64_t)v13 + v18;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v19 >= a4 + v18 + *(void *)(v17 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C1E05660(0, v8, v19, a4, &qword_1EBB678B0, &qword_1EBB676D8, sub_1C1DFBBA4, &qword_1EBB676F0);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void sub_1C1E051F8(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C1DF8BDC(255, a3, a4, a5, a4);
    unint64_t v6 = type metadata accessor for GeneratorPipelineManagerWrapper();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C1E0525C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C1DF8C5C(255, &qword_1EBB676E8, sub_1C1DFD354, (unint64_t *)&unk_1EBB67700, sub_1C1DFD354);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C1E052F4()
{
  if (!qword_1EBB67DD0)
  {
    sub_1C1E051F8(255, &qword_1EBB678B0, &qword_1EBB676D8, sub_1C1DFBBA4, &qword_1EBB676F0);
    unint64_t v0 = sub_1C1EAF778();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67DD0);
    }
  }
}

uint64_t sub_1C1E05378(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C1E057C8();
  sub_1C1E051F8(0, &qword_1EBB678C0, &qword_1EBB676E8, sub_1C1DFD354, (unint64_t *)&unk_1EBB67700);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1C1EAF618();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C1E051F8(0, &qword_1EBB678C0, &qword_1EBB676E8, sub_1C1DFD354, (unint64_t *)&unk_1EBB67700);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (unint64_t)v13 + v18;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v19 >= a4 + v18 + *(void *)(v17 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C1E05660(0, v8, v19, a4, &qword_1EBB678C0, &qword_1EBB676E8, sub_1C1DFD354, (unint64_t *)&unk_1EBB67700);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1C1E05660(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, unint64_t *a6, void (*a7)(uint64_t), unint64_t *a8)
{
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    sub_1C1E051F8(0, a5, a6, a7, a8);
    uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 72);
    unint64_t v14 = a4
        + ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80))
        + v13 * a1;
    unint64_t v15 = a3 + v13 * v8;
    if (v14 >= v15 || v14 + v13 * v8 <= a3)
    {
      swift_arrayInitWithCopy();
      return v15;
    }
  }
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1E057C8()
{
  if (!qword_1EBB67DD8)
  {
    sub_1C1E051F8(255, &qword_1EBB678C0, &qword_1EBB676E8, sub_1C1DFD354, (unint64_t *)&unk_1EBB67700);
    unint64_t v0 = sub_1C1EAF778();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67DD8);
    }
  }
}

uint64_t sub_1C1E0584C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E04894(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_1EBB67DD8, (uint64_t)&qword_1EBB678C0, (void (*)(uint64_t, uint64_t, uint64_t (*)()))sub_1C1E0525C, (uint64_t (*)(void, uint64_t, uint64_t (*)()))sub_1C1E0525C);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C1E058A4()
{
  return sub_1C1DF9B3C(&qword_1EBB67D50, sub_1C1E058D8);
}

void sub_1C1E058D8(uint64_t a1)
{
}

unint64_t sub_1C1E0590C()
{
  unint64_t result = qword_1EBB64F68;
  if (!qword_1EBB64F68)
  {
    sub_1C1DF9C54(255, &qword_1EBB64F70, (uint64_t (*)(uint64_t))sub_1C1E058D8, sub_1C1E058A4, MEMORY[0x1E4F1AA70]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64F68);
  }
  return result;
}

uint64_t sub_1C1E059A8(uint64_t a1)
{
  sub_1C1DF76DC(0);
  uint64_t v24 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v23 = v1;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C1E06384(0, v7, 0);
    uint64_t v8 = v25;
    sub_1C1DFC5AC(0);
    uint64_t v10 = v9;
    uint64_t v11 = a1
        + ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
    uint64_t v12 = *(void *)(*(void *)(v9 - 8) + 72);
    do
    {
      uint64_t v13 = (uint64_t)&v6[*(int *)(v24 + 48)];
      sub_1C1DF8CF0(v11, v13);
      uint64_t v14 = v13 + *(int *)(v10 + 36);
      uint64_t v15 = sub_1C1EAD368();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v6, v14, v15);
      uint64_t v25 = v8;
      unint64_t v17 = *(void *)(v8 + 16);
      unint64_t v16 = *(void *)(v8 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C1E06384(v16 > 1, v17 + 1, 1);
        uint64_t v8 = v25;
      }
      *(void *)(v8 + 16) = v17 + 1;
      sub_1C1DF7C54((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v17, (uint64_t (*)(void))sub_1C1DF76DC);
      v11 += v12;
      --v7;
    }
    while (v7);
  }
  if (*(void *)(v8 + 16))
  {
    sub_1C1E05CC0();
    uint64_t v18 = sub_1C1EAF688();
  }
  else
  {
    uint64_t v18 = MEMORY[0x1E4FBC868];
  }
  uint64_t v25 = v18;
  uint64_t v19 = swift_bridgeObjectRetain();
  sub_1C1E05D6C(v19, 1, &v25);
  swift_bridgeObjectRelease();
  uint64_t v20 = v25;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  sub_1C1E07024((uint64_t)sub_1C1E0231C, v21, (uint64_t)&unk_1F1D66D48, (uint64_t)&unk_1F1D66ED8, (uint64_t)sub_1C1DF5094, (uint64_t)&block_descriptor_5);
  return swift_release();
}

void sub_1C1E05CC0()
{
  if (!qword_1EBB67DA0)
  {
    sub_1C1EAD368();
    sub_1C1DFC5AC(255);
    sub_1C1DF9B3C(&qword_1EBB68168, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C1EAF698();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67DA0);
    }
  }
}

void sub_1C1E05D6C(uint64_t a1, int a2, void *a3)
{
  LODWORD(v60) = a2;
  sub_1C1DFC5AC(0);
  uint64_t v59 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1EAD368();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF76DC(0);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v56 = v3;
  uint64_t v19 = (uint64_t)&v17[*(int *)(v14 + 48)];
  unint64_t v55 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v20 = a1 + v55;
  uint64_t v62 = *(void *)(v15 + 72);
  uint64_t v58 = a1;
  swift_bridgeObjectRetain();
  sub_1C1DF8AE0(v20, (uint64_t)v17, (uint64_t (*)(void))sub_1C1DF76DC);
  uint64_t v57 = v10;
  uint64_t v21 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  uint64_t v63 = v9;
  uint64_t v64 = v21;
  v21((unint64_t)v12, v17, v9);
  uint64_t v61 = v19;
  uint64_t v65 = v8;
  sub_1C1DF7CBC(v19, (uint64_t)v8);
  uint64_t v22 = (void *)*a3;
  unint64_t v24 = sub_1C1DF6BD0((uint64_t)v12);
  uint64_t v25 = v22[2];
  BOOL v26 = (v23 & 1) == 0;
  uint64_t v27 = v25 + v26;
  if (__OFADD__(v25, v26)) {
    goto LABEL_24;
  }
  char v28 = v23;
  if (v22[3] >= v27)
  {
    if (v60)
    {
      if (v23) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1C1DF5F00();
      if (v28) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v33 = (void *)*a3;
    *(void *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    uint64_t v34 = v33[6];
    uint64_t v60 = *(void *)(v57 + 72);
    uint64_t v35 = v63;
    v64(v34 + v60 * v24, v12, v63);
    uint64_t v36 = v33[7];
    uint64_t v59 = *(void *)(v59 + 72);
    sub_1C1DF7CBC((uint64_t)v65, v36 + v59 * v24);
    uint64_t v37 = v33[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v33[2] = v39;
    uint64_t v40 = v18 - 1;
    if (v18 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v41 = v58 + v62 + v55;
    while (1)
    {
      sub_1C1DF8AE0(v41, (uint64_t)v17, (uint64_t (*)(void))sub_1C1DF76DC);
      v64((unint64_t)v12, v17, v35);
      sub_1C1DF7CBC(v61, (uint64_t)v65);
      char v42 = (void *)*a3;
      unint64_t v44 = sub_1C1DF6BD0((uint64_t)v12);
      uint64_t v45 = v42[2];
      BOOL v46 = (v43 & 1) == 0;
      uint64_t v47 = v45 + v46;
      if (__OFADD__(v45, v46)) {
        break;
      }
      char v48 = v43;
      if (v42[3] < v47)
      {
        sub_1C1E000B8(v47, 1);
        unint64_t v49 = sub_1C1DF6BD0((uint64_t)v12);
        if ((v48 & 1) != (v50 & 1)) {
          goto LABEL_26;
        }
        unint64_t v44 = v49;
      }
      if (v48) {
        goto LABEL_10;
      }
      uint64_t v51 = (void *)*a3;
      *(void *)(*a3 + 8 * (v44 >> 6) + 64) |= 1 << v44;
      uint64_t v35 = v63;
      v64(v51[6] + v60 * v44, v12, v63);
      sub_1C1DF7CBC((uint64_t)v65, v51[7] + v59 * v44);
      uint64_t v52 = v51[2];
      BOOL v38 = __OFADD__(v52, 1);
      uint64_t v53 = v52 + 1;
      if (v38) {
        goto LABEL_25;
      }
      void v51[2] = v53;
      v41 += v62;
      if (!--v40) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1C1E000B8(v27, v60 & 1);
  unint64_t v29 = sub_1C1DF6BD0((uint64_t)v12);
  if ((v28 & 1) == (v30 & 1))
  {
    unint64_t v24 = v29;
    if ((v28 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v31 = (void *)swift_allocError();
    swift_willThrow();
    id v68 = v31;
    id v32 = v31;
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1C1DF9030((uint64_t)v65, (uint64_t (*)(void))sub_1C1DFC5AC);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v63);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1C1EAF7D8();
  __break(1u);
LABEL_27:
  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  sub_1C1EAF4A8();
  sub_1C1EAEDB8();
  sub_1C1EAF5B8();
  sub_1C1EAEDB8();
  sub_1C1EAF628();
  __break(1u);
}

uint64_t sub_1C1E06384(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E063D0(a1, a2, a3, (void *)*v3, &qword_1EBB67DB0, &qword_1EBB674E0, (uint64_t)&qword_1EBB678B0, (void (*)(uint64_t, uint64_t, uint64_t (*)()))sub_1C1E04B24);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C1E063D0(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t (*)()))
{
  if (a3)
  {
    unint64_t v13 = a4[3];
    int64_t v14 = v13 >> 1;
    if ((uint64_t)(v13 >> 1) < a2)
    {
      if (v14 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v13 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v14 = a2;
      }
    }
  }
  else
  {
    int64_t v14 = a2;
  }
  uint64_t v15 = a4[2];
  if (v14 <= v15) {
    uint64_t v16 = a4[2];
  }
  else {
    uint64_t v16 = v14;
  }
  if (!v16)
  {
    uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C1E066E4(0, a5, a6, a7, a8);
  sub_1C1E06648(0, a6, a7, a8);
  uint64_t v18 = *(void *)(*(void *)(v17 - 8) + 72);
  unint64_t v19 = (*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80);
  uint64_t v20 = (void *)swift_allocObject();
  size_t v21 = _swift_stdlib_malloc_size(v20);
  if (!v18)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v21 - v19 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_34;
  }
  v20[2] = v15;
  v20[3] = 2 * ((uint64_t)(v21 - v19) / v18);
LABEL_19:
  sub_1C1E06648(0, a6, a7, a8);
  uint64_t v24 = *(void *)(v23 - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  BOOL v26 = (char *)v20 + v25;
  uint64_t v27 = (char *)a4 + v25;
  if (a1)
  {
    if (v20 < a4 || v26 >= &v27[*(void *)(v24 + 72) * v15])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v20 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v28 = *(void *)(v24 + 72) * v15;
  unint64_t v29 = &v26[v28];
  unint64_t v30 = (unint64_t)&v27[v28];
  if (v27 >= v29 || (unint64_t)v26 >= v30)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v20;
  }
LABEL_36:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1E06648(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t (*)()))
{
  if (!*a2)
  {
    sub_1C1EAD368();
    a4(255, a3, type metadata accessor for GeneratorPipelineManagerWrapper);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v8) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C1E066E4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t (*)()))
{
  if (!*a2)
  {
    sub_1C1E06648(255, a3, a4, a5);
    unint64_t v6 = sub_1C1EAF778();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C1E06740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(unsigned char *, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v9 = sub_1C1EADA28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v52 = &v45[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  int64_t v14 = &v45[-v13];
  sub_1C1E02B88(0);
  uint64_t v51 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v45[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_1C1EAE568();
  uint64_t v56 = *(void *)(v18 - 8);
  uint64_t v57 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v45[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C1EAE4F8();
  uint64_t v59 = a2;
  sub_1C1DF8AE0(a2, (uint64_t)v62, (uint64_t (*)(void))sub_1C1DFD444);
  uint64_t v58 = a1;
  sub_1C1DF8AE0(a1, (uint64_t)v17, (uint64_t (*)(void))sub_1C1E02B88);
  uint64_t v54 = v14;
  uint64_t v55 = v10;
  size_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v60 = v9;
  v21(v14, a3, v9);
  uint64_t v22 = sub_1C1EAE558();
  os_log_type_t v23 = sub_1C1EAF0D8();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v49 = a3;
    uint64_t v26 = v25;
    uint64_t v48 = swift_slowAlloc();
    uint64_t v61 = v48;
    *(_DWORD *)uint64_t v26 = 136446978;
    os_log_t v47 = v22;
    uint64_t v64 = (uint64_t)v53;
    swift_getMetatypeMetadata();
    int v46 = v24;
    uint64_t v27 = sub_1C1EAED68();
    uint64_t v50 = a5;
    uint64_t v64 = sub_1C1DF8D44(v27, v28, &v61);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    uint64_t v53 = v21;
    __swift_project_boxed_opaque_existential_1(v63, v63[3]);
    uint64_t v29 = sub_1C1EAD5B8();
    uint64_t v64 = sub_1C1DF8D44(v29, v30, &v61);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    sub_1C1DF9030((uint64_t)v62, (uint64_t (*)(void))sub_1C1DFD444);
    *(_WORD *)(v26 + 22) = 2082;
    uint64_t v31 = (void *)sub_1C1EAD9A8();
    uint64_t v32 = sub_1C1EAD798();
    unint64_t v34 = v33;

    uint64_t v64 = sub_1C1DF8D44(v32, v34, &v61);
    sub_1C1EAF2C8();
    a5 = v50;
    swift_bridgeObjectRelease();
    sub_1C1DF9030((uint64_t)v17, (uint64_t (*)(void))sub_1C1E02B88);
    *(_WORD *)(v26 + 32) = 2082;
    uint64_t v35 = v54;
    uint64_t v36 = v60;
    v53(v52, (uint64_t)v54, v60);
    uint64_t v37 = sub_1C1EAED68();
    uint64_t v64 = sub_1C1DF8D44(v37, v38, &v61);
    sub_1C1EAF2C8();
    size_t v21 = v53;
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v35, v36);
    uint64_t v22 = v47;
    _os_log_impl(&dword_1C1DD2000, v47, (os_log_type_t)v46, "[%{public}s]: delegate returned pipeline <%{public}s> for profile %{public}s and context %{public}s.", (uint8_t *)v26, 0x2Au);
    uint64_t v39 = v48;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v39, -1, -1);
    uint64_t v40 = v26;
    a3 = v49;
    MEMORY[0x1C874D2E0](v40, -1, -1);
  }
  else
  {
    sub_1C1DF9030((uint64_t)v62, (uint64_t (*)(void))sub_1C1DFD444);
    sub_1C1DF9030((uint64_t)v17, (uint64_t (*)(void))sub_1C1E02B88);
    uint64_t v36 = v60;
    (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v54, v60);
  }

  (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v20, v57);
  sub_1C1DF8AE0(v58, a5, (uint64_t (*)(void))sub_1C1E02B88);
  uint64_t v41 = v59 + 16;
  sub_1C1DF92F4(0);
  uint64_t v43 = v42;
  sub_1C1DFE408(v41, a5 + *(int *)(v42 + 28));
  v21((unsigned char *)(a5 + *(int *)(v43 + 32)), a3, v36);
  return sub_1C1EAD358();
}

uint64_t sub_1C1E06D08(uint64_t a1, uint64_t a2)
{
  return sub_1C1E04318(a1, a2, (uint64_t (*)(uint64_t, void, void, void, unsigned char *))sub_1C1E06740);
}

uint64_t sub_1C1E06D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C1DF7CD4(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1E0776C(a3, (uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a2;
    sub_1C1E07754((uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
    swift_retain();
    sub_1C1E07024((uint64_t)sub_1C1E07354, v10, (uint64_t)&unk_1F1D672C0, (uint64_t)&unk_1F1D67450, (uint64_t)sub_1C1DF5FC8, (uint64_t)&block_descriptor_206);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1E06EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1DFC5AC(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1DF8CF0(a4, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a3;
    sub_1C1DF7CBC((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
    swift_retain();
    sub_1C1E07024((uint64_t)sub_1C1DF5F48, v11, (uint64_t)&unk_1F1D66D48, (uint64_t)&unk_1F1D66ED8, (uint64_t)sub_1C1DF5094, (uint64_t)&block_descriptor_5);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1E07024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v9 = sub_1C1EAEB78();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C1EAEBD8();
  uint64_t v13 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(v6 + 152);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = v16;
  v17[3] = a1;
  void v17[4] = a2;
  aBlock[4] = v21;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1DF5050;
  aBlock[3] = v22;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1C1EAEB98();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C1DF9B3C((unint64_t *)&qword_1EBB683C8, MEMORY[0x1E4FBCB00]);
  sub_1C1E07320(0);
  sub_1C1DF9B3C((unint64_t *)&qword_1EBB683D8, sub_1C1E07320);
  sub_1C1EAF328();
  MEMORY[0x1C874C3B0](0, v15, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v24);
  swift_release();
  return swift_release();
}

void sub_1C1E07320(uint64_t a1)
{
}

uint64_t sub_1C1E07354(uint64_t a1)
{
  return sub_1C1DF5198(a1, (uint64_t (*)(void))sub_1C1DF7CD4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C1E07380);
}

uint64_t sub_1C1E07380@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  return sub_1C1DF5FCC(a1, a2, (uint64_t (*)(void))sub_1C1DFEEB4, (uint64_t (*)(void))sub_1C1DF7CD4, (void (*)(char *, char *))sub_1C1DF61A8, a3);
}

uint64_t sub_1C1E073C0(uint64_t a1)
{
  return sub_1C1DF5198(a1, (uint64_t (*)(void))sub_1C1DF7CD4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C1E073EC);
}

uint64_t sub_1C1E073EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C1DF5234(a1, a2, a3, (uint64_t (*)(void))sub_1C1DFEEB4, (uint64_t (*)(void))sub_1C1DF7CD4, (void (*)(uint64_t, char *))sub_1C1E0776C, (void (*)(char *, char *))sub_1C1DF61A8, a4);
}

uint64_t sub_1C1E07440(uint64_t a1)
{
  return sub_1C1DF5198(a1, (uint64_t (*)(void))sub_1C1DF92F4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C1E0746C);
}

uint64_t sub_1C1E0746C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C1DF5234(a1, a2, a3, (uint64_t (*)(void))sub_1C1E00E7C, (uint64_t (*)(void))sub_1C1DF92F4, (void (*)(uint64_t, char *))sub_1C1E01808, (void (*)(char *, char *))sub_1C1E00C18, a4);
}

uint64_t sub_1C1E074C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v18[0] = a4;
  sub_1C1DF7CD4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = a3;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  sub_1C1E0776C(a1, (uint64_t)v10);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = a2;
  sub_1C1E07754((uint64_t)v10, v13 + v12);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  sub_1C1E0776C(a1, (uint64_t)v10);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a2;
  sub_1C1E07754((uint64_t)v10, v15 + v12);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1C1DD6C40;
  *(void *)(v16 + 24) = v15;
  sub_1C1E14CAC(0, &qword_1EBB67D28, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AAE0]);
  sub_1C1E14E38();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1C1EAEA58();
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1C1E07754(uint64_t a1, uint64_t a2)
{
  return sub_1C1DF7C54(a1, a2, (uint64_t (*)(void))sub_1C1DF7CD4);
}

uint64_t sub_1C1E0776C(uint64_t a1, uint64_t a2)
{
  return sub_1C1DF8AE0(a1, a2, (uint64_t (*)(void))sub_1C1DF7CD4);
}

uint64_t sub_1C1E07784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v18[0] = a4;
  sub_1C1DF92F4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = a3;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  sub_1C1E01808(a1, (uint64_t)v10);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = a2;
  sub_1C1E07A18((uint64_t)v10, v13 + v12);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  sub_1C1E01808(a1, (uint64_t)v10);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a2;
  sub_1C1E07A18((uint64_t)v10, v15 + v12);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1C1E67AD4;
  *(void *)(v16 + 24) = v15;
  sub_1C1E14CAC(0, &qword_1EBB67CE8, (uint64_t (*)(uint64_t))sub_1C1DFD354, MEMORY[0x1E4F1AAE0]);
  sub_1C1E07A30();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1C1EAEA58();
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1C1E07A18(uint64_t a1, uint64_t a2)
{
  return sub_1C1DF7C54(a1, a2, (uint64_t (*)(void))sub_1C1DF92F4);
}

unint64_t sub_1C1E07A30()
{
  unint64_t result = qword_1EBB67CE0;
  if (!qword_1EBB67CE0)
  {
    sub_1C1E14CAC(255, &qword_1EBB67CE8, (uint64_t (*)(uint64_t))sub_1C1DFD354, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB67CE0);
  }
  return result;
}

uint64_t sub_1C1E07AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1E5FEBC);
}

uint64_t sub_1C1E07ACC()
{
  return sub_1C1DFB370((uint64_t (*)(unint64_t))sub_1C1E07AE4);
}

uint64_t sub_1C1E07AE4()
{
  sub_1C1E07CB0();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = sub_1C1EAE028();
  sub_1C1DFB994(0, &qword_1EBB67CC8, &qword_1EBB67510);
  sub_1C1DFD354(0);
  sub_1C1DFB9FC(&qword_1EBB67CC0, &qword_1EBB67CC8, &qword_1EBB67510);
  sub_1C1EAEA68();
  swift_release();
  sub_1C1DFBA4C(&qword_1EBB67C58, (void (*)(uint64_t))sub_1C1E07CB0);
  uint64_t v5 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

void sub_1C1E07CB0()
{
  if (!qword_1EBB67C60)
  {
    sub_1C1DFB994(255, &qword_1EBB67CC8, &qword_1EBB67510);
    sub_1C1DFD354(255);
    sub_1C1DFB9FC(&qword_1EBB67CC0, &qword_1EBB67CC8, &qword_1EBB67510);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67C60);
    }
  }
}

uint64_t SharableModelGeneratorPipeline.eraseToAnyPipeline()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  v23[0] = sub_1C1EAD9C8();
  uint64_t v7 = *(void *)(v23[0] - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v23[0]);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v3, a1);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, v13, a1);
  sub_1C1EAE018();
  v23[1] = swift_getDynamicType();
  swift_getMetatypeMetadata();
  uint64_t v16 = sub_1C1EAED68();
  uint64_t v18 = v17;
  *a3 = sub_1C1E07ACC;
  a3[1] = (uint64_t (*)())v15;
  sub_1C1E02B88(0);
  uint64_t v20 = v19;
  uint64_t result = (*(uint64_t (**)(char *, char *, void))(v7 + 32))((char *)a3 + *(int *)(v19 + 36), v10, v23[0]);
  uint64_t v22 = (uint64_t *)((char *)a3 + *(int *)(v20 + 40));
  *uint64_t v22 = v16;
  v22[1] = v18;
  return result;
}

void *FeedItemGeneratorPipelineManager.init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v16 = a4 & 1;
  sub_1C1EAE398();
  swift_allocObject();
  swift_retain();
  *(void *)(v9 + 248) = sub_1C1EAE388();
  *(_OWORD *)(v9 + 256) = xmmword_1C1EB2860;
  *(void *)(v9 + 272) = 0;
  *(void *)(v9 + 280) = 0;
  swift_release();
  sub_1C1DFE408(a1, (uint64_t)v23);
  sub_1C1DFE408(a5, (uint64_t)v22);
  sub_1C1DFE408(a8, (uint64_t)v21);
  sub_1C1DFE408(a9, (uint64_t)v20);
  uint64_t v17 = sub_1C1E080C4((uint64_t)v23, a2, a3, v16, (uint64_t)v22, a6, a7, (uint64_t)v21, (uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1(a9);
  __swift_destroy_boxed_opaque_existential_1(a8);
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v17;
}

void *sub_1C1E080C4(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v50 = a8;
  uint64_t v66 = a7;
  uint64_t v58 = a6;
  uint64_t v49 = a5;
  uint64_t v48 = a3;
  os_log_t v47 = a2;
  uint64_t v67 = a9;
  uint64_t v68 = a1;
  uint64_t v64 = *v9;
  int v46 = a4 & 1;
  uint64_t v11 = sub_1C1EAF178();
  uint64_t v61 = *(void *)(v11 - 8);
  uint64_t v62 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E09CA4(0, &qword_1EBB658C8, sub_1C1E08A20, (void (*)(void))sub_1C1E08A54);
  uint64_t v63 = v13;
  uint64_t v65 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v60 = (char *)&v43 - v14;
  uint64_t v55 = sub_1C1EAD948();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v53 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1C1EAD9C8();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v52 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1C1EAF188();
  uint64_t v43 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C1EAF148();
  MEMORY[0x1F4188790](v19);
  uint64_t v20 = sub_1C1EAEBD8();
  MEMORY[0x1F4188790](v20 - 8);
  unint64_t v70 = MEMORY[0x1E4FBC868];
  unint64_t v71 = MEMORY[0x1E4FBC868];
  sub_1C1E08A20(0);
  uint64_t v51 = v21;
  swift_allocObject();
  void v9[2] = sub_1C1EAE868();
  v9[4] = 0;
  uint64_t v45 = sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68388);
  unint64_t v70 = 0;
  unint64_t v71 = 0xE000000000000000;
  sub_1C1EAF4A8();
  sub_1C1E08B10();
  unint64_t v70 = v22;
  sub_1C1E09A34(0, &qword_1EBB67868, (void (*)(uint64_t))sub_1C1E08B10);
  uint64_t v23 = sub_1C1EAED68();
  unint64_t v25 = v24;
  swift_bridgeObjectRelease();
  unint64_t v70 = v23;
  unint64_t v71 = v25;
  sub_1C1EAEDB8();
  sub_1C1EAEB98();
  unint64_t v70 = MEMORY[0x1E4FBC860];
  sub_1C1DF9B3C(&qword_1EBB68380, MEMORY[0x1E4FBCC10]);
  sub_1C1E09A74(0);
  sub_1C1DF9B3C((unint64_t *)&qword_1EBB68370, sub_1C1E09A74);
  sub_1C1EAF328();
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v18, *MEMORY[0x1E4FBCC58], v44);
  v9[19] = sub_1C1EAF1A8();
  sub_1C1DFE408(v68, (uint64_t)(v9 + 8));
  uint64_t v26 = v47;
  void v9[6] = (uint64_t)v47;
  v9[3] = v48;
  *((unsigned char *)v9 + 40) = v46;
  uint64_t v27 = v49;
  sub_1C1DFE408(v49, (uint64_t)(v9 + 13));
  v9[30] = v66;
  uint64_t v28 = v50;
  sub_1C1DFE408(v50, (uint64_t)(v9 + 20));
  uint64_t v29 = v67;
  sub_1C1DFE408(v67, (uint64_t)(v9 + 25));
  sub_1C1DF7678(0, &qword_1EBB670E8, (uint64_t (*)(uint64_t))sub_1C1E48A54, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1EB07F0;
  id v31 = v26;
  swift_retain();
  *(void *)(inited + 32) = objc_msgSend(v31, sel_profileIdentifier);
  *(void *)(inited + 40) = v31;
  id v32 = v31;
  unint64_t v70 = sub_1C1E09AA8(inited);
  sub_1C1DF7678(0, (unint64_t *)&qword_1EBB66210, (uint64_t (*)(uint64_t))sub_1C1E65F54, MEMORY[0x1E4F674D8]);
  swift_allocObject();
  v10[7] = sub_1C1EAE1D8();
  v10[18] = v58;
  unint64_t v33 = (void *)v29;
  uint64_t v34 = *(void *)(v29 + 24);
  uint64_t v35 = *(void *)(v29 + 32);
  __swift_project_boxed_opaque_existential_1(v33, v34);
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *MEMORY[0x1E4F67198], v55);
  swift_retain();
  uint64_t v36 = v52;
  sub_1C1EAD988();
  uint64_t v37 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 8))(v36, v34, v35);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v57);
  unint64_t v70 = v10[2];
  swift_retain();
  unint64_t v38 = v59;
  sub_1C1EAF168();
  uint64_t v69 = v37;
  sub_1C1E08A54();
  sub_1C1DFAEA0((unint64_t *)&qword_1EBB67F58, (unint64_t *)&qword_1EBB68388);
  uint64_t v39 = v60;
  sub_1C1EAEB18();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v62);
  swift_release();
  *(void *)(swift_allocObject() + 16) = v64;
  sub_1C1E08A88();
  uint64_t v40 = v63;
  uint64_t v41 = sub_1C1EAEB48();

  swift_release();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v28);
  __swift_destroy_boxed_opaque_existential_1(v27);
  __swift_destroy_boxed_opaque_existential_1(v68);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v39, v40);
  v10[4] = v41;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v67);
  return v10;
}

void sub_1C1E08A20(uint64_t a1)
{
}

uint64_t sub_1C1E08A54()
{
  return sub_1C1DF9B3C(&qword_1EBB65950, sub_1C1E08A20);
}

unint64_t sub_1C1E08A88()
{
  unint64_t result = qword_1EBB658C0;
  if (!qword_1EBB658C0)
  {
    sub_1C1E09CA4(255, &qword_1EBB658C8, sub_1C1E08A20, (void (*)(void))sub_1C1E08A54);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB658C0);
  }
  return result;
}

void sub_1C1E08B10()
{
  if (!qword_1EBB67860)
  {
    sub_1C1DFB710(255);
    sub_1C1DF9B3C(&qword_1EBB67718, sub_1C1DFB710);
    unint64_t v0 = type metadata accessor for GeneratorPipelineManager();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67860);
    }
  }
}

void *sub_1C1E08BA4(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v50 = a8;
  uint64_t v66 = a7;
  uint64_t v58 = a6;
  uint64_t v49 = a5;
  uint64_t v48 = a3;
  os_log_t v47 = a2;
  uint64_t v67 = a9;
  uint64_t v68 = a1;
  uint64_t v64 = *v9;
  int v46 = a4 & 1;
  uint64_t v11 = sub_1C1EAF178();
  uint64_t v61 = *(void *)(v11 - 8);
  uint64_t v62 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E09CA4(0, &qword_1EBB658D8, sub_1C1E09D80, (void (*)(void))sub_1C1E09DB4);
  uint64_t v63 = v13;
  uint64_t v65 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v60 = (char *)&v43 - v14;
  uint64_t v55 = sub_1C1EAD948();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v53 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1C1EAD9C8();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v52 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1C1EAF188();
  uint64_t v43 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C1EAF148();
  MEMORY[0x1F4188790](v19);
  uint64_t v20 = sub_1C1EAEBD8();
  MEMORY[0x1F4188790](v20 - 8);
  unint64_t v70 = MEMORY[0x1E4FBC868];
  unint64_t v71 = MEMORY[0x1E4FBC868];
  sub_1C1E09D80(0);
  uint64_t v51 = v21;
  swift_allocObject();
  void v9[2] = sub_1C1EAE868();
  v9[4] = 0;
  uint64_t v45 = sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68388);
  unint64_t v70 = 0;
  unint64_t v71 = 0xE000000000000000;
  sub_1C1EAF4A8();
  sub_1C1E09E70();
  unint64_t v70 = v22;
  sub_1C1E09A34(0, (unint64_t *)&unk_1EBB67878, (void (*)(uint64_t))sub_1C1E09E70);
  uint64_t v23 = sub_1C1EAED68();
  unint64_t v25 = v24;
  swift_bridgeObjectRelease();
  unint64_t v70 = v23;
  unint64_t v71 = v25;
  sub_1C1EAEDB8();
  sub_1C1EAEB98();
  unint64_t v70 = MEMORY[0x1E4FBC860];
  sub_1C1DF9B3C(&qword_1EBB68380, MEMORY[0x1E4FBCC10]);
  sub_1C1E09A74(0);
  sub_1C1DF9B3C((unint64_t *)&qword_1EBB68370, sub_1C1E09A74);
  sub_1C1EAF328();
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v18, *MEMORY[0x1E4FBCC58], v44);
  v9[19] = sub_1C1EAF1A8();
  sub_1C1DFE408(v68, (uint64_t)(v9 + 8));
  uint64_t v26 = v47;
  void v9[6] = (uint64_t)v47;
  v9[3] = v48;
  *((unsigned char *)v9 + 40) = v46;
  uint64_t v27 = v49;
  sub_1C1DFE408(v49, (uint64_t)(v9 + 13));
  v9[30] = v66;
  uint64_t v28 = v50;
  sub_1C1DFE408(v50, (uint64_t)(v9 + 20));
  uint64_t v29 = v67;
  sub_1C1DFE408(v67, (uint64_t)(v9 + 25));
  sub_1C1DF7678(0, &qword_1EBB670E8, (uint64_t (*)(uint64_t))sub_1C1E48A54, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1EB07F0;
  id v31 = v26;
  swift_retain();
  *(void *)(inited + 32) = objc_msgSend(v31, sel_profileIdentifier);
  *(void *)(inited + 40) = v31;
  id v32 = v31;
  unint64_t v70 = sub_1C1E09AA8(inited);
  sub_1C1DF7678(0, (unint64_t *)&qword_1EBB66210, (uint64_t (*)(uint64_t))sub_1C1E65F54, MEMORY[0x1E4F674D8]);
  swift_allocObject();
  v10[7] = sub_1C1EAE1D8();
  v10[18] = v58;
  unint64_t v33 = (void *)v29;
  uint64_t v34 = *(void *)(v29 + 24);
  uint64_t v35 = *(void *)(v29 + 32);
  __swift_project_boxed_opaque_existential_1(v33, v34);
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *MEMORY[0x1E4F67198], v55);
  swift_retain();
  uint64_t v36 = v52;
  sub_1C1EAD988();
  uint64_t v37 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 8))(v36, v34, v35);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v57);
  unint64_t v70 = v10[2];
  swift_retain();
  unint64_t v38 = v59;
  sub_1C1EAF168();
  uint64_t v69 = v37;
  sub_1C1E09DB4();
  sub_1C1DFAEA0((unint64_t *)&qword_1EBB67F58, (unint64_t *)&qword_1EBB68388);
  uint64_t v39 = v60;
  sub_1C1EAEB18();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v62);
  swift_release();
  *(void *)(swift_allocObject() + 16) = v64;
  sub_1C1E09DE8();
  uint64_t v40 = v63;
  uint64_t v41 = sub_1C1EAEB48();

  swift_release();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v28);
  __swift_destroy_boxed_opaque_existential_1(v27);
  __swift_destroy_boxed_opaque_existential_1(v68);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v39, v40);
  v10[4] = v41;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v67);
  return v10;
}

uint64_t sub_1C1E09500(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t (*a5)(void, id *), void (*a6)(id *, char *, void *, void *, void *, void *), uint64_t a7)
{
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  unint64_t v24 = a3;
  unint64_t v25 = a4;
  uint64_t v26 = a1;
  sub_1C1DFA600(0, &qword_1EBB67F50, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = (void *)sub_1C1DF9F8C(255, (unint64_t *)&qword_1EBB68388);
  uint64_t v15 = (void *)sub_1C1DFAEA0((unint64_t *)&qword_1EBB67F58, (unint64_t *)&qword_1EBB68388);
  v29[0] = a3;
  v29[1] = v14;
  uint64_t v29[2] = a4;
  v29[3] = v15;
  uint64_t v16 = a5(0, v29);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v23 - v18;
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v29[0] = (id)sub_1C1EAD918();
  uint64_t v20 = sub_1C1EAF158();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
  v27(v29, v13, v24, v14, v25, v15);
  sub_1C1DFAEE4((uint64_t)v13);

  swift_getWitnessTable();
  uint64_t v21 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return v21;
}

uint64_t sub_1C1E09784(uint64_t a1)
{
  uint64_t v3 = (void *)(*v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_queueProvider);
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, v4, v5);
}

void sub_1C1E097EC(uint64_t a1)
{
}

uint64_t sub_1C1E09814(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v7 = sub_1C1EAE568();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE4F8();
  uint64_t v11 = sub_1C1EAE558();
  os_log_type_t v12 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v20 = v7;
    uint64_t v13 = a4;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    uint64_t v19 = v14 + 4;
    uint64_t v21 = a2(0);
    sub_1C1E09A34(0, a3, v13);
    uint64_t v16 = sub_1C1EAED68();
    uint64_t v21 = sub_1C1DF8D44(v16, v17, &v22);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v11, v12, "[%{public}s]: subscription to begin generation received", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v15, -1, -1);
    MEMORY[0x1C874D2E0](v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1C1E09A34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1C1E09A74(uint64_t a1)
{
}

unint64_t sub_1C1E09AA8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C1E09BCC(0, (unint64_t *)&qword_1EBB67080, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C1EAF688();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1C1E0DE00((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    void v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1C1E09BCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1DF9F8C(255, &qword_1EBB68260);
    uint64_t v7 = sub_1C1DF9F8C(255, &qword_1EBB66FE8);
    uint64_t v8 = sub_1C1DFAEA0((unint64_t *)&qword_1EBB67000, &qword_1EBB68260);
    unint64_t v9 = a3(a1, v6, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C1E09CA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C1DF9F8C(255, (unint64_t *)&qword_1EBB68388);
    a4();
    sub_1C1DFAEA0((unint64_t *)&qword_1EBB67F58, (unint64_t *)&qword_1EBB68388);
    unint64_t v6 = sub_1C1EAE728();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C1E09D80(uint64_t a1)
{
}

uint64_t sub_1C1E09DB4()
{
  return sub_1C1DF9B3C(&qword_1EBB65960, sub_1C1E09D80);
}

unint64_t sub_1C1E09DE8()
{
  unint64_t result = qword_1EBB658D0;
  if (!qword_1EBB658D0)
  {
    sub_1C1E09CA4(255, &qword_1EBB658D8, sub_1C1E09D80, (void (*)(void))sub_1C1E09DB4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB658D0);
  }
  return result;
}

void sub_1C1E09E70()
{
  if (!qword_1EBB67870)
  {
    sub_1C1E01F14(255);
    sub_1C1DF9B3C(&qword_1EBB67728, sub_1C1E01F14);
    unint64_t v0 = type metadata accessor for GeneratorPipelineManager();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67870);
    }
  }
}

uint64_t sub_1C1E09F04(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v51 = *v2;
  sub_1C1E0A6DC();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v45 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E0A788();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  MEMORY[0x1F4188790](v6);
  int v46 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E14DA0(0, &qword_1EBB66EC0, MEMORY[0x1E4F1A9E8]);
  v42[0] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v42 - v10;
  sub_1C1E0B120();
  uint64_t v13 = v12;
  uint64_t v43 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E14DA0(0, &qword_1EBB66EA0, MEMORY[0x1E4F1A9A8]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v42 - v19;
  uint64_t v44 = a1;
  uint64_t v21 = *(void *)(a1 + 16);
  if (sub_1C1EADF78())
  {
    uint64_t v52 = v21;
    sub_1C1E0BF98(0, (unint64_t *)&qword_1EBB66F20, &qword_1EBB66F98, MEMORY[0x1E4F670C0], MEMORY[0x1E4F1AAE0]);
    sub_1C1E0C088();
    sub_1C1EAEA98();
    sub_1C1E0B0DC((unint64_t *)&qword_1EBB66E98, &qword_1EBB66EA0, MEMORY[0x1E4F1A9A8]);
    uint64_t v21 = sub_1C1EAEA38();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    swift_retain();
  }
  v42[1] = v21;
  uint64_t v52 = v21;
  *(void *)(swift_allocObject() + 16) = v51;
  sub_1C1E0BF98(0, (unint64_t *)&qword_1EBB66F20, &qword_1EBB66F98, MEMORY[0x1E4F670C0], MEMORY[0x1E4F1AAE0]);
  sub_1C1E0C088();
  sub_1C1EAEAA8();
  swift_release();
  sub_1C1E0B0DC((unint64_t *)&qword_1EBB66EB8, &qword_1EBB66EC0, MEMORY[0x1E4F1A9E8]);
  uint64_t v22 = v42[0];
  uint64_t v23 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  uint64_t v52 = v23;
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  sub_1C1EAEB38();
  swift_release();
  sub_1C1DF9B3C(&qword_1EBB64D40, (void (*)(uint64_t))sub_1C1E0B120);
  uint64_t v24 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v13);
  uint64_t v25 = v2[23];
  uint64_t v26 = v2[24];
  __swift_project_boxed_opaque_existential_1(v2 + 20, v25);
  uint64_t v52 = v24;
  uint64_t v27 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 24);
  sub_1C1E0B04C();
  uint64_t v29 = v28;
  uint64_t v30 = sub_1C1DF9B3C(&qword_1EBB65048, (void (*)(uint64_t))sub_1C1E0B04C);
  uint64_t v52 = v27(&v52, v29, v30, v25, v26);
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  id v32 = (void *)swift_allocObject();
  v32[2] = v31;
  uint64_t v33 = v51;
  v32[3] = v44;
  v32[4] = v33;
  sub_1C1DF91CC(0);
  swift_retain();
  uint64_t v34 = v45;
  sub_1C1EAEA68();
  swift_release();
  swift_release();
  uint64_t v35 = sub_1C1DF9B3C(&qword_1EBB64DE8, (void (*)(uint64_t))sub_1C1E0A6DC);
  uint64_t v36 = sub_1C1DF9B3C((unint64_t *)&qword_1EBB65018, sub_1C1DF91CC);
  uint64_t v37 = v46;
  uint64_t v38 = v48;
  MEMORY[0x1C874BC40](v48, v35, v36);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v38);
  sub_1C1DF9B3C(&qword_1EBB64D70, (void (*)(uint64_t))sub_1C1E0A788);
  uint64_t v39 = v50;
  uint64_t v40 = sub_1C1EAEA38();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v37, v39);
  return v40;
}

void sub_1C1E0A6DC()
{
  if (!qword_1EBB64DF0)
  {
    sub_1C1E0B04C();
    sub_1C1DF91CC(255);
    sub_1C1DF9B3C(&qword_1EBB65048, (void (*)(uint64_t))sub_1C1E0B04C);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64DF0);
    }
  }
}

void sub_1C1E0A788()
{
  if (!qword_1EBB64D78)
  {
    sub_1C1DF91CC(255);
    sub_1C1E0A6DC();
    sub_1C1DF9B3C((unint64_t *)&qword_1EBB65018, sub_1C1DF91CC);
    sub_1C1DF9B3C(&qword_1EBB64DE8, (void (*)(uint64_t))sub_1C1E0A6DC);
    unint64_t v0 = sub_1C1EAE618();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64D78);
    }
  }
}

uint64_t sub_1C1E0A874(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v51 = *v2;
  sub_1C1E0B1E8();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v45 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E0B294();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  MEMORY[0x1F4188790](v6);
  int v46 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E14DA0(0, &qword_1EBB66EC0, MEMORY[0x1E4F1A9E8]);
  v42[0] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v42 - v10;
  sub_1C1E0B120();
  uint64_t v13 = v12;
  uint64_t v43 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E14DA0(0, &qword_1EBB66EA0, MEMORY[0x1E4F1A9A8]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v42 - v19;
  uint64_t v44 = a1;
  uint64_t v21 = *(void *)(a1 + 16);
  if (sub_1C1EADF78())
  {
    uint64_t v52 = v21;
    sub_1C1E0BF98(0, (unint64_t *)&qword_1EBB66F20, &qword_1EBB66F98, MEMORY[0x1E4F670C0], MEMORY[0x1E4F1AAE0]);
    sub_1C1E0C088();
    sub_1C1EAEA98();
    sub_1C1E0B0DC((unint64_t *)&qword_1EBB66E98, &qword_1EBB66EA0, MEMORY[0x1E4F1A9A8]);
    uint64_t v21 = sub_1C1EAEA38();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    swift_retain();
  }
  v42[1] = v21;
  uint64_t v52 = v21;
  *(void *)(swift_allocObject() + 16) = v51;
  sub_1C1E0BF98(0, (unint64_t *)&qword_1EBB66F20, &qword_1EBB66F98, MEMORY[0x1E4F670C0], MEMORY[0x1E4F1AAE0]);
  sub_1C1E0C088();
  sub_1C1EAEAA8();
  swift_release();
  sub_1C1E0B0DC((unint64_t *)&qword_1EBB66EB8, &qword_1EBB66EC0, MEMORY[0x1E4F1A9E8]);
  uint64_t v22 = v42[0];
  uint64_t v23 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  uint64_t v52 = v23;
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  sub_1C1EAEB38();
  swift_release();
  sub_1C1DF9B3C(&qword_1EBB64D40, (void (*)(uint64_t))sub_1C1E0B120);
  uint64_t v24 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v13);
  uint64_t v25 = v2[23];
  uint64_t v26 = v2[24];
  __swift_project_boxed_opaque_existential_1(v2 + 20, v25);
  uint64_t v52 = v24;
  uint64_t v27 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 24);
  sub_1C1E0B04C();
  uint64_t v29 = v28;
  uint64_t v30 = sub_1C1DF9B3C(&qword_1EBB65048, (void (*)(uint64_t))sub_1C1E0B04C);
  uint64_t v52 = v27(&v52, v29, v30, v25, v26);
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  id v32 = (void *)swift_allocObject();
  v32[2] = v31;
  uint64_t v33 = v51;
  v32[3] = v44;
  v32[4] = v33;
  sub_1C1E0D080(0);
  swift_retain();
  uint64_t v34 = v45;
  sub_1C1EAEA68();
  swift_release();
  swift_release();
  uint64_t v35 = sub_1C1DF9B3C(&qword_1EBB64DF8, (void (*)(uint64_t))sub_1C1E0B1E8);
  uint64_t v36 = sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
  uint64_t v37 = v46;
  uint64_t v38 = v48;
  MEMORY[0x1C874BC40](v48, v35, v36);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v38);
  sub_1C1DF9B3C(&qword_1EBB64D80, (void (*)(uint64_t))sub_1C1E0B294);
  uint64_t v39 = v50;
  uint64_t v40 = sub_1C1EAEA38();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v37, v39);
  return v40;
}

void sub_1C1E0B04C()
{
  if (!qword_1EBB65050)
  {
    sub_1C1E10020(255, &qword_1EBB66F98);
    sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
    unint64_t v0 = sub_1C1EAE7D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65050);
    }
  }
}

uint64_t sub_1C1E0B0DC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1E14DA0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1E0B120()
{
  if (!qword_1EBB64D48)
  {
    sub_1C1E0BF98(255, (unint64_t *)&qword_1EBB66F20, &qword_1EBB66F98, MEMORY[0x1E4F670C0], MEMORY[0x1E4F1AAE0]);
    sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
    sub_1C1E0C088();
    unint64_t v0 = sub_1C1EAE608();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64D48);
    }
  }
}

void sub_1C1E0B1E8()
{
  if (!qword_1EBB64E00)
  {
    sub_1C1E0B04C();
    sub_1C1E0D080(255);
    sub_1C1DF9B3C(&qword_1EBB65048, (void (*)(uint64_t))sub_1C1E0B04C);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64E00);
    }
  }
}

void sub_1C1E0B294()
{
  if (!qword_1EBB64D88)
  {
    sub_1C1E0D080(255);
    sub_1C1E0B1E8();
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    sub_1C1DF9B3C(&qword_1EBB64DF8, (void (*)(uint64_t))sub_1C1E0B1E8);
    unint64_t v0 = sub_1C1EAE618();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64D88);
    }
  }
}

uint64_t sub_1C1E0B380(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  sub_1C1E0C0BC();
  uint64_t v90 = *(void *)(v5 - 8);
  uint64_t v91 = v5;
  MEMORY[0x1F4188790](v5);
  id v100 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E0C214();
  uint64_t v93 = *(void *)(v7 - 8);
  uint64_t v94 = v7;
  MEMORY[0x1F4188790](v7);
  id v92 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1C1EAE4C8();
  uint64_t v101 = *(void *)(v105 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v105);
  id v89 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  id v97 = (char *)&v77 - v12;
  unint64_t v87 = v13;
  MEMORY[0x1F4188790](v11);
  id v104 = (char *)&v77 - v14;
  uint64_t v15 = sub_1C1EAD368();
  uint64_t v98 = *(void *)(v15 - 8);
  uint64_t v99 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  id v88 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  id v86 = (char *)&v77 - v19;
  uint64_t v85 = v20;
  MEMORY[0x1F4188790](v18);
  v103 = (char *)&v77 - v21;
  sub_1C1DF9328();
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v82 = (uint64_t)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v83 = (uint64_t)&v77 - v25;
  sub_1C1E0C15C();
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)(a1 + qword_1EBB6AB80);
  uint64_t v84 = v2;
  if (v31)
  {
    uint64_t v102 = v31;
  }
  else
  {
    swift_beginAccess();
    uint64_t v106 = v2[31];
    sub_1C1E14CAC(0, &qword_1EBB650B8, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1AB88]);
    sub_1C1E63E6C();
    uint64_t v102 = sub_1C1EAEA38();
  }
  uint64_t v106 = *(void *)(a1 + 16);
  uint64_t v32 = v106;
  *(void *)(swift_allocObject() + 16) = v4;
  uint64_t v96 = v4;
  sub_1C1E0BF98(0, (unint64_t *)&qword_1EBB66F20, &qword_1EBB66F98, MEMORY[0x1E4F670C0], MEMORY[0x1E4F1AAE0]);
  sub_1C1E10020(0, &qword_1EBB66F98);
  sub_1C1E0C088();
  swift_retain();
  swift_retain();
  sub_1C1EAEA68();
  swift_release();
  swift_release();
  sub_1C1DF9B3C(&qword_1EBB64E08, (void (*)(uint64_t))sub_1C1E0C15C);
  uint64_t v95 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  uint64_t v33 = v83;
  sub_1C1DF8AE0(a1 + qword_1EBB6AB88, v83, (uint64_t (*)(void))sub_1C1DF9328);
  char v34 = *(unsigned char *)(a1 + qword_1EBB6ABE0);
  sub_1C1E0E6CC();
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v32;
  sub_1C1DF7C54(v33, v35 + qword_1EBB6AB88, (uint64_t (*)(void))sub_1C1DF9328);
  uint64_t v36 = v102;
  *(void *)(v35 + qword_1EBB6AB80) = v102;
  *(unsigned char *)(v35 + qword_1EBB6ABE0) = v34;
  uint64_t v37 = v82;
  sub_1C1DF8AE0(v35 + qword_1EBB6AB88, v82, (uint64_t (*)(void))sub_1C1DF9328);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v95;
  sub_1C1DF7C54(v37, v38 + qword_1EBB6AB88, (uint64_t (*)(void))sub_1C1DF9328);
  uint64_t v102 = v36;
  *(void *)(v38 + qword_1EBB6AB80) = v36;
  *(unsigned char *)(v38 + qword_1EBB6ABE0) = v34;
  uint64_t v83 = v38;
  swift_setDeallocating();
  uint64_t v39 = v35 + qword_1EBB6AB88;
  swift_retain_n();
  swift_retain();
  sub_1C1DF9030(v39, (uint64_t (*)(void))sub_1C1DF9328);
  swift_release();
  swift_deallocClassInstance();
  uint64_t v40 = v84;
  uint64_t v41 = sub_1C1E0A874(v38);
  uint64_t v82 = v41;
  uint64_t v42 = v103;
  sub_1C1EAD358();
  id v43 = (id)_HKLogPersistedSignposts();
  _HKLogSignpostIDGenerate();

  uint64_t v44 = v104;
  sub_1C1EAE4D8();
  uint64_t v106 = v41;
  uint64_t v45 = swift_allocObject();
  swift_weakInit();
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = v96;
  *(void *)(v46 + 16) = v45;
  *(void *)(v46 + 24) = v47;
  sub_1C1EAE7C8();
  sub_1C1E0D080(0);
  sub_1C1DFC68C(0);
  sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
  sub_1C1EAEAD8();
  swift_release();
  uint64_t v84 = (void *)v40[19];
  uint64_t v48 = v98;
  uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
  uint64_t v49 = v86;
  v81(v86, v42, v99);
  uint64_t v50 = v101;
  uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
  v80(v97, v44, v105);
  uint64_t v51 = *(unsigned __int8 *)(v48 + 80);
  uint64_t v52 = v48;
  uint64_t v53 = (v51 + 16) & ~v51;
  uint64_t v54 = *(unsigned __int8 *)(v50 + 80);
  uint64_t v55 = (v85 + v54 + v53) & ~v54;
  uint64_t v85 = v51 | v54 | 7;
  uint64_t v79 = v55;
  unint64_t v56 = (v87 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v87 = v56 + 8;
  unint64_t v57 = v56;
  unint64_t v77 = v56;
  uint64_t v58 = swift_allocObject();
  uint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v52 + 32);
  uint64_t v59 = v49;
  uint64_t v60 = v99;
  v78(v58 + v53, v59, v99);
  uint64_t v61 = v58 + v55;
  id v86 = *(char **)(v50 + 32);
  uint64_t v62 = v105;
  ((void (*)(uint64_t, char *, uint64_t))v86)(v61, v97, v105);
  uint64_t v63 = v96;
  *(void *)(v58 + v57) = v96;
  uint64_t v64 = v88;
  v81(v88, v103, v60);
  uint64_t v65 = v89;
  v80(v89, v104, v62);
  uint64_t v66 = swift_allocObject();
  uint64_t v67 = v66 + v53;
  uint64_t v68 = v60;
  v78(v67, v64, v60);
  uint64_t v69 = v65;
  uint64_t v70 = v105;
  ((void (*)(uint64_t, char *, uint64_t))v86)(v66 + v79, v69, v105);
  *(void *)(v66 + v77) = v63;
  sub_1C1DF9B3C(&qword_1EBB64F08, (void (*)(uint64_t))sub_1C1E0C0BC);
  uint64_t v72 = v91;
  unint64_t v71 = v92;
  uint64_t v73 = v100;
  sub_1C1EAE908();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v73, v72);
  sub_1C1DF9B3C(&qword_1EBB657C0, (void (*)(uint64_t))sub_1C1E0C214);
  uint64_t v74 = v94;
  uint64_t v75 = sub_1C1EAEA38();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v71, v74);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v104, v70);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v103, v68);
  return v75;
}

void sub_1C1E0BF98(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_1C1E10020(255, a3);
    unint64_t v9 = a5(a1, v8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C1E0C010(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_1C1E10020(255, a3);
    unint64_t v9 = a5(a1, v8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C1E0C088()
{
  return sub_1C1DECE04(&qword_1EBB66F18, (void (*)(uint64_t))sub_1C1E48B74);
}

void sub_1C1E0C0BC()
{
  if (!qword_1EBB64F10)
  {
    sub_1C1E0D080(255);
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    unint64_t v0 = sub_1C1EAE6C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64F10);
    }
  }
}

void sub_1C1E0C15C()
{
  if (!qword_1EBB64E10)
  {
    sub_1C1E0BF98(255, (unint64_t *)&qword_1EBB66F20, &qword_1EBB66F98, MEMORY[0x1E4F670C0], MEMORY[0x1E4F1AAE0]);
    sub_1C1E10020(255, &qword_1EBB66F98);
    sub_1C1E0C088();
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64E10);
    }
  }
}

void sub_1C1E0C214()
{
  if (!qword_1EBB657C8)
  {
    sub_1C1E0C0BC();
    sub_1C1DF9B3C(&qword_1EBB64F08, (void (*)(uint64_t))sub_1C1E0C0BC);
    unint64_t v0 = sub_1C1EAE5D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB657C8);
    }
  }
}

uint64_t sub_1C1E0C2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v88 = a3;
  sub_1C1E0CD50();
  uint64_t v95 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF9BC8(0, &qword_1EBB650E8, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1AC18]);
  uint64_t v91 = v11;
  unint64_t v87 = (void (**)(char *, void **))*(v11 - 1);
  MEMORY[0x1F4188790](v11);
  id v86 = (char *)&v86 - v12;
  uint64_t v13 = sub_1C1EAE568();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v86 - v18;
  uint64_t Strong = a2 + 16;
  sub_1C1EAE4F8();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_1C1EAE558();
  os_log_type_t v21 = sub_1C1EAF0D8();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v97 = a4;
  uint64_t v98 = a1;
  id v89 = v10;
  uint64_t v90 = v8;
  uint64_t v93 = v13;
  uint64_t v94 = v14;
  id v92 = v17;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v100[0] = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v101 = a4;
    swift_getMetatypeMetadata();
    os_log_type_t v25 = v21;
    uint64_t v26 = sub_1C1EAED68();
    uint64_t v101 = sub_1C1DF8D44(v26, v27, v100);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v28 = MEMORY[0x1C874C0C0](v98, MEMORY[0x1E4F670C0]);
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v101 = sub_1C1DF8D44(v28, v30, v100);
    a1 = v98;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v20, v25, "%{public}s: Switching to a new pipeline with sourceProfiles: %{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v13 = v93;
    uint64_t v14 = v94;
    MEMORY[0x1C874D2E0](v24, -1, -1);
    MEMORY[0x1C874D2E0](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v31 = *(void (***)(char *, void **))(v14 + 8);
  ((void (*)(char *, uint64_t))v31)(v19, v13);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v32 = v95;
  if (!Strong)
  {
    sub_1C1DFC68C(0);
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    uint64_t v64 = v86;
    sub_1C1EAE8C8();
    sub_1C1E65C5C();
    uint64_t v65 = v91;
    uint64_t v66 = sub_1C1EAEA38();
    v87[1](v64, v65);
    return v66;
  }
  unint64_t v87 = v31;
  uint64_t v33 = *(void *)(a1 + 16);
  if (!v33)
  {
    uint64_t v36 = MEMORY[0x1E4FBC868];
    uint64_t v37 = v97;
LABEL_35:
    (*(void (**)(uint64_t, uint64_t))(*(void *)Strong + 352))(a1, v36);
    swift_bridgeObjectRelease();
    uint64_t v67 = sub_1C1E0EC54(v88, a1);
    uint64_t v68 = sub_1C1E0CDE4(v67);
    uint64_t v69 = v92;
    sub_1C1EAE4F8();
    swift_bridgeObjectRetain_n();
    uint64_t v70 = sub_1C1EAE558();
    os_log_type_t v71 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t v98 = v67;
      uint64_t v99 = v73;
      uint64_t v74 = v73;
      *(_DWORD *)uint64_t v72 = 136446466;
      uint64_t v102 = v37;
      swift_getMetatypeMetadata();
      uint64_t v75 = sub_1C1EAED68();
      uint64_t v76 = v68;
      uint64_t v102 = sub_1C1DF8D44(v75, v77, &v99);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2082;
      uint64_t v78 = swift_bridgeObjectRetain();
      uint64_t v79 = MEMORY[0x1C874C0C0](v78, MEMORY[0x1E4F670C0]);
      unint64_t v81 = v80;
      swift_bridgeObjectRelease();
      uint64_t v82 = v79;
      uint64_t v68 = v76;
      uint64_t v32 = v95;
      uint64_t v102 = sub_1C1DF8D44(v82, v81, &v99);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v70, v71, "%{public}s: Created new generation stream for sourceProfiles: %{public}s", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v74, -1, -1);
      MEMORY[0x1C874D2E0](v72, -1, -1);

      uint64_t v83 = v92;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v83 = v69;
    }
    ((void (*)(char *, uint64_t))v87)(v83, v93);
    uint64_t v84 = v89;
    uint64_t v102 = v68;
    sub_1C1E0D080(0);
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    sub_1C1EAEA58();
    sub_1C1DF9B3C(&qword_1EBB64D38, (void (*)(uint64_t))sub_1C1E0CD50);
    uint64_t v66 = sub_1C1EAEA38();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v84, v32);
    return v66;
  }
  char v34 = (void **)(Strong + 48);
  swift_bridgeObjectRetain();
  uint64_t v91 = v34;
  swift_beginAccess();
  uint64_t v35 = 0;
  uint64_t v36 = MEMORY[0x1E4FBC868];
  uint64_t v37 = v97;
  while (1)
  {
    uint64_t v38 = *(void **)(a1 + 8 * v35 + 32);
    id v39 = v38;
    uint64_t v40 = sub_1C1EAD778();
    if (!v40)
    {

      goto LABEL_8;
    }
    uint64_t v41 = (void *)v40;
    uint64_t v42 = sub_1C1EAD7C8();
    if (v42)
    {

      goto LABEL_8;
    }
    if (v38)
    {
      MEMORY[0x1F4188790](v42);
      sub_1C1DF9F8C(0, &qword_1EBB66FE8);
      id v43 = v39;
      id v44 = v41;
      swift_retain();
      sub_1C1EAE198();
      swift_release();

      id v45 = (id)v102;
      if ((v36 & 0xC000000000000001) == 0) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v46 = *v91;
      id v47 = v41;
      id v45 = v46;
      if ((v36 & 0xC000000000000001) == 0) {
        goto LABEL_21;
      }
    }
    if (v36 < 0) {
      uint64_t v48 = v36;
    }
    else {
      uint64_t v48 = v36 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v49 = sub_1C1EAF3B8();
    if (__OFADD__(v49, 1)) {
      goto LABEL_41;
    }
    uint64_t v36 = sub_1C1E9318C(v48, v49 + 1);
LABEL_21:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v102 = v36;
    unint64_t v52 = sub_1C1E0DE00((uint64_t)v41);
    uint64_t v53 = *(void *)(v36 + 16);
    BOOL v54 = (v51 & 1) == 0;
    uint64_t v55 = v53 + v54;
    if (__OFADD__(v53, v54)) {
      break;
    }
    char v56 = v51;
    if (*(void *)(v36 + 24) >= v55)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C1E9F538();
      }
    }
    else
    {
      sub_1C1E0DF60(v55, isUniquelyReferenced_nonNull_native);
      unint64_t v57 = sub_1C1E0DE00((uint64_t)v41);
      if ((v56 & 1) != (v58 & 1)) {
        goto LABEL_43;
      }
      unint64_t v52 = v57;
    }
    uint64_t v36 = v102;
    if (v56)
    {
      uint64_t v59 = *(void *)(v102 + 56);

      *(void *)(v59 + 8 * v52) = v45;
    }
    else
    {
      *(void *)(v102 + 8 * (v52 >> 6) + 64) |= 1 << v52;
      *(void *)(*(void *)(v36 + 48) + 8 * v52) = v41;
      *(void *)(*(void *)(v36 + 56) + 8 * v52) = v45;
      uint64_t v60 = *(void *)(v36 + 16);
      BOOL v61 = __OFADD__(v60, 1);
      uint64_t v62 = v60 + 1;
      if (v61) {
        goto LABEL_42;
      }
      *(void *)(v36 + 16) = v62;
      id v63 = v41;
    }

    swift_bridgeObjectRelease();
    uint64_t v37 = v97;
    a1 = v98;
LABEL_8:
    if (v33 == ++v35)
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = v95;
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  sub_1C1DF9F8C(0, &qword_1EBB68260);
  uint64_t result = sub_1C1EAF7D8();
  __break(1u);
  return result;
}

void sub_1C1E0CD50()
{
  if (!qword_1EBB64770)
  {
    sub_1C1E0D080(255);
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    unint64_t v0 = sub_1C1EAE5B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64770);
    }
  }
}

uint64_t sub_1C1E0CDE4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  sub_1C1E0D19C(0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = a1;
  uint64_t v10 = v2[23];
  uint64_t v11 = v2[24];
  __swift_project_boxed_opaque_existential_1(v2 + 20, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v4;
  sub_1C1DF9BC8(0, &qword_1EBB65010, (uint64_t (*)(uint64_t))sub_1C1DF92F4, MEMORY[0x1E4F1AAE0]);
  sub_1C1DFC68C(0);
  sub_1C1E0D080(0);
  sub_1C1E0F10C();
  sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
  sub_1C1EAEAD8();
  swift_release();
  sub_1C1DF9B3C(&qword_1EBB64EF8, sub_1C1E0D19C);
  uint64_t v14 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

void sub_1C1E0D080(uint64_t a1)
{
}

void sub_1C1E0D0B4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    sub_1C1E0D080(255);
    sub_1C1DF9BC8(255, a3, a4, MEMORY[0x1E4F1AAE0]);
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    a5();
    unint64_t v9 = sub_1C1EAE6C8();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C1E0D19C(uint64_t a1)
{
}

uint64_t sub_1C1E0D1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v88 = a3;
  sub_1C1E0E2CC();
  uint64_t v95 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF9BC8(0, &qword_1EBB650E0, (uint64_t (*)(uint64_t))sub_1C1DFB308, MEMORY[0x1E4F1AC18]);
  uint64_t v91 = v11;
  unint64_t v87 = (void (**)(char *, void **))*(v11 - 1);
  MEMORY[0x1F4188790](v11);
  id v86 = (char *)&v86 - v12;
  uint64_t v13 = sub_1C1EAE568();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v86 - v18;
  uint64_t Strong = a2 + 16;
  sub_1C1EAE4F8();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_1C1EAE558();
  os_log_type_t v21 = sub_1C1EAF0D8();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v97 = a4;
  uint64_t v98 = a1;
  id v89 = v10;
  uint64_t v90 = v8;
  uint64_t v93 = v13;
  uint64_t v94 = v14;
  id v92 = v17;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v100[0] = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v101 = a4;
    swift_getMetatypeMetadata();
    os_log_type_t v25 = v21;
    uint64_t v26 = sub_1C1EAED68();
    uint64_t v101 = sub_1C1DF8D44(v26, v27, v100);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v28 = MEMORY[0x1C874C0C0](v98, MEMORY[0x1E4F670C0]);
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v101 = sub_1C1DF8D44(v28, v30, v100);
    a1 = v98;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v20, v25, "%{public}s: Switching to a new pipeline with sourceProfiles: %{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v13 = v93;
    uint64_t v14 = v94;
    MEMORY[0x1C874D2E0](v24, -1, -1);
    MEMORY[0x1C874D2E0](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v31 = *(void (***)(char *, void **))(v14 + 8);
  ((void (*)(char *, uint64_t))v31)(v19, v13);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v32 = v95;
  if (!Strong)
  {
    sub_1C1DFB308();
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    uint64_t v64 = v86;
    sub_1C1EAE8C8();
    sub_1C1E66208();
    uint64_t v65 = v91;
    uint64_t v66 = sub_1C1EAEA38();
    v87[1](v64, v65);
    return v66;
  }
  unint64_t v87 = v31;
  uint64_t v33 = *(void *)(a1 + 16);
  if (!v33)
  {
    uint64_t v36 = MEMORY[0x1E4FBC868];
    uint64_t v37 = v97;
LABEL_35:
    (*(void (**)(uint64_t, uint64_t))(*(void *)Strong + 352))(a1, v36);
    swift_bridgeObjectRelease();
    uint64_t v67 = sub_1C1E0E760(v88, a1);
    uint64_t v68 = sub_1C1E0E360(v67);
    uint64_t v69 = v92;
    sub_1C1EAE4F8();
    swift_bridgeObjectRetain_n();
    uint64_t v70 = sub_1C1EAE558();
    os_log_type_t v71 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t v98 = v67;
      uint64_t v99 = v73;
      uint64_t v74 = v73;
      *(_DWORD *)uint64_t v72 = 136446466;
      uint64_t v102 = v37;
      swift_getMetatypeMetadata();
      uint64_t v75 = sub_1C1EAED68();
      uint64_t v76 = v68;
      uint64_t v102 = sub_1C1DF8D44(v75, v77, &v99);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2082;
      uint64_t v78 = swift_bridgeObjectRetain();
      uint64_t v79 = MEMORY[0x1C874C0C0](v78, MEMORY[0x1E4F670C0]);
      unint64_t v81 = v80;
      swift_bridgeObjectRelease();
      uint64_t v82 = v79;
      uint64_t v68 = v76;
      uint64_t v32 = v95;
      uint64_t v102 = sub_1C1DF8D44(v82, v81, &v99);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v70, v71, "%{public}s: Created new generation stream for sourceProfiles: %{public}s", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v74, -1, -1);
      MEMORY[0x1C874D2E0](v72, -1, -1);

      uint64_t v83 = v92;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v83 = v69;
    }
    ((void (*)(char *, uint64_t))v87)(v83, v93);
    uint64_t v84 = v89;
    uint64_t v102 = v68;
    sub_1C1DF91CC(0);
    sub_1C1DF9B3C((unint64_t *)&qword_1EBB65018, sub_1C1DF91CC);
    sub_1C1EAEA58();
    sub_1C1DF9B3C(&qword_1EBB64D28, (void (*)(uint64_t))sub_1C1E0E2CC);
    uint64_t v66 = sub_1C1EAEA38();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v84, v32);
    return v66;
  }
  char v34 = (void **)(Strong + 48);
  swift_bridgeObjectRetain();
  uint64_t v91 = v34;
  swift_beginAccess();
  uint64_t v35 = 0;
  uint64_t v36 = MEMORY[0x1E4FBC868];
  uint64_t v37 = v97;
  while (1)
  {
    uint64_t v38 = *(void **)(a1 + 8 * v35 + 32);
    id v39 = v38;
    uint64_t v40 = sub_1C1EAD778();
    if (!v40)
    {

      goto LABEL_8;
    }
    uint64_t v41 = (void *)v40;
    uint64_t v42 = sub_1C1EAD7C8();
    if (v42)
    {

      goto LABEL_8;
    }
    if (v38)
    {
      MEMORY[0x1F4188790](v42);
      sub_1C1DF9F8C(0, &qword_1EBB66FE8);
      id v43 = v39;
      id v44 = v41;
      swift_retain();
      sub_1C1EAE198();
      swift_release();

      id v45 = (id)v102;
      if ((v36 & 0xC000000000000001) == 0) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v46 = *v91;
      id v47 = v41;
      id v45 = v46;
      if ((v36 & 0xC000000000000001) == 0) {
        goto LABEL_21;
      }
    }
    if (v36 < 0) {
      uint64_t v48 = v36;
    }
    else {
      uint64_t v48 = v36 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v49 = sub_1C1EAF3B8();
    if (__OFADD__(v49, 1)) {
      goto LABEL_41;
    }
    uint64_t v36 = sub_1C1E9318C(v48, v49 + 1);
LABEL_21:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v102 = v36;
    unint64_t v52 = sub_1C1E0DE00((uint64_t)v41);
    uint64_t v53 = *(void *)(v36 + 16);
    BOOL v54 = (v51 & 1) == 0;
    uint64_t v55 = v53 + v54;
    if (__OFADD__(v53, v54)) {
      break;
    }
    char v56 = v51;
    if (*(void *)(v36 + 24) >= v55)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C1E9F538();
      }
    }
    else
    {
      sub_1C1E0DF60(v55, isUniquelyReferenced_nonNull_native);
      unint64_t v57 = sub_1C1E0DE00((uint64_t)v41);
      if ((v56 & 1) != (v58 & 1)) {
        goto LABEL_43;
      }
      unint64_t v52 = v57;
    }
    uint64_t v36 = v102;
    if (v56)
    {
      uint64_t v59 = *(void *)(v102 + 56);

      *(void *)(v59 + 8 * v52) = v45;
    }
    else
    {
      *(void *)(v102 + 8 * (v52 >> 6) + 64) |= 1 << v52;
      *(void *)(*(void *)(v36 + 48) + 8 * v52) = v41;
      *(void *)(*(void *)(v36 + 56) + 8 * v52) = v45;
      uint64_t v60 = *(void *)(v36 + 16);
      BOOL v61 = __OFADD__(v60, 1);
      uint64_t v62 = v60 + 1;
      if (v61) {
        goto LABEL_42;
      }
      *(void *)(v36 + 16) = v62;
      id v63 = v41;
    }

    swift_bridgeObjectRelease();
    uint64_t v37 = v97;
    a1 = v98;
LABEL_8:
    if (v33 == ++v35)
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = v95;
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  sub_1C1DF9F8C(0, &qword_1EBB68260);
  uint64_t result = sub_1C1EAF7D8();
  __break(1u);
  return result;
}

void sub_1C1E0DC80(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  id v5 = a2;
  id v6 = sub_1C1E0DD28(v5, v4);

  if (!v6)
  {
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
    objc_msgSend(v7, sel_setProfileIdentifier_, v5);
    objc_msgSend(v7, sel_resume);
    id v8 = v5;
    id v6 = v7;
    sub_1C1DD550C((uint64_t)v6, v8);
  }
  *a3 = v6;
}

void *sub_1C1E0DD28(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_1C1E0DE00((uint64_t)a1);
      if (v7)
      {
        id v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_1C1EAF5E8();

  if (!v4) {
    return 0;
  }
  sub_1C1DF9F8C(0, &qword_1EBB66FE8);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

unint64_t sub_1C1E0DE00(uint64_t a1)
{
  uint64_t v2 = sub_1C1EAF278();
  return sub_1C1E0DE44(a1, v2);
}

unint64_t sub_1C1E0DE44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1C1DF9F8C(0, &qword_1EBB68260);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1C1EAF288();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1C1EAF288();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_1C1E0DF60(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C1E0E230();
  uint64_t v6 = sub_1C1EAF668();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_1C1EAF278();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  uint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_1C1E0E230()
{
  if (!qword_1EBB67080)
  {
    sub_1C1DF9F8C(255, &qword_1EBB68260);
    sub_1C1DF9F8C(255, &qword_1EBB66FE8);
    sub_1C1E9349C();
    unint64_t v0 = sub_1C1EAF698();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67080);
    }
  }
}

void sub_1C1E0E2CC()
{
  if (!qword_1EBB64D30)
  {
    sub_1C1DF91CC(255);
    sub_1C1DF9B3C((unint64_t *)&qword_1EBB65018, sub_1C1DF91CC);
    unint64_t v0 = sub_1C1EAE5B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64D30);
    }
  }
}

uint64_t sub_1C1E0E360(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  sub_1C1E0E690(0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = a1;
  uint64_t v10 = v2[23];
  uint64_t v11 = v2[24];
  __swift_project_boxed_opaque_existential_1(v2 + 20, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v4;
  sub_1C1DF9BC8(0, &qword_1EBB65000, (uint64_t (*)(uint64_t))sub_1C1DFC5AC, MEMORY[0x1E4F1AAE0]);
  sub_1C1DFB308();
  sub_1C1DF91CC(0);
  sub_1C1E0E5FC();
  sub_1C1DF9B3C((unint64_t *)&qword_1EBB65018, sub_1C1DF91CC);
  sub_1C1EAEAD8();
  swift_release();
  sub_1C1DF9B3C(&qword_1EBB64EC8, sub_1C1E0E690);
  uint64_t v14 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

unint64_t sub_1C1E0E5FC()
{
  unint64_t result = qword_1EBB64FF8;
  if (!qword_1EBB64FF8)
  {
    sub_1C1DF9BC8(255, &qword_1EBB65000, (uint64_t (*)(uint64_t))sub_1C1DFC5AC, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64FF8);
  }
  return result;
}

uint64_t sub_1C1E0E684()
{
  return *(void *)(*(void *)v0 + 24);
}

void sub_1C1E0E690(uint64_t a1)
{
}

void sub_1C1E0E6CC()
{
  if (!qword_1EBB65350)
  {
    sub_1C1E01F14(255);
    sub_1C1DF9B3C(&qword_1EBB67728, sub_1C1E01F14);
    unint64_t v0 = type metadata accessor for GeneratorPipelineManager.GeneratorPipelineManagerStreamContext();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65350);
    }
  }
}

uint64_t sub_1C1E0E760(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = *v3;
  uint64_t v27 = a1;
  sub_1C1E0F21C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E0F3F4();
  uint64_t v28 = v10;
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E0EC18(0);
  uint64_t v29 = v13;
  uint64_t v31 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  int64_t v25 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a2;
  sub_1C1E10020(0, &qword_1EBB66F98);
  sub_1C1E10068(&qword_1EBB66FA0, &qword_1EBB66F98);
  sub_1C1EAEDF8();
  swift_allocObject();
  swift_weakInit();
  sub_1C1EAE7C8();
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C1DF9BC8(0, &qword_1EBB65AF0, (uint64_t (*)(uint64_t))sub_1C1DED3D4, MEMORY[0x1E4F1AAE0]);
  sub_1C1E0F2E0();
  sub_1C1E0F194();
  sub_1C1EAEB58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = v26;
  uint64_t v18 = v27;
  void v16[2] = v3;
  v16[3] = v18;
  v16[4] = v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1C1DD5DD8;
  *(void *)(v19 + 24) = v16;
  swift_retain();
  swift_retain();
  sub_1C1EAE7C8();
  sub_1C1DFC5AC(0);
  sub_1C1DF9BC8(0, &qword_1EBB65000, (uint64_t (*)(uint64_t))sub_1C1DFC5AC, v15);
  sub_1C1DF9B3C(&qword_1EBB65AA8, (void (*)(uint64_t))sub_1C1E0F3F4);
  sub_1C1E0E5FC();
  unint64_t v20 = v25;
  uint64_t v21 = v28;
  sub_1C1EAEAD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v21);
  sub_1C1DF9B3C(&qword_1EBB65AB8, sub_1C1E0EC18);
  uint64_t v22 = v29;
  uint64_t v23 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v22);
  return v23;
}

void sub_1C1E0EC18(uint64_t a1)
{
}

uint64_t sub_1C1E0EC54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = *v3;
  uint64_t v27 = a1;
  sub_1C1E0F21C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E0F3F4();
  uint64_t v28 = v10;
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E128DC(0);
  uint64_t v29 = v13;
  uint64_t v31 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  int64_t v25 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a2;
  sub_1C1E10020(0, &qword_1EBB66F98);
  sub_1C1E10068(&qword_1EBB66FA0, &qword_1EBB66F98);
  sub_1C1EAEDF8();
  swift_allocObject();
  swift_weakInit();
  sub_1C1EAE7C8();
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C1DF9BC8(0, &qword_1EBB65AF0, (uint64_t (*)(uint64_t))sub_1C1DED3D4, MEMORY[0x1E4F1AAE0]);
  sub_1C1E0F2E0();
  sub_1C1E0F194();
  sub_1C1EAEB58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = v26;
  uint64_t v18 = v27;
  void v16[2] = v3;
  v16[3] = v18;
  v16[4] = v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1C1DD5DCC;
  *(void *)(v19 + 24) = v16;
  swift_retain();
  swift_retain();
  sub_1C1EAE7C8();
  sub_1C1DF92F4(0);
  sub_1C1DF9BC8(0, &qword_1EBB65010, (uint64_t (*)(uint64_t))sub_1C1DF92F4, v15);
  sub_1C1DF9B3C(&qword_1EBB65AA8, (void (*)(uint64_t))sub_1C1E0F3F4);
  sub_1C1E0F10C();
  unint64_t v20 = v25;
  uint64_t v21 = v28;
  sub_1C1EAEAD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v21);
  sub_1C1DF9B3C(&qword_1EBB65AC8, sub_1C1E128DC);
  uint64_t v22 = v29;
  uint64_t v23 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v22);
  return v23;
}

unint64_t sub_1C1E0F10C()
{
  unint64_t result = qword_1EBB65008;
  if (!qword_1EBB65008)
  {
    sub_1C1DF9BC8(255, &qword_1EBB65010, (uint64_t (*)(uint64_t))sub_1C1DF92F4, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65008);
  }
  return result;
}

unint64_t sub_1C1E0F194()
{
  unint64_t result = qword_1EBB65AE8;
  if (!qword_1EBB65AE8)
  {
    sub_1C1E15464(255, &qword_1EBB65AF0, (uint64_t (*)(uint64_t))sub_1C1DED3D4, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65AE8);
  }
  return result;
}

void sub_1C1E0F21C()
{
  if (!qword_1EBB66ED0)
  {
    sub_1C1E10020(255, &qword_1EBB66F98);
    sub_1C1E10068(&qword_1EBB66FA0, &qword_1EBB66F98);
    unint64_t v0 = sub_1C1EAE718();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB66ED0);
    }
  }
}

uint64_t sub_1C1E0F2E0()
{
  return sub_1C1DECE04(&qword_1EBB66EC8, (void (*)(uint64_t))sub_1C1E0F21C);
}

void sub_1C1E0F314(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    sub_1C1DF9BC8(255, a3, a4, MEMORY[0x1E4F1AAE0]);
    sub_1C1E0F3F4();
    a5();
    sub_1C1DF9B3C(&qword_1EBB65AA8, (void (*)(uint64_t))sub_1C1E0F3F4);
    unint64_t v7 = sub_1C1EAE6C8();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C1E0F3F4()
{
  if (!qword_1EBB65AB0)
  {
    sub_1C1E15464(255, &qword_1EBB65AF0, (uint64_t (*)(uint64_t))sub_1C1DED3D4, MEMORY[0x1E4F1AAE0]);
    sub_1C1E4B940(255, &qword_1EBB64D68, (void (*)(uint64_t))sub_1C1E0F21C, (void (*)(void))sub_1C1E0F2E0);
    sub_1C1E0F194();
    sub_1C1E4B650();
    unint64_t v0 = sub_1C1EAE6C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65AB0);
    }
  }
}

uint64_t sub_1C1E0F4E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, uint64_t), void (*a4)(uint64_t, unsigned char *), void (*a5)(uint64_t, unsigned char *), void (*a6)(uint64_t, unsigned char *), void (*a7)(uint64_t, unsigned char *))
{
  uint64_t v67 = a6;
  uint64_t v68 = a7;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v10 = sub_1C1EAE568();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  os_log_type_t v71 = (char *)&v64 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v70 = (char *)&v64 - v18;
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = (char *)&v64 - v19;
  sub_1C1EAE4F8();
  uint64_t v69 = a1;
  swift_bridgeObjectRetain_n();
  uint64_t v21 = a2;
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_1C1EAE558();
  os_log_type_t v23 = sub_1C1EAF0D8();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v74 = v11;
  uint64_t v75 = v10;
  uint64_t v72 = a3;
  uint64_t v73 = v14;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v76 = v26;
    uint64_t v77 = (uint64_t)a3;
    *(_DWORD *)uint64_t v25 = 136446466;
    swift_getMetatypeMetadata();
    uint64_t v27 = sub_1C1EAED68();
    uint64_t v77 = sub_1C1DF8D44(v27, v28, &v76);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    uint64_t v29 = v69;
    uint64_t v30 = sub_1C1E0FDA4(v69, v21, v65);
    uint64_t v77 = sub_1C1DF8D44(v30, v31, &v76);
    uint64_t v11 = v74;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v22, v23, "[%{public}s]: %{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    uint64_t v32 = v26;
    uint64_t v10 = v75;
    MEMORY[0x1C874D2E0](v32, -1, -1);
    MEMORY[0x1C874D2E0](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v29 = v69;
    swift_bridgeObjectRelease_n();
  }
  id v33 = *(void (**)(char *, uint64_t))(v11 + 8);
  v33(v20, v10);
  id v34 = v70;
  sub_1C1EAE4F8();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v35 = sub_1C1EAE558();
  os_log_type_t v36 = sub_1C1EAF098();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v76 = v38;
    *(_DWORD *)uint64_t v37 = 136446466;
    uint64_t v77 = (uint64_t)v72;
    swift_getMetatypeMetadata();
    uint64_t v39 = sub_1C1EAED68();
    uint64_t v77 = sub_1C1DF8D44(v39, v40, &v76);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2082;
    unint64_t v41 = sub_1C1E0FF00(v29, v21, v66);
    uint64_t v77 = sub_1C1DF8D44(v41, v42, &v76);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v35, v36, "[%{public}s]: %{public}s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    uint64_t v43 = v38;
    uint64_t v10 = v75;
    MEMORY[0x1C874D2E0](v43, -1, -1);
    MEMORY[0x1C874D2E0](v37, -1, -1);

    v33(v70, v10);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v33(v34, v10);
  }
  id v44 = v71;
  sub_1C1EAE4F8();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v45 = sub_1C1EAE558();
  os_log_type_t v46 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t v76 = v48;
    *(_DWORD *)uint64_t v47 = 136446466;
    uint64_t v77 = (uint64_t)v72;
    swift_getMetatypeMetadata();
    uint64_t v49 = sub_1C1EAED68();
    uint64_t v77 = sub_1C1DF8D44(v49, v50, &v76);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2082;
    uint64_t v51 = sub_1C1E100AC(v29, v21, v67);
    uint64_t v77 = sub_1C1DF8D44(v51, v52, &v76);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v45, v46, "[%{public}s]: %{public}s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    uint64_t v53 = v48;
    uint64_t v10 = v75;
    MEMORY[0x1C874D2E0](v53, -1, -1);
    MEMORY[0x1C874D2E0](v47, -1, -1);

    v33(v71, v10);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v33(v44, v10);
  }
  BOOL v54 = v73;
  sub_1C1EAE4F8();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v55 = sub_1C1EAE558();
  os_log_type_t v56 = sub_1C1EAF098();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    uint64_t v76 = v58;
    *(_DWORD *)uint64_t v57 = 136446466;
    uint64_t v77 = (uint64_t)v72;
    swift_getMetatypeMetadata();
    uint64_t v59 = sub_1C1EAED68();
    uint64_t v72 = (uint64_t (*)(char *, uint64_t))v33;
    uint64_t v77 = sub_1C1DF8D44(v59, v60, &v76);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2082;
    unint64_t v61 = sub_1C1E10210(v29, v21, v68);
    uint64_t v77 = sub_1C1DF8D44(v61, v62, &v76);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v55, v56, "[%{public}s]: %{public}s", (uint8_t *)v57, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v58, -1, -1);
    MEMORY[0x1C874D2E0](v57, -1, -1);

    return v72(v73, v75);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return ((uint64_t (*)(char *, uint64_t))v33)(v54, v10);
  }
}

uint64_t sub_1C1E0FDA4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unsigned char *))
{
  uint64_t v4 = swift_bridgeObjectRetain();
  a3(v4, v7);
  swift_bridgeObjectRelease();
  sub_1C1E10020(0, (unint64_t *)&qword_1EBB68358);
  sub_1C1E10068((unint64_t *)&qword_1EBB68360, (unint64_t *)&qword_1EBB68358);
  sub_1C1EAECE8();
  swift_bridgeObjectRelease();
  sub_1C1EAF4A8();
  uint64_t v5 = sub_1C1EAF768();
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1C1E0FF00(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unsigned char *))
{
  uint64_t v4 = swift_bridgeObjectRetain();
  a3(v4, v6);
  swift_bridgeObjectRelease();
  sub_1C1E10020(0, (unint64_t *)&qword_1EBB68358);
  sub_1C1E10068((unint64_t *)&qword_1EBB68360, (unint64_t *)&qword_1EBB68358);
  sub_1C1EAECE8();
  swift_bridgeObjectRelease();
  sub_1C1EAF4A8();
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  return 0xD00000000000001ELL;
}

void sub_1C1E10020(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C1EAEF28();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1C1E10068(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1E10020(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1E100AC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unsigned char *))
{
  swift_bridgeObjectRetain();
  a3(a2, v7);
  swift_bridgeObjectRelease();
  sub_1C1E10020(0, (unint64_t *)&qword_1EBB68358);
  sub_1C1E10068((unint64_t *)&qword_1EBB68360, (unint64_t *)&qword_1EBB68358);
  sub_1C1EAECE8();
  swift_bridgeObjectRelease();
  sub_1C1EAF4A8();
  uint64_t v5 = sub_1C1EAF768();
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1C1E10210(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unsigned char *))
{
  swift_bridgeObjectRetain();
  a3(a2, v6);
  swift_bridgeObjectRelease();
  sub_1C1E10020(0, (unint64_t *)&qword_1EBB68358);
  sub_1C1E10068((unint64_t *)&qword_1EBB68360, (unint64_t *)&qword_1EBB68358);
  sub_1C1EAECE8();
  swift_bridgeObjectRelease();
  sub_1C1EAF4A8();
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  return 0xD00000000000001FLL;
}

void sub_1C1E10338(uint64_t a1)
{
  sub_1C1DFEF08(0);
  uint64_t v65 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  unint64_t v60 = (char *)&v53 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v59 = (char *)&v53 - v9;
  int64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v66 = v1;
    uint64_t v67 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v11 = &v67;
    sub_1C1DE1100(0, v10, 0);
    unint64_t v13 = sub_1C1E6578C(a1);
    uint64_t v14 = 0;
    uint64_t v15 = a1 + 64;
    char v16 = *(unsigned char *)(a1 + 32);
    uint64_t v54 = a1 + 80;
    int64_t v55 = v10;
    uint64_t v57 = a1 + 64;
    uint64_t v58 = a1;
    uint64_t v56 = v12;
    while ((v13 & 0x8000000000000000) == 0 && (uint64_t)v13 < 1 << v16)
    {
      unint64_t v20 = v13 >> 6;
      if ((*(void *)(v15 + 8 * (v13 >> 6)) & (1 << v13)) == 0) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(a1 + 36) != v12) {
        goto LABEL_27;
      }
      uint64_t v61 = v14;
      uint64_t v62 = 1 << v13;
      uint64_t v21 = (uint64_t)v59;
      id v63 = &v59[*(int *)(v65 + 48)];
      uint64_t v22 = v6;
      uint64_t v23 = a1;
      uint64_t v24 = *(void *)(a1 + 48);
      uint64_t v25 = sub_1C1EAD368();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 16);
      v27(v21, v24 + *(void *)(v26 + 72) * v13, v25);
      uint64_t v28 = *(void *)(v23 + 56);
      unint64_t v29 = v13;
      uint64_t v30 = (uint64_t)v22;
      sub_1C1DF92F4(0);
      uint64_t v32 = *(void *)(*(void *)(v31 - 8) + 72);
      uint64_t v64 = v29;
      uint64_t v33 = v28 + v32 * v29;
      uint64_t v34 = (uint64_t)v63;
      sub_1C1E01808(v33, (uint64_t)v63);
      uint64_t v35 = (uint64_t)v60;
      v27((uint64_t)v60, v21, v25);
      uint64_t v36 = v65;
      sub_1C1E01808(v34, v35 + *(int *)(v65 + 48));
      sub_1C1DF7C54(v35, v30, (uint64_t (*)(void))sub_1C1DFEF08);
      uint64_t v37 = sub_1C1DF9030(v21, (uint64_t (*)(void))sub_1C1DFEF08);
      uint64_t v6 = (char *)v30;
      uint64_t v38 = v30 + *(int *)(v36 + 48);
      uint64_t v11 = (void *)MEMORY[0x1C874CBD0](v37);
      uint64_t v39 = v66;
      uint64_t v40 = sub_1C1E62C44(v38, (uint64_t (*)(void))sub_1C1DF92F4);
      uint64_t v66 = v39;
      if (v39) {
        goto LABEL_31;
      }
      uint64_t v42 = v40;
      uint64_t v43 = v41;
      sub_1C1DF9030(v30, (uint64_t (*)(void))sub_1C1DFEF08);
      uint64_t v11 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1DE1100(0, v11[2] + 1, 1);
        uint64_t v11 = v67;
      }
      uint64_t v44 = v64;
      unint64_t v46 = v11[2];
      unint64_t v45 = v11[3];
      if (v46 >= v45 >> 1)
      {
        sub_1C1DE1100(v45 > 1, v46 + 1, 1);
        uint64_t v11 = v67;
      }
      void v11[2] = v46 + 1;
      uint64_t v47 = &v11[2 * v46];
      v47[4] = v42;
      v47[5] = v43;
      a1 = v58;
      char v16 = *(unsigned char *)(v58 + 32);
      unint64_t v17 = 1 << v16;
      if (v44 >= 1 << v16) {
        goto LABEL_28;
      }
      uint64_t v15 = v57;
      uint64_t v48 = *(void *)(v57 + 8 * v20);
      if ((v48 & v62) == 0) {
        goto LABEL_29;
      }
      LODWORD(v12) = v56;
      if (*(_DWORD *)(v58 + 36) != v56) {
        goto LABEL_30;
      }
      unint64_t v49 = v48 & (-2 << (v44 & 0x3F));
      if (v49)
      {
        unint64_t v17 = __clz(__rbit64(v49)) | v44 & 0xFFFFFFFFFFFFFFC0;
        int64_t v18 = v55;
        uint64_t v19 = v61;
      }
      else
      {
        unint64_t v50 = v20 + 1;
        unint64_t v51 = (v17 + 63) >> 6;
        int64_t v18 = v55;
        uint64_t v19 = v61;
        if (v20 + 1 < v51)
        {
          unint64_t v52 = *(void *)(v57 + 8 * v50);
          if (v52)
          {
LABEL_23:
            unint64_t v17 = __clz(__rbit64(v52)) + (v50 << 6);
          }
          else
          {
            while (v51 - 2 != v20)
            {
              unint64_t v52 = *(void *)(v54 + 8 * v20++);
              if (v52)
              {
                unint64_t v50 = v20 + 1;
                goto LABEL_23;
              }
            }
          }
        }
      }
      uint64_t v14 = v19 + 1;
      unint64_t v13 = v17;
      if (v14 == v18) {
        return;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
}

uint64_t sub_1C1E10788(uint64_t a1)
{
  sub_1C1E02B88(0);
  uint64_t v60 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v59 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFEF08(0);
  uint64_t v58 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v57 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v56 = (char *)&v50 - v9;
  MEMORY[0x1F4188790](v8);
  int64_t v55 = (char *)&v50 - v10;
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (!v11) {
    return v12;
  }
  uint64_t v50 = v1;
  uint64_t v68 = MEMORY[0x1E4FBC860];
  sub_1C1DE1100(0, v11, 0);
  uint64_t result = sub_1C1E6578C(a1);
  unint64_t v15 = result;
  uint64_t v16 = 0;
  uint64_t v17 = a1 + 64;
  uint64_t v61 = a1 + 80;
  uint64_t v53 = a1 + 64;
  uint64_t v54 = a1;
  int64_t v51 = v11;
  uint64_t v52 = v14;
  while ((v15 & 0x8000000000000000) == 0 && (uint64_t)v15 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v19 = v15 >> 6;
    if ((*(void *)(v17 + 8 * (v15 >> 6)) & (1 << v15)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v14) {
      goto LABEL_26;
    }
    uint64_t v62 = v16;
    uint64_t v63 = 1 << v15;
    uint64_t v20 = v58;
    uint64_t v21 = (uint64_t)v55;
    uint64_t v64 = &v55[*(int *)(v58 + 48)];
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = sub_1C1EAD368();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 16);
    v25(v21, v22 + *(void *)(v24 + 72) * v15, v23);
    uint64_t v26 = *(void *)(a1 + 56);
    sub_1C1DF92F4(0);
    uint64_t v28 = v27 - 8;
    uint64_t v29 = *(void *)(*(void *)(v27 - 8) + 72);
    int64_t v65 = v15;
    uint64_t v30 = v26 + v29 * v15;
    uint64_t v31 = (uint64_t)v64;
    sub_1C1E01808(v30, (uint64_t)v64);
    uint64_t v32 = v56;
    v25((uint64_t)v56, v21, v23);
    sub_1C1E01808(v31, (uint64_t)&v32[*(int *)(v20 + 48)]);
    uint64_t v33 = (uint64_t)v32;
    uint64_t v34 = v57;
    sub_1C1DF7C54(v33, v57, (uint64_t (*)(void))sub_1C1DFEF08);
    uint64_t v35 = sub_1C1DF9030(v21, (uint64_t (*)(void))sub_1C1DFEF08);
    uint64_t v36 = v34 + *(int *)(v20 + 48);
    uint64_t v37 = (void *)MEMORY[0x1C874CBD0](v35);
    __swift_project_boxed_opaque_existential_1((void *)(v36 + *(int *)(v28 + 36)), *(void *)(v36 + *(int *)(v28 + 36) + 24));
    uint64_t v66 = sub_1C1EAD5B8();
    uint64_t v67 = v38;
    sub_1C1EAEDB8();
    uint64_t v39 = (void *)sub_1C1EAD9A8();
    sub_1C1EAD798();
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();

    sub_1C1EAEDB8();
    sub_1C1DF8AE0(v36, v59, (uint64_t (*)(void))sub_1C1E02B88);
    sub_1C1EAED68();
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();
    uint64_t v40 = v66;
    uint64_t v41 = v67;
    sub_1C1DF9030(v34, (uint64_t (*)(void))sub_1C1DFEF08);
    uint64_t v12 = v68;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C1DE1100(0, *(void *)(v12 + 16) + 1, 1);
      uint64_t v12 = v68;
    }
    unint64_t v43 = *(void *)(v12 + 16);
    unint64_t v42 = *(void *)(v12 + 24);
    if (v43 >= v42 >> 1)
    {
      uint64_t result = sub_1C1DE1100(v42 > 1, v43 + 1, 1);
      uint64_t v12 = v68;
    }
    *(void *)(v12 + 16) = v43 + 1;
    uint64_t v44 = v12 + 16 * v43;
    *(void *)(v44 + 32) = v40;
    *(void *)(v44 + 40) = v41;
    a1 = v54;
    unint64_t v15 = 1 << *(unsigned char *)(v54 + 32);
    if (v65 >= (uint64_t)v15) {
      goto LABEL_27;
    }
    uint64_t v17 = v53;
    uint64_t v45 = *(void *)(v53 + 8 * v19);
    if ((v45 & v63) == 0) {
      goto LABEL_28;
    }
    LODWORD(v14) = v52;
    if (*(_DWORD *)(v54 + 36) != v52) {
      goto LABEL_29;
    }
    unint64_t v46 = v45 & (-2 << (v65 & 0x3F));
    if (v46)
    {
      unint64_t v15 = __clz(__rbit64(v46)) | v65 & 0xFFFFFFFFFFFFFFC0;
      int64_t v18 = v51;
    }
    else
    {
      unint64_t v47 = v19 + 1;
      unint64_t v48 = (v15 + 63) >> 6;
      int64_t v18 = v51;
      if (v19 + 1 < v48)
      {
        unint64_t v49 = *(void *)(v53 + 8 * v47);
        if (v49)
        {
LABEL_22:
          unint64_t v15 = __clz(__rbit64(v49)) + (v47 << 6);
        }
        else
        {
          while (v48 - 2 != v19)
          {
            unint64_t v49 = *(void *)(v61 + 8 * v19++);
            if (v49)
            {
              unint64_t v47 = v19 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v16 = v62 + 1;
    if (v62 + 1 == v18) {
      return v12;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1C1E10C8C(uint64_t a1)
{
  sub_1C1DF76FC(0);
  uint64_t v65 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v60 = (char *)&v53 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v59 = (char *)&v53 - v9;
  int64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v66 = v1;
    uint64_t v67 = (void *)MEMORY[0x1E4FBC860];
    int64_t v11 = &v67;
    sub_1C1DE1100(0, v10, 0);
    unint64_t v13 = sub_1C1E6578C(a1);
    uint64_t v14 = 0;
    uint64_t v15 = a1 + 64;
    char v16 = *(unsigned char *)(a1 + 32);
    uint64_t v54 = a1 + 80;
    int64_t v55 = v10;
    uint64_t v57 = a1 + 64;
    uint64_t v58 = a1;
    uint64_t v56 = v12;
    while ((v13 & 0x8000000000000000) == 0 && (uint64_t)v13 < 1 << v16)
    {
      unint64_t v20 = v13 >> 6;
      if ((*(void *)(v15 + 8 * (v13 >> 6)) & (1 << v13)) == 0) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(a1 + 36) != v12) {
        goto LABEL_27;
      }
      uint64_t v61 = v14;
      uint64_t v62 = 1 << v13;
      uint64_t v21 = (uint64_t)v59;
      uint64_t v63 = &v59[*(int *)(v65 + 48)];
      uint64_t v22 = v6;
      uint64_t v23 = a1;
      uint64_t v24 = *(void *)(a1 + 48);
      uint64_t v25 = sub_1C1EAD368();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 16);
      v27(v21, v24 + *(void *)(v26 + 72) * v13, v25);
      uint64_t v28 = *(void *)(v23 + 56);
      unint64_t v29 = v13;
      uint64_t v30 = (uint64_t)v22;
      sub_1C1DFC5AC(0);
      uint64_t v32 = *(void *)(*(void *)(v31 - 8) + 72);
      uint64_t v64 = v29;
      uint64_t v33 = v28 + v32 * v29;
      uint64_t v34 = (uint64_t)v63;
      sub_1C1DF8CF0(v33, (uint64_t)v63);
      uint64_t v35 = (uint64_t)v60;
      v27((uint64_t)v60, v21, v25);
      uint64_t v36 = v65;
      sub_1C1DF8CF0(v34, v35 + *(int *)(v65 + 48));
      sub_1C1DF7C54(v35, v30, (uint64_t (*)(void))sub_1C1DF76FC);
      uint64_t v37 = sub_1C1DF9030(v21, (uint64_t (*)(void))sub_1C1DF76FC);
      uint64_t v6 = (char *)v30;
      uint64_t v38 = v30 + *(int *)(v36 + 48);
      int64_t v11 = (void *)MEMORY[0x1C874CBD0](v37);
      uint64_t v39 = v66;
      uint64_t v40 = sub_1C1E62C44(v38, (uint64_t (*)(void))sub_1C1DFC5AC);
      uint64_t v66 = v39;
      if (v39) {
        goto LABEL_31;
      }
      uint64_t v42 = v40;
      uint64_t v43 = v41;
      sub_1C1DF9030(v30, (uint64_t (*)(void))sub_1C1DF76FC);
      int64_t v11 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1DE1100(0, v11[2] + 1, 1);
        int64_t v11 = v67;
      }
      uint64_t v44 = v64;
      unint64_t v46 = v11[2];
      unint64_t v45 = v11[3];
      if (v46 >= v45 >> 1)
      {
        sub_1C1DE1100(v45 > 1, v46 + 1, 1);
        int64_t v11 = v67;
      }
      void v11[2] = v46 + 1;
      unint64_t v47 = &v11[2 * v46];
      v47[4] = v42;
      v47[5] = v43;
      a1 = v58;
      char v16 = *(unsigned char *)(v58 + 32);
      unint64_t v17 = 1 << v16;
      if (v44 >= 1 << v16) {
        goto LABEL_28;
      }
      uint64_t v15 = v57;
      uint64_t v48 = *(void *)(v57 + 8 * v20);
      if ((v48 & v62) == 0) {
        goto LABEL_29;
      }
      LODWORD(v12) = v56;
      if (*(_DWORD *)(v58 + 36) != v56) {
        goto LABEL_30;
      }
      unint64_t v49 = v48 & (-2 << (v44 & 0x3F));
      if (v49)
      {
        unint64_t v17 = __clz(__rbit64(v49)) | v44 & 0xFFFFFFFFFFFFFFC0;
        int64_t v18 = v55;
        uint64_t v19 = v61;
      }
      else
      {
        unint64_t v50 = v20 + 1;
        unint64_t v51 = (v17 + 63) >> 6;
        int64_t v18 = v55;
        uint64_t v19 = v61;
        if (v20 + 1 < v51)
        {
          unint64_t v52 = *(void *)(v57 + 8 * v50);
          if (v52)
          {
LABEL_23:
            unint64_t v17 = __clz(__rbit64(v52)) + (v50 << 6);
          }
          else
          {
            while (v51 - 2 != v20)
            {
              unint64_t v52 = *(void *)(v54 + 8 * v20++);
              if (v52)
              {
                unint64_t v50 = v20 + 1;
                goto LABEL_23;
              }
            }
          }
        }
      }
      uint64_t v14 = v19 + 1;
      unint64_t v13 = v17;
      if (v14 == v18) {
        return;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
}

uint64_t sub_1C1E110DC(uint64_t a1)
{
  sub_1C1DF8D08(0);
  uint64_t v60 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v59 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF76FC(0);
  uint64_t v58 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v57 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v56 = (char *)&v50 - v9;
  MEMORY[0x1F4188790](v8);
  int64_t v55 = (char *)&v50 - v10;
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (!v11) {
    return v12;
  }
  uint64_t v50 = v1;
  uint64_t v68 = MEMORY[0x1E4FBC860];
  sub_1C1DE1100(0, v11, 0);
  uint64_t result = sub_1C1E6578C(a1);
  unint64_t v15 = result;
  uint64_t v16 = 0;
  uint64_t v17 = a1 + 64;
  uint64_t v61 = a1 + 80;
  uint64_t v53 = a1 + 64;
  uint64_t v54 = a1;
  int64_t v51 = v11;
  uint64_t v52 = v14;
  while ((v15 & 0x8000000000000000) == 0 && (uint64_t)v15 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v19 = v15 >> 6;
    if ((*(void *)(v17 + 8 * (v15 >> 6)) & (1 << v15)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v14) {
      goto LABEL_26;
    }
    uint64_t v62 = v16;
    uint64_t v63 = 1 << v15;
    uint64_t v20 = v58;
    uint64_t v21 = (uint64_t)v55;
    uint64_t v64 = &v55[*(int *)(v58 + 48)];
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = sub_1C1EAD368();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 16);
    v25(v21, v22 + *(void *)(v24 + 72) * v15, v23);
    uint64_t v26 = *(void *)(a1 + 56);
    sub_1C1DFC5AC(0);
    uint64_t v28 = v27 - 8;
    uint64_t v29 = *(void *)(*(void *)(v27 - 8) + 72);
    int64_t v65 = v15;
    uint64_t v30 = v26 + v29 * v15;
    uint64_t v31 = (uint64_t)v64;
    sub_1C1DF8CF0(v30, (uint64_t)v64);
    uint64_t v32 = v56;
    v25((uint64_t)v56, v21, v23);
    sub_1C1DF8CF0(v31, (uint64_t)&v32[*(int *)(v20 + 48)]);
    uint64_t v33 = (uint64_t)v32;
    uint64_t v34 = v57;
    sub_1C1DF7C54(v33, v57, (uint64_t (*)(void))sub_1C1DF76FC);
    uint64_t v35 = sub_1C1DF9030(v21, (uint64_t (*)(void))sub_1C1DF76FC);
    uint64_t v36 = v34 + *(int *)(v20 + 48);
    uint64_t v37 = (void *)MEMORY[0x1C874CBD0](v35);
    __swift_project_boxed_opaque_existential_1((void *)(v36 + *(int *)(v28 + 36)), *(void *)(v36 + *(int *)(v28 + 36) + 24));
    uint64_t v66 = sub_1C1EAD5B8();
    uint64_t v67 = v38;
    sub_1C1EAEDB8();
    uint64_t v39 = (void *)sub_1C1EAD9A8();
    sub_1C1EAD798();
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();

    sub_1C1EAEDB8();
    sub_1C1DF8AE0(v36, v59, (uint64_t (*)(void))sub_1C1DF8D08);
    sub_1C1EAED68();
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();
    uint64_t v40 = v66;
    uint64_t v41 = v67;
    sub_1C1DF9030(v34, (uint64_t (*)(void))sub_1C1DF76FC);
    uint64_t v12 = v68;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C1DE1100(0, *(void *)(v12 + 16) + 1, 1);
      uint64_t v12 = v68;
    }
    unint64_t v43 = *(void *)(v12 + 16);
    unint64_t v42 = *(void *)(v12 + 24);
    if (v43 >= v42 >> 1)
    {
      uint64_t result = sub_1C1DE1100(v42 > 1, v43 + 1, 1);
      uint64_t v12 = v68;
    }
    *(void *)(v12 + 16) = v43 + 1;
    uint64_t v44 = v12 + 16 * v43;
    *(void *)(v44 + 32) = v40;
    *(void *)(v44 + 40) = v41;
    a1 = v54;
    unint64_t v15 = 1 << *(unsigned char *)(v54 + 32);
    if (v65 >= (uint64_t)v15) {
      goto LABEL_27;
    }
    uint64_t v17 = v53;
    uint64_t v45 = *(void *)(v53 + 8 * v19);
    if ((v45 & v63) == 0) {
      goto LABEL_28;
    }
    LODWORD(v14) = v52;
    if (*(_DWORD *)(v54 + 36) != v52) {
      goto LABEL_29;
    }
    unint64_t v46 = v45 & (-2 << (v65 & 0x3F));
    if (v46)
    {
      unint64_t v15 = __clz(__rbit64(v46)) | v65 & 0xFFFFFFFFFFFFFFC0;
      int64_t v18 = v51;
    }
    else
    {
      unint64_t v47 = v19 + 1;
      unint64_t v48 = (v15 + 63) >> 6;
      int64_t v18 = v51;
      if (v19 + 1 < v48)
      {
        unint64_t v49 = *(void *)(v53 + 8 * v47);
        if (v49)
        {
LABEL_22:
          unint64_t v15 = __clz(__rbit64(v49)) + (v47 << 6);
        }
        else
        {
          while (v48 - 2 != v19)
          {
            unint64_t v49 = *(void *)(v61 + 8 * v19++);
            if (v49)
            {
              unint64_t v47 = v19 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v16 = v62 + 1;
    if (v62 + 1 == v18) {
      return v12;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1C1E115E0(uint64_t a1)
{
  sub_1C1E11A30(0);
  uint64_t v65 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v60 = (char *)&v53 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v59 = (char *)&v53 - v9;
  int64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v66 = v1;
    uint64_t v67 = (void *)MEMORY[0x1E4FBC860];
    int64_t v11 = &v67;
    sub_1C1DE1100(0, v10, 0);
    unint64_t v13 = sub_1C1E6578C(a1);
    uint64_t v14 = 0;
    uint64_t v15 = a1 + 64;
    char v16 = *(unsigned char *)(a1 + 32);
    uint64_t v54 = a1 + 80;
    int64_t v55 = v10;
    uint64_t v57 = a1 + 64;
    uint64_t v58 = a1;
    uint64_t v56 = v12;
    while ((v13 & 0x8000000000000000) == 0 && (uint64_t)v13 < 1 << v16)
    {
      unint64_t v20 = v13 >> 6;
      if ((*(void *)(v15 + 8 * (v13 >> 6)) & (1 << v13)) == 0) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(a1 + 36) != v12) {
        goto LABEL_27;
      }
      uint64_t v61 = v14;
      uint64_t v62 = 1 << v13;
      uint64_t v21 = (uint64_t)v59;
      uint64_t v63 = &v59[*(int *)(v65 + 48)];
      uint64_t v22 = v6;
      uint64_t v23 = a1;
      uint64_t v24 = *(void *)(a1 + 48);
      uint64_t v25 = sub_1C1EAD368();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 16);
      v27(v21, v24 + *(void *)(v26 + 72) * v13, v25);
      uint64_t v28 = *(void *)(v23 + 56);
      unint64_t v29 = v13;
      uint64_t v30 = (uint64_t)v22;
      sub_1C1DF7CD4(0);
      uint64_t v32 = *(void *)(*(void *)(v31 - 8) + 72);
      uint64_t v64 = v29;
      uint64_t v33 = v28 + v32 * v29;
      uint64_t v34 = (uint64_t)v63;
      sub_1C1E0776C(v33, (uint64_t)v63);
      uint64_t v35 = (uint64_t)v60;
      v27((uint64_t)v60, v21, v25);
      uint64_t v36 = v65;
      sub_1C1E0776C(v34, v35 + *(int *)(v65 + 48));
      sub_1C1DF7C54(v35, v30, (uint64_t (*)(void))sub_1C1E11A30);
      uint64_t v37 = sub_1C1DF9030(v21, (uint64_t (*)(void))sub_1C1E11A30);
      uint64_t v6 = (char *)v30;
      uint64_t v38 = v30 + *(int *)(v36 + 48);
      int64_t v11 = (void *)MEMORY[0x1C874CBD0](v37);
      uint64_t v39 = v66;
      uint64_t v40 = sub_1C1E62C44(v38, (uint64_t (*)(void))sub_1C1DF7CD4);
      uint64_t v66 = v39;
      if (v39) {
        goto LABEL_31;
      }
      uint64_t v42 = v40;
      uint64_t v43 = v41;
      sub_1C1DF9030(v30, (uint64_t (*)(void))sub_1C1E11A30);
      int64_t v11 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1DE1100(0, v11[2] + 1, 1);
        int64_t v11 = v67;
      }
      uint64_t v44 = v64;
      unint64_t v46 = v11[2];
      unint64_t v45 = v11[3];
      if (v46 >= v45 >> 1)
      {
        sub_1C1DE1100(v45 > 1, v46 + 1, 1);
        int64_t v11 = v67;
      }
      void v11[2] = v46 + 1;
      unint64_t v47 = &v11[2 * v46];
      v47[4] = v42;
      v47[5] = v43;
      a1 = v58;
      char v16 = *(unsigned char *)(v58 + 32);
      unint64_t v17 = 1 << v16;
      if (v44 >= 1 << v16) {
        goto LABEL_28;
      }
      uint64_t v15 = v57;
      uint64_t v48 = *(void *)(v57 + 8 * v20);
      if ((v48 & v62) == 0) {
        goto LABEL_29;
      }
      LODWORD(v12) = v56;
      if (*(_DWORD *)(v58 + 36) != v56) {
        goto LABEL_30;
      }
      unint64_t v49 = v48 & (-2 << (v44 & 0x3F));
      if (v49)
      {
        unint64_t v17 = __clz(__rbit64(v49)) | v44 & 0xFFFFFFFFFFFFFFC0;
        int64_t v18 = v55;
        uint64_t v19 = v61;
      }
      else
      {
        unint64_t v50 = v20 + 1;
        unint64_t v51 = (v17 + 63) >> 6;
        int64_t v18 = v55;
        uint64_t v19 = v61;
        if (v20 + 1 < v51)
        {
          unint64_t v52 = *(void *)(v57 + 8 * v50);
          if (v52)
          {
LABEL_23:
            unint64_t v17 = __clz(__rbit64(v52)) + (v50 << 6);
          }
          else
          {
            while (v51 - 2 != v20)
            {
              unint64_t v52 = *(void *)(v54 + 8 * v20++);
              if (v52)
              {
                unint64_t v50 = v20 + 1;
                goto LABEL_23;
              }
            }
          }
        }
      }
      uint64_t v14 = v19 + 1;
      unint64_t v13 = v17;
      if (v14 == v18) {
        return;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
}

void sub_1C1E11A30(uint64_t a1)
{
}

uint64_t sub_1C1E11A50(uint64_t a1)
{
  sub_1C1DFD354(0);
  uint64_t v60 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v59 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E11A30(0);
  uint64_t v58 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v57 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v56 = (char *)&v50 - v9;
  MEMORY[0x1F4188790](v8);
  int64_t v55 = (char *)&v50 - v10;
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (!v11) {
    return v12;
  }
  uint64_t v50 = v1;
  uint64_t v68 = MEMORY[0x1E4FBC860];
  sub_1C1DE1100(0, v11, 0);
  uint64_t result = sub_1C1E6578C(a1);
  unint64_t v15 = result;
  uint64_t v16 = 0;
  uint64_t v17 = a1 + 64;
  uint64_t v61 = a1 + 80;
  uint64_t v53 = a1 + 64;
  uint64_t v54 = a1;
  int64_t v51 = v11;
  uint64_t v52 = v14;
  while ((v15 & 0x8000000000000000) == 0 && (uint64_t)v15 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v19 = v15 >> 6;
    if ((*(void *)(v17 + 8 * (v15 >> 6)) & (1 << v15)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v14) {
      goto LABEL_26;
    }
    uint64_t v62 = v16;
    uint64_t v63 = 1 << v15;
    uint64_t v20 = v58;
    uint64_t v21 = (uint64_t)v55;
    uint64_t v64 = &v55[*(int *)(v58 + 48)];
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = sub_1C1EAD368();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 16);
    v25(v21, v22 + *(void *)(v24 + 72) * v15, v23);
    uint64_t v26 = *(void *)(a1 + 56);
    sub_1C1DF7CD4(0);
    uint64_t v28 = v27 - 8;
    uint64_t v29 = *(void *)(*(void *)(v27 - 8) + 72);
    int64_t v65 = v15;
    uint64_t v30 = v26 + v29 * v15;
    uint64_t v31 = (uint64_t)v64;
    sub_1C1E0776C(v30, (uint64_t)v64);
    uint64_t v32 = v56;
    v25((uint64_t)v56, v21, v23);
    sub_1C1E0776C(v31, (uint64_t)&v32[*(int *)(v20 + 48)]);
    uint64_t v33 = (uint64_t)v32;
    uint64_t v34 = v57;
    sub_1C1DF7C54(v33, v57, (uint64_t (*)(void))sub_1C1E11A30);
    uint64_t v35 = sub_1C1DF9030(v21, (uint64_t (*)(void))sub_1C1E11A30);
    uint64_t v36 = v34 + *(int *)(v20 + 48);
    uint64_t v37 = (void *)MEMORY[0x1C874CBD0](v35);
    __swift_project_boxed_opaque_existential_1((void *)(v36 + *(int *)(v28 + 36)), *(void *)(v36 + *(int *)(v28 + 36) + 24));
    uint64_t v66 = sub_1C1EAD5B8();
    uint64_t v67 = v38;
    sub_1C1EAEDB8();
    uint64_t v39 = (void *)sub_1C1EAD9A8();
    sub_1C1EAD798();
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();

    sub_1C1EAEDB8();
    sub_1C1DF8AE0(v36, v59, (uint64_t (*)(void))sub_1C1DFD354);
    sub_1C1EAED68();
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();
    uint64_t v40 = v66;
    uint64_t v41 = v67;
    sub_1C1DF9030(v34, (uint64_t (*)(void))sub_1C1E11A30);
    uint64_t v12 = v68;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C1DE1100(0, *(void *)(v12 + 16) + 1, 1);
      uint64_t v12 = v68;
    }
    unint64_t v43 = *(void *)(v12 + 16);
    unint64_t v42 = *(void *)(v12 + 24);
    if (v43 >= v42 >> 1)
    {
      uint64_t result = sub_1C1DE1100(v42 > 1, v43 + 1, 1);
      uint64_t v12 = v68;
    }
    *(void *)(v12 + 16) = v43 + 1;
    uint64_t v44 = v12 + 16 * v43;
    *(void *)(v44 + 32) = v40;
    *(void *)(v44 + 40) = v41;
    a1 = v54;
    unint64_t v15 = 1 << *(unsigned char *)(v54 + 32);
    if (v65 >= (uint64_t)v15) {
      goto LABEL_27;
    }
    uint64_t v17 = v53;
    uint64_t v45 = *(void *)(v53 + 8 * v19);
    if ((v45 & v63) == 0) {
      goto LABEL_28;
    }
    LODWORD(v14) = v52;
    if (*(_DWORD *)(v54 + 36) != v52) {
      goto LABEL_29;
    }
    unint64_t v46 = v45 & (-2 << (v65 & 0x3F));
    if (v46)
    {
      unint64_t v15 = __clz(__rbit64(v46)) | v65 & 0xFFFFFFFFFFFFFFC0;
      int64_t v18 = v51;
    }
    else
    {
      unint64_t v47 = v19 + 1;
      unint64_t v48 = (v15 + 63) >> 6;
      int64_t v18 = v51;
      if (v19 + 1 < v48)
      {
        unint64_t v49 = *(void *)(v53 + 8 * v47);
        if (v49)
        {
LABEL_22:
          unint64_t v15 = __clz(__rbit64(v49)) + (v47 << 6);
        }
        else
        {
          while (v48 - 2 != v19)
          {
            unint64_t v49 = *(void *)(v61 + 8 * v19++);
            if (v49)
            {
              unint64_t v47 = v19 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v16 = v62 + 1;
    if (v62 + 1 == v18) {
      return v12;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1C1E11F54(uint64_t a1)
{
  sub_1C1E128BC(0);
  uint64_t v65 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v60 = (char *)&v53 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v59 = (char *)&v53 - v9;
  int64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v66 = v1;
    uint64_t v67 = (void *)MEMORY[0x1E4FBC860];
    int64_t v11 = &v67;
    sub_1C1DE1100(0, v10, 0);
    unint64_t v13 = sub_1C1E6578C(a1);
    uint64_t v14 = 0;
    uint64_t v15 = a1 + 64;
    char v16 = *(unsigned char *)(a1 + 32);
    uint64_t v54 = a1 + 80;
    int64_t v55 = v10;
    uint64_t v57 = a1 + 64;
    uint64_t v58 = a1;
    uint64_t v56 = v12;
    while ((v13 & 0x8000000000000000) == 0 && (uint64_t)v13 < 1 << v16)
    {
      unint64_t v20 = v13 >> 6;
      if ((*(void *)(v15 + 8 * (v13 >> 6)) & (1 << v13)) == 0) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(a1 + 36) != v12) {
        goto LABEL_27;
      }
      uint64_t v61 = v14;
      uint64_t v62 = 1 << v13;
      uint64_t v21 = (uint64_t)v59;
      uint64_t v63 = &v59[*(int *)(v65 + 48)];
      uint64_t v22 = v6;
      uint64_t v23 = a1;
      uint64_t v24 = *(void *)(a1 + 48);
      uint64_t v25 = sub_1C1EAD368();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 16);
      v27(v21, v24 + *(void *)(v26 + 72) * v13, v25);
      uint64_t v28 = *(void *)(v23 + 56);
      unint64_t v29 = v13;
      uint64_t v30 = (uint64_t)v22;
      sub_1C1DFB68C();
      uint64_t v32 = *(void *)(*(void *)(v31 - 8) + 72);
      uint64_t v64 = v29;
      uint64_t v33 = v28 + v32 * v29;
      uint64_t v34 = (uint64_t)v63;
      sub_1C1E66034(v33, (uint64_t)v63);
      uint64_t v35 = (uint64_t)v60;
      v27((uint64_t)v60, v21, v25);
      uint64_t v36 = v65;
      sub_1C1E66034(v34, v35 + *(int *)(v65 + 48));
      sub_1C1DF7C54(v35, v30, (uint64_t (*)(void))sub_1C1E128BC);
      uint64_t v37 = sub_1C1DF9030(v21, (uint64_t (*)(void))sub_1C1E128BC);
      uint64_t v6 = (char *)v30;
      uint64_t v38 = v30 + *(int *)(v36 + 48);
      int64_t v11 = (void *)MEMORY[0x1C874CBD0](v37);
      uint64_t v39 = v66;
      uint64_t v40 = sub_1C1E62C44(v38, (uint64_t (*)(void))sub_1C1DFB68C);
      uint64_t v66 = v39;
      if (v39) {
        goto LABEL_31;
      }
      uint64_t v42 = v40;
      uint64_t v43 = v41;
      sub_1C1DF9030(v30, (uint64_t (*)(void))sub_1C1E128BC);
      int64_t v11 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1DE1100(0, v11[2] + 1, 1);
        int64_t v11 = v67;
      }
      uint64_t v44 = v64;
      unint64_t v46 = v11[2];
      unint64_t v45 = v11[3];
      if (v46 >= v45 >> 1)
      {
        sub_1C1DE1100(v45 > 1, v46 + 1, 1);
        int64_t v11 = v67;
      }
      void v11[2] = v46 + 1;
      unint64_t v47 = &v11[2 * v46];
      v47[4] = v42;
      v47[5] = v43;
      a1 = v58;
      char v16 = *(unsigned char *)(v58 + 32);
      unint64_t v17 = 1 << v16;
      if (v44 >= 1 << v16) {
        goto LABEL_28;
      }
      uint64_t v15 = v57;
      uint64_t v48 = *(void *)(v57 + 8 * v20);
      if ((v48 & v62) == 0) {
        goto LABEL_29;
      }
      LODWORD(v12) = v56;
      if (*(_DWORD *)(v58 + 36) != v56) {
        goto LABEL_30;
      }
      unint64_t v49 = v48 & (-2 << (v44 & 0x3F));
      if (v49)
      {
        unint64_t v17 = __clz(__rbit64(v49)) | v44 & 0xFFFFFFFFFFFFFFC0;
        int64_t v18 = v55;
        uint64_t v19 = v61;
      }
      else
      {
        unint64_t v50 = v20 + 1;
        unint64_t v51 = (v17 + 63) >> 6;
        int64_t v18 = v55;
        uint64_t v19 = v61;
        if (v20 + 1 < v51)
        {
          unint64_t v52 = *(void *)(v57 + 8 * v50);
          if (v52)
          {
LABEL_23:
            unint64_t v17 = __clz(__rbit64(v52)) + (v50 << 6);
          }
          else
          {
            while (v51 - 2 != v20)
            {
              unint64_t v52 = *(void *)(v54 + 8 * v20++);
              if (v52)
              {
                unint64_t v50 = v20 + 1;
                goto LABEL_23;
              }
            }
          }
        }
      }
      uint64_t v14 = v19 + 1;
      unint64_t v13 = v17;
      if (v14 == v18) {
        return;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
}

uint64_t sub_1C1E123A4(uint64_t a1)
{
  sub_1C1E0BF98(0, &qword_1EBB676F8, (unint64_t *)&qword_1EBB66FA8, MEMORY[0x1E4F67380], (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for AnyGenerator);
  uint64_t v60 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v59 = (uint64_t)&v50 - v4;
  sub_1C1E128BC(0);
  uint64_t v58 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v57 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v56 = (char *)&v50 - v9;
  MEMORY[0x1F4188790](v8);
  int64_t v55 = (char *)&v50 - v10;
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (!v11) {
    return v12;
  }
  uint64_t v50 = v1;
  uint64_t v68 = MEMORY[0x1E4FBC860];
  sub_1C1DE1100(0, v11, 0);
  uint64_t result = sub_1C1E6578C(a1);
  unint64_t v15 = result;
  uint64_t v16 = 0;
  uint64_t v17 = a1 + 64;
  uint64_t v61 = a1 + 80;
  uint64_t v53 = a1 + 64;
  uint64_t v54 = a1;
  int64_t v51 = v11;
  uint64_t v52 = v14;
  while ((v15 & 0x8000000000000000) == 0 && (uint64_t)v15 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v19 = v15 >> 6;
    if ((*(void *)(v17 + 8 * (v15 >> 6)) & (1 << v15)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v14) {
      goto LABEL_26;
    }
    uint64_t v62 = v16;
    uint64_t v63 = 1 << v15;
    uint64_t v20 = v58;
    uint64_t v21 = (uint64_t)v55;
    uint64_t v64 = &v55[*(int *)(v58 + 48)];
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = sub_1C1EAD368();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 16);
    v25(v21, v22 + *(void *)(v24 + 72) * v15, v23);
    uint64_t v26 = *(void *)(a1 + 56);
    sub_1C1DFB68C();
    uint64_t v28 = v27 - 8;
    uint64_t v29 = *(void *)(*(void *)(v27 - 8) + 72);
    int64_t v65 = v15;
    uint64_t v30 = v26 + v29 * v15;
    uint64_t v31 = (uint64_t)v64;
    sub_1C1E66034(v30, (uint64_t)v64);
    uint64_t v32 = v56;
    v25((uint64_t)v56, v21, v23);
    sub_1C1E66034(v31, (uint64_t)&v32[*(int *)(v20 + 48)]);
    uint64_t v33 = (uint64_t)v32;
    uint64_t v34 = v57;
    sub_1C1DF7C54(v33, v57, (uint64_t (*)(void))sub_1C1E128BC);
    uint64_t v35 = sub_1C1DF9030(v21, (uint64_t (*)(void))sub_1C1E128BC);
    uint64_t v36 = v34 + *(int *)(v20 + 48);
    uint64_t v37 = (void *)MEMORY[0x1C874CBD0](v35);
    __swift_project_boxed_opaque_existential_1((void *)(v36 + *(int *)(v28 + 36)), *(void *)(v36 + *(int *)(v28 + 36) + 24));
    uint64_t v66 = sub_1C1EAD5B8();
    uint64_t v67 = v38;
    sub_1C1EAEDB8();
    uint64_t v39 = (void *)sub_1C1EAD9A8();
    sub_1C1EAD798();
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();

    sub_1C1EAEDB8();
    sub_1C1E6604C(v36, v59);
    sub_1C1EAED68();
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();
    uint64_t v40 = v66;
    uint64_t v41 = v67;
    sub_1C1DF9030(v34, (uint64_t (*)(void))sub_1C1E128BC);
    uint64_t v12 = v68;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C1DE1100(0, *(void *)(v12 + 16) + 1, 1);
      uint64_t v12 = v68;
    }
    unint64_t v43 = *(void *)(v12 + 16);
    unint64_t v42 = *(void *)(v12 + 24);
    if (v43 >= v42 >> 1)
    {
      uint64_t result = sub_1C1DE1100(v42 > 1, v43 + 1, 1);
      uint64_t v12 = v68;
    }
    *(void *)(v12 + 16) = v43 + 1;
    uint64_t v44 = v12 + 16 * v43;
    *(void *)(v44 + 32) = v40;
    *(void *)(v44 + 40) = v41;
    a1 = v54;
    unint64_t v15 = 1 << *(unsigned char *)(v54 + 32);
    if (v65 >= (uint64_t)v15) {
      goto LABEL_27;
    }
    uint64_t v17 = v53;
    uint64_t v45 = *(void *)(v53 + 8 * v19);
    if ((v45 & v63) == 0) {
      goto LABEL_28;
    }
    LODWORD(v14) = v52;
    if (*(_DWORD *)(v54 + 36) != v52) {
      goto LABEL_29;
    }
    unint64_t v46 = v45 & (-2 << (v65 & 0x3F));
    if (v46)
    {
      unint64_t v15 = __clz(__rbit64(v46)) | v65 & 0xFFFFFFFFFFFFFFC0;
      int64_t v18 = v51;
    }
    else
    {
      unint64_t v47 = v19 + 1;
      unint64_t v48 = (v15 + 63) >> 6;
      int64_t v18 = v51;
      if (v19 + 1 < v48)
      {
        unint64_t v49 = *(void *)(v53 + 8 * v47);
        if (v49)
        {
LABEL_22:
          unint64_t v15 = __clz(__rbit64(v49)) + (v47 << 6);
        }
        else
        {
          while (v48 - 2 != v19)
          {
            unint64_t v49 = *(void *)(v61 + 8 * v19++);
            if (v49)
            {
              unint64_t v47 = v19 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v16 = v62 + 1;
    if (v62 + 1 == v18) {
      return v12;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1C1E128BC(uint64_t a1)
{
}

void sub_1C1E128DC(uint64_t a1)
{
}

uint64_t sub_1C1E1291C(uint64_t a1)
{
  sub_1C1E12BF0();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 96);
  swift_retain();
  uint64_t v9 = v8(a1);
  swift_release();
  v16[0] = v9;
  uint64_t v10 = (void (*)(uint64_t))MEMORY[0x1E4F67418];
  sub_1C1E12B38(0, &qword_1EBB67D28, &qword_1EBB67D40, MEMORY[0x1E4F67418]);
  uint64_t v12 = v11;
  uint64_t v13 = sub_1C1E12BA0((unint64_t *)&qword_1EBB67D20, &qword_1EBB67D28, &qword_1EBB67D40, v10);
  sub_1C1EAE928();
  swift_release();
  v16[0] = v12;
  v16[1] = v13;
  swift_getOpaqueTypeConformance2();
  uint64_t v14 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

void sub_1C1E12AC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_1C1E15248(255);
    unint64_t v7 = a3(a1, v6, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C1E12B38(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C1DF90F4(255, a3, a4);
    unint64_t v5 = sub_1C1EAE7D8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C1E12BA0(unint64_t *a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1E12B38(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1E12BF0()
{
  if (!qword_1EBB65458)
  {
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F67418];
    sub_1C1E12B38(255, &qword_1EBB67D28, &qword_1EBB67D40, MEMORY[0x1E4F67418]);
    sub_1C1E12BA0((unint64_t *)&qword_1EBB67D20, &qword_1EBB67D28, &qword_1EBB67D40, v0);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v2) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EBB65458);
    }
  }
}

uint64_t sub_1C1E12CC8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void *, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2 + 4, v2[9], v2[10], v2[11]);
}

uint64_t sub_1C1E12CE4(uint64_t a1)
{
  return sub_1C1E12CC8(a1, (uint64_t (*)(uint64_t, void, void, void *, void, void, void))sub_1C1E12CFC);
}

uint64_t sub_1C1E12CFC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v62 = a6;
  uint64_t v63 = a7;
  int64_t v65 = a4;
  sub_1C1E14CAC(0, &qword_1EBB65980, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AC18]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v52 - v12;
  sub_1C1E13568();
  uint64_t v56 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E13634();
  uint64_t v58 = *(void *)(v17 - 8);
  uint64_t v59 = v17;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E134B4();
  uint64_t v21 = v20;
  uint64_t v61 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v60 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v55 = v21;
  uint64_t v24 = a5;
  uint64_t v64 = Strong;
  uint64_t v25 = (void *)sub_1C1EAF058();
  uint64_t v26 = (void *)sub_1C1EAD778();

  if (!v26)
  {
    swift_release();
LABEL_8:
    sub_1C1E15248(0);
    sub_1C1EAE8C8();
    sub_1C1E67044();
    uint64_t v30 = sub_1C1EAEA38();
LABEL_9:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v30;
  }
  id v27 = objc_msgSend(v26, sel_type);
  if (v27 != (id)1)
  {
    if (v27 == (id)2)
    {
      __swift_project_boxed_opaque_existential_1(v65, v65[3]);
      int64_t v65 = v26;
      uint64_t v62 = sub_1C1EAD5B8();
      uint64_t v53 = v32;
      uint64_t v33 = sub_1C1EAE088();
      uint64_t v34 = sub_1C1EAE098();
      uint64_t v66 = v24;
      uint64_t v54 = v24;
      uint64_t v35 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v36 = (void *)swift_allocObject();
      uint64_t v37 = v62;
      v36[2] = v35;
      v36[3] = v37;
      v36[4] = v53;
      v36[5] = v33;
      uint64_t v63 = v33;
      v36[6] = v34;
      uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
      sub_1C1DFEB90(0, &qword_1EBB65080, MEMORY[0x1E4F1AAE0]);
      uint64_t v62 = v39;
      sub_1C1E14FFC();
      uint64_t v52 = v40;
      sub_1C1DFEE5C(&qword_1EBB65078, &qword_1EBB65080, v38);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C1EAEA68();
      swift_release();
      uint64_t v41 = sub_1C1DF9B3C(&qword_1EBB64E38, (void (*)(uint64_t))sub_1C1E13568);
      uint64_t v42 = sub_1C1DF9B3C(&qword_1EBB67D30, (void (*)(uint64_t))sub_1C1E14FFC);
      uint64_t v43 = v57;
      MEMORY[0x1C874BC40](v57, v41, v42);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v43);
      sub_1C1DF9B3C((unint64_t *)&qword_1EBB64D90, (void (*)(uint64_t))sub_1C1E13634);
      uint64_t v44 = v59;
      uint64_t v45 = sub_1C1EAEA38();
      swift_release();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v19, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v66 = v45;
      uint64_t v46 = sub_1C1EAE948();
      swift_release();
      uint64_t v66 = v46;
      sub_1C1DF9BC8(0, &qword_1EBB65060, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AAE0]);
      uint64_t v48 = v47;
      unint64_t v49 = sub_1C1E493C4();
      uint64_t v50 = v60;
      sub_1C1EAE918();
      swift_release();
      uint64_t v66 = v48;
      unint64_t v67 = v49;
      swift_getOpaqueTypeConformance2();
      uint64_t v51 = v55;
      uint64_t v30 = sub_1C1EAEA38();

      swift_release();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v50, v51);
      return v30;
    }
    if (v27 != (id)3)
    {
      sub_1C1E15248(0);
      sub_1C1EAE8C8();
      sub_1C1E67044();
      uint64_t v30 = sub_1C1EAEA38();

      swift_release();
      goto LABEL_9;
    }
  }
  uint64_t v28 = sub_1C1EAE088();
  uint64_t v29 = sub_1C1EAE098();
  uint64_t v30 = sub_1C1E13F58(a3, v65, v28, v29, v24, v62, v63, (uint64_t)&unk_1F1D67158);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v30;
}

void sub_1C1E134B4()
{
  if (!qword_1EBB65448)
  {
    sub_1C1E15464(255, &qword_1EBB65060, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AAE0]);
    sub_1C1E493C4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EBB65448);
    }
  }
}

void sub_1C1E13568()
{
  if (!qword_1EBB64E40)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1DFEADC(255, &qword_1EBB65080, MEMORY[0x1E4F1AAE0]);
    sub_1C1E14FFC();
    sub_1C1DFEE18(&qword_1EBB65078, &qword_1EBB65080, v0);
    unint64_t v1 = sub_1C1EAE668();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB64E40);
    }
  }
}

void sub_1C1E13634()
{
  if (!qword_1EBB64D98)
  {
    sub_1C1E14FFC();
    sub_1C1E13568();
    sub_1C1DECE04(&qword_1EBB67D30, (void (*)(uint64_t))sub_1C1E14FFC);
    sub_1C1DECE04(&qword_1EBB64E38, (void (*)(uint64_t))sub_1C1E13568);
    unint64_t v0 = sub_1C1EAE618();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64D98);
    }
  }
}

uint64_t sub_1C1E13720(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v52 = a5;
  uint64_t v53 = a1;
  void v47[2] = a4;
  sub_1C1DFA59C(0, &qword_1EBB65428, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AC08]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v47 - v10;
  sub_1C1E15464(0, &qword_1EBB654D8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1ACE0]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v47 - v15;
  sub_1C1E15194();
  uint64_t v48 = *(void *)(v17 - 8);
  uint64_t v49 = v17;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E150A8();
  uint64_t v50 = *(void *)(v20 - 8);
  uint64_t v51 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E14F48();
  uint64_t v55 = *(void *)(v23 - 8);
  uint64_t v56 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v54 = (char *)v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v57 = a2;
    sub_1C1EAE0B8();
    swift_retain_n();
    sub_1C1EAE8B8();
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    sub_1C1EAE888();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    sub_1C1EAD5B8();
    sub_1C1EAE088();
    sub_1C1EAE098();
    sub_1C1E14EC0();
    uint64_t v25 = sub_1C1EAE978();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v57 = v25;
    sub_1C1E14FFC();
    uint64_t v27 = v26;
    uint64_t v28 = sub_1C1DECE04(&qword_1EBB67D30, (void (*)(uint64_t))sub_1C1E14FFC);
    uint64_t v29 = v54;
    sub_1C1EAE918();
    swift_release();
    uint64_t v57 = v27;
    uint64_t v58 = v28;
    swift_getOpaqueTypeConformance2();
    uint64_t v30 = v56;
    uint64_t v31 = sub_1C1EAEA38();
    swift_release();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    v47[0] = sub_1C1EAD5B8();
    uint64_t v33 = v32;
    uint64_t v34 = sub_1C1EAE088();
    uint64_t v35 = sub_1C1EAE098();
    uint64_t v57 = v52;
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1DFEADC(0, &qword_1EBB65080, MEMORY[0x1E4F1AAE0]);
    sub_1C1DFEE18(&qword_1EBB65078, &qword_1EBB65080, v36);
    swift_retain();
    sub_1C1EAEA98();
    uint64_t v37 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v38 = (void *)swift_allocObject();
    uint64_t v39 = v47[0];
    v38[2] = v37;
    uint64_t v38[3] = v39;
    v47[1] = v33;
    v38[4] = v33;
    v38[5] = v34;
    uint64_t v53 = v35;
    v38[6] = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C1EAE7C8();
    sub_1C1E4935C(0, &qword_1EBB67D68, (unint64_t *)&qword_1EBB67D70, 0x1E4F2B4A0, MEMORY[0x1E4FBB320]);
    sub_1C1E14FFC();
    uint64_t v41 = v40;
    sub_1C1DECE04(&qword_1EBB65820, (void (*)(uint64_t))sub_1C1E15194);
    uint64_t v42 = sub_1C1DECE04(&qword_1EBB67D30, (void (*)(uint64_t))sub_1C1E14FFC);
    uint64_t v43 = v49;
    sub_1C1EAEAD8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v43);
    sub_1C1DECE04((unint64_t *)&qword_1EBB65848, (void (*)(uint64_t))sub_1C1E150A8);
    uint64_t v44 = v51;
    uint64_t v45 = sub_1C1EAEA38();
    swift_release();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v57 = v45;
    uint64_t v29 = v54;
    sub_1C1EAE918();
    swift_release();
    uint64_t v57 = v41;
    uint64_t v58 = v42;
    swift_getOpaqueTypeConformance2();
    uint64_t v30 = v56;
    uint64_t v31 = sub_1C1EAEA38();
  }
  (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v30);
  return v31;
}

uint64_t sub_1C1E13F58(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v73[2] = a8;
  uint64_t v92 = a7;
  uint64_t v78 = a5;
  uint64_t v94 = a3;
  uint64_t v95 = a4;
  uint64_t v93 = a2;
  uint64_t v91 = a1;
  sub_1C1E153A4();
  uint64_t v86 = *(void *)(v9 - 8);
  uint64_t v87 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v85 = (char *)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E152B0(0);
  uint64_t v81 = *(void *)(v11 - 8);
  uint64_t v82 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v79 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E152F8();
  uint64_t v83 = *(void *)(v13 - 8);
  uint64_t v84 = v13;
  MEMORY[0x1F4188790](v13);
  unint64_t v80 = (char *)v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E15194();
  uint64_t v75 = v15;
  uint64_t v74 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E150A8();
  uint64_t v77 = v18;
  uint64_t v76 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF7678(0, &qword_1EBB65428, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AC08]);
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)v73 - v24;
  sub_1C1DF9BC8(0, &qword_1EBB654D8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1ACE0]);
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)v73 - v29;
  sub_1C1E14F48();
  uint64_t v89 = *(void *)(v31 - 8);
  uint64_t v90 = v31;
  MEMORY[0x1F4188790](v31);
  uint64_t v88 = (char *)v73 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a6)
  {
    __swift_project_boxed_opaque_existential_1(v93, v93[3]);
    uint64_t v57 = sub_1C1EAD5B8();
    uint64_t v59 = v58;
    *(void *)&v96[0] = v78;
    uint64_t v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1DFEB90(0, &qword_1EBB65080, MEMORY[0x1E4F1AAE0]);
    sub_1C1DFEE5C(&qword_1EBB65078, &qword_1EBB65080, v60);
    swift_retain();
    sub_1C1EAEA98();
    uint64_t v61 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v62 = (void *)swift_allocObject();
    v62[2] = v61;
    v62[3] = v57;
    v73[1] = v59;
    uint64_t v63 = v94;
    v62[4] = v59;
    void v62[5] = v63;
    v62[6] = v95;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C1EAE7C8();
    sub_1C1E66FD4(0, &qword_1EBB67D68, (unint64_t *)&qword_1EBB67D70, 0x1E4F2B4A0, MEMORY[0x1E4FBB320]);
    sub_1C1E14FFC();
    uint64_t v65 = v64;
    sub_1C1DF9B3C(&qword_1EBB65820, (void (*)(uint64_t))sub_1C1E15194);
    uint64_t v66 = sub_1C1DF9B3C(&qword_1EBB67D30, (void (*)(uint64_t))sub_1C1E14FFC);
    uint64_t v67 = v75;
    sub_1C1EAEAD8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v17, v67);
    sub_1C1DF9B3C((unint64_t *)&qword_1EBB65848, (void (*)(uint64_t))sub_1C1E150A8);
    uint64_t v68 = v77;
    uint64_t v69 = sub_1C1EAEA38();
    swift_release();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v20, v68);
    swift_bridgeObjectRelease();
    *(void *)&v96[0] = v69;
    uint64_t v70 = v88;
    sub_1C1EAE918();
    swift_release();
    *(void *)&v96[0] = v65;
    *((void *)&v96[0] + 1) = v66;
    swift_getOpaqueTypeConformance2();
    uint64_t v71 = v90;
    uint64_t v72 = sub_1C1EAE948();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v70, v71);
    *(void *)&v96[0] = v72;
    sub_1C1E14CAC(0, &qword_1EBB67D28, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AAE0]);
    sub_1C1E14E38();
    uint64_t v41 = sub_1C1EAEA38();
    swift_release();
    uint64_t v33 = v93;
    uint64_t v42 = v92;
    if (!v92) {
      return v41;
    }
    goto LABEL_3;
  }
  *(void *)&v96[0] = a6;
  sub_1C1EAE0B8();
  swift_retain_n();
  sub_1C1EAE8B8();
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  sub_1C1EAE888();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v33 = v93;
  __swift_project_boxed_opaque_existential_1(v93, v93[3]);
  sub_1C1EAD5B8();
  sub_1C1E14EC0();
  uint64_t v34 = sub_1C1EAE978();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  *(void *)&v96[0] = v34;
  sub_1C1E14FFC();
  uint64_t v36 = v35;
  uint64_t v37 = sub_1C1DF9B3C(&qword_1EBB67D30, (void (*)(uint64_t))sub_1C1E14FFC);
  uint64_t v38 = v88;
  sub_1C1EAE918();
  swift_release();
  *(void *)&v96[0] = v36;
  *((void *)&v96[0] + 1) = v37;
  swift_getOpaqueTypeConformance2();
  uint64_t v39 = v90;
  uint64_t v40 = sub_1C1EAE948();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v38, v39);
  *(void *)&v96[0] = v40;
  sub_1C1E14CAC(0, &qword_1EBB67D28, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AAE0]);
  sub_1C1E14E38();
  uint64_t v41 = sub_1C1EAEA38();
  swift_release();
  swift_release();
  uint64_t v42 = v92;
  if (v92)
  {
LABEL_3:
    uint64_t v97 = v42;
    sub_1C1DFE408((uint64_t)v33, (uint64_t)v96);
    uint64_t v43 = swift_allocObject();
    sub_1C1DFE46C(v96, v43 + 16);
    uint64_t v44 = v91;
    *(void *)(v43 + 56) = v91;
    uint64_t v45 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E14CAC(0, (unint64_t *)&qword_1EBB67CF8, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1AAE0]);
    sub_1C1E1527C();
    swift_retain();
    id v46 = v44;
    uint64_t v47 = v79;
    sub_1C1EAEAA8();
    swift_release();
    sub_1C1E15248(0);
    sub_1C1DF9B3C(&qword_1EBB64E98, sub_1C1E152B0);
    uint64_t v48 = v80;
    uint64_t v49 = v82;
    sub_1C1EAEA68();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v47, v49);
    sub_1C1DF9B3C((unint64_t *)&qword_1EBB64E58, (void (*)(uint64_t))sub_1C1E152F8);
    uint64_t v50 = v84;
    uint64_t v51 = sub_1C1EAE938();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v48, v50);
    *(void *)&v96[0] = v51;
    sub_1C1E14CAC(0, &qword_1EBB67D28, (uint64_t (*)(uint64_t))sub_1C1E15248, v45);
    sub_1C1E14E38();
    uint64_t v52 = sub_1C1EAEA38();
    swift_release();
    *(void *)&v96[0] = v52;
    uint64_t v97 = v41;
    uint64_t v53 = v85;
    sub_1C1EAEA08();
    sub_1C1DF9B3C(&qword_1EBB657F0, (void (*)(uint64_t))sub_1C1E153A4);
    uint64_t v54 = v87;
    uint64_t v55 = sub_1C1EAEA38();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v53, v54);
    return v55;
  }
  return v41;
}

void sub_1C1E14CAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1E14D20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1C1E14DA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C1E0BF98(255, (unint64_t *)&qword_1EBB66F20, &qword_1EBB66F98, MEMORY[0x1E4F670C0], MEMORY[0x1E4F1AAE0]);
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C1E0C088();
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C1E14E38()
{
  unint64_t result = qword_1EBB67D20;
  if (!qword_1EBB67D20)
  {
    sub_1C1E14CAC(255, &qword_1EBB67D28, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB67D20);
  }
  return result;
}

unint64_t sub_1C1E14EC0()
{
  unint64_t result = qword_1EBB654D0;
  if (!qword_1EBB654D0)
  {
    sub_1C1E15464(255, &qword_1EBB654D8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1ACE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB654D0);
  }
  return result;
}

void sub_1C1E14F48()
{
  if (!qword_1EBB65450)
  {
    sub_1C1E14FFC();
    sub_1C1DECE04(&qword_1EBB67D30, (void (*)(uint64_t))sub_1C1E14FFC);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EBB65450);
    }
  }
}

void sub_1C1E14FFC()
{
  if (!qword_1EBB67D38)
  {
    sub_1C1E4935C(255, &qword_1EBB67D68, (unint64_t *)&qword_1EBB67D70, 0x1E4F2B4A0, MEMORY[0x1E4FBB320]);
    sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
    unint64_t v0 = sub_1C1EAE7D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67D38);
    }
  }
}

void sub_1C1E150A8()
{
  if (!qword_1EBB65850)
  {
    sub_1C1E14FFC();
    sub_1C1E15194();
    sub_1C1DECE04(&qword_1EBB67D30, (void (*)(uint64_t))sub_1C1E14FFC);
    sub_1C1DECE04(&qword_1EBB65820, (void (*)(uint64_t))sub_1C1E15194);
    unint64_t v0 = sub_1C1EAE6C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65850);
    }
  }
}

void sub_1C1E15194()
{
  if (!qword_1EBB65828)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1DFEADC(255, &qword_1EBB65080, MEMORY[0x1E4F1AAE0]);
    sub_1C1DFEE18(&qword_1EBB65078, &qword_1EBB65080, v0);
    unint64_t v1 = sub_1C1EAE688();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB65828);
    }
  }
}

void sub_1C1E15248(uint64_t a1)
{
}

uint64_t sub_1C1E1527C()
{
  return sub_1C1DECE04(&qword_1EBB67CF0, (void (*)(uint64_t))sub_1C1E4A254);
}

void sub_1C1E152B0(uint64_t a1)
{
}

void sub_1C1E152F8()
{
  if (!qword_1EBB64E60)
  {
    sub_1C1E152B0(255);
    sub_1C1E15248(255);
    sub_1C1DF9B3C(&qword_1EBB64E98, sub_1C1E152B0);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64E60);
    }
  }
}

void sub_1C1E153A4()
{
  if (!qword_1EBB657F8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E12AC8(255, &qword_1EBB67D28, MEMORY[0x1E4F1AAE0]);
    sub_1C1E4A210((unint64_t *)&qword_1EBB67D20, &qword_1EBB67D28, v0);
    unint64_t v1 = sub_1C1EAE648();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB657F8);
    }
  }
}

void sub_1C1E15464(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    uint64_t v8 = sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t DispatchQueueGeneratorScheduler.receiveOn<A>(for:domain:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return sub_1C1E09500(a1, a2, a3, a4, MEMORY[0x1E4F1AAB0], MEMORY[0x1E4F1AC88], MEMORY[0x1E4F1AAB8]);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1C1E156D0(uint64_t a1)
{
  return sub_1C1DD9F14(a1, (uint64_t (*)(void))sub_1C1DFC68C, (uint64_t (*)(uint64_t, uint64_t))sub_1C1E156FC);
}

uint64_t sub_1C1E15700@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1C1DD84D0(a1, a2);
}

uint64_t type metadata accessor for SharableModelGeneratorPipelineManager()
{
  uint64_t result = qword_1EBB67BF0;
  if (!qword_1EBB67BF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1E15758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1DE06E0(a1, a2);
}

uint64_t dispatch thunk of SharableModelGeneratorPipelineManager.interactiveSharableModelOutput.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t type metadata accessor for FeedItemGeneratorPipelineManager()
{
  uint64_t result = qword_1EBB67290;
  if (!qword_1EBB67290) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t dispatch thunk of GeneratorPipelineManager.makeGenerationStream(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

id sub_1C1E15804@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C1DD7FD0(a1, *(void **)(v2 + 16), a2);
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t sub_1C1E15838()
{
  return sub_1C1DD7AD0((uint64_t (*)(unint64_t, unint64_t, uint64_t))sub_1C1E15850);
}

void sub_1C1E15850(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C1E15870@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  return sub_1C1DE12AC(result, a2);
}

uint64_t sub_1C1E15878@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1DE5928(a1, *(void *)(v2 + 24), a2);
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.principalClass.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t sub_1C1E158A8(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t type metadata accessor for DateRangeRelevanceProvider()
{
  uint64_t result = qword_1EBB67E08;
  if (!qword_1EBB67E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t dispatch thunk of GeneratorPipelineManager.delegates.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t sub_1C1E1594C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1DD5D58(a1, sub_1C1E0C2A8, a2);
}

uint64_t sub_1C1E15964@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1DD5D58(a1, sub_1C1E0D1D8, a2);
}

id GeneratorPipelineManager.orchestrationQueue.getter()
{
  return *(id *)(v0 + 152);
}

uint64_t sub_1C1E15984(uint64_t a1)
{
  return sub_1C1DD9F14(a1, (uint64_t (*)(void))sub_1C1DF7CD4, (uint64_t (*)(uint64_t, uint64_t))sub_1C1E159B0);
}

uint64_t sub_1C1E159B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C1DDC524(a1, a2, (uint64_t (*)(void))sub_1C1DF7CD4, (uint64_t (*)(void))sub_1C1DFC68C, a3);
}

uint64_t sub_1C1E159DC(uint64_t a1)
{
  return sub_1C1DD6B80(a1, (uint64_t (*)(void))sub_1C1DF92F4, (uint64_t (*)(uint64_t, uint64_t))sub_1C1DDB7B4);
}

uint64_t GeneratorPipelineManager.environment.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_1C1E15A14(uint64_t a1)
{
  return sub_1C1E09814(a1, (uint64_t (*)(void))sub_1C1E0D080, &qword_1EBB65040, sub_1C1E0D080);
}

uint64_t sub_1C1E15A48(uint64_t a1)
{
  return sub_1C1E09814(a1, (uint64_t (*)(void))sub_1C1DF91CC, &qword_1EBB65028, sub_1C1DF91CC);
}

uint64_t sub_1C1E15A7C(uint64_t a1)
{
  return sub_1C1DE7DB4(a1, (uint64_t (*)(void))sub_1C1DF7CD4, sub_1C1DE0408);
}

uint64_t sub_1C1E15AA8(uint64_t a1)
{
  return sub_1C1DE7DB4(a1, (uint64_t (*)(void))sub_1C1DF92F4, sub_1C1DE0290);
}

id BasicPluginInfo.bundle.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_1C1E15AE0(void *a1)
{
  return sub_1C1DDD644(a1, (uint64_t (*)(uint64_t, uint64_t))SharableModelGenerator.eraseToAnyGenerator());
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t objectdestroy_34Tm()
{
  sub_1C1DFC68C(0);
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v0 + v4;
  uint64_t v8 = v0 + v4 + 8;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v8);
  uint64_t v9 = v7 + *(int *)(v2 + 40);
  uint64_t v10 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v7 + *(int *)(v2 + 44);
  uint64_t v12 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v1 = sub_1C1EAD368();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1C1EAE4C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return MEMORY[0x1F4186498](v0, v11, v10);
}

uint64_t objectdestroy_28Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

void sub_1C1E15EB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_1C1E16AC0();
    uint64_t v7 = v6;
    unint64_t v8 = sub_1C1E15F30();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C1E15F30()
{
  unint64_t result = qword_1EBB68150;
  if (!qword_1EBB68150)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB68150);
  }
  return result;
}

void sub_1C1E15F88()
{
  unint64_t v0 = sub_1C1DE0FC8();
  if (swift_isClassType()) {
    unint64_t v1 = v0;
  }
  else {
    unint64_t v1 = 0;
  }
  if (v1) {
    sub_1C1DFD274(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  }
  else {
    sub_1C1DFC41C(0, &qword_1EBB67FB8, (uint64_t (*)(uint64_t))sub_1C1DE0FC8, MEMORY[0x1E4FBBE00]);
  }
}

void sub_1C1E1602C()
{
  if (!qword_1EBB67DA8)
  {
    sub_1C1EAD368();
    sub_1C1DF92F4(255);
    sub_1C1DF9B3C(&qword_1EBB68168, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C1EAF698();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67DA8);
    }
  }
}

void sub_1C1E160D8(uint64_t a1, void *a2, char a3)
{
  long long v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1C1E0DE00((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1C1E9F538();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1C1E0DF60(v12, a3 & 1);
  unint64_t v17 = sub_1C1E0DE00((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    sub_1C1DF9F8C(0, &qword_1EBB68260);
    sub_1C1EAF7D8();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v22;
  id v23 = a2;
}

void sub_1C1E1624C(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1C1EAF338();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1C1EAF278();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *uint64_t v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  uint64_t *v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1C1E16400(int64_t a1, uint64_t a2)
{
  return sub_1C1DEB3F8(a1, a2, &qword_1EBB678B0, (uint64_t (*)(uint64_t))sub_1C1DF8D08);
}

uint64_t sub_1C1E16420(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E063D0(a1, a2, a3, (void *)*v3, &qword_1EBB67DB8, &qword_1EBB674F0, (uint64_t)&qword_1EBB678C0, (void (*)(uint64_t, uint64_t, uint64_t (*)()))sub_1C1E0525C);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_1C1E1646C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1C1DF9148(0, (unint64_t *)&qword_1EBB66220);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1E16588(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = v11 + 1;
  if (a3)
  {
    sub_1C1E332A0(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C1E34A88(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_1C1E357E0(v13, a4, a5, a6, a7);
  }
  uint64_t v14 = *v7;
  uint64_t v15 = sub_1C1EAF278();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C1DF9F8C(0, a5);
    id v17 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
    char v18 = sub_1C1EAF288();

    if (v18)
    {
LABEL_13:
      sub_1C1EAF7C8();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
        char v21 = sub_1C1EAF288();

        if (v21) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v22 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = a1;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v25;
  }
}

uint64_t sub_1C1E16740(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1C1E9BC18();
  uint64_t result = sub_1C1EAF488();
  uint64_t v9 = result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1C1EAF278();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_1C1E1699C()
{
  if (!qword_1EBB660F0)
  {
    sub_1C1DF9F8C(255, &qword_1EBB683E0);
    unint64_t v0 = sub_1C1EAF2A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB660F0);
    }
  }
}

uint64_t sub_1C1E16A04(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1DF9F8C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C1E16A54()
{
  unint64_t result = qword_1EBB66110;
  if (!qword_1EBB66110)
  {
    sub_1C1DF9F8C(255, &qword_1EBB66108);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB66110);
  }
  return result;
}

void sub_1C1E16AC0()
{
  if (!qword_1EBB65A10)
  {
    sub_1C1E936B4(255, &qword_1EBB65A08, &qword_1EBB65A00, 0x1E4F2B5D8, MEMORY[0x1E4FBB718]);
    sub_1C1DEB760(255, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB65A10);
    }
  }
}

unint64_t sub_1C1E16B8C()
{
  unint64_t result = qword_1EBB68388;
  if (!qword_1EBB68388)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB68388);
  }
  return result;
}

uint64_t sub_1C1E16BCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1DE38AC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1E16C3C(unint64_t a1)
{
  return sub_1C1E16C6C(a1, &qword_1EBB68260, 0x1E4F2B358, (unint64_t *)&qword_1EBB67000, (void (*)(id *, uint64_t))sub_1C1DD6CEC);
}

uint64_t sub_1C1E16C6C(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C1EAF638();
    swift_bridgeObjectRelease();
  }
  sub_1C1DF9F8C(0, a2);
  sub_1C1E16A04(a4, a2);
  uint64_t result = sub_1C1EAEF68();
  uint64_t v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C1EAF638();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      return v17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      return v17;
    }
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v13 = MEMORY[0x1C874C6F0](i, a1);
        a5(&v16, v13);
      }
    }
    else
    {
      unint64_t v14 = (void **)(a1 + 32);
      do
      {
        uint64_t v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1E16DEC(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C1E16DFC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1E16E0C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1DE38AC(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1E16E70(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C1E16EBC()
{
  unint64_t result = qword_1EBB68230;
  if (!qword_1EBB68230)
  {
    sub_1C1DFD228(255, (unint64_t *)&qword_1EBB68358, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB68230);
  }
  return result;
}

void sub_1C1E16F38()
{
  if (!qword_1EBB65110)
  {
    sub_1C1E17058(255, &qword_1EBB650A0, MEMORY[0x1E4F1AAE0]);
    unint64_t v0 = sub_1C1EAEF28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65110);
    }
  }
}

uint64_t sub_1C1E16FAC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1E17058(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1E16FF0()
{
  if (!qword_1EBB650B0)
  {
    unint64_t v0 = sub_1C1EAE818();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB650B0);
    }
  }
}

void sub_1C1E17058(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1E170C0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1E15EB8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1E17104()
{
  if (!qword_1EBB65928)
  {
    sub_1C1E936B4(255, &qword_1EBB659A0, &qword_1EBB65A00, 0x1E4F2B5D8, MEMORY[0x1E4FBB320]);
    sub_1C1E15F30();
    unint64_t v0 = sub_1C1EAE7D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65928);
    }
  }
}

unint64_t sub_1C1E171A0()
{
  unint64_t result = qword_1EBB65400;
  if (!qword_1EBB65400)
  {
    sub_1C1DEB82C(255, &qword_1EBB65410, &qword_1EBB65468, MEMORY[0x1E4F670F0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65400);
  }
  return result;
}

void sub_1C1E17230()
{
  if (!qword_1EBB653E8)
  {
    sub_1C1EADD48();
    unint64_t v0 = sub_1C1EAE7D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB653E8);
    }
  }
}

void sub_1C1E17298()
{
  if (!qword_1EBB64FC8)
  {
    sub_1C1E16FF0();
    sub_1C1DF9F8C(255, (unint64_t *)&qword_1EBB68388);
    sub_1C1E2CE14(&qword_1EBB650A8, (void (*)(uint64_t))sub_1C1E16FF0);
    sub_1C1E2CE5C();
    unint64_t v0 = sub_1C1EAE768();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64FC8);
    }
  }
}

void sub_1C1E17364()
{
  if (!qword_1EBB64FB8)
  {
    unint64_t v0 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E17058(255, &qword_1EBB650A0, MEMORY[0x1E4F1AAE0]);
    sub_1C1E16FAC(&qword_1EBB65098, &qword_1EBB650A0, v0);
    unint64_t v1 = sub_1C1EAE738();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB64FB8);
    }
  }
}

void sub_1C1E17418()
{
  if (!qword_1EBB658B8)
  {
    sub_1C1DEB760(255, (unint64_t *)&unk_1EBB659B0, (uint64_t (*)(uint64_t))sub_1C1E9387C, MEMORY[0x1E4FBB320]);
    sub_1C1E15F30();
    sub_1C1E93928();
    unint64_t v0 = sub_1C1EAE718();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB658B8);
    }
  }
}

void sub_1C1E174D4()
{
  if (!qword_1EBB658A0)
  {
    sub_1C1E936B4(255, &qword_1EBB659A0, &qword_1EBB65A00, 0x1E4F2B5D8, MEMORY[0x1E4FBB320]);
    sub_1C1E937F8();
    unint64_t v0 = sub_1C1EAE718();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB658A0);
    }
  }
}

void sub_1C1E17580()
{
  if (!qword_1EBB65890)
  {
    sub_1C1E936B4(255, &qword_1EBB659A0, &qword_1EBB65A00, 0x1E4F2B5D8, MEMORY[0x1E4FBB320]);
    sub_1C1E15F30();
    sub_1C1E937F8();
    unint64_t v0 = sub_1C1EAE718();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65890);
    }
  }
}

void sub_1C1E17638()
{
  if (!qword_1EBB653D8)
  {
    sub_1C1E17B00();
    sub_1C1E17B94();
    sub_1C1E2CE14(&qword_1EBB653A8, (void (*)(uint64_t))sub_1C1E17B00);
    sub_1C1E2CE14(&qword_1EBB64DA0, (void (*)(uint64_t))sub_1C1E17B94);
    unint64_t v0 = sub_1C1EAE6C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB653D8);
    }
  }
}

void sub_1C1E17724()
{
  if (!qword_1EBB65880)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E15EB8(255, &qword_1EBB65948, MEMORY[0x1E4F1AAE0]);
    sub_1C1E17104();
    sub_1C1E170C0((unint64_t *)&unk_1EBB65938, &qword_1EBB65948, v0);
    sub_1C1DEB1C4(&qword_1EBB65920, (void (*)(uint64_t))sub_1C1E17104);
    unint64_t v1 = sub_1C1EAE6C8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB65880);
    }
  }
}

void sub_1C1E17824()
{
  if (!qword_1EBB65868)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E15EB8(255, &qword_1EBB65948, MEMORY[0x1E4F1AAE0]);
    sub_1C1E17418();
    sub_1C1E170C0((unint64_t *)&unk_1EBB65938, &qword_1EBB65948, v0);
    sub_1C1DEB1C4(&qword_1EBB658B0, (void (*)(uint64_t))sub_1C1E17418);
    unint64_t v1 = sub_1C1EAE6C8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB65868);
    }
  }
}

void sub_1C1E17930()
{
  if (!qword_1EBB65818)
  {
    sub_1C1E17824();
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E15EB8(255, &qword_1EBB65948, MEMORY[0x1E4F1AAE0]);
    sub_1C1DEB1C4(&qword_1EBB65860, (void (*)(uint64_t))sub_1C1E17824);
    sub_1C1E170C0((unint64_t *)&unk_1EBB65938, &qword_1EBB65948, v0);
    unint64_t v1 = sub_1C1EAE678();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB65818);
    }
  }
}

void sub_1C1E17A3C()
{
  if (!qword_1EBB65808)
  {
    sub_1C1E19AC0();
    sub_1C1E18074();
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65808);
    }
  }
}

unint64_t sub_1C1E17AA8()
{
  unint64_t result = qword_1EBB65800;
  if (!qword_1EBB65800)
  {
    sub_1C1E17A3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65800);
  }
  return result;
}

void sub_1C1E17B00()
{
  if (!qword_1EBB653B0)
  {
    sub_1C1E2CEC4();
    sub_1C1E2CE14(&qword_1EBB65418, (void (*)(uint64_t))sub_1C1E2CEC4);
    unint64_t v0 = sub_1C1EAE638();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB653B0);
    }
  }
}

void sub_1C1E17B94()
{
  if (!qword_1EBB64DA8)
  {
    sub_1C1E17298();
    sub_1C1E2CE14(&qword_1EBB64FC0, (void (*)(uint64_t))sub_1C1E17298);
    unint64_t v0 = sub_1C1EAE628();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64DA8);
    }
  }
}

uint64_t type metadata accessor for GenerationOperationToGeneratorPipelineAdaptor()
{
  uint64_t result = qword_1EBB656A8;
  if (!qword_1EBB656A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1E17C74()
{
  return sub_1C1DD7470();
}

uint64_t sub_1C1E17C98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_domain;
  uint64_t v4 = sub_1C1EAD9C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

void sub_1C1E17D10()
{
  if (!qword_1EBB64D20)
  {
    sub_1C1E16B8C();
    sub_1C1DE1E18((unint64_t *)&qword_1EBB67F58, (void (*)(uint64_t))sub_1C1E16B8C);
    unint64_t v0 = type metadata accessor for FeedPopulationListenerSchedulerConfiguration();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64D20);
    }
  }
}

uint64_t type metadata accessor for ProfileDashboardsFeedPopulationListener()
{
  return self;
}

void sub_1C1E17DC8()
{
}

uint64_t sub_1C1E17DEC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(type metadata accessor for FeedPopulationListenerSchedulerConfiguration() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v0 + v5);
  uint64_t v7 = *(void *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C1DD6A4C(v0 + v4, v6, v7, v1, v2);
}

void *SharableModelGeneratorPipelineManager.__allocating_init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v16 = a4 & 1;
  swift_allocObject();
  return SharableModelGeneratorPipelineManager.init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(a1, a2, a3, v16, a5, a6, a7, a8, a9);
}

uint64_t sub_1C1E17F4C()
{
  return sub_1C1DD7AD0((uint64_t (*)(unint64_t, unint64_t, uint64_t))sub_1C1E17F64);
}

void sub_1C1E17F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t type metadata accessor for SummaryTabRelevanceEngineCoordinator()
{
  uint64_t result = qword_1EBB648E0;
  if (!qword_1EBB648E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1C1E17FD0()
{
  return sub_1C1DD8260(&OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___primaryFeatures, (uint64_t (*)(uint64_t, uint64_t))sub_1C1DDBC2C);
}

id SummaryTabRelevanceEngineCoordinator.__allocating_init(dataSources:engineName:modelURL:pretrainedModelURL:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  return SummaryTabRelevanceEngineCoordinator.init(dataSources:engineName:modelURL:pretrainedModelURL:)(a1, a2, a3, a4, a5);
}

id sub_1C1E18054()
{
  return sub_1C1DD8260(&OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceEngine, (uint64_t (*)(uint64_t, uint64_t))sub_1C1DEF8C8);
}

unint64_t sub_1C1E18074()
{
  unint64_t result = qword_1EBB65670;
  if (!qword_1EBB65670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65670);
  }
  return result;
}

uint64_t sub_1C1E18118(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1E18160(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C1E18118(&qword_1EBB67E18, a2, (void (*)(uint64_t))type metadata accessor for BundleFeedItemGenerationPluginInfo);
  *(void *)(a1 + 8) = result;
  return result;
}

void *FeedItemGeneratorPipelineManager.__allocating_init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v16 = a4 & 1;
  swift_allocObject();
  return FeedItemGeneratorPipelineManager.init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(a1, a2, a3, v16, a5, a6, a7, a8, a9);
}

id sub_1C1E182A4()
{
  return sub_1C1DD9FAC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1C1E182B0(uint64_t a1)
{
  sub_1C1DDA678(a1, *(NSObject **)(v1 + 16));
}

void sub_1C1E182B8(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1C1E182C0(uint64_t a1, unint64_t a2)
{
  sub_1C1DDA4B8(a1);
  unint64_t v4 = sub_1C1DE976C(a1);
  sub_1C1DE9440(a2);
  sub_1C1DDAE1C((uint64_t)v4);
  swift_bridgeObjectRelease();
  sub_1C1DDD22C();
  return sub_1C1DDA378(a1);
}

uint64_t sub_1C1E18330(unsigned char *a1)
{
  return sub_1C1DDE3A8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1C1E1833C(void *a1, void *a2)
{
  return sub_1C1E18344(a1, a2, v2);
}

uint64_t sub_1C1E18344(void *a1, void *a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  if (objc_msgSend(a1, sel_type) != (id)2) {
    return 0;
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = v4;
  uint64_t v6 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AC28];
  sub_1C1E17058(0, &qword_1EA2C1598, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  id v7 = a2;
  sub_1C1EAE8F8();
  sub_1C1E16FAC(&qword_1EA2C15A0, &qword_1EA2C1598, v6);
  uint64_t v8 = sub_1C1EAEA38();
  swift_release();
  return v8;
}

uint64_t sub_1C1E1848C(uint64_t *a1)
{
  return sub_1C1E18494(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1E18494(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = swift_bridgeObjectRetain();
  sub_1C1DD64A8(v4);
  uint64_t v6 = v5;
  if ((v5 & 0xC000000000000001) != 0)
  {
    if (v5 < 0) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C1EAF3B8();
    uint64_t v9 = sub_1C1E31F44(v7, v8);
    swift_bridgeObjectRelease();
    uint64_t v6 = v9;
  }
  uint64_t v10 = sub_1C1DD58D4(a2, v6);
  sub_1C1DD8D30(v10, a1);
  return swift_release();
}

uint64_t sub_1C1E18548()
{
  return sub_1C1DDDE78();
}

uint64_t sub_1C1E18550(void **a1)
{
  return sub_1C1DDF6B4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C1E1855C()
{
  sub_1C1DD4C84();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for SummaryTabFeedPopulationManager()
{
  uint64_t result = qword_1EBB660A8;
  if (!qword_1EBB660A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double static SummaryTabFeedPopulationManager.highlightsSectionTimeout.getter()
{
  return 10.0;
}

uint64_t *SummaryTabFeedPopulationManager.__allocating_init(healthExperienceStore:healthStore:relevanceEngineCoordinator:)(uint64_t a1, void *a2, uint64_t a3)
{
  return SummaryTabFeedPopulationManager.init(healthExperienceStore:healthStore:relevanceEngineCoordinator:)(a1, a2, a3);
}

uint64_t type metadata accessor for FeedItemREElementDataSource()
{
  return self;
}

uint64_t type metadata accessor for AppSessionAnalyticsManager()
{
  return self;
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.updateCurrentEventWithHighlightsFeedPresentationAnalytics(in:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

void sub_1C1E18754(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1C1EAE568();
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((unsigned char *)v2 + 80) == 1)
  {
    uint64_t v105 = v4;
    uint64_t v114 = v7;
    id v115 = (id)v6;
    uint64_t v10 = v2[7];
    sub_1C1EAD5D8();
    sub_1C1E69A98(a1, (uint64_t)&v129);
    id v11 = v130;
    uint64_t v12 = v131;
    uint64_t v13 = v132;
    unint64_t v14 = v133;
    uint64_t v15 = v134;
    uint64_t v17 = v135;
    char v16 = v136;
    if (v137)
    {
      sub_1C1E6CEA0(v129, v130, v131, v132, v133, v134, v135, v136, 1);
    }
    else
    {
      uint64_t v101 = v2;
      uint64_t v104 = v10;
      id v18 = v9;
      uint64_t v19 = v129;
      sub_1C1EAE548();
      unint64_t v20 = v14;
      id v111 = v17;
      id v112 = v16;
      id v116 = v19;
      id v21 = v19;
      unint64_t v22 = v18;
      id v117 = v17;
      id v23 = v21;
      id v24 = v11;
      id v120 = v11;
      id v25 = v24;
      id v26 = v12;
      uint64_t v102 = v12;
      id v27 = v26;
      id v28 = v13;
      id v113 = v16;
      uint64_t v29 = v13;
      id v30 = v28;
      uint64_t v119 = v20;
      id v31 = v20;
      uint64_t v118 = v15;
      id v32 = v15;
      uint64_t v108 = v111;
      id v107 = v112;
      id v33 = v23;
      id v106 = v25;
      id v112 = v27;
      id v111 = (ValueMetadata *)v30;
      id v110 = v31;
      id v109 = v32;
      uint64_t v99 = v22;
      uint64_t v34 = sub_1C1EAE558();
      os_log_type_t v35 = sub_1C1EAF0D8();
      int v36 = v35;
      id v100 = v34;
      BOOL v37 = os_log_type_enabled(v34, v35);
      v103 = v29;
      if (v37)
      {
        uint64_t v38 = swift_slowAlloc();
        id v98 = v33;
        uint64_t v39 = v38;
        uint64_t v97 = swift_slowAlloc();
        uint64_t v128 = v97;
        *(_DWORD *)uint64_t v39 = 136446466;
        HIDWORD(v96) = v36;
        *(void *)&long long v121 = v105;
        swift_getMetatypeMetadata();
        id v40 = v106;
        uint64_t v41 = sub_1C1EAED68();
        *(void *)&long long v121 = sub_1C1DF8D44(v41, v42, &v128);
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2080;
        uint64_t v105 = v39 + 14;
        uint64_t v43 = v116;
        *(void *)&long long v121 = v116;
        *((void *)&v121 + 1) = v40;
        id v44 = v112;
        uint64_t v45 = v111;
        id v122 = v112;
        id v123 = v111;
        id v46 = v110;
        id v47 = v109;
        unint64_t v124 = (unint64_t)v110;
        id v125 = v109;
        uint64_t v48 = v29;
        uint64_t v49 = v117;
        uint64_t v50 = v107;
        uint64_t v126 = v117;
        id v127 = v107;
        id v51 = v98;
        id v52 = v40;
        id v53 = v44;
        uint64_t v54 = v45;
        id v55 = v46;
        id v56 = v47;
        uint64_t v57 = v108;
        id v58 = v50;
        uint64_t v59 = sub_1C1EAED68();
        *(void *)&long long v121 = sub_1C1DF8D44(v59, v60, &v128);
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        uint64_t v61 = v120;
        uint64_t v62 = v102;
        uint64_t v63 = v119;
        uint64_t v64 = v118;
        uint64_t v65 = v113;
        sub_1C1E6CEA0(v43, v120, v102, v48, v119, v118, v49, v113, 0);
        sub_1C1E6CEA0(v43, v61, v62, v48, v63, v64, v49, v65, 0);
        uint64_t v66 = v100;
        _os_log_impl(&dword_1C1DD2000, v100, BYTE4(v96), "[%{public}s]: Updating current event with: %s", (uint8_t *)v39, 0x16u);
        uint64_t v67 = v97;
        swift_arrayDestroy();
        MEMORY[0x1C874D2E0](v67, -1, -1);
        uint64_t v68 = v39;
        id v33 = v98;
        MEMORY[0x1C874D2E0](v68, -1, -1);
      }
      else
      {
        uint64_t v69 = v116;
        uint64_t v70 = v120;
        uint64_t v62 = v102;
        uint64_t v71 = v29;
        uint64_t v72 = v119;
        uint64_t v73 = v29;
        uint64_t v74 = v118;
        uint64_t v75 = v117;
        uint64_t v76 = v113;
        sub_1C1E6CEA0(v116, v120, v102, v71, v119, v118, v117, v113, 0);
        sub_1C1E6CEA0(v69, v70, v62, v73, v72, v74, v75, v76, 0);
      }
      (*(void (**)(char *, id))(v114 + 8))(v99, v115);
      uint64_t v77 = v108;
      uint64_t v78 = v107;
      uint64_t v79 = v101;
      unint64_t v80 = v101 + 8;
      swift_beginAccess();
      uint64_t v81 = (void *)v79[8];
      id v82 = v33;
      id v115 = v106;
      id v83 = v112;
      uint64_t v84 = v111;
      id v85 = v110;
      id v86 = v109;
      uint64_t v87 = v77;
      id v88 = v78;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v79[8] = v81;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v81 = sub_1C1DD4B28(0, v81[2] + 1, 1, v81);
        void *v80 = v81;
      }
      unint64_t v91 = v81[2];
      unint64_t v90 = v81[3];
      if (v91 >= v90 >> 1)
      {
        uint64_t v81 = sub_1C1DD4B28((void *)(v90 > 1), v91 + 1, 1, v81);
        void *v80 = v81;
      }
      id v123 = &type metadata for AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics;
      unint64_t v124 = sub_1C1E6DDD0();
      uint64_t v92 = (void *)swift_allocObject();
      *(void *)&long long v121 = v92;
      uint64_t v93 = v116;
      id v94 = v115;
      v92[2] = v116;
      v92[3] = v94;
      v92[4] = v83;
      v92[5] = v84;
      v92[6] = v85;
      v92[7] = v86;
      uint64_t v95 = v117;
      v92[8] = v117;
      v92[9] = v88;
      v81[2] = v91 + 1;
      sub_1C1DFE46C(&v121, (uint64_t)&v81[5 * v91 + 4]);
      swift_endAccess();
      sub_1C1E6CEA0(v93, v120, v62, v103, v119, v118, v95, v113, 0);
      sub_1C1EAD5E8();
    }
  }
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.updateCurrentEventWithDemographicAnalytics()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

void sub_1C1E18F28()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C1EAE568();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((unsigned char *)v0 + 80) == 1)
  {
    uint64_t v7 = v0[7];
    sub_1C1EAD5D8();
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, objc_msgSend(self, sel_hasPairedWatch));
    sub_1C1EAE548();
    id v9 = v8;
    uint64_t v10 = sub_1C1EAE558();
    os_log_type_t v11 = sub_1C1EAF0D8();
    int v12 = v11;
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v30 = v7;
      uint64_t v14 = v13;
      uint64_t v29 = swift_slowAlloc();
      v34[0] = v29;
      *(_DWORD *)uint64_t v14 = 136446466;
      *(void *)&long long v31 = v2;
      swift_getMetatypeMetadata();
      int v28 = v12;
      uint64_t v15 = sub_1C1EAED68();
      *(void *)&long long v31 = sub_1C1DF8D44(v15, v16, v34);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      *(void *)&long long v31 = v9;
      id v17 = v9;
      uint64_t v18 = sub_1C1EAED68();
      *(void *)&long long v31 = sub_1C1DF8D44(v18, v19, v34);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v10, (os_log_type_t)v28, "[%{public}s]: Updating current event with: %s", (uint8_t *)v14, 0x16u);
      uint64_t v20 = v29;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v20, -1, -1);
      MEMORY[0x1C874D2E0](v14, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    id v21 = v1 + 8;
    swift_beginAccess();
    unint64_t v22 = (void *)v1[8];
    id v23 = v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v1[8] = (uint64_t)v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v22 = sub_1C1DD4B28(0, v22[2] + 1, 1, v22);
      void *v21 = v22;
    }
    unint64_t v26 = v22[2];
    unint64_t v25 = v22[3];
    if (v26 >= v25 >> 1)
    {
      unint64_t v22 = sub_1C1DD4B28((void *)(v25 > 1), v26 + 1, 1, v22);
      void *v21 = v22;
    }
    id v32 = &type metadata for AppSessionAnalyticsEvent.DemographicAnalytics;
    unint64_t v33 = sub_1C1E6DE94();
    *(void *)&long long v31 = v23;
    v22[2] = v26 + 1;
    sub_1C1DFE46C(&v31, (uint64_t)&v22[5 * v26 + 4]);
    swift_endAccess();
    sub_1C1EAD5E8();
  }
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.updateCurrentEventWithImproveHealthActivityAnalytics()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t type metadata accessor for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider()
{
  uint64_t result = qword_1EBB667C0;
  if (!qword_1EBB667C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BaseFeedPopulationManager.Request(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BaseFeedPopulationManager.Request(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for PipelineProviderWrappers()
{
  return &type metadata for PipelineProviderWrappers;
}

uint64_t dispatch thunk of GeneratorPipelineManager.healthStore.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t sub_1C1E19418()
{
  swift_beginAccess();
  return *(void *)(v0 + 48);
}

id sub_1C1E1944C()
{
  uint64_t v0 = (void *)sub_1C1E19418();
  return v0;
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.sourceProfilePublisher.getter()
{
  return swift_retain();
}

uint64_t dispatch thunk of GeneratorPipelineManager.notificationManager.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t sub_1C1E194AC()
{
  swift_beginAccess();
  return *(void *)(v0 + 144);
}

uint64_t sub_1C1E194E0()
{
  sub_1C1E194AC();
  return swift_retain();
}

unint64_t sub_1C1E19508()
{
  unint64_t result = qword_1EBB647E0[0];
  if (!qword_1EBB647E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBB647E0);
  }
  return result;
}

uint64_t dispatch thunk of FeedPopulationListener.startListening()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_1C1E19570()
{
  if (!qword_1EBB65C48)
  {
    type metadata accessor for BasicPluginInfo();
    sub_1C1E19764();
    unint64_t v0 = type metadata accessor for PluginBundleProvider();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65C48);
    }
  }
}

uint64_t type metadata accessor for PluginBundleProvider()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of PluginBundleProvider.availableLaunchGenerationPlugins.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of PluginBundleProvider.availablePluginsMap.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t PluginBundleProvider.init(sharedDefaults:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t dispatch thunk of PluginBundleProvider.loadAllPlugins()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t sub_1C1E19660(void **a1)
{
  return sub_1C1DE1F24(*a1, (uint64_t (*)(void))sub_1C1E0D080, &qword_1EBB65040, sub_1C1E0D080);
}

uint64_t sub_1C1E196AC(void **a1)
{
  return sub_1C1DE1F24(*a1, (uint64_t (*)(void))sub_1C1DF91CC, &qword_1EBB65028, sub_1C1DF91CC);
}

uint64_t sub_1C1E196F8(uint64_t a1)
{
  return sub_1C1DF5198(a1, (uint64_t (*)(void))sub_1C1DFC5AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C1E19724);
}

uint64_t sub_1C1E19724@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  return sub_1C1DF5FCC(a1, a2, (uint64_t (*)(void))sub_1C1DF5A80, (uint64_t (*)(void))sub_1C1DFC5AC, (void (*)(char *, char *))sub_1C1DF581C, a3);
}

unint64_t sub_1C1E19764()
{
  unint64_t result = qword_1EBB65B70;
  if (!qword_1EBB65B70)
  {
    type metadata accessor for BasicPluginInfo();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65B70);
  }
  return result;
}

uint64_t sub_1C1E197B8(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EBB651C0);
}

uint64_t sub_1C1E197C8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for HealthExperienceStoreCoreSpotlightOperation()
{
  uint64_t result = qword_1EBB65B58;
  if (!qword_1EBB65B58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id HealthExperienceStoreCoreSpotlightOperation.init(store:)(uint64_t a1)
{
  sub_1C1DFE408(a1, (uint64_t)v1 + qword_1EBB651C0);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for HealthExperienceStoreCoreSpotlightOperation();
  id v3 = objc_msgSendSuper2(&v5, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v3;
}

uint64_t HealthExperienceStoreCoreSpotlightOperation.store.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1DFE408(v1 + qword_1EBB651C0, a1);
}

void sub_1C1E198D8(void *a1)
{
  id v1 = a1;
  sub_1C1DDF3A4();
}

uint64_t method lookup function for HealthExperienceStoreCoreSpotlightDelegate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthExperienceStoreCoreSpotlightDelegate);
}

void sub_1C1E19938()
{
  sub_1C1E19B70();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for HealthExperienceStoreCoreSpotlightDelegate()
{
  uint64_t result = qword_1EBB647B0;
  if (!qword_1EBB647B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1E19A18(uint64_t a1)
{
  return sub_1C1DD5AAC(a1, MEMORY[0x1E4F66F18], &qword_1EBB64798, &qword_1EBB647A0);
}

uint64_t sub_1C1E19A3C()
{
  uint64_t result = sub_1C1EAED38();
  qword_1EBB6ABF0 = result;
  *(void *)algn_1EBB6ABF8 = v1;
  return result;
}

uint64_t sub_1C1E19A78(uint64_t a1)
{
  return sub_1C1DD5AAC(a1, MEMORY[0x1E4F66F10], &qword_1EBB64780, &qword_1EBB64788);
}

uint64_t sub_1C1E19A9C(uint64_t a1)
{
  return sub_1C1DD99E4(a1);
}

unint64_t sub_1C1E19AC0()
{
  unint64_t result = qword_1EBB66218;
  if (!qword_1EBB66218)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB66218);
  }
  return result;
}

unint64_t sub_1C1E19B1C()
{
  unint64_t result = qword_1EBB647C0;
  if (!qword_1EBB647C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB647C0);
  }
  return result;
}

void sub_1C1E19B70()
{
  if (!qword_1EBB651B8)
  {
    sub_1C1DE7D6C(255, &qword_1EBB67F28);
    unint64_t v0 = sub_1C1EAD6F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB651B8);
    }
  }
}

uint64_t sub_1C1E19BD8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C1DFC4E4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1E19C58(uint64_t a1)
{
  sub_1C1DF2B44(0, &qword_1EBB68158, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1E19CE4(uint64_t a1, uint64_t a2)
{
  sub_1C1DF2B44(0, &qword_1EBB68158, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1C1E19E44()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DateRangeRelevanceProviderManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void type metadata accessor for _HKDataTypeCode(uint64_t a1)
{
}

BOOL sub_1C1E19EA0(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C1E19EB8()
{
  return sub_1C1EAF838();
}

uint64_t sub_1C1E19EE8()
{
  return sub_1C1EAF858();
}

uint64_t sub_1C1E19F30()
{
  return sub_1C1EAF858();
}

void *sub_1C1E19F74@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1C1E19F84(void *a1@<X8>)
{
  *a1 = *v1;
}

double sub_1C1E19F90()
{
  uint64_t v23 = sub_1C1EAD318();
  uint64_t v0 = *(void *)(v23 - 8);
  uint64_t v1 = MEMORY[0x1F4188790](v23);
  id v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  objc_super v5 = (char *)&v22 - v4;
  uint64_t v6 = sub_1C1EAD0E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EADDA8();
  char v10 = sub_1C1EAD0D8();
  os_log_type_t v11 = *(void (**)(char *, uint64_t))(v7 + 8);
  v11(v9, v6);
  double v12 = 1.0;
  if ((v10 & 1) == 0)
  {
    sub_1C1EADDA8();
    sub_1C1EAD0C8();
    v11(v9, v6);
    char v13 = sub_1C1EAD2D8();
    unint64_t v22 = *(void (**)(char *, uint64_t))(v0 + 8);
    v22(v5, v23);
    if (v13)
    {
      sub_1C1EADD98();
      sub_1C1EADDA8();
      sub_1C1EAD0C8();
      v11(v9, v6);
      sub_1C1EAD288();
      sub_1C1EAD288();
      sub_1C1EAD288();
      REPercentThroughRange();
      double v12 = v14;
      unint64_t v16 = v22;
      uint64_t v15 = v23;
      v22(v3, v23);
      v16(v5, v15);
    }
    else
    {
      sub_1C1EADDA8();
      sub_1C1EAD098();
      v11(v9, v6);
      sub_1C1EADD88();
      sub_1C1EAD288();
      sub_1C1EAD288();
      sub_1C1EAD288();
      REPercentThroughRange();
      double v18 = v17;
      uint64_t v20 = v22;
      uint64_t v19 = v23;
      v22(v3, v23);
      v20(v5, v19);
      return 1.0 - v18;
    }
  }
  return v12;
}

uint64_t sub_1C1E1A2C8(void *a1, void *a2)
{
  sub_1C1DF3298();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C1EAD318();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2
    && (id v11 = objc_msgSend(a2, sel_attributeForKey_, *MEMORY[0x1E4F94A30])) != 0)
  {
    v17[1] = v11;
    sub_1C1E1A598();
    int v12 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, v12 ^ 1u, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      goto LABEL_7;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1C1EAD308();
  sub_1C1DF323C((uint64_t)v6);
LABEL_7:
  type metadata accessor for DateRangeRelevanceProvider();
  if (swift_dynamicCastClass())
  {
    id v13 = a1;
    double v14 = sub_1C1E19F90();
    id v15 = objc_msgSend(self, sel_featureValueWithDouble_, v14);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (uint64_t)v15;
  }
  else
  {
    uint64_t result = sub_1C1EAF628();
    __break(1u);
  }
  return result;
}

unint64_t sub_1C1E1A598()
{
  unint64_t result = qword_1EA2C1180;
  if (!qword_1EA2C1180)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C1180);
  }
  return result;
}

void type metadata accessor for HKProfileType(uint64_t a1)
{
}

void type metadata accessor for HKDisplayCategoryIdentifier(uint64_t a1)
{
}

uint64_t sub_1C1E1A640()
{
  return sub_1C1E1A6D0((unint64_t *)&unk_1EBB659D8, type metadata accessor for HKProfileType);
}

uint64_t sub_1C1E1A688()
{
  return sub_1C1E1A6D0((unint64_t *)&unk_1EBB67020, type metadata accessor for HKDisplayCategoryIdentifier);
}

uint64_t sub_1C1E1A6D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AnyPipeline.domain.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_1C1EAD9C8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t AnyPipeline.wrappedTypeName.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AnyPipeline.publisher.getter()
{
  return (*v0)();
}

void sub_1C1E1A804()
{
  if (!qword_1EBB66FA8)
  {
    unint64_t v0 = sub_1C1EAEF28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB66FA8);
    }
  }
}

uint64_t type metadata accessor for AnyPipeline()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C1E1A874(void *a1)
{
  return sub_1C1DDD644(a1, (uint64_t (*)(uint64_t, uint64_t))Generator.eraseToAnyGenerator());
}

uint64_t AnyPipelineProvider.makeGeneratorPipelines(for:)()
{
  return (*v0)();
}

uint64_t type metadata accessor for AnyPipelineProvider()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C1E1A8D4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_1C1E1A8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1C1E1A8E4()
{
  uint64_t result = sub_1C1EAD9C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1C1E1A988(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = v5;
    a1[1] = v8;
    uint64_t v9 = *(int *)(a3 + 36);
    char v10 = (char *)a1 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1C1EAD9C8();
    id v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(a3 + 40);
    id v15 = (void *)((char *)a1 + v14);
    unint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *id v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *sub_1C1E1AA98(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1EAD9C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (void *)((char *)a1 + v11);
  id v13 = (void *)((char *)a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1C1E1AB60(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1EAD9C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_1C1E1ABF8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1EAD9C8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

void *sub_1C1E1ACA8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1EAD9C8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t dispatch thunk of PipelineProviding.makeGeneratorPipelines(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1C1E1AD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

void *sub_1C1E1AD6C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1C1E1ADA8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for PipelineProviderWrappers(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void *assignWithCopy for PipelineProviderWrappers(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  uint64_t v5 = a2[8];
  a1[7] = a2[7];
  a1[8] = v5;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 9, a2 + 9);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for PipelineProviderWrappers(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 72);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t storeEnumTagSinglePayload for PipelineProviderWrappers(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t NSManagedObjectContext.getEligibleFeedItems(for:sourceProfiles:)(uint64_t a1, uint64_t a2)
{
  sub_1C1EAE348();
  uint64_t v5 = (void *)MEMORY[0x1C874B480]();
  id v6 = objc_msgSend(v5, sel_relationshipKeyPathsForPrefetching);
  if (v6)
  {
    uint64_t v8 = v6;
    int v9 = (void *)sub_1C1EAEE98();
  }
  else
  {
    int v9 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = (void *)v9[2];
  int64_t v11 = (int64_t)v10 + 4;
  if (__OFADD__(v10, 4))
  {
    __break(1u);
LABEL_21:
    uint64_t v10 = sub_1C1E1C238((void *)(v7 > 1), v11, 1, v10);
    unint64_t v7 = v10[3];
    unint64_t v13 = v7 >> 1;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && (unint64_t v7 = v9[3], v13 = v7 >> 1, (uint64_t)(v7 >> 1) >= v11))
  {
    uint64_t v10 = v9;
  }
  else
  {
    if ((uint64_t)v10 <= v11) {
      int64_t v14 = (int64_t)v10 + 4;
    }
    else {
      int64_t v14 = (int64_t)v10;
    }
    uint64_t v10 = sub_1C1E1C238(isUniquelyReferenced_nonNull_native, v14, 1, v9);
    unint64_t v7 = v10[3];
    unint64_t v13 = v7 >> 1;
  }
  unint64_t v2 = v10[2];
  int64_t v11 = v2 + 1;
  if (v13 <= v2) {
    goto LABEL_21;
  }
LABEL_13:
  void v10[2] = v11;
  id v15 = &v10[2 * v2];
  v15[4] = 0x7364726F7779656BLL;
  v15[5] = 0xE800000000000000;
  int64_t v16 = v2 + 2;
  if ((uint64_t)v13 < v16) {
    uint64_t v10 = sub_1C1E1C238((void *)(v7 > 1), v16, 1, v10);
  }
  void v10[2] = v16;
  uint64_t v17 = &v10[2 * v11];
  void v17[4] = 0x5465727574616566;
  v17[5] = 0xEB00000000736761;
  unint64_t v19 = v10[2];
  unint64_t v18 = v10[3];
  int64_t v20 = v18 >> 1;
  unint64_t v21 = v19 + 1;
  if (v18 >> 1 <= v19)
  {
    uint64_t v10 = sub_1C1E1C238((void *)(v18 > 1), v19 + 1, 1, v10);
    unint64_t v18 = v10[3];
    int64_t v20 = v18 >> 1;
  }
  void v10[2] = v21;
  unint64_t v22 = &v10[2 * v19];
  v22[4] = 0x6570795461746164;
  void v22[5] = 0xE900000000000073;
  int64_t v23 = v19 + 2;
  if (v20 < v23) {
    uint64_t v10 = sub_1C1E1C238((void *)(v18 > 1), v23, 1, v10);
  }
  void v10[2] = v23;
  id v24 = &v10[2 * v21];
  v24[4] = 0x73656C69666F7270;
  v24[5] = 0xE800000000000000;
  swift_bridgeObjectRelease();
  unint64_t v25 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setRelationshipKeyPathsForPrefetching_, v25);

  id v26 = _s14HealthPlatform8FeedItemC0aB4CoreE020predicateForEligibleC5Items3for14sourceProfilesSo11NSPredicateCAA0C0C4KindO_SayAA13SourceProfileOGtFZ_0(a1, a2);
  objc_msgSend(v5, sel_setPredicate_, v26);

  id v27 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  int v28 = (void *)sub_1C1EAED28();
  id v29 = objc_msgSend(v27, sel_initWithKey_ascending_, v28, 1);

  sub_1C1DFD1DC(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1C1EB04A0;
  *(void *)(v30 + 32) = v29;
  sub_1C1EAEEB8();
  sub_1C1DF9F8C(0, &qword_1EBB68258);
  id v31 = v29;
  id v32 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setSortDescriptors_, v32);

  uint64_t v33 = sub_1C1EAF248();
  return v33;
}

uint64_t NSManagedObjectContext.doesFeedEligibleForDisplayExist(kind:associatedProfileIdentifier:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1C1DF31D8(0, &qword_1EBB67DF8, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  uint64_t v102 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  int64_t v11 = (char *)&v97 - v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v97 - v12;
  uint64_t v14 = sub_1C1EAE568();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v103 = v14;
  uint64_t v104 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v101 = (char *)&v97 - v20;
  MEMORY[0x1F4188790](v19);
  unint64_t v22 = (char *)&v97 - v21;
  sub_1C1EAE188();
  int64_t v23 = (void *)sub_1C1EAE178();
  id v24 = (void *)sub_1C1EADE58();

  if (!v24)
  {
    sub_1C1EAE508();
    id v38 = a2;
    id v39 = v3;
    id v40 = v38;
    id v41 = v39;
    unint64_t v42 = sub_1C1EAE558();
    os_log_type_t v43 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v101 = (char *)swift_slowAlloc();
      id v106 = v101;
      *(_DWORD *)uint64_t v44 = 136446722;
      uint64_t v45 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      uint64_t v105 = sub_1C1DF8D44(v45, v46, (uint64_t *)&v106);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2082;
      if (a2)
      {
        id v47 = objc_msgSend(v40, sel_identifier);
        sub_1C1EAD348();

        uint64_t v48 = sub_1C1EAD368();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v8, 0, 1, v48);
      }
      else
      {
        uint64_t v64 = sub_1C1EAD368();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v8, 1, 1, v64);
      }
      uint64_t v65 = sub_1C1EAED68();
      uint64_t v105 = sub_1C1DF8D44(v65, v66, (uint64_t *)&v106);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 22) = 2082;
      id v67 = v41;
      id v68 = objc_msgSend(v67, sel_description);
      uint64_t v69 = sub_1C1EAED38();
      unint64_t v71 = v70;

      uint64_t v105 = sub_1C1DF8D44(v69, v71, (uint64_t *)&v106);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v42, v43, "No feed of kind %{public}s for profile %{public}s detected; eligible for display FALSE; %{public}s",
        (uint8_t *)v44,
        0x20u);
      uint64_t v72 = v101;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v72, -1, -1);
      MEMORY[0x1C874D2E0](v44, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v104 + 8))(v18, v103);
    return 0;
  }
  if (Feed.isTooOldForDisplay.getter())
  {
    sub_1C1EAE508();
    id v25 = a2;
    id v26 = v24;
    id v27 = v3;
    id v28 = v25;
    id v29 = v26;
    id v30 = v27;
    id v31 = sub_1C1EAE558();
    int v32 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v31, (os_log_type_t)v32))
    {
      LODWORD(v100) = v32;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v99 = (void *)swift_slowAlloc();
      uint64_t v101 = (char *)swift_slowAlloc();
      id v106 = v101;
      *(_DWORD *)uint64_t v33 = 136446978;
      uint64_t v34 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      uint64_t v105 = sub_1C1DF8D44(v34, v35, (uint64_t *)&v106);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2082;
      os_log_t v98 = v31;
      if (a2)
      {
        id v36 = objc_msgSend(v28, sel_identifier);
        sub_1C1EAD348();

        uint64_t v37 = sub_1C1EAD368();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v13, 0, 1, v37);
      }
      else
      {
        uint64_t v73 = sub_1C1EAD368();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v13, 1, 1, v73);
      }
      uint64_t v74 = sub_1C1EAED68();
      uint64_t v105 = sub_1C1DF8D44(v74, v75, (uint64_t *)&v106);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 22) = 2114;
      id v76 = objc_msgSend(v29, sel_dateUpdated);
      uint64_t v105 = (uint64_t)v76;
      sub_1C1EAF2C8();
      uint64_t v77 = v99;
      *uint64_t v99 = v76;

      *(_WORD *)(v33 + 32) = 2082;
      id v78 = v30;
      id v79 = objc_msgSend(v78, sel_description);
      uint64_t v80 = sub_1C1EAED38();
      unint64_t v82 = v81;

      uint64_t v105 = sub_1C1DF8D44(v80, v82, (uint64_t *)&v106);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      os_log_t v83 = v98;
      _os_log_impl(&dword_1C1DD2000, v98, (os_log_type_t)v100, "Found feed of kind %{public}s for profile %{public}s too old for display (last updated %{public}@); eligible for"
        " display FALSE; %{public}s",
        (uint8_t *)v33,
        0x2Au);
      sub_1C1E1699C();
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v77, -1, -1);
      uint64_t v84 = v101;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v84, -1, -1);
      MEMORY[0x1C874D2E0](v33, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v104 + 8))(v22, v103);
    return 0;
  }
  uint64_t v49 = v101;
  sub_1C1EAE508();
  id v50 = a2;
  id v51 = v24;
  id v52 = v3;
  id v53 = v50;
  id v54 = v51;
  id v55 = v52;
  id v56 = sub_1C1EAE558();
  int v57 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v56, (os_log_type_t)v57))
  {
    LODWORD(v99) = v57;
    uint64_t v58 = swift_slowAlloc();
    os_log_t v98 = (os_log_t)swift_slowAlloc();
    uint64_t v100 = swift_slowAlloc();
    id v106 = (char *)v100;
    *(_DWORD *)uint64_t v58 = 136446978;
    uint64_t v59 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    uint64_t v105 = sub_1C1DF8D44(v59, v60, (uint64_t *)&v106);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2082;
    if (a2)
    {
      id v61 = objc_msgSend(v53, sel_identifier);
      sub_1C1EAD348();

      uint64_t v62 = sub_1C1EAD368();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v11, 0, 1, v62);
    }
    else
    {
      uint64_t v86 = sub_1C1EAD368();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v11, 1, 1, v86);
    }
    uint64_t v87 = sub_1C1EAED68();
    uint64_t v105 = sub_1C1DF8D44(v87, v88, (uint64_t *)&v106);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 22) = 2114;
    uint64_t v89 = (objc_class *)objc_msgSend(v54, sel_dateUpdated);
    uint64_t v105 = (uint64_t)v89;
    sub_1C1EAF2C8();
    os_log_t v90 = v98;
    v98->isa = v89;

    *(_WORD *)(v58 + 32) = 2082;
    id v91 = v55;
    id v92 = objc_msgSend(v91, sel_description);
    uint64_t v93 = sub_1C1EAED38();
    unint64_t v95 = v94;

    uint64_t v105 = sub_1C1DF8D44(v93, v95, (uint64_t *)&v106);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v56, (os_log_type_t)v99, "Feed of kind %{public}s for profile %{public}s is new enough; eligible for display TRUE (last updated %{public}@); %{public}s",
      (uint8_t *)v58,
      0x2Au);
    sub_1C1E1699C();
    uint64_t v63 = 1;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v90, -1, -1);
    uint64_t v96 = v100;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v96, -1, -1);
    MEMORY[0x1C874D2E0](v58, -1, -1);

    (*(void (**)(char *, uint64_t))(v104 + 8))(v101, v103);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v104 + 8))(v49, v103);
    return 1;
  }
  return v63;
}

void *sub_1C1E1C238(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1DFD1DC(0, &qword_1EBB683A8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1E1CC88(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1E1C368(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1E1C534(a1, a2, a3, a4, &qword_1EBB68278, MEMORY[0x1E4F67030], MEMORY[0x1E4F67030], MEMORY[0x1E4F67030]);
}

void *sub_1C1E1C3B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1DF31D8(0, &qword_1EBB670E0, (uint64_t (*)(uint64_t))type metadata accessor for _HKDataTypeCode, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1E1CF70(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1E1C4EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1E1C534(a1, a2, a3, a4, &qword_1EBB67098, MEMORY[0x1E4F67110], MEMORY[0x1E4F67110], MEMORY[0x1E4F67110]);
}

uint64_t sub_1C1E1C534(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C1DF31D8(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_1C1EAF618();
    __break(1u);
    return result;
  }
  id v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C1E1D05C(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

void *sub_1C1E1C7D0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1DF31D8(0, &qword_1EBB670C0, (uint64_t (*)(uint64_t))sub_1C1E1D23C, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C1E1CD7C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1E1C924(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1E1C534(a1, a2, a3, a4, &qword_1EBB670B8, (uint64_t (*)(uint64_t))type metadata accessor for ModelTrainingEvent, (uint64_t (*)(void))type metadata accessor for ModelTrainingEvent, (uint64_t (*)(void))type metadata accessor for ModelTrainingEvent);
}

uint64_t sub_1C1E1C96C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1E1C534(a1, a2, a3, a4, &qword_1EBB670F0, (uint64_t (*)(uint64_t))sub_1C1E1D1B8, (uint64_t (*)(void))sub_1C1E1D1B8, (uint64_t (*)(void))sub_1C1E1D1B8);
}

uint64_t sub_1C1E1C9B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1E1C534(a1, a2, a3, a4, &qword_1EA2C12B0, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
}

char *sub_1C1E1C9FC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1DFD1DC(0, &qword_1EBB654C8, MEMORY[0x1E4F674B8], MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      unint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      unint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C1E1CE88(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1E1CB18(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1DFD1DC(0, &qword_1EBB683E8, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E1CC88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E1CD7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1C1E1D23C();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

char *sub_1C1E1CE88(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1C1EAF6A8();
  __break(1u);
  return result;
}

char *sub_1C1E1CF70(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    int64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E1D05C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1E1D1B8()
{
  if (!qword_1EBB67038)
  {
    sub_1C1DF9F8C(255, &qword_1EBB67048);
    type metadata accessor for ModelTrainingEvent();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB67038);
    }
  }
}

void sub_1C1E1D23C()
{
  if (!qword_1EBB66F88)
  {
    sub_1C1DF9F8C(255, &qword_1EBB683E0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB66F88);
    }
  }
}

uint64_t sub_1C1E1D2B8@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  id v30 = a1;
  uint64_t v3 = sub_1C1EADD48();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  size_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C1EAE568();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DD4C84();
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C1EAD118();
  if (!v14)
  {
    long long v35 = 0u;
    long long v36 = 0u;
LABEL_13:
    sub_1C1E1F7F0((uint64_t)&v35, (uint64_t (*)(void))sub_1C1E1F794);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
    goto LABEL_14;
  }
  uint64_t v15 = v14;
  unint64_t v32 = 0xD000000000000014;
  unint64_t v33 = 0x80000001C1EB38E0;
  sub_1C1EAF448();
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_1C1E60ACC((uint64_t)v34), (v17 & 1) != 0))
  {
    sub_1C1DF8FD4(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v35);
  }
  else
  {
    long long v35 = 0u;
    long long v36 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1C1E1F850((uint64_t)v34);
  if (!*((void *)&v36 + 1)) {
    goto LABEL_13;
  }
  uint64_t v31 = v8;
  int v18 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, v18 ^ 1u, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
  {
LABEL_14:
    sub_1C1E1F7F0((uint64_t)v13, (uint64_t (*)(void))sub_1C1DD4C84);
    uint64_t result = sub_1C1EAF628();
    __break(1u);
    return result;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v13, v3);
  sub_1C1EAE508();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  uint64_t v19 = sub_1C1EAE558();
  os_log_type_t v20 = sub_1C1EAF0A8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v29 = v7;
    uint64_t v23 = v22;
    v34[0] = v22;
    *(_DWORD *)uint64_t v21 = 136446466;
    *(void *)&long long v35 = v30;
    swift_getMetatypeMetadata();
    id v30 = v10;
    uint64_t v24 = sub_1C1EAED68();
    *(void *)&long long v35 = sub_1C1DF8D44(v24, v25, v34);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    sub_1C1DE1E18(&qword_1EBB65328, MEMORY[0x1E4F672B0]);
    uint64_t v26 = sub_1C1EAF768();
    *(void *)&long long v35 = sub_1C1DF8D44(v26, v27, v34);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl(&dword_1C1DD2000, v19, v20, "[%{public}s]: ChangeDomain received from feedItemSubmissionOccurred (will be throttled): %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v23, -1, -1);
    MEMORY[0x1C874D2E0](v21, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v30, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v10, v7);
  }
}

uint64_t sub_1C1E1D828@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v52 = a3;
  uint64_t v4 = sub_1C1EAE568();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  MEMORY[0x1F4188790](v4);
  size_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C1EADD48();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v53 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v47 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  unint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v47 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v47 - v20;
  uint64_t v22 = *a1;
  sub_1C1EADCC8();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  id v51 = v21;
  id v56 = v23;
  v23(v19, (uint64_t)v21, v7);
  uint64_t v24 = *(void *)(v22 + 16);
  id v54 = v6;
  if (v24)
  {
    uint64_t v25 = v22 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v26 = *(void *)(v8 + 72);
    uint64_t v27 = v8;
    id v28 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v55 = v27;
    uint64_t v57 = v26;
    uint64_t v58 = v27 + 32;
    uint64_t v47 = v22;
    swift_bridgeObjectRetain();
    uint64_t v29 = v56;
    do
    {
      v29(v16, v25, v7);
      v29(v13, (uint64_t)v19, v7);
      sub_1C1EADD18();
      id v30 = *v28;
      (*v28)(v16, v7);
      v30(v19, v7);
      uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))v58;
      (*(void (**)(char *, char *, uint64_t))v58)(v19, v13, v7);
      v25 += v57;
      --v24;
    }
    while (v24);
    uint64_t v58 = v58 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    swift_bridgeObjectRelease();
    size_t v6 = v54;
    uint64_t v8 = v55;
  }
  else
  {
    uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    uint64_t v58 = (v8 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  }
  uint64_t v32 = v52;
  v31(v52, v19, v7);
  long long v35 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v33 = v8 + 8;
  uint64_t v34 = v35;
  v35(v51, v7);
  sub_1C1EAE508();
  long long v36 = v53;
  v56(v53, v32, v7);
  uint64_t v37 = sub_1C1EAE558();
  os_log_type_t v38 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v55 = v33;
    uint64_t v40 = v39;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v60 = v41;
    *(_DWORD *)uint64_t v40 = 136446466;
    uint64_t v59 = v48;
    swift_getMetatypeMetadata();
    uint64_t v42 = sub_1C1EAED68();
    uint64_t v59 = sub_1C1DF8D44(v42, v43, &v60);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    sub_1C1DE1E18(&qword_1EBB65328, MEMORY[0x1E4F672B0]);
    uint64_t v44 = sub_1C1EAF768();
    uint64_t v59 = sub_1C1DF8D44(v44, v45, &v60);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    v34(v36, v7);
    _os_log_impl(&dword_1C1DD2000, v37, v38, "[%{public}s]: Collected this changeDomain, emitting: %s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v41, -1, -1);
    MEMORY[0x1C874D2E0](v40, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v54, v50);
  }
  else
  {
    v34(v36, v7);

    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v6, v50);
  }
}

uint64_t FeedPopulationListenerSchedulerConfiguration.scheduler.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FeedPopulationListenerSchedulerConfiguration.collectInterval.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  size_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t FeedPopulationListenerSchedulerConfiguration.options.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1C1EAF2A8();
  size_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t FeedPopulationListenerSchedulerConfiguration.init(scheduler:collectInterval:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t v8 = type metadata accessor for FeedPopulationListenerSchedulerConfiguration();
  uint64_t v9 = a5 + *(int *)(v8 + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v9, a2, AssociatedTypeWitness);
  uint64_t v11 = a5 + *(int *)(v8 + 40);
  swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1C1EAF2A8();
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  return v13(v11, a3, v12);
}

uint64_t sub_1C1E1E0B8()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C1E1E0C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1E1D2B8(*(char **)(v1 + 16), a1);
}

uint64_t sub_1C1E1E0D4()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C1E1E0E4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1E1D828(a1, *(void *)(v2 + 16), a2);
}

uint64_t dispatch thunk of FeedPopulationListener.stopListening()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1C1E1E104()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v3 > 0x3F)
    {
      return AssociatedTypeWitness;
    }
    else
    {
      swift_getAssociatedTypeWitness();
      uint64_t v0 = sub_1C1EAF2A8();
      if (v4 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v0;
}

uint64_t *sub_1C1E1E2BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v5 + v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v9 + v12;
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v14 = *(void *)(v11 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v11 + 64) + 1;
  }
  uint64_t v15 = (v7 | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v11 + 80));
  if (v15 <= 7
    && v14 + ((v13 + (v8 & ~(unint64_t)v7)) & ~v12) <= 0x18
    && ((v7 | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v11 + 80)) & 0x100000) == 0)
  {
    size_t __n = v14;
    unint64_t v20 = ~(unint64_t)v7;
    uint64_t v21 = ~v12;
    uint64_t v22 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16);
    uint64_t v23 = v10;
    v22(a1, a2, v3);
    uint64_t v24 = v23;
    unint64_t v25 = ((unint64_t)a2 + v8) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)a1 + v8) & v20, v25, AssociatedTypeWitness);
    uint64_t v26 = (void *)(((((unint64_t)a1 + v8) & v20) + v13) & v21);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))((v25 + v13) & v21, 1, v24))
    {
      memcpy(v26, (const void *)((v25 + v13) & v21), __n);
    }
    else
    {
      (*(void (**)(void *, unint64_t, uint64_t))(v11 + 16))(v26, (v25 + v13) & v21, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v26, 0, 1, v24);
    }
    return a1;
  }
  else
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = v18 + ((v15 + 16) & ~v15);
    swift_retain();
  }
  return (uint64_t *)v19;
}

uint64_t sub_1C1E1E5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 48);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v13 + v16 + v11) & ~v16);
  uint64_t v19 = (const void *)((v17 + v12) & ~v16);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14))
  {
    if (*(_DWORD *)(v15 + 84)) {
      size_t v20 = *(void *)(v15 + 64);
    }
    else {
      size_t v20 = *(void *)(v15 + 64) + 1;
    }
    memcpy(v18, v19, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v18, v19, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1C1E1E7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 40);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v13 + v16 + v11) & ~v16);
  uint64_t v19 = (void *)((v17 + v12) & ~v16);
  size_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v5) = v20(v18, 1, v14);
  int v21 = v20(v19, 1, v14);
  if (v5)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v18, v19, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      return a1;
    }
    int v22 = *(_DWORD *)(v15 + 84);
    size_t v23 = *(void *)(v15 + 64);
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v18, v19, v14);
      return a1;
    }
    unint64_t v25 = *(void (**)(void *, uint64_t))(v15 + 8);
    uint64_t v24 = v15 + 8;
    v25(v18, v14);
    int v22 = *(_DWORD *)(v24 + 76);
    size_t v23 = *(void *)(v24 + 56);
  }
  if (v22) {
    size_t v26 = v23;
  }
  else {
    size_t v26 = v23 + 1;
  }
  memcpy(v18, v19, v26);
  return a1;
}

uint64_t sub_1C1E1EA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 32);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v13 + v16 + v11) & ~v16);
  uint64_t v19 = (const void *)((v17 + v12) & ~v16);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14))
  {
    if (*(_DWORD *)(v15 + 84)) {
      size_t v20 = *(void *)(v15 + 64);
    }
    else {
      size_t v20 = *(void *)(v15 + 64) + 1;
    }
    memcpy(v18, v19, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v18, v19, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1C1E1EC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v13 + v16 + v11) & ~v16);
  uint64_t v19 = (void *)((v17 + v12) & ~v16);
  size_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v5) = v20(v18, 1, v14);
  int v21 = v20(v19, 1, v14);
  if (v5)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v18, v19, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      return a1;
    }
    int v22 = *(_DWORD *)(v15 + 84);
    size_t v23 = *(void *)(v15 + 64);
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v18, v19, v14);
      return a1;
    }
    unint64_t v25 = *(void (**)(void *, uint64_t))(v15 + 8);
    uint64_t v24 = v15 + 8;
    v25(v18, v14);
    int v22 = *(_DWORD *)(v24 + 76);
    size_t v23 = *(void *)(v24 + 56);
  }
  if (v22) {
    size_t v26 = v23;
  }
  else {
    size_t v26 = v23 + 1;
  }
  memcpy(v18, v19, v26);
  return a1;
}

uint64_t sub_1C1E1EEF8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unsigned int v33 = v6;
  if (v8 > v6) {
    unsigned int v6 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 84);
  unsigned int v12 = v11 - 1;
  if (!v11) {
    unsigned int v12 = 0;
  }
  if (v12 <= v6) {
    unsigned int v12 = v6;
  }
  uint64_t v13 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = *(void *)(v7 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = *(void *)(v9 + 64);
  if (v11) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = v16 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = *(void *)(v5 + 64) + v13;
  uint64_t v19 = a1;
  if (a2 <= v12) {
    goto LABEL_30;
  }
  uint64_t v20 = v17 + ((v14 + v15 + (v18 & ~v13)) & ~v15);
  char v21 = 8 * v20;
  if (v20 > 3) {
    goto LABEL_13;
  }
  unsigned int v23 = ((a2 - v12 + ~(-1 << v21)) >> v21) + 1;
  if (HIWORD(v23))
  {
    int v22 = *(_DWORD *)((char *)a1 + v20);
    if (!v22) {
      goto LABEL_30;
    }
    goto LABEL_20;
  }
  if (v23 > 0xFF)
  {
    int v22 = *(unsigned __int16 *)((char *)a1 + v20);
    if (!*(unsigned __int16 *)((char *)a1 + v20)) {
      goto LABEL_30;
    }
    goto LABEL_20;
  }
  if (v23 >= 2)
  {
LABEL_13:
    int v22 = *((unsigned __int8 *)a1 + v20);
    if (!*((unsigned char *)a1 + v20)) {
      goto LABEL_30;
    }
LABEL_20:
    int v24 = (v22 - 1) << v21;
    if (v20 > 3) {
      int v24 = 0;
    }
    if (v20)
    {
      if (v20 <= 3) {
        int v25 = v20;
      }
      else {
        int v25 = 4;
      }
      switch(v25)
      {
        case 2:
          int v26 = *a1;
          break;
        case 3:
          int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v26 = *(_DWORD *)a1;
          break;
        default:
          int v26 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v26 = 0;
    }
    return v12 + (v26 | v24) + 1;
  }
LABEL_30:
  if (!v12) {
    return 0;
  }
  if (v33 == v12)
  {
    uint64_t v27 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v28 = v33;
    uint64_t v29 = v4;
  }
  else
  {
    uint64_t v19 = (unsigned __int16 *)(((unint64_t)a1 + v18) & ~v13);
    if (v8 != v12)
    {
      unsigned int v31 = (*(uint64_t (**)(unint64_t))(v10 + 48))(((unint64_t)v19 + v14 + v15) & ~v15);
      if (v31 >= 2) {
        return v31 - 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v27 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v28 = v8;
    uint64_t v29 = AssociatedTypeWitness;
  }
  return v27(v19, v28, v29);
}

void sub_1C1E1F29C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v41 = v5;
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= v6) {
    unsigned int v9 = v6;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  int v10 = 0;
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = v11;
  int v13 = *(_DWORD *)(v11 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= v9) {
    unsigned int v15 = v9;
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = *(void *)(v5 + 64) + v16;
  uint64_t v18 = *(void *)(v7 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v11 + 80);
  size_t v20 = *(void *)(v11 + 64);
  if (v13) {
    size_t v21 = v20;
  }
  else {
    size_t v21 = v20 + 1;
  }
  size_t v22 = ((v18 + v19 + (v17 & ~v16)) & ~v19) + v21;
  if (a3 > v15)
  {
    if (v22 <= 3)
    {
      unsigned int v23 = ((a3 - v15 + ~(-1 << (8 * v22))) >> (8 * v22)) + 1;
      if (HIWORD(v23))
      {
        int v10 = 4;
      }
      else if (v23 >= 0x100)
      {
        int v10 = 2;
      }
      else
      {
        int v10 = v23 > 1;
      }
    }
    else
    {
      int v10 = 1;
    }
  }
  if (v15 < a2)
  {
    unsigned int v24 = ~v15 + a2;
    if (v22 < 4)
    {
      int v25 = (v24 >> (8 * v22)) + 1;
      if (v22)
      {
        int v29 = v24 & ~(-1 << (8 * v22));
        bzero(a1, v22);
        if (v22 == 3)
        {
          *(_WORD *)a1 = v29;
          a1[2] = BYTE2(v29);
        }
        else if (v22 == 2)
        {
          *(_WORD *)a1 = v29;
        }
        else
        {
          *a1 = v29;
        }
      }
    }
    else
    {
      bzero(a1, v22);
      *(_DWORD *)a1 = v24;
      int v25 = 1;
    }
    switch(v10)
    {
      case 1:
        a1[v22] = v25;
        return;
      case 2:
        *(_WORD *)&a1[v22] = v25;
        return;
      case 3:
        goto LABEL_64;
      case 4:
        *(_DWORD *)&a1[v22] = v25;
        return;
      default:
        return;
    }
  }
  uint64_t v26 = ~v16;
  uint64_t v27 = ~v19;
  uint64_t v28 = a1;
  switch(v10)
  {
    case 1:
      a1[v22] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v22] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_64:
      __break(1u);
      JUMPOUT(0x1C1E1F75CLL);
    case 4:
      *(_DWORD *)&a1[v22] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (!a2) {
        return;
      }
LABEL_32:
      if (v6 == v15)
      {
        id v30 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
        uint64_t v31 = a2;
        uint64_t v32 = v6;
        uint64_t v33 = v4;
LABEL_36:
        v30(v28, v31, v32, v33);
        return;
      }
      uint64_t v28 = (unsigned char *)((unint64_t)&a1[v17] & v26);
      if (v8 == v15)
      {
        id v30 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        uint64_t v31 = a2;
        uint64_t v32 = v8;
        uint64_t v33 = AssociatedTypeWitness;
        goto LABEL_36;
      }
      uint64_t v34 = (unsigned char *)((unint64_t)&v28[v18 + v19] & v27);
      if (v14 >= a2)
      {
        os_log_type_t v38 = *(void (**)(unint64_t, void))(v12 + 56);
        unint64_t v39 = (unint64_t)&v28[v18 + v19] & v27;
        v38(v39, a2 + 1);
      }
      else
      {
        if (v21 <= 3) {
          int v35 = ~(-1 << (8 * v21));
        }
        else {
          int v35 = -1;
        }
        if (v21)
        {
          int v36 = v35 & (~v14 + a2);
          if (v21 <= 3) {
            int v37 = v21;
          }
          else {
            int v37 = 4;
          }
          bzero(v34, v21);
          switch(v37)
          {
            case 2:
              *(_WORD *)uint64_t v34 = v36;
              break;
            case 3:
              *(_WORD *)uint64_t v34 = v36;
              v34[2] = BYTE2(v36);
              break;
            case 4:
              *(_DWORD *)uint64_t v34 = v36;
              break;
            default:
              *uint64_t v34 = v36;
              break;
          }
        }
      }
      return;
  }
}

void sub_1C1E1F794()
{
  if (!qword_1EBB683C0)
  {
    unint64_t v0 = sub_1C1EAF2A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB683C0);
    }
  }
}

uint64_t sub_1C1E1F7F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1E1F850(uint64_t a1)
{
  return a1;
}

id HealthExperienceStoreCoreSpotlightOperation.__allocating_init(store:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  sub_1C1DFE408(a1, (uint64_t)v3 + qword_1EBB651C0);
  v6.receiver = v3;
  v6.super_class = v1;
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v4;
}

void *sub_1C1E1F918()
{
  type metadata accessor for HealthExperienceStoreCoreSpotlightDelegate();
  sub_1C1DFE408(v0 + qword_1EBB651C0, (uint64_t)v2);
  return HealthExperienceStoreCoreSpotlightDelegate.__allocating_init(for:)(v2);
}

id HealthExperienceStoreCoreSpotlightOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void HealthExperienceStoreCoreSpotlightOperation.init()()
{
}

void sub_1C1E1F9CC()
{
}

uint64_t sub_1C1E1F9FC()
{
  return __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EBB651C0);
}

id HealthExperienceStoreCoreSpotlightOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthExperienceStoreCoreSpotlightOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C1E1FA44(void *a1)
{
  id v1 = a1;
  HealthExperienceStoreCoreSpotlightOperation.description.getter();

  objc_super v2 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t HealthExperienceStoreCoreSpotlightOperation.description.getter()
{
  return 0;
}

unint64_t sub_1C1E1FB74()
{
  unint64_t result = qword_1EBB65B68;
  if (!qword_1EBB65B68)
  {
    type metadata accessor for HealthExperienceStoreCoreSpotlightOperation();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB65B68);
  }
  return result;
}

uint64_t method lookup function for HealthExperienceStoreCoreSpotlightOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthExperienceStoreCoreSpotlightOperation);
}

uint64_t dispatch thunk of HealthExperienceStoreCoreSpotlightOperation.__allocating_init(store:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for HealthExperienceStoreCoreSpotlightOperation + v0 + 8))();
}

uint64_t dispatch thunk of HealthExperienceStoreCoreSpotlightOperation.makeCoreSpotlightDelegate()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for HealthExperienceStoreCoreSpotlightOperation
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 16))();
}

uint64_t sub_1C1E1FC34()
{
  return type metadata accessor for HealthExperienceStoreCoreSpotlightOperation();
}

uint64_t FeedItemSuggestionRelevanceCalculating.getAllFeedItems()(uint64_t a1, uint64_t a2)
{
  sub_1C1EAE348();
  id v4 = (void *)MEMORY[0x1C874B480]();
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  uint64_t v6 = sub_1C1EAF248();

  return v6;
}

uint64_t dispatch thunk of FeedItemSuggestionRelevanceCalculating.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id sub_1C1E1FD94()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_featureTags);
  sub_1C1EADA78();
  sub_1C1E1FF04();
  uint64_t v3 = sub_1C1EAEF48();

  uint64_t v4 = sub_1C1E20408(v3);
  swift_bridgeObjectRelease();
  sub_1C1E1FF5C();
  sub_1C1E58720(v5);
  id v6 = objc_msgSend(v1, sel_uniqueIdentifier, v4);
  sub_1C1EAED38();

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94910]), sel_init);
  id v8 = objc_allocWithZone(MEMORY[0x1E4F94920]);
  unsigned int v9 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  sub_1C1E206B4();
  int v10 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_initWithIdentifier_content_action_relevanceProviders_, v9, v7, 0, v10);

  return v11;
}

unint64_t sub_1C1E1FF04()
{
  unint64_t result = qword_1EBB652F8;
  if (!qword_1EBB652F8)
  {
    sub_1C1EADA78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB652F8);
  }
  return result;
}

void sub_1C1E1FF5C()
{
  id v1 = v0;
  uint64_t v2 = sub_1C1EADDF8();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v34 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1C1EADB78();
  uint64_t v31 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  unint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1EADC18();
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1EADB18();
  uint64_t v29 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1C1EAE318();
  uint64_t v12 = self;
  if (qword_1EBB680B0 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1EBB6ACC0;
  sub_1C1E28B84();
  unsigned int v14 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(self, sel_featureValueWithString_, v14);

  id v16 = objc_msgSend(v12, sel_customRelevanceProviderForFeature_withValue_, v13, v15);
  if (v16)
  {
    id v17 = v16;
    MEMORY[0x1C874C090]();
    uint64_t v18 = v33;
    if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C1EAEEE8();
    }
    sub_1C1EAEF18();
    sub_1C1EAEEB8();

    sub_1C1EAE318();
    id v19 = sub_1C1E7FAD4();
    sub_1C1E58720((unint64_t)v19);
    sub_1C1EAE318();
    unint64_t v20 = sub_1C1E4DA04();
    sub_1C1E58720(v20);
    sub_1C1EAE318();
    unint64_t v21 = sub_1C1E54690();
    sub_1C1E58720(v21);
    id v22 = objc_msgSend(v1, sel_localizedTitle);
    if (v22)
    {
      unsigned int v23 = v22;
      uint64_t v24 = sub_1C1EAED38();
      uint64_t v26 = v25;

      uint64_t v36 = v24;
      uint64_t v37 = v26;
      sub_1C1E4DC68();
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      sub_1C1E58720(v28);
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v18);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v35);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C1E20408(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C1EAF368();
    sub_1C1EADA78();
    sub_1C1E1FF04();
    uint64_t result = sub_1C1EAEF98();
    uint64_t v1 = v21;
    uint64_t v19 = v22;
    uint64_t v3 = v23;
    uint64_t v4 = v24;
    unint64_t v5 = v25;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v19 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v9) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v19 + 8 * v14);
    uint64_t v12 = v4 + 1;
    if (!v15)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v19 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            goto LABEL_32;
          }
          unint64_t v15 = *(void *)(v19 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              goto LABEL_32;
            }
            unint64_t v15 = *(void *)(v19 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v4 + 6;
              while (v9 != v16)
              {
                unint64_t v15 = *(void *)(v19 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1C1E00B40();
              return v26;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_1C1E5C71C();
      unint64_t v18 = v17;

      uint64_t result = sub_1C1E58720(v18);
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1C1EAF3E8())
      {
        sub_1C1EADA78();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v20;
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v20) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1C1E206B4()
{
  unint64_t result = qword_1EBB67010;
  if (!qword_1EBB67010)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB67010);
  }
  return result;
}

void *static FeedPopulationManaging.fetchAndValidateFeedToPopulate(kind:managedObjectContext:associatedProfileIdentifier:)(int a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v60 = a4;
  uint64_t v65 = a2;
  int v66 = a1;
  uint64_t v5 = sub_1C1EAD318();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1EAE568();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  int64_t v14 = (char *)&v55 - v13;
  uint64_t v15 = sub_1C1EAD368();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v9;
  if (a3)
  {
    id v19 = objc_msgSend(a3, sel_identifier);
    sub_1C1EAD348();

    uint64_t v59 = sub_1C1EAD328();
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else
  {
    unint64_t v21 = 0xE400000000000000;
    uint64_t v59 = 1701736302;
  }
  uint64_t v22 = v65;
  sub_1C1EAE188();
  id v64 = a3;
  uint64_t v23 = (void *)sub_1C1EAE178();
  uint64_t v24 = sub_1C1EADE58();
  if (v24)
  {
    unint64_t v25 = (void *)v24;
    uint64_t v61 = v6;
    sub_1C1EAE508();
    id v26 = v25;
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1C1EAE558();
    os_log_type_t v28 = sub_1C1EAF0D8();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v58 = v5;
      uint64_t v31 = v30;
      id v56 = (void *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      id v68 = (void *)v57;
      *(_DWORD *)uint64_t v31 = 136315906;
      os_log_t v55 = v27;
      uint64_t v32 = sub_1C1EAF908();
      LODWORD(v60) = v29;
      uint64_t v67 = sub_1C1DF8D44(v32, v33, (uint64_t *)&v68);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_1C1DF8D44(v59, v21, (uint64_t *)&v68);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 22) = 2082;
      sub_1C1EAE148();
      uint64_t v34 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      uint64_t v67 = sub_1C1DF8D44(v34, v35, (uint64_t *)&v68);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 32) = 2114;
      id v36 = objc_msgSend(v26, sel_dateUpdated);
      uint64_t v67 = (uint64_t)v36;
      uint64_t v22 = v65;
      sub_1C1EAF2C8();
      uint64_t v37 = v56;
      *id v56 = v36;

      os_log_t v38 = v55;
      _os_log_impl(&dword_1C1DD2000, v55, (os_log_type_t)v60, "[%s]_%s: Feed of kind %{public}s and date %{public}@ found; deleting it and creating a new feed",
        (uint8_t *)v31,
        0x2Au);
      sub_1C1E1699C();
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v37, -1, -1);
      uint64_t v39 = v57;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v39, -1, -1);
      uint64_t v40 = v31;
      uint64_t v5 = v58;
      MEMORY[0x1C874D2E0](v40, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v14, v63);
    objc_msgSend(v22, sel_deleteObject_, v26);

    uint64_t v6 = v61;
  }
  else
  {
    uint64_t v58 = v5;
    sub_1C1EAE508();
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1C1EAE558();
    os_log_type_t v42 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      id v56 = (void *)swift_slowAlloc();
      id v68 = v56;
      *(_DWORD *)uint64_t v43 = 136315650;
      uint64_t v57 = (uint64_t)v23;
      uint64_t v44 = sub_1C1EAF908();
      uint64_t v61 = v6;
      uint64_t v67 = sub_1C1DF8D44(v44, v45, (uint64_t *)&v68);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_1C1DF8D44(v59, v21, (uint64_t *)&v68);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 22) = 2080;
      uint64_t v6 = v61;
      uint64_t v46 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      uint64_t v67 = sub_1C1DF8D44(v46, v47, (uint64_t *)&v68);
      sub_1C1EAF2C8();
      uint64_t v23 = (void *)v57;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v41, v42, "[%s]_%s: No feed of kind %s found; creating one", (uint8_t *)v43, 0x20u);
      uint64_t v48 = v56;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v48, -1, -1);
      uint64_t v49 = v43;
      uint64_t v22 = v65;
      MEMORY[0x1C874D2E0](v49, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v12, v63);
    uint64_t v5 = v58;
  }
  id v50 = v64;
  id v51 = v22;
  sub_1C1EAD308();
  uint64_t v52 = (void *)sub_1C1EAE168();
  sub_1C1EAE158();
  sub_1C1EAD308();
  id v53 = (void *)sub_1C1EAD2C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v52, sel_setDateUpdated_, v53);

  return v52;
}

uint64_t dispatch thunk of FeedPopulationManaging.healthExperienceStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedPopulationManaging.healthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedPopulationManaging.managedFeedKinds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedPopulationManaging.managedLiveFeedKinds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedPopulationManaging.populateFeed(feedKinds:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of FeedPopulationManaging.handleUpdatedFeedItems(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FeedPopulationManaging.deleteFeed(feedKinds:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of FeedPopulationManaging.isChangeDomainPertinentForLiveUpdate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

id FeedItemREElementDataSource.__allocating_init(store:sourceProfiles:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  sub_1C1DFE408(a1, (uint64_t)&v5[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_store]);
  *(void *)&v5[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles] = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

id FeedItemREElementDataSource.init(store:sourceProfiles:)(uint64_t a1, uint64_t a2)
{
  sub_1C1DFE408(a1, (uint64_t)&v2[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_store]);
  *(void *)&v2[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles] = a2;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for FeedItemREElementDataSource();
  id v5 = objc_msgSendSuper2(&v7, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v5;
}

unint64_t static FeedItemREElementDataSource.bundleIdentifier.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t static FeedItemREElementDataSource.applicationBundleIdentifier.getter()
{
  return 0;
}

uint64_t static FeedItemREElementDataSource.contentAttributes()()
{
  return MEMORY[0x1E4FBC860];
}

void sub_1C1E21084(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = sub_1C1EAE568();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE508();
  swift_bridgeObjectRetain_n();
  int64_t v14 = v4;
  uint64_t v15 = sub_1C1EAE558();
  int v49 = sub_1C1EAF0D8();
  if (!os_log_type_enabled(v15, (os_log_type_t)v49))
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_11:
    __swift_project_boxed_opaque_existential_1(&v14[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_store], *(void *)&v14[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_store + 24]);
    unint64_t v33 = (void *)sub_1C1EAD538();
    uint64_t v34 = (void *)swift_allocObject();
    v34[2] = a1;
    uint64_t v34[3] = a2;
    v34[4] = v33;
    uint64_t v34[5] = v14;
    v34[6] = a3;
    v34[7] = a4;
    v34[8] = ObjectType;
    aBlock[4] = (uint64_t)sub_1C1E22E8C;
    aBlock[5] = (uint64_t)v34;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C1DF5050;
    aBlock[3] = (uint64_t)&block_descriptor;
    unint64_t v35 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v36 = v14;
    id v37 = v33;
    sub_1C1E16DEC(a3);
    swift_release();
    objc_msgSend(v37, sel_performBlock_, v35);
    _Block_release(v35);

    return;
  }
  uint64_t v46 = v13;
  uint64_t v47 = v11;
  uint64_t v48 = v10;
  uint64_t v16 = swift_slowAlloc();
  uint64_t v45 = swift_slowAlloc();
  aBlock[0] = v45;
  *(_DWORD *)uint64_t v16 = 136446466;
  if (a2)
  {
    os_log_t v41 = v15;
    uint64_t v44 = ObjectType;
    swift_bridgeObjectRetain();
    uint64_t v43 = a1;
    uint64_t v50 = sub_1C1DF8D44(a1, a2, aBlock);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2082;
    os_log_type_t v42 = v14;
    uint64_t v17 = *(void *)&v14[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles];
    int64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = MEMORY[0x1E4FBC860];
    if (v18)
    {
      unint64_t v38 = a2;
      uint64_t v39 = a3;
      uint64_t v40 = a4;
      uint64_t v50 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1C1DE1100(0, v18, 0);
      uint64_t v20 = 0;
      uint64_t v19 = v50;
      do
      {
        id v21 = *(id *)(v17 + 8 * v20 + 32);
        uint64_t v22 = sub_1C1EAD788();
        uint64_t v24 = v23;

        uint64_t v50 = v19;
        unint64_t v26 = *(void *)(v19 + 16);
        unint64_t v25 = *(void *)(v19 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1C1DE1100(v25 > 1, v26 + 1, 1);
          uint64_t v19 = v50;
        }
        ++v20;
        *(void *)(v19 + 16) = v26 + 1;
        unint64_t v27 = v19 + 16 * v26;
        *(void *)(v27 + 32) = v22;
        *(void *)(v27 + 40) = v24;
      }
      while (v18 != v20);
      swift_bridgeObjectRelease();
      a3 = v39;
      a4 = v40;
      a2 = v38;
    }
    uint64_t v50 = v19;
    sub_1C1DE15D4(0, (unint64_t *)&qword_1EBB68358, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C1E22EA0();
    uint64_t v28 = sub_1C1EAECE8();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_1C1DF8D44(v28, v30, aBlock);
    sub_1C1EAF2C8();
    int64_t v14 = v42;

    swift_bridgeObjectRelease();
    os_log_t v31 = v41;
    _os_log_impl(&dword_1C1DD2000, v41, (os_log_type_t)v49, "Querying Core Data for elements for Relevance Engine section %{public}s for profiles %{public}s", (uint8_t *)v16, 0x16u);
    uint64_t v32 = v45;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v32, -1, -1);
    MEMORY[0x1C874D2E0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
    a1 = v43;
    uint64_t ObjectType = v44;
    goto LABEL_11;
  }

  __break(1u);
}

uint64_t sub_1C1E21570(uint64_t a1, unint64_t a2, uint64_t a3, char *a4, void (*a5)(char *), uint64_t a6, char *a7)
{
  uint64_t v50 = a7;
  uint64_t v51 = a6;
  os_log_t v55 = a4;
  uint64_t v57 = a1;
  uint64_t v9 = sub_1C1EAE568();
  uint64_t v52 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v56 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C1EAE118();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12) {
    goto LABEL_32;
  }
  uint64_t v53 = v9;
  id v54 = a5;
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  while (1)
  {
    uint64_t v14 = *(unsigned __int8 *)(v11 + v13 + 32);
    uint64_t v15 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    if (!a2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (v15 == v57 && v16 == a2) {
      break;
    }
    char v18 = sub_1C1EAF7A8();
    swift_bridgeObjectRelease();
    if (v18)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
LABEL_4:
    if (v12 == ++v13) {
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_13:
  unint64_t v19 = NSManagedObjectContext.getEligibleFeedItems(for:sourceProfiles:)(v14, *(void *)&v55[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles]);
  uint64_t v20 = v19;
  id v21 = v56;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v23 = (char *)MEMORY[0x1E4FBC860];
  if (v22)
  {
    uint64_t v61 = (char *)MEMORY[0x1E4FBC860];
    sub_1C1EAF548();
    if ((v22 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = 0;
      unint64_t v58 = v20 & 0xC000000000000001;
      uint64_t v59 = v20;
      uint64_t v25 = v22;
      do
      {
        if (v58) {
          id v26 = (id)MEMORY[0x1C874C6F0](v24, v20);
        }
        else {
          id v26 = *(id *)(v20 + 8 * v24 + 32);
        }
        unint64_t v27 = v26;
        ++v24;
        id v28 = objc_msgSend(v26, sel_featureTags);
        sub_1C1EADA78();
        sub_1C1E22F88((unint64_t *)&qword_1EBB652F8, MEMORY[0x1E4F671D0]);
        uint64_t v29 = sub_1C1EAEF48();

        uint64_t v30 = sub_1C1E20408(v29);
        swift_bridgeObjectRelease();
        sub_1C1E1FF5C();
        v60[0] = v30;
        sub_1C1E58720(v31);
        id v32 = objc_msgSend(v27, sel_uniqueIdentifier);
        sub_1C1EAED38();

        id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94910]), sel_init);
        id v34 = objc_allocWithZone(MEMORY[0x1E4F94920]);
        unint64_t v35 = (void *)sub_1C1EAED28();
        swift_bridgeObjectRelease();
        sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67010);
        id v36 = (void *)sub_1C1EAEE88();
        swift_bridgeObjectRelease();
        objc_msgSend(v34, sel_initWithIdentifier_content_action_relevanceProviders_, v35, v33, 0, v36);

        sub_1C1EAF518();
        sub_1C1EAF558();
        sub_1C1EAF568();
        sub_1C1EAF528();
        uint64_t v20 = v59;
      }
      while (v25 != v24);
      uint64_t v22 = v25;
      uint64_t v23 = v61;
      id v21 = v56;
      goto LABEL_23;
    }
    __break(1u);
  }
  else
  {
LABEL_23:
    sub_1C1EAE508();
    id v37 = v55;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v38 = v37;
    uint64_t v39 = sub_1C1EAE558();
    os_log_type_t v40 = sub_1C1EAF0D8();
    int v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v60[0] = v59;
      *(_DWORD *)uint64_t v42 = 136315906;
      LODWORD(v58) = v41;
      uint64_t v61 = v50;
      swift_getMetatypeMetadata();
      uint64_t v43 = sub_1C1EAED68();
      os_log_t v55 = (char *)v22;
      uint64_t v61 = (char *)sub_1C1DF8D44(v43, v44, v60);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2082;
      uint64_t v45 = sub_1C1E21D94();
      uint64_t v61 = (char *)sub_1C1DF8D44(v45, v46, v60);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 22) = 2050;
      swift_bridgeObjectRelease();
      uint64_t v61 = v55;
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 32) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v61 = (char *)sub_1C1DF8D44(v57, a2, v60);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1DD2000, v39, (os_log_type_t)v58, "[%s]_%{public}s: %{public}ld elements converted from Core Data and submitted to engine section %{public}s", (uint8_t *)v42, 0x2Au);
      uint64_t v47 = v59;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v47, -1, -1);
      MEMORY[0x1C874D2E0](v42, -1, -1);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v56, v53);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v21, v53);
    }
    if (v54)
    {
      v54(v23);
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_31:
  swift_bridgeObjectRelease();
LABEL_32:
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C1EAF628();
  __break(1u);
  return result;
}

void sub_1C1E21D0C(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    sub_1C1DF9F8C(0, &qword_1EBB67048);
    uint64_t v3 = sub_1C1EAEE88();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_1C1E21D94()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C1DE1100(0, v2, 0);
    uint64_t v3 = 0;
    do
    {
      id v4 = *(id *)(v1 + 8 * v3 + 32);
      uint64_t v5 = sub_1C1EAD788();
      uint64_t v7 = v6;

      unint64_t v9 = *(void *)(v13 + 16);
      unint64_t v8 = *(void *)(v13 + 24);
      if (v9 >= v8 >> 1) {
        sub_1C1DE1100(v8 > 1, v9 + 1, 1);
      }
      ++v3;
      *(void *)(v13 + 16) = v9 + 1;
      uint64_t v10 = v13 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v7;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  sub_1C1DE15D4(0, (unint64_t *)&qword_1EBB68358, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C1E22EA0();
  uint64_t v11 = sub_1C1EAECE8();
  swift_bridgeObjectRelease();
  return v11;
}

id FeedItemREElementDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FeedItemREElementDataSource.init()()
{
}

id FeedItemREElementDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedItemREElementDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1E22014(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E22264(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1E22034(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E223E4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1E22054(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E22BD0(a1, a2, a3, (void *)*v3, &qword_1EA2C12B0, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C1E220A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E22BD0(a1, a2, a3, (void *)*v3, &qword_1EBB670F0, (uint64_t (*)(uint64_t))sub_1C1E1D1B8, (uint64_t (*)(void))sub_1C1E1D1B8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C1E220F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E22BD0(a1, a2, a3, (void *)*v3, &qword_1EBB67098, MEMORY[0x1E4F67110], MEMORY[0x1E4F67110]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C1E22144(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E22554(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C1E22164(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E22724(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1E22184(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E228B0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1E221A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E22A3C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1E221C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E22BD0(a1, a2, a3, (void *)*v3, &qword_1EBB670B8, (uint64_t (*)(uint64_t))type metadata accessor for ModelTrainingEvent, (uint64_t (*)(void))type metadata accessor for ModelTrainingEvent);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C1E22214(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1E22BD0(a1, a2, a3, (void *)*v3, &qword_1EBB67090, MEMORY[0x1E4F670B0], MEMORY[0x1E4F670B0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C1E22264(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1DE15D4(0, &qword_1EBB670D0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E223E4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1DE15D4(0, &qword_1EBB654C8, MEMORY[0x1E4F674B8], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E22554(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1DE0F64(0, &qword_1EBB670C8, (uint64_t (*)(uint64_t))sub_1C1E23064, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1C1E23064();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E22724(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1DE0F64(0, &qword_1EBB670B0, (uint64_t (*)(uint64_t))sub_1C1E22FD0, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E228B0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1DE0F64(0, &qword_1EBB670E0, (uint64_t (*)(uint64_t))type metadata accessor for _HKDataTypeCode, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E22A3C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1DE15D4(0, &qword_1EBB683B8, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E22BD0(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C1DE0F64(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  size_t v18 = _swift_stdlib_malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  void v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (char *)v17 + v21;
  uint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  uint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E22E34()
{
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C1E22E8C()
{
  return sub_1C1E21570(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(char **)(v0 + 40), *(void (**)(char *))(v0 + 48), *(void *)(v0 + 56), *(char **)(v0 + 64));
}

unint64_t sub_1C1E22EA0()
{
  unint64_t result = qword_1EBB68360;
  if (!qword_1EBB68360)
  {
    sub_1C1DE15D4(255, (unint64_t *)&qword_1EBB68358, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB68360);
  }
  return result;
}

uint64_t method lookup function for FeedItemREElementDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedItemREElementDataSource);
}

uint64_t dispatch thunk of FeedItemREElementDataSource.__allocating_init(store:sourceProfiles:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C1E22F48()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1E22F80(uint64_t a1)
{
  sub_1C1E21D0C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1E22F88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C1E22FD0()
{
  unint64_t result = qword_1EBB66228;
  if (!qword_1EBB66228)
  {
    sub_1C1E2300C();
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB66228);
  }
  return result;
}

unint64_t sub_1C1E2300C()
{
  unint64_t result = qword_1EBB66220;
  if (!qword_1EBB66220)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB66220);
  }
  return result;
}

void sub_1C1E23064()
{
  if (!qword_1EBB66F90)
  {
    sub_1C1DF9F8C(255, &qword_1EBB683E0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB66F90);
    }
  }
}

uint64_t static FeedItem.predicateForKeyword(_:)(uint64_t a1, uint64_t a2)
{
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1EB0800;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1C1DF2A98();
  *(void *)(v4 + 32) = 0x7364726F7779656BLL;
  *(void *)(v4 + 40) = 0xE800000000000000;
  *(void *)(v4 + 96) = v5;
  *(void *)(v4 + 104) = v6;
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 72) = a1;
  *(void *)(v4 + 80) = a2;
  swift_bridgeObjectRetain();
  return sub_1C1EAF018();
}

id static FeedItem.predicateForMissingKeyword(_:)(uint64_t a1, uint64_t a2)
{
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1EB0800;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1C1DF2A98();
  *(void *)(v4 + 32) = 0x7364726F7779656BLL;
  *(void *)(v4 + 40) = 0xE800000000000000;
  *(void *)(v4 + 96) = v5;
  *(void *)(v4 + 104) = v6;
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 72) = a1;
  *(void *)(v4 + 80) = a2;
  swift_bridgeObjectRetain();
  int64_t v7 = (void *)sub_1C1EAF018();
  id v8 = objc_msgSend(self, sel_notPredicateWithSubpredicate_, v7);

  return v8;
}

id static FeedItem.predicateForNotKeyword(contentKinds:keyword:sourceProfiles:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1DF2B44(0, &qword_1EBB68158, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)v25 - v9;
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1EB0800;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v13 = sub_1C1DF2A98();
  *(void *)(v11 + 32) = 0x7364726F7779656BLL;
  *(void *)(v11 + 40) = 0xE800000000000000;
  *(void *)(v11 + 96) = v12;
  *(void *)(v11 + 104) = v13;
  *(void *)(v11 + 64) = v13;
  *(void *)(v11 + 72) = a2;
  *(void *)(v11 + 80) = a3;
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_1C1EAF018();
  uint64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_notPredicateWithSubpredicate_, v14);

  uint64_t v17 = sub_1C1EAD0E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
  id v18 = _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7hkTypes17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySo12HKObjectTypeCGSg10Foundation0M8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(a1, 0, (uint64_t)v10, a4);
  sub_1C1E19C58((uint64_t)v10);
  sub_1C1DFD228(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1EB07E0;
  *(void *)(v19 + 32) = v16;
  *(void *)(v19 + 40) = v18;
  v25[1] = v19;
  sub_1C1EAEEB8();
  id v20 = v16;
  id v21 = v18;
  uint64_t v22 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v15, sel_andPredicateWithSubpredicates_, v22);

  return v23;
}

id static FeedItem.predicateFor(contentKinds:keyword:hideInDiscover:sourceProfiles:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_1C1DFD228(0, &qword_1EBB683A8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1EB07F0;
  *(void *)(inited + 32) = a2;
  *(void *)(inited + 40) = a3;
  swift_bridgeObjectRetain();
  id v11 = _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds17atLeastOneKeyword14hideInDiscover14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySSGSbSgSayAA13SourceProfileOGSgtFZ_0(a1, inited, a4 & 1, a5);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v11;
}

uint64_t static FeedItem.predicateFor(healthRecordsOnly:)(char a1)
{
  if (a1)
  {
    sub_1C1DFD228(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1C1EB07E0;
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
    sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1C1EB0800;
    uint64_t v3 = MEMORY[0x1E4FBB1A0];
    *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v4 = sub_1C1DF2A98();
    *(void *)(v2 + 64) = v4;
    *(void *)(v2 + 32) = 0x7364726F7779656BLL;
    *(void *)(v2 + 40) = 0xE800000000000000;
    uint64_t v5 = sub_1C1EADB48();
    *(void *)(v2 + 96) = v3;
    *(void *)(v2 + 104) = v4;
    *(void *)(v2 + 72) = v5;
    *(void *)(v2 + 80) = v6;
    *(void *)(v1 + 32) = sub_1C1EAF018();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C1EB0800;
    *(void *)(v7 + 56) = v3;
    *(void *)(v7 + 64) = v4;
    *(void *)(v7 + 32) = 0x7364726F7779656BLL;
    *(void *)(v7 + 40) = 0xE800000000000000;
    uint64_t v8 = sub_1C1EADB58();
    *(void *)(v7 + 96) = v3;
    *(void *)(v7 + 104) = v4;
    *(void *)(v7 + 72) = v8;
    *(void *)(v7 + 80) = v9;
    *(void *)(v1 + 40) = sub_1C1EAF018();
    sub_1C1EAEEB8();
    unint64_t v10 = (void *)sub_1C1EAEE88();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v10);

    return (uint64_t)v11;
  }
  else
  {
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
    sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C1EB0800;
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v15 = sub_1C1DF2A98();
    *(void *)(v13 + 64) = v15;
    *(void *)(v13 + 32) = 0x7364726F7779656BLL;
    *(void *)(v13 + 40) = 0xE800000000000000;
    uint64_t v16 = sub_1C1EADB58();
    *(void *)(v13 + 96) = v14;
    *(void *)(v13 + 104) = v15;
    *(void *)(v13 + 72) = v16;
    *(void *)(v13 + 80) = v17;
    return sub_1C1EAF018();
  }
}

uint64_t static FeedItem.predicateForHasKeywordHealthRecordsDataType(_:)()
{
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1EB0800;
  uint64_t v1 = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v2 = sub_1C1DF2A98();
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 32) = 0x7364726F7779656BLL;
  *(void *)(v0 + 40) = 0xE800000000000000;
  uint64_t v3 = sub_1C1EADB58();
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = v4;
  return sub_1C1EAF018();
}

uint64_t static FeedItem.predicateForHealthRecordsKeyword()()
{
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1EB0800;
  uint64_t v1 = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v2 = sub_1C1DF2A98();
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 32) = 0x7364726F7779656BLL;
  *(void *)(v0 + 40) = 0xE800000000000000;
  uint64_t v3 = sub_1C1EADB48();
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = v4;
  return sub_1C1EAF018();
}

uint64_t static FeedItem.predicate(uniqueIdentifier:)(uint64_t a1, uint64_t a2)
{
  return sub_1C1E23D40(a1, a2);
}

uint64_t static FeedItem.predicateForAnyUniqueIdentifier(in:)(uint64_t a1)
{
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C1EB0800;
  sub_1C1EAE348();
  uint64_t v3 = sub_1C1EAE308();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1C1DF2A98();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  sub_1C1DFD228(0, (unint64_t *)&qword_1EBB68358, v6, MEMORY[0x1E4FBB320]);
  *(void *)(v2 + 96) = v7;
  *(void *)(v2 + 104) = sub_1C1E16EBC();
  *(void *)(v2 + 72) = a1;
  swift_bridgeObjectRetain();
  return sub_1C1EAF018();
}

uint64_t static FeedItem.predicateForPartialUniqueIdentifier(in:)(uint64_t a1, uint64_t a2)
{
  return sub_1C1E23D40(a1, a2);
}

uint64_t sub_1C1E23D40(uint64_t a1, uint64_t a2)
{
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1EB0800;
  sub_1C1EAE348();
  uint64_t v5 = sub_1C1EAE308();
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1C1DF2A98();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 104) = v9;
  *(void *)(v4 + 64) = v9;
  *(void *)(v4 + 72) = a1;
  *(void *)(v4 + 80) = a2;
  swift_bridgeObjectRetain();
  return sub_1C1EAF018();
}

id static FeedItem.predicateForNoFeedItems()()
{
  id v0 = objc_msgSend(self, sel_predicateWithValue_, 0);
  return v0;
}

uint64_t static FeedItem.predicateForSectionsBefore(section:)()
{
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1EB0800;
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1C1DF2A98();
  *(void *)(v0 + 32) = 0xD000000000000015;
  *(void *)(v0 + 40) = 0x80000001C1EB3C40;
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithShort_, (__int16)sub_1C1EAD768());
  *(void *)(v0 + 96) = sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68390);
  *(void *)(v0 + 104) = sub_1C1E25CCC(&qword_1EBB64708, (unint64_t *)&qword_1EBB68390);
  *(void *)(v0 + 72) = v1;
  return sub_1C1EAF018();
}

uint64_t static FeedItem.createFeatureStatusPredicate(with:hkType:)(uint64_t a1, void *a2)
{
  sub_1C1DF2B44(0, &qword_1EBB68158, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v44 = (char *)&v37 - v5;
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    unint64_t v38 = a2;
    unint64_t v45 = MEMORY[0x1E4FBC860];
    sub_1C1EAF548();
    uint64_t result = sub_1C1E244F0(a1);
    int64_t v8 = result;
    int v10 = v9;
    char v12 = v11 & 1;
    uint64_t v43 = a1 + 56;
    unsigned int v41 = *MEMORY[0x1E4F66F88];
    long long v40 = xmmword_1C1EB07F0;
    long long v39 = xmmword_1C1EB0800;
    uint64_t v42 = a1;
    while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(v43 + (((unint64_t)v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_14;
      }
      if (*(_DWORD *)(a1 + 36) != v10) {
        goto LABEL_15;
      }
      uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
      uint64_t v14 = *v13;
      uint64_t v15 = v13[1];
      sub_1C1DF2B44(0, &qword_1EBB68278, MEMORY[0x1E4F67030], MEMORY[0x1E4FBBE00]);
      uint64_t v16 = sub_1C1EAD668();
      uint64_t v17 = *(void *)(v16 - 8);
      unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = v40;
      (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, v41, v16);
      uint64_t v20 = sub_1C1EAD0E8();
      uint64_t v21 = (uint64_t)v44;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v44, 1, 1, v20);
      sub_1C1DFD228(0, (unint64_t *)&qword_1EBB68280, MEMORY[0x1E4F670C0], MEMORY[0x1E4FBBE00]);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v39;
      swift_bridgeObjectRetain();
      *(void *)(v22 + 32) = sub_1C1EAD7E8();
      *(void *)(v22 + 40) = 0;
      _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7keyword17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SS10Foundation0L8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(v19, v14, v15, v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C1E19C58(v21);
      swift_bridgeObjectRelease();
      sub_1C1EAF518();
      sub_1C1EAF558();
      a1 = v42;
      sub_1C1EAF568();
      sub_1C1EAF528();
      uint64_t result = sub_1C1E24594(v8, v10, v12 & 1, a1);
      int64_t v8 = result;
      int v10 = v23;
      char v12 = v24 & 1;
      if (!--v6)
      {
        sub_1C1E25D1C(result, v23, v24 & 1);
        a2 = v38;
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
    uint64_t v25 = (void *)sub_1C1EAEE88();
    swift_bridgeObjectRelease();
    unint64_t v26 = self;
    id v27 = objc_msgSend(v26, sel_orPredicateWithSubpredicates_, v25);

    if (a2)
    {
      sub_1C1DFD228(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1EB04A0;
      *(void *)(inited + 32) = a2;
      unint64_t v45 = inited;
      sub_1C1EAEEB8();
      unint64_t v29 = v45;
      id v30 = a2;
      unint64_t v31 = (void *)_s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor10objectypesSo11NSPredicateCSaySo12HKObjectTypeCG_tFZ_0(v29);
      swift_bridgeObjectRelease();
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1C1EB07E0;
      *(void *)(v32 + 32) = v27;
      *(void *)(v32 + 40) = v31;
      unint64_t v45 = v32;
      sub_1C1EAEEB8();
      id v33 = v27;
      id v34 = v31;
      unint64_t v35 = (void *)sub_1C1EAEE88();
      swift_bridgeObjectRelease();
      id v36 = objc_msgSend(v26, sel_andPredicateWithSubpredicates_, v35);

      return (uint64_t)v36;
    }
    else
    {
      return (uint64_t)v27;
    }
  }
  return result;
}

uint64_t sub_1C1E244F0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  int v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1C1E24594(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor17relevantDateRangeSo11NSPredicateC10Foundation0I8IntervalV_tFZ_0()
{
  uint64_t v0 = sub_1C1EAD318();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  unint64_t v26 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  char v24 = (char *)&v23 - v5;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v23 - v7;
  MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v23 - v9;
  uint64_t v25 = sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1EB09E0;
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v23 = sub_1C1DF2A98();
  *(void *)(v11 + 64) = v23;
  *(void *)(v11 + 32) = 0xD000000000000011;
  *(void *)(v11 + 40) = 0x80000001C1EB3CD0;
  sub_1C1EAD0C8();
  uint64_t v12 = sub_1C1EAD2C8();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v1 + 8);
  v13(v10, v0);
  uint64_t v14 = sub_1C1DF9F8C(0, &qword_1EBB66108);
  *(void *)(v11 + 96) = v14;
  uint64_t v15 = sub_1C1E25CCC((unint64_t *)&qword_1EBB66110, &qword_1EBB66108);
  *(void *)(v11 + 104) = v15;
  *(void *)(v11 + 72) = v12;
  sub_1C1EAD098();
  uint64_t v16 = sub_1C1EAD2C8();
  v13(v8, v0);
  *(void *)(v11 + 136) = v14;
  *(void *)(v11 + 144) = v15;
  *(void *)(v11 + 112) = v16;
  unint64_t v17 = v23;
  unint64_t v18 = v24;
  *(void *)(v11 + 176) = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 184) = v17;
  *(void *)(v11 + 152) = 0x746E6176656C6572;
  *(void *)(v11 + 160) = 0xEF65746144646E45;
  sub_1C1EAD0C8();
  uint64_t v19 = sub_1C1EAD2C8();
  v13(v18, v0);
  *(void *)(v11 + 216) = v14;
  *(void *)(v11 + 224) = v15;
  *(void *)(v11 + 192) = v19;
  uint64_t v20 = v26;
  sub_1C1EAD098();
  uint64_t v21 = sub_1C1EAD2C8();
  v13(v20, v0);
  *(void *)(v11 + 256) = v14;
  *(void *)(v11 + 264) = v15;
  *(void *)(v11 + 232) = v21;
  return sub_1C1EAF018();
}

uint64_t _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor10objectypesSo11NSPredicateCSaySo12HKObjectTypeCG_tFZ_0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2)
  {
LABEL_11:
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
    sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C1EB0800;
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 64) = sub_1C1DF2A98();
    *(void *)(v9 + 32) = 0x6570795461746164;
    *(void *)(v9 + 40) = 0xE900000000000073;
    sub_1C1E25D28();
    *(void *)(v9 + 96) = v10;
    *(void *)(v9 + 104) = sub_1C1E25D90();
    *(void *)(v9 + 72) = v3;
    return sub_1C1EAF018();
  }
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C1EAF548();
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1C874C6F0](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      ++v5;
      id v8 = objc_msgSend(v6, sel_code);
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, v8);

      sub_1C1EAF518();
      sub_1C1EAF558();
      sub_1C1EAF568();
      sub_1C1EAF528();
    }
    while (v2 != v5);
    uint64_t v3 = v11;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

id _s14HealthPlatform8FeedItemC0aB4CoreE020predicateForEligibleC5Items3for14sourceProfilesSo11NSPredicateCAA0C0C4KindO_SayAA13SourceProfileOGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C1EAE568();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF2B44(0, &qword_1EBB68158, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = sub_1C1EAE0F8();
  uint64_t v11 = sub_1C1EAD0E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  id v12 = _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7hkTypes17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySo12HKObjectTypeCGSg10Foundation0M8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(v10, 0, (uint64_t)v9, a2);
  swift_bridgeObjectRelease();
  sub_1C1E19C58((uint64_t)v9);
  sub_1C1DFD228(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1EB04A0;
  *(void *)(v13 + 32) = v12;
  uint64_t v48 = v13;
  sub_1C1EAEEB8();
  uint64_t v14 = self;
  id v15 = v12;
  id v16 = objc_msgSend(v14, sel_standardUserDefaults);
  unint64_t v17 = (void *)sub_1C1EAED28();
  id v18 = objc_msgSend(v16, sel_arrayForKey_, v17);

  uint64_t v19 = MEMORY[0x1E4FBB1A0];
  if (v18)
  {
    uint64_t v20 = sub_1C1EAEE98();

    uint64_t v21 = sub_1C1E73D14(v20);
    swift_bridgeObjectRelease();
    if (v21)
    {
      uint64_t v45 = v4;
      sub_1C1EAE508();
      swift_bridgeObjectRetain_n();
      uint64_t v22 = sub_1C1EAE558();
      os_log_type_t v23 = sub_1C1EAF0D8();
      if (os_log_type_enabled(v22, v23))
      {
        char v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        id v44 = v15;
        uint64_t v26 = v25;
        uint64_t v47 = v25;
        *(_DWORD *)char v24 = 136315138;
        uint64_t v27 = swift_bridgeObjectRetain();
        uint64_t v28 = MEMORY[0x1C874C0C0](v27, MEMORY[0x1E4FBB1A0]);
        uint64_t v43 = v3;
        unint64_t v30 = v29;
        swift_bridgeObjectRelease();
        uint64_t v46 = sub_1C1DF8D44(v28, v30, &v47);
        uint64_t v19 = MEMORY[0x1E4FBB1A0];
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1DD2000, v22, v23, "discoverFeedItemWhitelist key found in defaults, applying whitelist of %s", v24, 0xCu);
        swift_arrayDestroy();
        uint64_t v31 = v26;
        id v15 = v44;
        MEMORY[0x1C874D2E0](v31, -1, -1);
        MEMORY[0x1C874D2E0](v24, -1, -1);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v43);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v3);
      }
      sub_1C1EAE348();
      sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
      sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1C1EB0800;
      uint64_t v33 = sub_1C1EAE308();
      uint64_t v35 = v34;
      *(void *)(v32 + 56) = v19;
      *(void *)(v32 + 64) = sub_1C1DF2A98();
      *(void *)(v32 + 32) = v33;
      *(void *)(v32 + 40) = v35;
      sub_1C1DFD228(0, (unint64_t *)&qword_1EBB68358, v19, MEMORY[0x1E4FBB320]);
      *(void *)(v32 + 96) = v36;
      *(void *)(v32 + 104) = sub_1C1E16EBC();
      *(void *)(v32 + 72) = v21;
      id v37 = (id)sub_1C1EAF018();
      MEMORY[0x1C874C090]();
      if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C1EAEEE8();
      }
      sub_1C1EAEF18();
      sub_1C1EAEEB8();
    }
  }
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1C1EB07F0;
  *(void *)(v38 + 56) = v19;
  *(void *)(v38 + 64) = sub_1C1DF2A98();
  strcpy((char *)(v38 + 32), "hideInDiscover");
  *(unsigned char *)(v38 + 47) = -18;
  id v39 = (id)sub_1C1EAF018();
  MEMORY[0x1C874C090]();
  if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();
  long long v40 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v41 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v40);

  return v41;
}

id _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7keyword17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SS10Foundation0L8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v33 = a5;
  uint64_t v34 = a4;
  uint64_t v32 = a1;
  uint64_t v7 = sub_1C1EAD0E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF2B44(0, &qword_1EBB68158, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v31 - v15;
  uint64_t v17 = sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1EB0800;
  uint64_t v19 = MEMORY[0x1E4FBB1A0];
  *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v20 = sub_1C1DF2A98();
  *(void *)(v18 + 32) = 0x7364726F7779656BLL;
  *(void *)(v18 + 40) = 0xE800000000000000;
  *(void *)(v18 + 96) = v19;
  *(void *)(v18 + 104) = v20;
  *(void *)(v18 + 64) = v20;
  *(void *)(v18 + 72) = a2;
  *(void *)(v18 + 80) = a3;
  swift_bridgeObjectRetain();
  uint64_t v35 = v17;
  uint64_t v21 = (void *)sub_1C1EAF018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16, 1, 1, v7);
  id v22 = _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7hkTypes17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySo12HKObjectTypeCGSg10Foundation0M8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(v32, 0, (uint64_t)v16, v33);
  sub_1C1E19C58((uint64_t)v16);
  sub_1C1DFD228(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C1EB07E0;
  *(void *)(v23 + 32) = v21;
  *(void *)(v23 + 40) = v22;
  uint64_t v36 = v23;
  sub_1C1EAEEB8();
  sub_1C1E19CE4(v34, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
  {
    id v24 = v21;
    id v25 = v22;
    sub_1C1E19C58((uint64_t)v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
    id v26 = v21;
    id v27 = v22;
    _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor17relevantDateRangeSo11NSPredicateC10Foundation0I8IntervalV_tFZ_0();
    MEMORY[0x1C874C090]();
    if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C1EAEEE8();
    }
    sub_1C1EAEF18();
    sub_1C1EAEEB8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v28 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v28);

  return v29;
}

unint64_t sub_1C1E256D4()
{
  unint64_t result = qword_1EBB68290;
  if (!qword_1EBB68290)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB68290);
  }
  return result;
}

id _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds17atLeastOneKeyword14hideInDiscover14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySSGSbSgSayAA13SourceProfileOGSgtFZ_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v32 = a3;
  sub_1C1DF2B44(0, &qword_1EBB68158, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v33 = (char *)&v30 - v8;
  uint64_t v9 = *(void *)(a2 + 16);
  unint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  if (v9)
  {
    uint64_t v30 = a1;
    uint64_t v31 = a4;
    unint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1C1EAF548();
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
    sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = (uint64_t *)(a2 + 40);
    long long v34 = xmmword_1C1EB0800;
    do
    {
      uint64_t v13 = *(v12 - 1);
      uint64_t v14 = *v12;
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = v34;
      *(void *)(v15 + 56) = v11;
      unint64_t v16 = sub_1C1DF2A98();
      *(void *)(v15 + 32) = 0x7364726F7779656BLL;
      *(void *)(v15 + 40) = 0xE800000000000000;
      *(void *)(v15 + 96) = v11;
      *(void *)(v15 + 104) = v16;
      *(void *)(v15 + 64) = v16;
      *(void *)(v15 + 72) = v13;
      *(void *)(v15 + 80) = v14;
      swift_bridgeObjectRetain_n();
      sub_1C1EAF018();
      swift_bridgeObjectRelease();
      sub_1C1EAF518();
      sub_1C1EAF558();
      sub_1C1EAF568();
      sub_1C1EAF528();
      v12 += 2;
      --v9;
    }
    while (v9);
    unint64_t v17 = v35;
    a1 = v30;
    a4 = v31;
    unint64_t v10 = MEMORY[0x1E4FBC860];
  }
  else
  {
    unint64_t v17 = MEMORY[0x1E4FBC860];
  }
  unint64_t v35 = v10;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_8;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_12;
  }
LABEL_8:
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  uint64_t v18 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v18);

  MEMORY[0x1C874C090]();
  if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();
LABEL_13:
  int v21 = v32;
  uint64_t v22 = sub_1C1EAD0E8();
  uint64_t v23 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v33, 1, 1, v22);
  _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7hkTypes17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySo12HKObjectTypeCGSg10Foundation0M8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(a1, 0, v23, a4);
  uint64_t v24 = sub_1C1E19C58(v23);
  MEMORY[0x1C874C090](v24);
  if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C1EAEEE8();
  }
  sub_1C1EAEF18();
  sub_1C1EAEEB8();
  if (v21 != 2)
  {
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
    sub_1C1DF2B44(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C1EB0800;
    *(void *)(v25 + 56) = v11;
    *(void *)(v25 + 64) = sub_1C1DF2A98();
    strcpy((char *)(v25 + 32), "hideInDiscover");
    *(unsigned char *)(v25 + 47) = -18;
    id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v21 & 1);
    *(void *)(v25 + 96) = sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68390);
    *(void *)(v25 + 104) = sub_1C1E25CCC(&qword_1EBB64708, (unint64_t *)&qword_1EBB68390);
    *(void *)(v25 + 72) = v26;
    sub_1C1EAF018();
    MEMORY[0x1C874C090]();
    if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C1EAEEE8();
    }
    sub_1C1EAEF18();
    sub_1C1EAEEB8();
  }
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
  id v27 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v27);

  return v28;
}

uint64_t sub_1C1E25CCC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1DF9F8C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1E25D1C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C1E25D28()
{
  if (!qword_1EBB65D80)
  {
    sub_1C1DF9F8C(255, (unint64_t *)&qword_1EBB68390);
    unint64_t v0 = sub_1C1EAEF28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65D80);
    }
  }
}

unint64_t sub_1C1E25D90()
{
  unint64_t result = qword_1EBB65D88;
  if (!qword_1EBB65D88)
  {
    sub_1C1E25D28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65D88);
  }
  return result;
}

uint64_t sub_1C1E25DE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  swift_beginAccess();
  uint64_t v4 = sub_1C1EAD9C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1C1E25E70(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C1EAD9C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1C1E25F8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  swift_beginAccess();
  uint64_t v4 = sub_1C1EAD9C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C1E26010(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  swift_beginAccess();
  uint64_t v4 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1C1E2609C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C1E260F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C1EADA28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_context, v2);
  sub_1C1EAD9D8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C1DFE408(v1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_pluginInfo, (uint64_t)v12);
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_queue);
  sub_1C1DFE46C(v10, (uint64_t)v11);
  v12[5] = v6;
  sub_1C1E18074();
  id v7 = v6;
  uint64_t v8 = sub_1C1EAEA38();
  sub_1C1DD5CF0((uint64_t)v11);
  return v8;
}

uint64_t GenerationOperationToGeneratorAdaptor.__allocating_init(queue:pluginInfo:domain:context:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_queue) = a1;
  uint64_t v9 = v8 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  uint64_t v10 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a3, v10);
  uint64_t v11 = v8 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_context;
  uint64_t v12 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a4, v12);
  sub_1C1DFE46C(a2, v8 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_pluginInfo);
  return v8;
}

uint64_t GenerationOperationToGeneratorAdaptor.init(queue:pluginInfo:domain:context:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_queue) = a1;
  uint64_t v8 = v4 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  uint64_t v9 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a3, v9);
  uint64_t v10 = v4 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_context;
  uint64_t v11 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a4, v11);
  sub_1C1DFE46C(a2, v4 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_pluginInfo);
  return v4;
}

uint64_t GenerationOperationToGeneratorAdaptor.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  uint64_t v2 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_context;
  uint64_t v4 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_pluginInfo);

  return v0;
}

uint64_t GenerationOperationToGeneratorAdaptor.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  uint64_t v2 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_context;
  uint64_t v4 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_pluginInfo);

  return swift_deallocClassInstance();
}

uint64_t sub_1C1E26608()
{
  return sub_1C1E260F8();
}

uint64_t sub_1C1E2662C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  swift_beginAccess();
  uint64_t v4 = sub_1C1EAD9C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C1E266BC()
{
  return type metadata accessor for GenerationOperationToGeneratorAdaptor();
}

uint64_t type metadata accessor for GenerationOperationToGeneratorAdaptor()
{
  uint64_t result = qword_1EBB66B58;
  if (!qword_1EBB66B58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1E26710()
{
  uint64_t result = sub_1C1EAD9C8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C1EADA28();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for GenerationOperationToGeneratorAdaptor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GenerationOperationToGeneratorAdaptor);
}

uint64_t dispatch thunk of GenerationOperationToGeneratorAdaptor.domain.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of GenerationOperationToGeneratorAdaptor.domain.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of GenerationOperationToGeneratorAdaptor.domain.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of GenerationOperationToGeneratorAdaptor.publisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of GenerationOperationToGeneratorAdaptor.__allocating_init(queue:pluginInfo:domain:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_1C1E268B0()
{
  uint64_t result = sub_1C1EAF2A8();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_1C1E269A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  id v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LegacyFeedItemContextChangePublisher.Inner();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a2);
  sub_1C1DFE408(v2, (uint64_t)&v13);
  sub_1C1DFE408(v2 + 40, (uint64_t)v12);
  uint64_t v9 = *(void **)(v2 + 80);
  swift_allocObject();
  uint64_t v10 = sub_1C1E26D60((uint64_t)v7, &v13, v12, (uint64_t)v9);
  uint64_t v14 = v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v13 = v10;
  sub_1C1EAE788();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
}

void *sub_1C1E26B14(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  return sub_1C1E26D60(a1, a2, a3, a4);
}

uint64_t sub_1C1E26B78()
{
  unint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 192);
  if (*(void *)(v0 + v2))
  {
    uint64_t v3 = *(void *)(v0 + v2);
  }
  else
  {
    sub_1C1DFE408(v0 + v1[14], (uint64_t)v7);
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    uint64_t v5 = (void *)swift_allocObject();
    v5[2] = v1[10];
    v5[3] = v1[11];
    void v5[4] = v4;
    type metadata accessor for CommitRedirectingFeedItemContext();
    uint64_t v3 = swift_allocObject();
    sub_1C1DFE46C(v7, v3 + 16);
    *(void *)(v3 + 56) = sub_1C1E289CC;
    *(void *)(v3 + 64) = v5;
    *(void *)(v0 + v2) = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v3;
}

uint64_t sub_1C1E26CB4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    type metadata accessor for LegacyFeedItemContextChangePublisher.Inner();
    swift_getWitnessTable();
    sub_1C1EADBD8();
    return swift_release();
  }
  return result;
}

void *sub_1C1E26D60(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  int v21 = a2;
  uint64_t v19 = a1;
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(v6 + 80);
  uint64_t v20 = sub_1C1EAF2A8();
  uint64_t v8 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = (char *)v5 + *(void *)(v6 + 96);
  uint64_t v12 = *(void *)(v7 - 8);
  long long v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v13(v11, 1, 1, v7);
  uint64_t v14 = *(void *)(*v5 + 104);
  sub_1C1EADC58();
  swift_allocObject();
  *(void *)((char *)v5 + v14) = sub_1C1EADC48();
  uint64_t v15 = *(void *)(*v5 + 136);
  sub_1C1EAD608();
  swift_allocObject();
  *(void *)((char *)v5 + v15) = sub_1C1EAD5F8();
  *(void *)((char *)v5 + *(void *)(*v5 + 144)) = MEMORY[0x1E4FBC860];
  uint64_t v16 = *(void *)(*v5 + 152);
  *(void *)((char *)v5 + v16) = sub_1C1EAE7B8();
  *((unsigned char *)v5 + *(void *)(*v5 + 160)) = 0;
  *((unsigned char *)v5 + *(void *)(*v5 + 168)) = 0;
  unint64_t v17 = (void *)((char *)v5 + *(void *)(*v5 + 176));
  *unint64_t v17 = 0;
  v17[1] = 0;
  *(void *)((char *)v5 + *(void *)(*v5 + 184)) = 0;
  *(void *)((char *)v5 + *(void *)(*v5 + 192)) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v10, v19, v7);
  v13(v10, 0, 1, v7);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v11, v10, v20);
  swift_endAccess();
  sub_1C1DFE46C(v21, (uint64_t)v5 + *(void *)(*v5 + 112));
  sub_1C1DFE46C(v22, (uint64_t)v5 + *(void *)(*v5 + 120));
  *(void *)((char *)v5 + *(void *)(*v5 + 128)) = v23;
  return v5;
}

uint64_t sub_1C1E2709C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = sub_1C1EAF878();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E289D8(0, &qword_1EA2C12C8, MEMORY[0x1E4FBC420], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v22 = v1;
  sub_1C1E289D8(0, &qword_1EBB683B0, (uint64_t (*)(uint64_t))sub_1C1E28A3C, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C1EB0800;
  *(void *)(v10 + 32) = 0x6D65744964656566;
  *(void *)(v10 + 40) = 0xEF747865746E6F43;
  uint64_t v11 = (uint64_t *)((char *)v1 + *(void *)(v2 + 112));
  uint64_t v12 = v11[3];
  long long v13 = __swift_project_boxed_opaque_existential_1(v11, v12);
  *(void *)(v10 + 72) = v12;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v10 + 48));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(boxed_opaque_existential_0, v13, v12);
  *(void *)(v10 + 80) = 0x6E496E6967756C70;
  *(void *)(v10 + 88) = 0xEA00000000006F66;
  uint64_t v15 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 120));
  uint64_t v16 = v15[3];
  unint64_t v17 = __swift_project_boxed_opaque_existential_1(v15, v16);
  *(void *)(v10 + 120) = v16;
  uint64_t v18 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v10 + 96));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v18, v17, v16);
  uint64_t v19 = sub_1C1EAF868();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBC430], v3);
  swift_retain();
  return sub_1C1EAF888();
}

void sub_1C1E273EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  uint64_t v3 = sub_1C1EAF2A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v13[-v5];
  sub_1C1EAD5D8();
  uint64_t v7 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 160));
  swift_beginAccess();
  *uint64_t v7 = 1;
  uint64_t v8 = v1 + *(void *)(*(void *)v1 + 176);
  uint64_t v9 = *(void **)v8;
  *(void *)uint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v6, 1, 1, v2);
  uint64_t v10 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 40))(v10, v6, v3);
  swift_endAccess();
  uint64_t v11 = *(void *)(*(void *)v0 + 184);
  uint64_t v12 = *(void **)(v0 + v11);
  *(void *)(v0 + v11) = 0;

  sub_1C1EAD5E8();
  if (v9)
  {
    objc_msgSend(v9, sel_cancel);
  }
}

uint64_t sub_1C1E275F0()
{
  return swift_release();
}

uint64_t sub_1C1E276B8(uint64_t a1)
{
  uint64_t v2 = (unsigned char *)(a1 + *(void *)(*(void *)a1 + 168));
  swift_beginAccess();
  *uint64_t v2 = 1;
  uint64_t v3 = a1 + *(void *)(*(void *)a1 + 176);
  uint64_t v4 = *(void **)v3;
  *(void *)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;

  uint64_t v5 = *(void *)(*(void *)a1 + 184);
  uint64_t v6 = *(void **)(a1 + v5);
  *(void *)(a1 + v5) = 0;

  swift_getWitnessTable();
  return sub_1C1EADBC8();
}

uint64_t sub_1C1E277B4(void (*a1)(char *, uint64_t, uint64_t))
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t v6 = sub_1C1EAF2A8();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)v43 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v43 - v13;
  sub_1C1EAD5D8();
  uint64_t v15 = (char *)v2 + *(void *)(*v2 + 160);
  swift_beginAccess();
  if (*v15) {
    return sub_1C1EAD5E8();
  }
  uint64_t v44 = v6;
  uint64_t v45 = a1;
  uint64_t v16 = *v2;
  unint64_t v17 = (void **)((char *)v2 + *(void *)(*v2 + 176));
  if (*v17)
  {
LABEL_5:
    uint64_t v31 = (uint64_t *)((char *)v2 + *(void *)(v16 + 152));
    swift_beginAccess();
    uint64_t v32 = *v31;
    sub_1C1EAE7C8();
    if (sub_1C1EAE7A8())
    {
LABEL_17:
      swift_endAccess();
      swift_getWitnessTable();
      sub_1C1EADBC8();
      return sub_1C1EAD5E8();
    }
    sub_1C1EAE7C8();
    char v33 = sub_1C1EAE7A8();
    uint64_t v34 = sub_1C1EAE7C8();
    if ((v33 & 1) == 0)
    {
      int64_t v35 = (int64_t)v45;
      uint64_t result = sub_1C1EAE7A8();
      if ((result & 1) == 0)
      {
        if ((v32 | v35) < 0)
        {
          __break(1u);
LABEL_20:
          __break(1u);
          return result;
        }
        uint64_t v34 = v32 + v35;
        if (!__OFADD__(v32, v35))
        {
          if ((v34 & 0x8000000000000000) == 0) {
            goto LABEL_16;
          }
          goto LABEL_20;
        }
      }
      uint64_t v34 = sub_1C1EAE7C8();
    }
LABEL_16:
    *uint64_t v31 = v34;
    goto LABEL_17;
  }
  v43[0] = v4;
  sub_1C1EAD5E8();
  uint64_t v18 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 120));
  uint64_t v20 = v18[3];
  uint64_t v19 = v18[4];
  v43[1] = __swift_project_boxed_opaque_existential_1(v18, v20);
  uint64_t v21 = (void *)sub_1C1E26B78();
  v48[3] = (id)type metadata accessor for CommitRedirectingFeedItemContext();
  v48[4] = (id)sub_1C1E28914(&qword_1EBB66A28, (void (*)(uint64_t))type metadata accessor for CommitRedirectingFeedItemContext);
  v48[0] = v21;
  uint64_t v22 = (void *)(*(uint64_t (**)(id *, uint64_t, uint64_t))(v19 + 40))(v48, v20, v19);
  uint64_t v24 = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  if (v22)
  {
    v48[0] = v22;
    swift_getKeyPath();
    id v25 = v22;
    swift_retain();
    uint64_t v26 = sub_1C1EAD1B8();
    swift_release();
    swift_release();

    uint64_t v27 = *(void *)(*v2 + 184);
    id v28 = *(void **)((char *)v2 + v27);
    *(uint64_t *)((char *)v2 + v27) = v26;

    sub_1C1EAD5D8();
    id v29 = *v17;
    *unint64_t v17 = v22;
    v17[1] = v24;
    id v30 = v25;

    sub_1C1EAD5E8();
    objc_msgSend(*(id *)((char *)v2 + *(void *)(*v2 + 128)), sel_addOperation_, v30);
    sub_1C1EAD5D8();

    uint64_t v16 = *v2;
    goto LABEL_5;
  }
  uint64_t v37 = (uint64_t)v2 + *(void *)(*v2 + 96);
  swift_beginAccess();
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  uint64_t v38 = v44;
  v45(v14, v37, v44);
  sub_1C1EAD5D8();
  uint64_t v39 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v12, 1, 1, v5);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 40))(v37, v12, v38);
  swift_endAccess();
  sub_1C1EAD5E8();
  sub_1C1EADC28();
  v45(v9, (uint64_t)v14, v38);
  int v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v9, 1, v5);
  uint64_t v41 = v46;
  uint64_t v42 = v38;
  if (v40 != 1)
  {
    char v47 = 1;
    sub_1C1EAE778();
    uint64_t v41 = v39;
    uint64_t v42 = v5;
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v42);
  sub_1C1EADC38();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v14, v38);
}

uint64_t sub_1C1E27DD8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1C1EAF2A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(*(void *)v0 + 112));
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(*(void *)v0 + 120));

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t sub_1C1E27F5C()
{
  sub_1C1E27DD8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacyFeedItemContextChangePublisher.Inner()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t *assignWithCopy for LegacyFeedItemContextChangePublisher(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  uint64_t v4 = (void *)a2[10];
  uint64_t v5 = (void *)a1[10];
  a1[10] = (uint64_t)v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for LegacyFeedItemContextChangePublisher(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 80);
  id v6 = *(void **)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;

  return a1;
}

uint64_t getEnumTagSinglePayload for LegacyFeedItemContextChangePublisher(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacyFeedItemContextChangePublisher(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyFeedItemContextChangePublisher()
{
  return &type metadata for LegacyFeedItemContextChangePublisher;
}

uint64_t sub_1C1E28124(void (*a1)(char *, uint64_t, uint64_t))
{
  return sub_1C1E277B4(a1);
}

uint64_t sub_1C1E28148()
{
  return swift_retain();
}

uint64_t sub_1C1E28164@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  uint64_t v4 = sub_1C1EAF2A8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C1E28204(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  uint64_t v4 = sub_1C1EAF2A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1C1E282AC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C1E28314()
{
  return swift_retain();
}

uint64_t sub_1C1E28330()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1E28388(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 144));
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C1E283E8())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C1E28454()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 152);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1C1E284A8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 152));
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1C1E28500())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C1E28568()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 168));
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1C1E285BC(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 168));
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1C1E28614())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C1E2867C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 160));
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1C1E286D0(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 160));
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1C1E28728())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_1C1E28790()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_1C1E287AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1E2709C(a1);
}

void sub_1C1E287D0()
{
}

uint64_t sub_1C1E287F4()
{
  return sub_1C1EAE578();
}

uint64_t sub_1C1E28818(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_1C1E28820()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C1E2883C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C1E28858()
{
  return MEMORY[0x1E4FBC278];
}

char *keypath_get_selector_isFinished()
{
  return sel_isFinished;
}

id sub_1C1E28874@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isFinished);
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1C1E288A8(id *a1)
{
  id v1 = *a1;
  uint64_t result = (uint64_t)objc_msgSend(*a1, sel_isFinished);
  if (result)
  {
    uint64_t result = (uint64_t)objc_msgSend(v1, sel_isCancelled);
    if ((result & 1) == 0)
    {
      return sub_1C1E275F0();
    }
  }
  return result;
}

uint64_t sub_1C1E2890C()
{
  return sub_1C1E276B8(v0);
}

uint64_t sub_1C1E28914(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1E2895C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E28994()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C1E289CC()
{
  return sub_1C1E26CB4();
}

void sub_1C1E289D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1E28A3C()
{
  if (!qword_1EBB68350)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB68350);
    }
  }
}

void sub_1C1E28AAC()
{
  uint64_t v0 = (void *)sub_1C1EAED28();
  id v1 = objc_msgSend(self, sel_featureWithName_featureType_, v0, 1);

  qword_1EBB6ACC0 = (uint64_t)v1;
}

uint64_t sub_1C1E28B20()
{
  if (qword_1EBB680B0 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C1E863EC(634);
  qword_1EBB6ACB8 = result;
  return result;
}

uint64_t sub_1C1E28B84()
{
  uint64_t v0 = sub_1C1EADB08();
  uint64_t v1 = v0;
  unint64_t v2 = v0 & 0xC000000000000001;
  if ((v0 & 0xC000000000000001) != 0) {
    uint64_t v3 = sub_1C1EAF3B8();
  }
  else {
    uint64_t v3 = *(void *)(v0 + 16);
  }
  if (!v3)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
LABEL_22:
    v36[0] = v7;
    swift_bridgeObjectRetain();
    sub_1C1E28F68(v36);
    swift_bridgeObjectRelease();
    uint64_t v24 = v36[0];
    int64_t v25 = *(void *)(v36[0] + 16);
    if (v25)
    {
      v36[0] = MEMORY[0x1E4FBC860];
      sub_1C1DE1100(0, v25, 0);
      uint64_t v26 = 0;
      uint64_t v27 = v36[0];
      do
      {
        uint64_t v37 = *(void *)(v24 + 8 * v26 + 32);
        uint64_t v28 = sub_1C1EAF768();
        uint64_t v30 = v29;
        v36[0] = v27;
        unint64_t v32 = *(void *)(v27 + 16);
        unint64_t v31 = *(void *)(v27 + 24);
        if (v32 >= v31 >> 1)
        {
          sub_1C1DE1100(v31 > 1, v32 + 1, 1);
          uint64_t v27 = v36[0];
        }
        ++v26;
        *(void *)(v27 + 16) = v32 + 1;
        uint64_t v33 = v27 + 16 * v32;
        *(void *)(v33 + 32) = v28;
        *(void *)(v33 + 40) = v30;
      }
      while (v25 != v26);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v27 = MEMORY[0x1E4FBC860];
    }
    v36[0] = v27;
    sub_1C1E299A4();
    sub_1C1E299FC((unint64_t *)&qword_1EBB68360, (void (*)(uint64_t))sub_1C1E299A4);
    uint64_t v34 = sub_1C1EAECE8();
    swift_bridgeObjectRelease();
    return v34;
  }
  uint64_t v40 = MEMORY[0x1E4FBC860];
  sub_1C1E22014(0, v3 & ~(v3 >> 63), 0);
  if (v2)
  {
    uint64_t v4 = sub_1C1EAF358();
    unsigned __int8 v6 = 1;
  }
  else
  {
    uint64_t v4 = sub_1C1EA3818(v1);
    unsigned __int8 v6 = v8 & 1;
  }
  uint64_t v37 = v4;
  uint64_t v38 = v5;
  unsigned __int8 v39 = v6;
  if ((v3 & 0x8000000000000000) == 0)
  {
    do
    {
      while (1)
      {
        uint64_t v15 = v37;
        uint64_t v14 = v38;
        uint64_t v16 = v39;
        sub_1C1EA3584(v37, v38, v39, v1);
        uint64_t v18 = v17;
        id v19 = objc_msgSend(v17, sel_code);

        uint64_t v20 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1E22014(0, *(void *)(v20 + 16) + 1, 1);
          uint64_t v20 = v40;
        }
        unint64_t v22 = *(void *)(v20 + 16);
        unint64_t v21 = *(void *)(v20 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_1C1E22014(v21 > 1, v22 + 1, 1);
          uint64_t v20 = v40;
        }
        *(void *)(v20 + 16) = v22 + 1;
        *(void *)(v20 + 8 * v22 + 32) = v19;
        if (v2) {
          break;
        }
        uint64_t v9 = sub_1C1E24590(v15, v14, v16, v1);
        uint64_t v11 = v10;
        char v13 = v12;
        sub_1C1E25D1C(v15, v14, v16);
        uint64_t v37 = v9;
        uint64_t v38 = v11;
        unsigned __int8 v39 = v13 & 1;
        if (!--v3) {
          goto LABEL_21;
        }
      }
      if ((v16 & 1) == 0) {
        goto LABEL_31;
      }
      if (sub_1C1EAF378()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1C1E298D0();
      uint64_t v23 = (void (*)(uint64_t *, void))sub_1C1EAEF78();
      sub_1C1EAF418();
      v23(v36, 0);
      --v3;
    }
    while (v3);
LABEL_21:
    sub_1C1E25D1C(v37, v38, v39);
    swift_bridgeObjectRelease();
    uint64_t v7 = v40;
    goto LABEL_22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C1E28F68(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C1E7B704(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C1E28FD4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C1E28FD4(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C1EAF758();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = *(void *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v86 = v11;
          uint64_t v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_1C1E29660((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v86 = sub_1C1E7B674((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          os_log_t v90 = &v86[16 * v85 + 32];
          *(void *)os_log_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C1EAEF08();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  id v92 = v2;
  uint64_t v93 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 8 * v9);
      uint64_t v15 = *(void *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v16 = v14;
        while (1)
        {
          uint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      unint64_t v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        uint64_t v23 = *(void *)(v10 + 8 * v9);
        uint64_t v24 = v13;
        int64_t v25 = v22;
        do
        {
          uint64_t v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *int64_t v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C1E7B3D4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_1C1E7B3D4((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            int v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        os_log_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        unint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_1C1E29660((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)unint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1C1EAF618();
  __break(1u);
  return result;
}

uint64_t sub_1C1E29660(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      unint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          uint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (*((void *)v16 - 1) >= v20)
          {
            unint64_t v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    unint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1C1E7B4FC((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1E298D0()
{
  if (!qword_1EA2C12D0)
  {
    sub_1C1E29964();
    sub_1C1E299FC(&qword_1EBB67F48, (void (*)(uint64_t))sub_1C1E29964);
    unint64_t v0 = sub_1C1EAEF88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C12D0);
    }
  }
}

unint64_t sub_1C1E29964()
{
  unint64_t result = qword_1EBB67F40;
  if (!qword_1EBB67F40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB67F40);
  }
  return result;
}

void sub_1C1E299A4()
{
  if (!qword_1EBB68358)
  {
    unint64_t v0 = sub_1C1EAEF28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB68358);
    }
  }
}

uint64_t sub_1C1E299FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *ProfileDashboardFeedPopulationManager.__allocating_init(healthExperienceStore:healthStore:)(uint64_t a1, void *a2)
{
  uint64_t v4 = (uint64_t *)swift_allocObject();
  uint64_t v5 = (char *)v4
     + OBJC_IVAR____TtC18HealthPlatformCore37ProfileDashboardFeedPopulationManager____lazy_storage___pertinentChangeDomain;
  uint64_t v6 = sub_1C1EADD48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1C1DFE408(a1, (uint64_t)v11);
  type metadata accessor for ProfileDashboardRelevanceEngineCoordinator();
  swift_allocObject();
  id v7 = a2;
  int64_t v8 = sub_1C1E5ED58((uint64_t)v11, v7);

  sub_1C1DFE408(a1, (uint64_t)v11);
  int64_t v9 = sub_1C1E2BF28((uint64_t)v11, v7, (uint64_t)v8, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

uint64_t *ProfileDashboardFeedPopulationManager.init(healthExperienceStore:healthStore:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (char *)v3
     + OBJC_IVAR____TtC18HealthPlatformCore37ProfileDashboardFeedPopulationManager____lazy_storage___pertinentChangeDomain;
  uint64_t v7 = sub_1C1EADD48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1C1DFE408(a1, (uint64_t)v12);
  type metadata accessor for ProfileDashboardRelevanceEngineCoordinator();
  swift_allocObject();
  id v8 = a2;
  int64_t v9 = sub_1C1E5ED58((uint64_t)v12, v8);

  sub_1C1DFE408(a1, (uint64_t)v12);
  uint64_t v10 = sub_1C1E2BF28((uint64_t)v12, v8, (uint64_t)v9, v3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v10;
}

uint64_t sub_1C1E29C58@<X0>(uint64_t a1@<X8>)
{
  sub_1C1E2CDB0(0, (unint64_t *)&qword_1EBB660C0, MEMORY[0x1E4F672B0], MEMORY[0x1E4FBB718]);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  id v8 = &v13[-v7];
  uint64_t v9 = v1
     + OBJC_IVAR____TtC18HealthPlatformCore37ProfileDashboardFeedPopulationManager____lazy_storage___pertinentChangeDomain;
  swift_beginAccess();
  sub_1C1E2CC88(v9, (uint64_t)v8);
  uint64_t v10 = sub_1C1EADD48();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1C1E2CF9C((uint64_t)v8, (unint64_t *)&qword_1EBB660C0, MEMORY[0x1E4F672B0]);
  sub_1C1E29E70(v1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1C1E2CD1C((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1C1E29E70(uint64_t a1)
{
  uint64_t v1 = *(void *)((*(uint64_t (**)(void))(*(void *)a1 + 232))() + 16);
  if (v1)
  {
    for (uint64_t i = 0; i != v1; ++i)
    {
      uint64_t v3 = sub_1C1EAE0F8();
      sub_1C1E588EC(v3);
    }
  }
  swift_bridgeObjectRelease();
  sub_1C1E2CF50(0, (unint64_t *)&qword_1EBB68280, MEMORY[0x1E4F670C0], MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1EB07F0;
  *(void *)(v4 + 32) = sub_1C1EAF058();
  return sub_1C1EADCC8();
}

void *sub_1C1E29FA0()
{
  return &unk_1F1D64F70;
}

uint64_t sub_1C1E29FAC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t sub_1C1E29FD0(uint64_t a1)
{
  uint64_t v2 = sub_1C1EADD48();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v13 - v7;
  char v9 = sub_1C1EADD28();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, a1, v2);
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    char v10 = 0;
  }
  else
  {
    sub_1C1E29C58((uint64_t)v6);
    char v10 = sub_1C1EADD38();
    uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
    v11(v6, v2);
    v11(v8, v2);
  }
  return v10 & 1;
}

uint64_t sub_1C1E2A140(unint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  id v8 = v4 + 8;
  uint64_t v10 = v4[11];
  uint64_t v9 = v4[12];
  __swift_project_boxed_opaque_existential_1(v8, v10);
  unint64_t v11 = RelevanceEngineCoordinator.sortedElements(for:)(5, v10, v9);
  id v12 = objc_msgSend(a2, sel_profileIdentifier);
  sub_1C1E2A220(a1, v11, v12);

  uint64_t v13 = swift_bridgeObjectRelease();
  return a4(v13);
}

uint64_t sub_1C1E2A220(unint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  unint64_t v235 = a1;
  uint64_t v7 = sub_1C1EAD368();
  unint64_t v233 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v208 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C1EAE568();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  v224 = (char *)v208 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  v216 = (char *)v208 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  v221 = (char *)v208 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v227 = (char *)v208 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  v228 = (char *)v208 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)v208 - v22;
  sub_1C1EAE508();
  id v24 = a3;
  swift_bridgeObjectRetain_n();
  id v25 = v24;
  uint64_t v26 = sub_1C1EAE558();
  LODWORD(isa) = sub_1C1EAF0D8();
  BOOL v27 = os_log_type_enabled(v26, (os_log_type_t)isa);
  v231 = (a2 >> 62);
  uint64_t v232 = a2;
  uint64_t v219 = v7;
  uint64_t v220 = v3;
  v222 = v9;
  uint64_t v229 = v10;
  uint64_t v234 = v11;
  if (v27)
  {
    os_log_t v226 = v26;
    unint64_t v28 = a2 >> 62;
    uint64_t v29 = swift_slowAlloc();
    v225 = swift_slowAlloc();
    os_log_t v237 = v225;
    *(_DWORD *)uint64_t v29 = 136315650;
    uint64_t v30 = sub_1C1EAF908();
    uint64_t v236 = sub_1C1DF8D44(v30, v31, (uint64_t *)&v237);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    id v32 = [v25 (SEL)0x1F6A8A898];
    sub_1C1EAD348();

    sub_1C1E2CE14((unint64_t *)&qword_1EBB66150, MEMORY[0x1E4F27990]);
    uint64_t v33 = sub_1C1EAF768();
    unint64_t v35 = v34;
    (*(void (**)(char *, uint64_t))(v233 + 8))(v9, v7);
    uint64_t v236 = sub_1C1DF8D44(v33, v35, (uint64_t *)&v237);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 2050;
    if (v28)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1C1EAF638();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v36 = *(void *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v37 = v234;
    swift_bridgeObjectRelease();
    uint64_t v236 = v36;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    os_log_t v38 = v226;
    _os_log_impl(&dword_1C1DD2000, v226, (os_log_type_t)isa, "[%s]_%s: %{public}ld REElements retrieved from RelevanceEngine for profile dashboard", (uint8_t *)v29, 0x20u);
    uint64_t v39 = v225;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v39, -1, -1);
    MEMORY[0x1C874D2E0](v29, -1, -1);

    isa = *(NSObject **)(v37 + 8);
    ((void (*)(char *, uint64_t))isa)(v23, v229);
    uint64_t v4 = v220;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    isa = *(NSObject **)(v11 + 8);
    ((void (*)(char *, uint64_t))isa)(v23, v10);
  }
  id v223 = static FeedPopulationManaging.fetchAndValidateFeedToPopulate(kind:managedObjectContext:associatedProfileIdentifier:)(5, (void *)v235, v25, v4);
  sub_1C1E2CF50(0, (unint64_t *)&qword_1EBB68280, MEMORY[0x1E4F670C0], MEMORY[0x1E4FBBE00]);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1C1EB07F0;
  *(void *)(v40 + 32) = v25;
  id v41 = v25;
  unint64_t v42 = NSManagedObjectContext.getEligibleFeedItems(for:sourceProfiles:)(5, v40);
  swift_bridgeObjectRelease();
  unint64_t v43 = v228;
  sub_1C1EAE508();
  id v44 = v41;
  swift_bridgeObjectRetain_n();
  uint64_t v45 = v44;
  uint64_t v46 = sub_1C1EAE558();
  int v47 = sub_1C1EAF0D8();
  BOOL v48 = os_log_type_enabled(v46, (os_log_type_t)v47);
  unint64_t v49 = v42 >> 62;
  unint64_t v235 = v42;
  v225 = (v42 >> 62);
  if (v48)
  {
    LODWORD(v226) = v47;
    unint64_t v42 = swift_slowAlloc();
    uint64_t v218 = swift_slowAlloc();
    os_log_t v237 = (os_log_t)v218;
    *(_DWORD *)unint64_t v42 = 136315906;
    uint64_t v50 = sub_1C1EAF908();
    uint64_t v236 = sub_1C1DF8D44(v50, v51, (uint64_t *)&v237);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2080;
    id v52 = [v45 identifier];
    uint64_t v53 = (char *)v222;
    sub_1C1EAD348();

    sub_1C1E2CE14((unint64_t *)&qword_1EBB66150, MEMORY[0x1E4F27990]);
    uint64_t v54 = v219;
    uint64_t v55 = sub_1C1EAF768();
    unint64_t v57 = v56;
    (*(void (**)(char *, uint64_t))(v233 + 8))(v53, v54);
    uint64_t v236 = sub_1C1DF8D44(v55, v57, (uint64_t *)&v237);
    sub_1C1EAF2C8();

    uint64_t v58 = v45;
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 22) = 2082;
    uint64_t v59 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    uint64_t v236 = sub_1C1DF8D44(v59, v60, (uint64_t *)&v237);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 32) = 2050;
    if (v49)
    {
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_1C1EAF638();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v61 = *(void *)((v235 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t i = v229;
    swift_bridgeObjectRelease();
    uint64_t v236 = v61;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v46, (os_log_type_t)v226, "[%s]_%s: Picking elements for a new %{public}s feed from %{public}ld Core Data elements", (uint8_t *)v42, 0x2Au);
    uint64_t v63 = v218;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v63, -1, -1);
    MEMORY[0x1C874D2E0](v42, -1, -1);

    ((void (*)(char *, uint64_t))isa)(v228, i);
    uint64_t v64 = 0x1E6443000;
    uint64_t v65 = v58;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    int v66 = v43;
    uint64_t i = v229;
    ((void (*)(char *, uint64_t))isa)(v66, v229);
    uint64_t v64 = (uint64_t)&off_1E6443000;
    uint64_t v65 = v45;
  }
  if (v231) {
    goto LABEL_93;
  }
  uint64_t v67 = *(void *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v68 = (char *)MEMORY[0x1E4FBC860];
    if (v67)
    {
      os_log_t v237 = (os_log_t)MEMORY[0x1E4FBC860];
      sub_1C1DE1100(0, v67 & ~(v67 >> 63), 0);
      if (v67 < 0)
      {
        __break(1u);
        goto LABEL_97;
      }
      uint64_t v69 = 0;
      uint64_t v70 = (uint64_t)v237;
      uint64_t v71 = v232;
      unint64_t v72 = v232 & 0xC000000000000001;
      do
      {
        if (v72) {
          id v73 = (id)MEMORY[0x1C874C6F0](v69);
        }
        else {
          id v73 = *(id *)(v71 + 8 * v69 + 32);
        }
        uint64_t v74 = v73;
        id v75 = [v73 *(SEL *)(v64 + 2496)];
        uint64_t v76 = sub_1C1EAED38();
        uint64_t v78 = v77;

        os_log_t v237 = (os_log_t)v70;
        unint64_t v80 = *(void *)(v70 + 16);
        unint64_t v79 = *(void *)(v70 + 24);
        if (v80 >= v79 >> 1)
        {
          sub_1C1DE1100(v79 > 1, v80 + 1, 1);
          uint64_t v70 = (uint64_t)v237;
        }
        ++v69;
        *(void *)(v70 + 16) = v80 + 1;
        uint64_t v81 = v70 + 16 * v80;
        *(void *)(v81 + 32) = v76;
        *(void *)(v81 + 40) = v78;
        uint64_t v71 = v232;
        uint64_t v64 = (uint64_t)&off_1E6443000;
      }
      while (v67 != v69);
      uint64_t i = v229;
    }
    uint64_t v82 = v227;
    sub_1C1EAE508();
    uint64_t v83 = v65;
    swift_bridgeObjectRetain();
    uint64_t v84 = sub_1C1EAE558();
    os_log_type_t v85 = sub_1C1EAF0D8();
    int v86 = v85;
    BOOL v87 = os_log_type_enabled(v84, v85);
    v228 = v83;
    if (v87)
    {
      uint64_t v88 = swift_slowAlloc();
      LODWORD(isa) = v86;
      uint64_t v89 = v88;
      os_log_t v226 = (os_log_t)swift_slowAlloc();
      os_log_t v237 = v226;
      *(_DWORD *)uint64_t v89 = 136315906;
      uint64_t v90 = sub_1C1EAF908();
      uint64_t v236 = sub_1C1DF8D44(v90, v91, (uint64_t *)&v237);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v89 + 12) = 2080;
      id v92 = [v83 (SEL)(v64 + 2200)];
      uint64_t v93 = (char *)v222;
      sub_1C1EAD348();

      sub_1C1E2CE14((unint64_t *)&qword_1EBB66150, MEMORY[0x1E4F27990]);
      uint64_t v94 = v219;
      uint64_t v95 = sub_1C1EAF768();
      unint64_t v97 = v96;
      uint64_t v98 = v94;
      uint64_t i = v229;
      (*(void (**)(char *, uint64_t))(v233 + 8))(v93, v98);
      uint64_t v236 = sub_1C1DF8D44(v95, v97, (uint64_t *)&v237);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v89 + 22) = 2082;
      uint64_t v99 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      uint64_t v236 = sub_1C1DF8D44(v99, v100, (uint64_t *)&v237);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v89 + 32) = 2080;
      uint64_t v101 = swift_bridgeObjectRetain();
      uint64_t v102 = MEMORY[0x1C874C0C0](v101, MEMORY[0x1E4FBB1A0]);
      unint64_t v104 = v103;
      swift_bridgeObjectRelease();
      uint64_t v236 = sub_1C1DF8D44(v102, v104, (uint64_t *)&v237);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v84, (os_log_type_t)isa, "[%s]_%s: Picking feed of kind %{public}s from these ranked identifiers (the rest were dropped): %s", (uint8_t *)v89, 0x2Au);
      os_log_t v105 = v226;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v105, -1, -1);
      MEMORY[0x1C874D2E0](v89, -1, -1);

      uint64_t v65 = v234;
      isa = *(NSObject **)(v234 + 8);
      ((void (*)(char *, uint64_t))isa)(v227, i);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v65 = v234;
      ((void (*)(char *, uint64_t))isa)(v82, i);
    }
    uint64_t v64 = v235;
    uint64_t v68 = v224;
    if (v231) {
      break;
    }
    id v106 = *(NSObject **)((v232 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v42 = v233;
    if (!v106) {
      goto LABEL_68;
    }
LABEL_30:
    os_log_t v226 = v106;
    if (!v225)
    {
      uint64_t v234 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_32;
    }
LABEL_97:
    swift_bridgeObjectRetain();
    uint64_t v234 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
LABEL_32:
    uint64_t v108 = 0;
    v227 = (char *)(v232 & 0xC000000000000001);
    uint64_t v215 = v232 & 0xFFFFFFFFFFFFFF8;
    uint64_t v214 = v232 + 32;
    unint64_t v233 = v64 & 0xC000000000000001;
    v225 = v65 + 1;
    v213 = &v237;
    v217 = (void (**)(void *, uint64_t))(v42 + 8);
    *(void *)&long long v107 = 136315650;
    long long v212 = v107;
    uint64_t v211 = MEMORY[0x1E4FBC840] + 8;
    *(void *)&long long v107 = 136315906;
    long long v209 = v107;
    while (1)
    {
      if (v227)
      {
        id v109 = MEMORY[0x1C874C6F0](v108, v232);
      }
      else
      {
        if ((unint64_t)v108 >= *(void *)(v215 + 16)) {
          goto LABEL_92;
        }
        id v109 = *(id *)(v214 + 8 * (void)v108);
      }
      uint64_t v65 = v109;
      if (__OFADD__(v108, 1)) {
        break;
      }
      v231 = ((char *)&v108->isa + 1);
      if (v234)
      {
        swift_bridgeObjectRetain();
        uint64_t i = 4;
        while (1)
        {
          if (v233) {
            id v110 = (id)MEMORY[0x1C874C6F0](i - 4, v64);
          }
          else {
            id v110 = *(id *)(v64 + 8 * i);
          }
          id v111 = v110;
          uint64_t v112 = i - 3;
          if (__OFADD__(i - 4, 1))
          {
            __break(1u);
LABEL_88:
            __break(1u);
            goto LABEL_89;
          }
          id v113 = objc_msgSend(v110, sel_uniqueIdentifier);
          uint64_t v114 = sub_1C1EAED38();
          uint64_t v116 = v115;

          id v117 = [v65 identifier];
          uint64_t v118 = sub_1C1EAED38();
          unint64_t v42 = v119;

          if (v114 == v118 && v116 == v42)
          {
            uint64_t v64 = v235;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_57;
          }
          char v121 = sub_1C1EAF7A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v121) {
            break;
          }

          ++i;
          uint64_t v64 = v235;
          if (v112 == v234)
          {
            swift_bridgeObjectRelease();
            uint64_t i = v229;
            uint64_t v68 = v224;
            goto LABEL_53;
          }
        }
        uint64_t v64 = v235;
LABEL_57:
        id v139 = (char *)v222;
        swift_bridgeObjectRelease();
        objc_msgSend(v111, sel_setSortOrder_, v108);
        char v140 = sub_1C1EAE148();
        id v141 = v216;
        id v142 = v221;
        id v143 = v228;
        if (((1 << v140) & 0x17) != 0)
        {
          uint64_t v144 = sub_1C1E7A03C();
          if (!v144)
          {
            sub_1C1EAE508();
            id v145 = v143;
            id v146 = v111;
            id v147 = v145;
            id v148 = v146;
            double v149 = sub_1C1EAE558();
            os_log_type_t v150 = sub_1C1EAF0D8();
            int v151 = v150;
            if (os_log_type_enabled(v149, v150))
            {
              uint64_t v152 = swift_slowAlloc();
              uint64_t v218 = swift_slowAlloc();
              os_log_t v237 = (os_log_t)v218;
              *(_DWORD *)uint64_t v152 = v212;
              LODWORD(v210) = v151;
              uint64_t v153 = sub_1C1EAF908();
              v154 = v139;
              uint64_t v236 = sub_1C1DF8D44(v153, v155, (uint64_t *)&v237);
              sub_1C1EAF2C8();
              swift_bridgeObjectRelease();
              *(_WORD *)(v152 + 12) = 2080;
              v208[1] = v152 + 14;
              id v156 = objc_msgSend(v147, sel_identifier);
              sub_1C1EAD348();

              sub_1C1E2CE14((unint64_t *)&qword_1EBB66150, MEMORY[0x1E4F27990]);
              uint64_t v157 = v219;
              uint64_t v158 = sub_1C1EAF768();
              unint64_t v160 = v159;
              (*v217)(v154, v157);
              uint64_t v236 = sub_1C1DF8D44(v158, v160, (uint64_t *)&v237);
              sub_1C1EAF2C8();

              swift_bridgeObjectRelease();
              *(_WORD *)(v152 + 22) = 2080;
              id v161 = objc_msgSend(v148, sel_uniqueIdentifier);
              uint64_t v162 = sub_1C1EAED38();
              unint64_t v42 = v163;

              uint64_t v236 = sub_1C1DF8D44(v162, v42, (uint64_t *)&v237);
              sub_1C1EAF2C8();

              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1C1DD2000, v149, (os_log_type_t)v210, "[%s]_%s: Section not found for feedItem %s", (uint8_t *)v152, 0x20u);
              uint64_t v164 = v218;
              swift_arrayDestroy();
              MEMORY[0x1C874D2E0](v164, -1, -1);
              uint64_t v165 = v152;
              uint64_t v64 = v235;
              MEMORY[0x1C874D2E0](v165, -1, -1);

              id v166 = v216;
            }
            else
            {

              id v166 = v141;
            }
            uint64_t i = v229;
            ((void (*)(char *, uint64_t))isa)(v166, v229);
            objc_msgSend(v148, sel_setFeedSection_, 0);
            sub_1C1EAE348();
            objc_msgSend(v148, sel_setSectionSortOrder_, sub_1C1EAE288());

            uint64_t v68 = v224;
            goto LABEL_34;
          }
        }
        else
        {
          sub_1C1EAE148();
          uint64_t v144 = sub_1C1E7BC78();
        }
        id v167 = (void *)v144;
        sub_1C1EAE508();
        id v168 = v143;
        id v169 = v167;
        id v170 = v111;
        id v171 = v168;
        id v172 = v169;
        id v173 = v170;
        id v174 = sub_1C1EAE558();
        os_log_type_t v175 = sub_1C1EAF0D8();
        unint64_t v42 = v175;
        if (os_log_type_enabled(v174, v175))
        {
          uint64_t v176 = swift_slowAlloc();
          LODWORD(v218) = v42;
          unint64_t v42 = v176;
          isa = swift_slowAlloc();
          os_log_t v237 = isa;
          *(_DWORD *)unint64_t v42 = v209;
          os_log_t v210 = v174;
          uint64_t v177 = sub_1C1EAF908();
          uint64_t v236 = sub_1C1DF8D44(v177, v178, (uint64_t *)&v237);
          sub_1C1EAF2C8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v42 + 12) = 2080;
          id v179 = objc_msgSend(v171, sel_identifier);
          sub_1C1EAD348();

          sub_1C1E2CE14((unint64_t *)&qword_1EBB66150, MEMORY[0x1E4F27990]);
          uint64_t v180 = v219;
          uint64_t v181 = sub_1C1EAF768();
          v182 = v139;
          unint64_t v184 = v183;
          (*v217)(v182, v180);
          uint64_t v236 = sub_1C1DF8D44(v181, v184, (uint64_t *)&v237);
          sub_1C1EAF2C8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v42 + 22) = 2080;
          id v185 = objc_msgSend(v172, sel_identifier);
          uint64_t v186 = sub_1C1EAED38();
          unint64_t v188 = v187;

          uint64_t v236 = sub_1C1DF8D44(v186, v188, (uint64_t *)&v237);
          sub_1C1EAF2C8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v42 + 32) = 2080;
          id v189 = objc_msgSend(v173, sel_uniqueIdentifier);
          uint64_t v190 = sub_1C1EAED38();
          unint64_t v192 = v191;

          uint64_t v236 = sub_1C1DF8D44(v190, v192, (uint64_t *)&v237);
          sub_1C1EAF2C8();

          swift_bridgeObjectRelease();
          os_log_t v193 = v210;
          _os_log_impl(&dword_1C1DD2000, v210, (os_log_type_t)v218, "[%s]_%s: Section %s found for feedItem %s", (uint8_t *)v42, 0x2Au);
          v194 = isa;
          swift_arrayDestroy();
          MEMORY[0x1C874D2E0](v194, -1, -1);
          MEMORY[0x1C874D2E0](v42, -1, -1);

          uint64_t i = v229;
          isa = v225->isa;
          ((void (*)(char *, uint64_t))isa)(v221, v229);
        }
        else
        {

          v195 = v142;
          uint64_t i = v229;
          ((void (*)(char *, uint64_t))isa)(v195, v229);
        }
        objc_msgSend(v172, sel_addFeedItemsObject_, v173);

        uint64_t v68 = v224;
        uint64_t v64 = v235;
      }
      else
      {
LABEL_53:
        sub_1C1EAE508();
        id v122 = v228;
        id v123 = v65;
        unint64_t v42 = v122;
        unint64_t v124 = v123;
        id v125 = v68;
        uint64_t v126 = sub_1C1EAE558();
        os_log_type_t v127 = sub_1C1EAF0D8();
        if (os_log_type_enabled(v126, v127))
        {
          uint64_t v128 = swift_slowAlloc();
          id v129 = (void *)swift_slowAlloc();
          uint64_t v218 = swift_slowAlloc();
          os_log_t v237 = (os_log_t)v218;
          *(_DWORD *)uint64_t v128 = v212;
          uint64_t v130 = sub_1C1EAF908();
          *(void *)(v128 + 4) = sub_1C1DF8D44(v130, v131, (uint64_t *)&v237);
          swift_bridgeObjectRelease();
          *(_WORD *)(v128 + 12) = 2080;
          id v132 = objc_msgSend((id)v42, sel_identifier);
          uint64_t v65 = v222;
          sub_1C1EAD348();

          sub_1C1E2CE14((unint64_t *)&qword_1EBB66150, MEMORY[0x1E4F27990]);
          uint64_t v133 = v219;
          uint64_t v134 = sub_1C1EAF768();
          unint64_t v136 = v135;
          (*v217)(v65, v133);
          *(void *)(v128 + 14) = sub_1C1DF8D44(v134, v136, (uint64_t *)&v237);

          uint64_t i = v229;
          swift_bridgeObjectRelease();
          *(_WORD *)(v128 + 22) = 2112;
          *(void *)(v128 + 24) = v124;
          *id v129 = v124;

          _os_log_impl(&dword_1C1DD2000, v126, v127, "[%s]_%s: Item %@ was returned by the RelevanceEngine but is now deleted", (uint8_t *)v128, 0x20u);
          sub_1C1E1699C();
          swift_arrayDestroy();
          MEMORY[0x1C874D2E0](v129, -1, -1);
          uint64_t v137 = v218;
          swift_arrayDestroy();
          MEMORY[0x1C874D2E0](v137, -1, -1);
          uint64_t v138 = v128;
          uint64_t v64 = v235;
          MEMORY[0x1C874D2E0](v138, -1, -1);

          uint64_t v68 = v224;
          ((void (*)(char *, uint64_t))isa)(v224, i);
        }
        else
        {

          ((void (*)(char *, uint64_t))isa)(v125, i);
          uint64_t v68 = v125;
        }
      }
LABEL_34:
      uint64_t v108 = v231;
      if (v231 == v226) {
        goto LABEL_68;
      }
    }
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  id v106 = sub_1C1EAF638();
  unint64_t v42 = v233;
  if (v106) {
    goto LABEL_30;
  }
LABEL_68:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v196 = objc_msgSend(v223, sel_sections);
  sub_1C1EAD688();
  unint64_t v197 = sub_1C1EAF048();

  uint64_t v234 = v197;
  if (v197 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v198 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    if (!v198) {
      goto LABEL_95;
    }
LABEL_70:
    uint64_t v64 = sub_1C1EAE348();
    unint64_t v42 = 0;
    unint64_t v235 = v234 & 0xC000000000000001;
    uint64_t v232 = v234 + 32;
    unint64_t v233 = v234 & 0xFFFFFFFFFFFFFF8;
    uint64_t v199 = v198;
    while (1)
    {
      if (v235)
      {
        v200 = MEMORY[0x1C874C6F0](v42, v234);
      }
      else
      {
        if (v42 >= *(void *)(v233 + 16)) {
          goto LABEL_91;
        }
        v200 = *(id *)(v232 + 8 * v42);
      }
      uint64_t v65 = v200;
      if (__OFADD__(v42++, 1)) {
        goto LABEL_88;
      }
      id v202 = [v200 feedItems];
      unint64_t v203 = sub_1C1EAF048();

      if (v203 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v204 = sub_1C1EAF638();
        swift_bridgeObjectRelease();
        if (!v204) {
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v204 = *(void *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v204) {
          goto LABEL_71;
        }
      }
      if (v204 < 1) {
        goto LABEL_90;
      }
      for (uint64_t i = 0; i != v204; ++i)
      {
        if ((v203 & 0xC000000000000001) != 0) {
          id v205 = (id)MEMORY[0x1C874C6F0](i, v203);
        }
        else {
          id v205 = *(id *)(v203 + 8 * i + 32);
        }
        v206 = v205;
        objc_msgSend(v205, sel_setSectionSortOrder_, i);
      }
LABEL_71:

      swift_bridgeObjectRelease();
      if (v42 == v199) {
        goto LABEL_95;
      }
    }
  }
  uint64_t v198 = *(void *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v198) {
    goto LABEL_70;
  }
LABEL_95:

  return swift_bridgeObjectRelease();
}

void ProfileDashboardFeedPopulationManager.__allocating_init(healthExperienceStore:healthStore:relevanceEngineCoordinator:)()
{
}

void ProfileDashboardFeedPopulationManager.init(healthExperienceStore:healthStore:relevanceEngineCoordinator:)()
{
}

uint64_t sub_1C1E2BD7C()
{
  return sub_1C1E2CF9C(v0+ OBJC_IVAR____TtC18HealthPlatformCore37ProfileDashboardFeedPopulationManager____lazy_storage___pertinentChangeDomain, (unint64_t *)&qword_1EBB660C0, MEMORY[0x1E4F672B0]);
}

uint64_t ProfileDashboardFeedPopulationManager.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  swift_release();
  sub_1C1E2CF9C(v0+ OBJC_IVAR____TtC18HealthPlatformCore37ProfileDashboardFeedPopulationManager____lazy_storage___pertinentChangeDomain, (unint64_t *)&qword_1EBB660C0, MEMORY[0x1E4F672B0]);
  return v0;
}

uint64_t ProfileDashboardFeedPopulationManager.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  swift_release();
  sub_1C1E2CF9C(v0+ OBJC_IVAR____TtC18HealthPlatformCore37ProfileDashboardFeedPopulationManager____lazy_storage___pertinentChangeDomain, (unint64_t *)&qword_1EBB660C0, MEMORY[0x1E4F672B0]);
  return swift_deallocClassInstance();
}

uint64_t sub_1C1E2BEE0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t sub_1C1E2BF04()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t *sub_1C1E2BF28(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v76 = a1;
  uint64_t v61 = *a4;
  uint64_t v8 = sub_1C1EAE568();
  uint64_t v74 = *(void *)(v8 - 8);
  uint64_t v75 = v8;
  MEMORY[0x1F4188790](v8);
  id v73 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C1E2CDB0(0, &qword_1EBB67F50, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v62 = (char *)&v57 - v11;
  sub_1C1E17298();
  uint64_t v66 = v12;
  uint64_t v67 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v63 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E17B94();
  uint64_t v69 = v14;
  uint64_t v70 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v64 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E17638();
  uint64_t v17 = *(void (***)(void, void))(v16 - 8);
  uint64_t v71 = v16;
  unint64_t v72 = v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v68 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1C1EAF188();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1C1EAF148();
  MEMORY[0x1F4188790](v21);
  uint64_t v22 = sub_1C1EAEBD8();
  MEMORY[0x1F4188790](v22 - 8);
  v79[3] = type metadata accessor for ProfileDashboardRelevanceEngineCoordinator();
  v79[4] = &off_1F1D669A0;
  v79[0] = a3;
  sub_1C1E16FF0();
  swift_allocObject();
  a4[14] = sub_1C1EAE808();
  a4[15] = 0;
  sub_1C1DFE408(a1, (uint64_t)(a4 + 2));
  a4[7] = (uint64_t)a2;
  uint64_t v57 = sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68388);
  id v23 = a2;
  id v58 = v23;
  *(void *)&v78[0] = sub_1C1EAF908();
  *((void *)&v78[0] + 1) = v24;
  sub_1C1EAEDB8();
  id v25 = objc_msgSend(v23, sel_profileIdentifier);
  id v26 = objc_msgSend(v25, sel_description);
  sub_1C1EAED38();

  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  sub_1C1EAEB98();
  *(void *)&v78[0] = MEMORY[0x1E4FBC860];
  sub_1C1E2CE14(&qword_1EBB68380, MEMORY[0x1E4FBCC10]);
  sub_1C1E2CDB0(0, &qword_1EBB68368, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C1DE8930();
  sub_1C1EAF328();
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v20, *MEMORY[0x1E4FBCC58], v60);
  a4[13] = sub_1C1EAF1A8();
  sub_1C1DFE408((uint64_t)v79, (uint64_t)(a4 + 8));
  BOOL v27 = (void *)a4[13];
  *(void *)&v78[0] = a4[14];
  *(void *)&v77[0] = v27;
  uint64_t v28 = sub_1C1EAF158();
  uint64_t v29 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v62, 1, 1, v28);
  sub_1C1E2CE14(&qword_1EBB650A8, (void (*)(uint64_t))sub_1C1E16FF0);
  sub_1C1E2CE5C();
  swift_retain();
  id v30 = v27;
  unint64_t v31 = v63;
  sub_1C1EAEAE8();
  sub_1C1E2CF9C(v29, &qword_1EBB67F50, v65);

  swift_release();
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v58;
  uint64_t v34 = v61;
  *(void *)(v32 + 16) = v58;
  *(void *)(v32 + 24) = v34;
  sub_1C1E2CE14(&qword_1EBB64FC0, (void (*)(uint64_t))sub_1C1E17298);
  id v35 = v33;
  uint64_t v36 = v64;
  uint64_t v37 = v66;
  sub_1C1EAEA18();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v31, v37);
  uint64_t v38 = swift_allocObject();
  swift_weakInit();
  sub_1C1DFE408(v76, (uint64_t)v78);
  sub_1C1DFE408((uint64_t)v79, (uint64_t)v77);
  uint64_t v39 = (void *)swift_allocObject();
  sub_1C1DFE46C(v78, (uint64_t)(v39 + 2));
  sub_1C1DFE46C(v77, (uint64_t)(v39 + 7));
  v39[12] = v38;
  v39[13] = v35;
  v39[14] = v34;
  sub_1C1E17B00();
  sub_1C1E2CE14(&qword_1EBB64DA0, (void (*)(uint64_t))sub_1C1E17B94);
  sub_1C1E2CE14(&qword_1EBB653A8, (void (*)(uint64_t))sub_1C1E17B00);
  id v40 = v35;
  id v41 = v68;
  uint64_t v42 = v69;
  sub_1C1EAEB68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v36, v42);
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v40;
  *(void *)(v43 + 24) = v34;
  sub_1C1E2CE14(&qword_1EBB653D0, (void (*)(uint64_t))sub_1C1E17638);
  id v44 = v40;
  uint64_t v45 = v71;
  uint64_t v46 = sub_1C1EAEB48();
  swift_release();
  ((void (**)(char *, uint64_t))v72)[1](v41, v45);
  a4[15] = v46;
  swift_release();
  int v47 = v73;
  sub_1C1EAE508();
  swift_retain_n();
  BOOL v48 = v47;
  unint64_t v49 = sub_1C1EAE558();
  os_log_type_t v50 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v49, v50))
  {
    unint64_t v51 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    unint64_t v72 = (void (**)(void, void))v44;
    uint64_t v53 = v52;
    *(void *)&v78[0] = v52;
    *(_DWORD *)unint64_t v51 = 136446210;
    *(void *)&v77[0] = a4;
    type metadata accessor for BaseFeedPopulationManager();
    swift_retain();
    uint64_t v54 = sub_1C1EAED68();
    *(void *)&v77[0] = sub_1C1DF8D44(v54, v55, (uint64_t *)v78);
    sub_1C1EAF2C8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v49, v50, "Ready: %{public}s", v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v53, -1, -1);
    MEMORY[0x1C874D2E0](v51, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  __swift_destroy_boxed_opaque_existential_1(v76);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v48, v75);
  return a4;
}

uint64_t sub_1C1E2CADC()
{
  return type metadata accessor for ProfileDashboardFeedPopulationManager();
}

uint64_t type metadata accessor for ProfileDashboardFeedPopulationManager()
{
  uint64_t result = qword_1EBB651C8;
  if (!qword_1EBB651C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C1E2CB30()
{
  sub_1C1E2CDB0(319, (unint64_t *)&qword_1EBB660C0, MEMORY[0x1E4F672B0], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ProfileDashboardFeedPopulationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProfileDashboardFeedPopulationManager);
}

uint64_t dispatch thunk of ProfileDashboardFeedPopulationManager.__allocating_init(healthExperienceStore:healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of ProfileDashboardFeedPopulationManager.managedFeedKinds.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ProfileDashboardFeedPopulationManager.managedLiveFeedKinds.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of ProfileDashboardFeedPopulationManager.isChangeDomainPertinentForLiveUpdate(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t sub_1C1E2CC88(uint64_t a1, uint64_t a2)
{
  sub_1C1E2CDB0(0, (unint64_t *)&qword_1EBB660C0, MEMORY[0x1E4F672B0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1E2CD1C(uint64_t a1, uint64_t a2)
{
  sub_1C1E2CDB0(0, (unint64_t *)&qword_1EBB660C0, MEMORY[0x1E4F672B0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C1E2CDB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1E2CE14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C1E2CE5C()
{
  unint64_t result = qword_1EBB67F58;
  if (!qword_1EBB67F58)
  {
    sub_1C1DF9F8C(255, (unint64_t *)&qword_1EBB68388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB67F58);
  }
  return result;
}

void sub_1C1E2CEC4()
{
  if (!qword_1EBB65420)
  {
    sub_1C1E2CF50(255, (unint64_t *)&qword_1EBB651E0, MEMORY[0x1E4F674B8], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C1EAE7D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65420);
    }
  }
}

void sub_1C1E2CF50(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C1E2CF9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1E2CDB0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1E2D00C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E2D044@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C1EA655C(a1, a2, *(void **)(v3 + 16), *(char **)(v3 + 24), a3);
}

uint64_t sub_1C1E2D04C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E2D084()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();

  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1C1E2D0D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1EA6B8C(a1, (void *)(v2 + 16), (uint64_t (*)(uint64_t, uint64_t, void, void))(v2 + 56), *(void *)(v2 + 96), *(void **)(v2 + 104), *(void **)(v2 + 112), a2);
}

uint64_t sub_1C1E2D0E8(uint64_t a1)
{
  return sub_1C1EA8974(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t static ModelTrainingScenario.make(from:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v2 = type metadata accessor for ModelTrainingElement(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ModelTrainingCommand(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAD068();
  swift_allocObject();
  uint64_t v10 = sub_1C1EAD058();
  sub_1C1E2D628();
  sub_1C1EAD048();
  if (v1) {
    return swift_release();
  }
  uint64_t v41 = v3;
  uint64_t v42 = 0;
  uint64_t v12 = v48;
  uint64_t v45 = v49;
  uint64_t v13 = *(void *)(v48 + 16);
  uint64_t v50 = v2;
  uint64_t v43 = v10;
  uint64_t v44 = v48;
  if (v13)
  {
    uint64_t v14 = v48 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v47 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain_n();
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1C1E3775C(v14, (uint64_t)v9, type metadata accessor for ModelTrainingCommand);
      uint64_t v17 = *((void *)v9 + 1);
      uint64_t v18 = *((void *)v9 + 2);
      swift_bridgeObjectRetain();
      sub_1C1E3C374((uint64_t)v9, type metadata accessor for ModelTrainingCommand);
      if (v18)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v15 = sub_1C1E1C238(0, v15[2] + 1, 1, v15);
        }
        unint64_t v20 = v15[2];
        unint64_t v19 = v15[3];
        if (v20 >= v19 >> 1) {
          uint64_t v15 = sub_1C1E1C238((void *)(v19 > 1), v20 + 1, 1, v15);
        }
        v15[2] = v20 + 1;
        uint64_t v16 = &v15[2 * v20];
        v16[4] = v17;
        v16[5] = v18;
      }
      v14 += v47;
      --v13;
    }
    while (v13);
    uint64_t v12 = v44;
    swift_bridgeObjectRelease_n();
    uint64_t v2 = v50;
  }
  else
  {
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v21 = sub_1C1DDC140((uint64_t)v15);
  swift_bridgeObjectRelease();
  uint64_t v22 = v45;
  int64_t v23 = *(void *)(v45 + 16);
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v25 = v41;
  if (v23)
  {
    uint64_t v47 = v21;
    uint64_t v48 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C1DE1100(0, v23, 0);
    uint64_t v26 = v22 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v27 = *(void *)(v25 + 72);
    uint64_t v24 = v48;
    do
    {
      sub_1C1E3775C(v26, (uint64_t)v5, type metadata accessor for ModelTrainingElement);
      uint64_t v28 = &v5[*(int *)(v2 + 56)];
      uint64_t v29 = *(void *)v28;
      uint64_t v30 = *((void *)v28 + 1);
      swift_bridgeObjectRetain();
      sub_1C1E3C374((uint64_t)v5, type metadata accessor for ModelTrainingElement);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1DE1100(0, *(void *)(v24 + 16) + 1, 1);
        uint64_t v24 = v48;
      }
      unint64_t v32 = *(void *)(v24 + 16);
      unint64_t v31 = *(void *)(v24 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1C1DE1100(v31 > 1, v32 + 1, 1);
        uint64_t v24 = v48;
      }
      *(void *)(v24 + 16) = v32 + 1;
      uint64_t v33 = v24 + 16 * v32;
      *(void *)(v33 + 32) = v29;
      *(void *)(v33 + 40) = v30;
      v26 += v27;
      --v23;
      uint64_t v2 = v50;
    }
    while (v23);
    swift_bridgeObjectRelease();
    uint64_t v12 = v44;
    uint64_t v21 = v47;
  }
  uint64_t v34 = sub_1C1DDC140(v24);
  swift_bridgeObjectRelease();
  id v35 = v46;
  if (*(void *)(v34 + 16) <= *(void *)(v21 + 16) >> 3)
  {
    uint64_t v48 = v21;
    sub_1C1E31A80(v34);
    swift_bridgeObjectRelease();
    uint64_t v36 = v48;
    if (*(void *)(v48 + 16)) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v36 = sub_1C1E31F68(v34, v21);
    swift_bridgeObjectRelease();
    if (*(void *)(v36 + 16))
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = sub_1C1E30C64(v36);
      swift_bridgeObjectRelease();
      sub_1C1E377C4();
      swift_allocError();
      *(void *)uint64_t v38 = v37;
      *(void *)(v38 + 8) = 0;
      *(unsigned char *)(v38 + 16) = 1;
      swift_willThrow();
      return swift_release();
    }
  }
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v39 = v45;
  *id v35 = v12;
  v35[1] = v39;
  return result;
}

uint64_t type metadata accessor for ModelTrainingElement(uint64_t a1)
{
  return sub_1C1DFE484(a1, (uint64_t *)&unk_1EA2C1390);
}

uint64_t type metadata accessor for ModelTrainingCommand(uint64_t a1)
{
  return sub_1C1DFE484(a1, (uint64_t *)&unk_1EA2C1380);
}

unint64_t sub_1C1E2D628()
{
  unint64_t result = qword_1EA2C12D8;
  if (!qword_1EA2C12D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C12D8);
  }
  return result;
}

BOOL sub_1C1E2D67C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C1E2D694()
{
  return sub_1C1EAF858();
}

uint64_t sub_1C1E2D6DC()
{
  return sub_1C1EAF838();
}

uint64_t sub_1C1E2D708()
{
  return sub_1C1EAF858();
}

uint64_t sub_1C1E2D74C()
{
  if (*v0) {
    return 1635017060;
  }
  else {
    return 0x73646E616D6D6F63;
  }
}

uint64_t sub_1C1E2D780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1E3BDC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1E2D7A8()
{
  return 0;
}

void sub_1C1E2D7B4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C1E2D7C0(uint64_t a1)
{
  unint64_t v2 = sub_1C1E37818();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1E2D7FC(uint64_t a1)
{
  unint64_t v2 = sub_1C1E37818();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ModelTrainingScenario.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v14 = a2;
  sub_1C1E3C114(0, &qword_1EA2C12E8, (uint64_t (*)(void))sub_1C1E37818, (uint64_t)&type metadata for ModelTrainingScenario.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1E37818();
  sub_1C1EAF8C8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v14;
  sub_1C1E3793C(0, &qword_1EA2C12F8, type metadata accessor for ModelTrainingCommand, MEMORY[0x1E4FBB320]);
  char v15 = 0;
  sub_1C1E3786C();
  sub_1C1EAF718();
  uint64_t v11 = v16;
  sub_1C1E3793C(0, &qword_1EA2C1310, type metadata accessor for ModelTrainingElement, MEMORY[0x1E4FBB320]);
  char v15 = 1;
  sub_1C1E379A0();
  swift_bridgeObjectRetain();
  sub_1C1EAF718();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v12 = v16;
  *uint64_t v10 = v11;
  v10[1] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1E2DB0C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ModelTrainingScenario.init(from:)(a1, a2);
}

unint64_t sub_1C1E2DB24(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    unint64_t v5 = 0;
    sub_1C1EAF4A8();
    sub_1C1EAEDB8();
    MEMORY[0x1C874C0C0](a1, MEMORY[0x1E4FBB1A0]);
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C1EAF4A8();
    swift_bridgeObjectRelease();
    unint64_t v5 = 0xD000000000000025;
    sub_1C1EAEDB8();
  }
  return v5;
}

unint64_t sub_1C1E2DC18()
{
  return sub_1C1E2DB24(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

HealthPlatformCore::ModelTrainingCommand::Kind_optional __swiftcall ModelTrainingCommand.Kind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C1EAF6B8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ModelTrainingCommand.Kind.rawValue.getter()
{
  if (*v0) {
    return 0x657461645F746573;
  }
  else {
    return 7364980;
  }
}

uint64_t sub_1C1E2DCBC()
{
  return sub_1C1EAF858();
}

uint64_t sub_1C1E2DD38()
{
  sub_1C1EAED98();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1E2DDA0()
{
  return sub_1C1EAF858();
}

HealthPlatformCore::ModelTrainingCommand::Kind_optional sub_1C1E2DE18(Swift::String *a1)
{
  return ModelTrainingCommand.Kind.init(rawValue:)(*a1);
}

void sub_1C1E2DE24(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7364980;
  if (*v1) {
    uint64_t v2 = 0x657461645F746573;
  }
  unint64_t v3 = 0xE300000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C1E2DE5C()
{
  return sub_1C1EAEE68();
}

uint64_t sub_1C1E2DEBC()
{
  return sub_1C1EAEE58();
}

uint64_t sub_1C1E2DF0C(char *a1, char *a2)
{
  return sub_1C1E4C664(*a1, *a2);
}

void ModelTrainingCommand.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t ModelTrainingCommand.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ModelTrainingCommand.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ModelTrainingCommand(0);
  return sub_1C1E37B18(v1 + *(int *)(v3 + 24), a1, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928]);
}

BOOL sub_1C1E2DFAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C1E2DFC0()
{
  uint64_t v1 = 25705;
  if (*v0 != 1) {
    uint64_t v1 = 1702125924;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1C1E2E000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1E3BEAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C1E2E028(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1C1E2E034(uint64_t a1)
{
  unint64_t v2 = sub_1C1E37A70();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1E2E070(uint64_t a1)
{
  unint64_t v2 = sub_1C1E37A70();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ModelTrainingCommand.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  sub_1C1E3793C(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v18 - v4;
  sub_1C1E3C114(0, &qword_1EA2C1328, (uint64_t (*)(void))sub_1C1E37A70, (uint64_t)&type metadata for ModelTrainingCommand.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = type metadata accessor for ModelTrainingCommand(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1E37A70();
  uint64_t v22 = v8;
  uint64_t v12 = v23;
  sub_1C1EAF8C8();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v11;
  uint64_t v14 = v20;
  char v26 = 0;
  sub_1C1E37AC4();
  uint64_t v15 = v21;
  sub_1C1EAF718();
  *(unsigned char *)uint64_t v13 = v27;
  char v25 = 1;
  *(void *)(v13 + 8) = sub_1C1EAF6C8();
  *(void *)(v13 + 16) = v16;
  sub_1C1EAD318();
  char v24 = 2;
  sub_1C1DFAB24(&qword_1EBB66138, MEMORY[0x1E4F27928]);
  sub_1C1EAF6E8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v15);
  sub_1C1E37C64((uint64_t)v5, v13 + *(int *)(v9 + 24), (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928]);
  sub_1C1E3775C(v13, v19, type metadata accessor for ModelTrainingCommand);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C1E3C374(v13, type metadata accessor for ModelTrainingCommand);
}

uint64_t sub_1C1E2E474@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ModelTrainingCommand.init(from:)(a1, a2);
}

uint64_t ModelTrainingElement.associatedHKTypesRaw.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ModelTrainingElement.contentKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ModelTrainingElement(0) + 20);
  uint64_t v4 = sub_1C1EAD668();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ModelTrainingElement.completeness.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ModelTrainingElement(0) + 24));
}

uint64_t ModelTrainingElement.dataVisualizationKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ModelTrainingElement(0);
  return sub_1C1E37B18(v1 + *(int *)(v3 + 28), a1, &qword_1EBB661E8, MEMORY[0x1E4F67360]);
}

uint64_t ModelTrainingElement.relevantDateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ModelTrainingElement(0);
  return sub_1C1E37B18(v1 + *(int *)(v3 + 32), a1, (unint64_t *)&qword_1EBB661C8, MEMORY[0x1E4F672E8]);
}

uint64_t ModelTrainingElement.dateSubmitted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ModelTrainingElement(0) + 36);
  uint64_t v4 = sub_1C1EAD318();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ModelTrainingElement.keywords.getter()
{
  type metadata accessor for ModelTrainingElement(0);
  return swift_bridgeObjectRetain();
}

uint64_t ModelTrainingElement.magnitude.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ModelTrainingElement(0) + 44));
}

uint64_t ModelTrainingElement.prominence.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ModelTrainingElement(0);
  return sub_1C1E37B18(v1 + *(int *)(v3 + 48), a1, &qword_1EBB661B0, MEMORY[0x1E4F67258]);
}

uint64_t ModelTrainingElement.timeScope.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ModelTrainingElement(0);
  return sub_1C1E37B18(v1 + *(int *)(v3 + 52), a1, &qword_1EBB66190, MEMORY[0x1E4F67200]);
}

uint64_t ModelTrainingElement.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ModelTrainingElement(0) + 56));
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C1E2E7A4(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4B746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0x6574656C706D6F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x6D62755365746164;
      break;
    case 6:
      unint64_t result = 0x7364726F7779656BLL;
      break;
    case 7:
      unint64_t result = 0x647574696E67616DLL;
      break;
    case 8:
      unint64_t result = 0x6E656E696D6F7270;
      break;
    case 9:
      unint64_t result = 0x706F6353656D6974;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C1E2E90C(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4B746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0x6574656C706D6F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x6D62755365746164;
      break;
    case 6:
      unint64_t result = 0x7364726F7779656BLL;
      break;
    case 7:
      unint64_t result = 0x647574696E67616DLL;
      break;
    case 8:
      unint64_t result = 0x6E656E696D6F7270;
      break;
    case 9:
      unint64_t result = 0x706F6353656D6974;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C1E2EA74(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C1E2E7A4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C1E2E7A4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1EAF7A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C1E2EB00()
{
  char v1 = *v0;
  sub_1C1EAF828();
  sub_1C1E2E7A4(v1);
  sub_1C1EAED98();
  swift_bridgeObjectRelease();
  return sub_1C1EAF858();
}

uint64_t sub_1C1E2EB64()
{
  sub_1C1E2E7A4(*v0);
  sub_1C1EAED98();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1E2EBB8()
{
  char v1 = *v0;
  sub_1C1EAF828();
  sub_1C1E2E7A4(v1);
  sub_1C1EAED98();
  swift_bridgeObjectRelease();
  return sub_1C1EAF858();
}

uint64_t sub_1C1E2EC18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C1E3BFCC();
  *a1 = result;
  return result;
}

unint64_t sub_1C1E2EC48@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C1E2E7A4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C1E2EC74()
{
  return sub_1C1E2E90C(*v0);
}

uint64_t sub_1C1E2EC7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C1E3BFCC();
  *a1 = result;
  return result;
}

void sub_1C1E2ECA4(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1C1E2ECB0(uint64_t a1)
{
  unint64_t v2 = sub_1C1E37B98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1E2ECEC(uint64_t a1)
{
  unint64_t v2 = sub_1C1E37B98();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static ModelTrainingElement.make(from:)()
{
  return swift_release();
}

uint64_t ModelTrainingElement.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  unint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1E3793C(0, &qword_1EBB66190, MEMORY[0x1E4F67200], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v48 = (uint64_t)&v46 - v6;
  sub_1C1E3793C(0, &qword_1EBB661B0, MEMORY[0x1E4F67258], v4);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v49 = (char *)&v46 - v8;
  uint64_t v9 = sub_1C1EAD318();
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E3793C(0, (unint64_t *)&qword_1EBB661C8, MEMORY[0x1E4F672E8], v4);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v51 = (char *)&v46 - v12;
  sub_1C1E3793C(0, &qword_1EBB661E8, MEMORY[0x1E4F67360], v4);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = sub_1C1EAD668();
  uint64_t v56 = *(void *)(v16 - 8);
  uint64_t v57 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E3C114(0, &qword_1EA2C1340, (uint64_t (*)(void))sub_1C1E37B98, (uint64_t)&type metadata for ModelTrainingElement.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v52 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v46 - v21;
  uint64_t v60 = (int *)type metadata accessor for ModelTrainingElement(0);
  MEMORY[0x1F4188790](v60);
  id v58 = a1;
  uint64_t v59 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1E37B98();
  uint64_t v53 = v22;
  sub_1C1EAF8C8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  }
  char v24 = v18;
  uint64_t v46 = v20;
  uint64_t v25 = MEMORY[0x1E4FBB550];
  sub_1C1E16E70(0, &qword_1EA2C1350, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB320]);
  char v61 = 0;
  sub_1C1E37BEC(&qword_1EA2C1358, &qword_1EA2C1350, v25);
  sub_1C1EAF6E8();
  char v26 = v59;
  *(void *)uint64_t v59 = v62;
  LOBYTE(v62) = 1;
  sub_1C1DFAB24(&qword_1EA2C1360, MEMORY[0x1E4F67030]);
  uint64_t v27 = v57;
  sub_1C1EAF718();
  uint64_t v28 = v60;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v26[v60[5]], v24, v27);
  LOBYTE(v62) = 2;
  uint64_t v29 = sub_1C1EAF6D8();
  uint64_t v30 = &v26[v28[6]];
  *(void *)uint64_t v30 = v29;
  v30[8] = v31 & 1;
  sub_1C1EADE38();
  LOBYTE(v62) = 3;
  sub_1C1DFAB24(&qword_1EBB661E0, MEMORY[0x1E4F67360]);
  sub_1C1EAF6E8();
  sub_1C1E37C64((uint64_t)v15, (uint64_t)&v26[v28[7]], &qword_1EBB661E8, MEMORY[0x1E4F67360]);
  sub_1C1EADDD8();
  LOBYTE(v62) = 4;
  sub_1C1DFAB24(&qword_1EA2C1368, MEMORY[0x1E4F672E8]);
  uint64_t v32 = (uint64_t)v51;
  sub_1C1EAF6E8();
  sub_1C1E37C64(v32, (uint64_t)&v26[v28[8]], (unint64_t *)&qword_1EBB661C8, MEMORY[0x1E4F672E8]);
  LOBYTE(v62) = 5;
  sub_1C1DFAB24(&qword_1EBB66138, MEMORY[0x1E4F27928]);
  uint64_t v33 = v50;
  uint64_t v34 = v55;
  sub_1C1EAF718();
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v26[v28[9]], v33, v34);
  uint64_t v35 = MEMORY[0x1E4FBB1A0];
  sub_1C1E16E70(0, (unint64_t *)&qword_1EBB68358, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  char v61 = 6;
  sub_1C1E37BEC(&qword_1EA2C1370, (unint64_t *)&qword_1EBB68358, v35);
  sub_1C1EAF6E8();
  *(void *)&v26[v28[10]] = v62;
  LOBYTE(v62) = 7;
  uint64_t v36 = sub_1C1EAF6D8();
  uint64_t v37 = &v26[v28[11]];
  *(void *)uint64_t v37 = v36;
  v37[8] = v38 & 1;
  sub_1C1EADBB8();
  LOBYTE(v62) = 8;
  sub_1C1DFAB24(&qword_1EBB661A8, MEMORY[0x1E4F67258]);
  uint64_t v39 = (uint64_t)v49;
  sub_1C1EAF6E8();
  sub_1C1E37C64(v39, (uint64_t)&v26[v28[12]], &qword_1EBB661B0, MEMORY[0x1E4F67258]);
  sub_1C1EADAA8();
  LOBYTE(v62) = 9;
  sub_1C1DFAB24(&qword_1EBB66188, MEMORY[0x1E4F67200]);
  sub_1C1EAF6E8();
  sub_1C1E37C64(v48, (uint64_t)&v59[v60[13]], &qword_1EBB66190, MEMORY[0x1E4F67200]);
  LOBYTE(v62) = 10;
  uint64_t v40 = sub_1C1EAF6F8();
  uint64_t v42 = v41;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v53, v52);
  uint64_t v43 = (uint64_t)v59;
  uint64_t v44 = (uint64_t *)&v59[v60[14]];
  uint64_t *v44 = v40;
  v44[1] = v42;
  sub_1C1E3775C(v43, v47, type metadata accessor for ModelTrainingElement);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  return sub_1C1E3C374(v43, type metadata accessor for ModelTrainingElement);
}

uint64_t sub_1C1E2FAF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ModelTrainingElement.init(from:)(a1, a2);
}

id FeedItem.init(context:modelTrainingElement:)(int *a1, char *a2)
{
  char v121 = a1;
  uint64_t v3 = sub_1C1EADCA8();
  uint64_t v106 = *(void *)(v3 - 8);
  uint64_t v107 = v3;
  MEMORY[0x1F4188790](v3);
  os_log_t v105 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1E3793C(0, &qword_1EBB66190, MEMORY[0x1E4F67200], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v109 = (uint64_t)&v87 - v7;
  uint64_t v8 = sub_1C1EADAA8();
  uint64_t v117 = *(void *)(v8 - 8);
  uint64_t v118 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  unint64_t v103 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v104 = (char *)&v87 - v11;
  uint64_t v102 = sub_1C1EADD68();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  unint64_t v100 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E3793C(0, &qword_1EBB661B0, MEMORY[0x1E4F67258], v5);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v115 = (uint64_t)&v87 - v14;
  uint64_t v116 = sub_1C1EADBB8();
  uint64_t v120 = *(void *)(v116 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v116);
  uint64_t v98 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v99 = (char *)&v87 - v17;
  uint64_t v92 = sub_1C1EADF38();
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v90 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1C1EAE048();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v95 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E3793C(0, &qword_1EBB661E8, MEMORY[0x1E4F67360], v5);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v113 = (uint64_t)&v87 - v21;
  uint64_t v119 = sub_1C1EADE38();
  uint64_t v114 = *(void *)(v119 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v119);
  uint64_t v93 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v94 = (char *)&v87 - v24;
  uint64_t v89 = sub_1C1EADFD8();
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  BOOL v87 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F672E8];
  sub_1C1E3793C(0, (unint64_t *)&qword_1EBB661C8, MEMORY[0x1E4F672E8], v5);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v111 = (uint64_t)&v87 - v27;
  uint64_t v28 = sub_1C1EAD668();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  char v31 = (char *)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E3793C(0, &qword_1EBB68158, MEMORY[0x1E4F26E60], v5);
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v34 = (char *)&v87 - v33;
  uint64_t v35 = sub_1C1EAD318();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  char v38 = (char *)&v87 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = (int *)type metadata accessor for ModelTrainingElement(0);
  uint64_t v110 = *(void *)&a2[v39[14]];
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v38, &a2[v39[9]], v35);
  uint64_t v40 = a2;
  uint64_t v41 = sub_1C1EAD0E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v34, 1, 1, v41);
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v31, &a2[v39[5]], v28);
  uint64_t v42 = v121;
  swift_bridgeObjectRetain();
  uint64_t v108 = v42;
  uint64_t v43 = (void *)sub_1C1EAE328();
  char v121 = v39;
  sub_1C1E37B18((uint64_t)&a2[v39[8]], v111, (unint64_t *)&qword_1EBB661C8, v112);
  id v44 = v43;
  sub_1C1EAE2F8();
  id v122 = v40;
  uint64_t v45 = *(void *)v40;
  if (*(void *)v40)
  {
    uint64_t v46 = *(void *)(v45 + 16);
    unint64_t v47 = MEMORY[0x1E4FBC860];
    if (v46)
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = 0;
      uint64_t v49 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v50 = *(void *)(v45 + 8 * v48 + 32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v49 = sub_1C1E1C3B0(0, v49[2] + 1, 1, v49);
        }
        unint64_t v52 = v49[2];
        unint64_t v51 = v49[3];
        if (v52 >= v51 >> 1) {
          uint64_t v49 = sub_1C1E1C3B0((void *)(v51 > 1), v52 + 1, 1, v49);
        }
        ++v48;
        v49[2] = v52 + 1;
        v49[v52 + 4] = v50;
      }
      while (v46 != v48);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v49 = (void *)MEMORY[0x1E4FBC860];
    }
    unint64_t v123 = v47;
    uint64_t v53 = v49[2];
    if (v53)
    {
      uint64_t v54 = self;
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v53; ++i)
      {
        if (objc_msgSend(v54, sel_dataTypeWithCode_, v49[i + 4]))
        {
          MEMORY[0x1C874C090]();
          if (*(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C1EAEEE8();
          }
          sub_1C1EAEF18();
          sub_1C1EAEEB8();
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v47 = v123;
    }
    swift_bridgeObjectRelease();
    sub_1C1E16C6C(v47, (unint64_t *)&qword_1EBB67F40, 0x1E4F2B2C0, &qword_1EBB67F48, (void (*)(id *, uint64_t))sub_1C1E31360);
    swift_bridgeObjectRelease();
    sub_1C1EAE2A8();
  }
  uint64_t v56 = v121;
  uint64_t v57 = (double *)((char *)v122 + v121[6]);
  if (((_BYTE)v57[1] & 1) == 0 && *v57 >= 0.0)
  {
    id v58 = v87;
    sub_1C1EADFE8();
    uint64_t v59 = v89;
    sub_1C1EAE278();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v58, v59);
  }
  uint64_t v60 = v113;
  sub_1C1E37B18((uint64_t)v122 + v56[7], v113, &qword_1EBB661E8, MEMORY[0x1E4F67360]);
  uint64_t v61 = v114;
  uint64_t v62 = v119;
  int v63 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v60, 1, v119);
  uint64_t v64 = v117;
  uint64_t v65 = v118;
  uint64_t v66 = v116;
  uint64_t v67 = v120;
  if (v63 == 1)
  {
    sub_1C1E3C304(v60, &qword_1EBB661E8, MEMORY[0x1E4F67360]);
  }
  else
  {
    uint64_t v68 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v94, v60, v62);
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v93, v68, v62);
    uint64_t v69 = v95;
    sub_1C1EAE058();
    uint64_t v70 = v97;
    sub_1C1EAE278();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v69, v70);
    uint64_t v71 = v68;
    uint64_t v67 = v120;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v71, v119);
  }
  if (*(void *)((char *)v122 + v56[10]))
  {
    uint64_t v72 = swift_bridgeObjectRetain();
    sub_1C1DDC140(v72);
    swift_bridgeObjectRelease();
    sub_1C1EAE2C8();
  }
  id v73 = (double *)((char *)v122 + v56[11]);
  if (((_BYTE)v73[1] & 1) == 0 && *v73 >= 0.0)
  {
    uint64_t v74 = v90;
    sub_1C1EADF48();
    uint64_t v75 = v92;
    sub_1C1EAE278();
    uint64_t v76 = v74;
    uint64_t v56 = v121;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v76, v75);
  }
  uint64_t v77 = v115;
  sub_1C1E37B18((uint64_t)v122 + v56[12], v115, &qword_1EBB661B0, MEMORY[0x1E4F67258]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v77, 1, v66) == 1)
  {
    sub_1C1E3C304(v77, &qword_1EBB661B0, MEMORY[0x1E4F67258]);
  }
  else
  {
    uint64_t v78 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v99, v77, v66);
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v98, v78, v66);
    unint64_t v79 = v100;
    sub_1C1EADD78();
    uint64_t v80 = v102;
    sub_1C1EAE278();
    uint64_t v81 = v79;
    uint64_t v56 = v121;
    (*(void (**)(char *, uint64_t))(v101 + 8))(v81, v80);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v78, v66);
  }
  uint64_t v82 = v109;
  sub_1C1E37B18((uint64_t)v122 + v56[13], v109, &qword_1EBB66190, MEMORY[0x1E4F67200]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v82, 1, v65) == 1)
  {

    sub_1C1E3C374((uint64_t)v122, type metadata accessor for ModelTrainingElement);
    sub_1C1E3C304(v82, &qword_1EBB66190, MEMORY[0x1E4F67200]);
  }
  else
  {
    uint64_t v83 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v104, v82, v65);
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v103, v83, v65);
    uint64_t v84 = v105;
    sub_1C1EADCB8();
    uint64_t v85 = v107;
    sub_1C1EAE278();

    sub_1C1E3C374((uint64_t)v122, type metadata accessor for ModelTrainingElement);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v84, v85);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v83, v65);
  }
  return v44;
}

uint64_t sub_1C1E30B6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C1E16E70(0, &qword_1EBB654C8, MEMORY[0x1E4F674B8], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_1C1E36A20(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1C1E00B40();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1C1E30C64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C1E16E70(0, &qword_1EBB683A8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1C1E36BB4((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C1E00B40();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C1E30D6C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_1C1EAE348();
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_1C1E16E70(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      void v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void *sub_1C1E30F14(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1C1E16E70(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1C1E5ACE0((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v3;
}

uint64_t sub_1C1E31030(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C1E3793C(0, &qword_1EBB64768, (uint64_t (*)(uint64_t))sub_1C1E3C06C, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * (v5 >> 4);
  uint64_t v6 = sub_1C1E36FC8((uint64_t)&v8, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1C1E00B40();
  if (v6 != v1)
  {
    __break(1u);
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C1E31144(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1C1EAF828();
  swift_bridgeObjectRetain();
  _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
  sub_1C1EAED98();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1C1EAF858();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    uint64_t v12 = v11;
    if (v10 == _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0() && v12 == v13)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    char v15 = sub_1C1EAF7A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_18:
      uint64_t result = 0;
      LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v9);
      goto LABEL_19;
    }
    uint64_t v16 = ~v8;
    while (1)
    {
      unint64_t v9 = (v9 + 1) & v16;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        break;
      }
      uint64_t v17 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      uint64_t v19 = v18;
      if (v17 == _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0() && v19 == v20) {
        goto LABEL_17;
      }
      char v22 = sub_1C1EAF7A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1C1E366A8(a2, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v25;
  swift_bridgeObjectRelease();
  uint64_t result = 1;
LABEL_19:
  *a1 = a2;
  return result;
}

uint64_t sub_1C1E31360(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C1EAF3C8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C1EAF3B8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C1DF1554(v7, result + 1, (unint64_t *)&qword_1EBB67060, (unint64_t *)&qword_1EBB67F40, 0x1E4F2B2C0, &qword_1EBB67F48);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C1E332A0(v26, (unint64_t *)&qword_1EBB67060, (unint64_t *)&qword_1EBB67F40, 0x1E4F2B2C0, &qword_1EBB67F48);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C1DF188C((uint64_t)v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C1EAF278();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C1EAF288();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C1EAF288();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C1E16588((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (unint64_t *)&qword_1EBB67060, (unint64_t *)&qword_1EBB67F40, 0x1E4F2B2C0, &qword_1EBB67F48);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C1E31660(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C1EAF3C8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C1DF9F8C(0, &qword_1EBB66FC8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C1EAF3B8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C1DF1554(v7, result + 1, &qword_1EA2C13E8, &qword_1EBB66FC8, 0x1E4F2B448, &qword_1EBB66FD0);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C1E332A0(v26, &qword_1EA2C13E8, &qword_1EBB66FC8, 0x1E4F2B448, &qword_1EBB66FD0);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C1DF188C((uint64_t)v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C1EAF278();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C1DF9F8C(0, &qword_1EBB66FC8);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C1EAF288();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C1EAF288();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C1E16588((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_1EA2C13E8, &qword_1EBB66FC8, 0x1E4F2B448, &qword_1EBB66FD0);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C1E31960(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1C1EAF828();
  sub_1C1EAF838();
  uint64_t v6 = sub_1C1EAF858();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C1E368D0(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(void *)(v9 + 8 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v9 + 8 * v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1C1E31A80(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1C1E32930(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

void sub_1C1E31C28(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    if (!sub_1C1EAF3B8()) {
      return;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1C1EAF368();
      sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40);
      sub_1C1E16A04(&qword_1EBB67F48, (unint64_t *)&qword_1EBB67F40);
      sub_1C1EAEF98();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v3 = v22;
      uint64_t v4 = v23;
      unint64_t v5 = v24;
    }
    else
    {
      uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v3 = ~v6;
      uint64_t v7 = -v6;
      if (v7 < 64) {
        uint64_t v8 = ~(-1 << v7);
      }
      else {
        uint64_t v8 = -1;
      }
      unint64_t v5 = v8 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
    }
    int64_t v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v5)
      {
        uint64_t v10 = (v5 - 1) & v5;
        unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v12 = v4;
      }
      else
      {
        int64_t v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v14);
        uint64_t v12 = v4 + 1;
        if (!v15)
        {
          uint64_t v12 = v4 + 2;
          if (v4 + 2 >= v9) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 3;
            if (v4 + 3 >= v9) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v4 + 4;
              if (v4 + 4 >= v9) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v18 + 8 * v12);
              if (!v15)
              {
                uint64_t v12 = v4 + 5;
                if (v4 + 5 >= v9) {
                  goto LABEL_36;
                }
                unint64_t v15 = *(void *)(v18 + 8 * v12);
                if (!v15)
                {
                  uint64_t v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    unint64_t v15 = *(void *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_1C1E00B40();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(a1 + 48) + 8 * v11);
      if (!v13) {
        goto LABEL_36;
      }
      while (1)
      {
        id v17 = (void *)sub_1C1E32AC0(v13);

        uint64_t v4 = v12;
        unint64_t v5 = v10;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (sub_1C1EAF3E8())
        {
          sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v13 = v19;
          swift_unknownObjectRelease();
          uint64_t v12 = v4;
          uint64_t v10 = v5;
          if (v19) {
            continue;
          }
        }
        goto LABEL_36;
      }
    }
  }
  if (*(void *)(*(void *)v1 + 16)) {
    goto LABEL_5;
  }
}

uint64_t sub_1C1E31F20(uint64_t a1, uint64_t a2)
{
  return sub_1C1DF1554(a1, a2, (unint64_t *)&qword_1EBB67060, (unint64_t *)&qword_1EBB67F40, 0x1E4F2B2C0, &qword_1EBB67F48);
}

uint64_t sub_1C1E31F44(uint64_t a1, uint64_t a2)
{
  return sub_1C1DF1554(a1, a2, (unint64_t *)&qword_1EBB67068, &qword_1EBB68260, 0x1E4F2B358, (unint64_t *)&qword_1EBB67000);
}

uint64_t sub_1C1E31F68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1C1E00B40();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_1C1EAF828();
      swift_bridgeObjectRetain();
      sub_1C1EAED98();
      uint64_t v19 = sub_1C1EAF858();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1C1EAF7A8() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1C1EAF7A8() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x1F4188790](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_1C1E33ECC((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1C1E00B40();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_1C1E33ECC((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1C1E00B40();
      MEMORY[0x1C874D2E0](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1C1E323D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C1EAF368();
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40);
    sub_1C1E16A04(&qword_1EBB67F48, (unint64_t *)&qword_1EBB67F40);
    sub_1C1EAEF98();
    uint64_t v3 = v46;
    uint64_t v4 = v47;
    uint64_t v6 = v48;
    int64_t v5 = v49;
    unint64_t v7 = v50;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  uint64_t v43 = v6;
  int64_t v44 = v5;
  unint64_t v45 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        int64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        int64_t v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v42 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          int64_t v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v44 = v5;
          unint64_t v45 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v42 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v42 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v42 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          int64_t v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      int64_t v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = sub_1C1EAF3E8();
    if (!v16
      || (uint64_t v39 = v16,
          sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          int64_t v14 = v40,
          swift_unknownObjectRelease(),
          !v40))
    {
LABEL_53:
      sub_1C1E00B40();
      return v2;
    }
LABEL_19:
    uint64_t v17 = sub_1C1EAF278();
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = sub_1C1EAF288();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = sub_1C1EAF288();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v41;
    uint64_t v6 = v43;
    int64_t v5 = v44;
    unint64_t v7 = v45;
  }
LABEL_47:

  char v31 = *(unsigned char *)(v2 + 32);
  unint64_t v32 = (unint64_t)((1 << v31) + 63) >> 6;
  size_t v33 = 8 * v32;
  if ((v31 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v33);
    sub_1C1E341C4((unint64_t *)((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v2, v19, &v41);
    uint64_t v35 = v34;
    swift_release();
    sub_1C1E00B40();
  }
  else
  {
    int64_t v36 = (void *)swift_slowAlloc();
    memcpy(v36, (const void *)(v2 + 56), v33);
    sub_1C1E341C4((unint64_t *)v36, v32, v2, v19, &v41);
    uint64_t v35 = v37;
    swift_release();
    sub_1C1E00B40();
    MEMORY[0x1C874D2E0](v36, -1, -1);
  }
  return v35;
}

uint64_t sub_1C1E32930(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1C1EAF828();
  swift_bridgeObjectRetain();
  sub_1C1EAED98();
  uint64_t v6 = sub_1C1EAF858();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1C1EAF7A8() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1C1EAF7A8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C1E348D8();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1C1E3633C(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C1E32AC0(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_1C1EAF3F8();

    if (v5)
    {
      uint64_t v6 = sub_1C1E34554();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C1EAF278();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40);
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_1C1EAF288();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_1C1EAF288();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C1E34A88((unint64_t *)&qword_1EBB67060, (unint64_t *)&qword_1EBB67F40, 0x1E4F2B2C0, &qword_1EBB67F48);
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_1C1E36504(v9);
  *uint64_t v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C1E32CB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C1E3C114(0, (unint64_t *)&qword_1EBB65498, (uint64_t (*)(void))sub_1C1E3C0C0, MEMORY[0x1E4F674B8], MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1C1EAF468();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_1C1EAF828();
      _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      sub_1C1EAED98();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C1EAF858();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C1E32FC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C1E3C210();
  uint64_t v3 = sub_1C1EAF468();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1C1EAF828();
      sub_1C1EAED98();
      uint64_t result = sub_1C1EAF858();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C1E332A0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_1C1DF177C(0, a2, a3, a4, a5);
  uint64_t v8 = sub_1C1EAF468();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    size_t v33 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    int64_t v11 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 56);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v15 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v22 = v11[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_33;
            }
            unint64_t v22 = v11[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
                if (v32 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v11 = -1 << v32;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v14) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v11[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
      uint64_t result = sub_1C1EAF278();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v9;
  return result;
}

uint64_t sub_1C1E3353C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1C1EAD668();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1C1E00100();
  uint64_t v5 = sub_1C1EAF468();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1C1DFAB24(&qword_1EBB66160, MEMORY[0x1E4F67030]);
      uint64_t result = sub_1C1EAECB8();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1C1E33934()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C1E3C114(0, &qword_1EBB65150, (uint64_t (*)(void))sub_1C1E19B1C, MEMORY[0x1E4F670C0], MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1C1EAF468();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_1C1EAF828();
      sub_1C1EAD7D8();
      uint64_t result = sub_1C1EAF858();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C1E33C24()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C1E3C17C();
  uint64_t result = sub_1C1EAF468();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_1C1EAF828();
      sub_1C1EAF838();
      uint64_t result = sub_1C1EAF858();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C1E33ECC(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_1C1E9AA54(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1C1EAF828();
        swift_bridgeObjectRetain();
        sub_1C1EAED98();
        uint64_t v22 = sub_1C1EAF858();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        unint64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_1C1EAF7A8() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1C1EAF7A8() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

void sub_1C1E341C4(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v7 = v6 - 1;
  uint64_t v36 = a3 + 56;
  while (2)
  {
    uint64_t v34 = v7;
    do
    {
      while (1)
      {
        if ((*a5 & 0x8000000000000000) == 0)
        {
          int64_t v9 = a5[3];
          unint64_t v8 = a5[4];
          if (v8)
          {
            uint64_t v10 = (v8 - 1) & v8;
            unint64_t v11 = __clz(__rbit64(v8)) | (v9 << 6);
LABEL_7:
            unint64_t v12 = *(void **)(*(void *)(*a5 + 48) + 8 * v11);
            id v13 = v12;
            goto LABEL_8;
          }
          int64_t v26 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_49;
          }
          int64_t v27 = (unint64_t)(a5[2] + 64) >> 6;
          if (v26 >= v27)
          {
            unint64_t v12 = 0;
            uint64_t v10 = 0;
            goto LABEL_8;
          }
          uint64_t v28 = a5[1];
          unint64_t v29 = *(void *)(v28 + 8 * v26);
          if (v29)
          {
LABEL_22:
            uint64_t v10 = (v29 - 1) & v29;
            unint64_t v11 = __clz(__rbit64(v29)) + (v26 << 6);
            int64_t v9 = v26;
            goto LABEL_7;
          }
          int64_t v31 = v9 + 2;
          if (v9 + 2 >= v27) {
            goto LABEL_41;
          }
          unint64_t v29 = *(void *)(v28 + 8 * v31);
          if (v29)
          {
LABEL_29:
            int64_t v26 = v31;
            goto LABEL_22;
          }
          if (v9 + 3 < v27)
          {
            unint64_t v29 = *(void *)(v28 + 8 * (v9 + 3));
            if (v29)
            {
              int64_t v26 = v9 + 3;
              goto LABEL_22;
            }
            int64_t v31 = v9 + 4;
            if (v9 + 4 >= v27)
            {
              unint64_t v12 = 0;
              uint64_t v10 = 0;
              v9 += 3;
LABEL_8:
              a5[3] = v9;
              a5[4] = v10;
              if (!v12) {
                goto LABEL_47;
              }
              goto LABEL_12;
            }
            unint64_t v29 = *(void *)(v28 + 8 * v31);
            if (v29) {
              goto LABEL_29;
            }
            int64_t v26 = v9 + 5;
            if (v9 + 5 < v27)
            {
              unint64_t v29 = *(void *)(v28 + 8 * v26);
              if (v29) {
                goto LABEL_22;
              }
              int64_t v26 = v27 - 1;
              int64_t v32 = v9 + 6;
              while (v27 != v32)
              {
                unint64_t v29 = *(void *)(v28 + 8 * v32++);
                if (v29)
                {
                  int64_t v26 = v32 - 1;
                  goto LABEL_22;
                }
              }
LABEL_41:
              unint64_t v12 = 0;
              uint64_t v10 = 0;
              int64_t v9 = v26;
              goto LABEL_8;
            }
          }
          unint64_t v12 = 0;
          uint64_t v10 = 0;
          int64_t v9 = v31;
          goto LABEL_8;
        }
        if (!sub_1C1EAF3E8()
          || (sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              unint64_t v12 = v38,
              swift_unknownObjectRelease(),
              !v38))
        {
LABEL_47:
          swift_retain();
          sub_1C1E9AD04(a1, a2, v34, a3);
          return;
        }
LABEL_12:
        uint64_t v14 = sub_1C1EAF278();
        uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v16 = v14 & ~v15;
        unint64_t v17 = v16 >> 6;
        uint64_t v18 = 1 << v16;
        if (((1 << v16) & *(void *)(v36 + 8 * (v16 >> 6))) == 0) {
          goto LABEL_3;
        }
        sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40);
        id v19 = *(id *)(*(void *)(a3 + 48) + 8 * v16);
        char v20 = sub_1C1EAF288();

        if (v20) {
          break;
        }
        uint64_t v21 = ~v15;
        for (unint64_t i = v16 + 1; ; unint64_t i = v23 + 1)
        {
          unint64_t v23 = i & v21;
          if (((*(void *)(v36 + (((i & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v21)) & 1) == 0) {
            break;
          }
          id v24 = *(id *)(*(void *)(a3 + 48) + 8 * v23);
          char v25 = sub_1C1EAF288();

          if (v25)
          {

            unint64_t v17 = v23 >> 6;
            uint64_t v18 = 1 << v23;
            goto LABEL_25;
          }
        }
LABEL_3:
      }
LABEL_25:
      unint64_t v30 = a1[v17];
      a1[v17] = v30 & ~v18;
    }
    while ((v18 & v30) == 0);
    uint64_t v7 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_49:
      __break(1u);
      return;
    }
    if (v34 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_1C1E34554()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1C1EAF3B8();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_1C1DF1554(v3, v2, (unint64_t *)&qword_1EBB67060, (unint64_t *)&qword_1EBB67F40, 0x1E4F2B2C0, &qword_1EBB67F48);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_1C1EAF278();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40);
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_1C1EAF288();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_1C1E36504(v7);
      if (sub_1C1EAF288())
      {
        *uint64_t v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_1C1EAF288();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void *sub_1C1E34710()
{
  uint64_t v1 = v0;
  sub_1C1E3C114(0, (unint64_t *)&qword_1EBB65498, (uint64_t (*)(void))sub_1C1E3C0C0, MEMORY[0x1E4F674B8], MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C1EAF458();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C1E348D8()
{
  uint64_t v1 = v0;
  sub_1C1E3C210();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C1EAF458();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    id v19 = (void *)(*(void *)(v4 + 48) + v16);
    *id v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C1E34A88(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_1C1DF177C(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1C1EAF458();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v5 = v8;
    return result;
  }
  id result = (id)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v10 + 8 * v13);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    unint64_t v21 = *(void **)(*(void *)(v6 + 48) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v17) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C1E34C40()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C1EAD668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E00100();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1C1EAF458();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    *uint64_t v1 = v8;
    return result;
  }
  id result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  unint64_t v23 = v1;
  int64_t v24 = (const void *)(v6 + 56);
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    id result = memmove(result, v24, 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v25 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v19 >= v25) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v24 + v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_28;
      }
      unint64_t v20 = *((void *)v24 + v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v25) {
          goto LABEL_28;
        }
        unint64_t v20 = *((void *)v24 + v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_12:
    unint64_t v18 = *(void *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v18, v2);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v18, v5, v2);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v25)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_30;
  }
  unint64_t v20 = *((void *)v24 + v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v25) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v24 + v12);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1C1E34EE8()
{
  uint64_t v1 = v0;
  sub_1C1E3C114(0, &qword_1EBB65150, (uint64_t (*)(void))sub_1C1E19B1C, MEMORY[0x1E4F670C0], MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C1EAF458();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C1E350C8()
{
  uint64_t v1 = v0;
  sub_1C1E3C17C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C1EAF458();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C1E3525C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C1E3C114(0, (unint64_t *)&qword_1EBB65498, (uint64_t (*)(void))sub_1C1E3C0C0, MEMORY[0x1E4F674B8], MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1C1EAF468();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_1C1EAF828();
    _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    sub_1C1EAED98();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C1EAF858();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C1E35534()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C1E3C210();
  uint64_t v3 = sub_1C1EAF468();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1C1EAF828();
    swift_bridgeObjectRetain();
    sub_1C1EAED98();
    uint64_t result = sub_1C1EAF858();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C1E357E0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_1C1DF177C(0, a2, a3, a4, a5);
  uint64_t v8 = sub_1C1EAF468();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v6 = v9;
    return result;
  }
  int64_t v32 = v5;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v7 + 56);
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v15 = v8 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    id v24 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    uint64_t result = sub_1C1EAF278();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
    ++*(void *)(v9 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v32;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C1E35A58()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C1EAD668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C1E00100();
  uint64_t v7 = sub_1C1EAF468();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1C1DFAB24(&qword_1EBB66160, MEMORY[0x1E4F67030]);
    uint64_t result = sub_1C1EAECB8();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C1E35E04()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C1E3C114(0, &qword_1EBB65150, (uint64_t (*)(void))sub_1C1E19B1C, MEMORY[0x1E4F670C0], MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1C1EAF468();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    unint64_t v19 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    sub_1C1EAF828();
    id v20 = v19;
    sub_1C1EAD7D8();
    uint64_t result = sub_1C1EAF858();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C1E360C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C1E3C17C();
  uint64_t result = sub_1C1EAF468();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_1C1EAF828();
    sub_1C1EAF838();
    uint64_t result = sub_1C1EAF858();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1C1E3633C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1C1EAF338();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1C1EAF828();
        swift_bridgeObjectRetain();
        sub_1C1EAED98();
        uint64_t v10 = sub_1C1EAF858();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          unint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *unint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1C1E36504(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1C1EAF338();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_1C1EAF278();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            BOOL v16 = (void *)(v15 + 8 * v2);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              *BOOL v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1C1E366A8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  char v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_1C1E32CB8();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_1C1E34710();
LABEL_22:
      uint64_t v24 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(unsigned char *)(*(void *)(v24 + 48) + a2) = v6;
      uint64_t v25 = *(void *)(v24 + 16);
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (!v26)
      {
        *(void *)(v24 + 16) = v27;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1C1E3525C();
  }
  uint64_t v9 = *v3;
  sub_1C1EAF828();
  _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
  sub_1C1EAED98();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C1EAF858();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v11 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
  uint64_t v13 = v12;
  if (v11 == _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0() && v13 == v14)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v16 = sub_1C1EAF7A8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    uint64_t v17 = ~v10;
    do
    {
      a2 = (a2 + 1) & v17;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v18 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      uint64_t v20 = v19;
      if (v18 == _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0() && v20 == v21) {
        goto LABEL_25;
      }
      char v23 = sub_1C1EAF7A8();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v23 & 1) == 0);
  }
LABEL_26:
  uint64_t result = sub_1C1EAF7C8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E368D0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C1E33C24();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1C1E350C8();
      goto LABEL_14;
    }
    sub_1C1E360C4();
  }
  uint64_t v8 = *v3;
  sub_1C1EAF828();
  sub_1C1EAF838();
  uint64_t result = sub_1C1EAF858();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for HKDisplayCategoryIdentifier(0);
      uint64_t result = sub_1C1EAF7C8();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_1C1E36A20(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C1E36BB4(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1C1E36DB4(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    char v22 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    *unint64_t v11 = *v20;
    v11[1] = v21;
    void v11[2] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      id v23 = v22;
      goto LABEL_38;
    }
    v11 += 3;
    swift_bridgeObjectRetain();
    uint64_t result = v22;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C1E36FC8(uint64_t result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *unint64_t v11 = *(_OWORD *)(*(void *)(a4 + 56) + 16 * v16);
    if (v13 == v10)
    {
      swift_unknownObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_unknownObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

BOOL _s18HealthPlatformCore20ModelTrainingCommandV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1EAD318();
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v41 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E3C270();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E3793C(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v42 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v40 - v14;
  MEMORY[0x1F4188790](v13);
  int64_t v17 = (char *)&v40 - v16;
  if (*(unsigned char *)a1) {
    uint64_t v18 = 0x657461645F746573;
  }
  else {
    uint64_t v18 = 7364980;
  }
  if (*(unsigned char *)a1) {
    unint64_t v19 = 0xE800000000000000;
  }
  else {
    unint64_t v19 = 0xE300000000000000;
  }
  if (*(unsigned char *)a2) {
    uint64_t v20 = 0x657461645F746573;
  }
  else {
    uint64_t v20 = 7364980;
  }
  if (*(unsigned char *)a2) {
    unint64_t v21 = 0xE800000000000000;
  }
  else {
    unint64_t v21 = 0xE300000000000000;
  }
  if (v18 == v20 && v19 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_1C1EAF7A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v22 & 1) == 0) {
      return result;
    }
  }
  uint64_t v24 = *(void *)(a1 + 16);
  uint64_t v25 = *(void *)(a2 + 16);
  if (!v24)
  {
    if (v25) {
      return 0;
    }
    goto LABEL_24;
  }
  if (!v25) {
    return 0;
  }
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && v24 == v25 || (v26 = sub_1C1EAF7A8(), BOOL result = 0, (v26 & 1) != 0))
  {
LABEL_24:
    uint64_t v27 = type metadata accessor for ModelTrainingCommand(0);
    uint64_t v28 = a1 + *(int *)(v27 + 24);
    char v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1C1E37B18(v28, (uint64_t)v17, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928]);
    sub_1C1E37B18(a2 + *(int *)(v27 + 24), (uint64_t)v15, (unint64_t *)&qword_1EBB682A8, v29);
    uint64_t v30 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_1C1E37B18((uint64_t)v17, (uint64_t)v9, (unint64_t *)&qword_1EBB682A8, v29);
    sub_1C1E37B18((uint64_t)v15, v30, (unint64_t *)&qword_1EBB682A8, v29);
    BOOL v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
    if (v31((uint64_t)v9, 1, v4) == 1)
    {
      uint64_t v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1C1E3C304((uint64_t)v15, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928]);
      sub_1C1E3C304((uint64_t)v17, (unint64_t *)&qword_1EBB682A8, v32);
      if (v31(v30, 1, v4) == 1)
      {
        sub_1C1E3C304((uint64_t)v9, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928]);
        return 1;
      }
      goto LABEL_29;
    }
    uint64_t v33 = v42;
    sub_1C1E37B18((uint64_t)v9, v42, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928]);
    if (v31(v30, 1, v4) == 1)
    {
      uint64_t v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1C1E3C304((uint64_t)v15, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928]);
      sub_1C1E3C304((uint64_t)v17, (unint64_t *)&qword_1EBB682A8, v34);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v33, v4);
LABEL_29:
      sub_1C1E3C374((uint64_t)v9, (uint64_t (*)(void))sub_1C1E3C270);
      return 0;
    }
    uint64_t v35 = v43;
    int64_t v36 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v41, v30, v4);
    sub_1C1DFAB24(&qword_1EA2C1400, MEMORY[0x1E4F27928]);
    char v37 = sub_1C1EAED18();
    uint64_t v38 = *(void (**)(char *, uint64_t))(v35 + 8);
    v38(v36, v4);
    uint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1C1E3C304((uint64_t)v15, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928]);
    sub_1C1E3C304((uint64_t)v17, (unint64_t *)&qword_1EBB682A8, v39);
    v38((char *)v33, v4);
    sub_1C1E3C304((uint64_t)v9, (unint64_t *)&qword_1EBB682A8, v39);
    return (v37 & 1) != 0;
  }
  return result;
}

uint64_t sub_1C1E3775C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C1E377C4()
{
  unint64_t result = qword_1EA2C12E0;
  if (!qword_1EA2C12E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C12E0);
  }
  return result;
}

unint64_t sub_1C1E37818()
{
  unint64_t result = qword_1EA2C12F0;
  if (!qword_1EA2C12F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C12F0);
  }
  return result;
}

unint64_t sub_1C1E3786C()
{
  unint64_t result = qword_1EA2C1300;
  if (!qword_1EA2C1300)
  {
    sub_1C1E3793C(255, &qword_1EA2C12F8, type metadata accessor for ModelTrainingCommand, MEMORY[0x1E4FBB320]);
    sub_1C1DFAB24(&qword_1EA2C1308, (void (*)(uint64_t))type metadata accessor for ModelTrainingCommand);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C1300);
  }
  return result;
}

void sub_1C1E3793C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C1E379A0()
{
  unint64_t result = qword_1EA2C1318;
  if (!qword_1EA2C1318)
  {
    sub_1C1E3793C(255, &qword_1EA2C1310, type metadata accessor for ModelTrainingElement, MEMORY[0x1E4FBB320]);
    sub_1C1DFAB24(&qword_1EA2C1320, (void (*)(uint64_t))type metadata accessor for ModelTrainingElement);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C1318);
  }
  return result;
}

unint64_t sub_1C1E37A70()
{
  unint64_t result = qword_1EA2C1330;
  if (!qword_1EA2C1330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C1330);
  }
  return result;
}

unint64_t sub_1C1E37AC4()
{
  unint64_t result = qword_1EA2C1338;
  if (!qword_1EA2C1338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C1338);
  }
  return result;
}

uint64_t sub_1C1E37B18(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C1E3793C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1C1E37B98()
{
  unint64_t result = qword_1EA2C1348;
  if (!qword_1EA2C1348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C1348);
  }
  return result;
}

uint64_t sub_1C1E37BEC(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1E16E70(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1E37C64(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C1E3793C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1C1E37CE8()
{
  unint64_t result = qword_1EA2C1378;
  if (!qword_1EA2C1378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C1378);
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelTrainingScenario()
{
  return &type metadata for ModelTrainingScenario;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModelTrainingCommand(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C1EAD318();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1C1E3793C(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for ModelTrainingCommand(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C1EAD318();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for ModelTrainingCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_1C1EAD318();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1C1E3793C(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithCopy for ModelTrainingCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1C1EAD318();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1C1E3793C(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for ModelTrainingCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1C1EAD318();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C1E3793C(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for ModelTrainingCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C1EAD318();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1C1E3793C(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelTrainingCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1E38600);
}

uint64_t sub_1C1E38600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1C1E3793C(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ModelTrainingCommand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1E38700);
}

uint64_t sub_1C1E38700(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 16) = a2;
  }
  else
  {
    sub_1C1E3793C(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C1E387D8()
{
  sub_1C1E3793C(319, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1C1E388C0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1C1E388C8(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ModelTrainingCommand.Kind()
{
  return &type metadata for ModelTrainingCommand.Kind;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModelTrainingElement(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C1EAD668();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    int64_t v17 = (char *)v7 + v14;
    uint64_t v18 = (char *)a2 + v14;
    uint64_t v19 = sub_1C1EADE38();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1C1E3793C(0, &qword_1EBB661E8, MEMORY[0x1E4F67360], MEMORY[0x1E4FBB718]);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v22 = a3[8];
    id v23 = (char *)v7 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_1C1EADDD8();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      sub_1C1E3793C(0, (unint64_t *)&qword_1EBB661C8, MEMORY[0x1E4F672E8], MEMORY[0x1E4FBB718]);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v28 = a3[9];
    char v29 = (char *)v7 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = sub_1C1EAD318();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    *(uint64_t *)((char *)v7 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    uint64_t v33 = (char *)v7 + v32;
    uint64_t v34 = (char *)a2 + v32;
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    uint64_t v35 = a3[12];
    int64_t v36 = (char *)v7 + v35;
    char v37 = (char *)a2 + v35;
    uint64_t v38 = sub_1C1EADBB8();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain();
    if (v40(v37, 1, v38))
    {
      sub_1C1E3793C(0, &qword_1EBB661B0, MEMORY[0x1E4F67258], MEMORY[0x1E4FBB718]);
      memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    uint64_t v42 = a3[13];
    uint64_t v43 = (char *)v7 + v42;
    int64_t v44 = (char *)a2 + v42;
    uint64_t v45 = sub_1C1EADAA8();
    uint64_t v46 = *(void *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
    {
      sub_1C1E3793C(0, &qword_1EBB66190, MEMORY[0x1E4F67200], MEMORY[0x1E4FBB718]);
      memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    uint64_t v48 = a3[14];
    int64_t v49 = (uint64_t *)((char *)v7 + v48);
    unint64_t v50 = (uint64_t *)((char *)a2 + v48);
    uint64_t v51 = v50[1];
    *int64_t v49 = *v50;
    v49[1] = v51;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ModelTrainingElement(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C1EAD668();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = sub_1C1EADE38();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = sub_1C1EADDD8();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = a1 + a2[9];
  uint64_t v13 = sub_1C1EAD318();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + a2[12];
  uint64_t v15 = sub_1C1EADBB8();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  uint64_t v17 = a1 + a2[13];
  uint64_t v18 = sub_1C1EADAA8();
  uint64_t v19 = *(void *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ModelTrainingElement(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1EAD668();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  uint64_t v17 = sub_1C1EADE38();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1C1E3793C(0, &qword_1EBB661E8, MEMORY[0x1E4F67360], MEMORY[0x1E4FBB718]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_1C1EADDD8();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1C1E3793C(0, (unint64_t *)&qword_1EBB661C8, MEMORY[0x1E4F672E8], MEMORY[0x1E4FBB718]);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_1C1EAD318();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  uint64_t v30 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  uint64_t v33 = a3[12];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_1C1EADBB8();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  if (v38(v35, 1, v36))
  {
    sub_1C1E3793C(0, &qword_1EBB661B0, MEMORY[0x1E4F67258], MEMORY[0x1E4FBB718]);
    memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  uint64_t v40 = a3[13];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = sub_1C1EADAA8();
  uint64_t v44 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    sub_1C1E3793C(0, &qword_1EBB66190, MEMORY[0x1E4F67200], MEMORY[0x1E4FBB718]);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  uint64_t v46 = a3[14];
  uint64_t v47 = (void *)((char *)a1 + v46);
  uint64_t v48 = (void *)((char *)a2 + v46);
  uint64_t v49 = v48[1];
  *uint64_t v47 = *v48;
  v47[1] = v49;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ModelTrainingElement(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1EAD668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1C1EADE38();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    sub_1C1E3793C(0, &qword_1EBB661E8, MEMORY[0x1E4F67360], MEMORY[0x1E4FBB718]);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  uint64_t v23 = a3[8];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_1C1EADDD8();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
LABEL_12:
    sub_1C1E3793C(0, (unint64_t *)&qword_1EBB661C8, MEMORY[0x1E4F672E8], MEMORY[0x1E4FBB718]);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
LABEL_13:
  uint64_t v32 = a3[9];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = sub_1C1EAD318();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[11];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = *(void *)v38;
  v37[8] = v38[8];
  *(void *)uint64_t v37 = v39;
  uint64_t v40 = a3[12];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = sub_1C1EADBB8();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  int v46 = v45(v41, 1, v43);
  int v47 = v45(v42, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
LABEL_18:
    sub_1C1E3793C(0, &qword_1EBB661B0, MEMORY[0x1E4F67258], MEMORY[0x1E4FBB718]);
    memcpy(v41, v42, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 24))(v41, v42, v43);
LABEL_19:
  uint64_t v49 = a3[13];
  unint64_t v50 = (char *)a1 + v49;
  uint64_t v51 = (char *)a2 + v49;
  uint64_t v52 = sub_1C1EADAA8();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  int v55 = v54(v50, 1, v52);
  int v56 = v54(v51, 1, v52);
  if (!v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 24))(v50, v51, v52);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v52);
    goto LABEL_24;
  }
  if (v56)
  {
LABEL_24:
    sub_1C1E3793C(0, &qword_1EBB66190, MEMORY[0x1E4F67200], MEMORY[0x1E4FBB718]);
    memcpy(v50, v51, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
LABEL_25:
  uint64_t v58 = a3[14];
  uint64_t v59 = (void *)((char *)a1 + v58);
  uint64_t v60 = (void *)((char *)a2 + v58);
  void *v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ModelTrainingElement(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1EAD668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  char v13 = (char *)a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = (char *)a1 + v11;
  uint64_t v15 = (char *)a2 + v11;
  uint64_t v16 = sub_1C1EADE38();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1C1E3793C(0, &qword_1EBB661E8, MEMORY[0x1E4F67360], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[8];
  int v20 = (char *)a1 + v19;
  int v21 = (char *)a2 + v19;
  uint64_t v22 = sub_1C1EADDD8();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    sub_1C1E3793C(0, (unint64_t *)&qword_1EBB661C8, MEMORY[0x1E4F672E8], MEMORY[0x1E4FBB718]);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v25 = a3[9];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_1C1EAD318();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  uint64_t v29 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  int v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *(void *)int v30 = *(void *)v31;
  v30[8] = v31[8];
  uint64_t v32 = a3[12];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = sub_1C1EADBB8();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    sub_1C1E3793C(0, &qword_1EBB661B0, MEMORY[0x1E4F67258], MEMORY[0x1E4FBB718]);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  uint64_t v38 = a3[13];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = sub_1C1EADAA8();
  uint64_t v42 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    sub_1C1E3793C(0, &qword_1EBB66190, MEMORY[0x1E4F67200], MEMORY[0x1E4FBB718]);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  return a1;
}

void *assignWithTake for ModelTrainingElement(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1EAD668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  char v13 = (char *)a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = (char *)a1 + v11;
  uint64_t v15 = (char *)a2 + v11;
  uint64_t v16 = sub_1C1EADE38();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    sub_1C1E3793C(0, &qword_1EBB661E8, MEMORY[0x1E4F67360], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1C1EADDD8();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
LABEL_12:
    sub_1C1E3793C(0, (unint64_t *)&qword_1EBB661C8, MEMORY[0x1E4F672E8], MEMORY[0x1E4FBB718]);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
LABEL_13:
  uint64_t v31 = a3[9];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_1C1EAD318();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[11];
  uint64_t v36 = a3[12];
  uint64_t v37 = (char *)a1 + v35;
  uint64_t v38 = (char *)a2 + v35;
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  uint64_t v39 = (char *)a1 + v36;
  uint64_t v40 = (char *)a2 + v36;
  uint64_t v41 = sub_1C1EADBB8();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  int v44 = v43(v39, 1, v41);
  int v45 = v43(v40, 1, v41);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
LABEL_18:
    sub_1C1E3793C(0, &qword_1EBB661B0, MEMORY[0x1E4F67258], MEMORY[0x1E4FBB718]);
    memcpy(v39, v40, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v39, v40, v41);
LABEL_19:
  uint64_t v47 = a3[13];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  uint64_t v50 = sub_1C1EADAA8();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v48, 1, v50);
  int v54 = v52(v49, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v48, v49, v50);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
    goto LABEL_24;
  }
  if (v54)
  {
LABEL_24:
    sub_1C1E3793C(0, &qword_1EBB66190, MEMORY[0x1E4F67200], MEMORY[0x1E4FBB718]);
    memcpy(v48, v49, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
LABEL_25:
  uint64_t v56 = a3[14];
  uint64_t v57 = (void *)((char *)a1 + v56);
  uint64_t v58 = (void *)((char *)a2 + v56);
  uint64_t v60 = *v58;
  uint64_t v59 = v58[1];
  void *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelTrainingElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1E3AAB4);
}

uint64_t sub_1C1E3AAB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C1EAD668();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_13:
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v15(a1 + v9, a2, v7);
  }
  sub_1C1E3793C(0, &qword_1EBB661E8, MEMORY[0x1E4F67360], MEMORY[0x1E4FBB718]);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_13;
  }
  sub_1C1E3793C(0, (unint64_t *)&qword_1EBB661C8, MEMORY[0x1E4F672E8], MEMORY[0x1E4FBB718]);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_13;
  }
  uint64_t v12 = sub_1C1EAD318();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v7 = v12;
    uint64_t v8 = *(void *)(v12 - 8);
    uint64_t v9 = a3[9];
    goto LABEL_13;
  }
  sub_1C1E3793C(0, &qword_1EBB661B0, MEMORY[0x1E4F67258], MEMORY[0x1E4FBB718]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v7 = v13;
    uint64_t v8 = *(void *)(v13 - 8);
    uint64_t v9 = a3[12];
    goto LABEL_13;
  }
  sub_1C1E3793C(0, &qword_1EBB66190, MEMORY[0x1E4F67200], MEMORY[0x1E4FBB718]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v7 = v14;
    uint64_t v8 = *(void *)(v14 - 8);
    uint64_t v9 = a3[13];
    goto LABEL_13;
  }
  unint64_t v17 = *(void *)(a1 + a3[14] + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelTrainingElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1E3ADCC);
}

void sub_1C1E3ADCC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1C1EAD668();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    sub_1C1E3793C(0, &qword_1EBB661E8, MEMORY[0x1E4F67360], MEMORY[0x1E4FBB718]);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
    {
      uint64_t v9 = v12;
      uint64_t v10 = *(void *)(v12 - 8);
      uint64_t v11 = a4[7];
    }
    else
    {
      sub_1C1E3793C(0, (unint64_t *)&qword_1EBB661C8, MEMORY[0x1E4F672E8], MEMORY[0x1E4FBB718]);
      if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
      {
        uint64_t v9 = v13;
        uint64_t v10 = *(void *)(v13 - 8);
        uint64_t v11 = a4[8];
      }
      else
      {
        uint64_t v14 = sub_1C1EAD318();
        if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
        {
          uint64_t v9 = v14;
          uint64_t v10 = *(void *)(v14 - 8);
          uint64_t v11 = a4[9];
        }
        else
        {
          sub_1C1E3793C(0, &qword_1EBB661B0, MEMORY[0x1E4F67258], MEMORY[0x1E4FBB718]);
          if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a3)
          {
            uint64_t v9 = v15;
            uint64_t v10 = *(void *)(v15 - 8);
            uint64_t v11 = a4[12];
          }
          else
          {
            sub_1C1E3793C(0, &qword_1EBB66190, MEMORY[0x1E4F67200], MEMORY[0x1E4FBB718]);
            if (*(_DWORD *)(*(void *)(v16 - 8) + 84) != a3)
            {
              *(void *)(a1 + a4[14] + 8) = (a2 - 1);
              return;
            }
            uint64_t v9 = v16;
            uint64_t v10 = *(void *)(v16 - 8);
            uint64_t v11 = a4[13];
          }
        }
      }
    }
  }
  unint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v17(a1 + v11, a2, a2, v9);
}

void sub_1C1E3B0CC()
{
  sub_1C1EAD668();
  if (v0 <= 0x3F)
  {
    sub_1C1E3793C(319, &qword_1EBB661E8, MEMORY[0x1E4F67360], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F)
    {
      sub_1C1E3793C(319, (unint64_t *)&qword_1EBB661C8, MEMORY[0x1E4F672E8], MEMORY[0x1E4FBB718]);
      if (v2 <= 0x3F)
      {
        sub_1C1EAD318();
        if (v3 <= 0x3F)
        {
          sub_1C1E3793C(319, &qword_1EBB661B0, MEMORY[0x1E4F67258], MEMORY[0x1E4FBB718]);
          if (v4 <= 0x3F)
          {
            sub_1C1E3793C(319, &qword_1EBB66190, MEMORY[0x1E4F67200], MEMORY[0x1E4FBB718]);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for ModelTrainingElement.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ModelTrainingElement.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1E3B4C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelTrainingElement.CodingKeys()
{
  return &type metadata for ModelTrainingElement.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ModelTrainingCommand.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ModelTrainingCommand.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1E3B65CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C1E3B684(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ModelTrainingCommand.CodingKeys()
{
  return &type metadata for ModelTrainingCommand.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ModelTrainingEvent.EventKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s18HealthPlatformCore20ModelTrainingCommandV4KindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1E3B7F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelTrainingScenario.CodingKeys()
{
  return &type metadata for ModelTrainingScenario.CodingKeys;
}

uint64_t sub_1C1E3B834()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ModelTrainingScenarioError()
{
  return sub_1C1E3B850();
}

uint64_t sub_1C1E3B850()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s18HealthPlatformCore26ModelTrainingScenarioErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1C1E3B834();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ModelTrainingScenarioError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1C1E3B834();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C1E3B850();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ModelTrainingScenarioError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C1E3B850();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelTrainingScenarioError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelTrainingScenarioError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C1E3B9E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1C1E3B9F0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ModelTrainingScenarioError()
{
  return &type metadata for ModelTrainingScenarioError;
}

unint64_t sub_1C1E3BA10()
{
  unint64_t result = qword_1EA2C13A0;
  if (!qword_1EA2C13A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C13A0);
  }
  return result;
}

unint64_t sub_1C1E3BA68()
{
  unint64_t result = qword_1EA2C13A8;
  if (!qword_1EA2C13A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C13A8);
  }
  return result;
}

unint64_t sub_1C1E3BAC0()
{
  unint64_t result = qword_1EA2C13B0;
  if (!qword_1EA2C13B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C13B0);
  }
  return result;
}

unint64_t sub_1C1E3BB18()
{
  unint64_t result = qword_1EA2C13B8;
  if (!qword_1EA2C13B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C13B8);
  }
  return result;
}

unint64_t sub_1C1E3BB70()
{
  unint64_t result = qword_1EA2C13C0;
  if (!qword_1EA2C13C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C13C0);
  }
  return result;
}

unint64_t sub_1C1E3BBC8()
{
  unint64_t result = qword_1EA2C13C8;
  if (!qword_1EA2C13C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C13C8);
  }
  return result;
}

unint64_t sub_1C1E3BC20()
{
  unint64_t result = qword_1EA2C13D0;
  if (!qword_1EA2C13D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C13D0);
  }
  return result;
}

unint64_t sub_1C1E3BC78()
{
  unint64_t result = qword_1EA2C13D8;
  if (!qword_1EA2C13D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C13D8);
  }
  return result;
}

unint64_t sub_1C1E3BCD0()
{
  unint64_t result = qword_1EA2C13E0;
  if (!qword_1EA2C13E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C13E0);
  }
  return result;
}

uint64_t sub_1C1E3BD24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1C1E3C0C0();
  uint64_t result = sub_1C1EAEF68();
  uint64_t v7 = result;
  if (v2)
  {
    int v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1C1E31144(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1C1E3BD98(unint64_t a1)
{
  return sub_1C1E16C6C(a1, &qword_1EBB66FC8, 0x1E4F2B448, &qword_1EBB66FD0, (void (*)(id *, uint64_t))sub_1C1E31660);
}

uint64_t sub_1C1E3BDC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73646E616D6D6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1EAF7A8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C1E3BEAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1C1EAF7A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1EAF7A8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C1E3BFCC()
{
  unint64_t v0 = sub_1C1EAF6B8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C1E3C018()
{
  unint64_t result = qword_1EA2C13F0;
  if (!qword_1EA2C13F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C13F0);
  }
  return result;
}

unint64_t sub_1C1E3C06C()
{
  unint64_t result = qword_1EBB647D8;
  if (!qword_1EBB647D8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB647D8);
  }
  return result;
}

unint64_t sub_1C1E3C0C0()
{
  unint64_t result = qword_1EBB65330;
  if (!qword_1EBB65330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65330);
  }
  return result;
}

void sub_1C1E3C114(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1C1E3C17C()
{
  if (!qword_1EBB67070)
  {
    type metadata accessor for HKDisplayCategoryIdentifier(255);
    sub_1C1DFAB24(&qword_1EBB67018, type metadata accessor for HKDisplayCategoryIdentifier);
    unint64_t v0 = sub_1C1EAF498();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67070);
    }
  }
}

void sub_1C1E3C210()
{
  if (!qword_1EBB67FA8)
  {
    unint64_t v0 = sub_1C1EAF498();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67FA8);
    }
  }
}

void sub_1C1E3C270()
{
  if (!qword_1EA2C13F8)
  {
    sub_1C1E3793C(255, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C13F8);
    }
  }
}

uint64_t sub_1C1E3C304(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1E3793C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1E3C374(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1C1E3C3E0()
{
  type metadata accessor for BaseFeedPopulationManager();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EBB65D90 = (uint64_t)result;
  return result;
}

uint64_t sub_1C1E3C438@<X0>(uint64_t *a1@<X8>)
{
  sub_1C1EAD368();
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  sub_1C1DECE04(&qword_1EBB68168, MEMORY[0x1E4F27990]);
  uint64_t v2 = sub_1C1EAEC18();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t result = sub_1C1EAEC18();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C1E3C564(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C1E3C5AC())()
{
  return j_j__swift_endAccess;
}

void sub_1C1E3C600(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 48);
  *(void *)(v1 + 48) = a1;
}

uint64_t (*sub_1C1E3C648())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C1E3C69C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 144) = a1;
  return swift_release();
}

uint64_t (*sub_1C1E3C6E4())()
{
  return j__swift_endAccess;
}

uint64_t GeneratorPipelineManager.transactionBuilderManager.getter()
{
  return swift_retain();
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.country.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1DF8A78(v1 + qword_1EBB6AB88, a1, (uint64_t (*)(void))sub_1C1DF9328);
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.isLaunchGeneration.getter()
{
  return *(unsigned __int8 *)(v0 + qword_1EBB6ABE0);
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.interactiveSharableModelPublisher.getter()
{
  return swift_retain();
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.__allocating_init(sourceProfilePublisher:country:interactiveSharableModelPublisher:isLaunchGeneration:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  sub_1C1DD5E48(a2, v8 + qword_1EBB6AB88);
  *(void *)(v8 + qword_1EBB6AB80) = a3;
  *(unsigned char *)(v8 + qword_1EBB6ABE0) = a4;
  return v8;
}

uint64_t GeneratorPipelineManager.__allocating_init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v16 = a4 & 1;
  uint64_t v17 = swift_allocObject();
  GeneratorPipelineManager.init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(a1, a2, a3, v16, a5, a6, a7, a8, a9);
  return v17;
}

void *GeneratorPipelineManager.init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v10 = v9;
  uint64_t v62 = a8;
  uint64_t v74 = a7;
  uint64_t v66 = a6;
  uint64_t v73 = a5;
  uint64_t v58 = a3;
  uint64_t v56 = a2;
  uint64_t v75 = a9;
  uint64_t v76 = a1;
  uint64_t v72 = *v9;
  int v55 = a4 & 1;
  uint64_t v11 = sub_1C1EAF178();
  uint64_t v70 = *(void *)(v11 - 8);
  uint64_t v71 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v68 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v72 + 80);
  uint64_t v14 = *(void *)(v72 + 88);
  type metadata accessor for GeneratorPipelineManager.GenerationState();
  uint64_t v15 = sub_1C1EAE848();
  uint64_t v16 = sub_1C1DF9F8C(255, (unint64_t *)&qword_1EBB68388);
  uint64_t v49 = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v65 = WitnessTable;
  uint64_t v64 = sub_1C1DFAEA0((unint64_t *)&qword_1EBB67F58, (unint64_t *)&qword_1EBB68388);
  *(void *)&long long v78 = v15;
  *((void *)&v78 + 1) = v16;
  uint64_t v50 = v15;
  uint64_t v79 = WitnessTable;
  uint64_t v80 = v64;
  uint64_t v67 = sub_1C1EAE728();
  uint64_t v69 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  int v63 = (char *)&v47 - v18;
  uint64_t v59 = sub_1C1EAD948();
  uint64_t v57 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  int v54 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1C1EAD9C8();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  int v53 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1C1EAF188();
  uint64_t v21 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C1EAF148();
  MEMORY[0x1F4188790](v24);
  uint64_t v25 = sub_1C1EAEBD8();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v52 = v13;
  uint64_t v51 = v14;
  sub_1C1E3C438((uint64_t *)&v78);
  long long v77 = v78;
  void v9[2] = sub_1C1EAE858();
  v9[4] = 0;
  *(void *)&long long v78 = 0;
  *((void *)&v78 + 1) = 0xE000000000000000;
  sub_1C1EAF4A8();
  *(void *)&long long v78 = type metadata accessor for GeneratorPipelineManager();
  swift_getMetatypeMetadata();
  uint64_t v26 = sub_1C1EAED68();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  *(void *)&long long v78 = v26;
  *((void *)&v78 + 1) = v28;
  sub_1C1EAEDB8();
  sub_1C1EAEB98();
  *(void *)&long long v78 = MEMORY[0x1E4FBC860];
  sub_1C1DECE04(&qword_1EBB68380, MEMORY[0x1E4FBCC10]);
  sub_1C1DFA59C(0, &qword_1EBB68368, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C1DE8930();
  sub_1C1EAF328();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E4FBCC58], v48);
  v9[19] = sub_1C1EAF1A8();
  sub_1C1DFE408(v76, (uint64_t)(v9 + 8));
  int v29 = v56;
  void v9[6] = (uint64_t)v56;
  v9[3] = v58;
  *((unsigned char *)v9 + 40) = v55;
  sub_1C1DFE408(v73, (uint64_t)(v9 + 13));
  v9[30] = v74;
  uint64_t v30 = v62;
  sub_1C1DFE408(v62, (uint64_t)(v9 + 20));
  uint64_t v31 = v75;
  sub_1C1DFE408(v75, (uint64_t)(v9 + 25));
  sub_1C1DFA59C(0, &qword_1EBB670E8, (uint64_t (*)(uint64_t))sub_1C1E48A54, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1EB07F0;
  id v33 = v29;
  swift_retain();
  *(void *)(inited + 32) = objc_msgSend(v33, sel_profileIdentifier);
  *(void *)(inited + 40) = v33;
  id v34 = v33;
  *(void *)&long long v78 = sub_1C1E09AA8(inited);
  sub_1C1E48AE4();
  swift_allocObject();
  v10[7] = sub_1C1EAE1D8();
  v10[18] = v66;
  uint64_t v35 = (void *)v31;
  uint64_t v36 = *(void *)(v31 + 24);
  uint64_t v37 = *(void *)(v31 + 32);
  __swift_project_boxed_opaque_existential_1(v35, v36);
  (*(void (**)(char *, void, uint64_t))(v57 + 104))(v54, *MEMORY[0x1E4F67198], v59);
  swift_retain();
  uint64_t v38 = v53;
  sub_1C1EAD988();
  uint64_t v39 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 8))(v38, v36, v37);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v61);
  *(void *)&long long v78 = v10[2];
  swift_retain();
  uint64_t v40 = v68;
  sub_1C1EAF168();
  *(void *)&long long v77 = v39;
  uint64_t v41 = v63;
  sub_1C1EAEB18();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v40, v71);
  swift_release();
  uint64_t v42 = (void *)swift_allocObject();
  uint64_t v43 = v51;
  void v42[2] = v52;
  v42[3] = v43;
  v42[4] = v72;
  uint64_t v44 = v67;
  swift_getWitnessTable();
  uint64_t v45 = sub_1C1EAEB48();

  swift_release();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v30);
  __swift_destroy_boxed_opaque_existential_1(v73);
  __swift_destroy_boxed_opaque_existential_1(v76);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v44);
  v10[4] = v45;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v75);
  return v10;
}

unint64_t sub_1C1E3D28C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C1E4BC54();
  uint64_t v2 = sub_1C1EAF688();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C1DF8A78(v6, (uint64_t)v15, (uint64_t (*)(void))sub_1C1E4BCC0);
    unint64_t result = sub_1C1E60ACC((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1C1E4BD2C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C1E3D3CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v72 = a3;
  uint64_t v73 = a4;
  uint64_t v6 = sub_1C1EAE568();
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v71 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v69 = (char *)&v67 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v68 = (char *)&v67 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v67 - v13;
  uint64_t v16 = *a1;
  uint64_t v15 = a1[1];
  sub_1C1EAE4F8();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = v15;
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_1C1EAE558();
  os_log_type_t v19 = sub_1C1EAF0D8();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v74 = v6;
  uint64_t v70 = a2;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v78 = v22;
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v76 = a2;
    swift_getMetatypeMetadata();
    uint64_t v23 = sub_1C1EAED68();
    uint64_t v76 = sub_1C1DF8D44(v23, v24, &v78);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v76 = v16;
    uint64_t v77 = v17;
    uint64_t v25 = type metadata accessor for GeneratorPipelineManager.GenerationState();
    uint64_t v26 = sub_1C1E3DC58(v25);
    uint64_t v76 = sub_1C1DF8D44(v26, v27, &v78);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v18, v19, "[%{public}s]: %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v22, -1, -1);
    uint64_t v28 = v21;
    uint64_t v6 = v74;
    MEMORY[0x1C874D2E0](v28, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  int v29 = *(void (**)(char *, uint64_t))(v75 + 8);
  v29(v14, v6);
  uint64_t v30 = v68;
  sub_1C1EAE4F8();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v31 = sub_1C1EAE558();
  os_log_type_t v32 = sub_1C1EAF098();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v78 = v34;
    *(_DWORD *)uint64_t v33 = 136446466;
    uint64_t v76 = v70;
    swift_getMetatypeMetadata();
    uint64_t v35 = sub_1C1EAED68();
    uint64_t v76 = sub_1C1DF8D44(v35, v36, &v78);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2082;
    uint64_t v76 = v16;
    uint64_t v77 = v17;
    uint64_t v37 = type metadata accessor for GeneratorPipelineManager.GenerationState();
    unint64_t v38 = sub_1C1E3DECC(v37);
    uint64_t v76 = sub_1C1DF8D44(v38, v39, &v78);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v31, v32, "[%{public}s]: %{public}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v34, -1, -1);
    uint64_t v40 = v33;
    uint64_t v6 = v74;
    MEMORY[0x1C874D2E0](v40, -1, -1);

    uint64_t v41 = v68;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v41 = v30;
  }
  v29(v41, v6);
  uint64_t v42 = v69;
  sub_1C1EAE4F8();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v43 = sub_1C1EAE558();
  os_log_type_t v44 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v78 = v46;
    *(_DWORD *)uint64_t v45 = 136446466;
    uint64_t v76 = v70;
    swift_getMetatypeMetadata();
    uint64_t v47 = sub_1C1EAED68();
    uint64_t v76 = sub_1C1DF8D44(v47, v48, &v78);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2082;
    uint64_t v76 = v16;
    uint64_t v77 = v17;
    uint64_t v49 = type metadata accessor for GeneratorPipelineManager.GenerationState();
    uint64_t v50 = sub_1C1E3E0E0(v49);
    uint64_t v76 = sub_1C1DF8D44(v50, v51, &v78);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v43, v44, "[%{public}s]: %{public}s", (uint8_t *)v45, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v46, -1, -1);
    uint64_t v52 = v45;
    uint64_t v6 = v74;
    MEMORY[0x1C874D2E0](v52, -1, -1);

    int v53 = v69;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    int v53 = v42;
  }
  v29(v53, v6);
  int v54 = v71;
  sub_1C1EAE4F8();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  int v55 = sub_1C1EAE558();
  os_log_type_t v56 = sub_1C1EAF098();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    uint64_t v78 = v58;
    *(_DWORD *)uint64_t v57 = 136446466;
    uint64_t v76 = v70;
    swift_getMetatypeMetadata();
    uint64_t v59 = sub_1C1EAED68();
    uint64_t v76 = sub_1C1DF8D44(v59, v60, &v78);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2082;
    uint64_t v76 = v16;
    uint64_t v77 = v17;
    uint64_t v61 = type metadata accessor for GeneratorPipelineManager.GenerationState();
    unint64_t v62 = sub_1C1E3E398(v61);
    uint64_t v76 = sub_1C1DF8D44(v62, v63, &v78);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v55, v56, "[%{public}s]: %{public}s", (uint8_t *)v57, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v58, -1, -1);
    MEMORY[0x1C874D2E0](v57, -1, -1);

    uint64_t v64 = v74;
    uint64_t v65 = v71;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v65 = v54;
    uint64_t v64 = v6;
  }
  return ((uint64_t (*)(char *, uint64_t))v29)(v65, v64);
}

uint64_t sub_1C1E3DC58(uint64_t a1)
{
  uint64_t v16 = *v1;
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = v2;
  void v11[2] = v13;
  v11[3] = v2;
  void v11[4] = sub_1C1E4BAB0;
  v11[5] = &v12;
  sub_1C1EAD368();
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  sub_1C1DECE04(&qword_1EBB68168, MEMORY[0x1E4F27990]);
  uint64_t v3 = sub_1C1EAEC98();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_1C1DD94F4((void (*)(char *, char *))sub_1C1E4BAE0, (uint64_t)v11, v3, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v5);
  swift_bridgeObjectRelease();
  uint64_t v16 = v6;
  sub_1C1E10020(0, (unint64_t *)&qword_1EBB68358);
  sub_1C1E10068((unint64_t *)&qword_1EBB68360, (unint64_t *)&qword_1EBB68358);
  sub_1C1EAECE8();
  swift_bridgeObjectRelease();
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  sub_1C1EAF4A8();
  uint64_t v15 = sub_1C1EAEC78();
  uint64_t v7 = sub_1C1EAF768();
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v16 = v7;
  unint64_t v17 = v9;
  sub_1C1EAEDB8();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_1C1E3DECC(uint64_t a1)
{
  unint64_t v12 = *v1;
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = v2;
  v8[2] = v10;
  v8[3] = v2;
  v8[4] = sub_1C1E4BB58;
  v8[5] = &v9;
  sub_1C1EAD368();
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  sub_1C1DECE04(&qword_1EBB68168, MEMORY[0x1E4F27990]);
  uint64_t v3 = sub_1C1EAEC98();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_1C1DD94F4((void (*)(char *, char *))sub_1C1E4BE10, (uint64_t)v8, v3, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v5);
  swift_bridgeObjectRelease();
  unint64_t v12 = v6;
  sub_1C1E10020(0, (unint64_t *)&qword_1EBB68358);
  sub_1C1E10068((unint64_t *)&qword_1EBB68360, (unint64_t *)&qword_1EBB68358);
  sub_1C1EAECE8();
  swift_bridgeObjectRelease();
  unint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_1C1EAF4A8();
  swift_bridgeObjectRelease();
  unint64_t v12 = 0xD00000000000001ELL;
  unint64_t v13 = 0x80000001C1EB4400;
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C1E3E0E0(uint64_t a1)
{
  uint64_t v16 = *(void *)(v1 + 8);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = v2;
  void v11[2] = v13;
  v11[3] = v2;
  void v11[4] = sub_1C1E4BB88;
  v11[5] = &v12;
  sub_1C1EAD368();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  sub_1C1DECE04(&qword_1EBB68168, MEMORY[0x1E4F27990]);
  uint64_t v3 = sub_1C1EAEC98();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_1C1DD94F4((void (*)(char *, char *))sub_1C1E4BBB8, (uint64_t)v11, v3, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v5);
  swift_bridgeObjectRelease();
  uint64_t v16 = v6;
  sub_1C1E10020(0, (unint64_t *)&qword_1EBB68358);
  sub_1C1E10068((unint64_t *)&qword_1EBB68360, (unint64_t *)&qword_1EBB68358);
  sub_1C1EAECE8();
  swift_bridgeObjectRelease();
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  sub_1C1EAF4A8();
  uint64_t v15 = sub_1C1EAEC78();
  uint64_t v7 = sub_1C1EAF768();
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v16 = v7;
  unint64_t v17 = v9;
  sub_1C1EAEDB8();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_1C1E3E398(uint64_t a1)
{
  unint64_t v12 = *(void *)(v1 + 8);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = v2;
  v8[2] = v10;
  v8[3] = v2;
  v8[4] = sub_1C1E4BBDC;
  v8[5] = &v9;
  sub_1C1EAD368();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  sub_1C1DECE04(&qword_1EBB68168, MEMORY[0x1E4F27990]);
  uint64_t v3 = sub_1C1EAEC98();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_1C1DD94F4((void (*)(char *, char *))sub_1C1E4BE28, (uint64_t)v8, v3, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v5);
  swift_bridgeObjectRelease();
  unint64_t v12 = v6;
  sub_1C1E10020(0, (unint64_t *)&qword_1EBB68358);
  sub_1C1E10068((unint64_t *)&qword_1EBB68360, (unint64_t *)&qword_1EBB68358);
  sub_1C1EAECE8();
  swift_bridgeObjectRelease();
  unint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_1C1EAF4A8();
  swift_bridgeObjectRelease();
  unint64_t v12 = 0xD00000000000001FLL;
  unint64_t v13 = 0x80000001C1EB4440;
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  return v12;
}

id sub_1C1E3E5F8(void *a1)
{
  if (a1)
  {
    MEMORY[0x1F4188790](a1);
    sub_1C1DF9F8C(0, &qword_1EBB66FE8);
    swift_retain();
    id v3 = a1;
    sub_1C1EAE198();
    swift_release();

    return (id)v6;
  }
  else
  {
    swift_beginAccess();
    uint64_t v5 = *(void **)(v1 + 48);
    return v5;
  }
}

uint64_t sub_1C1E3E704(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v45 = a1;
  uint64_t v43 = *v1;
  sub_1C1E0B04C();
  uint64_t v4 = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  v33[1] = sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
  uint64_t v5 = sub_1C1EAE7D8();
  uint64_t v44 = v4;
  uint64_t v40 = sub_1C1DECE04(&qword_1EBB65048, (void (*)(uint64_t))sub_1C1E0B04C);
  uint64_t v6 = sub_1C1EAE668();
  uint64_t v41 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v38 = (char *)v33 - v7;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = swift_getWitnessTable();
  uint64_t v42 = v5;
  v46[0] = v5;
  v46[1] = v6;
  uint64_t v36 = WitnessTable;
  void v46[2] = WitnessTable;
  v46[3] = v9;
  uint64_t v34 = v9;
  uint64_t v39 = sub_1C1EAE618();
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v35 = (char *)v33 - v10;
  sub_1C1E4B940(0, (unint64_t *)&qword_1EBB64D48, (void (*)(uint64_t))sub_1C1E48B74, (void (*)(void))sub_1C1E0C088);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v33 - v14;
  sub_1C1E14D20(0, &qword_1EBB66EA0, (uint64_t (*)(uint64_t))sub_1C1E48B74, sub_1C1E0C088, MEMORY[0x1E4F1A9A8]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  BOOL v20 = (char *)v33 - v19;
  uint64_t v21 = *(void *)(v45 + 16);
  if (sub_1C1EADF78())
  {
    v46[0] = v21;
    sub_1C1E48B74();
    sub_1C1E0C088();
    sub_1C1EAEA98();
    sub_1C1E48C34();
    uint64_t v21 = sub_1C1EAEA38();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    swift_retain();
  }
  v46[0] = sub_1C1E3F8E0(v21);
  sub_1C1E48B74();
  sub_1C1E0C088();
  sub_1C1EAEB38();
  swift_release();
  swift_getWitnessTable();
  uint64_t v22 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v23 = v2[23];
  uint64_t v24 = v2[24];
  __swift_project_boxed_opaque_existential_1(v2 + 20, v23);
  v46[0] = v22;
  v46[0] = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 24))(v46, v44, v40, v23, v24);
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  uint64_t v26 = (void *)swift_allocObject();
  void v26[2] = v25;
  uint64_t v27 = v43;
  v26[3] = v45;
  v26[4] = v27;
  swift_retain();
  uint64_t v28 = v38;
  sub_1C1EAEA68();
  swift_release();
  swift_release();
  int v29 = v35;
  MEMORY[0x1C874BC40](v6, v34, v36);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v6);
  uint64_t v30 = v39;
  swift_getWitnessTable();
  uint64_t v31 = sub_1C1EAEA38();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v30);
  return v31;
}

uint64_t sub_1C1E3EE00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v73 = a5;
  uint64_t v71 = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v8 = type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t v9 = sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
  uint64_t v10 = sub_1C1EAE7D8();
  swift_getWitnessTable();
  uint64_t v11 = sub_1C1EAE5B8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v60 - v13;
  uint64_t v65 = (void (*)(char *, uint64_t))v9;
  uint64_t v66 = v8;
  uint64_t v15 = sub_1C1EAE8D8();
  uint64_t v63 = *(void *)(v15 - 8);
  uint64_t v64 = v15;
  MEMORY[0x1F4188790](v15);
  unint64_t v62 = (char *)&v60 - v16;
  uint64_t v17 = sub_1C1EAE568();
  uint64_t v74 = *(void *)(v17 - 8);
  uint64_t v75 = v17;
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v72 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v60 - v20;
  uint64_t v22 = *a1;
  uint64_t v23 = a2 + 16;
  sub_1C1EAE4F8();
  swift_bridgeObjectRetain_n();
  uint64_t v24 = sub_1C1EAE558();
  os_log_type_t v25 = sub_1C1EAF0D8();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v69 = v12;
  uint64_t v70 = v11;
  uint64_t v67 = v10;
  uint64_t v68 = v14;
  uint64_t v61 = a4;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v79[0] = v28;
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v78 = a4;
    swift_getMetatypeMetadata();
    uint64_t v60 = v23;
    uint64_t v29 = sub_1C1EAED68();
    uint64_t v78 = sub_1C1DF8D44(v29, v30, v79);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    uint64_t v31 = swift_bridgeObjectRetain();
    uint64_t v32 = MEMORY[0x1C874C0C0](v31, MEMORY[0x1E4F670C0]);
    unint64_t v34 = v33;
    swift_bridgeObjectRelease();
    uint64_t v78 = sub_1C1DF8D44(v32, v34, v79);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v24, v25, "%{public}s: Switching to a new pipeline with sourceProfiles: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v28, -1, -1);
    MEMORY[0x1C874D2E0](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v35 = v75;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v74 + 8);
  v36(v21, v75);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v38 = Strong;
    uint64_t v77 = v22;
    uint64_t v76 = MEMORY[0x1E4FBC868];
    sub_1C1E10020(0, &qword_1EBB66F98);
    sub_1C1E09BCC(0, (unint64_t *)&qword_1EBB66F80, MEMORY[0x1E4FBAEA0]);
    swift_getWitnessTable();
    sub_1C1EAEE18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)v38 + 352))(v22, v79[0]);
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_1C1E3FCE8(v71, v22);
    uint64_t v71 = sub_1C1E42804(v39);
    uint64_t v40 = v72;
    sub_1C1EAE4F8();
    swift_bridgeObjectRetain_n();
    uint64_t v41 = sub_1C1EAE558();
    os_log_type_t v42 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v77 = v44;
      *(_DWORD *)uint64_t v43 = 136446466;
      uint64_t v65 = v36;
      v79[0] = v61;
      swift_getMetatypeMetadata();
      uint64_t v45 = sub_1C1EAED68();
      uint64_t v66 = v39;
      v79[0] = sub_1C1DF8D44(v45, v46, &v77);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      uint64_t v47 = swift_bridgeObjectRetain();
      uint64_t v48 = MEMORY[0x1C874C0C0](v47, MEMORY[0x1E4F670C0]);
      unint64_t v50 = v49;
      swift_bridgeObjectRelease();
      v79[0] = sub_1C1DF8D44(v48, v50, &v77);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v41, v42, "%{public}s: Created new generation stream for sourceProfiles: %{public}s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v44, -1, -1);
      MEMORY[0x1C874D2E0](v43, -1, -1);

      v65(v72, v75);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v36(v40, v35);
    }
    uint64_t v56 = v69;
    uint64_t v55 = v70;
    uint64_t v58 = v67;
    uint64_t v57 = v68;
    v79[0] = v71;
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_1C1E3F7BC(v58, WitnessTable);
    swift_getWitnessTable();
    uint64_t v53 = sub_1C1EAEA38();
    swift_release();
    swift_release();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v57, v55);
  }
  else
  {
    unint64_t v51 = v62;
    sub_1C1EAE8C8();
    uint64_t v52 = v64;
    swift_getWitnessTable();
    uint64_t v53 = sub_1C1EAEA38();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v51, v52);
  }
  *uint64_t v73 = v53;
  return result;
}

void sub_1C1E3F738(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = sub_1C1EAD778();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    if ((sub_1C1EAD7C8() & 1) == 0)
    {
      id v5 = v4;
      id v6 = sub_1C1E3E5F8(v2);
      sub_1C1DD550C((uint64_t)v6, v5);
    }
  }
}

uint64_t sub_1C1E3F7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1C1EAEA58();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C1E3F8E0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  sub_1C1E14D20(0, &qword_1EBB66EC0, (uint64_t (*)(uint64_t))sub_1C1E48B74, sub_1C1E0C088, MEMORY[0x1E4F1A9E8]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v13 - v8;
  v13[1] = a1;
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = *(void *)(v3 + 80);
  v10[3] = *(void *)(v3 + 88);
  v10[4] = v4;
  sub_1C1E48B74();
  sub_1C1E0C088();
  sub_1C1EAEAA8();
  swift_release();
  sub_1C1E4BD74();
  uint64_t v11 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

BOOL sub_1C1E3FAC8(void **a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1EAE568();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = sub_1C1DDDB64(*a1, (uint64_t)&unk_1F1D65160);
  swift_arrayDestroy();
  if (v8)
  {
    sub_1C1EAE4F8();
    uint64_t v9 = sub_1C1EAE558();
    os_log_type_t v10 = sub_1C1EAF0C8();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446210;
      v16[1] = v11 + 4;
      uint64_t v17 = v12;
      uint64_t v18 = a2;
      swift_getMetatypeMetadata();
      uint64_t v13 = sub_1C1EAED68();
      uint64_t v18 = sub_1C1DF8D44(v13, v14, &v17);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v9, v10, "%{public}s: Received agnostic only source profiles, skipping pipeline for this set of profiles", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v12, -1, -1);
      MEMORY[0x1C874D2E0](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (v8 & 1) == 0;
}

uint64_t sub_1C1E3FCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = *v3;
  uint64_t v5 = v44;
  uint64_t v45 = a1;
  sub_1C1E0F21C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  uint64_t v43 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E0F3F4();
  uint64_t v11 = v10;
  uint64_t v35 = v10;
  uint64_t v46 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v34 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v5 + 88);
  uint64_t v32 = *(void *)(v5 + 80);
  uint64_t v33 = v13;
  uint64_t v14 = v32;
  swift_getAssociatedTypeWitness();
  uint64_t v41 = type metadata accessor for GeneratorPipelineManagerWrapper();
  sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
  uint64_t v15 = sub_1C1EAE7D8();
  uint64_t v38 = v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = WitnessTable;
  uint64_t v40 = MEMORY[0x1E4F1AA40];
  uint64_t v36 = sub_1C1DECE04(&qword_1EBB65AA8, (void (*)(uint64_t))sub_1C1E0F3F4);
  uint64_t v47 = v15;
  uint64_t v48 = v11;
  uint64_t v49 = WitnessTable;
  uint64_t v50 = v36;
  uint64_t v17 = sub_1C1EAE6C8();
  uint64_t v39 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v32 - v18;
  uint64_t v47 = a2;
  sub_1C1E10020(0, &qword_1EBB66F98);
  sub_1C1E10068(&qword_1EBB66FA0, &qword_1EBB66F98);
  sub_1C1EAEDF8();
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = v14;
  v21[3] = v13;
  v21[4] = v20;
  sub_1C1EAE7C8();
  sub_1C1E15464(0, &qword_1EBB65AF0, (uint64_t (*)(uint64_t))sub_1C1DED3D4, MEMORY[0x1E4F1AAE0]);
  sub_1C1E0F2E0();
  sub_1C1E0F194();
  uint64_t v22 = v34;
  uint64_t v23 = v42;
  sub_1C1EAEB58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v23);
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = v44;
  uint64_t v26 = v45;
  v24[2] = v3;
  v24[3] = v26;
  v24[4] = v25;
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v33;
  v27[2] = v32;
  void v27[3] = v28;
  v27[4] = sub_1C1E4B720;
  v27[5] = v24;
  swift_retain();
  swift_retain();
  sub_1C1EAE7C8();
  uint64_t v29 = v35;
  sub_1C1EAEAD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v22, v29);
  swift_getWitnessTable();
  uint64_t v30 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v17);
  return v30;
}

uint64_t sub_1C1E40230@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C1E4A2EC(0, (unint64_t *)&qword_1EBB65A80, sub_1C1E4B7E8, (void (*)(uint64_t))sub_1C1DED3D4, (void (*)(void))sub_1C1DEE7AC);
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v37 - v5;
  sub_1C1DED16C();
  uint64_t v8 = v7;
  uint64_t v47 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v43 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E4B940(0, &qword_1EBB65A70, (void (*)(uint64_t))sub_1C1DED16C, (void (*)(void))sub_1C1DED26C);
  uint64_t v11 = v10;
  uint64_t v46 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v42 = (char *)&v37 - v12;
  sub_1C1DED0D0();
  uint64_t v48 = v13;
  uint64_t v41 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E15464(0, &qword_1EBB65B08, (uint64_t (*)(uint64_t))sub_1C1DED3D4, MEMORY[0x1E4F1AC18]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v37 - v19;
  uint64_t v21 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = (void *)Strong;
    id v39 = sub_1C1E3E5F8(v21);
    swift_retain();
    sub_1C1EAE008();
    swift_release();
    uint64_t v24 = v23[23];
    uint64_t v25 = v23[24];
    __swift_project_boxed_opaque_existential_1(v23 + 20, v24);
    uint64_t v40 = a2;
    uint64_t v38 = v8;
    uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 24);
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v49 = v26(v15, v48, OpaqueTypeConformance2, v24, v25);
    *(void *)(swift_allocObject() + 16) = v21;
    sub_1C1E4B7E8(0);
    sub_1C1DED3D4();
    sub_1C1DEE7AC();
    uint64_t v37 = v11;
    id v28 = v21;
    sub_1C1EAEA68();
    swift_release();
    swift_release();
    *(void *)(swift_allocObject() + 16) = v21;
    sub_1C1DFA59C(0, &qword_1EBB65B00, (uint64_t (*)(uint64_t))sub_1C1DED3D4, MEMORY[0x1E4F1AC08]);
    sub_1C1E4B81C();
    sub_1C1E4B8B8();
    id v29 = v28;
    uint64_t v30 = v43;
    uint64_t v31 = v45;
    a2 = v40;
    sub_1C1EAEA88();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v6, v31);
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    sub_1C1DED26C();
    uint64_t v32 = v42;
    uint64_t v33 = v38;
    sub_1C1EAEB38();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v33);
    sub_1C1DED34C();
    uint64_t v34 = v37;
    uint64_t v35 = sub_1C1EAEA38();
    swift_release();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v34);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v15, v48);
  }
  else
  {
    sub_1C1DED3D4();
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    sub_1C1EAE8C8();
    sub_1C1E4B9E8();
    uint64_t v35 = sub_1C1EAEA38();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  *a2 = v35;
  return result;
}

uint64_t sub_1C1E408CC@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C1EAE568();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = *a1;
  uint64_t v14 = (void *)sub_1C1EAD778();
  if (v14 && (uint64_t v15 = v14, v16 = objc_msgSend(v14, sel_type), v15, v16 == (id)2))
  {
    sub_1C1EAE4F8();
    id v17 = a2;
    uint64_t v18 = sub_1C1EAE558();
    os_log_type_t v19 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v45 = v7;
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      v47[0] = v43;
      uint64_t v44 = v6;
      *(_DWORD *)uint64_t v20 = 136446210;
      uint64_t v42 = (uint64_t)(v20 + 4);
      id v17 = v17;
      uint64_t v21 = sub_1C1EAD798();
      unint64_t v23 = v22;

      uint64_t v46 = sub_1C1DF8D44(v21, v23, v47);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v18, v19, "Returning nil transaction builder for summary sharing profile %{public}s", v20, 0xCu);
      uint64_t v24 = v43;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v24, -1, -1);
      MEMORY[0x1C874D2E0](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v44);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
  }
  else
  {
    uint64_t v45 = v7;
    sub_1C1EAE4F8();
    id v25 = a2;
    id v26 = v13;
    id v17 = v25;
    id v27 = v13;
    id v28 = sub_1C1EAE558();
    os_log_type_t v29 = sub_1C1EAF0B8();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v47[0] = v42;
      *(_DWORD *)uint64_t v30 = 136446466;
      id v17 = v17;
      uint64_t v31 = sub_1C1EAD798();
      uint64_t v43 = a3;
      uint64_t v44 = v6;
      uint64_t v32 = v31;
      unint64_t v34 = v33;

      uint64_t v46 = sub_1C1DF8D44(v32, v34, v47);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      uint64_t v46 = (uint64_t)v13;
      id v35 = v13;
      sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
      uint64_t v36 = sub_1C1EAED68();
      uint64_t v46 = sub_1C1DF8D44(v36, v37, v47);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1DD2000, v28, v29, "Failed to get transaction builder for %{public}s: %{public}s", (uint8_t *)v30, 0x16u);
      uint64_t v38 = v42;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v38, -1, -1);
      MEMORY[0x1C874D2E0](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v44);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v6);
    }
  }
  v47[0] = (uint64_t)a2;
  v47[1] = 0;
  sub_1C1DED3D4();
  id v39 = v17;
  return sub_1C1EAE8B8();
}

uint64_t sub_1C1E40D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a5;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v25 = a4;
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t v6 = sub_1C1EAEF28();
  uint64_t v21 = MEMORY[0x1E4FBB350];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v35 = v6;
  uint64_t v36 = MEMORY[0x1E4FBC248];
  uint64_t v37 = WitnessTable;
  uint64_t v38 = MEMORY[0x1E4FBC278];
  uint64_t v8 = sub_1C1EAE718();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  uint64_t v28 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
  uint64_t v35 = v6;
  uint64_t v36 = v12;
  uint64_t v37 = WitnessTable;
  uint64_t v38 = MEMORY[0x1E4FBC0F0];
  uint64_t v13 = sub_1C1EAE718();
  uint64_t v26 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v21 - v14;
  swift_beginAccess();
  uint64_t v34 = *(void *)(a3 + 24);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v29 = v16;
  uint64_t v30 = v23;
  uint64_t v31 = v25;
  uint64_t v32 = v24;
  uint64_t v33 = v22;
  type metadata accessor for GeneratorPipelineProviderWrapper();
  sub_1C1EAEF28();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v17 = sub_1C1EAEE28();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C1E42330(v17);
  uint64_t v34 = v17;
  sub_1C1EAEDF8();
  swift_bridgeObjectRelease();
  uint64_t v18 = v27;
  sub_1C1EAE6F8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v18);
  swift_getWitnessTable();
  uint64_t v19 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v13);
  return v19;
}

uint64_t sub_1C1E41120@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v11 = *a3;
  uint64_t v12 = sub_1C1EADA28();
  uint64_t v32 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v27[1] = v6;
    uint64_t v28 = v12;
    uint64_t v15 = (uint64_t)a3 + qword_1EBB6AB88;
    int v16 = *((unsigned __int8 *)a3 + qword_1EBB6ABE0);
    uint64_t v29 = a6;
    uint64_t v17 = *(void *)(v11 + 80);
    uint64_t v18 = type metadata accessor for GeneratorPipelineProviderWrapper();
    sub_1C1E41C60(a2, v15, v16, a1 + *(int *)(v18 + 28), v30, *(uint64_t *)((char *)a3 + qword_1EBB6AB80), (uint64_t)v14);
    uint64_t v19 = *(void *)(v11 + 88);
    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 24))(v14, v17, v19);
    MEMORY[0x1F4188790](v33);
    v27[-6] = v17;
    v27[-5] = v19;
    v27[-4] = a1;
    v27[-3] = v14;
    v27[-2] = v31;
    swift_getAssociatedTypeWitness();
    uint64_t v20 = sub_1C1EAEF28();
    uint64_t v21 = type metadata accessor for GeneratorPipelineManagerWrapper();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v23 = v20;
    a6 = v29;
    uint64_t v25 = sub_1C1DD94F4((void (*)(char *, char *))sub_1C1E4B7C0, (uint64_t)&v27[-8], v23, v21, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v24);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v28);
  }
  else
  {
    swift_getAssociatedTypeWitness();
    type metadata accessor for GeneratorPipelineManagerWrapper();
    uint64_t result = sub_1C1EAEEF8();
    uint64_t v25 = result;
  }
  *a6 = v25;
  return result;
}

uint64_t sub_1C1E41428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v64 = a4;
  uint64_t v87 = a2;
  uint64_t v88 = a3;
  uint64_t v86 = a1;
  uint64_t v83 = a7;
  uint64_t v69 = sub_1C1EAD9C8();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v65 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C1EADA28();
  uint64_t v84 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v80 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v60 - v13;
  uint64_t v66 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v79 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v60 - v19;
  uint64_t v67 = a5;
  uint64_t v21 = type metadata accessor for GeneratorPipelineProviderWrapper();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v60 - v23;
  uint64_t v25 = sub_1C1EAE568();
  uint64_t v77 = *(void *)(v25 - 8);
  uint64_t v78 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE4F8();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v85 = v21;
  v28(v24, v87, v21);
  uint64_t v73 = v16;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v72 = v20;
  uint64_t v81 = AssociatedTypeWitness;
  uint64_t v74 = v29;
  uint64_t v75 = v16 + 16;
  v29(v20, v86, AssociatedTypeWitness);
  uint64_t v31 = v84 + 16;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  uint64_t v71 = v14;
  uint64_t v82 = v10;
  v30(v14, v88, v10);
  uint64_t v76 = v27;
  uint64_t v32 = sub_1C1EAE558();
  os_log_type_t v33 = sub_1C1EAF0D8();
  int v34 = v33;
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v70 = (void (*)(char *, char *, uint64_t))v30;
    uint64_t v36 = v35;
    uint64_t v63 = swift_slowAlloc();
    uint64_t v90 = v63;
    *(_DWORD *)uint64_t v36 = 136446978;
    os_log_t v62 = v32;
    *(void *)&long long v89 = v64;
    swift_getMetatypeMetadata();
    int v61 = v34;
    uint64_t v37 = sub_1C1EAED68();
    uint64_t v64 = v31;
    *(void *)&long long v89 = sub_1C1DF8D44(v37, v38, &v90);
    uint64_t v60 = (char *)&v89 + 8;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2082;
    uint64_t v39 = v85;
    __swift_project_boxed_opaque_existential_1(&v24[*(int *)(v85 + 28)], *(void *)&v24[*(int *)(v85 + 28) + 24]);
    uint64_t v40 = sub_1C1EAD5B8();
    *(void *)&long long v89 = sub_1C1DF8D44(v40, v41, &v90);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v39);
    *(_WORD *)(v36 + 22) = 2082;
    uint64_t v42 = v81;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v44 = v65;
    uint64_t v45 = v72;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v42, AssociatedConformanceWitness);
    uint64_t v46 = (void *)sub_1C1EAD9A8();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v69);
    uint64_t v47 = sub_1C1EAD798();
    unint64_t v49 = v48;

    *(void *)&long long v89 = sub_1C1DF8D44(v47, v49, &v90);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v42);
    *(_WORD *)(v36 + 32) = 2082;
    uint64_t v50 = (uint64_t)v80;
    unint64_t v51 = v71;
    uint64_t v52 = v82;
    v70(v80, v71, v82);
    uint64_t v53 = sub_1C1EAED68();
    *(void *)&long long v89 = sub_1C1DF8D44(v53, v54, &v90);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v51, v52);
    os_log_t v55 = v62;
    _os_log_impl(&dword_1C1DD2000, v62, (os_log_type_t)v61, "[%{public}s]: delegate returned pipeline <%{public}s> for profile %{public}s and context %{public}s.", (uint8_t *)v36, 0x2Au);
    uint64_t v56 = v63;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v56, -1, -1);
    uint64_t v57 = v36;
    uint64_t v30 = (void (*)(char *, uint64_t, uint64_t))v70;
    MEMORY[0x1C874D2E0](v57, -1, -1);

    (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v85);
    uint64_t v42 = v81;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v81);
    uint64_t v52 = v82;
    (*(void (**)(char *, uint64_t))(v84 + 8))(v71, v82);

    (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
    uint64_t v50 = (uint64_t)v80;
  }
  uint64_t v58 = (uint64_t)v79;
  v74(v79, v86, v42);
  sub_1C1DFE408(v87 + *(int *)(v85 + 28), (uint64_t)&v89);
  v30((char *)v50, v88, v52);
  return GeneratorPipelineManagerWrapper.init(wrapped:pluginInfo:context:)(v58, &v89, v50, v42, v83);
}

uint64_t sub_1C1E41C60@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  int v55 = a3;
  uint64_t v53 = a2;
  id v52 = a1;
  uint64_t v54 = a7;
  sub_1C1DF9328();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v51 = (uint64_t)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C1EAD0E8();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v50 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = sub_1C1E3E5F8(a1);
  *(void *)&long long v58 = HKHealthStore.makePreferredTransactionPublisher()();
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C1DFEADC(0, &qword_1EBB65080, MEMORY[0x1E4F1AAE0]);
  sub_1C1DFEE18(&qword_1EBB65078, &qword_1EBB65080, v18);
  uint64_t v19 = sub_1C1EAE9F8();
  swift_release();
  *(void *)&long long v58 = v19;
  uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F1A840];
  sub_1C1E14D20(0, (unint64_t *)&qword_1EBB65798, (uint64_t (*)(uint64_t))sub_1C1E4B1B0, sub_1C1E4B2DC, MEMORY[0x1E4F1A840]);
  sub_1C1E4B310();
  uint64_t v20 = sub_1C1EAEA38();
  swift_release();
  uint64_t v45 = a4;
  sub_1C1DFE408(a4, (uint64_t)&v58);
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = a5;
  sub_1C1DFE46C(&v58, (uint64_t)(v21 + 3));
  v21[8] = v17;
  v21[9] = v20;
  uint64_t v49 = v20;
  sub_1C1E45FF4(v17, a4, v20, a5, a6);
  uint64_t v23 = v22;
  sub_1C1DFE408(a4, (uint64_t)&v58);
  swift_beginAccess();
  uint64_t v24 = *(void **)(v8 + 48);
  uint64_t v48 = type metadata accessor for HealthStoreSharableModelContext();
  uint64_t v25 = (void *)swift_allocObject();
  swift_retain();
  swift_retain();
  id v26 = v24;
  swift_retain();
  uint64_t v47 = v23;
  swift_retain();
  id v27 = v17;
  void v25[2] = sub_1C1EAF058();
  sub_1C1DFE408((uint64_t)&v58, (uint64_t)(v25 + 4));
  v25[3] = v27;
  id v28 = objc_allocWithZone(MEMORY[0x1E4F2B5E0]);
  id v29 = v27;
  id v30 = objc_msgSend(v28, sel_initWithHealthStore_, v26);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  v25[9] = v30;
  v25[10] = sub_1C1DE0280;
  v25[11] = v21;
  v25[12] = sub_1C1E49324;
  v25[13] = v23;
  uint64_t v31 = type metadata accessor for HealthExperienceStoreFeedItemContext(0);
  uint64_t v44 = sub_1C1DECE04(&qword_1EBB662D0, (void (*)(uint64_t))type metadata accessor for HealthExperienceStoreFeedItemContext);
  id v32 = v30;
  uint64_t v33 = sub_1C1EAD8B8();

  *(void *)&long long v58 = v33;
  sub_1C1E15464(0, &qword_1EBB65908, MEMORY[0x1E4F67270], MEMORY[0x1E4F1AAE0]);
  sub_1C1DFEC44();
  uint64_t v34 = sub_1C1EAE9F8();
  swift_release();
  *(void *)&long long v58 = v34;
  sub_1C1E14D20(0, (unint64_t *)&qword_1EBB65788, (uint64_t (*)(uint64_t))sub_1C1E4B3FC, sub_1C1E4B564, v46);
  sub_1C1E4B598();
  uint64_t v35 = sub_1C1EAEA38();
  swift_release();
  __swift_project_boxed_opaque_existential_1((void *)(v8 + 64), *(void *)(v8 + 88));
  uint64_t v36 = (void *)sub_1C1EAD538();
  sub_1C1DFE408(v45, (uint64_t)&v58);
  LOBYTE(v30) = *(unsigned char *)(v8 + 40);
  sub_1C1DFE408(v8 + 104, (uint64_t)v57);
  swift_beginAccess();
  uint64_t v37 = *(void *)(v8 + 144);
  sub_1C1DFE408(v8 + 200, (uint64_t)v56);
  id v38 = v29;
  swift_retain();
  swift_retain();
  uint64_t v39 = (uint64_t)v50;
  sub_1C1EAD078();
  id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  swift_allocObject();
  uint64_t v41 = sub_1C1DFC6C0(v36, &v58, v38, (char)v30, (uint64_t)v57, v37, (uint64_t)v56, v39, v35, (uint64_t)v40);

  swift_release();
  sub_1C1DF8A78(v53, v51, (uint64_t (*)(void))sub_1C1DF9328);
  uint64_t v59 = v31;
  uint64_t v60 = v44;
  *(void *)&long long v58 = v41;
  v57[3] = v48;
  v57[4] = sub_1C1DECE04(&qword_1EBB67528, (void (*)(uint64_t))type metadata accessor for HealthStoreSharableModelContext);
  v57[0] = v25;
  id v42 = v52;
  swift_retain();
  swift_retain();
  sub_1C1EAD9F8();
  sub_1C1EADA18();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C1E42330(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v15 = a1;
  uint64_t v13 = *(void *)(v2 + 80);
  uint64_t v3 = v13;
  uint64_t v14 = *(void *)(v2 + 88);
  uint64_t v4 = v14;
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t v5 = sub_1C1EAEF28();
  sub_1C1EAD368();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_1C1DD94F4((void (*)(char *, char *))sub_1C1E4B130, (uint64_t)&v12, v5, TupleTypeMetadata2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v8);
  sub_1C1EAEF28();
  sub_1C1DECE04(&qword_1EBB68168, MEMORY[0x1E4F27990]);
  swift_getWitnessTable();
  uint64_t v9 = sub_1C1EAEC68();
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = v3;
  v10[3] = v4;
  v10[4] = v9;
  sub_1C1E475AC((uint64_t)sub_1C1E4B188, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1C1E4253C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C1EAD368();
  swift_getAssociatedTypeWitness();
  uint64_t v5 = type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t v6 = a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1 + *(int *)(v5 + 36), v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v6, a1, v5);
}

double sub_1C1E42648@<D0>(long long *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v4 = *a1;
  sub_1C1EAD368();
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  sub_1C1DECE04(&qword_1EBB68168, MEMORY[0x1E4F27990]);
  sub_1C1EAEC98();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1EAEC88();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1C1E42770@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v4 = type metadata accessor for GeneratorPipelineManagerWrapper();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_1C1E42804(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v23 = *v2;
  uint64_t v22 = *(void *)(v23 + 88);
  uint64_t v21 = *(void *)(v23 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v20 = type metadata accessor for GeneratorPipelineManagerWrapper();
  sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
  uint64_t v4 = sub_1C1EAE7D8();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t v5 = sub_1C1EAE7D8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  uint64_t v26 = WitnessTable;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v6 = sub_1C1EAE6C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v24 = a1;
  uint64_t v10 = v2[23];
  uint64_t v11 = v2[24];
  __swift_project_boxed_opaque_existential_1(v2 + 20, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v22;
  void v13[2] = v21;
  void v13[3] = v14;
  uint64_t v15 = v23;
  v13[4] = v12;
  v13[5] = v15;
  sub_1C1EAEAD8();
  swift_release();
  swift_getWitnessTable();
  uint64_t v16 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v16;
}

uint64_t sub_1C1E42B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, NSObject *a3@<X3>, NSObject *a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v78 = a5;
  uint64_t v8 = sub_1C1EAD9C8();
  uint64_t v74 = *(void *)(v8 - 8);
  uint64_t v75 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v73 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v69 = (char *)&v62 - v11;
  uint64_t v12 = type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v82 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v80 = (char *)&v62 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v79 = (char *)&v62 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v62 - v19;
  uint64_t v21 = sub_1C1EAE568();
  uint64_t v76 = *(void *)(v21 - 8);
  uint64_t v77 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v83 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = a4;
  uint64_t v71 = a3;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v23 = type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t v24 = sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
  uint64_t v25 = sub_1C1EAE8D8();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  id v28 = (char *)&v62 - v27;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v66 = Strong;
    uint64_t v67 = v24;
    sub_1C1EAE4F8();
    id v30 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
    v30(v20, a1, v12);
    v30(v79, a1, v12);
    v30(v80, a1, v12);
    v30(v82, a1, v12);
    uint64_t v31 = sub_1C1EAE558();
    os_log_type_t v32 = sub_1C1EAF0D8();
    int v33 = v32;
    uint64_t v34 = a1;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      uint64_t v85 = v64;
      *(_DWORD *)uint64_t v35 = 136447234;
      uint64_t v84 = v68;
      swift_getMetatypeMetadata();
      int v63 = v33;
      uint64_t v36 = sub_1C1EAED68();
      uint64_t v65 = v23;
      uint64_t v84 = sub_1C1DF8D44(v36, v37, &v85);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2082;
      id v38 = &v20[*(int *)(v12 + 28)];
      uint64_t v68 = a1;
      __swift_project_boxed_opaque_existential_1(v38, *((void *)v38 + 3));
      uint64_t v39 = sub_1C1EAD5B8();
      uint64_t v84 = sub_1C1DF8D44(v39, v40, &v85);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      os_log_t v62 = v31;
      uint64_t v41 = *(void (**)(char *, uint64_t))(v81 + 8);
      v41(v20, v12);
      *(_WORD *)(v35 + 22) = 2082;
      id v42 = v79;
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v69, v79, AssociatedTypeWitness);
      uint64_t v43 = sub_1C1EAED68();
      uint64_t v84 = sub_1C1DF8D44(v43, v44, &v85);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      uint64_t v45 = ((uint64_t (*)(char *, uint64_t))v41)(v42, v12);
      *(_WORD *)(v35 + 32) = 2082;
      MEMORY[0x1F4188790](v45);
      uint64_t v46 = v72;
      *(&v62 - 2) = v71;
      *(&v62 - 1) = v46;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v48 = v73;
      uint64_t v49 = v80;
      GeneratorPipelineManagerWrapper.subscript.getter(KeyPath);
      swift_release();
      uint64_t v50 = (void *)sub_1C1EAD9A8();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v48, v75);
      uint64_t v51 = sub_1C1EAD798();
      unint64_t v53 = v52;

      uint64_t v84 = sub_1C1DF8D44(v51, v53, &v85);
      sub_1C1EAF2C8();
      uint64_t v34 = v68;
      swift_bridgeObjectRelease();
      v41(v49, v12);
      *(_WORD *)(v35 + 42) = 2082;
      uint64_t v54 = v82;
      sub_1C1EAD9D8();
      sub_1C1DF9148(0, &qword_1EBB66178);
      uint64_t v55 = sub_1C1EAED68();
      uint64_t v84 = sub_1C1DF8D44(v55, v56, &v85);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      v41(v54, v12);
      os_log_t v57 = v62;
      _os_log_impl(&dword_1C1DD2000, v62, (os_log_type_t)v63, "[%{public}s][%{public}s]: dispatching GeneratorPipeline <%{public}s> for profile %{public}s and context %{public}s to queue for execution", (uint8_t *)v35, 0x34u);
      uint64_t v58 = v64;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v58, -1, -1);
      MEMORY[0x1C874D2E0](v35, -1, -1);
    }
    else
    {
      int v61 = *(void (**)(char *, uint64_t))(v81 + 8);
      v61(v20, v12);
      v61(v79, v12);
      v61(v80, v12);
      v61(v82, v12);
    }
    (*(void (**)(char *, uint64_t))(v76 + 8))(v83, v77);
    uint64_t v84 = sub_1C1E43630(v34);
    sub_1C1EAE7D8();
    swift_getWitnessTable();
    uint64_t v59 = sub_1C1EAEA38();
    swift_release();
    uint64_t result = swift_release();
  }
  else
  {
    sub_1C1EAE8C8();
    swift_getWitnessTable();
    uint64_t v59 = sub_1C1EAEA38();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  }
  *uint64_t v78 = v59;
  return result;
}

uint64_t sub_1C1E43584()
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  uint64_t v2 = swift_checkMetadataState();
  return v1(v2, AssociatedConformanceWitness);
}

uint64_t sub_1C1E43630(uint64_t a1)
{
  uint64_t v91 = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = sub_1C1EAD9C8();
  uint64_t v87 = *(void *)(v3 - 8);
  uint64_t v88 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v86 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = v1;
  uint64_t v90 = *(void *)(v2 + 88);
  uint64_t v89 = *(void *)(v2 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v85 = type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t v5 = sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
  uint64_t v6 = sub_1C1EAE7D8();
  uint64_t v82 = v6;
  uint64_t v64 = type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t v66 = v5;
  uint64_t v7 = sub_1C1EAE7D8();
  uint64_t v79 = v7;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v81 = WitnessTable;
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v99 = v6;
  uint64_t v100 = v7;
  uint64_t v101 = WitnessTable;
  uint64_t v102 = v78;
  uint64_t v9 = sub_1C1EAE6C8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v83 = v9;
  uint64_t v84 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v80 = (char *)&v60 - v11;
  uint64_t v12 = type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t v74 = *(void *)(v12 - 8);
  uint64_t v75 = *(void *)(v74 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v71 = (char *)&v60 - v13;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_1C1EAE7D8();
  swift_getWitnessTable();
  uint64_t v15 = sub_1C1EAE5B8();
  uint64_t v72 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v18 = sub_1C1EAE668();
  uint64_t v65 = v18;
  uint64_t v73 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  int v61 = (char *)&v60 - v19;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v99 = v18;
  uint64_t v100 = v5;
  uint64_t v101 = v67;
  uint64_t v102 = MEMORY[0x1E4FBC0F0];
  uint64_t v68 = sub_1C1EAE6E8();
  uint64_t v70 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  os_log_t v62 = (char *)&v60 - v20;
  uint64_t v21 = v77;
  uint64_t v69 = v77 + 20;
  uint64_t v23 = v77[23];
  uint64_t v22 = v77[24];
  __swift_project_boxed_opaque_existential_1(v77 + 20, v23);
  uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v23, v22);
  uint64_t v25 = v89;
  uint64_t v24 = v90;
  uint64_t v96 = v89;
  uint64_t v97 = v90;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = v12;
  uint64_t v28 = v91;
  GeneratorPipelineManagerWrapper.subscript.getter(KeyPath);
  swift_release();
  uint64_t v98 = v99;
  uint64_t v94 = v25;
  uint64_t v95 = v24;
  id v29 = (void *)swift_getKeyPath();
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v31 = v21;
  sub_1C1E44168(v28, v21, v29, v14, v30, (uint64_t)v17);
  swift_release();
  swift_release();
  uint64_t v32 = v74;
  int v33 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
  uint64_t v34 = v71;
  uint64_t v35 = v28;
  uint64_t v36 = v27;
  uint64_t v60 = v27;
  v33(v71, v35, v27);
  unint64_t v37 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v38 = swift_allocObject();
  uint64_t v40 = v89;
  uint64_t v39 = v90;
  *(void *)(v38 + 16) = v89;
  *(void *)(v38 + 24) = v39;
  (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v38 + v37, v34, v36);
  uint64_t v41 = v61;
  sub_1C1EAEA68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v17, v15);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v40;
  *(void *)(v42 + 24) = v39;
  uint64_t v43 = v40;
  uint64_t v44 = v39;
  uint64_t v45 = v62;
  uint64_t v46 = v65;
  sub_1C1EAEB08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v41, v46);
  uint64_t v47 = v68;
  swift_getWitnessTable();
  uint64_t v48 = sub_1C1EAEA38();
  uint64_t v75 = v48;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v45, v47);
  uint64_t v49 = v31[23];
  uint64_t v50 = v31[24];
  __swift_project_boxed_opaque_existential_1(v69, v49);
  uint64_t v99 = v48;
  uint64_t v92 = v43;
  uint64_t v93 = v44;
  uint64_t v51 = swift_getKeyPath();
  unint64_t v52 = v86;
  GeneratorPipelineManagerWrapper.subscript.getter(v51);
  swift_release();
  uint64_t v53 = (*(uint64_t (**)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 40))(&v99, v52, v79, v78, v49, v50);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v52, v88);
  uint64_t v99 = v53;
  uint64_t v54 = swift_allocObject();
  swift_weakInit();
  uint64_t v55 = (void *)swift_allocObject();
  v55[2] = v43;
  v55[3] = v44;
  v55[4] = v54;
  unint64_t v56 = v80;
  sub_1C1EAEAD8();
  swift_release();
  swift_release();
  uint64_t v57 = v83;
  swift_getWitnessTable();
  uint64_t v58 = sub_1C1EAEA38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v56, v57);
  return v58;
}

uint64_t sub_1C1E440BC@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24);
  uint64_t v4 = swift_checkMetadataState();
  uint64_t result = v3(v4, AssociatedConformanceWitness);
  *a1 = result;
  return result;
}

uint64_t sub_1C1E44168@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v36 = a6;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v7 = *a2;
  uint64_t v34 = a1;
  uint64_t v35 = v7;
  unint64_t v37 = a3;
  uint64_t v8 = *(void *)(*(void *)(*MEMORY[0x1E4FBBC10] + *a3 + 8) + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  int v33 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v28 = v11;
  v33(v11, a1, v8);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (v13 + 72) & ~v13;
  uint64_t v30 = v14;
  uint64_t v32 = v13 | 7;
  uint64_t v15 = (char *)swift_allocObject();
  uint64_t v16 = v35;
  *((void *)v15 + 2) = v38;
  uint64_t v17 = *(void *)(v8 + 16);
  *((void *)v15 + 3) = v17;
  uint64_t v31 = *(void *)(v16 + 80);
  *((void *)v15 + 4) = v31;
  *((void *)v15 + 5) = v39;
  uint64_t v35 = *(void *)(v16 + 88);
  *((void *)v15 + 6) = v35;
  *((void *)v15 + 7) = v12;
  *((void *)v15 + 8) = v37;
  id v29 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v27 = v8;
  v29(&v15[v14], v11, v8);
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  v33(v11, v34, v8);
  uint64_t v19 = (char *)swift_allocObject();
  uint64_t v21 = v38;
  uint64_t v20 = v39;
  *((void *)v19 + 2) = v38;
  *((void *)v19 + 3) = v17;
  uint64_t v22 = v30;
  uint64_t v23 = v31;
  *((void *)v19 + 4) = v31;
  *((void *)v19 + 5) = v20;
  uint64_t v24 = v35;
  *((void *)v19 + 6) = v35;
  *((void *)v19 + 7) = v18;
  *((void *)v19 + 8) = v37;
  v29(&v19[v22], v28, v27);
  uint64_t v25 = (void *)swift_allocObject();
  void v25[2] = v21;
  v25[3] = v17;
  v25[4] = v23;
  v25[5] = v20;
  v25[6] = v24;
  v25[7] = sub_1C1E4ADA8;
  v25[8] = v19;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1C1EAEA58();
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1C1E444CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C1EADA28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v16 - v11, a1, AssociatedTypeWitness);
  uint64_t v14 = type metadata accessor for GeneratorPipelineManagerWrapper();
  sub_1C1DFE408(a2 + *(int *)(v14 + 28), (uint64_t)v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2 + *(int *)(v14 + 32), v6);
  return GeneratorPipelineManagerWrapper.init(wrapped:pluginInfo:context:)((uint64_t)v12, v17, (uint64_t)v9, AssociatedTypeWitness, a3);
}

uint64_t sub_1C1E446E0@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v57 = sub_1C1EAD9C8();
  uint64_t v61 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v60 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1C1EAD6A8();
  uint64_t v4 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v55 = *(uint64_t **)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v54 = (char *)&v46 - v8;
  uint64_t v9 = sub_1C1EAE4C8();
  uint64_t v58 = *(void *)(v9 - 8);
  uint64_t v59 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
  uint64_t v12 = sub_1C1EAE8D8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v46 - v14;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = (uint64_t *)Strong;
    id v18 = (id)_HKLogPersistedSignposts();
    swift_retain();
    unint64_t v52 = v11;
    sub_1C1EAE4A8();
    uint64_t v19 = type metadata accessor for GeneratorPipelineManagerWrapper();
    uint64_t v20 = v62;
    uint64_t v21 = (void *)(v62 + *(int *)(v19 + 28));
    uint64_t v22 = v21[3];
    __swift_project_boxed_opaque_existential_1(v21, v22);
    uint64_t v63 = sub_1C1DF3EC4(v22);
    uint64_t v51 = v23;
    int v50 = v24;
    uint64_t v65 = 0x6F746172656E6547;
    unint64_t v66 = 0xEB00000000203A72;
    uint64_t v46 = (void (*)(char *, uint64_t, uint64_t))v55[2];
    uint64_t v55 = v17;
    uint64_t v25 = v54;
    v46(v54, v20, AssociatedTypeWitness);
    sub_1C1EAED68();
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();
    uint64_t v49 = v65;
    unint64_t v48 = v66;
    int v47 = sub_1C1EAF0D8();
    uint64_t v26 = v56;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F67068], v56);
    uint64_t v27 = (void *)sub_1C1EAD698();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
    sub_1C1DF32F0();
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1C1EB1480;
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    uint64_t v29 = sub_1C1EAD5B8();
    uint64_t v31 = v30;
    uint64_t v32 = MEMORY[0x1E4FBB1A0];
    *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v33 = sub_1C1DF2A98();
    *(void *)(v28 + 64) = v33;
    *(void *)(v28 + 32) = v29;
    *(void *)(v28 + 40) = v31;
    v46(v25, v20, AssociatedTypeWitness);
    uint64_t v34 = sub_1C1EAED68();
    *(void *)(v28 + 96) = v32;
    *(void *)(v28 + 104) = v33;
    *(void *)(v28 + 72) = v34;
    *(void *)(v28 + 80) = v35;
    uint64_t v36 = v60;
    (*(void (**)(uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness);
    unint64_t v37 = (void *)sub_1C1EAD9A8();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v36, v57);
    uint64_t v38 = sub_1C1EAD798();
    uint64_t v40 = v39;

    *(void *)(v28 + 136) = v32;
    *(void *)(v28 + 144) = v33;
    *(void *)(v28 + 112) = v38;
    *(void *)(v28 + 120) = v40;
    sub_1C1EAE488();

    uint64_t v41 = swift_bridgeObjectRelease();
    uint64_t v42 = (void *)MEMORY[0x1C874CBD0](v41);
    uint64_t v43 = (uint64_t)v52;
    sub_1C1E44E0C(v20, v55, (uint64_t)v63, v51, v50, (uint64_t)v52, v49, v48, v64);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v43, v59);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C1EAE8C8();
    swift_getWitnessTable();
    uint64_t v45 = sub_1C1EAEA38();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    *uint64_t v64 = v45;
  }
  return result;
}

uint64_t sub_1C1E44E0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v92 = a8;
  uint64_t v96 = a7;
  uint64_t v91 = a6;
  int v95 = a5;
  uint64_t v94 = a4;
  uint64_t v93 = a3;
  uint64_t v102 = a1;
  uint64_t v100 = a9;
  uint64_t v10 = *a2;
  uint64_t v11 = sub_1C1EAD9C8();
  uint64_t v98 = *(void *)(v11 - 8);
  uint64_t v99 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v97 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFA59C(0, &qword_1EBB65778, MEMORY[0x1E4FBD318], MEMORY[0x1E4FBB718]);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v90 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v88 = (char *)&v66 - v16;
  unint64_t v104 = a2;
  uint64_t v17 = *(void *)(v10 + 88);
  uint64_t v18 = *(void *)(v10 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v19 = type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t v86 = *(void *)(v19 - 8);
  uint64_t v87 = *(void *)(v86 + 64);
  MEMORY[0x1F4188790](v19);
  uint64_t v84 = (char *)&v66 - v20;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v21 = sub_1C1EAE7D8();
  uint64_t v89 = MEMORY[0x1E4F1AAE8];
  swift_getWitnessTable();
  uint64_t v74 = sub_1C1EAE5B8();
  uint64_t v81 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v101 = (uint64_t)&v66 - v22;
  uint64_t v103 = type metadata accessor for GeneratorPipelineManagerWrapper();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v23 = sub_1C1EAE668();
  uint64_t v72 = v23;
  uint64_t v80 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v69 = (char *)&v66 - v24;
  uint64_t v25 = sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
  uint64_t v73 = v25;
  uint64_t v71 = swift_getWitnessTable();
  v111[0] = v23;
  v111[1] = v25;
  v111[2] = v71;
  v111[3] = MEMORY[0x1E4FBC0F0];
  uint64_t v77 = sub_1C1EAE6E8();
  uint64_t v82 = *(void *)(v77 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v77);
  uint64_t v79 = (char *)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v68 = (char *)&v66 - v28;
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v83 = sub_1C1EAE5E8();
  uint64_t v85 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v76 = (char *)&v66 - v29;
  uint64_t v109 = v18;
  uint64_t v110 = v17;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = v19;
  uint64_t v32 = v102;
  GeneratorPipelineManagerWrapper.subscript.getter(KeyPath);
  swift_release();
  v111[6] = v111[0];
  uint64_t v107 = v18;
  uint64_t v108 = v17;
  uint64_t v33 = v17;
  uint64_t v34 = (void *)swift_getKeyPath();
  uint64_t v35 = swift_getWitnessTable();
  sub_1C1E44168(v32, v104, v34, v21, v35, v101);
  swift_release();
  swift_release();
  uint64_t v36 = v86;
  unint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 16);
  uint64_t v38 = v84;
  uint64_t v70 = v31;
  v37(v84, v32, v31);
  uint64_t v39 = v36;
  unint64_t v40 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v41 = swift_allocObject();
  uint64_t v66 = v18;
  *(void *)(v41 + 16) = v18;
  *(void *)(v41 + 24) = v33;
  uint64_t v67 = v33;
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v41 + v40, v38, v31);
  uint64_t v42 = v69;
  uint64_t v43 = v74;
  uint64_t v44 = v101;
  sub_1C1EAEA68();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v44, v43);
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v18;
  *(void *)(v45 + 24) = v33;
  uint64_t v46 = v68;
  uint64_t v47 = v72;
  sub_1C1EAEB08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v42, v47);
  id v48 = (id)_HKLogPersistedSignposts();
  uint64_t v49 = sub_1C1EAE4C8();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v88, v91, v49);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v49);
  uint64_t v52 = v82;
  uint64_t v53 = v77;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v79, v46, v77);
  sub_1C1E4AA58(v51, v90);
  swift_bridgeObjectRetain();
  uint64_t v54 = v76;
  sub_1C1EAE5F8();
  sub_1C1E4AAEC(v51);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v46, v53);
  uint64_t v55 = v83;
  swift_getWitnessTable();
  uint64_t v56 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v54, v55);
  uint64_t v57 = v104[23];
  uint64_t v58 = v104[24];
  __swift_project_boxed_opaque_existential_1(v104 + 20, v57);
  v111[0] = v56;
  uint64_t v105 = v66;
  uint64_t v106 = v67;
  uint64_t v59 = swift_getKeyPath();
  uint64_t v60 = v97;
  GeneratorPipelineManagerWrapper.subscript.getter(v59);
  swift_release();
  uint64_t v61 = *(uint64_t (**)(void *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 48);
  uint64_t v62 = sub_1C1EAE7D8();
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v64 = v61(v111, v60, v62, v63, v57, v58);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v60, v99);
  uint64_t result = swift_release();
  uint64_t *v100 = v64;
  return result;
}

uint64_t sub_1C1E4599C@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  uint64_t v4 = swift_checkMetadataState();
  uint64_t result = v3(v4, AssociatedConformanceWitness);
  *a1 = result;
  return result;
}

uint64_t sub_1C1E45A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C1EADA28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v16 - v11, a1, AssociatedTypeWitness);
  uint64_t v14 = type metadata accessor for GeneratorPipelineManagerWrapper();
  sub_1C1DFE408(a2 + *(int *)(v14 + 28), (uint64_t)v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2 + *(int *)(v14 + 32), v6);
  return GeneratorPipelineManagerWrapper.init(wrapped:pluginInfo:context:)((uint64_t)v12, v17, (uint64_t)v9, AssociatedTypeWitness, a3);
}

uint64_t sub_1C1E45CEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v12 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - v6, a1, AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = sub_1C1EAF788();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = swift_allocError();
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11, v7, AssociatedTypeWitness);
  }
  *a2 = v9;
  return result;
}

uint64_t sub_1C1E45F00()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
  uint64_t v2 = swift_checkMetadataState();
  return v1(v2, AssociatedConformanceWitness);
}

uint64_t (*sub_1C1E45FF4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v6;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  sub_1C1DFE408(a2, (uint64_t)v17);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = *(void *)(v12 + 80);
  v14[3] = *(void *)(v12 + 88);
  v14[4] = v13;
  v14[5] = a1;
  sub_1C1DFE46C(v17, (uint64_t)(v14 + 6));
  v14[11] = a3;
  v14[12] = a4;
  v14[13] = a5;
  id v15 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_1C1E49324;
}

uint64_t sub_1C1E46114(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v60 = a7;
  uint64_t v61 = a8;
  uint64_t v59 = a6;
  uint64_t v63 = a4;
  uint64_t v64 = a5;
  sub_1C1E12AC8(0, &qword_1EBB65980, MEMORY[0x1E4F1AC18]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v52 - v12;
  sub_1C1E13568();
  uint64_t v15 = v14;
  uint64_t v54 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E13634();
  uint64_t v55 = *(void *)(v18 - 8);
  uint64_t v56 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E134B4();
  uint64_t v22 = v21;
  uint64_t v58 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v57 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v53 = v22;
  uint64_t v62 = Strong;
  uint64_t v25 = (void *)sub_1C1EAF058();
  uint64_t v26 = (void *)sub_1C1EAD778();

  if (!v26)
  {
    swift_release();
LABEL_8:
    sub_1C1E15248(0);
    sub_1C1EAE8C8();
    sub_1C1E4A210((unint64_t *)&qword_1EBB65978, &qword_1EBB65980, MEMORY[0x1E4F1AC18]);
    uint64_t v30 = sub_1C1EAEA38();
LABEL_9:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v30;
  }
  id v27 = objc_msgSend(v26, sel_type);
  if (v27 != (id)1)
  {
    if (v27 == (id)2)
    {
      __swift_project_boxed_opaque_existential_1(v63, v63[3]);
      uint64_t v63 = v26;
      uint64_t v59 = sub_1C1EAD5B8();
      uint64_t v33 = v32;
      uint64_t v34 = sub_1C1EAE088();
      uint64_t v35 = sub_1C1EAE098();
      uint64_t v65 = v64;
      uint64_t v36 = swift_allocObject();
      swift_unknownObjectWeakInit();
      unint64_t v37 = (void *)swift_allocObject();
      uint64_t v38 = v59;
      v37[2] = v36;
      v37[3] = v38;
      v37[4] = v33;
      v37[5] = v34;
      uint64_t v60 = v33;
      uint64_t v61 = v34;
      v37[6] = v35;
      uint64_t v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
      sub_1C1DFEADC(0, &qword_1EBB65080, MEMORY[0x1E4F1AAE0]);
      uint64_t v59 = v40;
      sub_1C1E14FFC();
      uint64_t v52 = v41;
      sub_1C1DFEE18(&qword_1EBB65078, &qword_1EBB65080, v39);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C1EAEA68();
      swift_release();
      uint64_t v42 = sub_1C1DECE04(&qword_1EBB64E38, (void (*)(uint64_t))sub_1C1E13568);
      uint64_t v43 = sub_1C1DECE04(&qword_1EBB67D30, (void (*)(uint64_t))sub_1C1E14FFC);
      MEMORY[0x1C874BC40](v15, v42, v43);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v15);
      sub_1C1DECE04((unint64_t *)&qword_1EBB64D90, (void (*)(uint64_t))sub_1C1E13634);
      uint64_t v44 = v56;
      uint64_t v45 = sub_1C1EAEA38();
      swift_release();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v20, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v65 = v45;
      uint64_t v46 = sub_1C1EAE948();
      swift_release();
      uint64_t v65 = v46;
      sub_1C1E15464(0, &qword_1EBB65060, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AAE0]);
      uint64_t v48 = v47;
      unint64_t v49 = sub_1C1E493C4();
      uint64_t v50 = v57;
      sub_1C1EAE918();
      swift_release();
      uint64_t v65 = v48;
      unint64_t v66 = v49;
      swift_getOpaqueTypeConformance2();
      uint64_t v51 = v53;
      uint64_t v30 = sub_1C1EAEA38();

      swift_release();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v50, v51);
      return v30;
    }
    if (v27 != (id)3)
    {
      sub_1C1E15248(0);
      sub_1C1EAE8C8();
      sub_1C1E4A210((unint64_t *)&qword_1EBB65978, &qword_1EBB65980, MEMORY[0x1E4F1AC18]);
      uint64_t v30 = sub_1C1EAEA38();

      swift_release();
      goto LABEL_9;
    }
  }
  uint64_t v28 = sub_1C1EAE088();
  uint64_t v29 = sub_1C1EAE098();
  uint64_t v30 = sub_1C1E494A0(a3, v63, v28, v29, v64, v59, v60);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1C1E468E8(uint64_t a1, void *a2, void *a3)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 8), *(void *)(a1 + 32));
  uint64_t v5 = sub_1C1EAD5B8();
  uint64_t v7 = v6;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  if (v5 == sub_1C1EAD5B8() && v7 == v8) {
    int v10 = 1;
  }
  else {
    int v10 = sub_1C1EAF7A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C1DFA59C(0, qword_1EBB678D8, (uint64_t (*)(uint64_t))sub_1C1E15248, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
  uint64_t v11 = (void *)sub_1C1EADA08();
  uint64_t v12 = (void *)sub_1C1EAD778();

  id v13 = objc_msgSend(a3, sel_profileIdentifier);
  uint64_t v14 = v13;
  if (v12)
  {
    if (v13)
    {
      sub_1C1DF9F8C(0, &qword_1EBB68260);
      id v15 = v12;
      int v16 = sub_1C1EAF288();
    }
    else
    {
      int v16 = 0;
      uint64_t v14 = v12;
    }
  }
  else
  {
    if (!v13)
    {
      int v16 = 1;
      return v10 & v16 & 1;
    }
    int v16 = 0;
  }

  return v10 & v16 & 1;
}

uint64_t sub_1C1E46A98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t GeneratorPipelineManager.GenerationState.outstandingPipelines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GeneratorPipelineManager.GenerationState.outstandingPipelines.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*GeneratorPipelineManager.GenerationState.outstandingPipelines.modify())()
{
  return nullsub_1;
}

uint64_t GeneratorPipelineManager.GenerationState.outstandingGenerators.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*GeneratorPipelineManager.GenerationState.outstandingGenerators.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C1E46B44@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v4 = type metadata accessor for GeneratorPipelineManagerWrapper();
  __swift_project_boxed_opaque_existential_1((void *)(a1 + *(int *)(v4 + 28)), *(void *)(a1 + *(int *)(v4 + 28) + 24));
  sub_1C1EAD5B8();
  sub_1C1E4BB04();
  uint64_t v5 = sub_1C1EAF2E8();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + 16)) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = 0x3D6E6967756C70;
  a2[1] = 0xE700000000000000;
  return result;
}

uint64_t sub_1C1E46C88@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  sub_1C1EAD368();
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t sub_1C1E46D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v23 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v21 = (char *)&v18 - v6;
  uint64_t v7 = sub_1C1EAD9C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for GeneratorPipelineManagerWrapper();
  __swift_project_boxed_opaque_existential_1((void *)(a1 + *(int *)(v11 + 28)), *(void *)(a1 + *(int *)(v11 + 28) + 24));
  uint64_t v26 = sub_1C1EAD5B8();
  uint64_t v27 = v12;
  sub_1C1EAEDB8();
  uint64_t v24 = v19;
  uint64_t v25 = v20;
  uint64_t KeyPath = swift_getKeyPath();
  GeneratorPipelineManagerWrapper.subscript.getter(KeyPath);
  swift_release();
  uint64_t v14 = (void *)sub_1C1EAD9A8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C1EAD798();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();

  sub_1C1EAEDB8();
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v21, a1, AssociatedTypeWitness);
  sub_1C1EAED68();
  sub_1C1EAEDB8();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v16 = v27;
  uint64_t v17 = v23;
  *uint64_t v23 = v26;
  v17[1] = v16;
  return result;
}

uint64_t sub_1C1E46FD0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = type metadata accessor for GeneratorPipelineManagerWrapper();
  __swift_project_boxed_opaque_existential_1((void *)(a1 + *(int *)(v4 + 28)), *(void *)(a1 + *(int *)(v4 + 28) + 24));
  sub_1C1EAD5B8();
  sub_1C1E4BB04();
  uint64_t v5 = sub_1C1EAF2E8();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + 16)) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = 0x3D6E6967756C70;
  a2[1] = 0xE700000000000000;
  return result;
}

uint64_t sub_1C1E47164@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  sub_1C1EAD368();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t sub_1C1E47270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = (void *)MEMORY[0x1C874CBD0]();
  a5(&v11, a2, a3, a4);
  return v11;
}

uint64_t sub_1C1E472E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v23 = a4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v21 = (char *)&v18 - v7;
  uint64_t v19 = sub_1C1EAD9C8();
  uint64_t v8 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  int v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for GeneratorPipelineManagerWrapper();
  __swift_project_boxed_opaque_existential_1((void *)(a1 + *(int *)(v11 + 28)), *(void *)(a1 + *(int *)(v11 + 28) + 24));
  uint64_t v26 = sub_1C1EAD5B8();
  uint64_t v27 = v12;
  sub_1C1EAEDB8();
  uint64_t v24 = a2;
  uint64_t v25 = v20;
  uint64_t KeyPath = swift_getKeyPath();
  GeneratorPipelineManagerWrapper.subscript.getter(KeyPath);
  swift_release();
  uint64_t v14 = (void *)sub_1C1EAD9A8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
  sub_1C1EAD798();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();

  sub_1C1EAEDB8();
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v21, a1, AssociatedTypeWitness);
  sub_1C1EAED68();
  sub_1C1EAEDB8();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v16 = v27;
  uint64_t v17 = v23;
  *uint64_t v23 = v26;
  v17[1] = v16;
  return result;
}

uint64_t sub_1C1E475AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_1C1EAEB78();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C1EAEBD8();
  uint64_t v11 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  id v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = v3[19];
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  id v15 = (void *)swift_allocObject();
  _OWORD v15[2] = *(void *)(v6 + 80);
  v15[3] = *(void *)(v6 + 88);
  v15[4] = v14;
  v15[5] = a1;
  v15[6] = a2;
  aBlock[4] = sub_1C1E4922C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1DF5050;
  aBlock[3] = &block_descriptor_0;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1C1EAEB98();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1C1DECE04((unint64_t *)&qword_1EBB683C8, MEMORY[0x1E4FBCB00]);
  sub_1C1DFA59C(0, &qword_1EBB683D0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C1E4923C();
  sub_1C1EAF328();
  MEMORY[0x1C874C3B0](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_1C1E478E8(uint64_t a1, void (*a2)(uint64_t *__return_ptr, void *))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)MEMORY[0x1C874CBD0]();
    sub_1C1E47978(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1E47978(void (*a1)(uint64_t *__return_ptr, void *))
{
  sub_1C1EAE838();
  v3[0] = v3[2];
  v3[1] = v3[3];
  a1(&v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C1EAE828();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t GeneratorPipelineManager.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  swift_release();
  return v0;
}

uint64_t GeneratorPipelineManager.__deallocating_deinit()
{
  GeneratorPipelineManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C1E47AD0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *a3;
  uint64_t v11 = *(void *)(*(void *)(*MEMORY[0x1E4FBBC10] + *a3 + 8) + 24);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v21 - v13;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
    uint64_t v16 = *(unsigned __int8 *)(v12 + 80);
    uint64_t v21 = a6;
    uint64_t v17 = (v16 + 64) & ~v16;
    uint64_t v18 = (char *)swift_allocObject();
    *((void *)v18 + 2) = a5;
    *((void *)v18 + 3) = *(void *)(v11 + 16);
    uint64_t v19 = *(void *)(v10 + *MEMORY[0x1E4FBBC10]);
    uint64_t v20 = v21;
    *((void *)v18 + 4) = *(void *)(v19 + 16);
    *((void *)v18 + 5) = v20;
    *((void *)v18 + 6) = *(void *)(v19 + 24);
    *((void *)v18 + 7) = a3;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v18[v17], v14, v11);
    swift_retain();
    sub_1C1E475AC((uint64_t)sub_1C1E4B024, (uint64_t)v18);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1E47CC4@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)(*MEMORY[0x1E4FBBC10] + *a2 + 8) + 24);
  uint64_t v8 = sub_1C1EAF2A8();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = &v19[-v10];
  MEMORY[0x1F4188790](v9);
  uint64_t v14 = *a1;
  uint64_t v13 = a1[1];
  *a4 = v14;
  a4[1] = v13;
  (*(void (**)(unsigned char *, uint64_t))(v15 + 16))(&v19[-v12], a3 + *(int *)(v7 + 36));
  uint64_t v16 = *(void *)(v7 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16))(v11, a3, v7);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = (uint64_t (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  sub_1C1EAECA8();
  return v17(v19, 0);
}

uint64_t sub_1C1E47EE8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *a2;
  uint64_t v10 = *(void *)(*(void *)(*MEMORY[0x1E4FBBC10] + *a2 + 8) + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v13 = (char *)&v20 - v12;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
    uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v20 = a5;
    uint64_t v16 = (v15 + 64) & ~v15;
    uint64_t v17 = (char *)swift_allocObject();
    *((void *)v17 + 2) = a4;
    *((void *)v17 + 3) = *(void *)(v10 + 16);
    uint64_t v18 = *(void *)(v9 + *MEMORY[0x1E4FBBC10]);
    uint64_t v19 = v20;
    *((void *)v17 + 4) = *(void *)(v18 + 16);
    *((void *)v17 + 5) = v19;
    *((void *)v17 + 6) = *(void *)(v18 + 24);
    *((void *)v17 + 7) = a2;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v17[v16], v13, v10);
    swift_retain();
    sub_1C1E475AC((uint64_t)sub_1C1E4AE90, (uint64_t)v17);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1E480DC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)(*MEMORY[0x1E4FBBC10] + *a2 + 8) + 24);
  uint64_t v8 = sub_1C1EAF2A8();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = &v18[-v10];
  MEMORY[0x1F4188790](v9);
  uint64_t v14 = *a1;
  uint64_t v13 = a1[1];
  *a4 = v14;
  a4[1] = v13;
  (*(void (**)(unsigned char *, uint64_t))(v15 + 16))(&v18[-v12], a3 + *(int *)(v7 + 36));
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v11, 1, 1, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = (uint64_t (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  sub_1C1EAECA8();
  return v16(v18, 0);
}

uint64_t sub_1C1E482CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C1EAE568();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE4F8();
  uint64_t v7 = sub_1C1EAE558();
  os_log_type_t v8 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = a2;
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    swift_getMetatypeMetadata();
    uint64_t v11 = sub_1C1EAED68();
    uint64_t v14 = sub_1C1DF8D44(v11, v12, &v15);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v7, v8, "[%{public}s]: subscription to begin generation received", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v10, -1, -1);
    MEMORY[0x1C874D2E0](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C1E484AC(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = sub_1C1EAE798();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v31 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = sub_1C1EAE568();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE4F8();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v9, a1, v4);
  uint64_t v15 = sub_1C1EAE558();
  os_log_type_t v16 = sub_1C1EAF0D8();
  int v30 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    os_log_t v26 = v15;
    uint64_t v18 = v17;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v32 = a2;
    uint64_t v33 = v27;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v29 = v10;
    swift_getMetatypeMetadata();
    uint64_t v28 = v11;
    uint64_t v19 = sub_1C1EAED68();
    uint64_t v32 = sub_1C1DF8D44(v19, v20, &v33);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v14(v31, (uint64_t)v9, v4);
    uint64_t v21 = sub_1C1EAED68();
    uint64_t v32 = sub_1C1DF8D44(v21, v22, &v33);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    os_log_t v23 = v26;
    _os_log_impl(&dword_1C1DD2000, v26, (os_log_type_t)v30, "[%{public}s]: Sending completion event <%{public}s> for generation sent", (uint8_t *)v18, 0x16u);
    uint64_t v24 = v27;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v24, -1, -1);
    MEMORY[0x1C874D2E0](v18, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v13, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1C1E4885C(uint64_t a1)
{
  uint64_t v2 = sub_1C1EAE568();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE4F8();
  uint64_t v6 = sub_1C1EAE558();
  os_log_type_t v7 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v13 = a1;
    uint64_t v14 = v9;
    *(_DWORD *)uint64_t v8 = 136446210;
    swift_getMetatypeMetadata();
    uint64_t v10 = sub_1C1EAED68();
    uint64_t v13 = sub_1C1DF8D44(v10, v11, &v14);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v6, v7, "[%{public}s]: cancellation received for generation", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v9, -1, -1);
    MEMORY[0x1C874D2E0](v8, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t type metadata accessor for GeneratorPipelineManager()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C1E48A54()
{
  if (!qword_1EBB67008)
  {
    sub_1C1DF9F8C(255, &qword_1EBB68260);
    sub_1C1DF9F8C(255, &qword_1EBB66FE8);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB67008);
    }
  }
}

void sub_1C1E48AE4()
{
  if (!qword_1EBB66210)
  {
    sub_1C1E09BCC(255, (unint64_t *)&qword_1EBB66F80, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1C1EAE1C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB66210);
    }
  }
}

uint64_t sub_1C1E48B58()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C1E48B68(uint64_t *a1)
{
  return sub_1C1E3D3CC(a1, v1[4], v1[2], v1[3]);
}

void sub_1C1E48B74()
{
  if (!qword_1EBB66F20)
  {
    sub_1C1E10020(255, &qword_1EBB66F98);
    unint64_t v0 = sub_1C1EAE7D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB66F20);
    }
  }
}

uint64_t sub_1C1E48BEC()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E48C28@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1E3EE00(a1, v2[2], v2[3], v2[4], a2);
}

unint64_t sub_1C1E48C34()
{
  unint64_t result = qword_1EBB66E98;
  if (!qword_1EBB66E98)
  {
    sub_1C1E14D20(255, &qword_1EBB66EA0, (uint64_t (*)(uint64_t))sub_1C1E48B74, sub_1C1E0C088, MEMORY[0x1E4F1A9A8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB66E98);
  }
  return result;
}

uint64_t sub_1C1E48CD0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C1E48D0C@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1C1DD455C();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1E48D48()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1C1E3C564(v0);
}

uint64_t sub_1C1E48D74()
{
  return 16;
}

__n128 sub_1C1E48D80(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

id sub_1C1E48D8C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1C1E19418();
  *a1 = v2;
  return v2;
}

void sub_1C1E48DC8(id *a1)
{
}

uint64_t sub_1C1E48DF4()
{
  return 16;
}

__n128 sub_1C1E48E00(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C1E48E0C@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1C1E194AC();
  return swift_retain();
}

uint64_t sub_1C1E48E48()
{
  uint64_t v0 = swift_retain();
  return sub_1C1E3C69C(v0);
}

uint64_t sub_1C1E48E74()
{
  return 16;
}

__n128 sub_1C1E48E80(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of CoreGenerator.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CoreGenerator.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CoreGeneratorPipeline.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CoreGeneratorPipeline.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1C1E48EDC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for GeneratorPipelineManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GeneratorPipelineManager);
}

uint64_t dispatch thunk of GeneratorPipelineManager.delegates.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.delegates.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.healthStore.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.healthStore.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.notificationManager.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.notificationManager.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.__allocating_init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v4 + 320))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of GeneratorPipelineManager.makeHealthStore(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.handleNewProfilesReceived(_:healthStores:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

void sub_1C1E490F4()
{
  sub_1C1DF9328();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for GeneratorPipelineManager.GeneratorPipelineManagerStreamContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for GeneratorPipelineManager.GeneratorPipelineManagerStreamContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GeneratorPipelineManager.GeneratorPipelineManagerStreamContext);
}

uint64_t dispatch thunk of GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.__allocating_init(sourceProfilePublisher:country:interactiveSharableModelPublisher:isLaunchGeneration:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1C1E491EC()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C1E4922C()
{
  return sub_1C1E478E8(*(void *)(v0 + 32), *(void (**)(uint64_t *__return_ptr, void *))(v0 + 40));
}

unint64_t sub_1C1E4923C()
{
  unint64_t result = qword_1EBB683D8;
  if (!qword_1EBB683D8)
  {
    sub_1C1DFA59C(255, &qword_1EBB683D0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB683D8);
  }
  return result;
}

uint64_t sub_1C1E492C4()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1C1E49324(uint64_t a1)
{
  return sub_1C1E46114(a1, *(void *)(v1 + 32), *(void **)(v1 + 40), (void *)(v1 + 48), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 16));
}

void sub_1C1E4935C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1DF9F8C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C1E493C4()
{
  unint64_t result = qword_1EBB65058;
  if (!qword_1EBB65058)
  {
    sub_1C1E15464(255, &qword_1EBB65060, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65058);
  }
  return result;
}

uint64_t sub_1C1E4944C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E49488(uint64_t a1)
{
  return sub_1C1E4B638(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1C1E72518);
}

uint64_t sub_1C1E494A0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v93 = a7;
  uint64_t v94 = a2;
  uint64_t v89 = a5;
  uint64_t v95 = a4;
  uint64_t v96 = a3;
  uint64_t v92 = a1;
  sub_1C1E153A4();
  uint64_t v87 = *(void *)(v8 - 8);
  uint64_t v88 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v86 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E152B0(0);
  uint64_t v84 = *(void *)(v10 - 8);
  uint64_t v85 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v82 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E4A2EC(0, (unint64_t *)&qword_1EBB64E60, sub_1C1E152B0, sub_1C1E15248, (void (*)(void))sub_1C1E4A37C);
  uint64_t v83 = v12;
  uint64_t v81 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v80 = (char *)&v74 - v13;
  sub_1C1E15194();
  uint64_t v77 = v14;
  uint64_t v76 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  os_log_type_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E150A8();
  uint64_t v79 = v17;
  uint64_t v78 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFA59C(0, &qword_1EBB65428, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AC08]);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v74 - v23;
  sub_1C1E15464(0, &qword_1EBB654D8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1ACE0]);
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v74 - v28;
  sub_1C1E14F48();
  uint64_t v31 = v30;
  uint64_t v91 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v90 = (char *)&v74 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a6)
  {
    __swift_project_boxed_opaque_existential_1(v94, v94[3]);
    uint64_t v58 = sub_1C1EAD5B8();
    uint64_t v60 = v59;
    *(void *)&v97[0] = v89;
    uint64_t v61 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1DFEADC(0, &qword_1EBB65080, MEMORY[0x1E4F1AAE0]);
    uint64_t v75 = MEMORY[0x1E4F1AAE8];
    sub_1C1DFEE18(&qword_1EBB65078, &qword_1EBB65080, v61);
    swift_retain();
    sub_1C1EAEA98();
    uint64_t v62 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v63 = (void *)swift_allocObject();
    void v63[2] = v62;
    v63[3] = v58;
    uint64_t v74 = v60;
    uint64_t v64 = v96;
    void v63[4] = v60;
    v63[5] = v64;
    v63[6] = v95;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C1EAE7C8();
    sub_1C1E4935C(0, &qword_1EBB67D68, (unint64_t *)&qword_1EBB67D70, 0x1E4F2B4A0, MEMORY[0x1E4FBB320]);
    sub_1C1E14FFC();
    uint64_t v66 = v65;
    sub_1C1DECE04(&qword_1EBB65820, (void (*)(uint64_t))sub_1C1E15194);
    uint64_t v67 = sub_1C1DECE04(&qword_1EBB67D30, (void (*)(uint64_t))sub_1C1E14FFC);
    uint64_t v68 = v77;
    sub_1C1EAEAD8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v16, v68);
    sub_1C1DECE04((unint64_t *)&qword_1EBB65848, (void (*)(uint64_t))sub_1C1E150A8);
    uint64_t v69 = v79;
    uint64_t v70 = sub_1C1EAEA38();
    swift_release();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v19, v69);
    swift_bridgeObjectRelease();
    *(void *)&v97[0] = v70;
    uint64_t v71 = v90;
    sub_1C1EAE918();
    swift_release();
    *(void *)&v97[0] = v66;
    *((void *)&v97[0] + 1) = v67;
    swift_getOpaqueTypeConformance2();
    uint64_t v72 = sub_1C1EAE948();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v71, v31);
    *(void *)&v97[0] = v72;
    uint64_t v73 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E12AC8(0, &qword_1EBB67D28, MEMORY[0x1E4F1AAE0]);
    sub_1C1E4A210((unint64_t *)&qword_1EBB67D20, &qword_1EBB67D28, v73);
    uint64_t v42 = sub_1C1EAEA38();
    swift_release();
    uint64_t v34 = v94;
    uint64_t v43 = v93;
    if (!v93) {
      return v42;
    }
    goto LABEL_3;
  }
  *(void *)&v97[0] = a6;
  uint64_t v75 = a6;
  sub_1C1EAE0B8();
  swift_retain_n();
  sub_1C1EAE8B8();
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  sub_1C1EAE888();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  uint64_t v33 = v31;
  uint64_t v34 = v94;
  __swift_project_boxed_opaque_existential_1(v94, v94[3]);
  sub_1C1EAD5B8();
  sub_1C1E14EC0();
  uint64_t v35 = sub_1C1EAE978();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  *(void *)&v97[0] = v35;
  sub_1C1E14FFC();
  uint64_t v37 = v36;
  uint64_t v38 = sub_1C1DECE04(&qword_1EBB67D30, (void (*)(uint64_t))sub_1C1E14FFC);
  uint64_t v39 = v90;
  sub_1C1EAE918();
  swift_release();
  *(void *)&v97[0] = v37;
  *((void *)&v97[0] + 1) = v38;
  swift_getOpaqueTypeConformance2();
  uint64_t v40 = sub_1C1EAE948();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v39, v33);
  *(void *)&v97[0] = v40;
  uint64_t v41 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1C1E12AC8(0, &qword_1EBB67D28, MEMORY[0x1E4F1AAE0]);
  sub_1C1E4A210((unint64_t *)&qword_1EBB67D20, &qword_1EBB67D28, v41);
  uint64_t v42 = sub_1C1EAEA38();
  swift_release();
  swift_release();
  uint64_t v43 = v93;
  if (v93)
  {
LABEL_3:
    uint64_t v98 = v43;
    sub_1C1DFE408((uint64_t)v34, (uint64_t)v97);
    uint64_t v44 = swift_allocObject();
    sub_1C1DFE46C(v97, v44 + 16);
    uint64_t v45 = v92;
    *(void *)(v44 + 56) = v92;
    sub_1C1E4A254();
    sub_1C1E1527C();
    swift_retain();
    id v46 = v45;
    uint64_t v47 = v82;
    sub_1C1EAEAA8();
    swift_release();
    sub_1C1E15248(0);
    sub_1C1E4A37C();
    uint64_t v48 = v80;
    uint64_t v49 = v85;
    sub_1C1EAEA68();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v47, v49);
    sub_1C1E4A400();
    uint64_t v50 = v83;
    uint64_t v51 = sub_1C1EAE938();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v48, v50);
    *(void *)&v97[0] = v51;
    uint64_t v52 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E12AC8(0, &qword_1EBB67D28, MEMORY[0x1E4F1AAE0]);
    sub_1C1E4A210((unint64_t *)&qword_1EBB67D20, &qword_1EBB67D28, v52);
    uint64_t v53 = sub_1C1EAEA38();
    swift_release();
    *(void *)&v97[0] = v53;
    uint64_t v98 = v42;
    uint64_t v54 = v86;
    sub_1C1EAEA08();
    sub_1C1DECE04(&qword_1EBB657F0, (void (*)(uint64_t))sub_1C1E153A4);
    uint64_t v55 = v88;
    uint64_t v56 = sub_1C1EAEA38();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v54, v55);
    return v56;
  }
  return v42;
}

uint64_t sub_1C1E4A210(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1E12AC8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1E4A254()
{
  if (!qword_1EBB67CF8)
  {
    sub_1C1DFA59C(255, qword_1EBB678D8, (uint64_t (*)(uint64_t))sub_1C1E15248, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
    unint64_t v0 = sub_1C1EAE7D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67CF8);
    }
  }
}

void sub_1C1E4A2EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_1C1EAE668();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1E4A37C()
{
  return sub_1C1DECE04(&qword_1EBB64E98, sub_1C1E152B0);
}

uint64_t sub_1C1E4A3B4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C1E4A3F4(uint64_t a1)
{
  return sub_1C1E468E8(a1, (void *)(v1 + 16), *(void **)(v1 + 56));
}

unint64_t sub_1C1E4A400()
{
  unint64_t result = qword_1EBB64E58;
  if (!qword_1EBB64E58)
  {
    sub_1C1E4A2EC(255, (unint64_t *)&qword_1EBB64E60, sub_1C1E152B0, sub_1C1E15248, (void (*)(void))sub_1C1E4A37C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64E58);
  }
  return result;
}

uint64_t sub_1C1E4A4A0()
{
  return 16;
}

__n128 sub_1C1E4A4AC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C1E4A4B8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = (int *)(type metadata accessor for GeneratorPipelineManagerWrapper() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v0 + v4;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v4, AssociatedTypeWitness);
  __swift_destroy_boxed_opaque_existential_1(v7 + v2[9]);
  uint64_t v8 = v7 + v2[10];
  uint64_t v9 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v7 + v2[11];
  uint64_t v11 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C1E4A644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(type metadata accessor for GeneratorPipelineManagerWrapper() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1C1E444CC(a1, v6, a2);
}

uint64_t sub_1C1E4A6FC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E4A710()
{
  return 16;
}

__n128 sub_1C1E4A71C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C1E4A728@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1E446E0(a1, *(const char **)(v2 + 32), a2);
}

uint64_t sub_1C1E4A738()
{
  return 16;
}

__n128 sub_1C1E4A744(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C1E4A750()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = (int *)(type metadata accessor for GeneratorPipelineManagerWrapper() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v0 + v4;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v4, AssociatedTypeWitness);
  __swift_destroy_boxed_opaque_existential_1(v7 + v2[9]);
  uint64_t v8 = v7 + v2[10];
  uint64_t v9 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v7 + v2[11];
  uint64_t v11 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C1E4A928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(type metadata accessor for GeneratorPipelineManagerWrapper() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1C1E45A90(a1, v6, a2);
}

uint64_t sub_1C1E4AA2C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E4AA3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1E45CEC(a1, a2);
}

uint64_t sub_1C1E4AA58(uint64_t a1, uint64_t a2)
{
  sub_1C1DFA59C(0, &qword_1EBB65778, MEMORY[0x1E4FBD318], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1E4AAEC(uint64_t a1)
{
  sub_1C1DFA59C(0, &qword_1EBB65778, MEMORY[0x1E4FBD318], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1E4AB7C()
{
  return 16;
}

__n128 sub_1C1E4AB88(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C1E4AB98(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[5];
  uint64_t v5 = *(void *)(type metadata accessor for GeneratorPipelineManagerWrapper() - 8);
  uint64_t v6 = v1[7];
  uint64_t v7 = (uint64_t *)v1[8];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v5 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1C1E47AD0(a1, v6, v7, v8, v3, v4);
}

uint64_t objectdestroy_75Tm()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = (int *)(type metadata accessor for GeneratorPipelineManagerWrapper() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  uint64_t v7 = v0 + v4;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v7, v1);
  __swift_destroy_boxed_opaque_existential_1(v7 + v2[9]);
  uint64_t v8 = v7 + v2[10];
  uint64_t v9 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v7 + v2[11];
  uint64_t v11 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C1E4ADA8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[5];
  uint64_t v3 = *(void *)(type metadata accessor for GeneratorPipelineManagerWrapper() - 8);
  uint64_t v4 = v0[7];
  uint64_t v5 = (uint64_t *)v0[8];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1C1E47EE8(v4, v5, v6, v1, v2);
}

uint64_t sub_1C1E4AE2C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C1E4AE64()
{
  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t sub_1C1E4AE90(uint64_t a1)
{
  return sub_1C1E4B03C(a1, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t))sub_1C1E480DC);
}

uint64_t objectdestroy_85Tm()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = (int *)(type metadata accessor for GeneratorPipelineManagerWrapper() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  uint64_t v7 = v0 + v4;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v7, v1);
  __swift_destroy_boxed_opaque_existential_1(v7 + v2[9]);
  uint64_t v8 = v7 + v2[10];
  uint64_t v9 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v7 + v2[11];
  uint64_t v11 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C1E4B024(uint64_t a1)
{
  return sub_1C1E4B03C(a1, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t))sub_1C1E47CC4);
}

uint64_t sub_1C1E4B03C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[5];
  uint64_t v6 = *(void *)(type metadata accessor for GeneratorPipelineManagerWrapper() - 8);
  uint64_t v7 = v2[7];
  uint64_t v8 = (char *)v2 + ((*(unsigned __int8 *)(v6 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a2(a1, v7, v8, v4, v5);
}

uint64_t sub_1C1E4B0EC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C1E4B124@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1E42B98(a1, *(void *)(v2 + 40), *(NSObject **)(v2 + 16), *(NSObject **)(v2 + 24), a2);
}

uint64_t sub_1C1E4B130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1E4253C(a1, a2);
}

uint64_t sub_1C1E4B150()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

double sub_1C1E4B188@<D0>(long long *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C1E42648(a1, a2);
}

uint64_t sub_1C1E4B194@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1C1E42770(a1, a2);
}

void sub_1C1E4B1B0()
{
  if (!qword_1EBB658F8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1DFEADC(255, &qword_1EBB65080, MEMORY[0x1E4F1AAE0]);
    uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F65E80];
    sub_1C1DFEADC(255, qword_1EBB654F8, MEMORY[0x1E4F65E80]);
    sub_1C1DFEE18(&qword_1EBB65078, &qword_1EBB65080, v0);
    sub_1C1DFEE18(&qword_1EBB654F0, qword_1EBB654F8, v1);
    unint64_t v2 = sub_1C1EAE758();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_1EBB658F8);
    }
  }
}

uint64_t sub_1C1E4B2DC()
{
  return sub_1C1DECE04(&qword_1EBB658F0, (void (*)(uint64_t))sub_1C1E4B1B0);
}

unint64_t sub_1C1E4B310()
{
  unint64_t result = qword_1EBB65790;
  if (!qword_1EBB65790)
  {
    sub_1C1E14D20(255, (unint64_t *)&qword_1EBB65798, (uint64_t (*)(uint64_t))sub_1C1E4B1B0, sub_1C1E4B2DC, MEMORY[0x1E4F1A840]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65790);
  }
  return result;
}

uint64_t sub_1C1E4B3AC()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_1C1E4B3FC()
{
  if (!qword_1EBB658E8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F67270];
    sub_1C1E15464(255, &qword_1EBB65908, MEMORY[0x1E4F67270], MEMORY[0x1E4F1AAE0]);
    sub_1C1E15464(255, &qword_1EBB654E8, v0, MEMORY[0x1E4F65E80]);
    sub_1C1DFEC44();
    sub_1C1E4B4DC();
    unint64_t v1 = sub_1C1EAE758();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB658E8);
    }
  }
}

unint64_t sub_1C1E4B4DC()
{
  unint64_t result = qword_1EBB654E0;
  if (!qword_1EBB654E0)
  {
    sub_1C1E15464(255, &qword_1EBB654E8, MEMORY[0x1E4F67270], MEMORY[0x1E4F65E80]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB654E0);
  }
  return result;
}

uint64_t sub_1C1E4B564()
{
  return sub_1C1DECE04(&qword_1EBB658E0, (void (*)(uint64_t))sub_1C1E4B3FC);
}

unint64_t sub_1C1E4B598()
{
  unint64_t result = qword_1EBB65780;
  if (!qword_1EBB65780)
  {
    sub_1C1E14D20(255, (unint64_t *)&qword_1EBB65788, (uint64_t (*)(uint64_t))sub_1C1E4B3FC, sub_1C1E4B564, MEMORY[0x1E4F1A840]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65780);
  }
  return result;
}

uint64_t sub_1C1E4B638(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

unint64_t sub_1C1E4B650()
{
  unint64_t result = qword_1EBB64D60;
  if (!qword_1EBB64D60)
  {
    sub_1C1E4B940(255, &qword_1EBB64D68, (void (*)(uint64_t))sub_1C1E0F21C, (void (*)(void))sub_1C1E0F2E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64D60);
  }
  return result;
}

uint64_t sub_1C1E4B6D8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C1E4B710@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1E40230(a1, a2);
}

uint64_t sub_1C1E4B720(uint64_t a1, uint64_t a2)
{
  return sub_1C1E40D84(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1C1E4B72C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C1E4B764@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 32))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1C1E4B79C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1E41120(a1, *(void **)(v2 + 24), *(uint64_t **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_1C1E4B7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1E41428(a1, v2[4], v2[5], v2[6], v2[2], v2[3], a2);
}

void sub_1C1E4B7E8(uint64_t a1)
{
}

unint64_t sub_1C1E4B81C()
{
  unint64_t result = qword_1EBB65A78;
  if (!qword_1EBB65A78)
  {
    sub_1C1E4A2EC(255, (unint64_t *)&qword_1EBB65A80, sub_1C1E4B7E8, (void (*)(uint64_t))sub_1C1DED3D4, (void (*)(void))sub_1C1DEE7AC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65A78);
  }
  return result;
}

unint64_t sub_1C1E4B8B8()
{
  unint64_t result = qword_1EBB65AF8;
  if (!qword_1EBB65AF8)
  {
    sub_1C1DFA59C(255, &qword_1EBB65B00, (uint64_t (*)(uint64_t))sub_1C1DED3D4, MEMORY[0x1E4F1AC08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65AF8);
  }
  return result;
}

void sub_1C1E4B940(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C1DF9148(255, (unint64_t *)&qword_1EBB68150);
    a4();
    unint64_t v6 = sub_1C1EAE608();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1C1E4B9E8()
{
  unint64_t result = qword_1EA2C1408;
  if (!qword_1EA2C1408)
  {
    sub_1C1E15464(255, &qword_1EBB65B08, (uint64_t (*)(uint64_t))sub_1C1DED3D4, MEMORY[0x1E4F1AC18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C1408);
  }
  return result;
}

uint64_t sub_1C1E4BA70()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E4BAA8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1E408CC(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1C1E4BAB0(uint64_t a1, uint64_t a2)
{
  return sub_1C1E47270(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1C1E46B44);
}

uint64_t sub_1C1E4BAE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1E46C88(a1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32), a2);
}

unint64_t sub_1C1E4BB04()
{
  unint64_t result = qword_1EBB68348;
  if (!qword_1EBB68348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB68348);
  }
  return result;
}

uint64_t sub_1C1E4BB58(uint64_t a1, uint64_t a2)
{
  return sub_1C1E47270(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1C1E46D4C);
}

uint64_t sub_1C1E4BB88(uint64_t a1, uint64_t a2)
{
  return sub_1C1E47270(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1C1E46FD0);
}

uint64_t sub_1C1E4BBB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1E47164(a1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32), a2);
}

uint64_t sub_1C1E4BBDC(uint64_t a1, uint64_t a2)
{
  return sub_1C1E47270(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1C1E472E4);
}

uint64_t sub_1C1E4BC0C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E4BC1C(uint64_t a1)
{
  return sub_1C1E482CC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1E4BC24()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E4BC34(uint64_t a1)
{
  return sub_1C1E484AC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1E4BC3C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E4BC4C()
{
  return sub_1C1E4885C(*(void *)(v0 + 16));
}

void sub_1C1E4BC54()
{
  if (!qword_1EBB683A0)
  {
    unint64_t v0 = sub_1C1EAF698();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB683A0);
    }
  }
}

void sub_1C1E4BCC0()
{
  if (!qword_1EBB67050)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB67050);
    }
  }
}

_OWORD *sub_1C1E4BD2C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1C1E4BD3C(uint64_t a1, void **a2)
{
}

uint64_t sub_1C1E4BD58()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

BOOL sub_1C1E4BD68(void **a1)
{
  return sub_1C1E3FAC8(a1, *(void *)(v1 + 32));
}

unint64_t sub_1C1E4BD74()
{
  unint64_t result = qword_1EBB66EB8;
  if (!qword_1EBB66EB8)
  {
    sub_1C1E14D20(255, &qword_1EBB66EC0, (uint64_t (*)(uint64_t))sub_1C1E48B74, sub_1C1E0C088, MEMORY[0x1E4F1A9E8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB66EB8);
  }
  return result;
}

uint64_t sub_1C1E4BE10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1E4BAE0(a1, a2);
}

uint64_t sub_1C1E4BE28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1E4BBB8(a1, a2);
}

uint64_t Keyword.localizedIdentifier.getter()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_identifier);
  uint64_t v3 = sub_1C1EAED38();
  uint64_t v5 = v4;

  uint64_t v12 = sub_1C1EADB38();
  uint64_t v13 = v6;
  sub_1C1E4BF74();
  sub_1C1E4BFC8();
  LOBYTE(v2) = sub_1C1EAECD8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2) {
    return 0;
  }
  id v7 = objc_msgSend(v1, sel_identifier, v12, v13, v3, v5);
  uint64_t v8 = HKDisplayCategoryIdentifierFromString();

  if (v8 != -1) {
    return 0;
  }
  id v10 = objc_msgSend(v1, sel_identifier);
  uint64_t v9 = sub_1C1EAED38();

  return v9;
}

unint64_t sub_1C1E4BF74()
{
  unint64_t result = qword_1EBB65268[0];
  if (!qword_1EBB65268[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBB65268);
  }
  return result;
}

unint64_t sub_1C1E4BFC8()
{
  unint64_t result = qword_1EBB65260;
  if (!qword_1EBB65260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65260);
  }
  return result;
}

uint64_t Set<>.correspondingKeywords.getter()
{
  swift_getWitnessTable();
  sub_1C1EAEFA8();
  sub_1C1E299A4();
  swift_getWitnessTable();
  sub_1C1E4C130();
  uint64_t v0 = sub_1C1EAEE28();
  uint64_t v1 = sub_1C1DDC140(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C1E4C0FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s14HealthPlatform7KeywordC0aB4CoreE11identifiers3forSaySSGSo12HKObjectTypeC_tFZ_0();
  *a1 = result;
  return result;
}

unint64_t sub_1C1E4C130()
{
  unint64_t result = qword_1EBB66FB0;
  if (!qword_1EBB66FB0)
  {
    sub_1C1E299A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB66FB0);
  }
  return result;
}

uint64_t Keyword.uniqueIdentifier.getter()
{
  swift_getObjectType();
  uint64_t v1 = sub_1C1EAD368();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = sub_1C1EAF908();
  v8[1] = v5;
  sub_1C1EAEDB8();
  id v6 = objc_msgSend(v0, sel_identifier);
  sub_1C1EAED38();

  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  sub_1C1EAD358();
  sub_1C1E4C300();
  sub_1C1EAF768();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8[0];
}

unint64_t sub_1C1E4C300()
{
  unint64_t result = qword_1EBB66150;
  if (!qword_1EBB66150)
  {
    sub_1C1EAD368();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB66150);
  }
  return result;
}

unint64_t Keyword.reuseIdentifier.getter()
{
  return 0xD000000000000016;
}

unint64_t sub_1C1E4C374()
{
  return 0xD000000000000016;
}

uint64_t sub_1C1E4C390()
{
  return Keyword.uniqueIdentifier.getter();
}

uint64_t sub_1C1E4C3B4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7961646F54;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7961646F54;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x4420372074736150;
      unint64_t v3 = 0xEB00000000737961;
      break;
    case 2:
      uint64_t v5 = 0x2030332074736150;
      unint64_t v3 = 0xEC00000073796144;
      break;
    case 3:
      uint64_t v5 = 0x2032312074736150;
      unint64_t v3 = 0xEE007368746E6F4DLL;
      break;
    case 4:
      uint64_t v5 = 0x5920352074736150;
      unint64_t v3 = 0xEC00000073726165;
      break;
    case 5:
      uint64_t v5 = 0x7265646C4FLL;
      break;
    case 6:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x65746144206F4ELL;
      break;
    case 7:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x61746144206F4ELL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000737961;
      if (v5 == 0x4420372074736150) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      uint64_t v7 = 0x2030332074736150;
      uint64_t v8 = 1937334596;
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xEE007368746E6F4DLL;
      if (v5 != 0x2032312074736150) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      uint64_t v7 = 0x5920352074736150;
      uint64_t v8 = 1936875877;
LABEL_16:
      unint64_t v6 = v8 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v5 != v7) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      if (v5 != 0x7265646C4FLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x65746144206F4ELL;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x61746144206F4ELL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v9 = 1;
      }
      else {
LABEL_25:
      }
        char v9 = sub_1C1EAF7A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1C1E4C664(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x657461645F746573;
  }
  else {
    uint64_t v3 = 7364980;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x657461645F746573;
  }
  else {
    uint64_t v5 = 7364980;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1C1EAF7A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C1E4C704(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6C6C657764;
  }
  else {
    uint64_t v3 = 7364980;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6C6C657764;
  }
  else {
    uint64_t v5 = 7364980;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1C1EAF7A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t ModelTrainingScenarioExecutor.__allocating_init(coordinator:store:)(long long *a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1C1DFE46C(a1, v4 + 16);
  sub_1C1DFE46C(a2, v4 + 56);
  return v4;
}

uint64_t ModelTrainingScenarioExecutor.init(coordinator:store:)(long long *a1, long long *a2)
{
  sub_1C1DFE46C(a1, v2 + 16);
  sub_1C1DFE46C(a2, v2 + 56);
  return v2;
}

uint64_t sub_1C1E4C834(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + 2;
  uint64_t v7 = v2[5];
  uint64_t v6 = v2[6];
  __swift_project_boxed_opaque_existential_1(v5, v7);
  return RelevanceEngineCoordinator.saveModelToDisk(completion:)(a1, a2, v7, v6);
}

void sub_1C1E4C88C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1C1E4CF04(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v62 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v57 = (uint64_t)&v53 - v11;
  uint64_t v12 = sub_1C1EAD318();
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v61 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v54 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E4CF04(0, &qword_1EA2C1410, (void (*)(uint64_t))type metadata accessor for ModelTrainingCommand);
  MEMORY[0x1F4188790](v14 - 8);
  os_log_type_t v16 = (char *)&v53 - v15;
  uint64_t v17 = type metadata accessor for ModelTrainingCommand(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v59 = (uint64_t)&v53 - v22;
  uint64_t v24 = *a1;
  uint64_t v23 = a1[1];
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    uint64_t v55 = v23;
    uint64_t v56 = a3;
    uint64_t v58 = a2;
    uint64_t v26 = v24 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v27 = *(void *)(v18 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C1E3775C(v26, (uint64_t)v21, type metadata accessor for ModelTrainingCommand);
      if (*v21 == 1) {
        break;
      }
      char v28 = sub_1C1EAF7A8();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_9;
      }
      sub_1C1E4CF58((uint64_t)v21);
      v26 += v27;
      if (!--v25)
      {
        uint64_t v29 = 1;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
LABEL_9:
    sub_1C1E4D99C((uint64_t)v21, (uint64_t)v16, type metadata accessor for ModelTrainingCommand);
    uint64_t v29 = 0;
LABEL_10:
    uint64_t v23 = v55;
    a3 = v56;
    a2 = v58;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = 1;
  }
  uint64_t v31 = v60;
  uint64_t v30 = v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v29, 1, v17);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    uint64_t v32 = &qword_1EA2C1410;
    uint64_t v33 = (void (*)(uint64_t))type metadata accessor for ModelTrainingCommand;
    uint64_t v34 = (uint64_t)v16;
  }
  else
  {
    uint64_t v35 = v59;
    sub_1C1E4D99C((uint64_t)v16, v59, type metadata accessor for ModelTrainingCommand);
    uint64_t v36 = v35 + *(int *)(v17 + 24);
    uint64_t v37 = v57;
    sub_1C1E4D384(v36, v57);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v37, 1, v30) != 1)
    {
      uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
      uint64_t v58 = a2;
      uint64_t v43 = v54;
      v42(v54, v37, v30);
      uint64_t v44 = v4[5];
      uint64_t v45 = v4[6];
      __swift_project_boxed_opaque_existential_1(v4 + 2, v44);
      id v46 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v45 + 32))(v44, v45);
      uint64_t v47 = (uint64_t)v62;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v62, v43, v30);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v47, 0, 1, v30);
      sub_1C1E8AFC4(v47);

      uint64_t v48 = v43;
      a2 = v58;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v48, v30);
      sub_1C1E4CF58(v59);
      goto LABEL_17;
    }
    sub_1C1E4CF58(v35);
    uint64_t v32 = (unint64_t *)&qword_1EBB682A8;
    uint64_t v33 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    uint64_t v34 = v37;
  }
  sub_1C1E4CFB4(v34, v32, v33);
  uint64_t v38 = v4[5];
  uint64_t v39 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v38);
  uint64_t v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 32))(v38, v39);
  uint64_t v41 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v62, 1, 1, v30);
  sub_1C1E8AFC4(v41);

LABEL_17:
  __swift_project_boxed_opaque_existential_1(v4 + 7, v4[10]);
  uint64_t v49 = (void *)sub_1C1EAD538();
  uint64_t v50 = (void *)swift_allocObject();
  v50[2] = v24;
  v50[3] = v23;
  v50[4] = v49;
  v50[5] = v4;
  v50[6] = a2;
  v50[7] = a3;
  aBlock[4] = sub_1C1E4D374;
  aBlock[5] = v50;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1DF5050;
  aBlock[3] = &block_descriptor_1;
  uint64_t v51 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v52 = v49;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v52, sel_performBlock_, v51);
  _Block_release(v51);
}

void sub_1C1E4CF04(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C1EAF2A8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1E4CF58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ModelTrainingCommand(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1E4CFB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1E4CF04(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1E4D010(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = a2;
  uint64_t v36 = a4;
  id v34 = a3;
  uint64_t v9 = type metadata accessor for ModelTrainingCommand(0) - 8;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
    os_log_type_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_17;
  }
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  uint64_t v14 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  uint64_t v15 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain_n();
  os_log_type_t v16 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    sub_1C1E3775C(v14, (uint64_t)v12, type metadata accessor for ModelTrainingCommand);
    if (*v12)
    {
      char v17 = sub_1C1EAF7A8();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        sub_1C1E4CF58((uint64_t)v12);
        goto LABEL_4;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v18 = *((void *)v12 + 1);
    uint64_t v19 = *((void *)v12 + 2);
    swift_bridgeObjectRetain();
    sub_1C1E4CF58((uint64_t)v12);
    if (v19)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        os_log_type_t v16 = sub_1C1E1C238(0, v16[2] + 1, 1, v16);
      }
      unint64_t v21 = v16[2];
      unint64_t v20 = v16[3];
      if (v21 >= v20 >> 1) {
        os_log_type_t v16 = sub_1C1E1C238((void *)(v20 > 1), v21 + 1, 1, v16);
      }
      void v16[2] = v21 + 1;
      uint64_t v22 = &v16[2 * v21];
      v22[4] = v18;
      void v22[5] = v19;
    }
LABEL_4:
    v14 += v15;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease_n();
  a5 = v32;
  a6 = v33;
LABEL_17:
  uint64_t v23 = sub_1C1DDC140((uint64_t)v16);
  swift_bridgeObjectRelease();
  id v24 = v34;
  swift_bridgeObjectRetain();
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = sub_1C1E4D504(v25, v24, v23);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  objc_msgSend(v24, sel_rollback);
  uint64_t v27 = v36[5];
  uint64_t v28 = v36[6];
  __swift_project_boxed_opaque_existential_1(v36 + 2, v27);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a5;
  *(void *)(v29 + 24) = a6;
  swift_retain();
  RelevanceEngineCoordinator.train(with:completion:)(v26, (uint64_t)sub_1C1DD6C18, v29, v27, v28);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C1E4D31C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C1E4D374()
{
  return sub_1C1E4D010(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1C1E4D384(uint64_t a1, uint64_t a2)
{
  sub_1C1E4CF04(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ModelTrainingScenarioExecutor.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t ModelTrainingScenarioExecutor.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ModelTrainingScenarioExecutor()
{
  return self;
}

uint64_t method lookup function for ModelTrainingScenarioExecutor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ModelTrainingScenarioExecutor);
}

uint64_t dispatch thunk of ModelTrainingScenarioExecutor.__allocating_init(coordinator:store:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ModelTrainingScenarioExecutor.saveModelToDisk(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ModelTrainingScenarioExecutor.execute(scenario:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_1C1E4D504(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v44 = a2;
  uint64_t v45 = a3;
  uint64_t v43 = type metadata accessor for ModelTrainingElement(0);
  uint64_t v6 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v42 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E1D1B8();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v49 = MEMORY[0x1E4FBC860];
    sub_1C1E220A4(0, v11, 0);
    uint64_t v12 = v49;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v14 = sub_1C1EAE348();
    uint64_t v38 = *(void *)(v6 + 72);
    uint64_t v39 = v14;
    do
    {
      uint64_t v46 = v12;
      uint64_t v15 = v42;
      sub_1C1E3775C(v13, (uint64_t)v42, type metadata accessor for ModelTrainingElement);
      id v16 = FeedItem.init(context:modelTrainingElement:)((int *)v44, v15);
      id v17 = objc_msgSend(v16, sel_featureTags);
      sub_1C1EADA78();
      sub_1C1E1FF04();
      uint64_t v18 = sub_1C1EAEF48();

      uint64_t v19 = sub_1C1E20408(v18);
      uint64_t v47 = v4;
      swift_bridgeObjectRelease();
      sub_1C1E1FF5C();
      uint64_t v48 = v19;
      sub_1C1E58720(v20);
      id v21 = objc_msgSend(v16, sel_uniqueIdentifier);
      sub_1C1EAED38();

      id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94910]), sel_init);
      id v23 = objc_allocWithZone(MEMORY[0x1E4F94920]);
      id v24 = (void *)sub_1C1EAED28();
      swift_bridgeObjectRelease();
      sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67010);
      uint64_t v25 = (void *)sub_1C1EAEE88();
      swift_bridgeObjectRelease();
      id v26 = objc_msgSend(v23, sel_initWithIdentifier_content_action_relevanceProviders_, v24, v22, 0, v25);

      uint64_t v27 = (uint64_t *)(v13 + *(int *)(v43 + 56));
      uint64_t v28 = *v27;
      uint64_t v29 = v27[1];
      swift_bridgeObjectRetain();
      LOBYTE(v22) = sub_1C1E73FD4(v28, v29, v45);
      swift_bridgeObjectRelease();
      id v30 = objc_msgSend(v16, sel_objectID);
      id v31 = objc_msgSend(v30, sel_URIRepresentation);

      uint64_t v32 = (char *)v10 + *(int *)(v41 + 48);
      sub_1C1EAD248();

      uint64_t v33 = type metadata accessor for ModelTrainingEvent();
      sub_1C1EAD308();

      v32[*(int *)(v33 + 20)] = 0;
      v32[*(int *)(v33 + 24)] = v22 & 1;
      *uint64_t v10 = v26;
      uint64_t v12 = v46;
      uint64_t v49 = v46;
      unint64_t v35 = *(void *)(v46 + 16);
      unint64_t v34 = *(void *)(v46 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_1C1E220A4(v34 > 1, v35 + 1, 1);
        uint64_t v12 = v49;
      }
      *(void *)(v12 + 16) = v35 + 1;
      sub_1C1E4D99C((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v35, (uint64_t (*)(void))sub_1C1E1D1B8);
      v13 += v38;
      --v11;
      uint64_t v4 = v47;
    }
    while (v11);
  }
  return v12;
}

uint64_t sub_1C1E4D964()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E4D99C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1E4DA04()
{
  uint64_t v0 = MEMORY[0x1E4FBC860];
  uint64_t v9 = MEMORY[0x1E4FBC860];
  sub_1C1EADB68();
  if (v1)
  {
    uint64_t v2 = self;
    if (qword_1EBB680B8 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_1EBB6ACC8;
    uint64_t v4 = (void *)sub_1C1EAED28();
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(self, sel_featureValueWithString_, v4);

    id v6 = objc_msgSend(v2, sel_customRelevanceProviderForFeature_withValue_, v3, v5);
    if (v6)
    {
      id v7 = v6;
      MEMORY[0x1C874C090]();
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C1EAEEE8();
      }
      sub_1C1EAEF18();
      sub_1C1EAEEB8();

      return v9;
    }
    else
    {
      return MEMORY[0x1E4FBC860];
    }
  }
  return v0;
}

void sub_1C1E4DB74()
{
  uint64_t v0 = (void *)sub_1C1EAED28();
  id v1 = objc_msgSend(self, sel_featureWithName_featureType_, v0, 1);

  qword_1EBB6ACC8 = (uint64_t)v1;
}

uint64_t sub_1C1E4DBE8()
{
  if (qword_1EBB680B8 != -1) {
    swift_once();
  }
  sub_1C1EAD688();
  uint64_t v0 = *(void *)(sub_1C1EAD678() + 16);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C1E863EC(v0);
  qword_1EBB6ACD0 = result;
  return result;
}

void sub_1C1E4DC68()
{
  sub_1C1E4DDB8();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1EB04A0;
  id v1 = self;
  uint64_t v2 = qword_1EBB64738;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_1EBB6AB90;
  swift_bridgeObjectRetain();
  id v4 = v3;
  id v5 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_featureValueWithString_, v5);

  id v7 = objc_msgSend(v1, sel_customRelevanceProviderForFeature_withValue_, v4, v6);
  if (v7)
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + 32) = v7;
    sub_1C1EAEEB8();
  }
  else
  {
    __break(1u);
  }
}

void sub_1C1E4DDB8()
{
  if (!qword_1EBB660F8)
  {
    unint64_t v0 = sub_1C1EAF778();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB660F8);
    }
  }
}

void sub_1C1E4DE14()
{
  sub_1C1E4DE94();
  sub_1C1EADC68();
  unint64_t v0 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_featureWithName_featureType_, v0, 1);

  qword_1EBB6AB90 = (uint64_t)v1;
}

unint64_t sub_1C1E4DE94()
{
  unint64_t result = qword_1EBB64868;
  if (!qword_1EBB64868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64868);
  }
  return result;
}

uint64_t HealthExperienceStoreFeedItemContext.__allocating_init(storageContext:pluginInfo:healthStore:environment:pinnedContentManager:notificationManager:queueProvider:dateRange:displayNamePublisher:primaryHealthStore:)(void *a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char v16 = a4 & 1;
  swift_allocObject();
  uint64_t v17 = sub_1C1DFC6C0(a1, a2, a3, v16, a5, a6, a7, a8, a9, a10);

  swift_release();
  return v17;
}

uint64_t sub_1C1E4DFA0()
{
  uint64_t result = sub_1C1EAED28();
  qword_1EBB66FF8 = result;
  return result;
}

id static NSNotificationName.feedItemSubmissionOccurred.getter()
{
  if (qword_1EBB67D80 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1EBB66FF8;
  return v0;
}

unint64_t static HealthExperienceStoreFeedItemContext.feedItemChangeDomainKey.getter()
{
  return 0xD000000000000014;
}

void sub_1C1E4E050(void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  id v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = v2;
  id v5 = v2;
}

id sub_1C1E4E0A8()
{
  swift_beginAccess();
  id v1 = *(void **)(v0 + 16);
  return v1;
}

uint64_t sub_1C1E4E0EC(uint64_t a1, void *a2)
{
  sub_1C1DFE408(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + 24;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1C1DFE46C(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1C1E4E154@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1C1DFE408(v1 + 24, a1);
}

uint64_t sub_1C1E4E1A0(_OWORD *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(_OWORD *)(v3 + 64) = *a1;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1C1E4E204()
{
  return swift_unknownObjectRetain();
}

void sub_1C1E4E248(void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  id v4 = *(void **)(v3 + 80);
  *(void *)(v3 + 80) = v2;
  id v5 = v2;
}

id sub_1C1E4E2A0()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 80);
  return v1;
}

uint64_t sub_1C1E4E2E4()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_1C1E4E318@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_boundingRange;
  swift_beginAccess();
  uint64_t v4 = sub_1C1EAD0E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1C1E4E3A0(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C1EAD0E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_boundingRange;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1C1E4E4BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_boundingRange;
  swift_beginAccess();
  uint64_t v4 = sub_1C1EAD0E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HealthExperienceStoreFeedItemContext.displayNamePublisher.getter()
{
  return swift_retain();
}

uint64_t HealthExperienceStoreFeedItemContext.pluginInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1DFE408(v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo, a1);
}

uint64_t HealthExperienceStoreFeedItemContext.init(storageContext:pluginInfo:healthStore:environment:pinnedContentManager:notificationManager:queueProvider:dateRange:displayNamePublisher:primaryHealthStore:)(void *a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = sub_1C1DFC6C0(a1, a2, a3, a4 & 1, a5, a6, a7, a8, a9, a10);

  swift_release();
  return v11;
}

uint64_t sub_1C1E4E5CC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_queueProvider + 24);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_queueProvider + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_queueProvider), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1C1E4E630@<X0>(void *a1@<X8>)
{
  a1[3] = &type metadata for DispatchQueueGeneratorScheduler;
  a1[4] = sub_1C1DDDE24();
  uint64_t v3 = (void *)swift_allocObject();
  *a1 = v3;
  v3[5] = type metadata accessor for HealthExperienceStoreFeedItemContext(0);
  v3[6] = sub_1C1E5383C(&qword_1EBB662D0, (void (*)(uint64_t))type metadata accessor for HealthExperienceStoreFeedItemContext);
  v3[2] = v1;
  return swift_retain();
}

uint64_t sub_1C1E4E6E4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1C1EAD138();
  uint64_t v6 = *(char **)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1EADD48();
  uint64_t v121 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v119 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v123 = (char *)&v112 - v12;
  uint64_t v134 = (void *)sub_1C1EAD898();
  uint64_t v118 = *(v134 - 1);
  MEMORY[0x1F4188790](v134);
  uint64_t v14 = (void (**)(uint64_t, uint64_t))((char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v127 = type metadata accessor for ExecuteChangesResult(0);
  MEMORY[0x1F4188790](v127);
  uint64_t v130 = (char *)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_1C1EAE568();
  uint64_t v132 = *(void *)(v133 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v133);
  uint64_t v126 = (char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v120 = (char *)&v112 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  id v122 = (char *)&v112 - v21;
  MEMORY[0x1F4188790](v20);
  id v23 = (void (*)(char *, uint64_t))((char *)&v112 - v22);
  sub_1C1EAE4F8();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v128 = v23;
  id v24 = sub_1C1EAE558();
  os_log_type_t v25 = sub_1C1EAF0D8();
  LODWORD(v125) = v25;
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v131 = (uint64_t)v2;
  uint64_t v115 = v5;
  uint64_t v117 = (void (**)(uint64_t, uint64_t))v6;
  uint64_t v116 = v8;
  uint64_t v129 = v4;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v124 = v9;
    uint64_t v28 = v27;
    uint64_t v114 = (void *)swift_slowAlloc();
    id v140 = v114;
    *(_DWORD *)uint64_t v28 = 136446722;
    os_log_t v113 = v24;
    *(void *)&long long aBlock = v4;
    swift_getMetatypeMetadata();
    uint64_t v29 = sub_1C1EAED68();
    *(void *)&long long aBlock = sub_1C1DF8D44(v29, v30, (uint64_t *)&v140);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    __swift_project_boxed_opaque_existential_1((void *)((char *)v2 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo), *(void *)((char *)v2 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo+ 24));
    uint64_t v31 = sub_1C1EAD5B8();
    *(void *)&long long aBlock = sub_1C1DF8D44(v31, v32, (uint64_t *)&v140);
    sub_1C1EAF2C8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 22) = 2050;
    uint64_t v33 = *(void *)(a1 + 16);
    swift_bridgeObjectRelease();
    *(void *)&long long aBlock = v33;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    os_log_t v34 = v113;
    _os_log_impl(&dword_1C1DD2000, v113, (os_log_type_t)v125, "[%{public}s][%{public}s] Plugin is requesting to commit %{public}ld change(s).", (uint8_t *)v28, 0x20u);
    unint64_t v35 = v114;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v35, -1, -1);
    uint64_t v36 = v28;
    uint64_t v9 = v124;
    MEMORY[0x1C874D2E0](v36, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v37 = *(void (**)(char *, uint64_t))(v132 + 8);
  uint64_t v38 = v133;
  v37((char *)v128, v133);
  uint64_t v39 = (uint64_t)v130;
  if (*(void *)(a1 + 16))
  {
    uint64_t v128 = v37;
    uint64_t v40 = v9;
    id v140 = 0;
    uint64_t v41 = MEMORY[0x1E4FBC860];
    sub_1C1EADCC8();
    uint64_t v42 = *(int *)(v127 + 20);
    *(void *)(v39 + v42) = v41;
    uint64_t v43 = v131;
    id v44 = *(void **)(v131 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_storageContext);
    uint64_t v45 = (void *)swift_allocObject();
    v45[2] = v39;
    v45[3] = v43;
    v45[4] = a1;
    v45[5] = &v140;
    v45[6] = v129;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = sub_1C1E537C0;
    *(void *)(v46 + 24) = v45;
    uint64_t v127 = (uint64_t)v45;
    uint64_t v138 = sub_1C1DD6C18;
    uint64_t v139 = v46;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v137 = sub_1C1DD8834;
    *((void *)&v137 + 1) = &block_descriptor_2;
    uint64_t v47 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v44, sel_performBlockAndWait_, v47);
    _Block_release(v47);
    LOBYTE(v44) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v44)
    {
      __break(1u);
    }
    else
    {
      if (v140)
      {
        id v48 = v140;
        swift_willThrow();
        sub_1C1E537E0(v39);

        return swift_release();
      }
      uint64_t v43 = v40;
      uint64_t v60 = *(char **)(v39 + v42);
      uint64_t v61 = *((void *)v60 + 2);
      uint64_t v62 = v133;
      uint64_t v124 = v43;
      if (v61)
      {
        uint64_t v63 = *(void (**)(void (**)(uint64_t, uint64_t), char *, void *))(v118 + 16);
        uint64_t v64 = &v60[(*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80)];
        uint64_t v65 = *(void *)(v118 + 72);
        uint64_t v66 = (void (**)(char *, void *))(v118 + 8);
        uint64_t v126 = v60;
        swift_bridgeObjectRetain_n();
        uint64_t v67 = v134;
        do
        {
          v63(v14, v64, v67);
          uint64_t v68 = (void (*)(void (**)(uint64_t, uint64_t)))sub_1C1EAD848();
          if (v68)
          {
            uint64_t v69 = (uint64_t)v68;
            v68(v14);
            sub_1C1E16DFC(v69);
          }
          uint64_t v67 = v134;
          (*v66)((char *)v14, v134);
          v64 += v65;
          --v61;
        }
        while (v61);
        swift_bridgeObjectRelease_n();
        uint64_t v43 = v124;
        uint64_t v62 = v133;
      }
      uint64_t v70 = v122;
      sub_1C1EAE4F8();
      uint64_t v71 = v131;
      swift_retain_n();
      uint64_t v72 = sub_1C1EAE558();
      os_log_type_t v73 = sub_1C1EAF098();
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v74 = swift_slowAlloc();
        uint64_t v134 = (void *)swift_slowAlloc();
        unint64_t v135 = v134;
        *(_DWORD *)uint64_t v74 = 136446466;
        uint64_t v75 = v129;
        *(void *)&long long aBlock = v129;
        swift_getMetatypeMetadata();
        uint64_t v76 = sub_1C1EAED68();
        *(void *)&long long aBlock = sub_1C1DF8D44(v76, v77, (uint64_t *)&v135);
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v74 + 12) = 2082;
        __swift_project_boxed_opaque_existential_1((void *)(v131 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo), *(void *)(v131 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24));
        uint64_t v78 = sub_1C1EAD5B8();
        *(void *)&long long aBlock = sub_1C1DF8D44(v78, v79, (uint64_t *)&v135);
        uint64_t v80 = v75;
        uint64_t v43 = v124;
        uint64_t v71 = v131;
        sub_1C1EAF2C8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1DD2000, v72, v73, "[%{public}s][%{public}s] Executed afterCommit block for updated feed items.", (uint8_t *)v74, 0x16u);
        uint64_t v81 = v134;
        swift_arrayDestroy();
        MEMORY[0x1C874D2E0](v81, -1, -1);
        MEMORY[0x1C874D2E0](v74, -1, -1);

        v128(v122, v133);
        uint64_t v82 = v121;
        uint64_t v83 = v123;
        uint64_t v84 = v130;
      }
      else
      {

        swift_release_n();
        v128(v70, v62);
        uint64_t v82 = v121;
        uint64_t v83 = v123;
        uint64_t v84 = v130;
        uint64_t v80 = v129;
      }
      uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
      v85(v83, v84, v43);
      char v86 = sub_1C1EADD28();
      uint64_t v87 = v120;
      if (v86)
      {
        (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v43);
        uint64_t v88 = (uint64_t)v84;
LABEL_27:
        sub_1C1E537E0(v88);

        return swift_release();
      }
      sub_1C1EAE508();
      uint64_t v89 = v119;
      uint64_t v134 = v85;
      v85(v119, v83, v43);
      swift_retain_n();
      uint64_t v90 = sub_1C1EAE558();
      os_log_type_t v91 = sub_1C1EAF0A8();
      int v92 = v91;
      if (os_log_type_enabled(v90, v91))
      {
        uint64_t v93 = swift_slowAlloc();
        LODWORD(v126) = v92;
        uint64_t v94 = v93;
        uint64_t v131 = swift_slowAlloc();
        unint64_t v135 = (void *)v131;
        *(_DWORD *)uint64_t v94 = 136446722;
        os_log_t v125 = v90;
        *(void *)&long long aBlock = v80;
        swift_getMetatypeMetadata();
        uint64_t v95 = sub_1C1EAED68();
        *(void *)&long long aBlock = sub_1C1DF8D44(v95, v96, (uint64_t *)&v135);
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 12) = 2082;
        __swift_project_boxed_opaque_existential_1((void *)(v71 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo), *(void *)(v71 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24));
        uint64_t v97 = v121;
        uint64_t v98 = sub_1C1EAD5B8();
        *(void *)&long long aBlock = sub_1C1DF8D44(v98, v99, (uint64_t *)&v135);
        sub_1C1EAF2C8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 22) = 2080;
        sub_1C1E5383C(&qword_1EBB65328, MEMORY[0x1E4F672B0]);
        uint64_t v100 = v119;
        uint64_t v101 = sub_1C1EAF768();
        *(void *)&long long aBlock = sub_1C1DF8D44(v101, v102, (uint64_t *)&v135);
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        a1 = *(void *)(v97 + 8);
        ((void (*)(char *, uint64_t))a1)(v100, v43);
        os_log_t v103 = v125;
        _os_log_impl(&dword_1C1DD2000, v125, (os_log_type_t)v126, "[%{public}s][%{public}s] Posting feedItemSubmissionOccurred notification for change domain: %s, privacy: .public)", (uint8_t *)v94, 0x20u);
        uint64_t v104 = v131;
        swift_arrayDestroy();
        MEMORY[0x1C874D2E0](v104, -1, -1);
        MEMORY[0x1C874D2E0](v94, -1, -1);

        uint64_t v105 = v120;
      }
      else
      {
        swift_release_n();
        a1 = *(void *)(v82 + 8);
        ((void (*)(char *, uint64_t))a1)(v89, v43);

        uint64_t v105 = v87;
      }
      v128(v105, v133);
      uint64_t v14 = v117;
      uint64_t v46 = (uint64_t)v116;
      if (qword_1EBB67D80 == -1)
      {
LABEL_26:
        long long aBlock = 0u;
        long long v137 = 0u;
        id v106 = (id)qword_1EBB66FF8;
        sub_1C1EAD108();
        sub_1C1DFCD8C(0, &qword_1EBB670F8, (uint64_t (*)(uint64_t))sub_1C1E4BCC0, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1EB07F0;
        *(void *)&long long aBlock = 0xD000000000000014;
        *((void *)&aBlock + 1) = 0x80000001C1EB38E0;
        sub_1C1EAF448();
        *(void *)(inited + 96) = v43;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 72));
        uint64_t v109 = v123;
        ((void (*)(uint64_t *, char *, uint64_t))v134)(boxed_opaque_existential_0, v123, v43);
        sub_1C1E3D28C(inited);
        sub_1C1EAD128();
        id v110 = objc_msgSend(self, sel_defaultCenter);
        uint64_t v111 = (void *)sub_1C1EAD0F8();
        objc_msgSend(v110, sel_postNotification_, v111);

        v14[1](v46, v115);
        ((void (*)(char *, uint64_t))a1)(v109, v43);
        uint64_t v88 = (uint64_t)v130;
        goto LABEL_27;
      }
    }
    swift_once();
    goto LABEL_26;
  }
  uint64_t v50 = v126;
  sub_1C1EAE4F8();
  uint64_t v51 = v131;
  swift_retain_n();
  id v52 = sub_1C1EAE558();
  os_log_type_t v53 = sub_1C1EAF0B8();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = swift_slowAlloc();
    uint64_t v134 = (void *)swift_slowAlloc();
    id v140 = v134;
    *(_DWORD *)uint64_t v54 = 136446466;
    *(void *)&long long aBlock = v129;
    swift_getMetatypeMetadata();
    uint64_t v55 = sub_1C1EAED68();
    uint64_t v128 = v37;
    *(void *)&long long aBlock = sub_1C1DF8D44(v55, v56, (uint64_t *)&v140);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2082;
    __swift_project_boxed_opaque_existential_1((void *)(v51 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo), *(void *)(v51 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24));
    uint64_t v57 = sub_1C1EAD5B8();
    *(void *)&long long aBlock = sub_1C1DF8D44(v57, v58, (uint64_t *)&v140);
    sub_1C1EAF2C8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v52, v53, "[%{public}s][%{public}s] Empty commit was submitted; no work will be done",
      (uint8_t *)v54,
      0x16u);
    uint64_t v59 = v134;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v59, -1, -1);
    MEMORY[0x1C874D2E0](v54, -1, -1);

    return ((uint64_t (*)(char *, uint64_t))v128)(v126, v133);
  }
  else
  {

    swift_release_n();
    return ((uint64_t (*)(char *, uint64_t))v37)(v50, v38);
  }
}

void sub_1C1E4F924(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, void *a5)
{
  uint64_t v85 = a5;
  v89[1] = *MEMORY[0x1E4F143B8];
  uint64_t v9 = sub_1C1EAE568();
  uint64_t v86 = *(void *)(v9 - 8);
  uint64_t v87 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v78[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = &v78[-v15];
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v78[-v17];
  uint64_t v19 = type metadata accessor for ExecuteChangesResult(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = &v78[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C1E50640(a3, (uint64_t)v21);
  uint64_t v84 = v12;
  sub_1C1E545AC((uint64_t)v21, a1);
  uint64_t v22 = *(NSObject **)(a2 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_storageContext);
  if ([v22 hasChanges])
  {
    uint64_t v23 = a2;
    uint64_t v83 = a4;
    sub_1C1EAE4F8();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    id v24 = sub_1C1EAE558();
    os_log_type_t v25 = sub_1C1EAF0D8();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v82 = v22;
      uint64_t v28 = v27;
      uint64_t v81 = swift_slowAlloc();
      v89[0] = v81;
      *(_DWORD *)uint64_t v28 = 136446722;
      os_log_t v80 = v24;
      id v88 = v85;
      swift_getMetatypeMetadata();
      uint64_t v29 = sub_1C1EAED68();
      id v88 = (id)sub_1C1DF8D44(v29, v30, v89);
      int v79 = v26;
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      __swift_project_boxed_opaque_existential_1((void *)(v23 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo), *(void *)(v23 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24));
      uint64_t v31 = v86;
      uint64_t v32 = sub_1C1EAD5B8();
      id v88 = (id)sub_1C1DF8D44(v32, v33, v89);
      sub_1C1EAF2C8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 22) = 2050;
      os_log_t v34 = *(void **)(a3 + 16);
      swift_bridgeObjectRelease();
      id v88 = v34;
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      os_log_t v35 = v80;
      _os_log_impl(&dword_1C1DD2000, v80, (os_log_type_t)v79, "[%{public}s][%{public}s] Finished committing %{public}ld change(s). Attempting to save.", (uint8_t *)v28, 0x20u);
      uint64_t v36 = v81;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v36, -1, -1);
      uint64_t v37 = v28;
      uint64_t v22 = v82;
      MEMORY[0x1C874D2E0](v37, -1, -1);

      uint64_t v38 = v31;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      uint64_t v38 = v86;
    }
    uint64_t v39 = *(void (**)(unsigned char *, uint64_t))(v38 + 8);
    v39(v18, v87);
    id v88 = 0;
    if ([v22 save:&v88])
    {
      id v40 = v88;
      sub_1C1EAE4F8();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v41 = sub_1C1EAE558();
      os_log_type_t v42 = sub_1C1EAF0A8();
      int v43 = v42;
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v44 = swift_slowAlloc();
        LODWORD(v84) = v43;
        uint64_t v45 = v44;
        uint64_t v83 = (void **)swift_slowAlloc();
        v89[0] = (uint64_t)v83;
        *(_DWORD *)uint64_t v45 = 136446722;
        id v88 = v85;
        swift_getMetatypeMetadata();
        uint64_t v46 = sub_1C1EAED68();
        id v88 = (id)sub_1C1DF8D44(v46, v47, v89);
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 12) = 2082;
        uint64_t v85 = v39;
        __swift_project_boxed_opaque_existential_1((void *)(v23 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo), *(void *)(v23 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24));
        uint64_t v48 = sub_1C1EAD5B8();
        id v88 = (id)sub_1C1DF8D44(v48, v49, v89);
        sub_1C1EAF2C8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 22) = 2050;
        uint64_t v50 = *(void **)(a3 + 16);
        swift_bridgeObjectRelease();
        id v88 = v50;
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1DD2000, v41, (os_log_type_t)v84, "[%{public}s][%{public}s] Successfully saved %{public}ld changes.", (uint8_t *)v45, 0x20u);
        uint64_t v51 = v83;
        swift_arrayDestroy();
        MEMORY[0x1C874D2E0](v51, -1, -1);
        MEMORY[0x1C874D2E0](v45, -1, -1);

        ((void (*)(unsigned char *, uint64_t))v85)(v16, v87);
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
        v39(v16, v87);
      }
    }
    else
    {
      id v52 = v88;
      os_log_type_t v53 = (void *)sub_1C1EAD198();

      swift_willThrow();
      uint64_t v54 = v84;
      sub_1C1EAE4F8();
      swift_retain_n();
      swift_bridgeObjectRetain();
      id v55 = v53;
      swift_retain();
      swift_bridgeObjectRetain();
      id v56 = v53;
      uint64_t v57 = sub_1C1EAE558();
      os_log_type_t v58 = sub_1C1EAF0B8();
      int v59 = v58;
      uint64_t v82 = v57;
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v60 = swift_slowAlloc();
        uint64_t v81 = swift_slowAlloc();
        v89[0] = v81;
        *(_DWORD *)uint64_t v60 = 136447234;
        LODWORD(v80) = v59;
        id v88 = v85;
        swift_getMetatypeMetadata();
        uint64_t v61 = sub_1C1EAED68();
        id v88 = (id)sub_1C1DF8D44(v61, v62, v89);
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 12) = 2082;
        uint64_t v63 = (void *)(v23 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo);
        __swift_project_boxed_opaque_existential_1(v63, v63[3]);
        uint64_t v64 = sub_1C1EAD5B8();
        id v88 = (id)sub_1C1DF8D44(v64, v65, v89);
        sub_1C1EAF2C8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 22) = 2050;
        uint64_t v66 = *(void **)(a3 + 16);
        swift_bridgeObjectRelease();
        id v88 = v66;
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 32) = 2080;
        __swift_project_boxed_opaque_existential_1(v63, v63[3]);
        uint64_t v67 = sub_1C1EAD5B8();
        id v88 = (id)sub_1C1DF8D44(v67, v68, v89);
        sub_1C1EAF2C8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 42) = 2082;
        id v88 = v53;
        id v69 = v53;
        sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
        uint64_t v70 = sub_1C1EAED78();
        id v88 = (id)sub_1C1DF8D44(v70, v71, v89);
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();

        uint64_t v72 = v82;
        _os_log_impl(&dword_1C1DD2000, v82, (os_log_type_t)v80, "[%{public}s][%{public}s] Error saving %{public}ld changes from plugin %s: %{public}s", (uint8_t *)v60, 0x34u);
        uint64_t v73 = v81;
        swift_arrayDestroy();
        MEMORY[0x1C874D2E0](v73, -1, -1);
        MEMORY[0x1C874D2E0](v60, -1, -1);

        (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v84, v87);
      }
      else
      {
        swift_release_n();
        swift_bridgeObjectRelease_n();

        v39(v54, v87);
      }
      uint64_t v74 = sub_1C1EADF58();
      sub_1C1E5383C(&qword_1EA2C1418, MEMORY[0x1E4F67448]);
      uint64_t v75 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v74 - 8) + 104))(v76, *MEMORY[0x1E4F67440], v74);

      unint64_t v77 = *v83;
      *uint64_t v83 = (void *)v75;
    }
  }
}

uint64_t sub_1C1E50640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v370 = *v2;
  uint64_t v390 = sub_1C1EAD748();
  uint64_t v5 = *(void *)(v390 - 8);
  MEMORY[0x1F4188790](v390);
  v402 = (char *)&v339 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v366 = sub_1C1EADD48();
  uint64_t v403 = *(void *)(v366 - 8);
  MEMORY[0x1F4188790](v366);
  v365 = (char *)&v339 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ExecuteChangesResult(0);
  MEMORY[0x1F4188790](v8);
  v356 = (char *)&v339 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v386 = sub_1C1EAD668();
  uint64_t v10 = *(void *)(v386 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v386);
  v385 = (char *)&v339 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v384 = (uint64_t)&v339 - v13;
  uint64_t v401 = sub_1C1EAD898();
  uint64_t v14 = *(void *)(v401 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v401);
  v392 = (char *)&v339 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v404 = (char *)&v339 - v18;
  MEMORY[0x1F4188790](v17);
  v388 = (char *)&v339 - v19;
  uint64_t v376 = sub_1C1EAE568();
  uint64_t v20 = *(void *)(v376 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v376);
  v353 = (char *)&v339 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  v352 = (char *)&v339 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v364 = (char *)&v339 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  v363 = (char *)&v339 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  v362 = (char *)&v339 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  v374 = (char *)&v339 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  v361 = (char *)&v339 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  v359 = (char *)&v339 - v36;
  MEMORY[0x1F4188790](v35);
  v360 = (char *)&v339 - v37;
  unint64_t v38 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C1EADCC8();
  uint64_t v355 = v8;
  id v40 = (unint64_t *)(a2 + *(int *)(v8 + 20));
  uint64_t v396 = a2;
  v397 = v40;
  *id v40 = v38;
  uint64_t v371 = *(void *)(a1 + 16);
  if (v371)
  {
    v398 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo);
    uint64_t v367 = OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_storageContext;
    v389 = (char *)v2 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_feedItemStorage;
    uint64_t v372 = a1 + 32;
    v375 = (NSObject **)(v20 + 8);
    v358 = (void (**)(char *, uint64_t))(v403 + 8);
    v369 = &v407;
    uint64_t v383 = v5 + 16;
    v382 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v403 = v14 + 16;
    v399 = (void (**)(char *, uint64_t))(v14 + 8);
    v379 = (void (**)(uint64_t, uint64_t))(v10 + 8);
    uint64_t v354 = v14;
    v373 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v347 = a1;
    swift_bridgeObjectRetain();
    uint64_t v41 = 0;
    *(void *)&long long v42 = 136446722;
    long long v368 = v42;
    uint64_t v344 = MEMORY[0x1E4FBC840] + 8;
    unint64_t v351 = 0x80000001C1EB4620;
    long long v357 = xmmword_1C1EB0800;
    *((void *)&v42 + 1) = 8;
    long long v350 = xmmword_1C1EB1830;
    unint64_t v349 = 0x80000001C1EB32E0;
    unint64_t v348 = 0x80000001C1EB45E0;
    *(void *)&long long v42 = 136446978;
    long long v341 = v42;
    *(void *)&long long v42 = 136446466;
    long long v346 = v42;
    long long v343 = xmmword_1C1EB07F0;
    unint64_t v342 = 0x80000001C1EB4600;
    v377 = v2;
    uint64_t v345 = v5;
    int v43 = v404;
    uint64_t v44 = v374;
    uint64_t v45 = v2;
LABEL_6:
    uint64_t v49 = v372 + 40 * v41;
    uint64_t v50 = *(void *)(v49 + 8);
    uint64_t v400 = *(void *)v49;
    uint64_t v51 = *(void *)(v49 + 16);
    uint64_t v52 = *(void *)(v49 + 24);
    unsigned int v53 = *(unsigned __int8 *)(v49 + 32);
    uint64_t v387 = v41 + 1;
    switch(v53 >> 5)
    {
      case 1u:
        uint64_t v80 = v400;
        sub_1C1E542F8(v400, v50, v51, v52, v53);
        swift_bridgeObjectRetain();
        uint64_t v81 = v361;
        sub_1C1EAE4F8();
        sub_1C1E542F8(v80, v50, v51, v52, v53);
        swift_retain();
        v393 = (void *)v50;
        v394 = (void *)v51;
        v395 = (void *)v52;
        sub_1C1E542F8(v80, v50, v51, v52, v53);
        swift_retain();
        unsigned int v391 = v53;
        uint64_t v82 = sub_1C1EAE558();
        os_log_type_t v83 = sub_1C1EAF0D8();
        int v84 = v83;
        v381 = v82;
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v85 = swift_slowAlloc();
          v380 = swift_slowAlloc();
          id v408 = v380;
          *(_DWORD *)uint64_t v85 = v368;
          LODWORD(v378) = v84;
          uint64_t v406 = v370;
          swift_getMetatypeMetadata();
          uint64_t v86 = sub_1C1EAED68();
          uint64_t v406 = sub_1C1DF8D44(v86, v87, (uint64_t *)&v408);
          sub_1C1EAF2C8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v85 + 12) = 2082;
          __swift_project_boxed_opaque_existential_1(v398, v398[3]);
          uint64_t v88 = sub_1C1EAD5B8();
          uint64_t v406 = sub_1C1DF8D44(v88, v89, (uint64_t *)&v408);
          sub_1C1EAF2C8();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v85 + 22) = 2080;
          v340 = (void *)(v85 + 24);
          uint64_t v90 = v400;
          uint64_t v91 = swift_bridgeObjectRetain();
          uint64_t v92 = MEMORY[0x1C874C0C0](v91, MEMORY[0x1E4FBB1A0]);
          unint64_t v94 = v93;
          uint64_t v95 = (uint64_t)v393;
          uint64_t v96 = (uint64_t)v394;
          uint64_t v97 = (uint64_t)v395;
          unsigned __int8 v98 = v391;
          sub_1C1E5441C(v90, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
          uint64_t v406 = sub_1C1DF8D44(v92, v94, (uint64_t *)&v408);
          sub_1C1EAF2C8();
          swift_bridgeObjectRelease();
          sub_1C1E5441C(v90, v95, v96, v97, v98);
          sub_1C1E5441C(v90, v95, v96, v97, v98);
          unint64_t v99 = v381;
          _os_log_impl(&dword_1C1DD2000, v381, (os_log_type_t)v378, "[%{public}s][%{public}s] delete uniqueIdentifiers: %s", (uint8_t *)v85, 0x20u);
          uint64_t v100 = v380;
          swift_arrayDestroy();
          MEMORY[0x1C874D2E0](v100, -1, -1);
          MEMORY[0x1C874D2E0](v85, -1, -1);

          uint64_t v101 = v398;
          ((void (*)(char *, uint64_t))*v375)(v361, v376);
        }
        else
        {
          swift_release_n();
          uint64_t v181 = v400;
          uint64_t v183 = (uint64_t)v393;
          uint64_t v182 = (uint64_t)v394;
          uint64_t v184 = (uint64_t)v395;
          unsigned __int8 v185 = v391;
          sub_1C1E5441C(v400, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
          sub_1C1E5441C(v181, v183, v182, v184, v185);

          ((void (*)(char *, uint64_t))*v375)(v81, v376);
          uint64_t v101 = v398;
        }
        sub_1C1DFCCCC();
        uint64_t v406 = 0;
        unint64_t v407 = 0xE000000000000000;
        sub_1C1EAF4A8();
        swift_bridgeObjectRelease();
        uint64_t v406 = 0xD000000000000017;
        unint64_t v407 = v351;
        sub_1C1EAE348();
        sub_1C1EAE308();
        sub_1C1EAEDB8();
        swift_bridgeObjectRelease();
        sub_1C1EAEDB8();
        sub_1C1DF32F0();
        uint64_t v186 = swift_allocObject();
        *(_OWORD *)(v186 + 16) = v357;
        __swift_project_boxed_opaque_existential_1(v101, v101[3]);
        uint64_t v187 = sub_1C1EAD5B8();
        uint64_t v189 = v188;
        *(void *)(v186 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v186 + 64) = sub_1C1DF2A98();
        *(void *)(v186 + 32) = v187;
        *(void *)(v186 + 40) = v189;
        sub_1C1E299A4();
        *(void *)(v186 + 96) = v190;
        *(void *)(v186 + 104) = sub_1C1E5383C((unint64_t *)&qword_1EBB68230, (void (*)(uint64_t))sub_1C1E299A4);
        uint64_t v191 = v400;
        *(void *)(v186 + 72) = v400;
        unint64_t v192 = (void *)sub_1C1EAF018();
        swift_bridgeObjectRelease();
        os_log_t v193 = v365;
        sub_1C1EADE68();
        sub_1C1EADD18();

        sub_1C1E5441C(v191, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
        (*v358)(v193, v366);
        goto LABEL_41;
      case 2u:
        unint64_t v102 = (void *)v50;
        uint64_t v103 = v400;
        uint64_t v104 = (void *)v51;
        sub_1C1E542F8(v400, (uint64_t)v102, v51, v52, v53);
        swift_bridgeObjectRetain();
        unsigned int v105 = v53;
        id v106 = v362;
        sub_1C1EAE4F8();
        sub_1C1E542F8(v103, (uint64_t)v102, v51, v52, v105);
        swift_retain();
        sub_1C1E542F8(v103, (uint64_t)v102, v51, v52, v105);
        swift_retain();
        uint64_t v107 = sub_1C1EAE558();
        os_log_type_t v108 = sub_1C1EAF0D8();
        int v109 = v108;
        BOOL v110 = os_log_type_enabled(v107, v108);
        unsigned int v391 = v105;
        v394 = v104;
        v395 = (void *)v52;
        v393 = v102;
        if (v110)
        {
          uint64_t v111 = swift_slowAlloc();
          v381 = v107;
          uint64_t v112 = v111;
          os_log_t v113 = (void *)swift_slowAlloc();
          id v408 = v113;
          *(_DWORD *)uint64_t v112 = v368;
          uint64_t v406 = v370;
          swift_getMetatypeMetadata();
          uint64_t v114 = sub_1C1EAED68();
          *(void *)(v112 + 4) = sub_1C1DF8D44(v114, v115, (uint64_t *)&v408);
          swift_bridgeObjectRelease();
          *(_WORD *)(v112 + 12) = 2082;
          LODWORD(v380) = v109;
          __swift_project_boxed_opaque_existential_1(v398, v398[3]);
          uint64_t v116 = sub_1C1EAD5B8();
          *(void *)(v112 + 14) = sub_1C1DF8D44(v116, v117, (uint64_t *)&v408);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v112 + 22) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v118 = MEMORY[0x1C874C0C0](v400, v390);
          unint64_t v120 = v119;
          sub_1C1E5441C(v400, (uint64_t)v102, (uint64_t)v104, v52, v105);
          *(void *)(v112 + 24) = sub_1C1DF8D44(v118, v120, (uint64_t *)&v408);
          swift_bridgeObjectRelease();
          sub_1C1E5441C(v400, (uint64_t)v102, (uint64_t)v104, v52, v105);
          sub_1C1E5441C(v400, (uint64_t)v102, (uint64_t)v104, v52, v105);
          uint64_t v121 = v381;
          _os_log_impl(&dword_1C1DD2000, v381, (os_log_type_t)v380, "[%{public}s][%{public}s] updateOrCreate plugin data %s", (uint8_t *)v112, 0x20u);
          swift_arrayDestroy();
          id v122 = v113;
          uint64_t v103 = v400;
          uint64_t v45 = v377;
          MEMORY[0x1C874D2E0](v122, -1, -1);
          MEMORY[0x1C874D2E0](v112, -1, -1);

          ((void (*)(char *, uint64_t))*v375)(v362, v376);
        }
        else
        {
          swift_release_n();
          sub_1C1E5441C(v103, (uint64_t)v102, (uint64_t)v104, v52, v105);
          sub_1C1E5441C(v103, (uint64_t)v102, (uint64_t)v104, v52, v105);

          ((void (*)(char *, uint64_t))*v375)(v106, v376);
        }
        uint64_t v194 = *(void *)(v103 + 16);
        uint64_t v195 = v390;
        id v196 = v402;
        if (!v194)
        {
          uint64_t v276 = (uint64_t)v393;
          uint64_t v275 = (uint64_t)v394;
          uint64_t v277 = (uint64_t)v395;
          unsigned __int8 v278 = v391;
          sub_1C1E5441C(v103, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
          sub_1C1E5441C(v103, v276, v275, v277, v278);
          goto LABEL_59;
        }
        v381 = sub_1C1EAD5A8();
        unint64_t v197 = v103 + ((*(unsigned __int8 *)(v345 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v345 + 80));
        uint64_t v378 = *(void *)(v345 + 72);
        v380 = *(NSObject **)(v345 + 16);
        swift_bridgeObjectRetain();
        uint64_t v198 = v398;
        break;
      case 3u:
        uint64_t v123 = v400;
        sub_1C1E542F8(v400, v50, v51, v52, v53);
        swift_bridgeObjectRetain();
        unsigned int v124 = v53;
        os_log_t v125 = v363;
        sub_1C1EAE4F8();
        sub_1C1E542F8(v123, v50, v51, v52, v124);
        swift_retain();
        v393 = (void *)v50;
        v394 = (void *)v51;
        v395 = (void *)v52;
        unsigned int v391 = v124;
        sub_1C1E542F8(v123, v50, v51, v52, v124);
        swift_retain();
        uint64_t v126 = sub_1C1EAE558();
        os_log_type_t v127 = sub_1C1EAF0D8();
        int v128 = v127;
        v381 = v126;
        if (os_log_type_enabled(v126, v127))
        {
          uint64_t v129 = swift_slowAlloc();
          v380 = swift_slowAlloc();
          id v408 = v380;
          *(_DWORD *)uint64_t v129 = v368;
          uint64_t v406 = v370;
          swift_getMetatypeMetadata();
          uint64_t v130 = sub_1C1EAED68();
          LODWORD(v378) = v128;
          uint64_t v406 = sub_1C1DF8D44(v130, v131, (uint64_t *)&v408);
          sub_1C1EAF2C8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v129 + 12) = 2082;
          __swift_project_boxed_opaque_existential_1(v398, v398[3]);
          uint64_t v132 = sub_1C1EAD5B8();
          uint64_t v406 = sub_1C1DF8D44(v132, v133, (uint64_t *)&v408);
          sub_1C1EAF2C8();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v129 + 22) = 2080;
          v340 = (void *)(v129 + 24);
          uint64_t v134 = swift_bridgeObjectRetain();
          uint64_t v135 = MEMORY[0x1C874C0C0](v134, MEMORY[0x1E4FBB1A0]);
          unint64_t v137 = v136;
          uint64_t v138 = (uint64_t)v393;
          uint64_t v139 = (uint64_t)v394;
          uint64_t v140 = (uint64_t)v395;
          unsigned __int8 v141 = v391;
          sub_1C1E5441C(v123, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
          uint64_t v406 = sub_1C1DF8D44(v135, v137, (uint64_t *)&v408);
          sub_1C1EAF2C8();
          swift_bridgeObjectRelease();
          sub_1C1E5441C(v123, v138, v139, v140, v141);
          sub_1C1E5441C(v123, v138, v139, v140, v141);
          id v142 = v381;
          _os_log_impl(&dword_1C1DD2000, v381, (os_log_type_t)v378, "[%{public}s][%{public}s] Attempting to delete plugin data with uniqueIdentifiers: %s", (uint8_t *)v129, 0x20u);
          id v143 = v380;
          swift_arrayDestroy();
          MEMORY[0x1C874D2E0](v143, -1, -1);
          MEMORY[0x1C874D2E0](v129, -1, -1);

          v381 = *v375;
          ((void (*)(char *, uint64_t))v381)(v363, v376);
          uint64_t v45 = v377;
        }
        else
        {
          swift_release_n();
          uint64_t v216 = (uint64_t)v393;
          uint64_t v215 = (uint64_t)v394;
          uint64_t v217 = (uint64_t)v395;
          unsigned __int8 v218 = v391;
          sub_1C1E5441C(v123, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
          sub_1C1E5441C(v123, v216, v215, v217, v218);

          v381 = *v375;
          ((void (*)(char *, uint64_t))v381)(v125, v376);
        }
        uint64_t v219 = v123;
        sub_1C1DFCCCC();
        sub_1C1DF32F0();
        uint64_t v220 = swift_allocObject();
        *(_OWORD *)(v220 + 16) = v350;
        uint64_t v221 = MEMORY[0x1E4FBB1A0];
        *(void *)(v220 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v222 = sub_1C1DF2A98();
        *(void *)(v220 + 64) = v222;
        strcpy((char *)(v220 + 32), "plugin.package");
        *(unsigned char *)(v220 + 47) = -18;
        __swift_project_boxed_opaque_existential_1(v398, v398[3]);
        uint64_t v223 = sub_1C1EAD5B8();
        *(void *)(v220 + 96) = v221;
        *(void *)(v220 + 104) = v222;
        *(void *)(v220 + 72) = v223;
        *(void *)(v220 + 80) = v224;
        *(void *)(v220 + 136) = v221;
        *(void *)(v220 + 144) = v222;
        unint64_t v225 = v349;
        *(void *)(v220 + 112) = 0xD000000000000010;
        *(void *)(v220 + 120) = v225;
        sub_1C1E299A4();
        *(void *)(v220 + 176) = v226;
        *(void *)(v220 + 184) = sub_1C1E5383C((unint64_t *)&qword_1EBB68230, (void (*)(uint64_t))sub_1C1E299A4);
        *(void *)(v220 + 152) = v219;
        swift_bridgeObjectRetain();
        v227 = sub_1C1EAF018();
        sub_1C1EAD5A8();
        sub_1C1EAF228();
        v228 = v364;
        sub_1C1EAE4F8();
        swift_retain();
        sub_1C1E542F8(v219, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
        swift_retain();
        uint64_t v229 = sub_1C1EAE558();
        os_log_type_t v230 = sub_1C1EAF0D8();
        int v231 = v230;
        if (os_log_type_enabled(v229, v230))
        {
          uint64_t v232 = swift_slowAlloc();
          LODWORD(v340) = v231;
          uint64_t v233 = v219;
          uint64_t v234 = v232;
          uint64_t v378 = swift_slowAlloc();
          id v408 = (id)v378;
          *(_DWORD *)uint64_t v234 = v368;
          uint64_t v406 = v370;
          swift_getMetatypeMetadata();
          uint64_t v235 = sub_1C1EAED68();
          uint64_t v406 = sub_1C1DF8D44(v235, v236, (uint64_t *)&v408);
          v380 = v227;
          sub_1C1EAF2C8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v234 + 12) = 2082;
          __swift_project_boxed_opaque_existential_1(v398, v398[3]);
          uint64_t v237 = sub_1C1EAD5B8();
          uint64_t v406 = sub_1C1DF8D44(v237, v238, (uint64_t *)&v408);
          sub_1C1EAF2C8();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v234 + 22) = 2080;
          uint64_t v239 = swift_bridgeObjectRetain();
          uint64_t v240 = v233;
          uint64_t v241 = MEMORY[0x1C874C0C0](v239, MEMORY[0x1E4FBB1A0]);
          unint64_t v243 = v242;
          uint64_t v244 = v233;
          uint64_t v245 = (uint64_t)v393;
          uint64_t v246 = (uint64_t)v394;
          os_log_t v339 = v229;
          uint64_t v247 = (uint64_t)v395;
          unsigned __int8 v248 = v391;
          sub_1C1E5441C(v244, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
          uint64_t v406 = sub_1C1DF8D44(v241, v243, (uint64_t *)&v408);
          sub_1C1EAF2C8();
          swift_bridgeObjectRelease();
          sub_1C1E5441C(v240, v245, v246, v247, v248);
          sub_1C1E5441C(v240, v245, v246, v247, v248);
          os_log_t v249 = v339;
          _os_log_impl(&dword_1C1DD2000, v339, (os_log_type_t)v340, "[%{public}s][%{public}s] Successfully deleted all plugin data with uniqueIdentifiers: %s", (uint8_t *)v234, 0x20u);
          uint64_t v250 = v378;
          swift_arrayDestroy();
          MEMORY[0x1C874D2E0](v250, -1, -1);
          uint64_t v45 = v377;
          MEMORY[0x1C874D2E0](v234, -1, -1);

          sub_1C1E5441C(v240, v245, v246, v247, v248);
          v251 = v364;
        }
        else
        {
          swift_release_n();

          uint64_t v267 = (uint64_t)v393;
          uint64_t v266 = (uint64_t)v394;
          uint64_t v268 = (uint64_t)v395;
          unsigned __int8 v269 = v391;
          sub_1C1E5441C(v219, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
          sub_1C1E5441C(v219, v267, v266, v268, v269);

          sub_1C1E5441C(v219, v267, v266, v268, v269);
          v251 = v228;
        }
        ((void (*)(char *, uint64_t))v381)(v251, v376);
        goto LABEL_59;
      case 4u:
        uint64_t v144 = v400;
        unsigned int v391 = v53;
        sub_1C1E542F8(v400, v50, v51, v52, v53);
        swift_bridgeObjectRetain();
        sub_1C1E543A4((id)v50, (void *)v51, (void *)v52, v53 & 0x1F);
        v393 = (void *)v50;
        id v145 = (void *)v50;
        uint64_t v146 = v144;
        uint64_t v45 = v377;
        v394 = (void *)v51;
        v395 = (void *)v52;
        LODWORD(v381) = v53 & 0x1F;
        sub_1C1E89A38(v145, (void *)v51, (void *)v52, (int)v381);
        id v147 = v405;
        uint64_t v148 = sub_1C1EAEEC8();
        if (!v147)
        {
          uint64_t v149 = v148;
          swift_bridgeObjectRelease();
          os_log_type_t v150 = v359;
          sub_1C1EAE4F8();
          swift_retain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          int v151 = sub_1C1EAE558();
          os_log_type_t v152 = sub_1C1EAF0D8();
          int v153 = v152;
          if (os_log_type_enabled(v151, v152))
          {
            uint64_t v154 = swift_slowAlloc();
            v405 = (void *)swift_slowAlloc();
            id v408 = v405;
            *(_DWORD *)uint64_t v154 = v341;
            v380 = v151;
            uint64_t v406 = v370;
            swift_getMetatypeMetadata();
            uint64_t v155 = sub_1C1EAED68();
            LODWORD(v378) = v153;
            uint64_t v406 = sub_1C1DF8D44(v155, v156, (uint64_t *)&v408);
            sub_1C1EAF2C8();
            swift_bridgeObjectRelease();
            *(_WORD *)(v154 + 12) = 2082;
            __swift_project_boxed_opaque_existential_1(v398, v398[3]);
            uint64_t v157 = sub_1C1EAD5B8();
            uint64_t v406 = sub_1C1DF8D44(v157, v158, (uint64_t *)&v408);
            sub_1C1EAF2C8();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v154 + 22) = 2048;
            uint64_t v159 = *(void *)(v400 + 16);
            swift_bridgeObjectRelease();
            uint64_t v406 = v159;
            sub_1C1EAF2C8();
            swift_bridgeObjectRelease();
            *(_WORD *)(v154 + 32) = 2080;
            uint64_t v160 = swift_bridgeObjectRetain();
            uint64_t v161 = MEMORY[0x1C874C0C0](v160, MEMORY[0x1E4F67380]);
            unint64_t v163 = v162;
            swift_bridgeObjectRelease();
            uint64_t v406 = sub_1C1DF8D44(v161, v163, (uint64_t *)&v408);
            uint64_t v41 = v387;
            sub_1C1EAF2C8();
            swift_bridgeObjectRelease_n();
            int v43 = v404;
            swift_bridgeObjectRelease();
            uint64_t v164 = v380;
            _os_log_impl(&dword_1C1DD2000, v380, (os_log_type_t)v378, "[%{public}s][%{public}s] computed changes for %ld desired: %s", (uint8_t *)v154, 0x2Au);
            uint64_t v165 = v405;
            swift_arrayDestroy();
            MEMORY[0x1C874D2E0](v165, -1, -1);
            uint64_t v166 = v154;
            uint64_t v146 = v400;
            uint64_t v45 = v377;
            MEMORY[0x1C874D2E0](v166, -1, -1);

            ((void (*)(char *, uint64_t))*v375)(v359, v376);
            id v167 = v356;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            ((void (*)(char *, uint64_t))*v375)(v150, v376);
            id v167 = v356;
            uint64_t v41 = v387;
          }
          uint64_t v270 = (uint64_t)v167;
          sub_1C1E50640(v149);
          v405 = 0;
          swift_bridgeObjectRelease();
          sub_1C1EADD18();
          uint64_t v271 = swift_bridgeObjectRetain();
          sub_1C1E58918(v271);
          uint64_t v273 = (uint64_t)v393;
          uint64_t v272 = (uint64_t)v394;
          uint64_t v274 = (uint64_t)v395;
          sub_1C1E544C8(v393, v394, v395, (char)v381);
          sub_1C1E5441C(v146, v273, v272, v274, v391);
          sub_1C1E537E0(v270);
          uint64_t v44 = v374;
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v337 = (uint64_t)v393;
        uint64_t v336 = (uint64_t)v394;
        uint64_t v338 = (uint64_t)v395;
        sub_1C1E544C8(v393, v394, v395, (char)v381);
        swift_bridgeObjectRelease();
        sub_1C1E5441C(v146, v337, v336, v338, v391);
        return sub_1C1E537E0(v396);
      case 5u:
        if (v51 | v50 | v400 | v52 || v53 != 160)
        {
          v252 = v352;
          sub_1C1EAE4F8();
          swift_retain_n();
          v253 = sub_1C1EAE558();
          os_log_type_t v254 = sub_1C1EAF0D8();
          if (os_log_type_enabled(v253, v254))
          {
            uint64_t v255 = swift_slowAlloc();
            v256 = (void *)swift_slowAlloc();
            id v408 = v256;
            *(_DWORD *)uint64_t v255 = v346;
            uint64_t v406 = v370;
            swift_getMetatypeMetadata();
            uint64_t v257 = sub_1C1EAED68();
            *(void *)(v255 + 4) = sub_1C1DF8D44(v257, v258, (uint64_t *)&v408);
            swift_bridgeObjectRelease();
            *(_WORD *)(v255 + 12) = 2082;
            v259 = v398;
            __swift_project_boxed_opaque_existential_1(v398, v398[3]);
            v260 = v377;
            uint64_t v261 = sub_1C1EAD5B8();
            *(void *)(v255 + 14) = sub_1C1DF8D44(v261, v262, (uint64_t *)&v408);
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C1DD2000, v253, v254, "[%{public}s][%{public}s] Attempting to delete all plugin data.", (uint8_t *)v255, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C874D2E0](v256, -1, -1);
            MEMORY[0x1C874D2E0](v255, -1, -1);

            v263 = v252;
            v264 = v259;
            uint64_t v400 = (uint64_t)*v375;
            ((void (*)(char *, uint64_t))v400)(v263, v376);
            uint64_t v265 = MEMORY[0x1E4FBB1A0];
          }
          else
          {

            swift_release_n();
            uint64_t v400 = (uint64_t)*v375;
            ((void (*)(char *, uint64_t))v400)(v252, v376);
            v264 = v398;
            uint64_t v265 = MEMORY[0x1E4FBB1A0];
            v260 = v45;
          }
          sub_1C1DFCCCC();
          sub_1C1DF32F0();
          uint64_t v286 = swift_allocObject();
          *(_OWORD *)(v286 + 16) = v357;
          *(void *)(v286 + 56) = v265;
          unint64_t v287 = sub_1C1DF2A98();
          *(void *)(v286 + 64) = v287;
          strcpy((char *)(v286 + 32), "plugin.package");
          *(unsigned char *)(v286 + 47) = -18;
          __swift_project_boxed_opaque_existential_1(v264, v264[3]);
          uint64_t v288 = sub_1C1EAD5B8();
          *(void *)(v286 + 96) = v265;
          *(void *)(v286 + 104) = v287;
          *(void *)(v286 + 72) = v288;
          *(void *)(v286 + 80) = v289;
          v290 = (void *)sub_1C1EAF018();
          sub_1C1EAD5A8();
          sub_1C1EAF228();
          v291 = v264;
          v292 = v353;
          sub_1C1EAE4F8();
          swift_retain_n();
          v293 = sub_1C1EAE558();
          os_log_type_t v294 = sub_1C1EAF0D8();
          if (os_log_type_enabled(v293, v294))
          {
            uint64_t v295 = swift_slowAlloc();
            v296 = (void *)swift_slowAlloc();
            id v408 = v296;
            *(_DWORD *)uint64_t v295 = v346;
            uint64_t v406 = v370;
            swift_getMetatypeMetadata();
            uint64_t v297 = sub_1C1EAED68();
            *(void *)(v295 + 4) = sub_1C1DF8D44(v297, v298, (uint64_t *)&v408);
            swift_bridgeObjectRelease();
            *(_WORD *)(v295 + 12) = 2082;
            __swift_project_boxed_opaque_existential_1(v291, v291[3]);
            uint64_t v299 = sub_1C1EAD5B8();
            *(void *)(v295 + 14) = sub_1C1DF8D44(v299, v300, (uint64_t *)&v408);
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C1DD2000, v293, v294, "[%{public}s][%{public}s] Successfully deleted all plugin data.", (uint8_t *)v295, 0x16u);
            swift_arrayDestroy();
            uint64_t v45 = v377;
            MEMORY[0x1C874D2E0](v296, -1, -1);
            MEMORY[0x1C874D2E0](v295, -1, -1);

            v301 = v353;
          }
          else
          {
            uint64_t v45 = v260;

            swift_release_n();
            v301 = v292;
          }
          ((void (*)(char *, uint64_t))v400)(v301, v376);
        }
        else
        {
          sub_1C1EAE4F8();
          swift_retain_n();
          id v168 = sub_1C1EAE558();
          os_log_type_t v169 = sub_1C1EAF0D8();
          if (os_log_type_enabled(v168, v169))
          {
            uint64_t v170 = swift_slowAlloc();
            uint64_t v400 = swift_slowAlloc();
            id v408 = (id)v400;
            *(_DWORD *)uint64_t v170 = v346;
            uint64_t v406 = v370;
            swift_getMetatypeMetadata();
            uint64_t v171 = sub_1C1EAED68();
            *(void *)(v170 + 4) = sub_1C1DF8D44(v171, v172, (uint64_t *)&v408);
            swift_bridgeObjectRelease();
            *(_WORD *)(v170 + 12) = 2082;
            id v173 = v398;
            __swift_project_boxed_opaque_existential_1(v398, v398[3]);
            uint64_t v45 = v377;
            uint64_t v174 = sub_1C1EAD5B8();
            *(void *)(v170 + 14) = sub_1C1DF8D44(v174, v175, (uint64_t *)&v408);
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C1DD2000, v168, v169, "[%{public}s][%{public}s] deleteAllFeedItems from plugin", (uint8_t *)v170, 0x16u);
            uint64_t v176 = v400;
            swift_arrayDestroy();
            MEMORY[0x1C874D2E0](v176, -1, -1);
            MEMORY[0x1C874D2E0](v170, -1, -1);

            uint64_t v177 = v44;
            unint64_t v178 = v173;
            ((void (*)(char *, uint64_t))*v375)(v177, v376);
          }
          else
          {

            swift_release_n();
            ((void (*)(char *, uint64_t))*v375)(v44, v376);
            unint64_t v178 = v398;
          }
          sub_1C1DFCCCC();
          sub_1C1DF32F0();
          uint64_t v280 = swift_allocObject();
          *(_OWORD *)(v280 + 16) = v343;
          __swift_project_boxed_opaque_existential_1(v178, v178[3]);
          uint64_t v281 = sub_1C1EAD5B8();
          uint64_t v283 = v282;
          *(void *)(v280 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v280 + 64) = sub_1C1DF2A98();
          *(void *)(v280 + 32) = v281;
          *(void *)(v280 + 40) = v283;
          v284 = (void *)sub_1C1EAF018();
          v285 = v365;
          sub_1C1EADE68();
          sub_1C1EADD18();

          (*v358)(v285, v366);
        }
        goto LABEL_59;
      default:
        uint64_t v54 = v400;
        id v55 = (void *)v51;
        sub_1C1E542F8(v400, v50, v51, v52, v53);
        swift_bridgeObjectRetain();
        id v56 = v360;
        sub_1C1EAE4F8();
        sub_1C1E542F8(v54, v50, (uint64_t)v55, v52, v53);
        swift_retain();
        sub_1C1E542F8(v54, v50, (uint64_t)v55, v52, v53);
        swift_retain();
        unsigned int v57 = v53;
        os_log_type_t v58 = sub_1C1EAE558();
        LODWORD(v381) = sub_1C1EAF0D8();
        BOOL v59 = os_log_type_enabled(v58, (os_log_type_t)v381);
        unsigned int v391 = v57;
        v394 = v55;
        v395 = (void *)v52;
        v393 = (void *)v50;
        if (v59)
        {
          v380 = v58;
          uint64_t v60 = swift_slowAlloc();
          uint64_t v61 = (void *)swift_slowAlloc();
          id v408 = v61;
          *(_DWORD *)uint64_t v60 = v368;
          uint64_t v406 = v370;
          swift_getMetatypeMetadata();
          uint64_t v62 = sub_1C1EAED68();
          *(void *)(v60 + 4) = sub_1C1DF8D44(v62, v63, (uint64_t *)&v408);
          swift_bridgeObjectRelease();
          *(_WORD *)(v60 + 12) = 2082;
          __swift_project_boxed_opaque_existential_1(v398, v398[3]);
          uint64_t v64 = sub_1C1EAD5B8();
          *(void *)(v60 + 14) = sub_1C1DF8D44(v64, v65, (uint64_t *)&v408);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v60 + 22) = 2080;
          uint64_t v67 = v400;
          uint64_t v66 = v401;
          int64_t v68 = *(void *)(v400 + 16);
          if (v68)
          {
            v340 = v61;
            uint64_t v378 = v60;
            uint64_t v406 = MEMORY[0x1E4FBC860];
            sub_1C1DE1100(0, v68, 0);
            unint64_t v69 = v67 + ((*(unsigned __int8 *)(v354 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v354 + 80));
            uint64_t v70 = *(void *)(v354 + 72);
            unint64_t v71 = *(void (**)(char *, unint64_t, uint64_t))(v354 + 16);
            do
            {
              uint64_t v72 = v388;
              v71(v388, v69, v66);
              uint64_t v73 = sub_1C1EAD878();
              uint64_t v75 = v74;
              (*v399)(v72, v66);
              uint64_t v76 = v406;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C1DE1100(0, *(void *)(v76 + 16) + 1, 1);
                uint64_t v76 = v406;
              }
              unint64_t v78 = *(void *)(v76 + 16);
              unint64_t v77 = *(void *)(v76 + 24);
              if (v78 >= v77 >> 1)
              {
                sub_1C1DE1100(v77 > 1, v78 + 1, 1);
                uint64_t v76 = v406;
              }
              *(void *)(v76 + 16) = v78 + 1;
              unint64_t v79 = v76 + 16 * v78;
              *(void *)(v79 + 32) = v73;
              *(void *)(v79 + 40) = v75;
              v69 += v70;
              --v68;
              uint64_t v66 = v401;
            }
            while (v68);
            uint64_t v67 = v400;
            uint64_t v60 = v378;
            os_log_type_t v279 = v381;
            uint64_t v61 = v340;
          }
          else
          {
            os_log_type_t v279 = v381;
          }
          uint64_t v302 = sub_1C1EAEED8();
          unint64_t v304 = v303;
          swift_bridgeObjectRelease();
          *(void *)(v60 + 24) = sub_1C1DF8D44(v302, v304, (uint64_t *)&v408);
          swift_bridgeObjectRelease();
          uint64_t v306 = (uint64_t)v393;
          uint64_t v305 = (uint64_t)v394;
          uint64_t v307 = (uint64_t)v395;
          unsigned __int8 v180 = v391;
          sub_1C1E5441C(v67, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
          sub_1C1E5441C(v67, v306, v305, v307, v180);
          v308 = v380;
          _os_log_impl(&dword_1C1DD2000, v380, v279, "[%{public}s][%{public}s] updateOrCreate feedItems with identifiers %s", (uint8_t *)v60, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1C874D2E0](v61, -1, -1);
          MEMORY[0x1C874D2E0](v60, -1, -1);

          ((void (*)(char *, uint64_t))*v375)(v360, v376);
          int v43 = v404;
        }
        else
        {
          swift_release_n();
          uint64_t v179 = v400;
          sub_1C1E5441C(v400, v50, (uint64_t)v55, v52, v57);
          sub_1C1E5441C(v179, v50, (uint64_t)v55, v52, v57);

          ((void (*)(char *, uint64_t))*v375)(v56, v376);
          unsigned __int8 v180 = v57;
          uint64_t v67 = v179;
          uint64_t v66 = v401;
        }
        uint64_t v309 = *(void *)(v67 + 16);
        if (!v309)
        {
          uint64_t v47 = (uint64_t)v393;
          uint64_t v46 = (uint64_t)v394;
          uint64_t v48 = (uint64_t)v395;
          sub_1C1E5441C(v67, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v180);
          sub_1C1E5441C(v67, v47, v46, v48, v180);
          uint64_t v44 = v374;
          uint64_t v41 = v387;
          uint64_t v45 = v377;
          goto LABEL_5;
        }
        unsigned __int8 v310 = v180;
        uint64_t v311 = v354;
        v381 = ((*(unsigned __int8 *)(v354 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v354 + 80));
        v312 = (char *)v381 + v67;
        sub_1C1E542F8(v67, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v310);
        uint64_t v313 = *(void *)(v311 + 72);
        v314 = *(void (**)(char *, char *, uint64_t))(v311 + 16);
        v314(v43, v312, v66);
        while (1)
        {
          v315 = v405;
          sub_1C1EADE88();
          v405 = v315;
          if (v315) {
            break;
          }
          v316 = v385;
          sub_1C1EAD858();
          v317 = (void (*)(uint64_t *, void))sub_1C1EADCD8();
          uint64_t v318 = v384;
          sub_1C1DFA800(v384, v316);
          v317(&v406, 0);
          uint64_t v319 = v318;
          uint64_t v66 = v401;
          (*v379)(v319, v386);
          v320 = (void *)sub_1C1EAD868();
          v321 = (void (*)(uint64_t *, void))sub_1C1EADCF8();
          sub_1C1DDB910(&v408, v320);
          v321(&v406, 0);
          int v43 = v404;

          uint64_t v322 = sub_1C1EAD848();
          if (v322)
          {
            sub_1C1E16DFC(v322);
            v314(v392, v43, v66);
            unint64_t v323 = *v397;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v323 = sub_1C1E1C4EC(0, *(void *)(v323 + 16) + 1, 1, v323);
            }
            unint64_t v325 = *(void *)(v323 + 16);
            unint64_t v324 = *(void *)(v323 + 24);
            if (v325 >= v324 >> 1) {
              unint64_t v323 = sub_1C1E1C4EC(v324 > 1, v325 + 1, 1, v323);
            }
            *(void *)(v323 + 16) = v325 + 1;
            (*v373)((char *)v381 + v323 + v325 * v313, v392, v66);
            unint64_t *v397 = v323;
            int v43 = v404;
          }
          (*v399)(v43, v66);
          v312 += v313;
          if (!--v309)
          {
            uint64_t v326 = v400;
            uint64_t v328 = (uint64_t)v393;
            uint64_t v327 = (uint64_t)v394;
            uint64_t v329 = (uint64_t)v395;
            unsigned __int8 v330 = v391;
            sub_1C1E5441C(v400, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
            sub_1C1E5441C(v326, v328, v327, v329, v330);
            sub_1C1E5441C(v326, v328, v327, v329, v330);
            uint64_t v45 = v377;
            goto LABEL_60;
          }
          v314(v43, v312, v66);
        }
        (*v399)(v43, v66);
        goto LABEL_77;
    }
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v380)(v196, v197, v195);
      sub_1C1EAD728();
      __swift_project_boxed_opaque_existential_1(v198, v198[3]);
      sub_1C1EAD5B8();
      uint64_t v199 = (void *)sub_1C1EAD598();
      swift_bridgeObjectRelease();
      v200 = v402;
      swift_bridgeObjectRelease();
      uint64_t v201 = sub_1C1EAD738();
      if (v202 >> 60 == 15)
      {
        unint64_t v203 = 0;
      }
      else
      {
        uint64_t v204 = v201;
        unint64_t v205 = v202;
        unint64_t v203 = (void *)sub_1C1EAD268();
        sub_1C1E54540(v204, v205);
      }
      objc_msgSend(v199, sel_setData_, v203);

      v206 = (void *)sub_1C1EAD718();
      v207 = v405;
      sub_1C1EAD7A8();
      v405 = v207;
      if (v207) {
        break;
      }

      sub_1C1EAE218();
      sub_1C1E5383C(&qword_1EBB660C8, MEMORY[0x1E4F674E8]);
      v208 = (void *)sub_1C1EAEF38();
      swift_bridgeObjectRelease();
      objc_msgSend(v199, sel_setProfiles_, v208);

      sub_1C1EAE1F8();
      uint64_t v198 = v398;
      __swift_project_boxed_opaque_existential_1(v398, v398[3]);
      sub_1C1EAD5B8();
      long long v209 = (void *)sub_1C1EAE1E8();
      id v196 = v402;
      swift_bridgeObjectRelease();
      objc_msgSend(v199, sel_setPlugin_, v209);

      uint64_t v195 = v390;
      (*v382)(v196, v390);
      v197 += v378;
      if (!--v194)
      {
        uint64_t v210 = v400;
        uint64_t v212 = (uint64_t)v393;
        uint64_t v211 = (uint64_t)v394;
        uint64_t v213 = (uint64_t)v395;
        unsigned __int8 v214 = v391;
        sub_1C1E5441C(v400, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
        sub_1C1E5441C(v210, v212, v211, v213, v214);
        sub_1C1E5441C(v210, v212, v211, v213, v214);
LABEL_41:
        uint64_t v45 = v377;
LABEL_59:
        int v43 = v404;
LABEL_60:
        uint64_t v44 = v374;
        uint64_t v41 = v387;
LABEL_5:
        if (v41 == v371) {
          return swift_bridgeObjectRelease();
        }
        goto LABEL_6;
      }
    }

    (*v382)(v200, v390);
LABEL_77:
    uint64_t v331 = v400;
    uint64_t v333 = (uint64_t)v393;
    uint64_t v332 = (uint64_t)v394;
    uint64_t v334 = (uint64_t)v395;
    unsigned __int8 v335 = v391;
    sub_1C1E5441C(v400, (uint64_t)v393, (uint64_t)v394, (uint64_t)v395, v391);
    sub_1C1E5441C(v331, v333, v332, v334, v335);
    swift_bridgeObjectRelease();
    sub_1C1E5441C(v331, v333, v332, v334, v335);
    return sub_1C1E537E0(v396);
  }
  return result;
}

uint64_t sub_1C1E53570()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1C1E535B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_boundingRange;
  swift_beginAccess();
  uint64_t v4 = sub_1C1EAD0E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

id sub_1C1E53640()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 80);
  return v2;
}

uint64_t sub_1C1E53690()
{
  return swift_retain();
}

uint64_t sub_1C1E536A4(uint64_t a1)
{
  return sub_1C1E4E6E4(a1);
}

uint64_t sub_1C1E536C8()
{
  return sub_1C1EAD938();
}

uint64_t sub_1C1E536E0(void *a1, void *a2, void *a3, char a4)
{
  return HealthExperienceStoreFeedItemContext.previousFeedItems(predicate:)(a1, a2, a3, a4);
}

uint64_t sub_1C1E53704()
{
  return HealthExperienceStoreFeedItemContext.fetchAllPluginStorage()();
}

uint64_t sub_1C1E53728()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t type metadata accessor for ExecuteChangesResult(uint64_t a1)
{
  return sub_1C1DFE484(a1, (uint64_t *)&unk_1EBB65340);
}

uint64_t sub_1C1E53780()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C1E537C0()
{
  sub_1C1E4F924(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void ***)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1C1E537D0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E537E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExecuteChangesResult(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1E5383C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1C1E53884@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 16);
  *a2 = v4;
  return v4;
}

uint64_t sub_1C1E538E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 24;
  swift_beginAccess();
  return sub_1C1DFE408(v3, a2);
}

uint64_t sub_1C1E53934@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(_OWORD *)(v3 + 64);
  return swift_unknownObjectRetain();
}

id sub_1C1E53988@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 80);
  *a2 = v4;
  return v4;
}

uint64_t sub_1C1E539E4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 88);
  return result;
}

uint64_t sub_1C1E53A2C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 88) = v2;
  return result;
}

uint64_t sub_1C1E53A78()
{
  return type metadata accessor for HealthExperienceStoreFeedItemContext(0);
}

uint64_t sub_1C1E53A80()
{
  uint64_t result = sub_1C1EAD0E8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C1EADE98();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for HealthExperienceStoreFeedItemContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthExperienceStoreFeedItemContext);
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.healthStore.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.pinnedContentManager.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.notificationManager.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.unitPreferenceController.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.environment.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))() & 1;
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.boundingRange.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.__allocating_init(storageContext:pluginInfo:healthStore:environment:pinnedContentManager:notificationManager:queueProvider:dateRange:displayNamePublisher:primaryHealthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v4 + 312))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.queue(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.scheduler.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.commit(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t *sub_1C1E53D6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C1EADD48();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C1E53E3C(uint64_t a1)
{
  uint64_t v2 = sub_1C1EADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1E53EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1EADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C1E53F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1EADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1E53FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1EADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C1E54038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1EADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1E540BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1E540D0);
}

uint64_t sub_1C1E540D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1EADD48();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C1E54190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1E541A4);
}

uint64_t sub_1C1E541A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C1EADD48();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C1E54260()
{
  uint64_t result = sub_1C1EADD48();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C1E542F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5 = a5 >> 5;
  if (v5 <= 4) {
    return ((uint64_t (__cdecl *)())((char *)&loc_1C1E54318 + (int)funcs_1C1E54320[v5]))();
  }
  return result;
}

uint64_t sub_1C1E54324()
{
  return swift_bridgeObjectRetain();
}

id sub_1C1E54338(uint64_t a1, void *a2, void *a3, void *a4, char a5)
{
  char v8 = a5 & 0x1F;
  swift_bridgeObjectRetain();
  return sub_1C1E543A4(a2, a3, a4, v8);
}

id sub_1C1E543A4(id result, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRetain();
    uint64_t result = a3;
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    if (a4 != 1) {
      return result;
    }
    goto LABEL_6;
  }
LABEL_7:
  return sub_1C1E5440C(result);
}

id sub_1C1E5440C(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t sub_1C1E5441C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5 = a5 >> 5;
  if (v5 <= 4) {
    return ((uint64_t (__cdecl *)())((char *)&loc_1C1E5443C + (int)funcs_1C1E54444[v5]))();
  }
  return result;
}

uint64_t sub_1C1E54448()
{
  return swift_bridgeObjectRelease();
}

void sub_1C1E5445C(uint64_t a1, void *a2, void *a3, void *a4, char a5)
{
  char v8 = a5 & 0x1F;
  swift_bridgeObjectRelease();
  sub_1C1E544C8(a2, a3, a4, v8);
}

void sub_1C1E544C8(void *a1, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRelease();
    a1 = a3;
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    if (a4 != 1) {
      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  sub_1C1E54530(a1);
}

void sub_1C1E54530(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_1C1E54540(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1C1E54554(a1, a2);
  }
  return a1;
}

uint64_t sub_1C1E54554(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C1E545AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExecuteChangesResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C1E54610()
{
  sub_1C1EADD68();
  sub_1C1EADC68();
  uint64_t v0 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_featureWithName_featureType_, v0, 1);

  qword_1EBB6ACF8 = (uint64_t)v1;
}

uint64_t sub_1C1E54690()
{
  uint64_t v1 = sub_1C1EAD628();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C1EAD668();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EADDE8();
  uint64_t v9 = sub_1C1EAD638();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    v31[2] = v0;
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1C1DE1100(0, v10, 0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    uint64_t v11 = v2 + 16;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    v31[1] = v9;
    uint64_t v14 = v9 + ((v13 + 32) & ~v13);
    uint64_t v32 = *(void *)(v11 + 56);
    uint64_t v33 = v12;
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v34 = v11;
    do
    {
      v33(v4, v14, v1);
      uint64_t v16 = sub_1C1EAD618();
      uint64_t v18 = v17;
      (*v15)(v4, v1);
      uint64_t v19 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1DE1100(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v35;
      }
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v20 = *(void *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1C1DE1100(v20 > 1, v21 + 1, 1);
        uint64_t v19 = v35;
      }
      *(void *)(v19 + 16) = v21 + 1;
      uint64_t v22 = v19 + 16 * v21;
      *(void *)(v22 + 32) = v16;
      *(void *)(v22 + 40) = v18;
      v14 += v32;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  uint64_t v35 = v19;
  swift_bridgeObjectRetain();
  sub_1C1E55598(&v35);
  swift_bridgeObjectRelease();
  sub_1C1DE1620(0, (unint64_t *)&qword_1EBB68358, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C1E22EA0();
  sub_1C1EAECE8();
  swift_release();
  uint64_t v23 = self;
  if (qword_1EBB67508 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_1EBB6AC18;
  uint64_t v25 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(self, sel_featureValueWithString_, v25);

  id v27 = objc_msgSend(v23, sel_customRelevanceProviderForFeature_withValue_, v24, v26);
  if (v27)
  {
    sub_1C1DE1620(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1C1EB04A0;
    sub_1C1E54B34();
    *(void *)(v28 + 32) = v29;
    uint64_t v35 = v28;
    sub_1C1EAEEB8();
    return v35;
  }
  else
  {
    uint64_t result = sub_1C1EAF628();
    __break(1u);
  }
  return result;
}

void sub_1C1E54B34()
{
  uint64_t v0 = sub_1C1EAD668();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = self;
  if (qword_1EBB680F0 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_1EBB6AD00;
  sub_1C1EADDF8();
  id v6 = v5;
  sub_1C1EADC78();
  sub_1C1E55604(&qword_1EBB68180, MEMORY[0x1E4F67030]);
  sub_1C1EAEE48();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_featureValueWithString_, v7);

  id v9 = objc_msgSend(v4, sel_customRelevanceProviderForFeature_withValue_, v6, v8);
  if (!v9) {
    __break(1u);
  }
}

void sub_1C1E54D34()
{
  uint64_t v0 = self;
  if (qword_1EBB65308 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1EBB6ABB0;
  sub_1C1EADBA8();
  id v2 = v1;
  sub_1C1EADC78();
  uint64_t v3 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(self, sel_featureValueWithString_, v3);

  id v5 = objc_msgSend(v0, sel_customRelevanceProviderForFeature_withValue_, v2, v4);
  if (!v5) {
    __break(1u);
  }
}

void sub_1C1E54E4C()
{
  uint64_t v0 = sub_1C1EADAA8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = self;
  if (qword_1EBB680E0 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_1EBB6ACF0;
  sub_1C1EADCA8();
  id v6 = v5;
  sub_1C1EADC78();
  sub_1C1E55604(&qword_1EBB66180, MEMORY[0x1E4F67200]);
  sub_1C1EAEE48();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_featureValueWithString_, v7);

  id v9 = objc_msgSend(v4, sel_customRelevanceProviderForFeature_withValue_, v6, v8);
  if (!v9) {
    __break(1u);
  }
}

void sub_1C1E5504C()
{
  uint64_t v0 = sub_1C1EADBB8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = self;
  if (qword_1EBB680E8 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_1EBB6ACF8;
  sub_1C1EADD68();
  id v6 = v5;
  sub_1C1EADC78();
  sub_1C1E55604(&qword_1EBB661A0, MEMORY[0x1E4F67258]);
  sub_1C1EAEE48();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v7 = objc_msgSend(self, sel_featureValueWithInt64_, v9[1]);
  id v8 = objc_msgSend(v4, sel_customRelevanceProviderForFeature_withValue_, v6, v7);

  if (!v8) {
    __break(1u);
  }
}

void sub_1C1E55234()
{
  uint64_t v0 = sub_1C1EADE38();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = self;
  if (qword_1EBB68140 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_1EBB6AD38;
  sub_1C1EAE048();
  id v6 = v5;
  sub_1C1EADC78();
  sub_1C1E55604(&qword_1EBB661D8, MEMORY[0x1E4F67360]);
  sub_1C1EAEE48();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v7 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_featureValueWithString_, v7);

  id v9 = objc_msgSend(v4, sel_customRelevanceProviderForFeature_withValue_, v6, v8);
  if (!v9) {
    __break(1u);
  }
}

void sub_1C1E55434()
{
  sub_1C1EADDF8();
  sub_1C1EADC68();
  uint64_t v0 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_featureWithName_featureType_, v0, 1);

  qword_1EBB6AD00 = (uint64_t)v1;
}

void sub_1C1E554B4()
{
  uint64_t v0 = (void *)sub_1C1EAED28();
  id v1 = objc_msgSend(self, sel_featureWithName_featureType_, v0, 1);

  qword_1EBB6AC18 = (uint64_t)v1;
}

uint64_t sub_1C1E55528()
{
  if (qword_1EBB680F0 != -1) {
    swift_once();
  }
  uint64_t v0 = *(void *)(sub_1C1EAD648() + 16);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C1E863EC(v0);
  qword_1EBB6AD08 = result;
  return result;
}

uint64_t sub_1C1E55598(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C1E7B718(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C1E5564C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C1E55604(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1E5564C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C1EAF758();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1C1E55D38(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  unint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      unint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1C1E55E08((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1C1E7B674((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          unint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C1EAEF08();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1C1EAF7A8();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    unint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1C1EAF7A8()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C1E7B3D4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_1C1E7B3D4((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    long long v42 = v11 + 32;
    int v43 = &v11[16 * v41 + 32];
    *(void *)int v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          unsigned int v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            unint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        int64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1C1E55E08((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        long long v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        unint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1C1EAF7A8() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)unint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1C1EAF618();
  __break(1u);
  return result;
}

uint64_t sub_1C1E55D38(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1C1EAF7A8(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1E55E08(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1C1EAF7A8() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1C1EAF7A8() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_1C1E7B5B8((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E560A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 24) = v3;
  *(void *)(v4 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1E56104()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1E56150(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C1E561A4())()
{
  return j__swift_endAccess;
}

uint64_t BasicPluginInfo.__allocating_init(bundle:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  BasicPluginInfo.init(bundle:)(a1);
  return v2;
}

uint64_t BasicPluginInfo.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1C1E56278()
{
  return *(id *)(*(void *)v0 + 16);
}

uint64_t sub_1C1E56284@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 120))();
  *a1 = result;
  return result;
}

uint64_t PluginBundleProvider.__allocating_init(sharedDefaults:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t static FoundationPluginBundleProvider.sharedInstance.setter(uint64_t a1)
{
  if (qword_1EBB65E18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EBB65CE0 = a1;
  return swift_release();
}

uint64_t (*static FoundationPluginBundleProvider.sharedInstance.modify())()
{
  if (qword_1EBB65E18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FoundationPluginBundleProvider.deinit()
{
  return v0;
}

uint64_t FoundationPluginBundleProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1C1E56410()
{
  uint64_t v0 = (void *)sub_1C1E56A30();
  return v0;
}

void sub_1C1E5643C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = a1;
}

uint64_t (*sub_1C1E56484())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C1E564D8()
{
  uint64_t v0 = sub_1C1EAD448();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAD4F8();
  sub_1C1EAD4E8();
  uint64_t v4 = sub_1C1EAD4D8();
  swift_release();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    int64_t v8 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    uint64_t v7 = v1 + 16;
    uint64_t v13 = v4;
    uint64_t v14 = v8;
    unint64_t v9 = v4 + ((*(unsigned __int8 *)(v7 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64));
    uint64_t v10 = *(void *)(v7 + 56);
    swift_bridgeObjectRetain();
    do
    {
      v14(v3, v9, v0);
      sub_1C1EAD438();
      uint64_t v11 = (*(uint64_t (**)(char *, uint64_t))(v7 - 8))(v3, v0);
      MEMORY[0x1C874C090](v11);
      if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C1EAEEE8();
      }
      sub_1C1EAEF18();
      sub_1C1EAEEB8();
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v5 = v15;
  }
  swift_bridgeObjectRelease();
  return v5;
}

void *sub_1C1E566C8()
{
  sub_1C1EAD4F8();
  sub_1C1EAD4E8();
  uint64_t v0 = sub_1C1EAD4C8();
  swift_release();
  uint64_t v1 = sub_1C1E30C64(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C1E56720()
{
  uint64_t v1 = sub_1C1EAD448();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAD4F8();
  uint64_t v5 = sub_1C1EAD4E8();
  sub_1C1EAD4A8();
  if (v0)
  {
    swift_release();
  }
  else
  {
    uint64_t v6 = sub_1C1EAD498();
    int64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      v20[2] = v5;
      v20[3] = 0;
      uint64_t v25 = MEMORY[0x1E4FBC860];
      sub_1C1DE1100(0, v7, 0);
      unint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
      uint64_t v8 = v2 + 16;
      uint64_t v10 = *(unsigned __int8 *)(v8 + 64);
      v20[1] = v6;
      uint64_t v11 = v6 + ((v10 + 32) & ~v10);
      uint64_t v22 = *(void *)(v8 + 56);
      BOOL v23 = v9;
      uint64_t v21 = (void (**)(char *, uint64_t))(v8 - 8);
      uint64_t v24 = v1;
      do
      {
        uint64_t v12 = v8;
        v23(v4, v11, v1);
        uint64_t v13 = sub_1C1EAD428();
        uint64_t v15 = v14;
        (*v21)(v4, v1);
        uint64_t v5 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1DE1100(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v25;
        }
        unint64_t v17 = *(void *)(v5 + 16);
        unint64_t v16 = *(void *)(v5 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1C1DE1100(v16 > 1, v17 + 1, 1);
          uint64_t v5 = v25;
        }
        *(void *)(v5 + 16) = v17 + 1;
        uint64_t v18 = v5 + 16 * v17;
        *(void *)(v18 + 32) = v13;
        *(void *)(v18 + 40) = v15;
        v11 += v22;
        --v7;
        uint64_t v1 = v24;
        uint64_t v8 = v12;
      }
      while (v7);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
      return MEMORY[0x1E4FBC860];
    }
  }
  return v5;
}

uint64_t sub_1C1E56978(uint64_t a1, uint64_t a2)
{
  return sub_1C1DDC660(a1, a2, 1, MEMORY[0x1E4F66F40]);
}

uint64_t sub_1C1E569A8(uint64_t a1, uint64_t a2)
{
  return sub_1C1DDC660(a1, a2, 0, MEMORY[0x1E4F66F40]);
}

uint64_t PluginBundleProvider.deinit()
{
  return v0;
}

uint64_t PluginBundleProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C1E56A30()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

unint64_t sub_1C1E56A64()
{
  unint64_t result = qword_1EBB66118;
  if (!qword_1EBB66118)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB66118);
  }
  return result;
}

uint64_t sub_1C1E56AA4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 32);
  *a2 = *(void *)(v3 + 24);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_1C1E56AF4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1C1E56A30();
  *a1 = v2;
  return v2;
}

void sub_1C1E56B30(id *a1)
{
}

uint64_t sub_1C1E56B5C()
{
  return 16;
}

__n128 sub_1C1E56B68(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t method lookup function for BasicPluginInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BasicPluginInfo);
}

uint64_t dispatch thunk of BasicPluginInfo.bundleIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of BasicPluginInfo.bundleIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of BasicPluginInfo.bundleIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of BasicPluginInfo.__allocating_init(bundle:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for FoundationPluginBundleProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FoundationPluginBundleProvider);
}

uint64_t method lookup function for PluginBundleProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PluginBundleProvider);
}

uint64_t dispatch thunk of PluginBundleProvider.sharedDefaults.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of PluginBundleProvider.sharedDefaults.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of PluginBundleProvider.sharedDefaults.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of PluginBundleProvider.notificationDelegateProvidingPluginBundles.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of PluginBundleProvider.disabledPlugins.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of PluginBundleProvider.__allocating_init(sharedDefaults:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of PluginBundleProvider.allPluginBundleNames()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of PluginBundleProvider.loadAndValidatePluginBundle(named:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of PluginBundleProvider.loadPluginBundle(named:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t sub_1C1E56DAC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C1EAF368();
    sub_1C1EAE238();
    sub_1C1E58580(&qword_1EBB65230, MEMORY[0x1E4F674F0]);
    sub_1C1EAEF98();
    uint64_t v3 = v34[1];
    uint64_t v33 = v34[2];
    uint64_t v4 = v34[3];
    int64_t v5 = v34[4];
    unint64_t v6 = v34[5];
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v33 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  int64_t v32 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    if (v3 < 0)
    {
      uint64_t v14 = sub_1C1EAF3E8();
      if (!v14) {
        goto LABEL_50;
      }
      v34[0] = v14;
      sub_1C1EAE238();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v15 = v35;
      swift_unknownObjectRelease();
      int64_t v13 = v5;
      uint64_t v11 = v6;
      if (!v15) {
        goto LABEL_50;
      }
    }
    else
    {
      if (v6)
      {
        uint64_t v11 = (v6 - 1) & v6;
        unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
        int64_t v13 = v5;
      }
      else
      {
        int64_t v13 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_56;
        }
        if (v13 >= v32) {
          goto LABEL_50;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v13);
        if (!v16)
        {
          int64_t v17 = v5 + 2;
          if (v5 + 2 >= v32) {
            goto LABEL_50;
          }
          unint64_t v16 = *(void *)(v33 + 8 * v17);
          if (v16) {
            goto LABEL_25;
          }
          int64_t v17 = v5 + 3;
          if (v5 + 3 >= v32) {
            goto LABEL_50;
          }
          unint64_t v16 = *(void *)(v33 + 8 * v17);
          if (v16) {
            goto LABEL_25;
          }
          int64_t v17 = v5 + 4;
          if (v5 + 4 >= v32) {
            goto LABEL_50;
          }
          unint64_t v16 = *(void *)(v33 + 8 * v17);
          if (v16)
          {
LABEL_25:
            int64_t v13 = v17;
          }
          else
          {
            int64_t v13 = v5 + 5;
            if (v5 + 5 >= v32) {
              goto LABEL_50;
            }
            unint64_t v16 = *(void *)(v33 + 8 * v13);
            if (!v16)
            {
              int64_t v30 = v5 + 6;
              while (v32 != v30)
              {
                unint64_t v16 = *(void *)(v33 + 8 * v30++);
                if (v16)
                {
                  int64_t v13 = v30 - 1;
                  goto LABEL_26;
                }
              }
LABEL_50:
              sub_1C1E00B40();
              return (uint64_t)v10;
            }
          }
        }
LABEL_26:
        uint64_t v11 = (v16 - 1) & v16;
        unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
      }
      id v15 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
      if (!v15) {
        goto LABEL_50;
      }
    }
    uint64_t v35 = v15;
    sub_1C1E58068(&v35, v34);
    if (v2)
    {

      sub_1C1E00B40();
      swift_bridgeObjectRelease();
      return (uint64_t)v10;
    }
    uint64_t v18 = v3;

    uint64_t v19 = v34[0];
    uint64_t v20 = *(void *)(v34[0] + 16);
    int64_t v21 = v10[2];
    int64_t v22 = v21 + v20;
    if (__OFADD__(v21, v20)) {
      break;
    }
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v22 > v10[3] >> 1)
    {
      if (v21 <= v22) {
        int64_t v24 = v21 + v20;
      }
      else {
        int64_t v24 = v21;
      }
      uint64_t v10 = sub_1C1E1C238((void *)isUniquelyReferenced_nonNull_native, v24, 1, v10);
    }
    uint64_t v3 = v18;
    if (*(void *)(v19 + 16))
    {
      uint64_t v25 = v10[2];
      if ((v10[3] >> 1) - v25 < v20) {
        goto LABEL_54;
      }
      unint64_t v26 = (unint64_t)&v10[2 * v25 + 4];
      if (v19 + 32 < v26 + 16 * v20 && v26 < v19 + 32 + 16 * v20) {
        goto LABEL_57;
      }
      swift_arrayInitWithCopy();
      if (v20)
      {
        uint64_t v27 = v10[2];
        BOOL v28 = __OFADD__(v27, v20);
        uint64_t v29 = v27 + v20;
        if (v28) {
          goto LABEL_55;
        }
        long long v10[2] = v29;
      }
    }
    else if (v20)
    {
      goto LABEL_53;
    }
    swift_bridgeObjectRelease();
    int64_t v5 = v13;
    unint64_t v6 = v11;
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1E571F0(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C1EAF368();
    sub_1C1EAE208();
    sub_1C1E58580(&qword_1EBB65228, MEMORY[0x1E4F674E0]);
    sub_1C1EAEF98();
    uint64_t v1 = v29;
    uint64_t v34 = v30;
    uint64_t v2 = v31;
    uint64_t v3 = v32;
    unint64_t v4 = v33;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v34 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v27 = (unint64_t)(v2 + 64) >> 6;
  unint64_t v26 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v8 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_1C1EAF3E8()) {
      goto LABEL_39;
    }
    sub_1C1EAE208();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v28;
    swift_unknownObjectRelease();
    if (!v28) {
      goto LABEL_39;
    }
LABEL_32:
    id v15 = objc_msgSend(v11, sel_identifier);
    uint64_t v16 = sub_1C1EAED38();

    BOOL v28 = (void *)v16;
    sub_1C1EADB38();
    sub_1C1E4BF74();
    sub_1C1E4BFC8();
    LOBYTE(v16) = sub_1C1EAECD8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0
      || (id v17 = objc_msgSend(v11, sel_identifier),
          uint64_t v18 = HKDisplayCategoryIdentifierFromString(),
          v17,
          v18 != -1))
    {
    }
    else
    {
      id v19 = objc_msgSend(v11, sel_identifier);
      uint64_t v20 = sub_1C1EAED38();
      uint64_t v22 = v21;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v26 = sub_1C1E1C238(0, v26[2] + 1, 1, v26);
      }
      unint64_t v24 = v26[2];
      unint64_t v23 = v26[3];
      if (v24 >= v23 >> 1) {
        unint64_t v26 = sub_1C1E1C238((void *)(v23 > 1), v24 + 1, 1, v26);
      }
      void v26[2] = v24 + 1;
      uint64_t v25 = &v26[2 * v24];
      v25[4] = v20;
      v25[5] = v22;
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_31:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v27) {
      goto LABEL_39;
    }
    unint64_t v13 = *(void *)(v34 + 8 * v12);
    ++v3;
    if (!v13)
    {
      uint64_t v3 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v34 + 8 * v3);
      if (!v13)
      {
        uint64_t v3 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_39;
        }
        unint64_t v13 = *(void *)(v34 + 8 * v3);
        if (!v13)
        {
          uint64_t v3 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_39;
          }
          unint64_t v13 = *(void *)(v34 + 8 * v3);
          if (!v13)
          {
            uint64_t v3 = v8 + 5;
            if (v8 + 5 >= v27) {
              goto LABEL_39;
            }
            unint64_t v13 = *(void *)(v34 + 8 * v3);
            if (!v13)
            {
              uint64_t v14 = v8 + 6;
              while (v27 != v14)
              {
                unint64_t v13 = *(void *)(v34 + 8 * v14++);
                if (v13)
                {
                  uint64_t v3 = v14 - 1;
                  goto LABEL_30;
                }
              }
LABEL_39:
              sub_1C1E00B40();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_1C1E57618()
{
  uint64_t v1 = sub_1C1EAD668();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v44 - v6;
  if (!objc_msgSend(v0, sel_indexForSearch)) {
    goto LABEL_11;
  }
  sub_1C1EAE258();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v8 == *MEMORY[0x1E4F66FB8] || v8 == *MEMORY[0x1E4F66FD0] || v8 == *MEMORY[0x1E4F66FC0]) {
    goto LABEL_10;
  }
  if (v8 == *MEMORY[0x1E4F66FF8] || v8 == *MEMORY[0x1E4F67010] || v8 == *MEMORY[0x1E4F66FC8]) {
    goto LABEL_21;
  }
  if (v8 == *MEMORY[0x1E4F66F78]
    || v8 == *MEMORY[0x1E4F66FA0]
    || v8 == *MEMORY[0x1E4F66FA8]
    || v8 == *MEMORY[0x1E4F66FB0]
    || v8 == *MEMORY[0x1E4F66F88]
    || v8 == *MEMORY[0x1E4F67020]
    || v8 == *MEMORY[0x1E4F66F98])
  {
    goto LABEL_10;
  }
  if (v8 == *MEMORY[0x1E4F66F70] || v8 == *MEMORY[0x1E4F66FE0]) {
    goto LABEL_21;
  }
  if (v8 == *MEMORY[0x1E4F66FD8] || v8 == *MEMORY[0x1E4F66F90])
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
LABEL_11:
    char v11 = 0;
    return v11 & 1;
  }
  if (v8 != *MEMORY[0x1E4F67028])
  {
    if (v8 != *MEMORY[0x1E4F66FE8]
      && v8 != *MEMORY[0x1E4F67000]
      && v8 != *MEMORY[0x1E4F66F80]
      && v8 != *MEMORY[0x1E4F67018]
      && v8 != *MEMORY[0x1E4F66FF0]
      && v8 != *MEMORY[0x1E4F67008])
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    }
    goto LABEL_10;
  }
LABEL_21:
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  id v15 = objc_msgSend(v0, sel_profiles);
  uint64_t v16 = sub_1C1EAE218();
  sub_1C1E58580(&qword_1EBB660C8, MEMORY[0x1E4F674E8]);
  uint64_t v17 = sub_1C1EAEF48();

  unint64_t v44 = v0;
  uint64_t v47 = v16;
  if ((v17 & 0xC000000000000001) != 0)
  {
    sub_1C1EAF368();
    sub_1C1EAEF98();
    uint64_t v17 = v52;
    uint64_t v49 = v53;
    uint64_t v18 = v54;
    uint64_t v19 = v55;
    unint64_t v20 = v56;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = -1 << *(unsigned char *)(v17 + 32);
    uint64_t v22 = *(void *)(v17 + 56);
    uint64_t v49 = v17 + 56;
    uint64_t v18 = ~v21;
    uint64_t v23 = -v21;
    if (v23 < 64) {
      uint64_t v24 = ~(-1 << v23);
    }
    else {
      uint64_t v24 = -1;
    }
    unint64_t v20 = v24 & v22;
  }
  uint64_t v45 = v18;
  int64_t v48 = (unint64_t)(v18 + 64) >> 6;
  uint64_t v46 = MEMORY[0x1E4FBC838] + 8;
  while (2)
  {
    uint64_t v25 = v19;
    if (v17 < 0)
    {
      uint64_t v28 = sub_1C1EAF3E8();
      if (!v28) {
        break;
      }
      uint64_t v50 = v28;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v29 = (id)v51;
      swift_unknownObjectRelease();
    }
    else
    {
      if (v20)
      {
        unint64_t v26 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        unint64_t v27 = v26 | (v19 << 6);
      }
      else
      {
        int64_t v30 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
          __break(1u);
          JUMPOUT(0x1C1E57DC4);
        }
        if (v30 >= v48) {
          break;
        }
        unint64_t v31 = *(void *)(v49 + 8 * v30);
        ++v19;
        if (!v31)
        {
          uint64_t v19 = v25 + 2;
          if (v25 + 2 >= v48) {
            break;
          }
          unint64_t v31 = *(void *)(v49 + 8 * v19);
          if (!v31)
          {
            uint64_t v19 = v25 + 3;
            if (v25 + 3 >= v48) {
              break;
            }
            unint64_t v31 = *(void *)(v49 + 8 * v19);
            if (!v31)
            {
              uint64_t v19 = v25 + 4;
              if (v25 + 4 >= v48) {
                break;
              }
              unint64_t v31 = *(void *)(v49 + 8 * v19);
              if (!v31)
              {
                uint64_t v32 = v25 + 5;
                while (v48 != v32)
                {
                  unint64_t v31 = *(void *)(v49 + 8 * v32++);
                  if (v31)
                  {
                    uint64_t v19 = v32 - 1;
                    goto LABEL_66;
                  }
                }
                break;
              }
            }
          }
        }
LABEL_66:
        unint64_t v20 = (v31 - 1) & v31;
        unint64_t v27 = __clz(__rbit64(v31)) + (v19 << 6);
      }
      id v29 = *(id *)(*(void *)(v17 + 48) + 8 * v27);
    }
    if (v29)
    {
      id v33 = objc_msgSend(v29, sel_encodedHKProfileIdentifier, v44, v45, v46, v47);
      uint64_t v34 = sub_1C1EAD278();
      unint64_t v36 = v35;

      switch(v36 >> 62)
      {
        case 1uLL:
          sub_1C1E54554(v34, v36);
          uint64_t v37 = (int)v34;
          uint64_t v38 = v34 >> 32;
          goto LABEL_72;
        case 2uLL:
          uint64_t v37 = *(void *)(v34 + 16);
          uint64_t v38 = *(void *)(v34 + 24);
          sub_1C1E54554(v34, v36);
LABEL_72:
          if (v37 == v38) {
            goto LABEL_79;
          }
          continue;
        case 3uLL:
          sub_1C1E54554(v34, v36);
          goto LABEL_79;
        default:
          sub_1C1E54554(v34, v36);
          if ((v36 & 0xFF000000000000) != 0) {
            continue;
          }
LABEL_79:
          sub_1C1E00B40();
          break;
      }
      goto LABEL_11;
    }
    break;
  }
  sub_1C1E00B40();
  sub_1C1E58494();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1EB0800;
  *(void *)(inited + 32) = sub_1C1EAD7E8();
  *(void *)(inited + 40) = 0;
  uint64_t v51 = sub_1C1EAE2D8();
  sub_1C1E584EC();
  sub_1C1E58580(&qword_1EBB65258, (void (*)(uint64_t))sub_1C1E584EC);
  unint64_t v40 = (void *)sub_1C1EAEFC8();
  swift_bridgeObjectRelease();
  id v41 = *(id *)(inited + 32);
  char v42 = sub_1C1EAD7C8();
  swift_bridgeObjectRetain();

  if (v42)
  {
    swift_bridgeObjectRelease();
    char v11 = 1;
  }
  else
  {
    id v43 = *(id *)(inited + 40);
    char v11 = sub_1C1EAD7C8();
    swift_bridgeObjectRelease();
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  return v11 & 1;
}

uint64_t sub_1C1E57DD4(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_localizedTitle);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1C1EAED38();

    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)sub_1C1EAED28();
    objc_msgSend(a1, sel_setTitle_, v6);
    swift_bridgeObjectRelease_n();
  }
  id v7 = objc_msgSend(v2, sel_keywords);
  sub_1C1EAE208();
  sub_1C1E58580(&qword_1EBB65228, MEMORY[0x1E4F674E0]);
  uint64_t v8 = sub_1C1EAEF48();

  sub_1C1E571F0(v8);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v2, sel_dataTypes);
  sub_1C1EAE238();
  sub_1C1E58580(&qword_1EBB65230, MEMORY[0x1E4F674F0]);
  uint64_t v12 = sub_1C1EAEF48();

  uint64_t v13 = sub_1C1E56DAC(v12);
  swift_bridgeObjectRelease();
  sub_1C1E585C8(v13);
  uint64_t v14 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setKeywords_, v14, v10);

  id v15 = objc_msgSend(v2, sel_dataTypes);
  uint64_t v16 = sub_1C1EAEF48();

  uint64_t v17 = (void *)sub_1C1E7426C(v16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v18 = (void *)sub_1C1EAE228();

    if (v18)
    {
      objc_msgSend(v18, sel_code);
    }
  }
  return sub_1C1EAF268();
}

void sub_1C1E58068(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1C1EAE568();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v10 = sub_1C1EAE228();
  if (!v10)
  {
LABEL_10:
    uint64_t v46 = v6;
    sub_1C1EAE4F8();
    id v28 = v9;
    id v29 = sub_1C1EAE558();
    os_log_type_t v30 = sub_1C1EAF0C8();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v44 = v2;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v45 = a2;
      uint64_t v32 = (uint8_t *)v31;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v48 = v42;
      *(_DWORD *)uint64_t v32 = 136315138;
      v41[1] = v32 + 4;
      id v33 = v28;
      id v34 = objc_msgSend(v33, sel_description);
      uint64_t v43 = v5;
      id v35 = v34;
      uint64_t v36 = sub_1C1EAED38();
      unint64_t v38 = v37;

      uint64_t v47 = sub_1C1DF8D44(v36, v38, &v48);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v29, v30, "Could not get display type for: %s", v32, 0xCu);
      uint64_t v39 = v42;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v39, -1, -1);
      unint64_t v40 = v32;
      a2 = v45;
      MEMORY[0x1C874D2E0](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v43);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v5);
    }
    uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  id v11 = (void *)v10;
  id v12 = objc_msgSend(self, sel_sharedInstance);
  if (!v12
    || (uint64_t v13 = v12,
        id v14 = objc_msgSend(v12, sel_displayTypeForObjectType_, v11),
        v13,
        !v14))
  {

    goto LABEL_10;
  }
  uint64_t v45 = a2;
  id v15 = objc_msgSend(v14, sel_localization);
  id v16 = objc_msgSend(v15, sel_keywords);

  uint64_t v17 = sub_1C1EAEF48();
  uint64_t v18 = sub_1C1E30C64(v17);
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v14, sel_localization);
  id v20 = objc_msgSend(v19, sel_displayName);

  uint64_t v21 = sub_1C1EAED38();
  uint64_t v23 = v22;

  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v24 = v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v24 = sub_1C1E1C238(0, v18[2] + 1, 1, v18);
  }
  unint64_t v26 = v24[2];
  unint64_t v25 = v24[3];
  if (v26 >= v25 >> 1) {
    uint64_t v24 = sub_1C1E1C238((void *)(v25 > 1), v26 + 1, 1, v24);
  }
  v24[2] = v26 + 1;
  unint64_t v27 = &v24[2 * v26];
  v27[4] = v21;
  v27[5] = v23;
  swift_release();
  swift_bridgeObjectRelease();

  a2 = v45;
LABEL_14:
  *a2 = v24;
}

void sub_1C1E58494()
{
  if (!qword_1EBB68280)
  {
    unint64_t v0 = sub_1C1EAF778();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB68280);
    }
  }
}

void sub_1C1E584EC()
{
  if (!qword_1EBB65250)
  {
    sub_1C1EAD708();
    sub_1C1E58580(&qword_1EBB65220, MEMORY[0x1E4F670A0]);
    unint64_t v0 = sub_1C1EAEFA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65250);
    }
  }
}

uint64_t sub_1C1E58580(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1E585C8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1C1E1C238(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E58720(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1C874C700](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_1C1E5AA40(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_1C1EAEEB8();
}

uint64_t sub_1C1E588EC(uint64_t a1)
{
  return sub_1C1E03CD4(a1, (uint64_t (*)(void))sub_1C1E1C368, MEMORY[0x1E4F67030]);
}

uint64_t sub_1C1E58918(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_1C1E1C4EC(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(sub_1C1EAD898() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void *sub_1C1E58AC8(void *result)
{
  uint64_t v3 = result[2];
  int64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = (uint64_t)result;
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    int64_t v4 = sub_1C1E1C7D0(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = (void *)(v9 - v11);
  uint64_t result = sub_1C1E36DB4(v41, &v4[3 * v11 + 4], v9 - v11, v7);
  if ((uint64_t)result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, result);
    unint64_t v17 = (char *)result + v15;
    if (v16)
    {
      __break(1u);
      goto LABEL_47;
    }
    v4[2] = v17;
  }
  if (result != v12)
  {
LABEL_13:
    uint64_t result = (void *)sub_1C1E00B40();
    *(void *)uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v13 = v42;
  uint64_t v39 = v41[1];
  uint64_t v40 = v41[0];
  uint64_t v14 = v43;
  if (v44)
  {
    unint64_t v18 = (v44 - 1) & v44;
    uint64_t v19 = v43;
    unint64_t v20 = __clz(__rbit64(v44)) | (v43 << 6);
    int64_t v38 = (unint64_t)(v42 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_47:
  int64_t v35 = v14 + 1;
  if (__OFADD__(v14, 1)) {
    goto LABEL_66;
  }
  int64_t v38 = (unint64_t)(v13 + 64) >> 6;
  if (v35 >= v38) {
    goto LABEL_13;
  }
  unint64_t v36 = *(void *)(v39 + 8 * v35);
  uint64_t v19 = v14 + 1;
  if (!v36)
  {
    uint64_t v19 = v14 + 2;
    if (v14 + 2 >= v38) {
      goto LABEL_13;
    }
    unint64_t v36 = *(void *)(v39 + 8 * v19);
    if (!v36)
    {
      uint64_t v19 = v14 + 3;
      if (v14 + 3 >= v38) {
        goto LABEL_13;
      }
      unint64_t v36 = *(void *)(v39 + 8 * v19);
      if (!v36)
      {
        uint64_t v19 = v14 + 4;
        if (v14 + 4 >= v38) {
          goto LABEL_13;
        }
        unint64_t v36 = *(void *)(v39 + 8 * v19);
        if (!v36)
        {
          uint64_t v19 = v14 + 5;
          if (v14 + 5 >= v38) {
            goto LABEL_13;
          }
          unint64_t v36 = *(void *)(v39 + 8 * v19);
          if (!v36)
          {
            uint64_t v37 = v14 + 6;
            do
            {
              if (v38 == v37) {
                goto LABEL_13;
              }
              unint64_t v36 = *(void *)(v39 + 8 * v37++);
            }
            while (!v36);
            uint64_t v19 = v37 - 1;
          }
        }
      }
    }
  }
  unint64_t v18 = (v36 - 1) & v36;
  unint64_t v20 = __clz(__rbit64(v36)) + (v19 << 6);
LABEL_18:
  BOOL v21 = (uint64_t *)(*(void *)(v40 + 48) + 16 * v20);
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  uint64_t v24 = *(void **)(*(void *)(v40 + 56) + 8 * v20);
  swift_bridgeObjectRetain();
  uint64_t result = v24;
  while (1)
  {
    unint64_t v25 = v4[3];
    int64_t v26 = v25 >> 1;
    if ((uint64_t)(v25 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v26) {
      goto LABEL_23;
    }
LABEL_20:
    v4[2] = v2;
  }
  uint64_t result = sub_1C1E1C7D0((void *)(v25 > 1), v2 + 1, 1, v4);
  int64_t v4 = result;
  int64_t v26 = result[3] >> 1;
  if (v2 >= v26) {
    goto LABEL_20;
  }
  while (1)
  {
LABEL_23:
    unint64_t v27 = &v4[3 * v2 + 4];
    *unint64_t v27 = v22;
    v27[1] = v23;
    void v27[2] = v24;
    ++v2;
    if (v18)
    {
      unint64_t v28 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v29 = v28 | (v19 << 6);
      goto LABEL_41;
    }
    int64_t v30 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v30 >= v38) {
      goto LABEL_45;
    }
    unint64_t v31 = *(void *)(v39 + 8 * v30);
    uint64_t v32 = v19 + 1;
    if (!v31)
    {
      uint64_t v32 = v19 + 2;
      if (v19 + 2 >= v38) {
        goto LABEL_45;
      }
      unint64_t v31 = *(void *)(v39 + 8 * v32);
      if (!v31)
      {
        uint64_t v32 = v19 + 3;
        if (v19 + 3 >= v38) {
          goto LABEL_45;
        }
        unint64_t v31 = *(void *)(v39 + 8 * v32);
        if (!v31)
        {
          uint64_t v32 = v19 + 4;
          if (v19 + 4 >= v38) {
            goto LABEL_45;
          }
          unint64_t v31 = *(void *)(v39 + 8 * v32);
          if (!v31)
          {
            uint64_t v32 = v19 + 5;
            if (v19 + 5 >= v38) {
              goto LABEL_45;
            }
            unint64_t v31 = *(void *)(v39 + 8 * v32);
            if (!v31)
            {
              uint64_t v33 = v19 + 6;
              while (v38 != v33)
              {
                unint64_t v31 = *(void *)(v39 + 8 * v33++);
                if (v31)
                {
                  uint64_t v32 = v33 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    unint64_t v18 = (v31 - 1) & v31;
    unint64_t v29 = __clz(__rbit64(v31)) + (v32 << 6);
    uint64_t v19 = v32;
LABEL_41:
    id v34 = (uint64_t *)(*(void *)(v40 + 48) + 16 * v29);
    uint64_t v22 = *v34;
    uint64_t v23 = v34[1];
    uint64_t v24 = *(void **)(*(void *)(v40 + 56) + 8 * v29);
    if (v2 >= v26)
    {
      swift_bridgeObjectRetain();
      uint64_t result = v24;
      goto LABEL_20;
    }
    swift_bridgeObjectRetain();
    uint64_t result = v24;
    uint64_t v24 = result;
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_1C1E58ECC(uint64_t a1)
{
  return sub_1C1E03CD4(a1, (uint64_t (*)(void))sub_1C1E1C924, (uint64_t (*)(void))type metadata accessor for ModelTrainingEvent);
}

uint64_t sub_1C1E58EF8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C1E1C9FC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int64_t v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

uint64_t sub_1C1E59040()
{
  sub_1C1DFD274(0, (unint64_t *)&qword_1EBB68280, MEMORY[0x1E4F670C0], MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1EB0800;
  uint64_t result = sub_1C1EAD7E8();
  *(void *)(v0 + 32) = result;
  *(void *)(v0 + 40) = 0;
  qword_1EBB64890 = v0;
  return result;
}

uint64_t static SummaryTabRelevanceEngineCoordinator.dataSourceProfiles.getter()
{
  if (qword_1EBB648A0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

unint64_t static SummaryTabRelevanceEngineCoordinator.defaultEngineName.getter()
{
  return 0xD000000000000016;
}

uint64_t static SummaryTabRelevanceEngineCoordinator.defaultModelDirectoryName.getter()
{
  return 0x646D2E6C65646F6DLL;
}

uint64_t sub_1C1E59148()
{
  return 0;
}

uint64_t sub_1C1E59154()
{
  uint64_t v0 = sub_1C1EAD258();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  int64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_1EBB648A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB648A8);
  type metadata accessor for SummaryTabRelevanceEngineCoordinator();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v7 = objc_msgSend(v6, sel_bundleURL);

  sub_1C1EAD248();
  sub_1C1EAD228();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t static SummaryTabRelevanceEngineCoordinator.defaultPretrainedModelURL.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBB648C8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C1EAD258();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBB648A8);
  int64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

id SummaryTabRelevanceEngineCoordinator.dispatchQueue.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dispatchQueue));
}

uint64_t sub_1C1E59370(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C1EAEB78();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1EAEBD8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  BOOL v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)&v2[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dispatchQueue];
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v2;
  void v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_1C1E5A26C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1DF5050;
  aBlock[3] = &block_descriptor_3;
  int64_t v14 = _Block_copy(aBlock);
  uint64_t v15 = v2;
  sub_1C1E16DEC(a1);
  sub_1C1EAEB98();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1C1DE8FD0((unint64_t *)&qword_1EBB683C8, MEMORY[0x1E4FBCB00]);
  sub_1C1E07320(0);
  sub_1C1DE8FD0((unint64_t *)&qword_1EBB683D8, sub_1C1E07320);
  sub_1C1EAF328();
  MEMORY[0x1C874C3B0](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_1C1E59650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = sub_1C1E18054();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  v8[4] = sub_1C1E5B058;
  v8[5] = v6;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  void v8[2] = sub_1C1DF5050;
  v8[3] = &block_descriptor_33;
  uint64_t v7 = _Block_copy(v8);
  sub_1C1E16DEC(a2);
  swift_release();
  objc_msgSend(v5, sel_resetModelWithCompletion_, v7);
  _Block_release(v7);
}

uint64_t SummaryTabRelevanceEngineCoordinator.modelPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_modelPath;
  uint64_t v4 = sub_1C1EAD258();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

id sub_1C1E597C0()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F949C8]), sel_init);
    id v5 = sub_1C1E18054();
    objc_msgSend(v5, sel_addTrainingContext_, v4);

    objc_msgSend(v4, sel_becomeCurrent);
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void sub_1C1E59864(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1
                + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext);
  *(void *)(v1
            + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext) = a1;
}

void (*sub_1C1E59878(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = sub_1C1E597C0();
  return sub_1C1E598C0;
}

void sub_1C1E598C0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  id v3 = *(void **)(v1
                + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext);
  *(void *)(v1
            + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext) = v2;
}

uint64_t sub_1C1E598D8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C1EAEB78();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1EAEBD8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  BOOL v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v2;
  void v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_1C1E5A2B8;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1DF5050;
  aBlock[3] = &block_descriptor_6;
  int64_t v14 = _Block_copy(aBlock);
  id v15 = v2;
  swift_retain();
  sub_1C1EAEB98();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1C1DE8FD0((unint64_t *)&qword_1EBB683C8, MEMORY[0x1E4FBCB00]);
  sub_1C1E07320(0);
  sub_1C1DE8FD0((unint64_t *)&qword_1EBB683D8, sub_1C1E07320);
  sub_1C1EAF328();
  MEMORY[0x1C874C3B0](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_1C1E59BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (char *)sub_1C1DD6864();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_allocObject();
  *((void *)v7 + 2) = v6;
  *((void *)v7 + 3) = a2;
  *((void *)v7 + 4) = a3;
  uint64_t v8 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v5[OBJC_IVAR____TtC18HealthPlatformCore35RelevanceEngineMetricsBlockRecorder_callback];
  uint64_t v9 = *(void *)&v5[OBJC_IVAR____TtC18HealthPlatformCore35RelevanceEngineMetricsBlockRecorder_callback];
  char *v8 = sub_1C1E5B00C;
  v8[1] = v7;
  swift_retain();
  sub_1C1E16DFC(v9);

  id v10 = sub_1C1E18054();
  objc_msgSend(v10, sel_gatherMetrics);
}

uint64_t sub_1C1E59CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = a4 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1C874D390](v9);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    BOOL v12 = (char *)sub_1C1DD6864();

    uint64_t v13 = &v12[OBJC_IVAR____TtC18HealthPlatformCore35RelevanceEngineMetricsBlockRecorder_callback];
    uint64_t v14 = *(void *)&v12[OBJC_IVAR____TtC18HealthPlatformCore35RelevanceEngineMetricsBlockRecorder_callback];
    *(void *)uint64_t v13 = 0;
    *((void *)v13 + 1) = 0;
    sub_1C1E16DFC(v14);
  }
  return a5(a1, a2, a3);
}

id sub_1C1E59D74()
{
  id v0 = sub_1C1E18054();
  id v1 = objc_msgSend(v0, sel_automaticallyResumeEngine);

  return v1;
}

void sub_1C1E59DB0(char a1)
{
  id v2 = sub_1C1E18054();
  objc_msgSend(v2, sel_setAutomaticallyResumeEngine_, a1 & 1);
}

void (*sub_1C1E59E04(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  id v3 = sub_1C1E18054();
  unsigned __int8 v4 = objc_msgSend(v3, sel_automaticallyResumeEngine);

  *(unsigned char *)(a1 + 8) = v4;
  return sub_1C1E59E6C;
}

void sub_1C1E59E6C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 8);
  id v2 = sub_1C1E18054();
  objc_msgSend(v2, sel_setAutomaticallyResumeEngine_, v1);
}

id sub_1C1E59EC4()
{
  if (qword_1EBB65140 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1EBB64778;
  return v0;
}

id SummaryTabRelevanceEngineCoordinator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SummaryTabRelevanceEngineCoordinator.init()()
{
}

id SummaryTabRelevanceEngineCoordinator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummaryTabRelevanceEngineCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C1E5A100()
{
  return objc_retain(*(id *)(*v0
                           + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dispatchQueue));
}

id sub_1C1E5A114()
{
  return sub_1C1E18054();
}

id sub_1C1E5A138()
{
  return sub_1C1E597C0();
}

id sub_1C1E5A15C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94970]), sel_init);
  id v1 = (void *)sub_1C1EAED28();
  objc_msgSend(v0, sel_setName_, v1);

  objc_msgSend(v0, sel_setEnableExploreExploit_, 1);
  if (qword_1EBB65310 != -1) {
    swift_once();
  }
  id result = objc_msgSend(v0, sel_setBiasFeature_, qword_1EBB6ABB8);
  qword_1EBB64778 = (uint64_t)v0;
  return result;
}

uint64_t sub_1C1E5A224()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C1E5A26C()
{
  sub_1C1E59650(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C1E5A278()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C1E5A2B8()
{
  sub_1C1E59BB0(v0[2], v0[3], v0[4]);
}

id sub_1C1E5A2C4@<X0>(void *a1@<X8>)
{
  id result = sub_1C1E597C0();
  *a1 = result;
  return result;
}

void sub_1C1E5A2F0(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

id sub_1C1E5A2FC@<X0>(void *a1@<X8>)
{
  id result = sub_1C1E18054();
  *a1 = result;
  return result;
}

void sub_1C1E5A328(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

void keypath_setTm(void **a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  id v7 = *(id *)(*a2 + *a5);
  *(void *)(*a2 + *a5) = *a1;
  id v6 = v5;
}

void sub_1C1E5A380(unsigned __int8 *a1@<X8>)
{
  id v2 = sub_1C1E18054();
  unsigned __int8 v3 = objc_msgSend(v2, sel_automaticallyResumeEngine);

  *a1 = v3;
}

void sub_1C1E5A3CC(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  id v2 = sub_1C1E18054();
  objc_msgSend(v2, sel_setAutomaticallyResumeEngine_, v1);
}

uint64_t sub_1C1E5A424()
{
  return type metadata accessor for SummaryTabRelevanceEngineCoordinator();
}

void sub_1C1E5A42C()
{
  sub_1C1EAD258();
  if (v0 <= 0x3F)
  {
    sub_1C1DFC41C(319, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for SummaryTabRelevanceEngineCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SummaryTabRelevanceEngineCoordinator);
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.logPrefix.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.__allocating_init(dataSources:engineName:modelURL:pretrainedModelURL:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.clearEngineAndModel(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.trainingContext.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.trainingContext.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.trainingContext.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.gatherMetrics(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.relevanceEngine.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.automaticallyResumeRelevenceEngine.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.automaticallyResumeRelevenceEngine.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.automaticallyResumeRelevenceEngine.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.interactionDescriptor(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

uint64_t (*sub_1C1E5A81C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  id v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C1E5A938(v6, a2, a3);
  return sub_1C1E5A884;
}

uint64_t (*sub_1C1E5A888(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  id v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C1E5A9B8(v6, a2, a3);
  return sub_1C1E5A884;
}

void sub_1C1E5A8F0(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1C1E5A938(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  unsigned __int8 v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C874C6F0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)unsigned __int8 v3 = v4;
    return sub_1C1E5B098;
  }
  __break(1u);
  return result;
}

void (*sub_1C1E5A9B8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  unsigned __int8 v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C874C6F0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)unsigned __int8 v3 = v4;
    return sub_1C1E5AA38;
  }
  __break(1u);
  return result;
}

void sub_1C1E5AA38(id *a1)
{
}

uint64_t sub_1C1E5AA40(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C1E5AC88(0, &qword_1EA2C1468, (unint64_t *)&qword_1EBB67010);
        sub_1C1E5AF44((unint64_t *)&unk_1EA2C1470, &qword_1EA2C1468, (unint64_t *)&qword_1EBB67010);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          BOOL v12 = sub_1C1E5A81C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67010);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1E5AC88(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C1DF9F8C(255, a3);
    unint64_t v4 = sub_1C1EAEF28();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1E5ACE0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C1E5AF10(0);
        sub_1C1DE8FD0(&qword_1EBB65480, sub_1C1E5AF10);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          BOOL v12 = sub_1C1E5A888(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C1EAE348();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1E5AF10(uint64_t a1)
{
}

uint64_t sub_1C1E5AF44(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1E5AC88(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1E5AF94()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E5AFCC()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C1E5B00C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1E59CA0(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 24));
}

uint64_t sub_1C1E5B018()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E5B058()
{
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

void sub_1C1E5B0AC()
{
  sub_1C1EADFD8();
  sub_1C1EADC68();
  uint64_t v0 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_featureWithName_featureType_, v0, 2);

  qword_1EBB6AD28 = (uint64_t)v1;
}

uint64_t sub_1C1E5B12C()
{
  if (qword_1EBB68128 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C1E865E8(5);
  qword_1EBB6AD20 = result;
  return result;
}

void sub_1C1E5B190()
{
  sub_1C1E4DDB8();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1EB04A0;
  id v1 = self;
  if (qword_1EBB68128 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EBB6AD28;
  sub_1C1EADFD8();
  id v3 = v2;
  sub_1C1EADC78();
  id v4 = objc_msgSend(self, sel_featureValueWithDouble_, v6);
  id v5 = objc_msgSend(v1, sel_customRelevanceProviderForFeature_withValue_, v3, v4);

  if (v5)
  {
    *(void *)(v0 + 32) = v5;
    sub_1C1EAEEB8();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C1E5B2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C1EAE568();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE548();
  swift_bridgeObjectRetain_n();
  BOOL v12 = sub_1C1EAE558();
  os_log_type_t v13 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v26 = v4;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = a3;
    id v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v30 = v16;
    uint64_t v25 = v8;
    *(_DWORD *)id v15 = 136315138;
    v24[1] = v15 + 4;
    sub_1C1E5B67C();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1C1EAEC48();
    uint64_t v27 = a2;
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v20 = v17;
    uint64_t v4 = v26;
    uint64_t v29 = sub_1C1DF8D44(v20, v19, &v30);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    a2 = v27;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v12, v13, "Training metrics received from RelevanceEngine: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v16, -1, -1);
    BOOL v21 = v15;
    a3 = v28;
    MEMORY[0x1C874D2E0](v21, -1, -1);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v25);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4
                                                         + OBJC_IVAR____TtC18HealthPlatformCore35RelevanceEngineMetricsBlockRecorder_callback);
  if (v23)
  {
    swift_retain();
    v23(a1, a2, a3);
    return sub_1C1E16DFC((uint64_t)v23);
  }
  return result;
}

id sub_1C1E5B634()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RelevanceEngineMetricsBlockRecorder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1C1E5B67C()
{
  unint64_t result = qword_1EBB68390;
  if (!qword_1EBB68390)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB68390);
  }
  return result;
}

uint64_t sub_1C1E5B6BC(uint64_t a1)
{
  uint64_t v2 = sub_1C1EADA28();
  uint64_t v81 = *(void *)(v2 - 8);
  uint64_t v82 = v2;
  MEMORY[0x1F4188790](v2);
  unint64_t v83 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E5C554(0, &qword_1EBB66F38, (unint64_t *)&qword_1EBB66218, MEMORY[0x1E4F67500], MEMORY[0x1E4F1AC08]);
  uint64_t v5 = v4;
  uint64_t v79 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v73 - v6;
  uint64_t v8 = (uint64_t *)sub_1C1EAD948();
  uint64_t v84 = (char *)*(v8 - 1);
  uint64_t v85 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C1EAD9C8();
  uint64_t v86 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v73 - v16;
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v73 - v18;
  uint64_t v87 = a1;
  uint64_t v20 = (void *)sub_1C1EADA08();
  BOOL v21 = (void *)sub_1C1EAD7E8();
  char v22 = sub_1C1EAD7C8();

  if (v22)
  {
    uint64_t v74 = v14;
    uint64_t v75 = v7;
    uint64_t v76 = v5;
    uint64_t v77 = v17;
    uint64_t v78 = v11;
    sub_1C1EAD7E8();
    uint64_t v23 = sub_1C1E3BD98(MEMORY[0x1E4FBC860]);
    sub_1C1E5C0B8(v23);
    swift_bridgeObjectRelease();
    uint64_t v24 = v85;
    uint64_t v25 = (void (*)(char *, void, uint64_t *))*((void *)v84 + 13);
    v25(v10, *MEMORY[0x1E4F671A8], v85);
    sub_1C1EAD998();
    uint64_t v26 = v87;
    sub_1C1EAD9D8();
    __swift_project_boxed_opaque_existential_1(v91, v91[3]);
    char v27 = sub_1C1EAD8C8();
    uint64_t v84 = v19;
    if (v27)
    {
      uint64_t v47 = v80;
      uint64_t v48 = (uint64_t)(v80 + 2);
      __swift_project_boxed_opaque_existential_1(v80 + 2, v80[5]);
      if (sub_1C1EAD5B8() == 0xD000000000000020 && v49 == 0x80000001C1EB48E0)
      {
        swift_bridgeObjectRelease();
        uint64_t v50 = v86;
        uint64_t v51 = (uint64_t)v77;
      }
      else
      {
        char v52 = sub_1C1EAF7A8();
        swift_bridgeObjectRelease();
        uint64_t v50 = v86;
        uint64_t v51 = (uint64_t)v77;
        if ((v52 & 1) == 0)
        {
          sub_1C1E5C554(0, &qword_1EBB670A0, &qword_1EBB66198, MEMORY[0x1E4F67218], MEMORY[0x1E4FBBE00]);
          uint64_t v29 = swift_allocObject();
          *(_OWORD *)(v29 + 16) = xmmword_1C1EB07F0;
          uint64_t v66 = (void *)v47[7];
          sub_1C1DFE408((uint64_t)(v47 + 2), (uint64_t)&v88);
          char v67 = v84;
          uint64_t v68 = v78;
          (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v51, v84, v78);
          uint64_t v69 = (uint64_t)v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v83, v87, v82);
          uint64_t v70 = type metadata accessor for InteractiveGeneratorToPipelineAdaptor();
          swift_allocObject();
          uint64_t v71 = InteractiveGeneratorToPipelineAdaptor.init(queue:pluginInfo:domain:context:commitImmediately:)(v66, (uint64_t)&v88, v51, v69, 0);
          *(void *)(v29 + 56) = v70;
          *(void *)(v29 + 64) = sub_1C1E5C5BC(&qword_1EBB66C70, (void (*)(uint64_t))type metadata accessor for InteractiveGeneratorToPipelineAdaptor);
          *(void *)(v29 + 32) = v71;
          (*(void (**)(char *, uint64_t))(v50 + 8))(v67, v68);
          goto LABEL_11;
        }
      }
      uint64_t v79 = v48;
      uint64_t v53 = *(void (**)(uint64_t, char *, uint64_t))(v50 + 16);
      uint64_t v54 = v51;
      uint64_t v55 = v78;
      v53(v51, v84, v78);
      v25(v10, *MEMORY[0x1E4F67198], v24);
      sub_1C1EAD968();
      sub_1C1E5C554(0, &qword_1EBB670A0, &qword_1EBB66198, MEMORY[0x1E4F67218], MEMORY[0x1E4FBBE00]);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1C1EB07F0;
      uint64_t v85 = (uint64_t *)v47[7];
      unint64_t v56 = v85;
      sub_1C1DFE408(v79, (uint64_t)&v88);
      unsigned int v57 = v74;
      v53((uint64_t)v74, (char *)v51, v55);
      uint64_t v59 = v81;
      uint64_t v58 = v82;
      uint64_t v60 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v83, v87, v82);
      uint64_t v61 = type metadata accessor for GenerationOperationToGeneratorPipelineAdaptor();
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_queue) = v56;
      uint64_t v63 = v86;
      (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v62 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_domain, v57, v55);
      (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v62 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_context, v60, v58);
      sub_1C1DFE46C(&v88, v62 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_pluginInfo);
      *(void *)(v29 + 56) = v61;
      *(void *)(v29 + 64) = sub_1C1E5C5BC(&qword_1EBB656A0, (void (*)(uint64_t))type metadata accessor for GenerationOperationToGeneratorPipelineAdaptor);
      *(void *)(v29 + 32) = v62;
      uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
      BOOL v65 = v85;
      v64(v54, v55);
      v64((uint64_t)v84, v55);
    }
    else
    {
      uint64_t v28 = v26;
      sub_1C1E5C554(0, &qword_1EBB670A0, &qword_1EBB66198, MEMORY[0x1E4F67218], MEMORY[0x1E4FBBE00]);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1C1EB07F0;
      uint64_t v85 = (uint64_t *)(v29 + 32);
      uint64_t v30 = (void *)v80[7];
      sub_1C1DFE408((uint64_t)(v80 + 2), (uint64_t)&v88);
      uint64_t v31 = v86;
      uint64_t v32 = *(void **)(v86 + 16);
      uint64_t v74 = (char *)(v86 + 16);
      uint64_t v80 = v32;
      uint64_t v33 = v77;
      uint64_t v34 = v78;
      ((void (*)(char *, char *, uint64_t))v32)(v77, v84, v78);
      uint64_t v36 = v81;
      uint64_t v35 = v82;
      uint64_t v37 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v83, v28, v82);
      uint64_t v38 = type metadata accessor for GenerationOperationToGeneratorAdaptor();
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_queue) = v30;
      (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v39 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain, v33, v34);
      (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v39 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_context, v37, v35);
      sub_1C1DFE46C(&v88, v39 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_pluginInfo);
      uint64_t v89 = v38;
      uint64_t v90 = sub_1C1E5C5BC(&qword_1EBB646F0, (void (*)(uint64_t))type metadata accessor for GenerationOperationToGeneratorAdaptor);
      *(void *)&long long v88 = v39;
      sub_1C1DF9148(0, (unint64_t *)&qword_1EBB66218);
      id v40 = v30;
      id v41 = v75;
      sub_1C1EAE8B8();
      sub_1C1E5C604();
      uint64_t v42 = v76;
      uint64_t v43 = sub_1C1EAEA38();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v41, v42);
      unint64_t v44 = v84;
      ((void (*)(char *, char *, uint64_t))v80)(v33, v84, v34);
      uint64_t v45 = sub_1C1EADEB8();
      uint64_t v46 = MEMORY[0x1E4F67390];
      *(void *)(v29 + 56) = v45;
      *(void *)(v29 + 64) = v46;
      __swift_allocate_boxed_opaque_existential_0(v85);
      MEMORY[0x1C874B0C0](v43, v33);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v44, v34);
    }
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
    return v29;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C1E5C0B8(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1C1EAF3B8()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x1E4FBC870];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v29 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1C1E5C688();
  uint64_t v3 = sub_1C1EAF488();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1EAF368();
  sub_1C1DF9F8C(0, &qword_1EBB66FC8);
  sub_1C1E16A04(&qword_1EBB66FD0, &qword_1EBB66FC8);
  uint64_t result = sub_1C1EAEF98();
  uint64_t v1 = v31;
  uint64_t v29 = v32;
  uint64_t v5 = v33;
  uint64_t v6 = v34;
  unint64_t v7 = v35;
LABEL_11:
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_1C1EAF3E8()) {
      goto LABEL_45;
    }
    sub_1C1DF9F8C(0, &qword_1EBB66FC8);
    swift_dynamicCast();
    uint64_t v16 = v30;
LABEL_36:
    uint64_t result = sub_1C1EAF278();
    uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v3 + 48) + 8 * v13) = v16;
    ++*(void *)(v3 + 16);
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    uint64_t v16 = *(void **)(*(void *)(v1 + 48) + 8 * v15);
    uint64_t v30 = v16;
    id v21 = v16;
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v29 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v29 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v29 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v29 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v11) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v29 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v11 != v20)
              {
                unint64_t v18 = *(void *)(v29 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_1C1E00B40();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1C1E5C46C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GenerationOperationToPluginDelegateAdaptor()
{
  return self;
}

void sub_1C1E5C4D0()
{
}

uint64_t sub_1C1E5C52C(uint64_t a1)
{
  return sub_1C1E5B6BC(a1);
}

void sub_1C1E5C554(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1DF9148(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C1E5C5BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C1E5C604()
{
  unint64_t result = qword_1EBB646F8;
  if (!qword_1EBB646F8)
  {
    sub_1C1E5C554(255, &qword_1EBB66F38, (unint64_t *)&qword_1EBB66218, MEMORY[0x1E4F67500], MEMORY[0x1E4F1AC08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB646F8);
  }
  return result;
}

void sub_1C1E5C688()
{
  if (!qword_1EBB67060)
  {
    sub_1C1DF9F8C(255, (unint64_t *)&qword_1EBB67F40);
    sub_1C1E16A04(&qword_1EBB67F48, (unint64_t *)&qword_1EBB67F40);
    unint64_t v0 = sub_1C1EAF498();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67060);
    }
  }
}

void sub_1C1E5C71C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C1EAE568();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_name);
  uint64_t v7 = sub_1C1EAED38();
  uint64_t v9 = v8;

  sub_1C1EADFD8();
  if (sub_1C1EADC88() == v7 && v10 == v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v12 = sub_1C1EAF7A8();
  swift_bridgeObjectRelease();
  if (v12)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4F67460];
    uint64_t v15 = MEMORY[0x1E4F67458];
    uint64_t v16 = (uint64_t (*)(void))MEMORY[0x1E4F67470];
    int64_t v17 = sub_1C1E5B190;
LABEL_11:
    sub_1C1E5CEAC(v16, v14, (uint64_t (*)(uint64_t))v17, v15);
    return;
  }
  sub_1C1EADF38();
  if (sub_1C1EADC88() == v7 && v13 == v9)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4F67428];
    uint64_t v15 = MEMORY[0x1E4F67420];
    uint64_t v16 = (uint64_t (*)(void))MEMORY[0x1E4F67438];
    int64_t v17 = sub_1C1E61010;
    goto LABEL_11;
  }
  char v18 = sub_1C1EAF7A8();
  swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_14;
  }
  sub_1C1EADED8();
  if (sub_1C1EADC88() == v7 && v19 == v9)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    sub_1C1E5D2E4();
    return;
  }
  char v20 = sub_1C1EAF7A8();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_19;
  }
  sub_1C1EAE048();
  if (sub_1C1EADC88() == v7 && v21 == v9)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x1E4F67490];
    uint64_t v24 = MEMORY[0x1E4F67488];
    char v25 = (uint64_t (*)(void))MEMORY[0x1E4F674A0];
    unint64_t v26 = sub_1C1E55234;
LABEL_27:
    sub_1C1E5DB40(v25, v23, (uint64_t (*)(void))v26, v24);
    return;
  }
  char v22 = sub_1C1EAF7A8();
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_26;
  }
  sub_1C1E5CE58();
  if (sub_1C1EADC88() == v7 && v27 == v9)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v28 = sub_1C1EAF7A8();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
    {
      sub_1C1EADBA8();
      if (sub_1C1EADC88() == v7 && v29 == v9)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v30 = sub_1C1EAF7A8();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0)
        {
          sub_1C1EADD68();
          if (sub_1C1EADC88() == v7 && v31 == v9)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v32 = sub_1C1EAF7A8();
            swift_bridgeObjectRelease();
            if ((v32 & 1) == 0)
            {
              sub_1C1EADCA8();
              if (sub_1C1EADC88() == v7 && v33 == v9)
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
                char v34 = sub_1C1EAF7A8();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v34 & 1) == 0)
                {
                  sub_1C1EAE508();
                  id v35 = v1;
                  uint64_t v36 = sub_1C1EAE558();
                  os_log_type_t v37 = sub_1C1EAF0B8();
                  int v46 = v37;
                  if (os_log_type_enabled(v36, v37))
                  {
                    uint64_t v38 = (uint8_t *)swift_slowAlloc();
                    uint64_t v45 = swift_slowAlloc();
                    uint64_t v48 = v45;
                    *(_DWORD *)uint64_t v38 = 136446210;
                    v44[1] = v38 + 4;
                    id v39 = objc_msgSend(v35, sel_name);
                    uint64_t v40 = sub_1C1EAED38();
                    unint64_t v42 = v41;

                    uint64_t v47 = sub_1C1DF8D44(v40, v42, &v48);
                    sub_1C1EAF2C8();

                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_1C1DD2000, v36, (os_log_type_t)v46, "A RelevanceFeatureTag was submitted that we do not have logic to decode (or we forgot to write it): %{public}s", v38, 0xCu);
                    uint64_t v43 = v45;
                    swift_arrayDestroy();
                    MEMORY[0x1C874D2E0](v43, -1, -1);
                    MEMORY[0x1C874D2E0](v38, -1, -1);
                  }
                  else
                  {
                  }
                  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
                  return;
                }
              }
              uint64_t v23 = MEMORY[0x1E4F67298];
              uint64_t v24 = MEMORY[0x1E4F67290];
              char v25 = (uint64_t (*)(void))MEMORY[0x1E4F672A8];
              unint64_t v26 = sub_1C1E54E4C;
              goto LABEL_27;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v23 = MEMORY[0x1E4F672D0];
          uint64_t v24 = MEMORY[0x1E4F672C8];
          char v25 = (uint64_t (*)(void))MEMORY[0x1E4F672E0];
          unint64_t v26 = sub_1C1E5504C;
          goto LABEL_27;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v23 = MEMORY[0x1E4F67238];
      uint64_t v24 = MEMORY[0x1E4F67230];
      char v25 = (uint64_t (*)(void))MEMORY[0x1E4F67240];
      unint64_t v26 = sub_1C1E54D34;
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();
  sub_1C1E5D708();
}

unint64_t sub_1C1E5CE58()
{
  unint64_t result = qword_1EBB65360;
  if (!qword_1EBB65360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65360);
  }
  return result;
}

uint64_t sub_1C1E5CEAC(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  v14[5] = a4;
  uint64_t v6 = sub_1C1EAE568();
  v14[6] = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = a1(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v14 - v9;
  uint64_t v11 = sub_1C1EADF88();
  uint64_t v12 = a3(v11);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

uint64_t sub_1C1E5D2E4()
{
  uint64_t v0 = sub_1C1EAE568();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_1C1EADED8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EADF88();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return MEMORY[0x1E4FBC860];
}

void sub_1C1E5D708()
{
  uint64_t v0 = sub_1C1EAE568();
  MEMORY[0x1F4188790](v0);
  sub_1C1E5DFAC();
  sub_1C1EADF88();
  sub_1C1E4DDB8();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1EB04A0;
  id v2 = objc_allocWithZone(MEMORY[0x1E4F94968]);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithGroupIdentifier_, v3);

  if (v4)
  {
    *(void *)(v1 + 32) = v4;
    sub_1C1EAEEB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C1E5DB40(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  v14[5] = a4;
  uint64_t v6 = sub_1C1EAE568();
  v14[6] = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = a1(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v14 - v9;
  sub_1C1EADF88();
  sub_1C1E4DDB8();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1EB04A0;
  *(void *)(v11 + 32) = a3();
  uint64_t v15 = v11;
  sub_1C1EAEEB8();
  uint64_t v12 = v15;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

unint64_t sub_1C1E5DFAC()
{
  unint64_t result = qword_1EBB65368;
  if (!qword_1EBB65368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65368);
  }
  return result;
}

uint64_t sub_1C1E5E000()
{
  uint64_t v1 = sub_1C1EAD368();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 95;
  v8[1] = 0xE100000000000000;
  id v5 = objc_msgSend(*(id *)(v0 + 24), sel_profileIdentifier);
  id v6 = objc_msgSend(v5, sel_identifier);

  sub_1C1EAD348();
  sub_1C1E5F6A0((unint64_t *)&qword_1EBB66150, MEMORY[0x1E4F27990]);
  sub_1C1EAF768();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8[0];
}

id sub_1C1E5E174(void *a1)
{
  uint64_t v2 = sub_1C1EAD368();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94970]), sel_init);
  v11[0] = sub_1C1EAF908();
  v11[1] = v7;
  sub_1C1EAEDB8();
  id v8 = objc_msgSend(a1, sel_identifier);
  sub_1C1EAD348();

  sub_1C1E5F6A0((unint64_t *)&qword_1EBB66150, MEMORY[0x1E4F27990]);
  sub_1C1EAF768();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v9 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setName_, v9);

  objc_msgSend(v6, sel_setEnableExploreExploit_, 0);
  return v6;
}

id sub_1C1E5E350()
{
  static RelevanceEngineCoordinator.makeStandardFeatureTagFeatures()();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F94940]);
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67FA0);
  uint64_t v1 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithFeatures_, v1);

  return v2;
}

uint64_t sub_1C1E5E3E8()
{
  sub_1C1DFC480(0, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1EBB64740);
  uint64_t v2 = __swift_project_value_buffer(v1, (uint64_t)qword_1EBB64740);
  uint64_t v3 = sub_1C1EAD258();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(v2, 1, 1, v3);
}

uint64_t sub_1C1E5E4AC()
{
  uint64_t v0 = sub_1C1EAD258();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_1EBB64BA0);
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBB64BA0);
  id v6 = objc_msgSend(self, sel_defaultManager);
  id v7 = objc_msgSend(v6, sel_temporaryDirectory);

  sub_1C1EAD248();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v4, v0);
}

uint64_t sub_1C1E5E5E0()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ProfileDashboardRelevanceEngineCoordinator()
{
  return self;
}

id sub_1C1E5E664()
{
  return *(id *)(*(void *)v0 + 72);
}

id sub_1C1E5E670()
{
  return *(id *)(*(void *)v0 + 80);
}

id sub_1C1E5E67C()
{
  return *(id *)(*(void *)v0 + 88);
}

uint64_t sub_1C1E5E688()
{
  return sub_1C1E5E000();
}

id sub_1C1E5E6AC()
{
  uint64_t v0 = sub_1C1EADAA8();
  uint64_t v1 = *(void (***)(unint64_t *, void, uint64_t))(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (unint64_t *)((char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F949B8]), sel_init);
  _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
  uint64_t v5 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setName_, v5);

  sub_1C1DFD2C0(0, (unint64_t *)&qword_1EBB660F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1EB1B10;
  if (qword_1EBB680E0 != -1) {
LABEL_14:
  }
    swift_once();
  id v7 = (void *)qword_1EBB6ACF0;
  v1[13](v3, *MEMORY[0x1E4F671F8], v0);
  sub_1C1EADA98();
  ((void (*)(unint64_t *, uint64_t))v1[1])(v3, v0);
  id v8 = v7;
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_conditionForFeature_hasValue_, v8, v9);

  id v12 = objc_msgSend(v10, sel_notCondition_, v11);
  uint64_t v13 = self;
  id v14 = objc_msgSend(v13, sel_trueCondition);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94980]), sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v11, v12, v14, 1);
  swift_bridgeObjectRelease();

  *(void *)(inited + 32) = v15;
  if (qword_1EBB680D0 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1EBB6ACE0;
  id v17 = objc_msgSend(v10, sel_conditionHasValueForFeature_, qword_1EBB6ACE0, v37);
  id v18 = objc_msgSend(v13, sel_conditionForLeftFeature_relation_rightFeature_, v16, 2, v16);
  id v19 = objc_allocWithZone(MEMORY[0x1E4F94980]);
  id v20 = v17;
  uint64_t v1 = (void (**)(unint64_t *, void, uint64_t))objc_msgSend(v19, sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v20, v20, v18, 1);

  *(void *)(inited + 40) = v1;
  if (qword_1EBB64738 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_1EBB6AB90;
  id v22 = objc_msgSend(v10, sel_conditionHasValueForFeature_, qword_1EBB6AB90);
  id v23 = objc_msgSend(v13, sel_conditionForLeftFeature_relation_rightFeature_, v21, 2, v21);
  id v24 = objc_allocWithZone(MEMORY[0x1E4F94980]);
  id v25 = v22;
  id v26 = objc_msgSend(v24, sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v25, v25, v23, -1);

  *(void *)(inited + 48) = v26;
  unint64_t v39 = inited;
  uint64_t v3 = &v39;
  sub_1C1EAEEB8();
  uint64_t v27 = 0;
  uint64_t inited = v39;
  unint64_t v37 = v39 & 0xFFFFFFFFFFFFFF8;
  uint64_t v0 = 6;
  do
  {
    unint64_t v35 = v0 - 4;
    if ((inited & 0xC000000000000001) != 0)
    {
      id v28 = (id)MEMORY[0x1C874C6F0](v35, inited);
    }
    else
    {
      if (v35 >= *(void *)(v37 + 16))
      {
        __break(1u);
        goto LABEL_14;
      }
      id v28 = *(id *)(inited + 8 * v0);
    }
    char v30 = v28;
    uint64_t v31 = v27 + 1;
    *(float *)&double v29 = (float)v27;
    objc_msgSend(v28, sel_setPriority_, v29, v37);
    id v32 = v30;
    id v33 = objc_msgSend(v4, sel_rules);
    sub_1C1DF9F8C(0, &qword_1EBB67F88);
    sub_1C1DF1890();
    uint64_t v34 = sub_1C1EAEF48();

    uint64_t v38 = (unint64_t *)v34;
    sub_1C1DF1254(&v39, v32);

    uint64_t v3 = v38;
    uint64_t v1 = (void (**)(unint64_t *, void, uint64_t))sub_1C1EAEF38();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setRules_, v1);

    --v0;
    uint64_t v27 = v31;
  }
  while (v31 != 3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C1E5EC28(void *a1, uint64_t a2)
{
  sub_1C1DFD2C0(0, (unint64_t *)&qword_1EBB660F8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1EB04A0;
  sub_1C1DFE408(a2, (uint64_t)v12);
  sub_1C1DFD2C0(0, (unint64_t *)&qword_1EBB68280);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C1EB07F0;
  *(void *)(v5 + 32) = a1;
  id v6 = (objc_class *)type metadata accessor for FeedItemREElementDataSource();
  id v7 = (char *)objc_allocWithZone(v6);
  sub_1C1DFE408((uint64_t)v12, (uint64_t)&v7[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_store]);
  *(void *)&v7[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles] = v5;
  v11.receiver = v7;
  v11.super_class = v6;
  id v8 = a1;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  *(void *)(v4 + 32) = v9;
  v12[0] = v4;
  sub_1C1EAEEB8();
  return v12[0];
}

void *sub_1C1E5ED58(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v56 = *v3;
  uint64_t v6 = sub_1C1EAD258();
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v63 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFC480(0, (unint64_t *)&unk_1EBB68298, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  id v60 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v62 = (uint64_t)&v50 - v9;
  uint64_t v61 = sub_1C1EAF188();
  unint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  *(void *)&long long v58 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C1EAF148();
  MEMORY[0x1F4188790](v11);
  unsigned int v57 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C1EAEBD8();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v14 = sub_1C1EAD368();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = a1;
  sub_1C1DFE408(a1, (uint64_t)(v3 + 4));
  v3[3] = (uint64_t)a2;
  uint64_t v55 = sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68388);
  unint64_t v67 = 40;
  unint64_t v68 = 0xE100000000000000;
  id v18 = a2;
  sub_1C1EAF908();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  id v19 = objc_msgSend(v18, sel_profileIdentifier);
  id v20 = objc_msgSend(v19, sel_identifier);

  sub_1C1EAD348();
  uint64_t v54 = sub_1C1E5F6A0((unint64_t *)&qword_1EBB66150, MEMORY[0x1E4F27990]);
  uint64_t v51 = v14;
  sub_1C1EAF768();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v52 = v15 + 8;
  uint64_t v53 = v21;
  v21(v17, v14);
  sub_1C1EAEB98();
  unint64_t v67 = MEMORY[0x1E4FBC860];
  sub_1C1E5F6A0(&qword_1EBB68380, MEMORY[0x1E4FBCC10]);
  sub_1C1DFC480(0, &qword_1EBB68368, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C1DE8930();
  sub_1C1EAF328();
  (*(void (**)(void, void, uint64_t))(v59 + 104))(v58, *MEMORY[0x1E4FBCC58], v61);
  v3[2] = sub_1C1EAF1A8();
  id v22 = objc_msgSend(v18, sel_profileIdentifier);
  id v23 = sub_1C1E5E174(v22);

  uint64_t v61 = (uint64_t)v3;
  v3[11] = (uint64_t)v23;
  id v24 = v18;
  unint64_t v67 = 0;
  unint64_t v68 = 0xE000000000000000;
  sub_1C1EAF4A8();
  swift_bridgeObjectRelease();
  unint64_t v67 = 0xD000000000000011;
  unint64_t v68 = 0x80000001C1EB5390;
  id v25 = objc_msgSend(v18, sel_profileIdentifier);
  id v26 = objc_msgSend(v25, sel_identifier);

  sub_1C1EAD348();
  uint64_t v27 = v51;
  sub_1C1EAF768();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  v53(v17, v27);
  sub_1C1EAEDB8();
  uint64_t v28 = v68;
  unint64_t v59 = v67;
  if (qword_1EBB64B98 != -1) {
    swift_once();
  }
  uint64_t v29 = __swift_project_value_buffer((uint64_t)v60, (uint64_t)qword_1EBB64740);
  sub_1C1DD490C(v29, v62);
  if (qword_1EBB64BC0 != -1) {
    swift_once();
  }
  uint64_t v30 = v65;
  uint64_t v31 = __swift_project_value_buffer(v65, (uint64_t)qword_1EBB64BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v63, v31, v30);
  id v60 = sub_1C1E5E350();
  sub_1C1DFD2C0(0, (unint64_t *)&qword_1EBB660F8);
  uint64_t inited = swift_initStackObject();
  long long v58 = xmmword_1C1EB04A0;
  *(_OWORD *)(inited + 16) = xmmword_1C1EB04A0;
  *(void *)(inited + 32) = sub_1C1E5E6AC();
  unint64_t v67 = inited;
  sub_1C1EAEEB8();
  unint64_t v33 = v67;
  id v34 = objc_msgSend(v24, (SEL)&selRef_unifiedContactWithIdentifier_keysToFetch_error_);
  uint64_t v35 = sub_1C1E5EC28(v34, v66);

  sub_1C1E15F88();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1C1EB07F0;
  *(void *)(v36 + 32) = type metadata accessor for DateRangeRelevanceProviderManager();
  uint64_t v37 = swift_initStackObject();
  *(_OWORD *)(v37 + 16) = v58;
  uint64_t v38 = (void *)v61;
  unint64_t v39 = *(void **)(v61 + 88);
  *(void *)(v37 + 32) = v39;
  unint64_t v67 = v37;
  sub_1C1EAEEB8();
  unint64_t v40 = v67;
  uint64_t v41 = v38[2];
  id v42 = v39;
  uint64_t v49 = v41;
  id v43 = v60;
  uint64_t v45 = v62;
  uint64_t v44 = v63;
  int v46 = (void *)static RelevanceEngineCoordinator.instantiateEngine(engineName:modelVersion:pretrainedModelURL:modelURL:primaryFeatures:feedSections:dataSources:relevanceProviderManagerClasses:metricsRecorder:interactionDescriptors:observerQueue:)(v59, v28, 0, v62, v63, (uint64_t)v60, v33, v35, v36, 0, v40, v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v44, v65);
  sub_1C1DD5EAC(v45);
  v38[9] = v46;
  id v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F949C8]), sel_init);
  objc_msgSend(v46, sel_addTrainingContext_, v47);
  objc_msgSend(v47, sel_becomeCurrent);
  __swift_destroy_boxed_opaque_existential_1(v66);
  v38[10] = v47;
  return v38;
}

uint64_t sub_1C1E5F6A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Generator.eraseToAnyGenerator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  v23[0] = sub_1C1EAD9C8();
  uint64_t v7 = *(void *)(v23[0] - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v23[0]);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v3, a1);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, v13, a1);
  sub_1C1EAE358();
  v23[1] = swift_getDynamicType();
  swift_getMetatypeMetadata();
  uint64_t v16 = sub_1C1EAED68();
  uint64_t v18 = v17;
  *a3 = sub_1C1E5FA04;
  a3[1] = (uint64_t (*)())v15;
  sub_1C1DFB930(0, &qword_1EBB676F8, (void (*)(uint64_t))sub_1C1E1A804);
  uint64_t v20 = v19;
  uint64_t result = (*(uint64_t (**)(char *, char *, void))(v7 + 32))((char *)a3 + *(int *)(v19 + 44), v10, v23[0]);
  id v22 = (uint64_t *)((char *)a3 + *(int *)(v20 + 48));
  *id v22 = v16;
  v22[1] = v18;
  return result;
}

uint64_t AnyGenerator.domain.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 44);
  uint64_t v5 = sub_1C1EAD9C8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t AnyGenerator.wrappedTypeName.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AnyGenerator.publisher.getter()
{
  return (*v0)();
}

uint64_t sub_1C1E5FA04()
{
  return sub_1C1DF3DE4(MEMORY[0x1E4F67508]);
}

uint64_t type metadata accessor for AnyGenerator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C1E5FA38(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_1C1E5FA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1C1E5FA48()
{
  uint64_t result = sub_1C1EAD9C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1C1E5FAEC(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = v5;
    a1[1] = v8;
    uint64_t v9 = *(int *)(a3 + 44);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1C1EAD9C8();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(a3 + 48);
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *sub_1C1E5FBFC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1EAD9C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 48);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1C1E5FCC4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1EAD9C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 48));
  return a1;
}

_OWORD *sub_1C1E5FD5C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1EAD9C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 48);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1E5FE0C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1EAD9C8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

void *sub_1C1E5FEBC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1EAD9C8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 44);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C1E5FF68@<X0>(uint64_t a1@<X8>)
{
  sub_1C1DF7614(0, qword_1EBB678D8, (uint64_t (*)(uint64_t))sub_1C1E15248, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

BOOL sub_1C1E60004(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 16) != 0;
}

uint64_t sub_1C1E60018@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_1C1E60024(void *a1)
{
  uint64_t v11 = a1;
  sub_1C1DF9F8C(0, &qword_1EBB68248);
  sub_1C1DF9148(0, &qword_1EBB65B50);
  id v3 = a1;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_1C1E60B80((uint64_t)v9);
    return 0;
  }
  sub_1C1DFE46C(v9, (uint64_t)v12);
  __swift_project_boxed_opaque_existential_1(v12, v13);
  if ((sub_1C1E57618() & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return 0;
  }
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for HealthExperienceStoreCoreSpotlightDelegate();
  id v4 = objc_msgSendSuper2(&v8, sel_attributeSetForObject_, v3);
  if (v4)
  {
    uint64_t v5 = v4;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    sub_1C1E57DD4(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return (uint64_t)v5;
  }
  *(void *)&v9[0] = 0;
  *((void *)&v9[0] + 1) = 0xE000000000000000;
  sub_1C1EAF4A8();
  swift_bridgeObjectRelease();
  *(void *)&v9[0] = 0xD00000000000002FLL;
  *((void *)&v9[0] + 1) = 0x80000001C1EB5440;
  id v7 = objc_msgSend(v3, sel_description);
  sub_1C1EAED38();

  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C1EAF628();
  __break(1u);
  return result;
}

void sub_1C1E6026C()
{
  unint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1C1EAE568();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE538();
  id v7 = sub_1C1EAE558();
  os_log_type_t v8 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v18 = v1;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v19 = ObjectType;
    uint64_t v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    aBlock[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = sub_1C1EAF908();
    uint64_t v20 = sub_1C1DF8D44(v12, v13, aBlock);
    sub_1C1EAF2C8();
    unint64_t v1 = v18;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v7, v8, "[%s] Deleting all searchable items in index", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v11, -1, -1);
    uint64_t v14 = v10;
    uint64_t ObjectType = v19;
    MEMORY[0x1C874D2E0](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = ObjectType;
  aBlock[4] = (uint64_t)sub_1C1E60EC8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C1E608C4;
  aBlock[3] = (uint64_t)&block_descriptor_4;
  uint64_t v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v1, sel_deleteSpotlightIndexWithCompletionHandler_, v16);
  _Block_release(v16);
}

uint64_t sub_1C1E60500(void *a1)
{
  uint64_t v2 = sub_1C1EAE568();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  os_log_type_t v8 = (char *)&v28 - v7;
  if (a1)
  {
    id v9 = a1;
    sub_1C1EAE538();
    id v10 = a1;
    id v11 = a1;
    uint64_t v12 = sub_1C1EAE558();
    os_log_type_t v13 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v29 = v15;
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v16 = sub_1C1EAF908();
      uint64_t v28 = sub_1C1DF8D44(v16, v17, &v29);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      uint64_t v28 = (uint64_t)a1;
      id v18 = a1;
      sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
      uint64_t v19 = sub_1C1EAED78();
      uint64_t v28 = sub_1C1DF8D44(v19, v20, &v29);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1DD2000, v12, v13, "[%s] Failed to delete all searchable items: %{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v15, -1, -1);
      MEMORY[0x1C874D2E0](v14, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    sub_1C1EAE538();
    uint64_t v21 = sub_1C1EAE558();
    os_log_type_t v22 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v29 = v24;
      *(_DWORD *)id v23 = 136315138;
      uint64_t v25 = sub_1C1EAF908();
      uint64_t v28 = sub_1C1DF8D44(v25, v26, &v29);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v21, v22, "[%s] Great success, we were able to delete all of the searchable items from our index", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v24, -1, -1);
      MEMORY[0x1C874D2E0](v23, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
}

void sub_1C1E608C4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

id HealthExperienceStoreCoreSpotlightDelegate.__allocating_init(forStoreWith:coordinator:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initForStoreWithDescription_coordinator_, a1, a2);

  return v5;
}

id HealthExperienceStoreCoreSpotlightDelegate.init(forStoreWith:coordinator:)(void *a1, void *a2)
{
  id v4 = sub_1C1DDAC08((uint64_t)a1, (uint64_t)a2);

  return v4;
}

id HealthExperienceStoreCoreSpotlightDelegate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthExperienceStoreCoreSpotlightDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1C1E60ACC(uint64_t a1)
{
  uint64_t v2 = sub_1C1EAF428();
  return sub_1C1E60CB0(a1, v2);
}

uint64_t sub_1C1E60B10(uint64_t a1)
{
  sub_1C1DE7D6C(0, (unint64_t *)&qword_1EBB683C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1E60B80(uint64_t a1)
{
  sub_1C1E60BDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1E60BDC()
{
  if (!qword_1EA2C14F0)
  {
    sub_1C1DF9148(255, &qword_1EBB65B50);
    unint64_t v0 = sub_1C1EAF2A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C14F0);
    }
  }
}

unint64_t sub_1C1E60C44(uint64_t a1)
{
  sub_1C1EAF828();
  sub_1C1EAD7D8();
  uint64_t v2 = sub_1C1EAF858();
  return sub_1C1E60D78(a1, v2);
}

unint64_t sub_1C1E60CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1C1E60ED0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1C874C650](v9, a1);
      sub_1C1E1F850((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1C1E60D78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1C1EAD7C8();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1C1EAD7C8();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_1C1E60E7C()
{
  return type metadata accessor for HealthExperienceStoreCoreSpotlightDelegate();
}

uint64_t dispatch thunk of HealthExperienceStoreCoreSpotlightDelegate.setUp(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t sub_1C1E60EB8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E60EC8(void *a1)
{
  return sub_1C1E60500(a1);
}

uint64_t sub_1C1E60ED0(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C1E60F2C()
{
  sub_1C1EADF38();
  sub_1C1EADC68();
  uint64_t v0 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_featureWithName_featureType_, v0, 2);

  qword_1EBB6AD18 = (uint64_t)v1;
}

uint64_t sub_1C1E60FAC()
{
  if (qword_1EBB68110 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C1E865E8(5);
  qword_1EBB6AD10 = result;
  return result;
}

void sub_1C1E61010()
{
  sub_1C1E4DDB8();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1EB04A0;
  id v1 = self;
  if (qword_1EBB68110 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EBB6AD18;
  sub_1C1EADF38();
  id v3 = v2;
  sub_1C1EADC78();
  id v4 = objc_msgSend(self, sel_featureValueWithDouble_, v6);
  id v5 = objc_msgSend(v1, sel_customRelevanceProviderForFeature_withValue_, v3, v4);

  if (v5)
  {
    *(void *)(v0 + 32) = v5;
    sub_1C1EAEEB8();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C1E61154(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  sub_1C1E66A84(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DFB68C();
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1C1DF9030(a1, (uint64_t (*)(void))sub_1C1E66A84);
    sub_1C1DEB20C(a2, (uint64_t (*)(void))sub_1C1DFB68C, (void (*)(unint64_t, uint64_t))sub_1C1E667CC, (void (*)(unint64_t, uint64_t))sub_1C1E933FC, (void (*)(void))sub_1C1E9F88C, (uint64_t)v8);
    uint64_t v13 = sub_1C1EAD368();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_1C1DF9030((uint64_t)v8, (uint64_t (*)(void))sub_1C1E66A84);
  }
  else
  {
    sub_1C1E667CC(a1, (uint64_t)v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *id v3 = 0x8000000000000000;
    sub_1C1E65590((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *id v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1C1EAD368();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1C1E613B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v19[0] = a4;
  sub_1C1DFB68C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = a3;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  sub_1C1E66034(a1, (uint64_t)v10);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = a2;
  sub_1C1E667CC((uint64_t)v10, v13 + v12);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  sub_1C1E66034(a1, (uint64_t)v10);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a2;
  sub_1C1E667CC((uint64_t)v10, v15 + v12);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1C1E66A24;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1C1E0BF98(0, (unint64_t *)&qword_1EBB66F30, (unint64_t *)&qword_1EBB66FA8, MEMORY[0x1E4F67380], MEMORY[0x1E4F1AAE0]);
  sub_1C1E65EFC(&qword_1EBB66F28, (unint64_t *)&qword_1EBB66F30, v17);
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1C1EAEA58();
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1C1E61674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C1E6604C(a1, a3);
  sub_1C1DFC5AC(0);
  uint64_t v6 = v5;
  uint64_t v7 = a2 + *(int *)(v5 + 28);
  sub_1C1DFB68C();
  uint64_t v9 = v8;
  sub_1C1DFE408(v7, a3 + *(int *)(v8 + 28));
  uint64_t v10 = a2 + *(int *)(v6 + 32);
  uint64_t v11 = a3 + *(int *)(v9 + 32);
  uint64_t v12 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
  return sub_1C1EAD358();
}

uint64_t sub_1C1E61738(uint64_t (**a1)(uint64_t))
{
  uint64_t v49 = a1;
  sub_1C1DF9BC8(0, &qword_1EBB650E0, (uint64_t (*)(uint64_t))sub_1C1DFB308, MEMORY[0x1E4F1AC18]);
  uint64_t v2 = v1;
  uint64_t v48 = *(const char **)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)v42 - v3;
  uint64_t v5 = sub_1C1EAD6A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E0BF98(0, &qword_1EBB676F8, (unint64_t *)&qword_1EBB66FA8, MEMORY[0x1E4F67380], (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for AnyGenerator);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v42 - v10;
  uint64_t v12 = sub_1C1EAE4C8();
  uint64_t v50 = *(void *)(v12 - 8);
  uint64_t v51 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    id v17 = (id)_HKLogPersistedSignposts();
    swift_retain();
    id v47 = v14;
    sub_1C1EAE4A8();
    sub_1C1DFB68C();
    uint64_t v19 = v49;
    unint64_t v20 = (uint64_t (**)(uint64_t))((char *)v49 + *(int *)(v18 + 28));
    uint64_t v21 = v20[3];
    __swift_project_boxed_opaque_existential_1(v20, v21);
    uint64_t v48 = sub_1C1DF3EC4(v21);
    uint64_t v46 = v22;
    int v45 = v23;
    uint64_t v52 = 0x6F746172656E6547;
    unint64_t v53 = 0xEB00000000203A72;
    sub_1C1E6604C((uint64_t)v19, (uint64_t)v11);
    sub_1C1EAED68();
    sub_1C1EAEDB8();
    swift_bridgeObjectRelease();
    unint64_t v43 = v53;
    uint64_t v44 = v52;
    v42[1] = sub_1C1EAF0D8();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F67068], v5);
    uint64_t v24 = (void *)sub_1C1EAD698();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C1DF32F0();
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C1EB1480;
    __swift_project_boxed_opaque_existential_1(v20, v20[3]);
    uint64_t v26 = sub_1C1EAD5B8();
    uint64_t v28 = v27;
    uint64_t v29 = MEMORY[0x1E4FBB1A0];
    *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v30 = sub_1C1DF2A98();
    *(void *)(v25 + 64) = v30;
    *(void *)(v25 + 32) = v26;
    *(void *)(v25 + 40) = v28;
    sub_1C1E6604C((uint64_t)v19, (uint64_t)v11);
    uint64_t v31 = sub_1C1EAED68();
    *(void *)(v25 + 96) = v29;
    *(void *)(v25 + 104) = v30;
    *(void *)(v25 + 72) = v31;
    *(void *)(v25 + 80) = v32;
    unint64_t v33 = (void *)sub_1C1EAD9A8();
    uint64_t v34 = sub_1C1EAD798();
    uint64_t v36 = v35;

    *(void *)(v25 + 136) = v29;
    *(void *)(v25 + 144) = v30;
    *(void *)(v25 + 112) = v34;
    *(void *)(v25 + 120) = v36;
    sub_1C1EAE488();

    uint64_t v37 = swift_bridgeObjectRelease();
    uint64_t v38 = (void *)MEMORY[0x1C874CBD0](v37);
    uint64_t v39 = (uint64_t)v47;
    uint64_t v40 = sub_1C1E61C8C(v19, v16, (uint64_t)v48, v46, v45, (uint64_t)v47, v44, v43);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v39, v51);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C1DFB308();
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    sub_1C1EAE8C8();
    sub_1C1E66208();
    uint64_t v40 = sub_1C1EAEA38();
    (*((void (**)(char *, uint64_t))v48 + 1))(v4, v2);
  }
  return v40;
}

uint64_t sub_1C1E61C8C(uint64_t (**a1)(uint64_t), void *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v75 = a7;
  uint64_t v71 = a8;
  uint64_t v72 = a3;
  uint64_t v69 = a6;
  int v74 = a5;
  uint64_t v73 = a4;
  uint64_t v76 = a2;
  sub_1C1E00194(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v70 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v68 = (char *)&v58 - v12;
  sub_1C1DFB68C();
  uint64_t v58 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v58 + 64);
  MEMORY[0x1F4188790](v13 - 8);
  sub_1C1E66314();
  uint64_t v59 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E663D8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v60 = v19;
  uint64_t v61 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF9C54(0, &qword_1EBB64F50, (uint64_t (*)(uint64_t))sub_1C1E663D8, sub_1C1E66484, MEMORY[0x1E4F1AA60]);
  uint64_t v64 = *(void *)(v23 - 8);
  uint64_t v65 = v23;
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v63 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v58 - v26;
  sub_1C1E664B8();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v66 = v28;
  uint64_t v67 = v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v62 = (char *)&v58 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = (*a1)(v30);
  sub_1C1DFB710(0);
  uint64_t v77 = v33;
  uint64_t v78 = sub_1C1DF9B3C(&qword_1EBB67718, sub_1C1DFB710);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1C1E613B8((uint64_t)a1, KeyPath, v32, (uint64_t)v18);
  swift_release();
  swift_release();
  sub_1C1E66034((uint64_t)a1, (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v35 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  uint64_t v36 = swift_allocObject();
  sub_1C1E667CC((uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v35);
  sub_1C1DFB308();
  sub_1C1DF9B3C(&qword_1EBB66E38, (void (*)(uint64_t))sub_1C1E66314);
  uint64_t v37 = v59;
  sub_1C1EAEA68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v37);
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  sub_1C1E66484();
  uint64_t v38 = v60;
  sub_1C1EAEB08();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v22, v38);
  id v39 = (id)_HKLogPersistedSignposts();
  uint64_t v40 = sub_1C1EAE4C8();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v68, v69, v40);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
  uint64_t v43 = v64;
  uint64_t v44 = v65;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v63, v27, v65);
  sub_1C1DF8AE0(v42, v70, (uint64_t (*)(void))sub_1C1E00194);
  sub_1C1E66560();
  swift_bridgeObjectRetain();
  int v45 = v62;
  sub_1C1EAE5F8();
  sub_1C1DF9030(v42, (uint64_t (*)(void))sub_1C1E00194);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v44);
  sub_1C1DF9B3C(&qword_1EBB657D0, (void (*)(uint64_t))sub_1C1E664B8);
  uint64_t v46 = v66;
  uint64_t v47 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v46);
  uint64_t v48 = v76[23];
  uint64_t v49 = v76[24];
  __swift_project_boxed_opaque_existential_1(v76 + 20, v48);
  uint64_t v79 = v47;
  sub_1C1E0BF98(0, &qword_1EBB676F8, (unint64_t *)&qword_1EBB66FA8, MEMORY[0x1E4F67380], (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for AnyGenerator);
  uint64_t v51 = (char *)a1 + *(int *)(v50 + 44);
  uint64_t v52 = *(uint64_t (**)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 48);
  sub_1C1DF91CC(0);
  uint64_t v54 = v53;
  uint64_t v55 = sub_1C1DF9B3C((unint64_t *)&qword_1EBB65018, sub_1C1DF91CC);
  uint64_t v56 = v52(&v79, v51, v54, v55, v48, v49);
  swift_release();
  return v56;
}

uint64_t sub_1C1E6248C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v62 = a6;
  uint64_t v63 = a7;
  uint64_t v65 = a4;
  sub_1C1E14CAC(0, &qword_1EBB65980, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AC18]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v52 - v12;
  sub_1C1E13568();
  uint64_t v56 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E13634();
  uint64_t v58 = *(void *)(v17 - 8);
  uint64_t v59 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E134B4();
  uint64_t v21 = v20;
  uint64_t v61 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v60 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v55 = v21;
  uint64_t v24 = a5;
  uint64_t v64 = Strong;
  uint64_t v25 = (void *)sub_1C1EAF058();
  uint64_t v26 = (void *)sub_1C1EAD778();

  if (!v26)
  {
    swift_release();
LABEL_8:
    sub_1C1E15248(0);
    sub_1C1EAE8C8();
    sub_1C1E67044();
    uint64_t v30 = sub_1C1EAEA38();
LABEL_9:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v30;
  }
  id v27 = objc_msgSend(v26, sel_type);
  if (v27 != (id)1)
  {
    if (v27 == (id)2)
    {
      __swift_project_boxed_opaque_existential_1(v65, v65[3]);
      uint64_t v65 = v26;
      uint64_t v62 = sub_1C1EAD5B8();
      uint64_t v53 = v32;
      uint64_t v33 = sub_1C1EAE088();
      uint64_t v34 = sub_1C1EAE098();
      uint64_t v66 = v24;
      uint64_t v54 = v24;
      uint64_t v35 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v36 = (void *)swift_allocObject();
      uint64_t v37 = v62;
      v36[2] = v35;
      v36[3] = v37;
      uint64_t v36[4] = v53;
      v36[5] = v33;
      uint64_t v63 = v33;
      v36[6] = v34;
      uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
      sub_1C1DFEB90(0, &qword_1EBB65080, MEMORY[0x1E4F1AAE0]);
      uint64_t v62 = v39;
      sub_1C1E14FFC();
      uint64_t v52 = v40;
      sub_1C1DFEE5C(&qword_1EBB65078, &qword_1EBB65080, v38);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C1EAEA68();
      swift_release();
      uint64_t v41 = sub_1C1DF9B3C(&qword_1EBB64E38, (void (*)(uint64_t))sub_1C1E13568);
      uint64_t v42 = sub_1C1DF9B3C(&qword_1EBB67D30, (void (*)(uint64_t))sub_1C1E14FFC);
      uint64_t v43 = v57;
      MEMORY[0x1C874BC40](v57, v41, v42);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v43);
      sub_1C1DF9B3C((unint64_t *)&qword_1EBB64D90, (void (*)(uint64_t))sub_1C1E13634);
      uint64_t v44 = v59;
      uint64_t v45 = sub_1C1EAEA38();
      swift_release();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v19, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v66 = v45;
      uint64_t v46 = sub_1C1EAE948();
      swift_release();
      uint64_t v66 = v46;
      sub_1C1DF9BC8(0, &qword_1EBB65060, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AAE0]);
      uint64_t v48 = v47;
      unint64_t v49 = sub_1C1E493C4();
      uint64_t v50 = v60;
      sub_1C1EAE918();
      swift_release();
      uint64_t v66 = v48;
      unint64_t v67 = v49;
      swift_getOpaqueTypeConformance2();
      uint64_t v51 = v55;
      uint64_t v30 = sub_1C1EAEA38();

      swift_release();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v50, v51);
      return v30;
    }
    if (v27 != (id)3)
    {
      sub_1C1E15248(0);
      sub_1C1EAE8C8();
      sub_1C1E67044();
      uint64_t v30 = sub_1C1EAEA38();

      swift_release();
      goto LABEL_9;
    }
  }
  uint64_t v28 = sub_1C1EAE088();
  uint64_t v29 = sub_1C1EAE098();
  uint64_t v30 = sub_1C1E13F58(a3, v65, v28, v29, v24, v62, v63, (uint64_t)&unk_1F1D676A8);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1C1E62C44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + *(int *)(v3 + 28)), *(void *)(a1 + *(int *)(v3 + 28) + 24));
  sub_1C1EAD5B8();
  sub_1C1E4BB04();
  uint64_t v4 = sub_1C1EAF2E8();
  swift_bridgeObjectRelease();
  if (*(void *)(v4 + 16)) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  return 0x3D6E6967756C70;
}

uint64_t sub_1C1E62D58()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  swift_release();
  return v0;
}

uint64_t sub_1C1E62DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1DFB68C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1E66034(a4, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a3;
    sub_1C1E667CC((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
    swift_retain();
    sub_1C1E07024((uint64_t)sub_1C1E66C94, v11, (uint64_t)&unk_1F1D66D48, (uint64_t)&unk_1F1D66ED8, (uint64_t)sub_1C1DF5094, (uint64_t)&block_descriptor_5);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1E62F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C1DF92F4(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1E01808(a3, (uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a2;
    sub_1C1E07A18((uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
    swift_retain();
    sub_1C1E07024((uint64_t)sub_1C1E67B2C, v10, (uint64_t)&unk_1F1D672C0, (uint64_t)&unk_1F1D67450, (uint64_t)sub_1C1DF5FC8, (uint64_t)&block_descriptor_206);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1E630C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C1DFB68C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1E66034(a3, (uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a2;
    sub_1C1E667CC((uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
    swift_retain();
    sub_1C1E07024((uint64_t)sub_1C1E66A54, v10, (uint64_t)&unk_1F1D66D48, (uint64_t)&unk_1F1D66ED8, (uint64_t)sub_1C1DF5094, (uint64_t)&block_descriptor_5);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1E63238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C1DFC5AC(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1DF8CF0(a3, (uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a2;
    sub_1C1DF7CBC((uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
    swift_retain();
    sub_1C1E07024((uint64_t)sub_1C1E196F8, v10, (uint64_t)&unk_1F1D66D48, (uint64_t)&unk_1F1D66ED8, (uint64_t)sub_1C1DF5094, (uint64_t)&block_descriptor_5);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1E633B0()
{
  return sub_1C1E63418((uint64_t (*)(void))sub_1C1E0D080, &qword_1EBB65040, sub_1C1E0D080);
}

uint64_t sub_1C1E633E4()
{
  return sub_1C1E63418((uint64_t (*)(void))sub_1C1DF91CC, &qword_1EBB65028, sub_1C1DF91CC);
}

uint64_t sub_1C1E63418(uint64_t (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v6 = sub_1C1EAE568();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE4F8();
  uint64_t v10 = sub_1C1EAE558();
  os_log_type_t v11 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v19 = v6;
    uint64_t v12 = a3;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v21 = v14;
    *(_DWORD *)uint64_t v13 = 136446210;
    uint64_t v18 = v13 + 4;
    uint64_t v20 = a1(0);
    sub_1C1E09A34(0, a2, v12);
    uint64_t v15 = sub_1C1EAED68();
    uint64_t v20 = sub_1C1DF8D44(v15, v16, &v21);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v10, v11, "[%{public}s]: cancellation received for generation", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v14, -1, -1);
    MEMORY[0x1C874D2E0](v13, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1C1E63638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v44 = a3;
  uint64_t v56 = a2;
  sub_1C1DFC68C(0);
  uint64_t v57 = v5;
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v54 = *(void *)(v55 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v53 = (uint64_t)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF7678(0, &qword_1EBB65428, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AC08]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  os_log_type_t v11 = (char *)v42 - v10;
  uint64_t v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F674B0];
  sub_1C1DF9BC8(0, &qword_1EBB654D8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1ACE0]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)v42 - v15;
  sub_1C1E65CF0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v45 = v17;
  uint64_t v46 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E65D84();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v47 = v21;
  uint64_t v48 = v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DEE914();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v51 = v25;
  uint64_t v52 = v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v50 = (char *)v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = a1;
  v42[0] = sub_1C1EAE0B8();
  swift_retain();
  sub_1C1EAE8B8();
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  sub_1C1EAE888();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1C1E14EC0();
  uint64_t v28 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v58 = v28;
  uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C1DF9BC8(0, &qword_1EBB653F8, v43, MEMORY[0x1E4F1AAE0]);
  v42[1] = v30;
  uint64_t v43 = (uint64_t (*)(uint64_t))sub_1C1DEE7AC();
  uint64_t v31 = sub_1C1EAE9D8();
  swift_release();
  uint64_t v58 = v31;
  sub_1C1DF9BC8(0, &qword_1EBB67D08, (uint64_t (*)(uint64_t))sub_1C1E65C28, v29);
  sub_1C1DEE7E0();
  sub_1C1EAEAA8();
  swift_release();
  sub_1C1DF9B3C(&qword_1EBB65A40, (void (*)(uint64_t))sub_1C1E65CF0);
  swift_retain();
  uint64_t v32 = v45;
  sub_1C1EAEA68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v32);
  sub_1C1DF9B3C(&qword_1EA2C1538, (void (*)(uint64_t))sub_1C1E65D84);
  uint64_t v33 = v47;
  uint64_t v34 = sub_1C1EAE998();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v33);
  uint64_t v58 = v34;
  uint64_t v35 = v53;
  sub_1C1DF8AE0(v56, v53, (uint64_t (*)(void))sub_1C1DFC68C);
  unint64_t v36 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1C1DF7C54(v35, v37 + v36, (uint64_t (*)(void))sub_1C1DFC68C);
  uint64_t v38 = v50;
  sub_1C1EAEA68();
  swift_release();
  swift_release();
  sub_1C1DF9B3C(&qword_1EA2C1528, (void (*)(uint64_t))sub_1C1DEE914);
  uint64_t v39 = v51;
  uint64_t v40 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v39);
  return v40;
}

uint64_t sub_1C1E63D48()
{
  uint64_t result = sub_1C1E6EDC4((uint64_t)&unk_1F1D65188);
  qword_1EBB65678 = result;
  return result;
}

uint64_t sub_1C1E63D70(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 248) = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C1E63DD0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 248) = a1;
  return swift_release();
}

uint64_t (*sub_1C1E63E18())()
{
  return j__swift_endAccess;
}

unint64_t sub_1C1E63E6C()
{
  unint64_t result = qword_1EA2C14F8;
  if (!qword_1EA2C14F8)
  {
    sub_1C1E14CAC(255, &qword_1EBB650B8, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1AB88]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C14F8);
  }
  return result;
}

uint64_t sub_1C1E63EF4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E63F04@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v57 = a4;
  sub_1C1DFC68C(0);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v61 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DE4C98(0);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v63 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF9BC8(0, &qword_1EBB65170, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1ACE0]);
  uint64_t v64 = v16;
  uint64_t v62 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v60 = (char *)&v51 - v17;
  uint64_t v18 = sub_1C1EAE568();
  uint64_t v58 = *(void *)(v18 - 8);
  uint64_t v59 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  sub_1C1EAE4F8();
  id v22 = a2;
  id v23 = v21;
  id v24 = v22;
  id v25 = v21;
  uint64_t v26 = sub_1C1EAE558();
  os_log_type_t v27 = sub_1C1EAF0B8();
  int v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v56 = a5;
    uint64_t v30 = v29;
    uint64_t v53 = swift_slowAlloc();
    uint64_t v66 = v53;
    *(_DWORD *)uint64_t v30 = 136315650;
    int v52 = v28;
    uint64_t v31 = sub_1C1EAF908();
    uint64_t v54 = v10;
    uint64_t v65 = sub_1C1DF8D44(v31, v32, &v66);
    uint64_t v55 = v14;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2080;
    id v33 = v24;
    id v34 = objc_msgSend(v33, sel_description);
    uint64_t v35 = sub_1C1EAED38();
    uint64_t v57 = v13;
    uint64_t v36 = v35;
    os_log_t v51 = v26;
    uint64_t v37 = a3;
    unint64_t v39 = v38;

    uint64_t v65 = sub_1C1DF8D44(v36, v39, &v66);
    uint64_t v14 = v55;
    sub_1C1EAF2C8();

    a3 = v37;
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 22) = 2082;
    uint64_t v65 = (uint64_t)v21;
    id v40 = v21;
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    uint64_t v41 = sub_1C1EAED68();
    uint64_t v65 = sub_1C1DF8D44(v41, v42, &v66);
    uint64_t v13 = v57;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();

    os_log_t v43 = v51;
    _os_log_impl(&dword_1C1DD2000, v51, (os_log_type_t)v52, "%s Unable to find transaction builder for %s: %{public}s", (uint8_t *)v30, 0x20u);
    uint64_t v44 = v53;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v44, -1, -1);
    uint64_t v45 = v30;
    a5 = v56;
    MEMORY[0x1C874D2E0](v45, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v58 + 8))(v20, v59);
  sub_1C1DF8AE0(a3, v61, (uint64_t (*)(void))sub_1C1DFC68C);
  uint64_t v46 = v63;
  sub_1C1EAE8B8();
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  uint64_t v47 = v60;
  sub_1C1EAE888();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v46, v13);
  sub_1C1E6728C();
  uint64_t v48 = v64;
  uint64_t v49 = sub_1C1EAEA38();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v47, v48);
  *a5 = v49;
  return result;
}

uint64_t sub_1C1E64490@<X0>(void **a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v59 = a4;
  uint64_t v67 = a3;
  uint64_t v64 = a2;
  sub_1C1E65B24(0);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF7678(0, &qword_1EBB65428, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AC08]);
  uint64_t v65 = *(void *)(v12 - 8);
  uint64_t v66 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v61 = (char *)&v56 - v13;
  sub_1C1DF9BC8(0, &qword_1EBB654D8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1ACE0]);
  uint64_t v62 = *(void *)(v14 - 8);
  uint64_t v63 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v60 = (char *)&v56 - v15;
  sub_1C1DF9BC8(0, &qword_1EA2C1508, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1ABF8]);
  uint64_t v57 = *(void *)(v16 - 8);
  uint64_t v58 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v56 = (char *)&v56 - v17;
  uint64_t v71 = sub_1C1EAE568();
  uint64_t v18 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  sub_1C1EAE4F8();
  id v22 = v21;
  id v23 = v21;
  id v24 = sub_1C1EAE558();
  os_log_type_t v25 = sub_1C1EAF0B8();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v72 = a5;
  uint64_t v69 = v9;
  uint64_t v70 = v8;
  unint64_t v68 = v11;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v74[0] = v28;
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v29 = sub_1C1EAF908();
    uint64_t v73 = sub_1C1DF8D44(v29, v30, v74);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    uint64_t v73 = (uint64_t)v21;
    id v31 = v21;
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    uint64_t v32 = sub_1C1EAED78();
    uint64_t v73 = sub_1C1DF8D44(v32, v33, v74);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1DD2000, v24, v25, "[%{public}s]: Transaction Publisher Error: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v28, -1, -1);
    MEMORY[0x1C874D2E0](v27, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v71);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v35 = (void *)Strong;
    sub_1C1DFC68C(0);
    uint64_t v71 = v36;
    sub_1C1E64E30(v21);
    uint64_t v73 = v67;
    sub_1C1EAE0B8();
    swift_retain();
    uint64_t v37 = v61;
    sub_1C1EAE8B8();
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    unint64_t v38 = v60;
    uint64_t v39 = v66;
    sub_1C1EAE888();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v37, v39);
    sub_1C1E14EC0();
    uint64_t v40 = v63;
    uint64_t v41 = sub_1C1EAE9B8();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v38, v40);
    uint64_t v42 = v35[23];
    uint64_t v43 = v35[24];
    __swift_project_boxed_opaque_existential_1(v35 + 20, v42);
    uint64_t v73 = v41;
    uint64_t v44 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 32);
    sub_1C1DF9BC8(0, &qword_1EBB653F8, MEMORY[0x1E4F674B0], MEMORY[0x1E4F1AAE0]);
    uint64_t v46 = v45;
    uint64_t v47 = sub_1C1DEE7AC();
    uint64_t v73 = v44(&v73, v46, v47, v42, v43);
    *(void *)(swift_allocObject() + 16) = v21;
    id v48 = v21;
    sub_1C1EAE7C8();
    sub_1C1E0D080(0);
    sub_1C1DF9B3C(&qword_1EBB65030, sub_1C1E0D080);
    uint64_t v49 = v68;
    sub_1C1EAEAD8();
    swift_release();
    swift_release();
    sub_1C1DF9B3C(&qword_1EA2C1518, sub_1C1E65B24);
    uint64_t v50 = v70;
    uint64_t v51 = sub_1C1EAEA38();
    swift_release();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v49, v50);
  }
  else
  {
    uint64_t v73 = (uint64_t)v21;
    id v53 = v21;
    sub_1C1DFC68C(0);
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    uint64_t v54 = v56;
    sub_1C1EAE878();
    sub_1C1E65B60();
    uint64_t v55 = v58;
    uint64_t v51 = sub_1C1EAEA38();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v54, v55);
  }
  *uint64_t v72 = v51;
  return result;
}

uint64_t sub_1C1E64CD0@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  sub_1C1DF9BC8(0, &qword_1EA2C1508, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1ABF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v12 - v7;
  v12[1] = a1;
  id v9 = a1;
  sub_1C1DFC68C(0);
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  sub_1C1EAE878();
  sub_1C1E65B60();
  uint64_t v10 = sub_1C1EAEA38();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v10;
  return result;
}

void sub_1C1E64E30(void *a1)
{
  uint64_t v2 = sub_1C1EAE568();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v36 - v6;
  id v37 = (id)sub_1C1EAD188();
  id v8 = objc_msgSend(v37, sel_domain);
  uint64_t v9 = sub_1C1EAED38();
  uint64_t v11 = v10;

  if (v9 == sub_1C1EAED38() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = sub_1C1EAF7A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
LABEL_10:
      id v16 = v37;

      return;
    }
  }
  id v15 = objc_msgSend(v37, sel_code, v36);
  if (v15 != (id)126)
  {
    if (v15 == (id)6)
    {
      sub_1C1EAE4F8();
      unint64_t v30 = sub_1C1EAE558();
      os_log_type_t v31 = sub_1C1EAF0D8();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        uint64_t v39 = v33;
        *(_DWORD *)uint64_t v32 = 136315138;
        uint64_t v34 = sub_1C1E6533C();
        uint64_t v38 = sub_1C1DF8D44(v34, v35, &v39);
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1DD2000, v30, v31, "[%s] Can not access database: exiting process", v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C874D2E0](v33, -1, -1);
        MEMORY[0x1C874D2E0](v32, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v2);
      exit(0);
    }
    goto LABEL_10;
  }
  uint64_t v17 = (void *)sub_1C1EAD9E8();
  id v18 = objc_msgSend(v17, sel_profileIdentifier);
  sub_1C1EADFF8();

  sub_1C1EAE4F8();
  id v19 = a1;
  id v20 = a1;
  uint64_t v21 = sub_1C1EAE558();
  os_log_type_t v22 = sub_1C1EAF0C8();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v39 = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v25 = sub_1C1EAF908();
    uint64_t v38 = sub_1C1DF8D44(v25, v26, &v39);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    uint64_t v38 = (uint64_t)a1;
    id v27 = a1;
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
    uint64_t v28 = sub_1C1EAED78();
    uint64_t v38 = sub_1C1DF8D44(v28, v29, &v39);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1DD2000, v21, v22, "[%{public}s]: Cleared existing transaction identifier due to error: %{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v24, -1, -1);
    MEMORY[0x1C874D2E0](v23, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v2);
}

uint64_t sub_1C1E6533C()
{
  return sub_1C1EAED68();
}

uint64_t sub_1C1E6536C()
{
  return swift_release();
}

uint64_t SharableModelGeneratorPipelineManager.deinit()
{
  uint64_t v0 = sub_1C1E62D58();
  swift_release();
  return v0;
}

uint64_t SharableModelGeneratorPipelineManager.__deallocating_deinit()
{
  sub_1C1E62D58();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C1E653EC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 248);
  return swift_retain();
}

uint64_t sub_1C1E6543C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for SharableModelGeneratorPipelineManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharableModelGeneratorPipelineManager);
}

uint64_t dispatch thunk of SharableModelGeneratorPipelineManager.interactiveSharableModelOutput.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of SharableModelGeneratorPipelineManager.interactiveSharableModelOutput.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

unint64_t sub_1C1E654F4()
{
  unint64_t result = qword_1EBB64D50;
  if (!qword_1EBB64D50)
  {
    sub_1C1DF9C54(255, &qword_1EBB64D58, (uint64_t (*)(uint64_t))sub_1C1DE4C98, sub_1C1DE4CCC, MEMORY[0x1E4F1A8C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64D50);
  }
  return result;
}

uint64_t sub_1C1E65590(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1C1EAD368();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1C1DF6BD0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    id v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      sub_1C1DFB68C();
      return sub_1C1DF5CB0(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))sub_1C1DFB68C);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1C1E9F88C();
    goto LABEL_7;
  }
  sub_1C1E9F200(v17, a3 & 1);
  unint64_t v24 = sub_1C1DF6BD0(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_1C1EAF7D8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  id v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1C1DF661C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))sub_1C1DFB68C, (uint64_t (*)(uint64_t, unint64_t))sub_1C1E667CC);
}

uint64_t sub_1C1E6578C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1C1E65818@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  return sub_1C1DF5FCC(a1, a2, (uint64_t (*)(void))sub_1C1E00E7C, (uint64_t (*)(void))sub_1C1DF92F4, (void (*)(char *, char *))sub_1C1E00C18, a3);
}

uint64_t sub_1C1E65858()
{
  sub_1C1DE4C98(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C1E658FC()
{
  sub_1C1DFC68C(0);
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(*(void *)(v1 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  uint64_t v7 = v0 + v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 8);
  uint64_t v8 = v0 + v4 + *(int *)(v2 + 40);
  uint64_t v9 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v7 + *(int *)(v2 + 44);
  uint64_t v11 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C1E65A68@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C1DFC68C(0);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v2 + v8);
  uint64_t v10 = *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C1E64490(a1, v2 + v7, v9, v10, a2);
}

void sub_1C1E65B24(uint64_t a1)
{
}

unint64_t sub_1C1E65B60()
{
  unint64_t result = qword_1EA2C1510;
  if (!qword_1EA2C1510)
  {
    sub_1C1DF9BC8(255, &qword_1EA2C1508, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1ABF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C1510);
  }
  return result;
}

uint64_t sub_1C1E65BE8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E65C20@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C1E64CD0(*(void **)(v1 + 16), a1);
}

void sub_1C1E65C28(uint64_t a1)
{
}

unint64_t sub_1C1E65C5C()
{
  unint64_t result = qword_1EA2C1520;
  if (!qword_1EA2C1520)
  {
    sub_1C1DF9BC8(255, &qword_1EBB650E8, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1AC18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C1520);
  }
  return result;
}

void sub_1C1E65CF0()
{
  if (!qword_1EBB65A48)
  {
    sub_1C1DF9BC8(255, &qword_1EBB67D08, (uint64_t (*)(uint64_t))sub_1C1E65C28, MEMORY[0x1E4F1AAE0]);
    sub_1C1DEE7E0();
    unint64_t v0 = sub_1C1EAE6B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65A48);
    }
  }
}

void sub_1C1E65D84()
{
  if (!qword_1EA2C1530)
  {
    sub_1C1E65CF0();
    sub_1C1EAE0B8();
    sub_1C1DF9B3C(&qword_1EBB65A40, (void (*)(uint64_t))sub_1C1E65CF0);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C1530);
    }
  }
}

uint64_t sub_1C1E65E30@<X0>(void *a1@<X8>)
{
  return sub_1C1E60018(v1, a1);
}

uint64_t sub_1C1E65E3C(uint64_t a1)
{
  return sub_1C1DD9F14(a1, (uint64_t (*)(void))sub_1C1DFC68C, (uint64_t (*)(uint64_t, uint64_t))sub_1C1E15700);
}

void sub_1C1E65E68()
{
  if (!qword_1EBB677D0)
  {
    sub_1C1DFB710(255);
    sub_1C1DF9B3C(&qword_1EBB67718, sub_1C1DFB710);
    unint64_t v0 = type metadata accessor for GeneratorPipelineManager.GenerationState();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB677D0);
    }
  }
}

uint64_t sub_1C1E65EFC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1E0BF98(255, a2, (unint64_t *)&qword_1EBB66FA8, MEMORY[0x1E4F67380], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1E65F54()
{
  if (!qword_1EBB66F80)
  {
    sub_1C1DF9F8C(255, &qword_1EBB68260);
    sub_1C1DF9F8C(255, &qword_1EBB66FE8);
    sub_1C1DFAEA0((unint64_t *)&qword_1EBB67000, &qword_1EBB68260);
    unint64_t v0 = sub_1C1EAEC98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB66F80);
    }
  }
}

uint64_t sub_1C1E66024()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E66034(uint64_t a1, uint64_t a2)
{
  return sub_1C1DF8AE0(a1, a2, (uint64_t (*)(void))sub_1C1DFB68C);
}

uint64_t sub_1C1E6604C(uint64_t a1, uint64_t a2)
{
  sub_1C1E0BF98(0, &qword_1EBB676F8, (unint64_t *)&qword_1EBB66FA8, MEMORY[0x1E4F67380], (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for AnyGenerator);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1E660DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C1DDC524(a1, a2, (uint64_t (*)(void))sub_1C1DFB68C, (uint64_t (*)(void))sub_1C1DFB308, a3);
}

uint64_t sub_1C1E66108@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C1EAF788();
  if (!result) {
    uint64_t result = swift_allocError();
  }
  *a1 = result;
  return result;
}

uint64_t sub_1C1E66160@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  return sub_1C1DF5FCC(a1, a2, (uint64_t (*)(void))sub_1C1E66A84, (uint64_t (*)(void))sub_1C1DFB68C, (void (*)(char *, char *))sub_1C1E61154, a3);
}

uint64_t sub_1C1E661A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C1DF5234(a1, a2, a3, (uint64_t (*)(void))sub_1C1E66A84, (uint64_t (*)(void))sub_1C1DFB68C, (void (*)(uint64_t, char *))sub_1C1E66034, (void (*)(char *, char *))sub_1C1E61154, a4);
}

uint64_t sub_1C1E661F4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1C1E66208()
{
  unint64_t result = qword_1EA2C1540;
  if (!qword_1EA2C1540)
  {
    sub_1C1DF9BC8(255, &qword_1EBB650E0, (uint64_t (*)(uint64_t))sub_1C1DFB308, MEMORY[0x1E4F1AC18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C1540);
  }
  return result;
}

uint64_t sub_1C1E66290()
{
  return objectdestroy_62Tm((uint64_t (*)(void))sub_1C1DFC5AC, (uint64_t (*)(void))sub_1C1DF8D08);
}

uint64_t sub_1C1E662BC(uint64_t a1)
{
  return sub_1C1DD6B80(a1, (uint64_t (*)(void))sub_1C1DFC5AC, (uint64_t (*)(uint64_t, uint64_t))sub_1C1E61674);
}

uint64_t sub_1C1E662E8@<X0>(uint64_t (**a1)(uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C1E61738(a1);
  *a2 = result;
  return result;
}

void sub_1C1E66314()
{
  if (!qword_1EBB66E40)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E0BF98(255, (unint64_t *)&qword_1EBB66F30, (unint64_t *)&qword_1EBB66FA8, MEMORY[0x1E4F67380], MEMORY[0x1E4F1AAE0]);
    sub_1C1E65EFC(&qword_1EBB66F28, (unint64_t *)&qword_1EBB66F30, v0);
    unint64_t v1 = sub_1C1EAE5B8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB66E40);
    }
  }
}

void sub_1C1E663D8()
{
  if (!qword_1EBB67CA0)
  {
    sub_1C1E66314();
    sub_1C1DFB308();
    sub_1C1DF9B3C(&qword_1EBB66E38, (void (*)(uint64_t))sub_1C1E66314);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67CA0);
    }
  }
}

uint64_t sub_1C1E66484()
{
  return sub_1C1DF9B3C(&qword_1EBB67C98, (void (*)(uint64_t))sub_1C1E663D8);
}

void sub_1C1E664B8()
{
  if (!qword_1EBB657D8)
  {
    sub_1C1DF9C54(255, &qword_1EBB64F50, (uint64_t (*)(uint64_t))sub_1C1E663D8, sub_1C1E66484, MEMORY[0x1E4F1AA60]);
    sub_1C1E66560();
    unint64_t v0 = sub_1C1EAE5E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB657D8);
    }
  }
}

unint64_t sub_1C1E66560()
{
  unint64_t result = qword_1EBB64F48;
  if (!qword_1EBB64F48)
  {
    sub_1C1DF9C54(255, &qword_1EBB64F50, (uint64_t (*)(uint64_t))sub_1C1E663D8, sub_1C1E66484, MEMORY[0x1E4F1AA60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64F48);
  }
  return result;
}

uint64_t sub_1C1E665FC()
{
  sub_1C1DFB68C();
  uint64_t v2 = (int *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v0 + v4;
  swift_release();
  sub_1C1E0BF98(0, &qword_1EBB676F8, (unint64_t *)&qword_1EBB66FA8, MEMORY[0x1E4F67380], (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for AnyGenerator);
  uint64_t v9 = v7 + *(int *)(v8 + 44);
  uint64_t v10 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v7 + v2[9]);
  uint64_t v11 = v7 + v2[10];
  uint64_t v12 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v7 + v2[11];
  uint64_t v14 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C1E667CC(uint64_t a1, uint64_t a2)
{
  return sub_1C1DF7C54(a1, a2, (uint64_t (*)(void))sub_1C1DFB68C);
}

uint64_t sub_1C1E667E4(uint64_t a1)
{
  return sub_1C1DD9F14(a1, (uint64_t (*)(void))sub_1C1DFB68C, (uint64_t (*)(uint64_t, uint64_t))sub_1C1E660DC);
}

uint64_t sub_1C1E66814(uint64_t a1)
{
  return sub_1C1DE7DB4(a1, (uint64_t (*)(void))sub_1C1DFB68C, sub_1C1E62DD0);
}

uint64_t objectdestroy_73Tm()
{
  sub_1C1DFB68C();
  uint64_t v2 = (int *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  uint64_t v7 = v0 + v4;
  swift_release();
  sub_1C1E0BF98(0, &qword_1EBB676F8, (unint64_t *)&qword_1EBB66FA8, MEMORY[0x1E4F67380], (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for AnyGenerator);
  uint64_t v9 = v0 + v4 + *(int *)(v8 + 44);
  uint64_t v10 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + v2[9]);
  uint64_t v11 = v0 + v4 + v2[10];
  uint64_t v12 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v7 + v2[11];
  uint64_t v14 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C1E66A24()
{
  return sub_1C1DD6C6C((uint64_t (*)(void))sub_1C1DFB68C, sub_1C1E630C0);
}

uint64_t sub_1C1E66A54(uint64_t a1)
{
  return sub_1C1DF5198(a1, (uint64_t (*)(void))sub_1C1DFB68C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C1E66160);
}

void sub_1C1E66A84(uint64_t a1)
{
}

uint64_t objectdestroy_83Tm()
{
  sub_1C1DFB68C();
  uint64_t v2 = (int *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  uint64_t v7 = v0 + v4;
  swift_release();
  sub_1C1E0BF98(0, &qword_1EBB676F8, (unint64_t *)&qword_1EBB66FA8, MEMORY[0x1E4F67380], (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for AnyGenerator);
  uint64_t v9 = v0 + v4 + *(int *)(v8 + 44);
  uint64_t v10 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + v2[9]);
  uint64_t v11 = v0 + v4 + v2[10];
  uint64_t v12 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v7 + v2[11];
  uint64_t v14 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C1E66C94(uint64_t a1)
{
  return sub_1C1DF5198(a1, (uint64_t (*)(void))sub_1C1DFB68C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C1E661A0);
}

uint64_t sub_1C1E66CC0()
{
  return objectdestroy_96Tm((uint64_t (*)(void))sub_1C1DFC5AC, (uint64_t (*)(void))sub_1C1DF8D08);
}

uint64_t sub_1C1E66CEC()
{
  return objectdestroy_96Tm((uint64_t (*)(void))sub_1C1DFC5AC, (uint64_t (*)(void))sub_1C1DF8D08);
}

uint64_t objectdestroy_96Tm(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v4 = (int *)(a1(0) - 8);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = v6 + *(void *)(*(void *)v4 + 64);
  uint64_t v8 = v5 | 7;
  swift_release();
  swift_release();
  uint64_t v9 = v2 + v6;
  swift_release();
  uint64_t v10 = v2 + v6 + *(int *)(a2(0) + 36);
  uint64_t v11 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v9 + v4[9]);
  uint64_t v12 = v9 + v4[10];
  uint64_t v13 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v9 + v4[11];
  uint64_t v15 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  return MEMORY[0x1F4186498](v2, v7, v8);
}

uint64_t sub_1C1E66EDC()
{
  return sub_1C1DD6C6C((uint64_t (*)(void))sub_1C1DFC5AC, sub_1C1E63238);
}

uint64_t sub_1C1E66F08()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E66F40()
{
  return objectdestroy_106Tm((uint64_t (*)(void))sub_1C1DFC5AC, (uint64_t (*)(void))sub_1C1DF8D08);
}

uint64_t sub_1C1E66F6C()
{
  return objectdestroy_106Tm((uint64_t (*)(void))sub_1C1DFC5AC, (uint64_t (*)(void))sub_1C1DF8D08);
}

uint64_t sub_1C1E66F9C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1E66FD4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1DF9F8C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C1E67044()
{
  unint64_t result = qword_1EBB65978;
  if (!qword_1EBB65978)
  {
    sub_1C1E14CAC(255, &qword_1EBB65980, (uint64_t (*)(uint64_t))sub_1C1E15248, MEMORY[0x1E4F1AC18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65978);
  }
  return result;
}

uint64_t sub_1C1E670CC()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E67108(uint64_t a1)
{
  return sub_1C1E67BB0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1C1E72518);
}

uint64_t sub_1C1E67128()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E67160()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

void sub_1C1E671E8()
{
  if (!qword_1EBB677D8[0])
  {
    sub_1C1E01F14(255);
    sub_1C1DF9B3C(&qword_1EBB67728, sub_1C1E01F14);
    unint64_t v0 = type metadata accessor for GeneratorPipelineManager.GenerationState();
    if (!v1) {
      atomic_store(v0, qword_1EBB677D8);
    }
  }
}

uint64_t sub_1C1E6727C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1C1E6728C()
{
  unint64_t result = qword_1EA2C1548;
  if (!qword_1EA2C1548)
  {
    sub_1C1DF9BC8(255, &qword_1EBB65170, (uint64_t (*)(uint64_t))sub_1C1DFC68C, MEMORY[0x1E4F1ACE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C1548);
  }
  return result;
}

uint64_t sub_1C1E67314()
{
  sub_1C1DFC68C(0);
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  uint64_t v7 = v0 + v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 8);
  uint64_t v8 = v0 + v4 + *(int *)(v2 + 40);
  uint64_t v9 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v7 + *(int *)(v2 + 44);
  uint64_t v11 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C1E6745C()
{
  sub_1C1DFC68C(0);
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(*(void *)(v1 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;

  uint64_t v7 = v0 + v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 8);
  uint64_t v8 = v0 + v4 + *(int *)(v2 + 40);
  uint64_t v9 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v7 + *(int *)(v2 + 44);
  uint64_t v11 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C1E675B0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C1DFC68C(0);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void **)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C1E63F04(a1, v8, v2 + v7, v9, a2);
}

uint64_t sub_1C1E67660()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E67670()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E676AC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E676E4()
{
  return objectdestroy_62Tm((uint64_t (*)(void))sub_1C1DF92F4, (uint64_t (*)(void))sub_1C1E02B88);
}

uint64_t objectdestroy_62Tm(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v4 = (int *)(a1(0) - 8);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v6 = (v5 + 16) & ~v5;
  uint64_t v7 = v6 + *(void *)(*(void *)v4 + 64);
  uint64_t v8 = v5 | 7;
  uint64_t v9 = v2 + v6;
  swift_release();
  uint64_t v10 = v9 + *(int *)(a2(0) + 36);
  uint64_t v11 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v9 + v4[9]);
  uint64_t v12 = v9 + v4[10];
  uint64_t v13 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v9 + v4[11];
  uint64_t v15 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  return MEMORY[0x1F4186498](v2, v7, v8);
}

uint64_t sub_1C1E678C4()
{
  sub_1C1DF7CD4(0);
  uint64_t v2 = (int *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v0 + v4;
  swift_release();
  sub_1C1DFD354(0);
  uint64_t v9 = v7 + *(int *)(v8 + 44);
  uint64_t v10 = sub_1C1EAD9C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v7 + v2[9]);
  uint64_t v11 = v7 + v2[10];
  uint64_t v12 = sub_1C1EADA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v7 + v2[11];
  uint64_t v14 = sub_1C1EAD368();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C1E67A7C()
{
  return objectdestroy_96Tm((uint64_t (*)(void))sub_1C1DF92F4, (uint64_t (*)(void))sub_1C1E02B88);
}

uint64_t sub_1C1E67AA8()
{
  return objectdestroy_96Tm((uint64_t (*)(void))sub_1C1DF92F4, (uint64_t (*)(void))sub_1C1E02B88);
}

uint64_t sub_1C1E67AD4()
{
  return sub_1C1DD6C6C((uint64_t (*)(void))sub_1C1DF92F4, sub_1C1E62F48);
}

uint64_t sub_1C1E67B00()
{
  return objectdestroy_106Tm((uint64_t (*)(void))sub_1C1DF92F4, (uint64_t (*)(void))sub_1C1E02B88);
}

uint64_t sub_1C1E67B2C(uint64_t a1)
{
  return sub_1C1DF5198(a1, (uint64_t (*)(void))sub_1C1DF92F4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C1E65818);
}

uint64_t sub_1C1E67B58()
{
  return objectdestroy_106Tm((uint64_t (*)(void))sub_1C1DF92F4, (uint64_t (*)(void))sub_1C1E02B88);
}

uint64_t sub_1C1E67B90(uint64_t a1)
{
  return sub_1C1E12CC8(a1, (uint64_t (*)(uint64_t, void, void, void *, void, void, void))sub_1C1E6248C);
}

uint64_t sub_1C1E67BB0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t objectdestroy_141Tm()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

id sub_1C1E67CFC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupConfigurationLoader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1E67D30(uint64_t a1)
{
  sub_1C1DE01A4();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1C1EAE0A8();
  uint64_t v8 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) == 0)
  {
    if (!*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  if (sub_1C1EAF3B8()) {
LABEL_3:
  }
    swift_bridgeObjectRetain();
LABEL_5:
  sub_1C1EAE078();
  uint64_t v11 = *(uint64_t (**)(char *))(v1 + 80);
  swift_retain();
  uint64_t v12 = v11(v10);
  swift_release();
  uint64_t v22 = v12;
  sub_1C1E12B38(0, &qword_1EBB65918, &qword_1EBB67D68, (void (*)(uint64_t))sub_1C1E68084);
  sub_1C1E12BA0(&qword_1EBB65910, &qword_1EBB65918, &qword_1EBB67D68, (void (*)(uint64_t))sub_1C1E68084);
  uint64_t v13 = sub_1C1EAE958();
  swift_release();
  uint64_t v22 = v13;
  uint64_t v14 = (void (*)(uint64_t))MEMORY[0x1E4F67288];
  sub_1C1E12B38(0, &qword_1EBB67D18, &qword_1EBB674A8, MEMORY[0x1E4F67288]);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C1E12BA0(&qword_1EBB67D10, &qword_1EBB67D18, &qword_1EBB674A8, v14);
  sub_1C1EAE918();
  swift_release();
  uint64_t v22 = v16;
  uint64_t v23 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  return v18;
}

void *sub_1C1E68034()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t sub_1C1E68060(uint64_t a1)
{
  return sub_1C1E67D30(a1);
}

unint64_t sub_1C1E68084()
{
  unint64_t result = qword_1EBB67D70;
  if (!qword_1EBB67D70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB67D70);
  }
  return result;
}

unint64_t static AppSessionAnalyticsManager.eventName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_1C1E680E0(uint64_t a1, void *a2)
{
  sub_1C1DFE408(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + 16;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1C1DFE46C(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1C1E68148@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1C1DFE408(v1 + 16, a1);
}

uint64_t sub_1C1E68194(long long *a1)
{
  uint64_t v3 = v1 + 16;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1C1DFE46C(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C1E681F0())()
{
  return j__swift_endAccess;
}

uint64_t AppSessionAnalyticsManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  AppSessionAnalyticsManager.init()();
  return v0;
}

uint64_t sub_1C1E6827C(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  int v74 = a3;
  uint64_t v72 = *v5;
  sub_1C1E6DEE8();
  uint64_t v10 = v9;
  uint64_t v65 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v73 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E6E094();
  uint64_t v70 = v12;
  uint64_t v68 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v66 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E6E248(0);
  uint64_t v71 = v14;
  uint64_t v69 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v67 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C1EAF178();
  uint64_t v63 = *(void *)(v16 - 8);
  uint64_t v64 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E6E284();
  uint64_t v20 = v19;
  uint64_t v61 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E6E488(0);
  uint64_t v24 = v23;
  uint64_t v62 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E6DF7C();
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  if (*((unsigned char *)v5 + 80) != 1) {
    return v74(v28);
  }
  uint64_t v57 = v28;
  uint64_t v52 = a1;
  uint64_t v60 = v30;
  uint64_t v55 = (char *)&v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = SummaryTabFeedPopulationManager.collectHighlightsInteractionAnalytics(in:)(a2);
  uint64_t v75 = v51;
  uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E4F1AAE0];
  sub_1C1E6F94C(0, &qword_1EBB66F00, (uint64_t)&type metadata for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics, MEMORY[0x1E4F1AAE0]);
  uint64_t v58 = v5;
  uint64_t v59 = v10;
  sub_1C1E6E360(0, &qword_1EBB66F48);
  uint64_t v56 = a4;
  sub_1C1E6E3BC();
  sub_1C1E6E438(&qword_1EBB66F40, &qword_1EBB66F48);
  sub_1C1EAEA88();
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB66220);
  uint64_t v53 = MEMORY[0x1E4F1A988];
  sub_1C1E6FC7C(&qword_1EBB66E78, (void (*)(uint64_t))sub_1C1E6E284);
  sub_1C1EAEA68();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v22, v20);
  sub_1C1E6FC7C(&qword_1EBB66E58, sub_1C1E6E488);
  uint64_t v31 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v26, v24);
  swift_release();
  uint64_t v75 = v31;
  sub_1C1EAF168();
  id v32 = *(id *)(v52 + 104);
  uint64_t v33 = sub_1C1E6D79C((uint64_t)v18, (uint64_t)v32);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v18, v64);
  uint64_t v76 = v33;
  uint64_t v34 = v54;
  sub_1C1E6F94C(0, &qword_1EBB66F10, (uint64_t)&type metadata for AppSessionAnalyticsEvent.ModelAnalytics, v54);
  sub_1C1E6E360(0, &qword_1EBB66F58);
  sub_1C1E6E1F8(&qword_1EBB66F08, &qword_1EBB66F10, v34);
  sub_1C1E6E438(&qword_1EBB66F50, &qword_1EBB66F58);
  unint64_t v35 = v66;
  sub_1C1EAEA88();
  sub_1C1E6FC7C(&qword_1EBB66E88, (void (*)(uint64_t))sub_1C1E6E094);
  uint64_t v36 = v67;
  uint64_t v37 = v70;
  sub_1C1EAEA68();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v35, v37);
  sub_1C1E6FC7C(&qword_1EBB66E68, sub_1C1E6E248);
  uint64_t v38 = v71;
  uint64_t v39 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v36, v38);
  swift_release();
  uint64_t v76 = v39;
  sub_1C1E6E01C();
  sub_1C1E6FC7C(&qword_1EBB66EE8, (void (*)(uint64_t))sub_1C1E6E01C);
  uint64_t v40 = v55;
  sub_1C1EAE6A8();
  sub_1C1E6FC7C(&qword_1EBB66EA8, (void (*)(uint64_t))sub_1C1E6DF7C);
  uint64_t v41 = v73;
  uint64_t v42 = v57;
  sub_1C1EAE9E8();
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v56;
  *(void *)(v43 + 16) = v74;
  *(void *)(v43 + 24) = v44;
  uint64_t v45 = swift_allocObject();
  swift_weakInit();
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = v72;
  *(void *)(v46 + 16) = v45;
  *(void *)(v46 + 24) = v47;
  sub_1C1E6FC7C(&qword_1EA2C1550, (void (*)(uint64_t))sub_1C1E6DEE8);
  swift_retain();
  uint64_t v48 = v59;
  sub_1C1EAEA78();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v41, v48);
  sub_1C1EAD5D8();
  swift_beginAccess();
  sub_1C1EAE7E8();
  swift_endAccess();
  sub_1C1EAD5E8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v40, v42);
}

uint64_t sub_1C1E68CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C1EAE568();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE548();
  sub_1C1DFE408(a1, (uint64_t)v37);
  uint64_t v9 = sub_1C1EAE558();
  os_log_type_t v10 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v34 = a1;
    uint64_t v12 = v11;
    uint64_t v13 = swift_slowAlloc();
    v36[0] = v13;
    *(_DWORD *)uint64_t v12 = 136446466;
    v35[0] = a3;
    swift_getMetatypeMetadata();
    uint64_t v14 = sub_1C1EAED68();
    v35[0] = sub_1C1DF8D44(v14, v15, v36);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    sub_1C1DFE408((uint64_t)v37, (uint64_t)v35);
    sub_1C1DF9148(0, (unint64_t *)&qword_1EBB66220);
    uint64_t v16 = sub_1C1EAED68();
    v35[0] = sub_1C1DF8D44(v16, v17, v36);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    _os_log_impl(&dword_1C1DD2000, v9, v10, "[%{public}s]: Updating current event with: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v13, -1, -1);
    uint64_t v18 = v12;
    a1 = v34;
    MEMORY[0x1C874D2E0](v18, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    sub_1C1EAD5D8();
    swift_release();
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = Strong;
    sub_1C1DFE408(a1, (uint64_t)v37);
    uint64_t v21 = (void *)(v20 + 64);
    swift_beginAccess();
    uint64_t v22 = *(void **)(v20 + 64);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v20 + 64) = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v22 = sub_1C1DD4B28(0, v22[2] + 1, 1, v22);
      void *v21 = v22;
    }
    unint64_t v25 = v22[2];
    unint64_t v24 = v22[3];
    if (v25 >= v24 >> 1) {
      void *v21 = sub_1C1DD4B28((void *)(v24 > 1), v25 + 1, 1, v22);
    }
    uint64_t v26 = v38;
    uint64_t v27 = v39;
    uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
    MEMORY[0x1F4188790](v28);
    uint64_t v30 = (char *)&v33 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v30);
    sub_1C1E6E578(v25, (uint64_t)v30, (uint64_t *)(v20 + 64), v26, v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    swift_endAccess();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1C1EAD5E8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1E69134()
{
  sub_1C1EAD5D8();
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C1E6B4A4(v0);
  swift_bridgeObjectRelease();
  sub_1C1EAD5E8();
  return v1;
}

uint64_t sub_1C1E691B0(int a1)
{
  LODWORD(v2) = a1;
  uint64_t v3 = *(void *)v1;
  uint64_t v38 = sub_1C1EAE568();
  uint64_t v4 = *(void *)(v38 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v38);
  uint64_t v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v33[-v8];
  uint64_t v10 = *(void *)(v1 + 56);
  sub_1C1EAD5D8();
  swift_beginAccess();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C1E6B4A4(v11);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v1 + 81) == 1)
  {
    sub_1C1EAE548();
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_1C1EAE558();
    os_log_type_t v14 = sub_1C1EAF0D8();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v39 = v35;
      *(_DWORD *)uint64_t v16 = 136446722;
      int v34 = v15;
      uint64_t v40 = v3;
      swift_getMetatypeMetadata();
      uint64_t v36 = v10;
      uint64_t v17 = sub_1C1EAED68();
      int v37 = v2;
      uint64_t v40 = sub_1C1DF8D44(v17, v18, &v39);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2050;
      uint64_t v19 = *(void *)(v12 + 16);
      swift_bridgeObjectRelease();
      uint64_t v40 = v19;
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 22) = 2080;
      sub_1C1DF9F8C(0, &qword_1EBB683E0);
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1C1EAEC48();
      unint64_t v21 = v20;
      swift_bridgeObjectRelease();
      uint64_t v22 = v2;
      LOBYTE(v2) = v37;
      uint64_t v40 = sub_1C1DF8D44(v22, v21, &v39);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v13, (os_log_type_t)v34, "[%{public}s]: Submitting analytics dictionary with %{public}ld keys: %s", (uint8_t *)v16, 0x20u);
      uint64_t v23 = v35;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v23, -1, -1);
      MEMORY[0x1C874D2E0](v16, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v38);
    uint64_t v30 = (void *)sub_1C1EAED28();
    sub_1C1DF9F8C(0, &qword_1EBB683E0);
    uint64_t v31 = (void *)sub_1C1EAEC28();
    swift_bridgeObjectRelease();
    AnalyticsSendEvent();

    if (v2) {
LABEL_10:
    }
      sub_1C1E69744();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C1EAE548();
    unint64_t v24 = sub_1C1EAE558();
    os_log_type_t v25 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v36 = v10;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v39 = v27;
      int v37 = v2;
      *(_DWORD *)uint64_t v26 = 136446210;
      uint64_t v40 = v3;
      swift_getMetatypeMetadata();
      uint64_t v28 = sub_1C1EAED68();
      uint64_t v40 = sub_1C1DF8D44(v28, v29, &v39);
      LOBYTE(v2) = v37;
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v24, v25, "[%{public}s]: D&U disabled, not submitting analytics", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v27, -1, -1);
      MEMORY[0x1C874D2E0](v26, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v38);
    if (v2) {
      goto LABEL_10;
    }
  }
  return sub_1C1EAD5E8();
}

uint64_t sub_1C1E69700()
{
  return sub_1C1EAD5E8();
}

uint64_t sub_1C1E69744()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C1DF3298();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1EAE568();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE548();
  uint64_t v10 = sub_1C1EAE558();
  os_log_type_t v11 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v22 = v6;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v23 = v5;
    uint64_t v13 = (uint8_t *)v12;
    uint64_t v14 = swift_slowAlloc();
    v24[0] = v14;
    *(_DWORD *)uint64_t v13 = 136446210;
    uint64_t v25 = v2;
    swift_getMetatypeMetadata();
    uint64_t v15 = sub_1C1EAED68();
    uint64_t v25 = sub_1C1DF8D44(v15, v16, v24);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v10, v11, "[%{public}s]: Resetting analytics event", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v14, -1, -1);
    uint64_t v17 = v13;
    uint64_t v5 = v23;
    MEMORY[0x1C874D2E0](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_beginAccess();
  v1[8] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1C1EAD318();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v5, 1, 1, v18);
  swift_beginAccess();
  uint64_t v19 = v1[5];
  uint64_t v20 = v1[6];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v1 + 2), v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v5, v19, v20);
  swift_endAccess();
  swift_beginAccess();
  v1[9] = MEMORY[0x1E4FBC870];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1E69A98@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1C1EAE568();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE4F8();
  os_log_type_t v11 = sub_1C1EAE558();
  os_log_type_t v12 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v53 = (void *)v7;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    id v54 = a1;
    uint64_t v16 = v15;
    uint64_t v55 = v3;
    aBlock[0] = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    uint64_t v52 = v14 + 4;
    *(void *)&long long v57 = v6;
    swift_getMetatypeMetadata();
    uint64_t v17 = sub_1C1EAED68();
    *(void *)&long long v57 = sub_1C1DF8D44(v17, v18, aBlock);
    uint64_t v3 = v55;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v11, v12, "[%{public}s]: Collecting highlights feed presentation analytics", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v16;
    a1 = v54;
    MEMORY[0x1C874D2E0](v19, -1, -1);
    MEMORY[0x1C874D2E0](v14, -1, -1);

    (*(void (**)(char *, void *))(v8 + 8))(v10, v53);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v61 = 2;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v57 = 0u;
  long long v58 = 0u;
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 2;
  *(void *)(v20 + 24) = a1;
  *(void *)(v20 + 32) = v3;
  *(void *)(v20 + 40) = &v61;
  *(void *)(v20 + 48) = &v57;
  *(void *)(v20 + 56) = v6;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1C1E6E844;
  *(void *)(v21 + 24) = v20;
  aBlock[4] = (uint64_t)sub_1C1DD885C;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C1DD8834;
  aBlock[3] = (uint64_t)&block_descriptor_6;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = a1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v23, sel_performBlockAndWait_, v22);
  _Block_release(v22);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    id v26 = (id)v61;
    if (v61 != 2)
    {
      id v27 = 0;
      uint64_t v28 = 0;
      unint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      id v32 = 0;
      uint64_t v33 = 0;
      id v34 = (id)*((void *)&v57 + 1);
      uint64_t v35 = (void *)v57;
      uint64_t v36 = (void *)*((void *)&v58 + 1);
      int v37 = (void *)v58;
      uint64_t v55 = (uint64_t *)*((void *)&v59 + 1);
      uint64_t v38 = (void *)v59;
      uint64_t v39 = v61;
      uint64_t v41 = (void *)*((void *)&v60 + 1);
      uint64_t v40 = (void *)v60;
LABEL_9:
      *(void *)a2 = v39;
      *(void *)(a2 + 8) = v27;
      *(void *)(a2 + 16) = v28;
      *(void *)(a2 + 24) = v29;
      *(void *)(a2 + 32) = v30;
      *(void *)(a2 + 40) = v31;
      *(void *)(a2 + 48) = v32;
      *(void *)(a2 + 56) = v33;
      *(unsigned char *)(a2 + 64) = v26 != (id)2;
      sub_1C1E6E868(v26);
      sub_1C1E6E888(v35, v34, v37, v36, v38, v55, v40, v41);
      sub_1C1E6E910((id)v61);
      return swift_release();
    }
    id v54 = (id)*((void *)&v57 + 1);
    if (*((void *)&v57 + 1))
    {
      uint64_t v42 = (void *)*((void *)&v60 + 1);
      uint64_t v53 = (void *)*((void *)&v60 + 1);
      uint64_t v40 = (void *)v60;
      uint64_t v43 = (void *)*((void *)&v59 + 1);
      uint64_t v38 = (void *)v59;
      uint64_t v36 = (void *)*((void *)&v58 + 1);
      int v37 = (void *)v58;
      uint64_t v35 = (void *)v57;
      id v44 = (id)v60;
      id v45 = v42;
      id v46 = v35;
      id v34 = v54;
      id v47 = v54;
      id v48 = v37;
      id v49 = v36;
      id v50 = v38;
      id v51 = v43;
      uint64_t v39 = (uint64_t)v35;
      id v27 = v34;
      uint64_t v28 = v37;
      unint64_t v29 = v36;
      uint64_t v30 = v38;
      uint64_t v55 = (uint64_t *)v43;
      uint64_t v31 = v43;
      uint64_t v41 = v53;
      id v32 = v40;
      uint64_t v33 = v53;
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

void sub_1C1E69F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v127[1] = a6;
  uint64_t v132 = a5;
  uint64_t v149 = a3;
  uint64_t v8 = sub_1C1EAE568();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  os_log_type_t v152 = (char *)v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E6EC8C(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v148 = (char *)v127 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E6ECC0(0);
  MEMORY[0x1F4188790](v13 - 8);
  id v147 = (char *)v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E6ECF4(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v146 = (char *)v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E6ED28(0);
  MEMORY[0x1F4188790](v17 - 8);
  id v145 = (char *)v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF3298();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C1EAD318();
  os_log_type_t v150 = *(void **)(v22 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  unint64_t v133 = (char *)v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  unint64_t v131 = (char *)v127 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v144 = (char *)v127 - v27;
  unint64_t v143 = sub_1C1EAD3C8();
  id v142 = *(void (***)(void, unint64_t))(v143 - 8);
  MEMORY[0x1F4188790](v143);
  unint64_t v137 = (char *)v127 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1C1EAD168();
  unint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  unint64_t v136 = (char *)v127 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE188();
  id v30 = objc_msgSend(self, sel_primaryProfile);
  uint64_t v31 = (void *)sub_1C1EAE178();

  id v139 = v31;
  uint64_t v32 = sub_1C1EADE58();
  uint64_t v151 = v8;
  if (!v32)
  {
    uint64_t v130 = 0;
    int v129 = 1;
    int v128 = 1;
    unint64_t v138 = MEMORY[0x1E4FBC860];
    goto LABEL_5;
  }
  uint64_t v33 = (void *)v32;
  if (Feed.isTooOldForDisplay.getter())
  {

    uint64_t v130 = 0;
    unint64_t v138 = MEMORY[0x1E4FBC860];
    int v129 = 1;
    int v128 = 1;
LABEL_5:
    id v34 = v150;
    goto LABEL_18;
  }
  uint64_t v134 = v9;
  uint64_t v135 = a4;
  unint64_t v35 = sub_1C1EAE0C8();
  unint64_t v36 = v35;
  if (v35 >> 62) {
    uint64_t v37 = sub_1C1EAF638();
  }
  else {
    uint64_t v37 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v127[0] = a2;
  if (v37)
  {
    unint64_t v153 = MEMORY[0x1E4FBC860];
    sub_1C1EAF548();
    if (v37 < 0)
    {
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
      return;
    }
    uint64_t v38 = 0;
    do
    {
      if ((v36 & 0xC000000000000001) != 0) {
        id v39 = (id)MEMORY[0x1C874C6F0](v38, v36);
      }
      else {
        id v39 = *(id *)(v36 + 8 * v38 + 32);
      }
      uint64_t v40 = v39;
      ++v38;
      type metadata accessor for AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics.ShownFeedItem(0);
      swift_allocObject();
      AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics.ShownFeedItem.init(feedItem:)(v40);
      sub_1C1EAF518();
      sub_1C1EAF558();
      sub_1C1EAF568();
      sub_1C1EAF528();
    }
    while (v37 != v38);
    unint64_t v138 = v153;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v138 = MEMORY[0x1E4FBC860];
  }
  uint64_t v41 = v137;
  sub_1C1EAD3A8();
  sub_1C1E6F7C0(0, &qword_1EBB67DF0, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v42 = sub_1C1EAD3B8();
  uint64_t v43 = *(void *)(v42 - 8);
  unint64_t v44 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1C1EB07F0;
  (*(void (**)(unint64_t, void, uint64_t))(v43 + 104))(v45 + v44, *MEMORY[0x1E4F27C48], v42);
  sub_1C1E6F24C(v45);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v46 = objc_msgSend(v33, sel_dateUpdated);
  id v47 = v144;
  sub_1C1EAD2F8();

  id v48 = v131;
  sub_1C1EAD308();
  id v49 = v136;
  sub_1C1EAD388();
  swift_bridgeObjectRelease();
  id v34 = v150;
  id v50 = (void (*)(char *, uint64_t))v150[1];
  v50(v48, v22);
  v50(v47, v22);
  ((void (**)(char *, unint64_t))v142)[1](v41, v143);
  uint64_t v130 = sub_1C1EAD148();
  LOBYTE(v43) = v51;

  int v129 = v43 & 1;
  (*(void (**)(char *, uint64_t))(v140 + 8))(v49, v141);
  int v128 = 0;
  a4 = v135;
  uint64_t v9 = v134;
LABEL_18:
  uint64_t v52 = v149 + 16;
  swift_beginAccess();
  sub_1C1DFE408(v52, (uint64_t)&v153);
  long long v53 = v155;
  __swift_project_boxed_opaque_existential_1(&v153, v155);
  (*(void (**)(void, void))(*((void *)&v53 + 1) + 8))(v53, *((void *)&v53 + 1));
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v34[6])(v21, 1, v22) == 1)
  {
    sub_1C1E6FAF8((uint64_t)v21, (uint64_t (*)(void))sub_1C1DF3298);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v153);
    unint64_t v137 = 0;
    LODWORD(v131) = 1;
  }
  else
  {
    id v54 = (void (*)(char *, char *, uint64_t))v34[4];
    uint64_t v135 = a4;
    uint64_t v134 = v9;
    uint64_t v55 = v133;
    v54(v133, v21, v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v153);
    uint64_t v56 = v137;
    sub_1C1EAD3A8();
    sub_1C1E6F7C0(0, &qword_1EBB67DF0, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
    uint64_t v57 = sub_1C1EAD3B8();
    uint64_t v58 = *(void *)(v57 - 8);
    unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_1C1EB07F0;
    (*(void (**)(unint64_t, void, uint64_t))(v58 + 104))(v60 + v59, *MEMORY[0x1E4F27C48], v57);
    sub_1C1E6F24C(v60);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v61 = v144;
    sub_1C1EAD308();
    uint64_t v62 = v136;
    sub_1C1EAD388();
    swift_bridgeObjectRelease();
    uint64_t v63 = (void (*)(char *, uint64_t))v34[1];
    v63(v61, v22);
    ((void (**)(char *, unint64_t))v142)[1](v56, v143);
    unint64_t v137 = (char *)sub_1C1EAD148();
    LODWORD(v131) = v64 & 1;
    (*(void (**)(char *, uint64_t))(v140 + 8))(v62, v141);
    v63(v55, v22);
  }
  sub_1C1EAE348();
  uint64_t v65 = MEMORY[0x1C874B480]();
  if (qword_1EBB648A0 != -1) {
    goto LABEL_66;
  }
  while (1)
  {
    id v66 = _s14HealthPlatform8FeedItemC0aB4CoreE020predicateForEligibleC5Items3for14sourceProfilesSo11NSPredicateCAA0C0C4KindO_SayAA13SourceProfileOGtFZ_0(2, qword_1EBB64890);
    objc_msgSend((id)v65, sel_setPredicate_, v66);

    unint64_t v67 = sub_1C1EAF248();
    unint64_t v68 = v67;
    uint64_t v144 = (char *)v67;
    if (v67 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v68 = (unint64_t)v144;
      uint64_t v69 = sub_1C1EAF638();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v69 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v69) {
      break;
    }
    unint64_t v162 = MEMORY[0x1E4FBC860];
    sub_1C1EAF548();
    if (v69 < 0)
    {
      __break(1u);
      goto LABEL_70;
    }
    unint64_t v143 = v68 & 0xC000000000000001;
    unint64_t v140 = v68 + 32;
    id v142 = (void (**)(void, unint64_t))v65;
    uint64_t v65 = 0;
    uint64_t v141 = v69;
    while (v65 != v69)
    {
      uint64_t v149 = v65;
      if (v143) {
        uint64_t v71 = (void *)MEMORY[0x1C874C6F0](v65, v68);
      }
      else {
        uint64_t v71 = *(id *)(v140 + 8 * v65);
      }
      uint64_t v72 = v71;
      type metadata accessor for AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics.GeneratedFeedItem(0);
      uint64_t v73 = swift_allocObject();
      os_log_type_t v150 = v72;
      uint64_t v151 = v73;
      uint64_t v74 = sub_1C1EAE298();
      uint64_t v65 = v74;
      unint64_t v75 = v74 & 0xC000000000000001;
      if ((v74 & 0xC000000000000001) != 0) {
        uint64_t v76 = sub_1C1EAF3B8();
      }
      else {
        uint64_t v76 = *(void *)(v74 + 16);
      }
      uint64_t v77 = MEMORY[0x1E4FBC860];
      if (v76)
      {
        uint64_t v161 = MEMORY[0x1E4FBC860];
        sub_1C1E22184(0, v76 & ~(v76 >> 63), 0);
        if (v75)
        {
          uint64_t v78 = sub_1C1EAF358();
          unsigned __int8 v80 = 1;
        }
        else
        {
          uint64_t v78 = sub_1C1EA3818(v65);
          unsigned __int8 v80 = v82 & 1;
        }
        uint64_t v158 = v78;
        uint64_t v159 = v79;
        unsigned __int8 v160 = v80;
        if (v76 < 0) {
          goto LABEL_65;
        }
        uint64_t v83 = v65 & 0xFFFFFFFFFFFFFF8;
        if (v65 < 0) {
          uint64_t v83 = v65;
        }
        os_log_type_t v152 = (char *)v83;
        do
        {
          while (1)
          {
            uint64_t v90 = v158;
            uint64_t v89 = v159;
            uint64_t v91 = v160;
            sub_1C1EA3584(v158, v159, v160, v65);
            unint64_t v93 = v92;
            id v94 = objc_msgSend(v92, sel_code);

            uint64_t v95 = v161;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C1E22184(0, *(void *)(v95 + 16) + 1, 1);
              uint64_t v95 = v161;
            }
            unint64_t v97 = *(void *)(v95 + 16);
            unint64_t v96 = *(void *)(v95 + 24);
            if (v97 >= v96 >> 1)
            {
              sub_1C1E22184(v96 > 1, v97 + 1, 1);
              uint64_t v95 = v161;
            }
            *(void *)(v95 + 16) = v97 + 1;
            *(void *)(v95 + 8 * v97 + 32) = v94;
            if (v75) {
              break;
            }
            uint64_t v84 = sub_1C1E24590(v90, v89, v91, v65);
            uint64_t v86 = v85;
            char v88 = v87;
            sub_1C1E25D1C(v90, v89, v91);
            uint64_t v158 = v84;
            uint64_t v159 = v86;
            unsigned __int8 v160 = v88 & 1;
            if (!--v76) {
              goto LABEL_55;
            }
          }
          if ((v91 & 1) == 0) {
            goto LABEL_71;
          }
          if (sub_1C1EAF378()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          sub_1C1E298D0();
          uint64_t v98 = (void (*)(unint64_t *, void))sub_1C1EAEF78();
          sub_1C1EAF418();
          v98(&v153, 0);
          --v76;
        }
        while (v76);
LABEL_55:
        sub_1C1E25D1C(v158, v159, v160);
        swift_bridgeObjectRelease();
        uint64_t v81 = v161;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v81 = v77;
      }
      *(void *)(v151 + 16) = v81;
      uint64_t v99 = sub_1C1EAE048();
      uint64_t v100 = (uint64_t)v146;
      sub_1C1EAE248();
      uint64_t v101 = *(void *)(v99 - 8);
      int v102 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v100, 1, v99);
      uint64_t v103 = (uint64_t)v148;
      uint64_t v104 = (uint64_t)v147;
      uint64_t v105 = (uint64_t)v145;
      uint64_t v106 = v142;
      uint64_t v107 = v149;
      if (v102 == 1)
      {
        sub_1C1E6FAF8(v100, (uint64_t (*)(void))sub_1C1E6ECF4);
        uint64_t v108 = sub_1C1EADE38();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v105, 1, 1, v108);
      }
      else
      {
        sub_1C1EAE038();
        (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v100, v99);
        uint64_t v109 = sub_1C1EADE38();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(v105, 0, 1, v109);
      }
      sub_1C1E6ED5C(v105, v151+ OBJC_IVAR____TtCVV18HealthPlatformCore24AppSessionAnalyticsEvent35HighlightsFeedPresentationAnalytics17GeneratedFeedItem_dataVisualizationKind, (uint64_t (*)(void))sub_1C1E6ED28);
      uint64_t v110 = sub_1C1EADCA8();
      uint64_t v111 = v150;
      sub_1C1EAE248();
      uint64_t v112 = *(void *)(v110 - 8);
      int v113 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v103, 1, v110);
      uint64_t v69 = v141;
      if (v113 == 1)
      {

        sub_1C1E6FAF8(v103, (uint64_t (*)(void))sub_1C1E6EC8C);
        uint64_t v70 = sub_1C1EADAA8();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v104, 1, 1, v70);
      }
      else
      {
        sub_1C1EADC98();

        (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v103, v110);
        uint64_t v114 = sub_1C1EADAA8();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v104, 0, 1, v114);
      }
      unint64_t v68 = (unint64_t)v144;
      uint64_t v65 = v107 + 1;
      sub_1C1E6ED5C(v104, v151+ OBJC_IVAR____TtCVV18HealthPlatformCore24AppSessionAnalyticsEvent35HighlightsFeedPresentationAnalytics17GeneratedFeedItem_timeScope, (uint64_t (*)(void))sub_1C1E6ECC0);
      sub_1C1EAF518();
      sub_1C1EAF558();
      sub_1C1EAF568();
      sub_1C1EAF528();
      if (v65 == v69)
      {
        unint64_t v115 = v162;
        swift_bridgeObjectRelease();

        goto LABEL_63;
      }
    }
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    swift_once();
  }
  swift_bridgeObjectRelease();

  unint64_t v115 = MEMORY[0x1E4FBC860];
LABEL_63:
  AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics.init(ageOfFeed:feedItemsGeneratedTypes:feedItemsShownTypes:feedType:minutesElapsed:spinnerDisplayed:)(v129, v115, v138, (char)v131, v128, &v153);

  long long v116 = v156;
  uint64_t v117 = v157;
  uint64_t v118 = v132;
  unint64_t v119 = *(void **)v132;
  unint64_t v120 = *(void **)(v132 + 8);
  uint64_t v121 = *(void **)(v132 + 16);
  id v122 = *(void **)(v132 + 24);
  uint64_t v123 = *(void **)(v132 + 32);
  unsigned int v124 = *(void **)(v132 + 40);
  os_log_t v125 = *(void **)(v132 + 48);
  uint64_t v126 = *(void **)(v132 + 56);
  *(void *)uint64_t v132 = v153;
  *(_OWORD *)(v118 + 8) = v154;
  *(_OWORD *)(v118 + 24) = v155;
  *(_OWORD *)(v118 + 40) = v116;
  *(void *)(v118 + 56) = v117;
  sub_1C1E6E888(v119, v120, v121, v122, v123, v124, v125, v126);
}

uint64_t sub_1C1E6B4A4(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C1EAE568();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  char v88 = (char *)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v89 = (char *)v83 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v83 - v10;
  sub_1C1EAE548();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1C1EAE558();
  int v13 = sub_1C1EAF0D8();
  BOOL v14 = os_log_type_enabled(v12, (os_log_type_t)v13);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v90 = v5;
  uint64_t v91 = v3;
  uint64_t v87 = v4;
  if (v14)
  {
    LODWORD(v85) = v13;
    os_log_t v86 = v12;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v84 = swift_slowAlloc();
    unint64_t v97 = v84;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v93 = v3;
    swift_getMetatypeMetadata();
    uint64_t v17 = sub_1C1EAED68();
    uint64_t v93 = sub_1C1DF8D44(v17, v18, (uint64_t *)&v97);
    v83[1] = &v94;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    int64_t v19 = *(void *)(a1 + 16);
    uint64_t v20 = MEMORY[0x1E4FBC860];
    if (v19)
    {
      uint64_t v92 = MEMORY[0x1E4FBC860];
      sub_1C1E22164(0, v19, 0);
      uint64_t v21 = a1 + 32;
      uint64_t v20 = v92;
      do
      {
        sub_1C1DFE408(v21, (uint64_t)&v93);
        __swift_project_boxed_opaque_existential_1(&v93, v95);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t v23 = v96;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1E22164(0, *(void *)(v20 + 16) + 1, 1);
          uint64_t v20 = v92;
        }
        unint64_t v25 = *(void *)(v20 + 16);
        unint64_t v24 = *(void *)(v20 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_1C1E22164(v24 > 1, v25 + 1, 1);
          uint64_t v20 = v92;
        }
        *(void *)(v20 + 16) = v25 + 1;
        uint64_t v26 = v20 + 16 * v25;
        *(void *)(v26 + 32) = DynamicType;
        *(void *)(v26 + 40) = v23;
        v21 += 40;
        --v19;
      }
      while (v19);
      uint64_t v4 = v87;
    }
    unint64_t v28 = sub_1C1E22FD0();
    uint64_t v29 = MEMORY[0x1C874C0C0](v20, v28);
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v93 = sub_1C1DF8D44(v29, v31, (uint64_t *)&v97);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v32 = v86;
    _os_log_impl(&dword_1C1DD2000, v86, (os_log_type_t)v85, "[%{public}s]: Creating submission dictionary from objects: %{public}s", (uint8_t *)v16, 0x16u);
    uint64_t v33 = v84;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v33, -1, -1);
    MEMORY[0x1C874D2E0](v16, -1, -1);

    uint64_t v27 = *(void (**)(char *, uint64_t))(v90 + 8);
    v27(v11, v4);
    uint64_t v15 = MEMORY[0x1E4FBC860];
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v27 = *(void (**)(char *, uint64_t))(v5 + 8);
    v27(v11, v4);
  }
  unint64_t v97 = v15;
  uint64_t v34 = *(void *)(a1 + 16);
  if (v34)
  {
    uint64_t v35 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1C1DFE408(v35, (uint64_t)&v93);
      __swift_project_boxed_opaque_existential_1(&v93, v95);
      unint64_t v36 = (void *)sub_1C1EAE438();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
      sub_1C1E58AC8(v36);
      v35 += 40;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    uint64_t v15 = v97;
  }
  int64_t isa = (int64_t)v15[2].isa;
  uint64_t v38 = MEMORY[0x1E4FBC860];
  os_log_t v86 = v15;
  if (isa)
  {
    uint64_t v39 = v4;
    uint64_t v93 = MEMORY[0x1E4FBC860];
    sub_1C1DE1100(0, isa, 0);
    uint64_t v38 = v93;
    uint64_t v40 = v15 + 5;
    do
    {
      Class v42 = v40[-1].isa;
      Class v41 = v40->isa;
      uint64_t v93 = v38;
      unint64_t v44 = *(void *)(v38 + 16);
      unint64_t v43 = *(void *)(v38 + 24);
      swift_bridgeObjectRetain();
      if (v44 >= v43 >> 1)
      {
        sub_1C1DE1100(v43 > 1, v44 + 1, 1);
        uint64_t v38 = v93;
      }
      v40 += 3;
      *(void *)(v38 + 16) = v44 + 1;
      uint64_t v45 = v38 + 16 * v44;
      *(void *)(v45 + 32) = v42;
      *(void *)(v45 + 40) = v41;
      --isa;
    }
    while (isa);
    uint64_t v4 = v39;
  }
  id v46 = sub_1C1E6BE90(v38);
  id v47 = v89;
  sub_1C1EAE548();
  swift_bridgeObjectRetain();
  id v48 = sub_1C1EAE558();
  os_log_type_t v49 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    unint64_t v97 = v51;
    *(_DWORD *)uint64_t v50 = 136446466;
    uint64_t v93 = v91;
    swift_getMetatypeMetadata();
    uint64_t v52 = sub_1C1EAED68();
    uint64_t v93 = sub_1C1DF8D44(v52, v53, (uint64_t *)&v97);
    uint64_t v85 = v27;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 12) = 2082;
    uint64_t v54 = swift_bridgeObjectRetain();
    uint64_t v55 = MEMORY[0x1C874C0C0](v54, MEMORY[0x1E4FBB1A0]);
    unint64_t v57 = v56;
    swift_bridgeObjectRelease();
    uint64_t v93 = sub_1C1DF8D44(v55, v57, (uint64_t *)&v97);
    uint64_t v27 = v85;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    uint64_t v4 = v87;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v48, v49, "[%{public}s]: %{public}s are ready for submission", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v51, -1, -1);
    MEMORY[0x1C874D2E0](v50, -1, -1);

    uint64_t v58 = v89;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v58 = v47;
  }
  v27(v58, v4);
  unint64_t v59 = v88;
  os_log_t v60 = v86;
  if (v46[2])
  {
    sub_1C1EAE548();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v61 = sub_1C1EAE558();
    os_log_type_t v62 = sub_1C1EAF0C8();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      unint64_t v97 = v64;
      *(_DWORD *)uint64_t v63 = 136446722;
      uint64_t v93 = v91;
      swift_getMetatypeMetadata();
      uint64_t v65 = sub_1C1EAED68();
      uint64_t v85 = v27;
      id v66 = v60;
      uint64_t v93 = sub_1C1DF8D44(v65, v67, (uint64_t *)&v97);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 12) = 2082;
      uint64_t v68 = swift_bridgeObjectRetain();
      uint64_t v69 = MEMORY[0x1C874C0C0](v68, MEMORY[0x1E4FBB1A0]);
      unint64_t v71 = v70;
      swift_bridgeObjectRelease();
      uint64_t v93 = sub_1C1DF8D44(v69, v71, (uint64_t *)&v97);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 22) = 2080;
      sub_1C1E1D23C();
      uint64_t v73 = v72;
      uint64_t v74 = swift_bridgeObjectRetain();
      uint64_t v75 = MEMORY[0x1C874C0C0](v74, v73);
      unint64_t v77 = v76;
      swift_bridgeObjectRelease();
      uint64_t v78 = v75;
      os_log_t v60 = v66;
      uint64_t v93 = sub_1C1DF8D44(v78, v77, (uint64_t *)&v97);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v61, v62, "[%{public}s]: Found duplicate keys: %{public}s. Objects: %s", (uint8_t *)v63, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v64, -1, -1);
      MEMORY[0x1C874D2E0](v63, -1, -1);

      v85(v88, v87);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v27(v59, v4);
    }
  }
  uint64_t v79 = sub_1C1E743BC((uint64_t)v60);
  swift_bridgeObjectRelease();
  if (*(void *)(v79 + 16))
  {
    sub_1C1E6F5F4();
    uint64_t v80 = sub_1C1EAF688();
  }
  else
  {
    uint64_t v80 = MEMORY[0x1E4FBC868];
  }
  uint64_t v81 = v91;
  uint64_t v93 = v80;
  swift_bridgeObjectRetain();
  sub_1C1E6EF04(v79, 1, (uint64_t)&v93, (uint64_t)v46, v81);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v93;
}

void *sub_1C1E6BE90(uint64_t a1)
{
  uint64_t v24 = MEMORY[0x1E4FBC870];
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_30;
  }
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v22 = v1;
  do
  {
    uint64_t v5 = (uint64_t *)(v2 + 16 * v3);
    uint64_t v7 = *v5;
    uint64_t v6 = v5[1];
    uint64_t v8 = v24;
    if (!*(void *)(v24 + 16))
    {
      swift_bridgeObjectRetain();
LABEL_4:
      swift_bridgeObjectRetain();
      sub_1C1DDC1D8(&v23, v7, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    sub_1C1EAF828();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C1EAED98();
    uint64_t v9 = sub_1C1EAF858();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v11 = v9 & ~v10;
    if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    uint64_t v12 = *(void *)(v8 + 48);
    int v13 = (void *)(v12 + 16 * v11);
    BOOL v14 = *v13 == v7 && v13[1] == v6;
    if (!v14 && (sub_1C1EAF7A8() & 1) == 0)
    {
      uint64_t v18 = ~v10;
      while (1)
      {
        unint64_t v11 = (v11 + 1) & v18;
        if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          break;
        }
        int64_t v19 = (void *)(v12 + 16 * v11);
        BOOL v20 = *v19 == v7 && v19[1] == v6;
        if (v20 || (sub_1C1EAF7A8() & 1) != 0) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v1 = v22;
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_1C1E1C238(0, v4[2] + 1, 1, v4);
    }
    unint64_t v16 = v4[2];
    unint64_t v15 = v4[3];
    if (v16 >= v15 >> 1) {
      uint64_t v4 = sub_1C1E1C238((void *)(v15 > 1), v16 + 1, 1, v4);
    }
    v4[2] = v16 + 1;
    uint64_t v17 = &v4[2 * v16];
    void v17[4] = v7;
    v17[5] = v6;
    swift_bridgeObjectRelease();
    uint64_t v1 = v22;
LABEL_5:
    ++v3;
  }
  while (v3 != v1);
  swift_bridgeObjectRelease();
LABEL_30:
  swift_bridgeObjectRelease();
  return v4;
}

id sub_1C1E6C100@<X0>(void **a1@<X0>, void **a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v9 = sub_1C1EAE568();
  uint64_t v51 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  int v13 = *a2;
  sub_1C1EAE548();
  id v14 = v12;
  id v15 = v13;
  swift_bridgeObjectRetain_n();
  id v16 = v14;
  id v17 = v15;
  uint64_t v18 = sub_1C1EAE558();
  os_log_type_t v19 = sub_1C1EAF0C8();
  int v49 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    id v47 = a4;
    uint64_t v21 = v20;
    uint64_t v45 = swift_slowAlloc();
    uint64_t v52 = v45;
    *(_DWORD *)uint64_t v21 = 136446978;
    id v50 = v17;
    uint64_t v53 = a3;
    swift_getMetatypeMetadata();
    uint64_t v22 = sub_1C1EAED68();
    uint64_t v46 = v9;
    uint64_t v53 = sub_1C1DF8D44(v22, v23, &v52);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    id v24 = v16;
    id v25 = objc_msgSend(v24, sel_description);
    uint64_t v26 = sub_1C1EAED38();
    uint64_t v48 = v4;
    uint64_t v27 = v26;
    os_log_t v44 = v18;
    unint64_t v29 = v28;

    uint64_t v53 = sub_1C1DF8D44(v27, v29, &v52);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    id v30 = v50;
    id v31 = objc_msgSend(v30, sel_description);
    uint64_t v32 = sub_1C1EAED38();
    unint64_t v34 = v33;

    uint64_t v53 = sub_1C1DF8D44(v32, v34, &v52);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 2082;
    uint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v36 = MEMORY[0x1C874C0C0](v35, MEMORY[0x1E4FBB1A0]);
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_1C1DF8D44(v36, v38, &v52);
    id v17 = v50;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v39 = v44;
    _os_log_impl(&dword_1C1DD2000, v44, (os_log_type_t)v49, "[%{public}s]: duplicate objects in submission dictionary: %{public}s and %{public}s. Duplicate keys: %{public}s", (uint8_t *)v21, 0x2Au);
    uint64_t v40 = v45;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v40, -1, -1);
    uint64_t v41 = v21;
    a4 = v47;
    MEMORY[0x1C874D2E0](v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v46);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v9);
  }
  *a4 = v17;
  return v17;
}

uint64_t AppSessionAnalyticsManager.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AppSessionAnalyticsManager.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C1E6C57C(void *a1)
{
  sub_1C1E6F7C0(0, &qword_1EBB652F0, (uint64_t (*)(uint64_t))sub_1C1DF3298, MEMORY[0x1E4F67098]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = *a1
     + OBJC_IVAR____TtCC18HealthPlatformCore26AppSessionAnalyticsManager49DefaultsPredictiveGenerationAnalyticsDateProvider__dateLastPredictiveGenerationRanForAnalytics;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  sub_1C1EAD6C8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C1E6C6C8(uint64_t a1)
{
  sub_1C1DF3298();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1C1E4D384(a1, (uint64_t)&v9 - v6);
  sub_1C1E4D384((uint64_t)v7, (uint64_t)v5);
  swift_beginAccess();
  sub_1C1E6F7C0(0, &qword_1EBB652F0, (uint64_t (*)(uint64_t))sub_1C1DF3298, MEMORY[0x1E4F67098]);
  sub_1C1EAD6D8();
  swift_endAccess();
  return sub_1C1E6FAF8((uint64_t)v7, (uint64_t (*)(void))sub_1C1DF3298);
}

uint64_t sub_1C1E6C804()
{
  sub_1C1E6F7C0(0, &qword_1EBB652F0, (uint64_t (*)(uint64_t))sub_1C1DF3298, MEMORY[0x1E4F67098]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v8 - v4;
  uint64_t v6 = v0
     + OBJC_IVAR____TtCC18HealthPlatformCore26AppSessionAnalyticsManager49DefaultsPredictiveGenerationAnalyticsDateProvider__dateLastPredictiveGenerationRanForAnalytics;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1C1EAD6C8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C1E6C948(uint64_t a1)
{
  sub_1C1DF3298();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C1E4D384(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_1C1E6F7C0(0, &qword_1EBB652F0, (uint64_t (*)(uint64_t))sub_1C1DF3298, MEMORY[0x1E4F67098]);
  sub_1C1EAD6D8();
  swift_endAccess();
  return sub_1C1E6FAF8(a1, (uint64_t (*)(void))sub_1C1DF3298);
}

uint64_t (*sub_1C1E6CA50(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C1E6F7C0(0, &qword_1EBB652F0, (uint64_t (*)(uint64_t))sub_1C1DF3298, MEMORY[0x1E4F67098]);
  v2[7] = sub_1C1EAD6B8();
  return sub_1C1E6CB08;
}

uint64_t AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.__allocating_init()()
{
  sub_1C1DF3298();
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = swift_allocObject();
  sub_1C1DF9F8C(0, &qword_1EBB68240);
  sub_1C1EAF108();
  uint64_t v4 = sub_1C1EAD318();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  sub_1C1EAD6E8();
  return v3;
}

uint64_t AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.init()()
{
  sub_1C1DF3298();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1DF9F8C(0, &qword_1EBB68240);
  sub_1C1EAF108();
  uint64_t v4 = sub_1C1EAD318();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_1C1EAD6E8();
  return v0;
}

uint64_t sub_1C1E6CD64()
{
  sub_1C1DF3298();
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider();
  uint64_t v3 = swift_allocObject();
  sub_1C1DF9F8C(0, &qword_1EBB68240);
  sub_1C1EAF108();
  uint64_t v4 = sub_1C1EAD318();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  uint64_t result = sub_1C1EAD6E8();
  qword_1EBB667B8 = v3;
  return result;
}

void sub_1C1E6CEA0(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, char a9)
{
  if (a9)
  {
    sub_1C1E6CF54(a1);
  }
  else
  {
  }
}

void sub_1C1E6CF54(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

uint64_t static AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.shared.getter()
{
  if (qword_1EBB67888 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.deinit()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC18HealthPlatformCore26AppSessionAnalyticsManager49DefaultsPredictiveGenerationAnalyticsDateProvider__dateLastPredictiveGenerationRanForAnalytics;
  sub_1C1E6F7C0(0, &qword_1EBB652F0, (uint64_t (*)(uint64_t))sub_1C1DF3298, MEMORY[0x1E4F67098]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.__deallocating_deinit()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC18HealthPlatformCore26AppSessionAnalyticsManager49DefaultsPredictiveGenerationAnalyticsDateProvider__dateLastPredictiveGenerationRanForAnalytics;
  sub_1C1E6F7C0(0, &qword_1EBB652F0, (uint64_t (*)(uint64_t))sub_1C1DF3298, MEMORY[0x1E4F67098]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1C1E6D124()
{
  sub_1C1E6F7C0(0, &qword_1EBB652F0, (uint64_t (*)(uint64_t))sub_1C1DF3298, MEMORY[0x1E4F67098]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v8 - v4;
  uint64_t v6 = *v0
     + OBJC_IVAR____TtCC18HealthPlatformCore26AppSessionAnalyticsManager49DefaultsPredictiveGenerationAnalyticsDateProvider__dateLastPredictiveGenerationRanForAnalytics;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1C1EAD6C8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C1E6D26C(uint64_t a1)
{
  sub_1C1DF3298();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C1E4D384(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_1C1E6F7C0(0, &qword_1EBB652F0, (uint64_t (*)(uint64_t))sub_1C1DF3298, MEMORY[0x1E4F67098]);
  sub_1C1EAD6D8();
  swift_endAccess();
  return sub_1C1E6FAF8(a1, (uint64_t (*)(void))sub_1C1DF3298);
}

uint64_t (*sub_1C1E6D378(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C1E6F7C0(0, &qword_1EBB652F0, (uint64_t (*)(uint64_t))sub_1C1DF3298, MEMORY[0x1E4F67098]);
  v2[7] = sub_1C1EAD6B8();
  return sub_1C1E6CB08;
}

void sub_1C1E6D434(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  swift_endAccess();
  free(v1);
}

uint64_t sub_1C1E6D48C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1C1EAE568();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE548();
  sub_1C1E6E878(a1);
  sub_1C1E6E878(a1);
  uint64_t v12 = sub_1C1EAE558();
  os_log_type_t v13 = sub_1C1EAF0B8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    id v24 = a3;
    uint64_t v15 = v14;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v29 = v25;
    *(_DWORD *)uint64_t v15 = 136446722;
    uint64_t v27 = a4;
    uint64_t v28 = type metadata accessor for AppSessionAnalyticsManager();
    sub_1C1E6F718();
    uint64_t v26 = v8;
    uint64_t v16 = sub_1C1EAED68();
    uint64_t v28 = sub_1C1DF8D44(v16, v17, &v29);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    uint64_t v28 = a2;
    v24(0);
    uint64_t v18 = sub_1C1EAED68();
    uint64_t v28 = sub_1C1DF8D44(v18, v19, &v29);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2080;
    uint64_t v28 = (uint64_t)a1;
    sub_1C1E6E878(a1);
    uint64_t v20 = sub_1C1EAED68();
    uint64_t v28 = sub_1C1DF8D44(v20, v21, &v29);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    sub_1C1E6CF54(a1);
    sub_1C1E6CF54(a1);
    _os_log_impl(&dword_1C1DD2000, v12, v13, "[%{public}s]: Error returned when gathering analytics of kind %{public}s: %s", (uint8_t *)v15, 0x20u);
    uint64_t v22 = v25;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v22, -1, -1);
    MEMORY[0x1C874D2E0](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v26);
  }
  else
  {
    sub_1C1E6CF54(a1);
    sub_1C1E6CF54(a1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return sub_1C1EAE8C8();
}

uint64_t sub_1C1E6D79C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v40 = a1;
  sub_1C1E6F78C(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E6F824();
  uint64_t v38 = v8;
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v34 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E6F9B8();
  uint64_t v39 = v10;
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v35 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C1EAE568();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42[1] = a2;
  sub_1C1EAE548();
  uint64_t v16 = sub_1C1EAE558();
  os_log_type_t v17 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    v33[0] = v12;
    unint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    v33[1] = v3;
    uint64_t v21 = v20;
    v42[0] = v20;
    *(_DWORD *)unint64_t v19 = 136446210;
    uint64_t v22 = sub_1C1E6533C();
    uint64_t v41 = sub_1C1DF8D44(v22, v23, v42);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, v16, v17, "[%{public}s]: Collecting RelevanceEngine metrics", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v21, -1, -1);
    MEMORY[0x1C874D2E0](v19, -1, -1);

    (*(void (**)(char *, void))(v13 + 8))(v15, v33[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  swift_allocObject();
  swift_weakInit();
  id v24 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E4F1AC28];
  sub_1C1E6F94C(0, &qword_1EBB66F78, (uint64_t)&type metadata for AppSessionAnalyticsEvent.ModelAnalytics, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  v42[0] = sub_1C1EAE8F8();
  uint64_t v25 = sub_1C1EAF158();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v7, 1, 1, v25);
  sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68388);
  sub_1C1E6E1F8(&qword_1EBB66F70, &qword_1EBB66F78, v24);
  sub_1C1DFAEA0((unint64_t *)&qword_1EBB67F58, (unint64_t *)&qword_1EBB68388);
  uint64_t v27 = v34;
  sub_1C1EAEAE8();
  sub_1C1E6FAF8((uint64_t)v7, (uint64_t (*)(void))sub_1C1E6F78C);
  swift_release();
  v26(v7, 1, 1, v25);
  sub_1C1E6FC7C(&qword_1EBB64FD0, (void (*)(uint64_t))sub_1C1E6F824);
  uint64_t v28 = v35;
  uint64_t v29 = v38;
  sub_1C1EAEAF8();
  sub_1C1E6FAF8((uint64_t)v7, (uint64_t (*)(void))sub_1C1E6F78C);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v29);
  sub_1C1E6FC7C(&qword_1EBB64F18, (void (*)(uint64_t))sub_1C1E6F9B8);
  uint64_t v30 = v39;
  uint64_t v31 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v30);
  return v31;
}

unint64_t sub_1C1E6DDD0()
{
  unint64_t result = qword_1EBB66798;
  if (!qword_1EBB66798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB66798);
  }
  return result;
}

uint64_t sub_1C1E6DE24()
{
  return MEMORY[0x1F4186498](v0, 80, 7);
}

unint64_t sub_1C1E6DE94()
{
  unint64_t result = qword_1EBB664B0;
  if (!qword_1EBB664B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB664B0);
  }
  return result;
}

void sub_1C1E6DEE8()
{
  if (!qword_1EBB64DB0)
  {
    sub_1C1E6DF7C();
    sub_1C1E6FC7C(&qword_1EBB66EA8, (void (*)(uint64_t))sub_1C1E6DF7C);
    unint64_t v0 = sub_1C1EAE638();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64DB0);
    }
  }
}

void sub_1C1E6DF7C()
{
  if (!qword_1EBB66EB0)
  {
    sub_1C1E6E01C();
    sub_1C1E6FC7C(&qword_1EBB66EE8, (void (*)(uint64_t))sub_1C1E6E01C);
    unint64_t v0 = sub_1C1EAE698();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB66EB0);
    }
  }
}

void sub_1C1E6E01C()
{
  if (!qword_1EBB66EF0)
  {
    sub_1C1DF9148(255, (unint64_t *)&qword_1EBB66220);
    unint64_t v0 = sub_1C1EAE7D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB66EF0);
    }
  }
}

void sub_1C1E6E094()
{
  if (!qword_1EBB66E90)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E4F1AAE0];
    sub_1C1E6F94C(255, &qword_1EBB66F10, (uint64_t)&type metadata for AppSessionAnalyticsEvent.ModelAnalytics, MEMORY[0x1E4F1AAE0]);
    sub_1C1E6E360(255, &qword_1EBB66F58);
    sub_1C1E6E1F8(&qword_1EBB66F08, &qword_1EBB66F10, v0);
    sub_1C1E6E438(&qword_1EBB66F50, &qword_1EBB66F58);
    unint64_t v1 = sub_1C1EAE678();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB66E90);
    }
  }
}

unint64_t sub_1C1E6E1A4()
{
  unint64_t result = qword_1EBB667B0;
  if (!qword_1EBB667B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB667B0);
  }
  return result;
}

uint64_t sub_1C1E6E1F8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, ValueMetadata *, unint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1E6F94C(255, a2, (uint64_t)&type metadata for AppSessionAnalyticsEvent.ModelAnalytics, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1E6E248(uint64_t a1)
{
}

void sub_1C1E6E284()
{
  if (!qword_1EBB66E80)
  {
    sub_1C1E6F94C(255, &qword_1EBB66F00, (uint64_t)&type metadata for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics, MEMORY[0x1E4F1AAE0]);
    sub_1C1E6E360(255, &qword_1EBB66F48);
    sub_1C1E6E3BC();
    sub_1C1E6E438(&qword_1EBB66F40, &qword_1EBB66F48);
    unint64_t v0 = sub_1C1EAE678();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB66E80);
    }
  }
}

void sub_1C1E6E360(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C1EAE8D8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1C1E6E3BC()
{
  unint64_t result = qword_1EBB66EF8;
  if (!qword_1EBB66EF8)
  {
    sub_1C1E6F94C(255, &qword_1EBB66F00, (uint64_t)&type metadata for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB66EF8);
  }
  return result;
}

uint64_t sub_1C1E6E438(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1E6E360(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1E6E488(uint64_t a1)
{
}

void sub_1C1E6E4C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1C1DF9148(255, (unint64_t *)&qword_1EBB66220);
    sub_1C1E6FC7C(a4, a5);
    unint64_t v8 = sub_1C1EAE668();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1E6E578(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1C1DFE46C(&v12, v10 + 40 * a1 + 32);
}

id sub_1C1E6E610@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 16);
  id v13 = *(id *)(a1 + 24);
  uint64_t v6 = *(void **)(a1 + 32);
  a2[3] = &type metadata for AppSessionAnalyticsEvent.ModelAnalytics;
  a2[4] = sub_1C1E6F66C();
  uint64_t v7 = (void *)swift_allocObject();
  *a2 = v7;
  long long v7[2] = v3;
  v7[3] = v4;
  v7[4] = v5;
  v7[5] = v13;
  v7[6] = v6;
  id v8 = v6;
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  return v13;
}

uint64_t sub_1C1E6E6B8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1E6D48C(*a1, (uint64_t)&type metadata for AppSessionAnalyticsEvent.ModelAnalytics, (void (*)(void))sub_1C1E6F750, a2);
}

id sub_1C1E6E6F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = *(void **)a1;
  id v6 = *(id *)(a1 + 8);
  a2[3] = &type metadata for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics;
  a2[4] = sub_1C1E6FB58();
  *a2 = v3;
  a2[1] = v6;
  id v4 = v3;
  return v6;
}

uint64_t sub_1C1E6E754@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1E6D48C(*a1, (uint64_t)&type metadata for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics, (void (*)(void))sub_1C1E6FBAC, a2);
}

uint64_t sub_1C1E6E78C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E6E7C4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1E6E7FC(uint64_t a1)
{
  return sub_1C1E68CB0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C1E6E804()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1C1E6E844()
{
  sub_1C1E69F30(*(unsigned __int8 *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1C1E6E858()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C1E6E868(id result)
{
  if (result != (id)2) {
    return sub_1C1E6E878(result);
  }
  return result;
}

id sub_1C1E6E878(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

void sub_1C1E6E888(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  if (a2)
  {
  }
}

void sub_1C1E6E910(id a1)
{
  if (a1 != (id)2) {
    sub_1C1E6CF54(a1);
  }
}

uint64_t sub_1C1E6E920@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 16;
  swift_beginAccess();
  return sub_1C1DFE408(v3, a2);
}

uint64_t method lookup function for AppSessionAnalyticsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppSessionAnalyticsManager);
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.predictiveGenerationDateProvider.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.predictiveGenerationDateProvider.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.predictiveGenerationDateProvider.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.updateCurrentEventWithEndOfSessionAnalytics(from:in:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.getCurrentSubmissionDictionary()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.submitCurrentEvent(resetAfterSubmitted:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.resetCurrentEvent()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.collectHighlightsFeedPresentationAnalytics(in:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of PredictiveGenerationAnalyticsDateProvider.dateLastPredictiveGenerationRanForAnalytics.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PredictiveGenerationAnalyticsDateProvider.dateLastPredictiveGenerationRanForAnalytics.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PredictiveGenerationAnalyticsDateProvider.dateLastPredictiveGenerationRanForAnalytics.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1C1E6EB2C()
{
  return type metadata accessor for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider();
}

void sub_1C1E6EB34()
{
  sub_1C1E6F7C0(319, &qword_1EBB652F0, (uint64_t (*)(uint64_t))sub_1C1DF3298, MEMORY[0x1E4F67098]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider);
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.dateLastPredictiveGenerationRanForAnalytics.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.dateLastPredictiveGenerationRanForAnalytics.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.dateLastPredictiveGenerationRanForAnalytics.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1C1E6EC8C(uint64_t a1)
{
}

void sub_1C1E6ECC0(uint64_t a1)
{
}

void sub_1C1E6ECF4(uint64_t a1)
{
}

void sub_1C1E6ED28(uint64_t a1)
{
}

uint64_t sub_1C1E6ED5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1E6EDC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1C1E6FBE8();
    uint64_t v3 = sub_1C1EAF488();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      uint64_t v7 = *(void *)(v6 + 8 * v4);
      sub_1C1EAF828();
      sub_1C1EAF838();
      uint64_t result = sub_1C1EAF858();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(void *)(v14 + 8 * v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(void *)(v14 + 8 * v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(void *)(v14 + 8 * v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

void sub_1C1E6EF04(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v33 = v5;
  for (unint64_t i = (void **)(swift_bridgeObjectRetain() + 48); ; i += 3)
  {
    uint64_t v15 = (uint64_t)*(i - 1);
    uint64_t v16 = *i;
    uint64_t v37 = (uint64_t)*(i - 2);
    uint64_t v14 = v37;
    uint64_t v38 = v15;
    uint64_t v39 = v16;
    BOOL v17 = *(void **)a3;
    swift_bridgeObjectRetain();
    id v18 = v16;
    unint64_t v20 = sub_1C1DE7C10(v14, v15);
    uint64_t v21 = v17[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      swift_bridgeObjectRelease();
      sub_1C1EAF7D8();
      __break(1u);
      goto LABEL_24;
    }
    char v24 = v19;
    if (v17[3] < v23) {
      break;
    }
    if (a2)
    {
      if (v19) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1C1E9F6DC();
      if (v24) {
        goto LABEL_13;
      }
    }
LABEL_3:
    uint64_t v9 = *(void **)a3;
    *(void *)(*(void *)a3 + 8 * (v20 >> 6) + 64) |= 1 << v20;
    unint64_t v10 = (uint64_t *)(v9[6] + 16 * v20);
    *unint64_t v10 = v14;
    v10[1] = v15;
    *(void *)(v9[7] + 8 * v20) = v18;
    uint64_t v11 = v9[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_22;
    }
    long long v9[2] = v13;
LABEL_5:
    a2 = 1;
    if (!--v6)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1C1E9EEF4(v23, a2 & 1);
  unint64_t v25 = sub_1C1DE7C10(v14, v15);
  if ((v24 & 1) != (v26 & 1)) {
    goto LABEL_23;
  }
  unint64_t v20 = v25;
  if ((v24 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_13:
  uint64_t v27 = *(void **)a3;
  id v36 = *(id *)(*(void *)(*(void *)a3 + 56) + 8 * v20);
  id v28 = v36;
  sub_1C1E6C100(&v36, &v39, a5, v35);
  if (!v33)
  {
    unint64_t v33 = 0;
    swift_bridgeObjectRelease();

    uint64_t v29 = v27[7];
    uint64_t v30 = v35[0];

    *(void *)(v29 + 8 * v20) = v30;
    goto LABEL_5;
  }

  id v36 = v33;
  id v31 = v33;
  sub_1C1DF9148(0, (unint64_t *)&qword_1EBB68150);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  v35[0] = 0;
  v35[1] = 0xE000000000000000;
  sub_1C1EAF4A8();
  sub_1C1EAEDB8();
  sub_1C1EAF5B8();
  sub_1C1EAEDB8();
  swift_bridgeObjectRelease();
  sub_1C1EAF628();
  __break(1u);
}

uint64_t sub_1C1E6F24C(uint64_t a1)
{
  uint64_t v2 = sub_1C1EAD3B8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1C1E6F560();
    uint64_t v9 = sub_1C1EAF488();
    uint64_t v10 = 0;
    BOOL v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    id v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1C1E6FC7C(&qword_1EBB67DE0, MEMORY[0x1E4F27C88]);
      uint64_t v16 = sub_1C1EAECB8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1C1E6FC7C(&qword_1EBB65B48, MEMORY[0x1E4F27C88]);
          char v23 = sub_1C1EAED18();
          char v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        unint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

void sub_1C1E6F560()
{
  if (!qword_1EBB67DE8)
  {
    sub_1C1EAD3B8();
    sub_1C1E6FC7C(&qword_1EBB67DE0, MEMORY[0x1E4F27C88]);
    unint64_t v0 = sub_1C1EAF498();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67DE8);
    }
  }
}

void sub_1C1E6F5F4()
{
  if (!qword_1EBB67078)
  {
    sub_1C1DF9F8C(255, &qword_1EBB683E0);
    unint64_t v0 = sub_1C1EAF698();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB67078);
    }
  }
}

unint64_t sub_1C1E6F66C()
{
  unint64_t result = qword_1EBB667A8;
  if (!qword_1EBB667A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB667A8);
  }
  return result;
}

uint64_t sub_1C1E6F6C0()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

unint64_t sub_1C1E6F718()
{
  unint64_t result = qword_1EBB64710;
  if (!qword_1EBB64710)
  {
    type metadata accessor for AppSessionAnalyticsManager();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB64710);
  }
  return result;
}

unint64_t sub_1C1E6F750()
{
  unint64_t result = qword_1EBB64728;
  if (!qword_1EBB64728)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB64728);
  }
  return result;
}

void sub_1C1E6F78C(uint64_t a1)
{
}

void sub_1C1E6F7C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1E6F824()
{
  if (!qword_1EBB64758)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E4F1AC28];
    sub_1C1E6F94C(255, &qword_1EBB66F78, (uint64_t)&type metadata for AppSessionAnalyticsEvent.ModelAnalytics, MEMORY[0x1E4F1AC28]);
    sub_1C1DF9F8C(255, (unint64_t *)&qword_1EBB68388);
    sub_1C1E6E1F8(&qword_1EBB66F70, &qword_1EBB66F78, v0);
    sub_1C1DFAEA0((unint64_t *)&qword_1EBB67F58, (unint64_t *)&qword_1EBB68388);
    unint64_t v1 = sub_1C1EAE768();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB64758);
    }
  }
}

void sub_1C1E6F94C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v8 = sub_1C1E6E1A4();
    unint64_t v9 = a4(a1, a3, &type metadata for AppSessionAnalyticsEvent.Failure, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C1E6F9B8()
{
  if (!qword_1EBB64F20)
  {
    sub_1C1E6F824();
    sub_1C1DF9F8C(255, (unint64_t *)&qword_1EBB68388);
    sub_1C1E6FC7C(&qword_1EBB64FD0, (void (*)(uint64_t))sub_1C1E6F824);
    sub_1C1DFAEA0((unint64_t *)&qword_1EBB67F58, (unint64_t *)&qword_1EBB68388);
    unint64_t v0 = sub_1C1EAE6D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64F20);
    }
  }
}

uint64_t sub_1C1E6FAB8()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1E6FAF0(uint64_t (*a1)(_OWORD *), uint64_t a2)
{
  return sub_1C1E87474(a1, a2);
}

uint64_t sub_1C1E6FAF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C1E6FB58()
{
  unint64_t result = qword_1EBB665B0;
  if (!qword_1EBB665B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB665B0);
  }
  return result;
}

unint64_t sub_1C1E6FBAC()
{
  unint64_t result = qword_1EA2C1558;
  if (!qword_1EA2C1558)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C1558);
  }
  return result;
}

void sub_1C1E6FBE8()
{
  if (!qword_1EBB65218)
  {
    type metadata accessor for HKProfileType(255);
    sub_1C1E6FC7C(&qword_1EBB659D0, type metadata accessor for HKProfileType);
    unint64_t v0 = sub_1C1EAF498();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65218);
    }
  }
}

uint64_t sub_1C1E6FC7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1E6FCC8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CommitRedirectingFeedItemContext()
{
  return self;
}

uint64_t sub_1C1E6FD2C(uint64_t a1, uint64_t a2)
{
  return sub_1C1E700A4(a1, a2, MEMORY[0x1E4F67158]);
}

uint64_t sub_1C1E6FD44()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_1C1EAD8C8() & 1;
}

uint64_t sub_1C1E6FD90()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_1C1EAD908();
}

uint64_t sub_1C1E6FDE0()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_1C1EAD8F8();
}

uint64_t sub_1C1E6FE28()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_1C1EAD8D8();
}

uint64_t sub_1C1E6FE78(uint64_t a1, uint64_t a2)
{
  return sub_1C1E700A4(a1, a2, MEMORY[0x1E4F67170]);
}

uint64_t sub_1C1E6FE90(uint64_t a1, uint64_t a2)
{
  return sub_1C1E700A4(a1, a2, MEMORY[0x1E4F67160]);
}

uint64_t sub_1C1E6FEA8()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_1C1EAD918();
}

uint64_t sub_1C1E6FEF8@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  a2[3] = &type metadata for DispatchQueueGeneratorScheduler;
  a2[4] = sub_1C1DDDE24();
  uint64_t v6 = (void *)swift_allocObject();
  *a2 = v6;
  v6[5] = type metadata accessor for CommitRedirectingFeedItemContext();
  v6[6] = a1;
  v6[2] = v5;
  return swift_retain();
}

uint64_t sub_1C1E6FF78()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 56))();
}

uint64_t sub_1C1E6FFAC()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_1C1EAD8A8();
}

uint64_t sub_1C1E70024()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  return sub_1C1EAD8E8();
}

uint64_t sub_1C1E7008C(uint64_t a1, uint64_t a2)
{
  return sub_1C1E700A4(a1, a2, MEMORY[0x1E4F67168]);
}

uint64_t sub_1C1E700A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(*(void *)v3 + 40);
  uint64_t v6 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v5);
  return a3(v5, v6);
}

uint64_t sub_1C1E700F4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void *static AllDataSummarySection.Identifier.defaultAllDataSummarySections.getter()
{
  return &unk_1F1D65358;
}

void *static AllDataSummarySection.Identifier.categoryAllDataSummarySections.getter()
{
  return &unk_1F1D65380;
}

void sub_1C1E70144()
{
  sub_1C1EAED38();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v1 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    sub_1C1E70EE0();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    qword_1EBB66230 = v3;
  }
  else
  {
    __break(1u);
  }
}

uint64_t static BundleFeedItemPluginBundleProvider.sharedInstance.setter(uint64_t a1)
{
  if (qword_1EBB67100 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EBB66230 = a1;
  return swift_release();
}

uint64_t (*static BundleFeedItemPluginBundleProvider.sharedInstance.modify())()
{
  if (qword_1EBB67100 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t BundleFeedItemPluginBundleProvider.deinit()
{
  return v0;
}

uint64_t BundleFeedItemPluginBundleProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void *(*sub_1C1E7030C(id *a1))(void *result)
{
  a1[1] = v1;
  *a1 = sub_1C1DEF620();
  return sub_1C1E70354;
}

void *sub_1C1E70354(void *result)
{
  *(void *)(result[1] + 40) = *result;
  return result;
}

uint64_t sub_1C1E70360(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1C1EAE568();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v36 - v10;
  id v12 = sub_1C1DEF620();
  if (v12)
  {
    uint64_t v13 = (uint64_t)v12;
    uint64_t v14 = swift_conformsToProtocol2();
    if (v14) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    if (!v14) {
      uint64_t v13 = 0;
    }
    if (v13)
    {
      sub_1C1DFE408(a1, (uint64_t)&v38);
      v39[3] = v13;
      v39[4] = v15;
      __swift_allocate_boxed_opaque_existential_0(v39);
      sub_1C1EAE068();
      sub_1C1E70B4C();
      sub_1C1E70BA4();
      if (swift_dynamicCast()) {
        return v38;
      }
      sub_1C1EAE4F8();
      uint64_t v33 = sub_1C1EAE558();
      os_log_type_t v34 = sub_1C1EAF0B8();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_1C1DD2000, v33, v34, "Principal class is not operation-backed", v35, 2u);
        MEMORY[0x1C874D2E0](v35, -1, -1);
      }

      id v31 = *(void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v32 = v11;
      goto LABEL_16;
    }
  }
  sub_1C1EAE4F8();
  swift_retain_n();
  uint64_t v17 = sub_1C1EAE558();
  os_log_type_t v18 = sub_1C1EAF0B8();
  if (!os_log_type_enabled(v17, v18))
  {

    swift_release_n();
    id v31 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v32 = v9;
LABEL_16:
    v31(v32, v5);
    return 0;
  }
  uint64_t v19 = swift_slowAlloc();
  uint64_t v36 = swift_slowAlloc();
  uint64_t v40 = v36;
  *(_DWORD *)uint64_t v19 = 136446978;
  uint64_t v37 = v5;
  v39[0] = v4;
  swift_getMetatypeMetadata();
  uint64_t v20 = sub_1C1EAED68();
  v39[0] = sub_1C1DF8D44(v20, v21, &v40);
  sub_1C1EAF2C8();
  swift_bridgeObjectRelease();
  *(_WORD *)(v19 + 12) = 2082;
  swift_beginAccess();
  uint64_t v22 = v2[3];
  unint64_t v23 = v2[4];
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1C1DF8D44(v22, v23, &v40);
  sub_1C1EAF2C8();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v19 + 22) = 2082;
  uint64_t v38 = v2[5];
  sub_1C1E70AF4();
  uint64_t v24 = sub_1C1EAED68();
  uint64_t v38 = sub_1C1DF8D44(v24, v25, &v40);
  sub_1C1EAF2C8();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v19 + 32) = 2082;
  swift_beginAccess();
  id v26 = objc_msgSend((id)v2[2], sel_bundlePath);
  uint64_t v27 = sub_1C1EAED38();
  unint64_t v29 = v28;

  v39[5] = sub_1C1DF8D44(v27, v29, &v40);
  sub_1C1EAF2C8();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1C1DD2000, v17, v18, "[%{public}s]: Bundle %{public}s principal class %{public}s does not conform to FeedItemGenerator protocol. Location: %{public}s", (uint8_t *)v19, 0x2Au);
  uint64_t v30 = v36;
  swift_arrayDestroy();
  MEMORY[0x1C874D2E0](v30, -1, -1);
  MEMORY[0x1C874D2E0](v19, -1, -1);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v37);
  return 0;
}

uint64_t BundleFeedItemGenerationPluginInfo.__allocating_init(bundle:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  BundleFeedItemGenerationPluginInfo.init(bundle:)(a1);
  return v2;
}

uint64_t BundleFeedItemGenerationPluginInfo.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BundleFeedItemGenerationPluginInfo.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1C1E708E0()
{
  return sub_1C1DEF620();
}

uint64_t sub_1C1E70904(uint64_t result)
{
  *(void *)(*(void *)v1 + 40) = result;
  return result;
}

void *(*sub_1C1E70910(id *a1))(void *result)
{
  a1[1] = *v1;
  *a1 = sub_1C1DEF620();
  return sub_1C1E70F70;
}

uint64_t sub_1C1E7095C(uint64_t a1)
{
  return sub_1C1E70360(a1);
}

uint64_t BundleFeedItemGenerationPluginInfo.description.getter()
{
  return 0;
}

uint64_t sub_1C1E70AD0()
{
  return BundleFeedItemGenerationPluginInfo.description.getter();
}

void sub_1C1E70AF4()
{
  if (!qword_1EBB65B18)
  {
    sub_1C1DE0D78();
    unint64_t v0 = sub_1C1EAF2A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB65B18);
    }
  }
}

unint64_t sub_1C1E70B4C()
{
  unint64_t result = qword_1EBB67520;
  if (!qword_1EBB67520)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB67520);
  }
  return result;
}

unint64_t sub_1C1E70BA4()
{
  unint64_t result = qword_1EBB67518;
  if (!qword_1EBB67518)
  {
    sub_1C1DF9F8C(255, &qword_1EBB66FC0);
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB67518);
  }
  return result;
}

unint64_t sub_1C1E70C14()
{
  unint64_t result = qword_1EBB66B48;
  if (!qword_1EBB66B48)
  {
    type metadata accessor for BundleFeedItemGenerationPluginInfo();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB66B48);
  }
  return result;
}

id sub_1C1E70C4C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 16);
  *a2 = v4;
  return v4;
}

uint64_t sub_1C1E70CA8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 32);
  *a2 = *(void *)(v3 + 24);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_1C1E70CF8@<X0>(void *a1@<X8>)
{
  id result = sub_1C1DEF620();
  *a1 = result;
  return result;
}

void *sub_1C1E70D24(void *result, uint64_t a2)
{
  *(void *)(*(void *)a2 + 40) = *result;
  return result;
}

uint64_t method lookup function for BundleFeedItemPluginBundleProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BundleFeedItemPluginBundleProvider);
}

uint64_t method lookup function for BundleFeedItemGenerationPluginInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BundleFeedItemGenerationPluginInfo);
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.bundle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.bundle.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.bundle.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.bundleIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.bundleIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.bundleIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.principalClass.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.principalClass.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.makeFeedItemGenerator(context:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.makeHealthPluginDelegate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.__allocating_init(bundle:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

void sub_1C1E70EE0()
{
  if (!qword_1EBB664A0)
  {
    type metadata accessor for BundleFeedItemGenerationPluginInfo();
    sub_1C1E18118(&qword_1EBB67E18, v0, (void (*)(uint64_t))type metadata accessor for BundleFeedItemGenerationPluginInfo);
    unint64_t v1 = type metadata accessor for PluginBundleProvider();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB664A0);
    }
  }
}

void sub_1C1E70F78()
{
  sub_1C1EADBA8();
  sub_1C1EADC88();
  uint64_t v0 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_featureWithName_featureType_, v0, 1);

  qword_1EBB6ABB0 = (uint64_t)v1;
}

id sub_1C1E70FF8()
{
  id result = objc_msgSend(self, sel_frequencyTransformWithCount_minimumValidCount_, 1000, 100);
  qword_1EBB6ABC8 = (uint64_t)result;
  return result;
}

id sub_1C1E7103C()
{
  if (qword_1EBB65308 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB6ABB0;
  if (qword_1EBB65320 != -1) {
    swift_once();
  }
  id result = objc_msgSend(v0, sel_featureByUsingTransformer_, qword_1EBB6ABC8);
  qword_1EBB6ABC0 = (uint64_t)result;
  return result;
}

void sub_1C1E710E8()
{
  if (qword_1EBB65318 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB6ABC0;
  id v1 = self;
  uint64_t v2 = (void *)sub_1C1EAED28();
  v6[4] = sub_1C1E71240;
  v6[5] = 0;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_1C1E712EC;
  v6[3] = &block_descriptor_7;
  uint64_t v3 = _Block_copy(v6);
  id v4 = objc_msgSend(v1, sel_customTransformerWithName_outputType_block_, v2, 2, v3);
  _Block_release(v3);

  id v5 = objc_msgSend(v0, sel_featureByUsingTransformer_, v4);
  qword_1EBB6ABB8 = (uint64_t)v5;
}

id sub_1C1E71240(void *a1)
{
  if (objc_msgSend(a1, sel_int64Value))
  {
    uint64_t v2 = self;
  }
  else
  {
    objc_msgSend(a1, sel_doubleValue);
    double v4 = v3;
    uint64_t v2 = self;
    if (v4 < 0.05)
    {
      double v5 = 1.0;
      goto LABEL_6;
    }
  }
  double v5 = 0.0;
LABEL_6:
  id v6 = objc_msgSend(v2, sel_featureValueWithDouble_, v5);
  return v6;
}

id sub_1C1E712EC(uint64_t a1, void *a2)
{
  double v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  double v5 = (void *)v3();
  swift_release();

  return v5;
}

void sub_1C1E71354()
{
  uint64_t v1 = sub_1C1EADBA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C1EAE568();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1EAE508();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  unint64_t v9 = sub_1C1EAE558();
  os_log_type_t v10 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v23 = v5;
    id v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    uint64_t v27 = v13;
    uint64_t v24 = v1;
    uint64_t v25 = v0;
    *(_DWORD *)id v12 = 136315138;
    uint64_t v15 = sub_1C1EADB98();
    uint64_t v26 = sub_1C1DF8D44(v15, v16, &v27);
    uint64_t v17 = v24;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
    _os_log_impl(&dword_1C1DD2000, v9, v10, "Incrementing novelty count for %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v14, -1, -1);
    MEMORY[0x1C874D2E0](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v23);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  if (qword_1EBB65320 != -1) {
    swift_once();
  }
  os_log_type_t v18 = (void *)qword_1EBB6ABC8;
  sub_1C1EADC78();
  uint64_t v19 = (void *)sub_1C1EAED28();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(self, sel_featureValueWithString_, v19);

  objc_msgSend(v18, sel_increaseCountForFeatureValue_, v20);
}

uint64_t SearchSection.localizedHeaderTitle(for:)(char a1, char a2)
{
  switch(a2)
  {
    case 1:
      if (qword_1EBB65E20 != -1) {
        goto LABEL_30;
      }
      break;
    case 2:
      if (qword_1EBB65E20 != -1) {
        goto LABEL_30;
      }
      break;
    case 3:
      if (qword_1EBB65E20 != -1) {
        goto LABEL_30;
      }
      break;
    case 4:
      if (a1)
      {
        if (qword_1EBB65E20 != -1) {
          goto LABEL_30;
        }
      }
      else if (qword_1EBB65E20 != -1)
      {
        swift_once();
      }
      break;
    case 5:
    case 6:
    case 7:
    case 8:
      if (a1)
      {
        if (qword_1EBB65E20 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBB65E20 != -1)
      {
        swift_once();
      }
      break;
    case 9:
      if (qword_1EBB65E20 != -1) {
        goto LABEL_30;
      }
      break;
    case 10:
      if (qword_1EBB65E20 != -1) {
        goto LABEL_30;
      }
      break;
    case 11:
      if (qword_1EBB65E20 != -1) {
        goto LABEL_30;
      }
      break;
    case 12:
      if (qword_1EBB65E20 != -1) {
        goto LABEL_30;
      }
      break;
    default:
      if (qword_1EBB65E20 != -1) {
LABEL_30:
      }
        swift_once();
      break;
  }
  return sub_1C1EAD178();
}

uint64_t HKHealthStore.makeSharedSummariesFromLatestTransactionPublisher(sharedTransactionPublisher:pluginName:identifiers:objectTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a4;
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  sub_1C1E15194();
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E7355C(0, (unint64_t *)&qword_1EBB65850, (uint64_t (*)(uint64_t))sub_1C1E15194, sub_1C1E7344C, MEMORY[0x1E4F1AA38]);
  uint64_t v30 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v26 - v12;
  if (a1) {
    uint64_t v14 = a1;
  }
  else {
    uint64_t v14 = HKHealthStore.makeLatestTransactionPublisher()();
  }
  uint64_t v28 = v14;
  uint64_t v33 = v14;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1DFE85C(0, &qword_1EBB65080, &qword_1EBB65148, MEMORY[0x1E4FBB718]);
  sub_1C1DFE8E8(&qword_1EBB65078, &qword_1EBB65080, &qword_1EBB65148, v15);
  swift_retain();
  sub_1C1EAEA98();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v19 = v26;
  uint64_t v18 = v27;
  void v17[2] = v16;
  v17[3] = v18;
  uint64_t v20 = v29;
  void v17[4] = v19;
  v17[5] = v20;
  v17[6] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1EAE7C8();
  sub_1C1DFE938(0, &qword_1EBB67D68, (unint64_t *)&qword_1EBB67D70, 0x1E4F2B4A0, MEMORY[0x1E4FBB320]);
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C1E73364(0, (unint64_t *)&qword_1EBB67D38, MEMORY[0x1E4F1AAE0]);
  sub_1C1E7344C();
  sub_1C1E73408(&qword_1EBB67D30, (unint64_t *)&qword_1EBB67D38, v21);
  uint64_t v22 = v32;
  sub_1C1EAEAD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v22);
  sub_1C1E734C0();
  uint64_t v23 = v30;
  uint64_t v24 = sub_1C1EAEA38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v23);
  return v24;
}

uint64_t HKHealthStore.makeSharedSummariesStreamPublisher(sharedTransactionPublisher:pluginName:identifiers:objectTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C1E13568();
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v29 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E7355C(0, (unint64_t *)&qword_1EBB64D98, (uint64_t (*)(uint64_t))sub_1C1E13568, sub_1C1E73650, MEMORY[0x1E4F1A8D0]);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v28 = (char *)v27 - v13;
  v27[1] = a1;
  if (a1) {
    uint64_t v14 = a1;
  }
  else {
    uint64_t v14 = HKHealthStore.makePreferredTransactionPublisher()();
  }
  void v27[2] = v14;
  uint64_t v34 = v14;
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v15;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  v16[6] = a5;
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1DFE85C(0, &qword_1EBB65080, &qword_1EBB65148, MEMORY[0x1E4FBB718]);
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C1E73364(0, (unint64_t *)&qword_1EBB67D38, MEMORY[0x1E4F1AAE0]);
  sub_1C1DFE8E8(&qword_1EBB65078, &qword_1EBB65080, &qword_1EBB65148, v17);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = v29;
  sub_1C1EAEA68();
  swift_release();
  uint64_t v20 = sub_1C1E73650();
  uint64_t v21 = sub_1C1E73408(&qword_1EBB67D30, (unint64_t *)&qword_1EBB67D38, v18);
  uint64_t v22 = v28;
  uint64_t v23 = v33;
  MEMORY[0x1C874BC40](v33, v20, v21);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v23);
  sub_1C1E736AC();
  uint64_t v24 = v31;
  uint64_t v25 = sub_1C1EAEA38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v24);
  return v25;
}

uint64_t sub_1C1E7251C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v31 = a5;
  v30[1] = a3;
  v30[2] = a4;
  v30[0] = a2;
  sub_1C1E73960();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E73364(0, &qword_1EBB65180, MEMORY[0x1E4F1ACE0]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v30 - v14;
  uint64_t v16 = sub_1C1EAE568();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v20 = a1;
    uint64_t v33 = sub_1C1EAF068();
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E73364(0, (unint64_t *)&qword_1EBB67D38, MEMORY[0x1E4F1AAE0]);
    sub_1C1E73408(&qword_1EBB67D30, (unint64_t *)&qword_1EBB67D38, v21);
    sub_1C1E739E4();
    uint64_t v22 = sub_1C1EAE968();
    swift_release();
    uint64_t v33 = v22;
    uint64_t v23 = sub_1C1EAEA38();
    swift_release();
  }
  else
  {
    uint64_t v31 = v8;
    uint64_t v32 = v13;
    uint64_t v24 = v7;
    uint64_t v25 = v12;
    sub_1C1EAE538();
    uint64_t v26 = sub_1C1EAE558();
    uint64_t v27 = sub_1C1EAF0D8();
    if (os_log_type_enabled(v26, (os_log_type_t)v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_1C1DD2000, v26, (os_log_type_t)v27, "[Transaction] Transaction does not exist. Returning 0 summaries", v28, 2u);
      MEMORY[0x1C874D2E0](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_1C1DFE938(0, &qword_1EBB67D68, (unint64_t *)&qword_1EBB67D70, 0x1E4F2B4A0, MEMORY[0x1E4FBB320]);
    sub_1C1EAE8B8();
    sub_1C1E15F30();
    sub_1C1EAE888();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v24);
    sub_1C1E73408(&qword_1EBB65178, &qword_1EBB65180, MEMORY[0x1E4F1ACE0]);
    uint64_t v23 = sub_1C1EAEA38();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v25);
  }
  return v23;
}

uint64_t HKHealthStore.makeLatestTransactionPublisher()()
{
  sub_1C1E73748();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  uint64_t v29 = v1;
  MEMORY[0x1F4188790](v0);
  uint64_t v26 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C1EAD3C8();
  uint64_t v3 = *(void *)(v24 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v24);
  uint64_t v6 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - v7;
  sub_1C1E73820();
  uint64_t v25 = v9;
  uint64_t v27 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1C1EAF078();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C1DFE85C(0, &qword_1EBB65070, &qword_1EBB65128, MEMORY[0x1E4FBB320]);
  sub_1C1DFE8E8(&qword_1EBB65068, &qword_1EBB65070, &qword_1EBB65128, v12);
  sub_1C1EAEA98();
  swift_release();
  sub_1C1EAD3A8();
  uint64_t v13 = v24;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v24);
  unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v14, v6, v13);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1DFE938(0, &qword_1EBB65148, &qword_1EBB67D88, 0x1E4F2B4B8, MEMORY[0x1E4FBB718]);
  sub_1C1DFE9A0(&qword_1EBB64E88, (void (*)(uint64_t))sub_1C1E73820);
  uint64_t v17 = v25;
  uint64_t v18 = v26;
  sub_1C1EAEA68();
  swift_release();
  sub_1C1DFE9A0(&qword_1EBB64E48, (void (*)(uint64_t))sub_1C1E73748);
  uint64_t v19 = v28;
  uint64_t v20 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v19);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v13);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v17);
  uint64_t v30 = v20;
  sub_1C1DFE85C(0, &qword_1EBB65080, &qword_1EBB65148, v16);
  sub_1C1DFE8E8(&qword_1EBB65078, &qword_1EBB65080, &qword_1EBB65148, v16);
  uint64_t v21 = sub_1C1EAEA38();
  swift_release();
  return v21;
}

uint64_t Publisher<>.filterAndSelectPreferredTransaction(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD v15[2] = a3;
  v15[1] = a2;
  uint64_t v4 = sub_1C1EAD3C8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  sub_1C1DFE938(255, &qword_1EBB65148, &qword_1EBB67D88, 0x1E4F2B4B8, MEMORY[0x1E4FBB718]);
  uint64_t v7 = sub_1C1EAE668();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v15 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_1C1EAEA68();
  swift_release();
  swift_getWitnessTable();
  uint64_t v13 = sub_1C1EAEA38();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

void sub_1C1E73024(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  sub_1C1E73960();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1E73364(0, &qword_1EBB65180, MEMORY[0x1E4F1ACE0]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v25 - v19;
  uint64_t v21 = *a1;
  swift_beginAccess();
  uint64_t v22 = MEMORY[0x1C874D390](a2 + 16);
  if (v22)
  {
    uint64_t v23 = (void *)v22;
    uint64_t v24 = sub_1C1E7251C(v21, a3, a4, v26, v27);
  }
  else
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1C1DFE938(0, &qword_1EBB67D68, (unint64_t *)&qword_1EBB67D70, 0x1E4F2B4A0, MEMORY[0x1E4FBB320]);
    sub_1C1EAE8B8();
    sub_1C1E15F30();
    sub_1C1EAE888();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_1C1E73408(&qword_1EBB65178, &qword_1EBB65180, MEMORY[0x1E4F1ACE0]);
    uint64_t v24 = sub_1C1EAEA38();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  *uint64_t v28 = v24;
}

uint64_t sub_1C1E732CC@<X0>(uint64_t *a1@<X8>)
{
  sub_1C1DFE938(0, &qword_1EBB65128, &qword_1EBB67D88, 0x1E4F2B4B8, MEMORY[0x1E4FBB320]);
  sub_1C1E73A68();
  uint64_t result = sub_1C1EAEDE8();
  *a1 = result;
  return result;
}

void sub_1C1E73364(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_1C1DFE938(255, &qword_1EBB67D68, (unint64_t *)&qword_1EBB67D70, 0x1E4F2B4A0, MEMORY[0x1E4FBB320]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_1C1E15F30();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C1E73408(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1E73364(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1E7344C()
{
  return sub_1C1DFE9A0(&qword_1EBB65820, (void (*)(uint64_t))sub_1C1E15194);
}

uint64_t sub_1C1E73480()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1C1E734C0()
{
  unint64_t result = qword_1EBB65848;
  if (!qword_1EBB65848)
  {
    sub_1C1E7355C(255, (unint64_t *)&qword_1EBB65850, (uint64_t (*)(uint64_t))sub_1C1E15194, sub_1C1E7344C, MEMORY[0x1E4F1AA38]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65848);
  }
  return result;
}

void sub_1C1E7355C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C1E73364(255, (unint64_t *)&qword_1EBB67D38, MEMORY[0x1E4F1AAE0]);
    v14[0] = v11;
    v14[1] = a3(255);
    v14[2] = sub_1C1E73408(&qword_1EBB67D30, (unint64_t *)&qword_1EBB67D38, v10);
    v14[3] = a4();
    unint64_t v12 = a5(a1, v14);
    if (!v13) {
      atomic_store(v12, a2);
    }
  }
}

uint64_t sub_1C1E73650()
{
  return sub_1C1DFE9A0(&qword_1EBB64E38, (void (*)(uint64_t))sub_1C1E13568);
}

void sub_1C1E73688(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C1E73024(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

unint64_t sub_1C1E736AC()
{
  unint64_t result = qword_1EBB64D90;
  if (!qword_1EBB64D90)
  {
    sub_1C1E7355C(255, (unint64_t *)&qword_1EBB64D98, (uint64_t (*)(uint64_t))sub_1C1E13568, sub_1C1E73650, MEMORY[0x1E4F1A8D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB64D90);
  }
  return result;
}

void sub_1C1E73748()
{
  if (!qword_1EBB64E50)
  {
    sub_1C1E73820();
    sub_1C1DFE938(255, &qword_1EBB65148, &qword_1EBB67D88, 0x1E4F2B4B8, MEMORY[0x1E4FBB718]);
    sub_1C1DFE9A0(&qword_1EBB64E88, (void (*)(uint64_t))sub_1C1E73820);
    unint64_t v0 = sub_1C1EAE668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB64E50);
    }
  }
}

void sub_1C1E73820()
{
  if (!qword_1EBB64E90)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C1DFE85C(255, &qword_1EBB65070, &qword_1EBB65128, MEMORY[0x1E4FBB320]);
    sub_1C1DFE8E8(&qword_1EBB65068, &qword_1EBB65070, &qword_1EBB65128, v0);
    unint64_t v1 = sub_1C1EAE688();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB64E90);
    }
  }
}

uint64_t sub_1C1E738E0@<X0>(uint64_t *a1@<X8>)
{
  sub_1C1EAD3C8();
  return sub_1C1E732CC(a1);
}

void sub_1C1E73960()
{
  if (!qword_1EBB650D8)
  {
    sub_1C1DFE938(255, &qword_1EBB67D68, (unint64_t *)&qword_1EBB67D70, 0x1E4F2B4A0, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C1EAE8A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB650D8);
    }
  }
}

unint64_t sub_1C1E739E4()
{
  unint64_t result = qword_1EBB65120;
  if (!qword_1EBB65120)
  {
    sub_1C1DFE938(255, &qword_1EBB67D68, (unint64_t *)&qword_1EBB67D70, 0x1E4F2B4A0, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB65120);
  }
  return result;
}

unint64_t sub_1C1E73A68()
{
  unint64_t result = qword_1EBB651E8;
  if (!qword_1EBB651E8)
  {
    sub_1C1DFE938(255, &qword_1EBB65128, &qword_1EBB67D88, 0x1E4F2B4B8, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB651E8);
  }
  return result;
}

uint64_t Feed.isTooOldForDisplay.getter()
{
  sub_1C1DF3128(0, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v15 - v2;
  uint64_t v4 = sub_1C1EAD318();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  unsigned __int8 v11 = sub_1C1EAE148();
  Feed.Kind.earliestDisplayDateUpdated.getter(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1C1E7E708((uint64_t)v3, (unint64_t *)&qword_1EBB682A8, MEMORY[0x1E4F27928]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    id v12 = objc_msgSend(v0, sel_dateUpdated);
    sub_1C1EAD2F8();

    LOBYTE(v12) = sub_1C1EAD2D8();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v8, v4);
    v13(v10, v4);
    if (v12) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1C1E73D14(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1C1DE1100(0, v2, 0);
  uint64_t v3 = v12;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1C1DF8FD4(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1DE1100(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C1DE1100(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v6 + 1;
      uint64_t v7 = v3 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t Feed.findSection(for:)()
{
  if (((1 << sub_1C1EAE148()) & 0x17) != 0)
  {
    return sub_1C1E7A03C();
  }
  else
  {
    sub_1C1EAE148();
    return sub_1C1E7BC78();
  }
}

uint64_t sub_1C1E73ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_1C1EAF3B8();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_1C1E31C28(a1);
    return v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= sub_1C1EAF3B8() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C1EAF3B8();
  uint64_t v7 = sub_1C1E31F20(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:
  return sub_1C1E323D8(a1, v2);
}

uint64_t sub_1C1E73FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1C1EAF828();
    sub_1C1EAED98();
    uint64_t v6 = sub_1C1EAF858();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unsigned __int8 v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1C1EAF7A8() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1C1EAF7A8() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C1E7410C(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_1C1EAF3F8();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_1C1EAF278(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_1C1DF9F8C(0, &qword_1EBB68260);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_1C1EAF288();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_1C1EAF288();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

uint64_t sub_1C1E7426C(uint64_t a1)
{
  return sub_1C1E74298(a1, sub_1C1EA3818, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_1C1EA359C);
}

uint64_t sub_1C1E74298(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t, BOOL, uint64_t))
{
  unint64_t v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = sub_1C1EAF358();
    uint64_t v8 = v7;
    uint64_t v9 = sub_1C1EAF408();
    char v11 = MEMORY[0x1C874C5A0](v6, v8, v9, v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_3:
      sub_1C1E25D1C(v6, v8, v5 != 0);
      return 0;
    }
LABEL_7:
    uint64_t v12 = a3(v6, v8, v5 != 0, a1);
    sub_1C1E25D1C(v6, v8, v5 != 0);
    return v12;
  }
  uint64_t result = a2(a1);
  if ((v15 & 1) == 0)
  {
    uint64_t v8 = v14;
    if (*(_DWORD *)(a1 + 36) == v14)
    {
      uint64_t v6 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1E743BC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1C1E22144(0, v1, 0);
    sub_1C1E1D23C();
    sub_1C1E23064();
    char v4 = (void **)(a1 + 48);
    do
    {
      unint64_t v5 = *v4;
      swift_bridgeObjectRetain_n();
      id v6 = v5;
      swift_dynamicCast();

      swift_bridgeObjectRelease();
      uint64_t v2 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1E22144(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v2 = v13;
      }
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1C1E22144(v7 > 1, v8 + 1, 1);
        uint64_t v2 = v13;
      }
      *(void *)(v2 + 16) = v8 + 1;
      uint64_t v9 = v2 + 24 * v8;
      *(void *)(v9 + 32) = v11;
      *(_OWORD *)(v9 + 40) = v12;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C1E74528(unint64_t a1, void (*a2)(void))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C1E221A4(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        MEMORY[0x1C874C6F0](i, a1);
        a2(0);
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1E221A4(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v9 = *(void *)(v5 + 16);
        unint64_t v8 = *(void *)(v5 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_1C1E221A4(v8 > 1, v9 + 1, 1);
          uint64_t v5 = v15;
        }
        *(void *)(v5 + 16) = v9 + 1;
        sub_1C1E4BD2C(v14, (_OWORD *)(v5 + 32 * v9 + 32));
      }
    }
    else
    {
      uint64_t v10 = (id *)(a1 + 32);
      a2(0);
      do
      {
        id v11 = *v10;
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1E221A4(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v13 = *(void *)(v5 + 16);
        unint64_t v12 = *(void *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1C1E221A4(v12 > 1, v13 + 1, 1);
          uint64_t v5 = v15;
        }
        *(void *)(v5 + 16) = v13 + 1;
        sub_1C1E4BD2C(v14, (_OWORD *)(v5 + 32 * v13 + 32));
        ++v10;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1E74768(unsigned int a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  v207 = a4;
  uint64_t v211 = a3;
  unsigned int v186 = a1;
  uint64_t v7 = sub_1C1EAE568();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v184 = (char *)&v183 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  id v196 = (char *)&v183 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v195 = (char *)&v183 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v192 = (char *)&v183 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v194 = (char *)&v183 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v210 = (char *)&v183 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  unint64_t v202 = (char *)&v183 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v183 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (uint64_t)&v183 - v26;
  sub_1C1EAE508();
  swift_bridgeObjectRetain_n();
  unint64_t v28 = sub_1C1EAE558();
  LOBYTE(i) = sub_1C1EAF0D8();
  BOOL v30 = os_log_type_enabled((os_log_t)v28, (os_log_type_t)i);
  uint64_t v206 = v7;
  uint64_t v197 = v8;
  uint64_t v209 = v5;
  unint64_t v204 = a2 >> 62;
  if (!v30)
  {

    swift_bridgeObjectRelease_n();
    v208 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v208(v27, v7);
    goto LABEL_6;
  }
  unint64_t v203 = v25;
  uint64_t v31 = swift_slowAlloc();
  uint64_t v32 = swift_slowAlloc();
  v214[0] = v32;
  *(_DWORD *)uint64_t v31 = 136315650;
  uint64_t v33 = sub_1C1EAF908();
  uint64_t v212 = sub_1C1DF8D44(v33, v34, v214);
  sub_1C1EAF2C8();
  swift_bridgeObjectRelease();
  *(_WORD *)(v31 + 12) = 2050;
  if (a2 >> 62) {
    goto LABEL_121;
  }
  uint64_t v35 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    uint64_t v212 = v35;
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 22) = 2082;
    uint64_t v36 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    uint64_t v212 = sub_1C1DF8D44(v36, v37, v214);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1DD2000, (os_log_t)v28, (os_log_type_t)i, "[%s]: %{public}ld REElements retrieved from RelevanceEngine for feed %{public}s", (uint8_t *)v31, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v32, -1, -1);
    MEMORY[0x1C874D2E0](v31, -1, -1);

    uint64_t v7 = v206;
    v208 = *(void (**)(uint64_t, uint64_t))(v197 + 8);
    v208(v27, v206);
    uint64_t v25 = v203;
LABEL_6:
    id v38 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v39 = (void *)sub_1C1EAED28();
    id v40 = objc_msgSend(v38, sel_arrayForKey_, v39);

    uint64_t v41 = (void *)v211;
    if (v40 && (uint64_t v42 = sub_1C1EAEE98(), v40, v43 = sub_1C1E73D14(v42), swift_bridgeObjectRelease(), v43))
    {
      sub_1C1EAE508();
      swift_bridgeObjectRetain_n();
      os_log_t v44 = sub_1C1EAE558();
      os_log_type_t v45 = sub_1C1EAF0D8();
      BOOL v46 = os_log_type_enabled(v44, v45);
      uint64_t v205 = v43;
      if (v46)
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        v214[0] = v48;
        *(_DWORD *)uint64_t v47 = 136315394;
        unint64_t v203 = v25;
        uint64_t v49 = v209;
        uint64_t v50 = sub_1C1EAF908();
        uint64_t v212 = sub_1C1DF8D44(v50, v51, v214);
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2082;
        uint64_t v52 = swift_bridgeObjectRetain();
        uint64_t v53 = MEMORY[0x1C874C0C0](v52, MEMORY[0x1E4FBB1A0]);
        unint64_t v55 = v54;
        swift_bridgeObjectRelease();
        uint64_t v212 = sub_1C1DF8D44(v53, v55, v214);
        uint64_t v41 = (void *)v211;
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease_n();
        uint64_t v7 = v206;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1DD2000, v44, v45, "[%s]: Relevance Override Default detected, ignoring RelevanceEngine and proceeding with %{public}s", (uint8_t *)v47, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C874D2E0](v48, -1, -1);
        uint64_t v56 = v47;
        uint64_t v57 = v49;
        MEMORY[0x1C874D2E0](v56, -1, -1);

        v208((uint64_t)v203, v7);
        LODWORD(v203) = 1;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v208((uint64_t)v25, v7);
        LODWORD(v203) = 1;
        uint64_t v57 = v209;
      }
      uint64_t v58 = (uint64_t)v210;
    }
    else
    {
      if (v204)
      {
        swift_bridgeObjectRetain();
        uint64_t v59 = sub_1C1EAF638();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v59 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v57 = v209;
      uint64_t v58 = (uint64_t)v210;
      if (v59)
      {
        v214[0] = MEMORY[0x1E4FBC860];
        uint64_t result = sub_1C1DE1100(0, v59 & ~(v59 >> 63), 0);
        if (v59 < 0)
        {
          __break(1u);
          return result;
        }
        uint64_t v61 = 0;
        uint64_t v62 = v214[0];
        do
        {
          uint64_t v63 = v62;
          if ((a2 & 0xC000000000000001) != 0) {
            id v64 = (id)MEMORY[0x1C874C6F0](v61, a2);
          }
          else {
            id v64 = *(id *)(a2 + 8 * v61 + 32);
          }
          uint64_t v65 = v64;
          id v66 = objc_msgSend(v64, sel_identifier, v183);
          uint64_t v67 = sub_1C1EAED38();
          uint64_t v69 = v68;

          uint64_t v62 = v63;
          v214[0] = v63;
          unint64_t v70 = *(void *)(v63 + 16);
          unint64_t v71 = *(void *)(v62 + 24);
          if (v70 >= v71 >> 1)
          {
            sub_1C1DE1100(v71 > 1, v70 + 1, 1);
            uint64_t v62 = v214[0];
          }
          ++v61;
          *(void *)(v62 + 16) = v70 + 1;
          uint64_t v72 = v62 + 16 * v70;
          *(void *)(v72 + 32) = v67;
          *(void *)(v72 + 40) = v69;
        }
        while (v59 != v61);
        uint64_t v205 = v62;
        LODWORD(v203) = 0;
        uint64_t v57 = v209;
        uint64_t v58 = (uint64_t)v210;
        uint64_t v41 = (void *)v211;
      }
      else
      {
        uint64_t v205 = MEMORY[0x1E4FBC860];
        LODWORD(v203) = 0;
      }
    }
    id v73 = objc_msgSend(v207, sel_profileIdentifier, v183);
    uint64_t i = v186;
    id v198 = static FeedPopulationManaging.fetchAndValidateFeedToPopulate(kind:managedObjectContext:associatedProfileIdentifier:)(v186, v41, v73, v57);

    uint64_t v74 = (uint64_t)v202;
    if (qword_1EBB648A0 != -1) {
      goto LABEL_100;
    }
LABEL_26:
    uint64_t v32 = NSManagedObjectContext.getEligibleFeedItems(for:sourceProfiles:)(i, qword_1EBB64890);
    sub_1C1EAE508();
    swift_bridgeObjectRetain_n();
    uint64_t v75 = v74;
    unint64_t v76 = sub_1C1EAE558();
    os_log_type_t v77 = sub_1C1EAF0D8();
    BOOL v78 = os_log_type_enabled(v76, v77);
    unint64_t v79 = (unint64_t)v32 >> 62;
    uint64_t v211 = v32;
    if (v78)
    {
      uint64_t v80 = swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      v214[0] = v81;
      *(_DWORD *)uint64_t v80 = 136315650;
      uint64_t v82 = sub_1C1EAF908();
      uint64_t v212 = sub_1C1DF8D44(v82, v83, v214);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v80 + 12) = 2082;
      uint64_t v84 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      uint64_t v212 = sub_1C1DF8D44(v84, v85, v214);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v80 + 22) = 2050;
      uint64_t v86 = v211;
      if (v79)
      {
        swift_bridgeObjectRetain();
        uint64_t v87 = sub_1C1EAF638();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v87 = *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v212 = v87;
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v76, v77, "[%s]: Picking elements for a new %{public}s feed from %{public}ld Core Data elements", (uint8_t *)v80, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v81, -1, -1);
      MEMORY[0x1C874D2E0](v80, -1, -1);

      v208((uint64_t)v202, v7);
      uint64_t v32 = v86;
      uint64_t v58 = (uint64_t)v210;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v208(v75, v7);
    }
    sub_1C1EAE508();
    uint64_t i = v205;
    swift_bridgeObjectRetain_n();
    char v88 = sub_1C1EAE558();
    os_log_type_t v89 = sub_1C1EAF0D8();
    uint64_t v74 = v89;
    BOOL v90 = os_log_type_enabled(v88, v89);
    unint64_t v204 = v79;
    if (v90)
    {
      uint64_t v91 = swift_slowAlloc();
      uint64_t v92 = v58;
      uint64_t v58 = swift_slowAlloc();
      v214[0] = v58;
      *(_DWORD *)uint64_t v91 = 136315650;
      uint64_t v93 = sub_1C1EAF908();
      uint64_t v212 = sub_1C1DF8D44(v93, v94, v214);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v91 + 12) = 2082;
      uint64_t v95 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      uint64_t v212 = sub_1C1DF8D44(v95, v96, v214);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v91 + 22) = 2080;
      uint64_t v97 = swift_bridgeObjectRetain();
      uint64_t v98 = MEMORY[0x1C874C0C0](v97, MEMORY[0x1E4FBB1A0]);
      unint64_t v100 = v99;
      swift_bridgeObjectRelease();
      uint64_t v212 = sub_1C1DF8D44(v98, v100, v214);
      uint64_t v32 = v211;
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease_n();
      uint64_t v7 = v206;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v88, (os_log_type_t)v74, "[%s]: Picking feed of kind %{public}s from these ranked identifiers (the rest were dropped): %s", (uint8_t *)v91, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v58, -1, -1);
      MEMORY[0x1C874D2E0](v91, -1, -1);

      uint64_t v101 = v92;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v101 = v58;
    }
    v208(v101, v7);
    unint64_t v202 = *(char **)(i + 16);
    if (v202)
    {
      uint64_t v103 = 0;
      uint64_t v104 = v32 & 0xFFFFFFFFFFFFFF8;
      uint64_t v200 = v32 & 0xFFFFFFFFFFFFFF8;
      uint64_t v201 = i + 32;
      if (v32 < 0) {
        uint64_t v104 = v32;
      }
      uint64_t v183 = v104;
      uint64_t v210 = (char *)(v32 & 0xC000000000000001);
      uint64_t v199 = v197 + 8;
      uint64_t v188 = &v213;
      *(void *)&long long v102 = 136315394;
      long long v193 = v102;
      uint64_t v187 = MEMORY[0x1E4FBC840] + 8;
      *(void *)&long long v102 = 136315650;
      long long v185 = v102;
      do
      {
        if ((unint64_t)v103 >= *(void *)(i + 16))
        {
LABEL_99:
          __break(1u);
LABEL_100:
          swift_once();
          goto LABEL_26;
        }
        uint64_t v105 = (uint64_t *)(v201 + 16 * (void)v103);
        uint64_t v106 = *v105;
        unint64_t v107 = v105[1];
        if (v203)
        {
          if (v204)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v74 = sub_1C1EAF638();
            if (v74)
            {
LABEL_42:
              uint64_t v7 = 4;
              while (1)
              {
                id v108 = v210 ? (id)MEMORY[0x1C874C6F0](v7 - 4, v32) : *(id *)(v32 + 8 * v7);
                uint64_t v58 = (uint64_t)v108;
                uint64_t v109 = v7 - 3;
                if (__OFADD__(v7 - 4, 1)) {
                  break;
                }
                id v110 = objc_msgSend(v108, sel_uniqueIdentifier);
                uint64_t v111 = sub_1C1EAED38();
                uint64_t i = v112;

                v214[0] = v111;
                v214[1] = i;
                uint64_t v212 = v106;
                unint64_t v213 = v107;
                sub_1C1E4BF74();
                sub_1C1E4BFC8();
                LOBYTE(v110) = sub_1C1EAECD8();
                swift_bridgeObjectRelease();
                if (v110) {
                  goto LABEL_71;
                }

                ++v7;
                uint64_t v32 = v211;
                if (v109 == v74) {
                  goto LABEL_49;
                }
              }
              __break(1u);
LABEL_98:
              __break(1u);
              goto LABEL_99;
            }
          }
          else
          {
            uint64_t v74 = *(void *)(v200 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v74) {
              goto LABEL_42;
            }
          }
LABEL_49:
          swift_bridgeObjectRelease();
          int v113 = v194;
          sub_1C1EAE508();
          swift_bridgeObjectRetain();
          uint64_t v114 = sub_1C1EAE558();
          os_log_type_t v115 = sub_1C1EAF0B8();
          uint64_t v58 = v115;
          if (os_log_type_enabled(v114, v115))
          {
            uint64_t v74 = swift_slowAlloc();
            uint64_t v116 = swift_slowAlloc();
            v214[0] = v116;
            *(_DWORD *)uint64_t v74 = v193;
            uint64_t v117 = sub_1C1EAF908();
            *(void *)(v74 + 4) = sub_1C1DF8D44(v117, v118, v214);
            uint64_t v32 = v211;
            swift_bridgeObjectRelease();
            *(_WORD *)(v74 + 12) = 2082;
            swift_bridgeObjectRetain();
            *(void *)(v74 + 14) = sub_1C1DF8D44(v106, v107, v214);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1C1DD2000, v114, (os_log_type_t)v58, "[%s]: Relevance Override Default set, but no feedItem found for %{public}s", (uint8_t *)v74, 0x16u);
            swift_arrayDestroy();
            uint64_t v119 = v116;
LABEL_66:
            MEMORY[0x1C874D2E0](v119, -1, -1);
            MEMORY[0x1C874D2E0](v74, -1, -1);

            goto LABEL_68;
          }
        }
        else
        {
          if (v204)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v120 = sub_1C1EAF638();
            if (v120)
            {
LABEL_53:
              uint64_t v7 = 4;
              do
              {
                uint64_t v74 = v7 - 4;
                id v121 = v210 ? (id)MEMORY[0x1C874C6F0](v7 - 4, v32) : *(id *)(v32 + 8 * v7);
                uint64_t v58 = (uint64_t)v121;
                uint64_t v122 = v7 - 3;
                if (__OFADD__(v74, 1)) {
                  goto LABEL_98;
                }
                id v123 = objc_msgSend(v121, sel_uniqueIdentifier, v183);
                uint64_t v124 = sub_1C1EAED38();
                uint64_t v74 = v125;

                if (v124 == v106 && v74 == v107)
                {
                  swift_bridgeObjectRelease();
LABEL_71:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  objc_msgSend((id)v58, sel_setSortOrder_, v103);
                  char v131 = sub_1C1EAE148();
                  unint64_t v133 = v195;
                  uint64_t v132 = v196;
                  if (((1 << v131) & 0x17) != 0)
                  {
                    uint64_t v134 = sub_1C1E7A03C();
                    if (!v134)
                    {
                      sub_1C1EAE508();
                      id v135 = (id)v58;
                      unint64_t v136 = sub_1C1EAE558();
                      os_log_type_t v137 = sub_1C1EAF0D8();
                      uint64_t v58 = v137;
                      if (os_log_type_enabled(v136, v137))
                      {
                        uint64_t v74 = swift_slowAlloc();
                        uint64_t v191 = swift_slowAlloc();
                        v214[0] = v191;
                        *(_DWORD *)uint64_t v74 = v193;
                        uint64_t v138 = sub_1C1EAF908();
                        uint64_t v212 = sub_1C1DF8D44(v138, v139, v214);
                        sub_1C1EAF2C8();
                        swift_bridgeObjectRelease();
                        *(_WORD *)(v74 + 12) = 2080;
                        id v140 = objc_msgSend(v135, sel_uniqueIdentifier);
                        uint64_t v141 = sub_1C1EAED38();
                        unint64_t v143 = v142;

                        uint64_t v212 = sub_1C1DF8D44(v141, v143, v214);
                        sub_1C1EAF2C8();

                        swift_bridgeObjectRelease();
                        _os_log_impl(&dword_1C1DD2000, v136, (os_log_type_t)v58, "[%s]: Section not found for feedItem %s", (uint8_t *)v74, 0x16u);
                        uint64_t v58 = v191;
                        swift_arrayDestroy();
                        MEMORY[0x1C874D2E0](v58, -1, -1);
                        MEMORY[0x1C874D2E0](v74, -1, -1);

                        uint64_t v144 = v196;
                      }
                      else
                      {

                        uint64_t v144 = v132;
                      }
                      uint64_t v7 = v206;
                      v208((uint64_t)v144, v206);
                      objc_msgSend(v135, sel_setFeedSection_, 0);
                      sub_1C1EAE348();
                      objc_msgSend(v135, sel_setSectionSortOrder_, sub_1C1EAE288());

                      uint64_t i = v205;
                      uint64_t v32 = v211;
                      goto LABEL_81;
                    }
                  }
                  else
                  {
                    sub_1C1EAE148();
                    uint64_t v134 = sub_1C1E7BC78();
                  }
                  id v145 = (void *)v134;
                  sub_1C1EAE508();
                  id v146 = v145;
                  id v147 = (id)v58;
                  id v148 = v146;
                  id v149 = v147;
                  os_log_type_t v150 = sub_1C1EAE558();
                  os_log_type_t v151 = sub_1C1EAF0D8();
                  uint64_t v74 = v151;
                  if (os_log_type_enabled(v150, v151))
                  {
                    uint64_t v58 = swift_slowAlloc();
                    uint64_t v191 = swift_slowAlloc();
                    v214[0] = v191;
                    *(_DWORD *)uint64_t v58 = v185;
                    uint64_t v152 = sub_1C1EAF908();
                    uint64_t v212 = sub_1C1DF8D44(v152, v153, v214);
                    os_log_t v190 = v150;
                    sub_1C1EAF2C8();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v58 + 12) = 2080;
                    id v154 = objc_msgSend(v148, sel_identifier);
                    uint64_t v155 = sub_1C1EAED38();
                    int v189 = v74;
                    uint64_t v156 = v155;
                    unint64_t v158 = v157;

                    uint64_t v212 = sub_1C1DF8D44(v156, v158, v214);
                    sub_1C1EAF2C8();

                    swift_bridgeObjectRelease();
                    *(_WORD *)(v58 + 22) = 2080;
                    id v159 = objc_msgSend(v149, sel_uniqueIdentifier);
                    uint64_t v160 = sub_1C1EAED38();
                    unint64_t v162 = v161;

                    uint64_t v212 = sub_1C1DF8D44(v160, v162, v214);
                    sub_1C1EAF2C8();

                    swift_bridgeObjectRelease();
                    uint64_t v74 = (uint64_t)v190;
                    _os_log_impl(&dword_1C1DD2000, v190, (os_log_type_t)v189, "[%s]: Section %s found for feedItem %s", (uint8_t *)v58, 0x20u);
                    uint64_t v163 = v191;
                    swift_arrayDestroy();
                    MEMORY[0x1C874D2E0](v163, -1, -1);
                    MEMORY[0x1C874D2E0](v58, -1, -1);
                  }
                  else
                  {
                  }
                  uint64_t v7 = v206;
                  v208((uint64_t)v133, v206);
                  uint64_t v32 = v211;
                  objc_msgSend(v148, sel_addFeedItemsObject_, v149);

                  goto LABEL_80;
                }
                uint64_t i = sub_1C1EAF7A8();
                swift_bridgeObjectRelease();
                if (i) {
                  goto LABEL_71;
                }

                ++v7;
                uint64_t v32 = v211;
              }
              while (v122 != v120);
            }
          }
          else
          {
            uint64_t v120 = *(void *)(v200 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v120) {
              goto LABEL_53;
            }
          }
          swift_bridgeObjectRelease();
          int v113 = v192;
          sub_1C1EAE508();
          swift_bridgeObjectRetain();
          uint64_t v114 = sub_1C1EAE558();
          os_log_type_t v127 = sub_1C1EAF0D8();
          uint64_t v58 = v127;
          if (os_log_type_enabled(v114, v127))
          {
            uint64_t v74 = swift_slowAlloc();
            uint64_t v128 = swift_slowAlloc();
            v214[0] = v128;
            *(_DWORD *)uint64_t v74 = v193;
            uint64_t v129 = sub_1C1EAF908();
            *(void *)(v74 + 4) = sub_1C1DF8D44(v129, v130, v214);
            swift_bridgeObjectRelease();
            *(_WORD *)(v74 + 12) = 2080;
            swift_bridgeObjectRetain();
            *(void *)(v74 + 14) = sub_1C1DF8D44(v106, v107, v214);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1C1DD2000, v114, (os_log_type_t)v58, "[%s]: Item %s was returned by the RelevanceEngine but is now deleted", (uint8_t *)v74, 0x16u);
            swift_arrayDestroy();
            uint64_t v119 = v128;
            uint64_t v32 = v211;
            goto LABEL_66;
          }
        }

        swift_bridgeObjectRelease_n();
LABEL_68:
        uint64_t v7 = v206;
        v208((uint64_t)v113, v206);
LABEL_80:
        uint64_t i = v205;
LABEL_81:
        ++v103;
      }
      while (v103 != v202);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = (uint64_t)objc_msgSend(v198, sel_sections);
    unint64_t v28 = sub_1C1EAD688();
    a2 = sub_1C1EAF048();

    if (!(a2 >> 62)) {
      break;
    }
    if ((a2 & 0x8000000000000000) != 0) {
      uint64_t v27 = a2;
    }
    else {
      uint64_t v27 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C1EAF638();
    if (!v31) {
      goto LABEL_105;
    }
LABEL_91:
    if (v31 >= 1)
    {
      for (uint64_t i = 0; i != v31; ++i)
      {
        if ((a2 & 0xC000000000000001) != 0) {
          id v164 = (id)MEMORY[0x1C874C6F0](i, a2);
        }
        else {
          id v164 = *(id *)(a2 + 8 * i + 32);
        }
        uint64_t v32 = (uint64_t)v164;
        sub_1C1E76230(v164, v207);
      }
      goto LABEL_105;
    }
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
  }
  uint64_t v31 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v31) {
    goto LABEL_91;
  }
LABEL_105:
  swift_bridgeObjectRelease_n();
  id v165 = v198;
  sub_1C1E76C88();
  id v166 = objc_msgSend(v165, sel_sections);
  unint64_t v28 = sub_1C1EAF048();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    if (!v27) {
      goto LABEL_114;
    }
LABEL_107:
    if (v27 >= 1)
    {
      for (uint64_t j = 0; j != v27; ++j)
      {
        if ((v28 & 0xC000000000000001) != 0) {
          id v168 = (id)MEMORY[0x1C874C6F0](j, v28);
        }
        else {
          id v168 = *(id *)(v28 + 8 * j + 32);
        }
        os_log_type_t v169 = v168;
        objc_msgSend(v168, sel_setSortOrder_, j, v183);
      }
      goto LABEL_114;
    }
    goto LABEL_120;
  }
  uint64_t v27 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v27) {
    goto LABEL_107;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  uint64_t v170 = v184;
  sub_1C1EAE508();
  id v171 = v198;
  unint64_t v172 = sub_1C1EAE558();
  os_log_type_t v173 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v172, v173))
  {
    uint64_t v174 = swift_slowAlloc();
    uint64_t v175 = swift_slowAlloc();
    v214[0] = v175;
    *(_DWORD *)uint64_t v174 = 136315650;
    uint64_t v176 = sub_1C1EAF908();
    uint64_t v212 = sub_1C1DF8D44(v176, v177, v214);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v174 + 12) = 2082;
    uint64_t v178 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    uint64_t v212 = sub_1C1DF8D44(v178, v179, v214);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v174 + 22) = 2050;
    id v180 = objc_msgSend(v171, sel_sections);
    id v181 = objc_msgSend(v180, sel_count);

    uint64_t v212 = (uint64_t)v181;
    sub_1C1EAF2C8();

    _os_log_impl(&dword_1C1DD2000, v172, v173, "[%s]: Picked feed of kind %{public}s with %{public}ld sections", (uint8_t *)v174, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v175, -1, -1);
    MEMORY[0x1C874D2E0](v174, -1, -1);

    uint64_t v182 = v184;
  }
  else
  {

    uint64_t v182 = v170;
  }
  return ((uint64_t (*)(char *, uint64_t))v208)(v182, v7);
}

uint64_t sub_1C1E76230(void *a1, void *a2)
{
  uint64_t v4 = sub_1C1EAE568();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v81 - v9;
  id v11 = objc_msgSend(a1, sel_managedObjectContext);

  if (!v11)
  {
    sub_1C1EAF628();
    __break(1u);
    swift_release();
    __break(1u);
    JUMPOUT(0x1C1E76C74);
  }
  sub_1C1EAE508();
  id v12 = a1;
  uint64_t v13 = sub_1C1EAE558();
  os_log_type_t v14 = sub_1C1EAF0D8();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v16 = &off_1E6443000;
  uint64_t v17 = (const char *)&off_1E6443000;
  uint64_t v84 = v4;
  unint64_t v85 = v8;
  uint64_t v86 = v5;
  uint64_t v82 = a2;
  if (v15)
  {
    uint64_t v18 = swift_slowAlloc();
    unint64_t v83 = (uint64_t (*)(void, void))swift_slowAlloc();
    unint64_t v88 = (unint64_t)v83;
    *(_DWORD *)uint64_t v18 = 136315650;
    uint64_t v19 = sub_1C1EAF908();
    uint64_t v87 = sub_1C1DF8D44(v19, v20, (uint64_t *)&v88);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    id v21 = objc_msgSend(v12, sel_identifier);
    uint64_t v22 = sub_1C1EAED38();
    unint64_t v24 = v23;

    uint64_t v87 = sub_1C1DF8D44(v22, v24, (uint64_t *)&v88);
    sub_1C1EAF2C8();

    uint64_t v16 = &off_1E6443000;
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2050;
    id v25 = objc_msgSend(v12, sel_feedItems);
    id v26 = objc_msgSend(v25, sel_count);

    uint64_t v87 = (uint64_t)v26;
    uint64_t v5 = v86;
    uint64_t v17 = (const char *)&off_1E6443000;
    sub_1C1EAF2C8();

    _os_log_impl(&dword_1C1DD2000, v13, v14, "[%s]: Before curation, section %{public}s has %{public}ld feedItems", (uint8_t *)v18, 0x20u);
    uint64_t v27 = v83;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v27, -1, -1);
    uint64_t v28 = v18;
    uint64_t v4 = v84;
    MEMORY[0x1C874D2E0](v28, -1, -1);
  }
  else
  {
  }
  uint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
  v29(v10, v4);
  id v30 = [v12 (SEL)v16[312]];
  uint64_t v31 = sub_1C1EAED38();
  uint64_t v33 = v32;

  switch(MEMORY[0x1C874ACE0](v31, v33))
  {
    case 1u:
    case 2u:
      id v49 = [v12 v17 + 651];
      sub_1C1EAE348();
      unint64_t v50 = sub_1C1EAF048();

      uint64_t v48 = sub_1C1E7DEB4(v50);
      goto LABEL_17;
    case 3u:
      id v46 = [v12 v17 + 651];
      sub_1C1EAE348();
      uint64_t v47 = sub_1C1EAF048();

      uint64_t v48 = sub_1C1E7E11C(v47, v82);
      goto LABEL_17;
    case 4u:
      uint64_t v16 = (_UNKNOWN **)v12;
      id v40 = [v12 v17 + 651];
      sub_1C1EAE348();
      uint64_t v41 = sub_1C1EAF048();

      if (v41 < 0 || (v41 & 0x4000000000000000) != 0) {
        goto LABEL_32;
      }
      unint64_t v42 = v41 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    default:
      id v34 = objc_msgSend(self, sel_standardUserDefaults);
      uint64_t v35 = (void *)sub_1C1EAED28();
      id v36 = objc_msgSend(v34, sel_arrayForKey_, v35);

      if (v36 && (uint64_t v37 = sub_1C1EAEE98(), v36, v38 = sub_1C1E73D14(v37), swift_bridgeObjectRelease(), v38))
      {
        swift_bridgeObjectRelease();
        char v39 = 0;
      }
      else
      {
        char v39 = 1;
      }
      id v51 = [v12 *((SEL *)v17 + 346)];
      sub_1C1EAE348();
      unint64_t v52 = sub_1C1EAF048();

      uint64_t v48 = sub_1C1E76E04(v52, v39);
LABEL_17:
      unint64_t v53 = v48;
      swift_bridgeObjectRelease();
      sub_1C1E74528(v53, MEMORY[0x1E4F674F8]);
      swift_bridgeObjectRelease();
      id v54 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
      os_log_t v44 = (void *)sub_1C1EAEE88();
      swift_bridgeObjectRelease();
      id v45 = objc_msgSend(v54, sel_initWithArray_, v44);
      break;
  }
  while (1)
  {

    objc_msgSend(v12, sel_setFeedItems_, v45);
    unint64_t v55 = (const char *)*((void *)v17 + 346);
    uint64_t v17 = (const char *)v12;
    id v56 = [v12 v55];
    sub_1C1EAE348();
    unint64_t v57 = sub_1C1EAF048();

    unint64_t v83 = (uint64_t (*)(void, void))v29;
    if (v57 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_1C1EAF638();
      swift_bridgeObjectRelease();
      uint64_t v59 = v12;
      if (!v58) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v58 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v59 = v12;
      if (!v58) {
        goto LABEL_27;
      }
    }
    if (v58 >= 1) {
      break;
    }
    __break(1u);
LABEL_32:
    unint64_t v80 = swift_bridgeObjectRetain();
    unint64_t v42 = (unint64_t)sub_1C1E30F14(v80);
    swift_bridgeObjectRelease();
LABEL_12:
    unint64_t v88 = v42;
    sub_1C1E7A7E0((uint64_t *)&v88);
    swift_bridgeObjectRelease();
    sub_1C1E74528(v88, MEMORY[0x1E4F674F8]);
    swift_release();
    id v43 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
    os_log_t v44 = (void *)sub_1C1EAEE88();
    swift_bridgeObjectRelease();
    id v45 = objc_msgSend(v43, sel_initWithArray_, v44);
    id v12 = v16;
  }
  for (uint64_t i = 0; i != v58; ++i)
  {
    if ((v57 & 0xC000000000000001) != 0) {
      id v61 = (id)MEMORY[0x1C874C6F0](i, v57);
    }
    else {
      id v61 = *(id *)(v57 + 8 * i + 32);
    }
    uint64_t v62 = v61;
    objc_msgSend(v61, sel_setSectionSortOrder_, i);
  }
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v63 = v85;
  sub_1C1EAE508();
  id v64 = v59;
  uint64_t v65 = sub_1C1EAE558();
  os_log_type_t v66 = sub_1C1EAF0D8();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    unint64_t v88 = v68;
    *(_DWORD *)uint64_t v67 = 136315650;
    uint64_t v69 = sub_1C1EAF908();
    uint64_t v87 = sub_1C1DF8D44(v69, v70, (uint64_t *)&v88);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v67 + 12) = 2082;
    id v71 = objc_msgSend(v64, sel_identifier);
    uint64_t v72 = sub_1C1EAED38();
    unint64_t v74 = v73;

    uint64_t v87 = sub_1C1DF8D44(v72, v74, (uint64_t *)&v88);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v67 + 22) = 2050;
    id v75 = objc_msgSend(v64, sel_feedItems);
    id v76 = objc_msgSend(v75, sel_count);

    uint64_t v87 = (uint64_t)v76;
    sub_1C1EAF2C8();

    _os_log_impl(&dword_1C1DD2000, v65, v66, "[%s]: Curated section %{public}s has %{public}ld feedItems", (uint8_t *)v67, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v68, -1, -1);
    MEMORY[0x1C874D2E0](v67, -1, -1);

    os_log_type_t v77 = v85;
    uint64_t v78 = v84;
  }
  else
  {

    os_log_type_t v77 = v63;
    uint64_t v78 = v4;
  }
  return v83(v77, v78);
}

void sub_1C1E76C88()
{
  int64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_sections);
  sub_1C1EAD688();
  id v3 = (void *)sub_1C1EAF038();
  uint64_t v5 = v4;
  uint64_t v7 = v6;

  id v8 = v3;
  swift_retain();
  sub_1C1E7B740(v8, v5, v7);
  unint64_t v10 = v9;
  swift_release();

  unint64_t v14 = v10;
  sub_1C1E7D8D4((uint64_t *)&v14, (uint64_t)&unk_1F1D653A8);
  swift_release();

  sub_1C1E74528(v14, MEMORY[0x1E4F67060]);
  swift_release();
  id v11 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
  id v12 = (void *)sub_1C1EAEE88();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initWithArray_, v12);

  objc_msgSend(v1, sel_setSections_, v13);
}

uint64_t sub_1C1E76E04(unint64_t a1, char a2)
{
  LOBYTE(v3) = a2;
  uint64_t v5 = sub_1C1EADBA8();
  uint64_t v6 = *(char **)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1DF3128(0, &qword_1EBB66208, MEMORY[0x1E4F674A0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v97 = (char *)&v82 - v11;
  sub_1C1DF3128(0, &qword_1EBB661E8, MEMORY[0x1E4F67360], v9);
  MEMORY[0x1F4188790](v12 - 8);
  os_log_type_t v89 = (char *)&v82 - v13;
  uint64_t v14 = sub_1C1EAE568();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v98 = v14;
  uint64_t v99 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v101 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v84 = (char *)&v82 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (uint64_t)&v82 - v20;
  uint64_t v22 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_101:
    swift_bridgeObjectRetain();
    uint64_t v78 = sub_1C1EAF638();
    swift_bridgeObjectRelease();
    if (v78)
    {
      unint64_t v79 = swift_bridgeObjectRetain();
      uint64_t v23 = (uint64_t)sub_1C1E30F14(v79);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v23 = a1 & 0xFFFFFFFFFFFFFF8;
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      swift_bridgeObjectRetain();
LABEL_4:
      v104[0] = v23;
      uint64_t v24 = 0;
      sub_1C1E7A7E0(v104);
      unint64_t v106 = v104[0];
      uint64_t v105 = MEMORY[0x1E4FBC860];
      uint64_t v25 = swift_allocObject();
      uint64_t v90 = v25;
      *(void *)(v25 + 16) = MEMORY[0x1E4FBC870];
      uint64_t v94 = v25 + 16;
      uint64_t v87 = v5;
      unint64_t v88 = v8;
      unint64_t v83 = v6;
      if (v3)
      {
        id v8 = v89;
        if (v22)
        {
          swift_bridgeObjectRetain();
          uint64_t v5 = sub_1C1EAF638();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        double v26 = (double)v5 * 0.4;
        if ((~*(void *)&v26 & 0x7FF0000000000000) == 0) {
          goto LABEL_111;
        }
        if (v26 <= -9.22337204e18) {
          goto LABEL_112;
        }
        if (v26 >= 9.22337204e18) {
          goto LABEL_113;
        }
        uint64_t v27 = (uint64_t)v26;
        if ((uint64_t)v26 >= 8) {
          uint64_t v27 = 8;
        }
        if (v27 <= 3) {
          uint64_t v27 = 3;
        }
        uint64_t v96 = v27;
      }
      else
      {
        uint64_t v96 = 8;
        id v8 = v89;
      }
      sub_1C1EAE508();
      swift_bridgeObjectRetain_n();
      uint64_t v28 = sub_1C1EAE558();
      os_log_type_t v29 = sub_1C1EAF0D8();
      BOOL v30 = os_log_type_enabled(v28, v29);
      uint64_t v6 = (char *)&loc_1C1EB0000;
      uint64_t v5 = MEMORY[0x1E4FBC840];
      if (v30)
      {
        uint64_t v95 = (void (*)(void, void))v21;
        uint64_t v31 = swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        v104[0] = v32;
        *(_DWORD *)uint64_t v31 = 136315650;
        uint64_t v33 = sub_1C1EAF908();
        v102[0] = sub_1C1DF8D44(v33, v34, v104);
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2050;
        v102[0] = v96;
        sub_1C1EAF2C8();
        *(_WORD *)(v31 + 22) = 2050;
        if (v22)
        {
          swift_bridgeObjectRetain();
          uint64_t v35 = sub_1C1EAF638();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v35 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        id v8 = v89;
        swift_bridgeObjectRelease();
        v102[0] = v35;
        sub_1C1EAF2C8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1DD2000, v28, v29, "[%s]: Will curate %{public}ld highlights from %{public}ld ranked highlights", (uint8_t *)v31, 0x20u);
        uint64_t v5 = MEMORY[0x1E4FBC840];
        swift_arrayDestroy();
        MEMORY[0x1C874D2E0](v32, -1, -1);
        MEMORY[0x1C874D2E0](v31, -1, -1);

        uint64_t v37 = *(void (**)(void, void))(v99 + 8);
        uint64_t v38 = v95;
        v99 += 8;
        uint64_t v95 = v37;
        v37(v38, v98);
        uint64_t v6 = (char *)&loc_1C1EB0000;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        id v36 = *(void (**)(void, void))(v99 + 8);
        v99 += 8;
        uint64_t v95 = v36;
        v36(v21, v98);
      }
      swift_beginAccess();
      uint64_t v93 = v104;
      *(void *)&long long v39 = 136315650;
      long long v86 = v39;
      uint64_t v85 = v5 + 8;
      uint64_t v2 = v87;
      id v40 = v88;
      uint64_t v3 = (uint64_t)v97;
      while (1)
      {
        if ((unint64_t)v105 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = sub_1C1EAF638();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v21 = *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v21 >= v96)
        {
          swift_bridgeObjectRelease();
          goto LABEL_83;
        }
        a1 = v105;
        if ((unint64_t)v105 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = sub_1C1EAF638();
          if (!v21)
          {
LABEL_41:
            swift_bridgeObjectRelease();
            uint64_t v21 = v106;
            uint64_t v22 = v106 >> 62;
            if (v106 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v5 = sub_1C1EAF638();
              swift_bridgeObjectRelease();
              if (!v5)
              {
                __break(1u);
                uint64_t result = swift_release();
                __break(1u);
                return result;
              }
              swift_bridgeObjectRetain();
              a1 = sub_1C1EAF638();
              swift_bridgeObjectRelease();
              if (!a1) {
                goto LABEL_95;
              }
            }
            else if (!*(void *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_94;
            }
            if ((v21 & 0xC000000000000001) != 0)
            {
              a1 = MEMORY[0x1C874C6F0](0, v21);
              if (!v22) {
                goto LABEL_46;
              }
            }
            else
            {
              if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_96;
              }
              a1 = (unint64_t)*(id *)(v21 + 32);
              if (!v22)
              {
LABEL_46:
                uint64_t v5 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_53:
                if (!v5) {
                  goto LABEL_100;
                }
                sub_1C1E7DBD4(0, 1);
                goto LABEL_55;
              }
            }
            swift_bridgeObjectRetain();
            uint64_t v5 = sub_1C1EAF638();
            swift_bridgeObjectRelease();
            goto LABEL_53;
          }
        }
        else
        {
          uint64_t v21 = *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v21) {
            goto LABEL_41;
          }
        }
        unint64_t v41 = v21 - 1;
        if (__OFSUB__(v21, 1))
        {
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
          goto LABEL_101;
        }
        if ((a1 & 0xC000000000000001) != 0)
        {
          unint64_t v42 = (char *)MEMORY[0x1C874C6F0](v41, a1);
        }
        else
        {
          if ((v41 & 0x8000000000000000) != 0) {
            goto LABEL_92;
          }
          if (v41 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_93;
          }
          unint64_t v42 = (char *)*(id *)(a1 + 8 * v41 + 32);
        }
        uint64_t v6 = v42;
        swift_bridgeObjectRelease();
        uint64_t v43 = sub_1C1EAE048();
        sub_1C1EAE248();
        uint64_t v44 = *(void *)(v43 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v3, 1, v43) == 1)
        {
          sub_1C1E7E708(v3, &qword_1EBB66208, MEMORY[0x1E4F674A0]);
          uint64_t v45 = sub_1C1EADE38();
          uint64_t v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v8, 1, 1, v45);
        }
        else
        {
          sub_1C1EAE038();
          (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v3, v43);
          uint64_t v47 = sub_1C1EADE38();
          uint64_t v46 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v8, 0, 1, v47);
        }
        MEMORY[0x1F4188790](v46);
        uint64_t v48 = v90;
        *(&v82 - 4) = (uint64_t)v8;
        *(&v82 - 3) = v48;
        uint64_t v49 = v100;
        *(&v82 - 2) = (uint64_t)v6;
        *(&v82 - 1) = v49;
        unint64_t v50 = swift_bridgeObjectRetain();
        unint64_t v51 = sub_1C1E7BB64(v50, sub_1C1E7E778);
        a1 = v52;
        swift_bridgeObjectRelease();
        if (!a1)
        {
          swift_bridgeObjectRelease();
          uint64_t v22 = (uint64_t)v84;
          sub_1C1EAE508();
          unint64_t v69 = v105;
          swift_bridgeObjectRetain_n();
          uint64_t v21 = v22;
          a1 = sub_1C1EAE558();
          LOBYTE(v5) = sub_1C1EAF0D8();
          if (!os_log_type_enabled((os_log_t)a1, (os_log_type_t)v5))
          {

            swift_bridgeObjectRelease_n();
            v95(v22, v98);
            goto LABEL_82;
          }
          uint64_t v21 = swift_slowAlloc();
          id v8 = (char *)swift_slowAlloc();
          v102[0] = (uint64_t)v8;
          *(_DWORD *)uint64_t v21 = 136315394;
          uint64_t v70 = sub_1C1EAF908();
          uint64_t v103 = sub_1C1DF8D44(v70, v71, v102);
          sub_1C1EAF2C8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v21 + 12) = 2050;
          if (v69 >> 62) {
            goto LABEL_114;
          }
          uint64_t v72 = *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
          while (1)
          {
            id v40 = v88;
            swift_bridgeObjectRelease();
            uint64_t v103 = v72;
            sub_1C1EAF2C8();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C1DD2000, (os_log_t)a1, (os_log_type_t)v5, "[%s]: No more eligible highlights; curation is complete at %{public}ld elements",
              (uint8_t *)v21,
              0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C874D2E0](v8, -1, -1);
            MEMORY[0x1C874D2E0](v21, -1, -1);

            v95(v22, v98);
            id v8 = v89;
LABEL_82:
            sub_1C1E7E708((uint64_t)v8, &qword_1EBB661E8, MEMORY[0x1E4F67360]);
LABEL_83:
            a1 = v105;
            if ((unint64_t)v105 >> 62)
            {
              if (v105 < 0) {
                uint64_t v21 = v105;
              }
              else {
                uint64_t v21 = v105 & 0xFFFFFFFFFFFFFF8;
              }
              swift_bridgeObjectRetain();
              uint64_t v73 = sub_1C1EAF638();
              if (!v73) {
                goto LABEL_108;
              }
            }
            else
            {
              uint64_t v73 = *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v73) {
                goto LABEL_108;
              }
            }
            if (v73 >= 1) {
              break;
            }
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            swift_bridgeObjectRetain();
            uint64_t v72 = sub_1C1EAF638();
            swift_bridgeObjectRelease();
          }
          uint64_t v74 = 0;
          id v75 = (void (**)(char *, uint64_t))(v83 + 8);
          do
          {
            if ((a1 & 0xC000000000000001) != 0) {
              id v76 = (id)MEMORY[0x1C874C6F0](v74, a1);
            }
            else {
              id v76 = *(id *)(a1 + 8 * v74 + 32);
            }
            ++v74;
            id v77 = v76;
            sub_1C1EADB88();
            sub_1C1E71354();

            (*v75)(v40, v2);
          }
          while (v73 != v74);
LABEL_108:
          swift_bridgeObjectRelease();
          uint64_t v80 = v105;
          swift_bridgeObjectRetain();
          swift_release();
          swift_bridgeObjectRelease();
          return v80;
        }

        sub_1C1E7E708((uint64_t)v8, &qword_1EBB661E8, MEMORY[0x1E4F67360]);
LABEL_55:
        unint64_t v53 = v101;
        sub_1C1EAE508();
        uint64_t v6 = (char *)(id)a1;
        uint64_t v21 = sub_1C1EAE558();
        LOBYTE(v3) = sub_1C1EAF0D8();
        if (os_log_type_enabled((os_log_t)v21, (os_log_type_t)v3))
        {
          uint64_t v92 = v24;
          uint64_t v2 = swift_slowAlloc();
          uint64_t v91 = swift_slowAlloc();
          v102[0] = v91;
          *(_DWORD *)uint64_t v2 = v86;
          uint64_t v54 = sub_1C1EAF908();
          uint64_t v103 = sub_1C1DF8D44(v54, v55, v102);
          a1 = (unint64_t)v93;
          sub_1C1EAF2C8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v2 + 12) = 2080;
          id v56 = objc_msgSend(v6, sel_uniqueIdentifier);
          uint64_t v22 = sub_1C1EAED38();
          unint64_t v58 = v57;

          uint64_t v103 = sub_1C1DF8D44(v22, v58, v102);
          sub_1C1EAF2C8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v2 + 22) = 2080;
          uint64_t v5 = v105;
          if ((unint64_t)v105 >> 62)
          {
            if (v105 < 0) {
              uint64_t v22 = v105;
            }
            else {
              uint64_t v22 = v105 & 0xFFFFFFFFFFFFFF8;
            }
            swift_bridgeObjectRetain();
            id v8 = (char *)sub_1C1EAF638();
          }
          else
          {
            id v8 = *(char **)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
          }
          id v40 = v88;
          if (v8)
          {
            uint64_t v59 = v8 - 1;
            if (__OFSUB__(v8, 1)) {
              goto LABEL_97;
            }
            if ((v5 & 0xC000000000000001) != 0)
            {
              id v60 = (id)MEMORY[0x1C874C6F0](v59, v5);
            }
            else
            {
              if (((unint64_t)v59 & 0x8000000000000000) != 0) {
                goto LABEL_98;
              }
              if ((unint64_t)v59 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_99;
              }
              id v60 = *(id *)(v5 + 8 * (void)v59 + 32);
            }
            id v61 = v60;
            swift_bridgeObjectRelease();
            id v62 = objc_msgSend(v61, sel_uniqueIdentifier);

            uint64_t v63 = sub_1C1EAED38();
            unint64_t v65 = v64;
          }
          else
          {
            swift_bridgeObjectRelease();
            unint64_t v65 = 0xE300000000000000;
            uint64_t v63 = 7104878;
          }
          uint64_t v103 = sub_1C1DF8D44(v63, v65, v102);
          sub_1C1EAF2C8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C1DD2000, (os_log_t)v21, (os_log_type_t)v3, "[%s]: Adding highlight %s to curated list after %s", (uint8_t *)v2, 0x20u);
          uint64_t v66 = v91;
          swift_arrayDestroy();
          MEMORY[0x1C874D2E0](v66, -1, -1);
          MEMORY[0x1C874D2E0](v2, -1, -1);

          v95(v101, v98);
          uint64_t v2 = v87;
          id v8 = v89;
          uint64_t v24 = v92;
        }
        else
        {

          v95(v53, v98);
        }
        swift_beginAccess();
        uint64_t v67 = v6;
        MEMORY[0x1C874C090]();
        uint64_t v5 = *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v3 = (uint64_t)v97;
        if ((unint64_t)v5 >= *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C1EAEEE8();
        }
        sub_1C1EAEF18();
        sub_1C1EAEEB8();
        swift_endAccess();
        unint64_t v68 = sub_1C1EAE298();
        uint64_t v22 = v94;
        swift_beginAccess();
        sub_1C1E79378(v68);
        swift_endAccess();
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C1E77EE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, NSObject *a6)
{
  uint64_t v171 = a4;
  os_log_t v172 = a6;
  id v163 = a5;
  uint64_t v170 = (char *)a3;
  sub_1C1E7E784();
  uint64_t v161 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v162 = (uint64_t)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1DF3128(0, &qword_1EBB661E8, MEMORY[0x1E4F67360], MEMORY[0x1E4FBB718]);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v158 = (uint64_t)&v146 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  os_log_t v164 = (os_log_t)((char *)&v146 - v14);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v157 = (uint64_t)&v146 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v169 = (uint64_t)&v146 - v17;
  uint64_t v18 = sub_1C1EAE568();
  uint64_t v173 = *(void *)(v18 - 8);
  uint64_t v174 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  id v166 = (char *)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  id v165 = (char *)&v146 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v146 - v24;
  MEMORY[0x1F4188790](v23);
  id v167 = (char *)&v146 - v26;
  sub_1C1DF3128(0, &qword_1EBB66208, MEMORY[0x1E4F674A0], v9);
  MEMORY[0x1F4188790](v27 - 8);
  os_log_type_t v29 = (char *)&v146 - v28;
  uint64_t v30 = sub_1C1EADE38();
  uint64_t v31 = *(void **)(v30 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v156 = (char *)&v146 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  id v168 = ((char *)&v146 - v35);
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v38 = (char *)&v146 - v37;
  MEMORY[0x1F4188790](v36);
  id v40 = (char *)&v146 - v39;
  uint64_t v41 = sub_1C1EAE048();
  unint64_t v42 = a2;
  sub_1C1EAE248();
  uint64_t v43 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v29, 1, v41) == 1)
  {
    sub_1C1E7E708((uint64_t)v29, &qword_1EBB66208, MEMORY[0x1E4F674A0]);
    sub_1C1EAE508();
    id v44 = v42;
    uint64_t v45 = sub_1C1EAE558();
    os_log_type_t v46 = sub_1C1EAF0B8();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v178 = v48;
      *(_DWORD *)uint64_t v47 = 136315394;
      uint64_t v49 = sub_1C1EAF908();
      uint64_t v175 = sub_1C1DF8D44(v49, v50, &v178);
      sub_1C1EAF2C8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      id v51 = objc_msgSend(v44, sel_uniqueIdentifier);
      uint64_t v52 = sub_1C1EAED38();
      unint64_t v54 = v53;

      uint64_t v175 = sub_1C1DF8D44(v52, v54, &v178);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v45, v46, "[%s]: Highlight %s has no data visualization kind; leaving it alone",
        (uint8_t *)v47,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v48, -1, -1);
      MEMORY[0x1C874D2E0](v47, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v173 + 8))(v167, v174);
    return 1;
  }
  uint64_t v159 = v171 + 16;
  sub_1C1EAE038();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v41);
  unint64_t v55 = (void (*)(char *, uint64_t, uint64_t))v31[4];
  os_log_type_t v151 = v31 + 4;
  os_log_type_t v150 = v55;
  v55(v40, (uint64_t)v38, v30);
  sub_1C1EAE508();
  id v56 = (void (*)(os_log_t, char *, uint64_t))v31[2];
  unint64_t v153 = v31 + 2;
  uint64_t v152 = v56;
  v56(v168, v40, v30);
  sub_1C1E7E818((uint64_t)v170, v169);
  id v57 = v42;
  unint64_t v58 = sub_1C1EAE558();
  int v59 = sub_1C1EAF0A8();
  BOOL v60 = os_log_type_enabled(v58, (os_log_type_t)v59);
  id v61 = &loc_1C1EB0000;
  uint64_t v62 = v30;
  id v167 = (char *)v31;
  uint64_t v160 = v40;
  id v154 = v57;
  if (v60)
  {
    int v147 = v59;
    os_log_t v148 = v58;
    id v149 = v25;
    uint64_t v63 = swift_slowAlloc();
    uint64_t v146 = swift_slowAlloc();
    uint64_t v178 = v146;
    *(_DWORD *)uint64_t v63 = 136315906;
    uint64_t v64 = sub_1C1EAF908();
    uint64_t v175 = sub_1C1DF8D44(v64, v65, &v178);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 12) = 2080;
    id v66 = objc_msgSend(v57, sel_uniqueIdentifier);
    uint64_t v67 = sub_1C1EAED38();
    unint64_t v69 = v68;

    uint64_t v70 = v167;
    uint64_t v175 = sub_1C1DF8D44(v67, v69, &v178);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 22) = 2080;
    unint64_t v71 = (char *)v168;
    uint64_t v72 = sub_1C1EADE28();
    uint64_t v175 = sub_1C1DF8D44(v72, v73, &v178);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    uint64_t v74 = (void (*)(char *, uint64_t))*((void *)v70 + 1);
    v74(v71, v62);
    *(_WORD *)(v63 + 32) = 2080;
    uint64_t v75 = v169;
    uint64_t v76 = v157;
    sub_1C1E7E818(v169, v157);
    if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v70 + 6))(v76, 1, v62) == 1)
    {
      sub_1C1E7E708(v76, &qword_1EBB661E8, MEMORY[0x1E4F67360]);
      unint64_t v77 = 0xE300000000000000;
      uint64_t v78 = 7104878;
    }
    else
    {
      uint64_t v78 = sub_1C1EADE28();
      unint64_t v77 = v82;
      v74((char *)v76, v62);
    }
    os_log_t v81 = v164;
    unint64_t v83 = v149;
    uint64_t v175 = sub_1C1DF8D44(v78, v77, &v178);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    sub_1C1E7E708(v75, &qword_1EBB661E8, MEMORY[0x1E4F67360]);
    os_log_t v84 = v148;
    _os_log_impl(&dword_1C1DD2000, v148, (os_log_type_t)v147, "[%s]: Comparing highlight %s DVK %s to previous of kind %s", (uint8_t *)v63, 0x2Au);
    uint64_t v85 = v146;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v85, -1, -1);
    MEMORY[0x1C874D2E0](v63, -1, -1);

    uint64_t v80 = *(void (**)(char *, uint64_t))(v173 + 8);
    v80(v83, v174);
    id v40 = v160;
    id v61 = &loc_1C1EB0000;
  }
  else
  {
    uint64_t v70 = (char *)v31;

    uint64_t v74 = (void (*)(char *, uint64_t))v31[1];
    v74((char *)v168, v62);
    sub_1C1E7E708(v169, &qword_1EBB661E8, MEMORY[0x1E4F67360]);

    uint64_t v80 = *(void (**)(char *, uint64_t))(v173 + 8);
    v80(v25, v174);
    os_log_t v81 = v164;
  }
  v152(v81, v40, v62);
  (*((void (**)(os_log_t, void, uint64_t, uint64_t))v70 + 7))(v81, 0, 1, v62);
  uint64_t v86 = v162;
  uint64_t v87 = v162 + *(int *)(v161 + 48);
  sub_1C1E7E818((uint64_t)v81, v162);
  sub_1C1E7E818((uint64_t)v170, v87);
  unint64_t v88 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v70 + 6);
  if (v88(v86, 1, v62) != 1)
  {
    uint64_t v89 = v158;
    sub_1C1E7E818(v86, v158);
    if (v88(v87, 1, v62) != 1)
    {
      uint64_t v90 = v156;
      v150(v156, v87, v62);
      sub_1C1E7DAA0(&qword_1EBB661D0, MEMORY[0x1E4F67360]);
      int v91 = sub_1C1EAED18();
      v74(v90, v62);
      uint64_t v92 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F67360];
      sub_1C1E7E708((uint64_t)v164, &qword_1EBB661E8, MEMORY[0x1E4F67360]);
      v74((char *)v89, v62);
      sub_1C1E7E708(v86, &qword_1EBB661E8, v92);
      LODWORD(v89) = v91 ^ 1;
      goto LABEL_19;
    }
    sub_1C1E7E708((uint64_t)v164, &qword_1EBB661E8, MEMORY[0x1E4F67360]);
    v74((char *)v89, v62);
    goto LABEL_17;
  }
  sub_1C1E7E708((uint64_t)v81, &qword_1EBB661E8, MEMORY[0x1E4F67360]);
  if (v88(v87, 1, v62) != 1)
  {
LABEL_17:
    sub_1C1E7DB74(v86, (uint64_t (*)(void))sub_1C1E7E784);
    LODWORD(v89) = 1;
    goto LABEL_19;
  }
  sub_1C1E7E708(v86, &qword_1EBB661E8, MEMORY[0x1E4F67360]);
  LODWORD(v89) = 0;
LABEL_19:
  uint64_t v93 = v154;
  uint64_t v94 = sub_1C1EAE298();
  swift_beginAccess();
  uint64_t v95 = swift_bridgeObjectRetain();
  uint64_t v96 = sub_1C1E73ECC(v95, v94);
  swift_bridgeObjectRelease();
  uint64_t v97 = v165;
  sub_1C1EAE508();
  id v98 = v93;
  swift_retain_n();
  id v99 = v98;
  uint64_t v100 = sub_1C1EAE558();
  os_log_type_t v101 = sub_1C1EAF0A8();
  LODWORD(v171) = v101;
  BOOL v102 = os_log_type_enabled(v100, v101);
  uint64_t v155 = v62;
  if (v102)
  {
    uint64_t v103 = swift_slowAlloc();
    LODWORD(v170) = v89;
    uint64_t v89 = v103;
    id v168 = swift_slowAlloc();
    unint64_t v177 = (char *)v168;
    *(_DWORD *)uint64_t v89 = 136315906;
    os_log_t v164 = v100;
    uint64_t v104 = sub_1C1EAF908();
    uint64_t v175 = sub_1C1DF8D44(v104, v105, (uint64_t *)&v177);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v89 + 12) = 2080;
    id v106 = objc_msgSend(v99, sel_uniqueIdentifier);
    uint64_t v107 = sub_1C1EAED38();
    unint64_t v109 = v108;

    uint64_t v175 = sub_1C1DF8D44(v107, v109, (uint64_t *)&v177);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v89 + 22) = 2080;
    sub_1C1EAE298();
    uint64_t v169 = v96;
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40);
    sub_1C1DFAEA0(&qword_1EBB67F48, (unint64_t *)&qword_1EBB67F40);
    uint64_t v110 = sub_1C1EAEF58();
    unint64_t v112 = v111;
    swift_bridgeObjectRelease();
    uint64_t v113 = v110;
    id v61 = (void *)&loc_1C1EB0000;
    uint64_t v175 = sub_1C1DF8D44(v113, v112, (uint64_t *)&v177);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v89 + 32) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v114 = sub_1C1EAEF58();
    unint64_t v116 = v115;
    swift_bridgeObjectRelease();
    uint64_t v176 = sub_1C1DF8D44(v114, v116, (uint64_t *)&v177);
    sub_1C1EAF2C8();
    swift_release_n();
    uint64_t v96 = v169;
    swift_bridgeObjectRelease();
    os_log_t v117 = v164;
    _os_log_impl(&dword_1C1DD2000, v164, (os_log_type_t)v171, "[%s]: Highlight %s has HKTypes %s compared to existing pool of %s", (uint8_t *)v89, 0x2Au);
    unint64_t v118 = v168;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v118, -1, -1);
    uint64_t v119 = v89;
    LOBYTE(v89) = (_BYTE)v170;
    MEMORY[0x1C874D2E0](v119, -1, -1);

    uint64_t v80 = *(void (**)(char *, uint64_t))(v173 + 8);
    v80(v165, v174);
  }
  else
  {

    swift_release_n();
    v80(v97, v174);
  }
  uint64_t v120 = v166;
  if ((v96 & 0xC000000000000001) != 0) {
    uint64_t v121 = sub_1C1EAF3B8();
  }
  else {
    uint64_t v121 = *(void *)(v96 + 16);
  }
  swift_bridgeObjectRelease();
  uint64_t v79 = v89 & (v121 != 0);
  sub_1C1EAE508();
  id v122 = v99;
  id v123 = v163;
  id v124 = v122;
  id v125 = v123;
  uint64_t v126 = sub_1C1EAE558();
  os_log_type_t v127 = sub_1C1EAF0D8();
  int v128 = v127;
  if (os_log_type_enabled(v126, v127))
  {
    uint64_t v129 = swift_slowAlloc();
    LODWORD(v171) = v128;
    uint64_t v130 = v129;
    uint64_t v170 = (char *)swift_slowAlloc();
    unint64_t v177 = v170;
    *(_DWORD *)uint64_t v130 = v61[303];
    uint64_t v131 = sub_1C1EAF908();
    uint64_t v176 = sub_1C1DF8D44(v131, v132, (uint64_t *)&v177);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v130 + 12) = 2080;
    os_log_t v172 = v126;
    id v133 = objc_msgSend(v124, sel_uniqueIdentifier);
    uint64_t v134 = sub_1C1EAED38();
    unint64_t v136 = v135;

    uint64_t v176 = sub_1C1DF8D44(v134, v136, (uint64_t *)&v177);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v130 + 22) = 2080;
    id v137 = objc_msgSend(v125, (SEL)&selRef_resetModelWithCompletion_);
    uint64_t v138 = sub_1C1EAED38();
    unint64_t v140 = v139;

    uint64_t v176 = sub_1C1DF8D44(v138, v140, (uint64_t *)&v177);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v130 + 32) = 2080;
    if (v79) {
      uint64_t v141 = 5457241;
    }
    else {
      uint64_t v141 = 20302;
    }
    if (v79) {
      unint64_t v142 = 0xE300000000000000;
    }
    else {
      unint64_t v142 = 0xE200000000000000;
    }
    uint64_t v176 = sub_1C1DF8D44(v141, v142, (uint64_t *)&v177);
    sub_1C1EAF2C8();
    swift_bridgeObjectRelease();
    os_log_t v143 = v172;
    _os_log_impl(&dword_1C1DD2000, v172, (os_log_type_t)v171, "[%s]: Highlight %s eligibility for placement after %s: %s", (uint8_t *)v130, 0x2Au);
    uint64_t v144 = (uint64_t)v170;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v144, -1, -1);
    MEMORY[0x1C874D2E0](v130, -1, -1);

    (*(void (**)(char *, uint64_t))(v173 + 8))(v166, v174);
  }
  else
  {

    v80(v120, v174);
  }
  (*((void (**)(char *, uint64_t))v167 + 1))(v160, v155);
  return v79;
}

uint64_t sub_1C1E79294(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_1C1E7B688(v3);
    unint64_t v3 = v5;
    *int64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v7 - 1 - a1;
    if (v9 >= 0)
    {
      uint64_t v10 = v6 + 8 * a1;
      uint64_t v11 = *(void *)(v10 + 32);
      memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * v9);
      *(void *)(v6 + 16) = v8;
      sub_1C1EAEEB8();
      return v11;
    }
  }
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1E79378(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1C1EAF368();
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40);
    sub_1C1DFAEA0(&qword_1EBB67F48, (unint64_t *)&qword_1EBB67F40);
    sub_1C1EAEF98();
    unint64_t v1 = (unint64_t)v17[1];
    uint64_t v16 = v17[2];
    uint64_t v2 = (uint64_t)v17[3];
    id v3 = v17[4];
    unint64_t v4 = (unint64_t)v17[5];
  }
  else
  {
    id v3 = 0;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = (void *)(a1 + 56);
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | ((void)v3 << 6);
      uint64_t v11 = (char *)v3;
      goto LABEL_29;
    }
    uint64_t v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_32;
    }
    unint64_t v14 = v16[v13];
    uint64_t v11 = (char *)v3 + 1;
    if (!v14)
    {
      uint64_t v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8) {
        goto LABEL_32;
      }
      unint64_t v14 = v16[(void)v11];
      if (!v14)
      {
        uint64_t v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8) {
          goto LABEL_32;
        }
        unint64_t v14 = v16[(void)v11];
        if (!v14)
        {
          uint64_t v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8) {
            goto LABEL_32;
          }
          unint64_t v14 = v16[(void)v11];
          if (!v14)
          {
            uint64_t v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8) {
              goto LABEL_32;
            }
            unint64_t v14 = v16[(void)v11];
            if (!v14)
            {
              uint64_t v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                unint64_t v14 = v16[(void)v15++];
                if (v14)
                {
                  uint64_t v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1C1E00B40();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + ((void)v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_1C1E31360(v17, v12);

      id v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1C1EAF3E8())
      {
        sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB67F40);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v17[0];
        swift_unknownObjectRelease();
        uint64_t v11 = (char *)v3;
        uint64_t v9 = v4;
        if (v12) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_1C1E79644(void **a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v96 = sub_1C1EAE568();
  uint64_t v6 = *(void *)(v96 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v96);
  uint64_t v9 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  id v12 = (char *)&v90 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v90 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v90 - v16;
  uint64_t v18 = *a1;
  uint64_t v19 = sub_1C1EAE298();
  uint64_t v20 = (void *)sub_1C1E74298(v19, sub_1C1EA3818, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_1C1EA3584);
  swift_bridgeObjectRelease();
  if (!v20)
  {
    sub_1C1EAE508();
    id v43 = v18;
    id v44 = sub_1C1EAE558();
    os_log_type_t v45 = sub_1C1EAF0B8();
    if (os_log_type_enabled(v44, v45))
    {
      os_log_type_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      v99[0] = v47;
      uint64_t v95 = v6;
      *(_DWORD *)os_log_type_t v46 = 136446210;
      uint64_t v94 = (uint64_t)(v46 + 4);
      id v48 = objc_msgSend(v43, sel_uniqueIdentifier);
      uint64_t v49 = sub_1C1EAED38();
      unint64_t v51 = v50;

      v97[0] = sub_1C1DF8D44(v49, v51, v99);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v44, v45, "Ignoring ranked app that has no object type %{public}s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v47, -1, -1);
      MEMORY[0x1C874D2E0](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v95 + 8))(v17, v96);
      return 0;
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v96);
    return 0;
  }
  id v21 = objc_msgSend(v20, sel_hk_metadataValueDisplayTypeInStore_, a2);
  if (!v21)
  {
    sub_1C1EAE508();
    id v52 = v18;
    id v53 = v20;
    id v54 = v52;
    id v55 = v53;
    id v56 = sub_1C1EAE558();
    os_log_type_t v57 = sub_1C1EAF0B8();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      v99[0] = v94;
      *(_DWORD *)uint64_t v58 = 136446466;
      uint64_t v95 = v6;
      id v59 = objc_msgSend(v54, sel_uniqueIdentifier);
      uint64_t v60 = sub_1C1EAED38();
      unint64_t v62 = v61;

      v97[0] = sub_1C1DF8D44(v60, v62, v99);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v58 + 12) = 2082;
      id v63 = objc_msgSend(v55, sel_identifier);
      uint64_t v64 = sub_1C1EAED38();
      unint64_t v66 = v65;

      v97[0] = sub_1C1DF8D44(v64, v66, v99);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v56, v57, "Ignoring ranked app %{public}s that has an object type %{public}s with no display type", (uint8_t *)v58, 0x16u);
      uint64_t v67 = v94;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v67, -1, -1);
      MEMORY[0x1C874D2E0](v58, -1, -1);

      (*(void (**)(char *, uint64_t))(v95 + 8))(v15, v96);
      return 0;
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v96);
    return 0;
  }
  uint64_t v22 = v21;
  id v23 = objc_msgSend(v21, sel_categoryIdentifier);
  swift_beginAccess();
  if (sub_1C1DE166C((uint64_t)v23, *a3))
  {
    sub_1C1EAE508();
    id v24 = v18;
    id v25 = v22;
    id v26 = v24;
    id v27 = v25;
    uint64_t v28 = sub_1C1EAE558();
    os_log_type_t v29 = sub_1C1EAF0D8();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      LODWORD(v93) = v30;
      uint64_t v32 = v31;
      uint64_t v94 = swift_slowAlloc();
      v97[0] = v94;
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v95 = v6;
      id v33 = objc_msgSend(v26, sel_uniqueIdentifier);
      uint64_t v34 = sub_1C1EAED38();
      unint64_t v36 = v35;

      uint64_t v98 = sub_1C1DF8D44(v34, v36, v97);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2082;
      id v37 = objc_msgSend(v27, sel_displayCategory);
      id v38 = objc_msgSend(v37, sel_categoryName);

      uint64_t v39 = sub_1C1EAED38();
      unint64_t v41 = v40;

      uint64_t v98 = sub_1C1DF8D44(v39, v41, v97);
      sub_1C1EAF2C8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1DD2000, v28, (os_log_type_t)v93, "Ignoring ranked app that has already been picked %s with category %{public}s", (uint8_t *)v32, 0x16u);
      uint64_t v42 = v94;
      swift_arrayDestroy();
      MEMORY[0x1C874D2E0](v42, -1, -1);
      MEMORY[0x1C874D2E0](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v95 + 8))(v9, v96);
      return 0;
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v96);
    return 0;
  }
  sub_1C1EAE508();
  id v69 = v18;
  id v70 = v22;
  id v71 = v69;
  id v72 = v70;
  unint64_t v73 = sub_1C1EAE558();
  os_log_type_t v74 = sub_1C1EAF0D8();
  int v75 = v74;
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v76 = swift_slowAlloc();
    int v92 = v75;
    uint64_t v77 = v76;
    uint64_t v93 = swift_slowAlloc();
    v97[0] = v93;
    *(_DWORD *)uint64_t v77 = 136446466;
    uint64_t v95 = v6;
    id v78 = objc_msgSend(v71, sel_uniqueIdentifier);
    uint64_t v79 = sub_1C1EAED38();
    uint64_t v94 = (uint64_t)v23;
    uint64_t v80 = v79;
    os_log_t v91 = v73;
    unint64_t v82 = v81;

    uint64_t v98 = sub_1C1DF8D44(v80, v82, v97);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v77 + 12) = 2082;
    id v83 = objc_msgSend(v72, sel_displayCategory);
    id v84 = objc_msgSend(v83, sel_categoryName);

    uint64_t v85 = sub_1C1EAED38();
    unint64_t v87 = v86;

    id v23 = (id)v94;
    uint64_t v98 = sub_1C1DF8D44(v85, v87, v97);
    sub_1C1EAF2C8();

    swift_bridgeObjectRelease();
    os_log_t v88 = v91;
    _os_log_impl(&dword_1C1DD2000, v91, (os_log_type_t)v92, "Adding app %{public}s with category %{public}s to curated list", (uint8_t *)v77, 0x16u);
    uint64_t v89 = v93;
    swift_arrayDestroy();
    MEMORY[0x1C874D2E0](v89, -1, -1);
    MEMORY[0x1C874D2E0](v77, -1, -1);

    (*(void (**)(char *, uint64_t))(v95 + 8))(v12, v96);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v96);
  }
  swift_beginAccess();
  sub_1C1E31960(&v98, (uint64_t)v23);
  swift_endAccess();

  return 1;
}

uint64_t sub_1C1E7A03C()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1C1EAD668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_managedObjectContext);
  if (v6)
  {
    uint64_t v7 = v6;
    sub_1C1EAE258();
    int v8 = sub_1C1EADAB8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v8 == 4)
    {

      return 0;
    }
    else
    {
      sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
      sub_1C1DF3128(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1C1EB0800;
      *(void *)(v10 + 56) = sub_1C1EAE188();
      *(void *)(v10 + 64) = sub_1C1E7DAA0(&qword_1EBB65338, MEMORY[0x1E4F674D0]);
      *(void *)(v10 + 32) = v1;
      id v11 = v1;
      uint64_t v12 = sub_1C1EADAD8();
      uint64_t v14 = v13;
      *(void *)(v10 + 96) = MEMORY[0x1E4FBB1A0];
      *(void *)(v10 + 104) = sub_1C1DF2A98();
      *(void *)(v10 + 72) = v12;
      *(void *)(v10 + 80) = v14;
      uint64_t v15 = (void *)sub_1C1EAF018();
      sub_1C1EAD688();
      uint64_t v9 = (void *)sub_1C1EADE48();
      sub_1C1EADAD8();
      uint64_t v16 = (void *)sub_1C1EAED28();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setIdentifier_, v16);

      objc_msgSend(v9, sel_setFeed_, v11);
    }
    return (uint64_t)v9;
  }
  else
  {
    uint64_t result = sub_1C1EAF628();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1E7A338(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1C1EADAD8();
  uint64_t v5 = v4;
  if (v3 == sub_1C1EADAD8() && v5 == v6)
  {
    uint64_t v9 = 0;
LABEL_17:
    swift_bridgeObjectRelease_n();
    return v9;
  }
  char v8 = sub_1C1EAF7A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = 0;
  if ((v8 & 1) == 0)
  {
    uint64_t v10 = v2 - 1;
    while (1)
    {
      if (v10 == v9) {
        return 0;
      }
      uint64_t v11 = sub_1C1EADAD8();
      uint64_t v13 = v12;
      if (v11 == sub_1C1EADAD8() && v13 == v14) {
        break;
      }
      char v16 = sub_1C1EAF7A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v9;
      if (v16) {
        return v9;
      }
    }
    ++v9;
    goto LABEL_17;
  }
  return v9;
}

uint64_t static SummaryTabFeedPopulationManager.highlightsFeedStalenessTimeout.getter()
{
  unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1DF3128(0, &qword_1EBB68178, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v16 - v2;
  sub_1C1DF3128(0, &qword_1EBB68170, MEMORY[0x1E4F27CA0], v0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v16 - v5;
  sub_1C1DF318C(0, &qword_1EBB660B8, MEMORY[0x1E4FBB550], MEMORY[0x1E4F67098]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v16 - v10;
  if (qword_1EBB65F38 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v8, (uint64_t)qword_1EBB660D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  sub_1C1EAD6C8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (__OFSUB__(0, v16[1]))
  {
    __break(1u);
  }
  else
  {
    sub_1C1EAD3A8();
    uint64_t v14 = sub_1C1EAD3C8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 0, 1, v14);
    uint64_t v15 = sub_1C1EAD3F8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v3, 1, 1, v15);
    return sub_1C1EAD158();
  }
  return result;
}

uint64_t static SummaryTabFeedPopulationManager.getMoreFromHealthMaximumItemsCount.getter()
{
  return 4;
}

uint64_t static SummaryTabFeedPopulationManager.articlesMaximumItemsCount.getter()
{
  return 4;
}

uint64_t sub_1C1E7A7E0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C1E7B72C();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C1E7A85C(v6);
  return sub_1C1EAF528();
}

void sub_1C1E7A85C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = sub_1C1EAF758();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_132;
    }
    if (v3) {
      sub_1C1E7AFC0(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_140;
  }
  uint64_t v104 = v4;
  id v99 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v111 = MEMORY[0x1E4FBC860];
    uint64_t v110 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_98:
      if (v11 >= 2)
      {
        uint64_t v93 = *v99;
        do
        {
          unint64_t v94 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_127;
          }
          if (!v93) {
            goto LABEL_139;
          }
          uint64_t v95 = *(void *)&v8[16 * v94 + 32];
          uint64_t v96 = *(void *)&v8[16 * v11 + 24];
          sub_1C1E7B0B4((id *)(v93 + 8 * v95), (id *)(v93 + 8 * *(void *)&v8[16 * v11 + 16]), v93 + 8 * v96, v110);
          if (v1) {
            break;
          }
          if (v96 < v95) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1C1E7B674((uint64_t)v8);
          }
          if (v94 >= *((void *)v8 + 2)) {
            goto LABEL_129;
          }
          uint64_t v97 = &v8[16 * v94 + 32];
          *(void *)uint64_t v97 = v95;
          *((void *)v97 + 1) = v96;
          unint64_t v98 = *((void *)v8 + 2);
          if (v11 > v98) {
            goto LABEL_130;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v98 - v11));
          *((void *)v8 + 2) = v98 - 1;
          unint64_t v11 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C1EAEEB8();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_1C1EAE348();
    uint64_t v7 = sub_1C1EAEF08();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v110 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v111 = v7;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v100 = *a1 - 8;
  uint64_t v101 = *a1 + 16;
  uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v107 = v3;
  while (1)
  {
    uint64_t v12 = v9++;
    uint64_t v108 = v12;
    if (v9 < v3)
    {
      uint64_t v13 = *(void **)(v10 + 8 * v12);
      id v14 = *(id *)(v10 + 8 * v9);
      id v15 = v13;
      id v105 = objc_msgSend(v14, sel_sortOrder);
      id v16 = objc_msgSend(v15, sel_sortOrder);

      uint64_t v3 = v107;
      uint64_t v9 = v12 + 2;
      if (v12 + 2 < v107)
      {
        BOOL v102 = v8;
        uint64_t v17 = (id *)(v101 + 8 * v12);
        while (1)
        {
          uint64_t v18 = *(v17 - 1);
          id v19 = *v17;
          id v20 = v18;
          id v21 = objc_msgSend(v19, sel_sortOrder);
          id v22 = objc_msgSend(v20, sel_sortOrder);

          if ((uint64_t)v105 < (uint64_t)v16 == (uint64_t)v21 >= (uint64_t)v22) {
            break;
          }
          ++v9;
          ++v17;
          uint64_t v3 = v107;
          if (v107 == v9)
          {
            uint64_t v9 = v107;
            uint64_t v8 = v102;
            goto LABEL_22;
          }
        }
        uint64_t v8 = v102;
        uint64_t v3 = v107;
LABEL_22:
        uint64_t v12 = v108;
      }
      if ((uint64_t)v105 < (uint64_t)v16)
      {
        if (v9 < v12) {
          goto LABEL_133;
        }
        if (v12 < v9)
        {
          id v23 = (uint64_t *)(v100 + 8 * v9);
          uint64_t v24 = v9;
          uint64_t v25 = v12;
          id v26 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v25 != --v24)
            {
              if (!v10) {
                goto LABEL_138;
              }
              uint64_t v27 = *v26;
              *id v26 = *v23;
              *id v23 = v27;
            }
            ++v25;
            --v23;
            ++v26;
          }
          while (v25 < v24);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_131;
      }
      if (v9 - v12 < v104) {
        break;
      }
    }
LABEL_48:
    if (v9 < v12) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1C1E7B3D4(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v40 = *((void *)v8 + 2);
    unint64_t v39 = *((void *)v8 + 3);
    unint64_t v11 = v40 + 1;
    if (v40 >= v39 >> 1) {
      uint64_t v8 = sub_1C1E7B3D4((char *)(v39 > 1), v40 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11;
    unint64_t v41 = v8 + 32;
    uint64_t v42 = &v8[16 * v40 + 32];
    *(void *)uint64_t v42 = v12;
    *((void *)v42 + 1) = v9;
    if (v40)
    {
      uint64_t v109 = v9;
      while (1)
      {
        unint64_t v43 = v11 - 1;
        if (v11 >= 4)
        {
          id v48 = &v41[16 * v11];
          uint64_t v49 = *((void *)v48 - 8);
          uint64_t v50 = *((void *)v48 - 7);
          BOOL v54 = __OFSUB__(v50, v49);
          uint64_t v51 = v50 - v49;
          if (v54) {
            goto LABEL_115;
          }
          uint64_t v53 = *((void *)v48 - 6);
          uint64_t v52 = *((void *)v48 - 5);
          BOOL v54 = __OFSUB__(v52, v53);
          uint64_t v46 = v52 - v53;
          char v47 = v54;
          if (v54) {
            goto LABEL_116;
          }
          unint64_t v55 = v11 - 2;
          id v56 = &v41[16 * v11 - 32];
          uint64_t v58 = *(void *)v56;
          uint64_t v57 = *((void *)v56 + 1);
          BOOL v54 = __OFSUB__(v57, v58);
          uint64_t v59 = v57 - v58;
          if (v54) {
            goto LABEL_118;
          }
          BOOL v54 = __OFADD__(v46, v59);
          uint64_t v60 = v46 + v59;
          if (v54) {
            goto LABEL_121;
          }
          if (v60 >= v51)
          {
            id v78 = &v41[16 * v43];
            uint64_t v80 = *(void *)v78;
            uint64_t v79 = *((void *)v78 + 1);
            BOOL v54 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v54) {
              goto LABEL_125;
            }
            BOOL v71 = v46 < v81;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v72 = *((void *)v8 + 4);
            uint64_t v73 = *((void *)v8 + 5);
            BOOL v54 = __OFSUB__(v73, v72);
            uint64_t v65 = v73 - v72;
            char v66 = v54;
            goto LABEL_80;
          }
          uint64_t v45 = *((void *)v8 + 4);
          uint64_t v44 = *((void *)v8 + 5);
          BOOL v54 = __OFSUB__(v44, v45);
          uint64_t v46 = v44 - v45;
          char v47 = v54;
        }
        if (v47) {
          goto LABEL_117;
        }
        unint64_t v55 = v11 - 2;
        unint64_t v61 = &v41[16 * v11 - 32];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v64 = __OFSUB__(v62, v63);
        uint64_t v65 = v62 - v63;
        char v66 = v64;
        if (v64) {
          goto LABEL_120;
        }
        uint64_t v67 = &v41[16 * v43];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v54 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v54) {
          goto LABEL_123;
        }
        if (__OFADD__(v65, v70)) {
          goto LABEL_124;
        }
        if (v65 + v70 >= v46)
        {
          BOOL v71 = v46 < v70;
LABEL_86:
          if (v71) {
            unint64_t v43 = v55;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v66) {
          goto LABEL_119;
        }
        os_log_type_t v74 = &v41[16 * v43];
        uint64_t v76 = *(void *)v74;
        uint64_t v75 = *((void *)v74 + 1);
        BOOL v54 = __OFSUB__(v75, v76);
        uint64_t v77 = v75 - v76;
        if (v54) {
          goto LABEL_122;
        }
        if (v77 < v65) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v82 = v43 - 1;
        if (v43 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v83 = v10;
        if (!v10) {
          goto LABEL_137;
        }
        id v84 = v8;
        uint64_t v85 = &v41[16 * v82];
        uint64_t v86 = *(void *)v85;
        unint64_t v87 = v41;
        unint64_t v88 = v43;
        uint64_t v89 = &v41[16 * v43];
        uint64_t v90 = *((void *)v89 + 1);
        uint64_t v91 = v83;
        sub_1C1E7B0B4((id *)(v83 + 8 * *(void *)v85), (id *)(v83 + 8 * *(void *)v89), v83 + 8 * v90, v110);
        if (v1) {
          goto LABEL_109;
        }
        if (v90 < v86) {
          goto LABEL_112;
        }
        if (v88 > *((void *)v84 + 2)) {
          goto LABEL_113;
        }
        *(void *)uint64_t v85 = v86;
        *(void *)&v87[16 * v82 + 8] = v90;
        unint64_t v92 = *((void *)v84 + 2);
        if (v88 >= v92) {
          goto LABEL_114;
        }
        uint64_t v8 = v84;
        unint64_t v11 = v92 - 1;
        memmove(v89, v89 + 16, 16 * (v92 - 1 - v88));
        unint64_t v41 = v87;
        *((void *)v84 + 2) = v92 - 1;
        uint64_t v10 = v91;
        uint64_t v9 = v109;
        if (v92 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    uint64_t v3 = v107;
    if (v9 >= v107) {
      goto LABEL_98;
    }
  }
  if (__OFADD__(v12, v104)) {
    goto LABEL_134;
  }
  if (v12 + v104 >= v3) {
    uint64_t v28 = v3;
  }
  else {
    uint64_t v28 = v12 + v104;
  }
  if (v28 >= v12)
  {
    if (v9 != v28)
    {
      uint64_t v103 = v8;
      uint64_t v29 = v100 + 8 * v9;
      uint64_t v106 = v28;
      do
      {
        int v30 = *(void **)(v10 + 8 * v9);
        uint64_t v31 = v12;
        uint64_t v32 = v29;
        do
        {
          id v33 = *(void **)v32;
          id v34 = v30;
          id v35 = v33;
          id v36 = objc_msgSend(v34, sel_sortOrder);
          id v37 = objc_msgSend(v35, sel_sortOrder);

          if ((uint64_t)v36 >= (uint64_t)v37) {
            break;
          }
          if (!v10) {
            goto LABEL_136;
          }
          id v38 = *(void **)v32;
          int v30 = *(void **)(v32 + 8);
          *(void *)uint64_t v32 = v30;
          *(void *)(v32 + 8) = v38;
          v32 -= 8;
          ++v31;
        }
        while (v9 != v31);
        ++v9;
        v29 += 8;
        uint64_t v12 = v108;
      }
      while (v9 != v106);
      uint64_t v9 = v106;
      uint64_t v8 = v103;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  sub_1C1EAF618();
  __break(1u);
}

void sub_1C1E7AFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v17 = v6;
    while (1)
    {
      uint64_t v9 = *(void **)v6;
      id v10 = v7;
      id v11 = v9;
      id v12 = objc_msgSend(v10, sel_sortOrder);
      id v13 = objc_msgSend(v11, sel_sortOrder);

      if ((uint64_t)v12 >= (uint64_t)v13)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v17 + 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      id v14 = *(void **)v6;
      uint64_t v7 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v14;
      v6 -= 8;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C1E7B0B4(id *__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  id v38 = __src;
  id v37 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4) {
        memmove(a4, a2, 8 * v11);
      }
      id v22 = &a4[v11];
      id v36 = (char *)v22;
      id v38 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        id v23 = (id *)(a3 - 8);
        uint64_t v24 = v4;
        uint64_t v32 = v5;
        do
        {
          id v35 = v4;
          uint64_t v25 = v23 + 1;
          id v26 = *--v24;
          id v27 = *(v22 - 1);
          id v28 = v26;
          id v29 = objc_msgSend(v27, sel_sortOrder);
          id v30 = objc_msgSend(v28, sel_sortOrder);

          if ((uint64_t)v29 >= (uint64_t)v30)
          {
            id v36 = (char *)(v22 - 1);
            if (v25 < v22 || v23 >= v22 || v25 != v22) {
              *id v23 = *(v22 - 1);
            }
            uint64_t v24 = v35;
            --v22;
          }
          else
          {
            if (v25 != v35 || v23 >= v35) {
              *id v23 = *v24;
            }
            id v38 = v24;
          }
          if (v24 <= v32) {
            break;
          }
          --v23;
          uint64_t v4 = v24;
        }
        while (v22 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    id v12 = &a4[v8];
    id v36 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      id v13 = a4;
      do
      {
        id v14 = v5;
        id v15 = *v13;
        id v16 = *v4;
        id v17 = v15;
        id v18 = objc_msgSend(v16, sel_sortOrder);
        id v19 = objc_msgSend(v17, sel_sortOrder);

        if ((uint64_t)v18 >= (uint64_t)v19)
        {
          id v21 = v14;
          if (v14 != v13) {
            *id v14 = *v13;
          }
          id v37 = ++v13;
          id v20 = v4;
        }
        else
        {
          id v20 = v4 + 1;
          id v21 = v14;
          if (v14 < v4 || v14 >= v20 || v14 != v4) {
            *id v14 = *v4;
          }
        }
        uint64_t v5 = v21 + 1;
        if (v13 >= v12) {
          break;
        }
        uint64_t v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      id v38 = v5;
    }
LABEL_43:
    sub_1C1E7B4FC((void **)&v38, (const void **)&v37, &v36);
    return 1;
  }
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

char *sub_1C1E7B3D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1DF3128(0, &qword_1EBB670D8, (uint64_t (*)(uint64_t))sub_1C1E7D980, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  id v13 = v10 + 32;
  id v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C1E7B4FC(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1C1EAF6A8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1C1E7B5B8(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1C1EAF6A8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1C1E7B674(uint64_t a1)
{
  return sub_1C1E7B3D4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1C1E7B688(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C1EAF638();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1C874C700);
}

uint64_t sub_1C1E7B704(uint64_t a1)
{
  return sub_1C1E22264(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C1E7B718(uint64_t a1)
{
  return sub_1C1DE1120(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1C1E7B72C()
{
}

void sub_1C1E7B740(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v19)(uint64_t *__return_ptr, _OWORD *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *__return_ptr, _OWORD *);
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  void *v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  const void *v36;
  BOOL v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _OWORD v45[2];
  long long v46;
  uint64_t v47;
  unsigned char v48[32];

  sub_1C1E7D9E0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t)objc_msgSend(a1, sel_count);
  if (v10 <= 0)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 24);
  }
  else
  {
    sub_1C1DF318C(0, (unint64_t *)&qword_1EBB660F8, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (void *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    unint64_t v14 = (2 * (v13 >> 3)) | 1;
    void v11[2] = v10;
    v11[3] = v14;
  }
  id v15 = a1;
  swift_retain();
  sub_1C1EAF028();

  id v16 = &v9[*(int *)(v7 + 44)];
  *(void *)id v16 = a2;
  *((void *)v16 + 1) = a3;
  if (v10 < 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v17 = v14 >> 1;
  id v18 = v11 + 4;
  if (v10)
  {
    v17 -= v10;
    sub_1C1EAD1A8();
    sub_1C1E7DAA0(&qword_1EBB66128, MEMORY[0x1E4F27660]);
    do
    {
      sub_1C1EAF2B8();
      id v19 = *(void (**)(uint64_t *__return_ptr, _OWORD *))v16;
      sub_1C1E7DAE8((uint64_t)v48, (uint64_t)&v46);
      if (!v47) {
        goto LABEL_36;
      }
      sub_1C1E4BD2C(&v46, v45);
      v19(&v44, v45);
      id v20 = v44;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      *v18++ = v20;
    }
    while (--v10);
  }
  id v21 = sub_1C1EAD1A8();
  id v22 = sub_1C1E7DAA0(&qword_1EBB66128, MEMORY[0x1E4F27660]);
  sub_1C1EAF2B8();
  id v23 = *(void (**)(uint64_t *__return_ptr, _OWORD *))v16;
  sub_1C1E7DAE8((uint64_t)v48, (uint64_t)&v46);
  if (v47)
  {
    uint64_t v42 = MEMORY[0x1E4FBC838] + 8;
    unint64_t v43 = v9;
    while (1)
    {
      sub_1C1E4BD2C(&v46, v45);
      v23(&v44, v45);
      uint64_t v24 = v44;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      if (!v17)
      {
        uint64_t v25 = v11[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_33;
        }
        id v26 = v22;
        id v27 = v21;
        id v28 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v28 <= 1) {
          id v29 = 1;
        }
        else {
          id v29 = v28;
        }
        sub_1C1DF318C(0, (unint64_t *)&qword_1EBB660F8, v42, MEMORY[0x1E4FBBE00]);
        id v30 = (void *)swift_allocObject();
        uint64_t v31 = _swift_stdlib_malloc_size(v30);
        uint64_t v32 = v31 - 32;
        if (v31 < 32) {
          uint64_t v32 = v31 - 25;
        }
        id v33 = v32 >> 3;
        v30[2] = v29;
        void v30[3] = (2 * (v32 >> 3)) | 1;
        id v34 = (unint64_t)(v30 + 4);
        id v35 = v11[3] >> 1;
        if (v11[2])
        {
          id v36 = v11 + 4;
          if (v30 != v11 || v34 >= (unint64_t)v36 + 8 * v35) {
            memmove(v30 + 4, v36, 8 * v35);
          }
          void v11[2] = 0;
        }
        id v18 = (void *)(v34 + 8 * v35);
        unint64_t v17 = (v33 & 0x7FFFFFFFFFFFFFFFLL) - v35;
        swift_release();
        int64_t v11 = v30;
        id v21 = v27;
        id v22 = v26;
        uint64_t v9 = v43;
      }
      id v37 = __OFSUB__(v17--, 1);
      if (v37) {
        break;
      }
      *v18++ = v24;
      sub_1C1EAF2B8();
      id v23 = *(void (**)(uint64_t *__return_ptr, _OWORD *))v16;
      sub_1C1E7DAE8((uint64_t)v48, (uint64_t)&v46);
      if (!v47) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_28:
  sub_1C1E7DB74((uint64_t)v9, (uint64_t (*)(void))sub_1C1E7D9E0);
  id v38 = v11[3];
  if (v38 >= 2)
  {
    unint64_t v39 = v38 >> 1;
    id v37 = __OFSUB__(v39, v17);
    unint64_t v40 = v39 - v17;
    if (v37)
    {
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      return;
    }
    void v11[2] = v40;
  }
}

uint64_t sub_1C1E7BB64(unint64_t a1, uint64_t (*a2)(uint64_t, id))
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1C1EAF638())
  {
    uint64_t v5 = 0;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C874C6F0](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
      uint64_t v7 = v6;
      uint64_t v8 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (a2(v5, v6))
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v5;
      if (v8 == v4) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C1E7BC78()
{
  id v1 = objc_msgSend(v0, sel_managedObjectContext);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    uint64_t v5 = v4;
    sub_1C1DF9F8C(0, (unint64_t *)&qword_1EBB68238);
    sub_1C1DF3128(0, (unint64_t *)&qword_1EBB68288, (uint64_t (*)(uint64_t))sub_1C1E256D4, MEMORY[0x1E4FBBE00]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C1EB0800;
    *(void *)(v6 + 56) = sub_1C1EAE188();
    *(void *)(v6 + 64) = sub_1C1E7DAA0(&qword_1EBB65338, MEMORY[0x1E4F674D0]);
    *(void *)(v6 + 32) = v0;
    *(void *)(v6 + 96) = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 104) = sub_1C1DF2A98();
    *(void *)(v6 + 72) = v3;
    *(void *)(v6 + 80) = v5;
    id v7 = v0;
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)sub_1C1EAF018();
    sub_1C1EAD688();
    uint64_t v9 = (void *)sub_1C1EADE48();
    uint64_t v10 = (void *)sub_1C1EAED28();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setIdentifier_, v10);

    objc_msgSend(v9, sel_setFeed_, v7);
    return (uint64_t)v9;
  }
  else
  {
    uint64_t result = sub_1C1EAF628();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1E7BEB8(void **__src, id *a2, id *a3, void **__dst, uint64_t a5)
{
  uint64_t v5 = __dst;
  uint64_t v6 = a3;
  id v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = (char *)a3 - (char *)a2;
  uint64_t v13 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v13 = (char *)a3 - (char *)a2;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v96 = __src;
  uint64_t v95 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 < -7) {
      goto LABEL_90;
    }
    if (__dst != a2 || &a2[v14] <= __dst) {
      memmove(__dst, a2, 8 * v14);
    }
    uint64_t v49 = &v5[v14];
    unint64_t v94 = v49;
    uint64_t v96 = v7;
    if (v8 >= v7 || v12 < 8)
    {
LABEL_89:
      sub_1C1E7B4FC((void **)&v96, (const void **)&v95, &v94);
      return 1;
    }
    uint64_t v50 = v7;
    uint64_t v89 = v8;
    uint64_t v91 = v5;
    while (1)
    {
      uint64_t v93 = v6;
      unint64_t v87 = v49;
      uint64_t v51 = v49 - 1;
      uint64_t v52 = *--v50;
      id v85 = *(v49 - 1);
      id v53 = v52;
      id v54 = objc_msgSend(v53, sel_identifier);
      uint64_t v55 = sub_1C1EAED38();
      uint64_t v57 = v56;

      if (MEMORY[0x1C874ACE0](v55, v57) == 4) {
        goto LABEL_83;
      }
      uint64_t v58 = *(void *)(a5 + 16);
      if (!v58) {
        goto LABEL_83;
      }
      uint64_t v59 = sub_1C1EADAD8();
      uint64_t v61 = v60;
      if (v59 == sub_1C1EADAD8() && v61 == v62)
      {
        uint64_t v65 = 0;
LABEL_63:
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v64 = sub_1C1EAF7A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v64 & 1) == 0)
        {
          uint64_t v75 = 0;
          uint64_t v83 = v58 - 1;
          while (v83 != v75)
          {
            uint64_t v65 = v75 + 1;
            uint64_t v76 = sub_1C1EADAD8();
            uint64_t v78 = v77;
            if (v76 == sub_1C1EADAD8() && v78 == v79) {
              goto LABEL_63;
            }
            char v81 = sub_1C1EAF7A8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v75 = v65;
            if (v81) {
              goto LABEL_64;
            }
          }
LABEL_83:

          --v6;
          uint64_t v49 = v87;
          if (v93 != v7) {
            goto LABEL_85;
          }
          goto LABEL_84;
        }
        uint64_t v65 = 0;
      }
LABEL_64:
      id v66 = objc_msgSend(v85, sel_identifier);
      uint64_t v67 = sub_1C1EAED38();
      uint64_t v69 = v68;

      uint64_t v70 = MEMORY[0x1C874ACE0](v67, v69);
      if (v70 == 4)
      {

        BOOL v71 = v6--;
        uint64_t v49 = v87;
LABEL_66:
        unint64_t v94 = v51;
        if (v71 < v49 || v6 >= v49 || v71 != v49) {
          *uint64_t v6 = *v51;
        }
        uint64_t v50 = v7;
        uint64_t v49 = v51;
        goto LABEL_87;
      }
      uint64_t v72 = sub_1C1E7A338(v70, a5);
      char v74 = v73;

      BOOL v71 = v6--;
      uint64_t v49 = v87;
      if ((v74 & 1) != 0 || v72 >= v65) {
        goto LABEL_66;
      }
      if (v93 != v7)
      {
LABEL_85:
        *uint64_t v6 = *v50;
        goto LABEL_86;
      }
LABEL_84:
      if (v6 >= v7) {
        goto LABEL_85;
      }
LABEL_86:
      uint64_t v96 = v50;
LABEL_87:
      if (v50 > v89)
      {
        id v7 = v50;
        if (v49 > v91) {
          continue;
        }
      }
      goto LABEL_89;
    }
  }
  if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst) {
      memmove(__dst, __src, 8 * v11);
    }
    uint64_t v86 = &v5[v11];
    unint64_t v94 = v86;
    if (v7 < v6 && v9 >= 8)
    {
      unint64_t v92 = v6;
      while (1)
      {
        unint64_t v88 = v8;
        uint64_t v90 = v5;
        id v15 = *v5;
        id v16 = *v7;
        id v17 = v15;
        id v18 = objc_msgSend(v17, sel_identifier);
        uint64_t v19 = sub_1C1EAED38();
        uint64_t v21 = v20;

        if (MEMORY[0x1C874ACE0](v19, v21) == 4) {
          goto LABEL_39;
        }
        uint64_t v22 = *(void *)(a5 + 16);
        if (!v22) {
          goto LABEL_39;
        }
        uint64_t v23 = sub_1C1EADAD8();
        uint64_t v25 = v24;
        if (v23 == sub_1C1EADAD8() && v25 == v26)
        {
          uint64_t v29 = 0;
LABEL_22:
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v28 = sub_1C1EAF7A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v28 & 1) == 0)
          {
            uint64_t v41 = 0;
            uint64_t v42 = v22 - 1;
            while (v42 != v41)
            {
              uint64_t v29 = v41 + 1;
              uint64_t v43 = sub_1C1EADAD8();
              uint64_t v45 = v44;
              if (v43 == sub_1C1EADAD8() && v45 == v46) {
                goto LABEL_22;
              }
              char v48 = sub_1C1EAF7A8();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v41 = v29;
              if (v48) {
                goto LABEL_23;
              }
            }
LABEL_39:

            id v35 = v92;
LABEL_40:
            id v37 = v7 + 1;
            id v36 = v88;
            uint64_t v5 = v90;
            if (v88 < v7 || v88 >= v37 || v88 != v7) {
              *unint64_t v88 = *v7;
            }
            goto LABEL_44;
          }
          uint64_t v29 = 0;
        }
LABEL_23:
        id v30 = objc_msgSend(v16, sel_identifier);
        uint64_t v31 = sub_1C1EAED38();
        uint64_t v33 = v32;

        uint64_t v34 = MEMORY[0x1C874ACE0](v31, v33);
        if (v34 == 4)
        {

          id v35 = v92;
        }
        else
        {
          uint64_t v38 = sub_1C1E7A338(v34, a5);
          char v40 = v39;

          id v35 = v92;
          if ((v40 & 1) == 0 && v38 < v29) {
            goto LABEL_40;
          }
        }
        id v36 = v88;
        if (v88 != v90) {
          *unint64_t v88 = *v90;
        }
        uint64_t v5 = v90 + 1;
        uint64_t v95 = v90 + 1;
        id v37 = v7;
LABEL_44:
        uint64_t v8 = v36 + 1;
        if (v5 < v86)
        {
          id v7 = v37;
          if (v37 < v35) {
            continue;
          }
        }
        uint64_t v96 = v8;
        goto LABEL_89;
      }
    }
    goto LABEL_89;
  }
LABEL_90:
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C1EAF6A8();
  __break(1u);
  return result;
}

void sub_1C1E7C52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = *a4;
LABEL_6:
    id v7 = *(void **)(v6 + 8 * v5);
    uint64_t v46 = v5;
    while (1)
    {
      uint64_t v52 = v5 - 1;
      uint64_t v8 = *(void **)(v6 + 8 * (v5 - 1));
      id v54 = v7;
      id v53 = v8;
      id v9 = objc_msgSend(v53, sel_identifier);
      uint64_t v10 = sub_1C1EAED38();
      uint64_t v12 = v11;

      if (MEMORY[0x1C874ACE0](v10, v12) == 4) {
        goto LABEL_33;
      }
      unint64_t v47 = *(void *)(a5 + 16);
      if (!v47) {
        goto LABEL_33;
      }
      uint64_t v13 = sub_1C1EADAD8();
      uint64_t v15 = v14;
      if (v13 == sub_1C1EADAD8() && v15 == v16)
      {
        uint64_t v19 = 0;
LABEL_16:
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v18 = sub_1C1EAF7A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {
          uint64_t v29 = 0;
          while (v47 - 1 != v29)
          {
            uint64_t v19 = v29 + 1;
            uint64_t v30 = sub_1C1EADAD8();
            uint64_t v32 = v31;
            if (v30 == sub_1C1EADAD8() && v32 == v33) {
              goto LABEL_16;
            }
            char v35 = sub_1C1EAF7A8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v29 = v19;
            if (v35) {
              goto LABEL_17;
            }
          }
LABEL_33:

          goto LABEL_34;
        }
        uint64_t v19 = 0;
      }
LABEL_17:
      id v20 = objc_msgSend(v54, sel_identifier);
      uint64_t v21 = sub_1C1EAED38();
      uint64_t v23 = v22;

      if (MEMORY[0x1C874ACE0](v21, v23) == 4)
      {
LABEL_4:

LABEL_5:
        uint64_t v5 = v46 + 1;
        if (v46 + 1 == a2) {
          return;
        }
        goto LABEL_6;
      }
      uint64_t v24 = sub_1C1EADAD8();
      uint64_t v26 = v25;
      if (v24 == sub_1C1EADAD8() && v26 == v27)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v28 = sub_1C1EAF7A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0)
        {
          uint64_t v36 = 0;
          uint64_t v37 = v47;
          unint64_t v50 = v47 - 1;
          if (v47 <= 1) {
            uint64_t v37 = 1;
          }
          uint64_t v48 = v37 - 1;
          while (1)
          {
            uint64_t v38 = v36;
            if (v50 == v36) {
              goto LABEL_4;
            }
            if (v48 == v36)
            {
              __break(1u);
              goto LABEL_52;
            }
            uint64_t v39 = sub_1C1EADAD8();
            uint64_t v41 = v40;
            if (v39 == sub_1C1EADAD8() && v41 == v42) {
              break;
            }
            char v44 = sub_1C1EAF7A8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v36 = v38 + 1;
            if (v44)
            {

              goto LABEL_49;
            }
          }

          swift_bridgeObjectRelease_n();
LABEL_49:
          if (v38 + 1 < v19) {
            goto LABEL_34;
          }
          goto LABEL_5;
        }
      }
      if (v19 <= 0) {
        goto LABEL_5;
      }
LABEL_34:
      if (!v6)
      {
LABEL_52:
        __break(1u);
        return;
      }
      id v7 = *(void **)(v6 + 8 * v5);
      *(void *)(v6 + 8 * v5) = *(void *)(v6 + 8 * v52);
      *(void *)(v6 + 8 * v52) = v7;
      --v5;
      if (v52 == a1) {
        goto LABEL_5;
      }
    }
  }
}

uint64_t sub_1C1E7C930(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1C1EAF758();
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_235;
    }
    if (v5)
    {
      swift_bridgeObjectRetain();
      sub_1C1E7C52C(0, v5, 1, a1, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v187 = v6;
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_243;
  }
  uint64_t v199 = a2;
  uint64_t v188 = v5;
  uint64_t v196 = v2;
  unsigned int v186 = a1;
  if (v5 < 2)
  {
    uint64_t v211 = MEMORY[0x1E4FBC860];
    __dst = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 != 1)
    {
      unint64_t v125 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
LABEL_198:
      uint64_t v195 = v13;
      if (v125 >= 2)
      {
        uint64_t v178 = *v186;
        do
        {
          unint64_t v179 = v125 - 2;
          if (v125 < 2) {
            goto LABEL_229;
          }
          if (!v178) {
            goto LABEL_242;
          }
          uint64_t v180 = *(void *)&v195[16 * v179 + 32];
          uint64_t v181 = *(void *)&v195[16 * v125 + 24];
          uint64_t v182 = (id *)(v178 + 8 * *(void *)&v195[16 * v125 + 16]);
          swift_bridgeObjectRetain();
          sub_1C1E7BEB8((void **)(v178 + 8 * v180), v182, (id *)(v178 + 8 * v181), __dst, v199);
          if (v196) {
            goto LABEL_210;
          }
          swift_bridgeObjectRelease();
          if (v181 < v180) {
            goto LABEL_231;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v195 = sub_1C1E7B674((uint64_t)v195);
          }
          if (v179 >= *((void *)v195 + 2)) {
            goto LABEL_232;
          }
          uint64_t v196 = 0;
          uint64_t v183 = &v195[16 * v179 + 32];
          *(void *)uint64_t v183 = v180;
          *((void *)v183 + 1) = v181;
          unint64_t v184 = *((void *)v195 + 2);
          if (v125 > v184) {
            goto LABEL_233;
          }
          memmove(&v195[16 * v125 + 16], &v195[16 * v125 + 32], 16 * (v184 - v125));
          *((void *)v195 + 2) = v184 - 1;
          unint64_t v125 = v184 - 1;
        }
        while (v184 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C1EAEEB8();
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v7 >> 1;
    sub_1C1EAD688();
    uint64_t v9 = sub_1C1EAEF08();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v211 = v9;
  }
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v185 = *a1 - 8;
  uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = v5;
  uint64_t v198 = v12;
  while (1)
  {
    long long v193 = v13;
    uint64_t v15 = v11 + 1;
    uint64_t v197 = v11;
    if (v11 + 1 >= v14) {
      goto LABEL_84;
    }
    uint64_t v16 = *(void **)(v12 + 8 * v11);
    id v17 = *(id *)(v12 + 8 * v15);
    id v18 = v16;
    id v19 = objc_msgSend(v18, sel_identifier);
    uint64_t v20 = sub_1C1EAED38();
    uint64_t v22 = v21;

    uint64_t v23 = MEMORY[0x1C874ACE0](v20, v22);
    if v23 == 4 || (uint64_t v24 = sub_1C1E7A338(v23, v199), (v25))
    {

      uint64_t v11 = v197;
      uint64_t v32 = v197 + 2;
      if (v197 + 2 < v14)
      {
        BOOL v208 = 1;
LABEL_21:
        uint64_t v33 = v32;
        while (1)
        {
          uint64_t v32 = v33;
          char v35 = *(void **)(v198 + 8 * v15);
          id v34 = *(id *)(v198 + 8 * v33);
          id v36 = v35;
          id v37 = objc_msgSend(v36, sel_identifier);
          uint64_t v38 = sub_1C1EAED38();
          uint64_t v40 = v39;

          if (MEMORY[0x1C874ACE0](v38, v40) == 4 || !*(void *)(v199 + 16)) {
            goto LABEL_23;
          }
          unint64_t v200 = *(void *)(v199 + 16);
          uint64_t v41 = sub_1C1EADAD8();
          uint64_t v43 = v42;
          BOOL v45 = v41 == sub_1C1EADAD8() && v43 == v44;
          uint64_t v206 = v34;
          if (v45)
          {
            uint64_t v47 = 0;
LABEL_34:
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v46 = sub_1C1EAF7A8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v46 & 1) == 0)
            {
              uint64_t v56 = 0;
              uint64_t v11 = v197;
              while (v200 - 1 != v56)
              {
                uint64_t v47 = v56 + 1;
                uint64_t v57 = sub_1C1EADAD8();
                uint64_t v59 = v58;
                if (v57 == sub_1C1EADAD8() && v59 == v60) {
                  goto LABEL_34;
                }
                char v62 = sub_1C1EAF7A8();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v56 = v47;
                uint64_t v11 = v197;
                if (v62) {
                  goto LABEL_36;
                }
              }
              uint64_t v14 = v188;
              id v34 = v206;
LABEL_23:

              if (!v208) {
                goto LABEL_83;
              }
              goto LABEL_24;
            }
            uint64_t v47 = 0;
          }
          uint64_t v11 = v197;
LABEL_36:
          id v48 = objc_msgSend(v206, sel_identifier);
          uint64_t v49 = sub_1C1EAED38();
          uint64_t v51 = v50;

          if (MEMORY[0x1C874ACE0](v49, v51) != 4)
          {
            uint64_t v52 = sub_1C1EADAD8();
            uint64_t v54 = v53;
            if (v52 == sub_1C1EADAD8() && v54 == v55)
            {

              swift_bridgeObjectRelease_n();
LABEL_52:
              uint64_t v64 = 0;
LABEL_53:
              uint64_t v11 = v197;
LABEL_54:
              BOOL v65 = v64 >= v47;
              uint64_t v14 = v188;
              if (((v208 ^ v65) & 1) == 0) {
                goto LABEL_70;
              }
              goto LABEL_24;
            }
            char v63 = sub_1C1EAF7A8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v63)
            {

              goto LABEL_52;
            }
            uint64_t v64 = 0;
            uint64_t v66 = v200;
            unint64_t v204 = v200 - 1;
            if (v200 <= 1) {
              uint64_t v66 = 1;
            }
            uint64_t v201 = v66 - 1;
            uint64_t v11 = v197;
            while (v204 != v64)
            {
              if (v201 == v64) {
                goto LABEL_228;
              }
              uint64_t v67 = sub_1C1EADAD8();
              uint64_t v69 = v68;
              if (v67 == sub_1C1EADAD8() && v69 == v70)
              {

                swift_bridgeObjectRelease_n();
                ++v64;
                goto LABEL_53;
              }
              char v72 = sub_1C1EAF7A8();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              ++v64;
              uint64_t v11 = v197;
              if (v72)
              {

                goto LABEL_54;
              }
            }
          }

          uint64_t v14 = v188;
          if (v208) {
            goto LABEL_71;
          }
LABEL_24:
          uint64_t v33 = v32 + 1;
          uint64_t v15 = v32;
          if (v32 + 1 >= v14)
          {
            ++v32;
            goto LABEL_70;
          }
        }
      }
LABEL_72:
      if (v11 < v32)
      {
        char v73 = (uint64_t *)(v185 + 8 * v32);
        uint64_t v74 = v32;
        uint64_t v75 = v11;
        uint64_t v76 = (uint64_t *)(v198 + 8 * v11);
        do
        {
          if (v75 != --v74)
          {
            if (!v198) {
              goto LABEL_241;
            }
            uint64_t v77 = *v76;
            *uint64_t v76 = *v73;
            *char v73 = v77;
          }
          ++v75;
          --v73;
          ++v76;
        }
        while (v75 < v74);
      }
LABEL_83:
      uint64_t v15 = v32;
      goto LABEL_84;
    }
    uint64_t v26 = v24;
    id v27 = objc_msgSend(v17, sel_identifier);
    uint64_t v28 = sub_1C1EAED38();
    uint64_t v30 = v29;

    uint64_t v31 = MEMORY[0x1C874ACE0](v28, v30);
    if (v31 == 4)
    {

LABEL_81:
      uint64_t v11 = v197;
      uint64_t v32 = v197 + 2;
      if (v197 + 2 < v14)
      {
        BOOL v208 = 0;
        goto LABEL_21;
      }
      goto LABEL_83;
    }
    uint64_t v78 = sub_1C1E7A338(v31, v199);
    char v80 = v79;

    if (v80) {
      goto LABEL_81;
    }
    BOOL v208 = v78 < v26;
    uint64_t v11 = v197;
    uint64_t v32 = v197 + 2;
    if (v197 + 2 < v14) {
      goto LABEL_21;
    }
LABEL_70:
    uint64_t v15 = v32;
    if (v208)
    {
LABEL_71:
      if (v32 < v11) {
        goto LABEL_236;
      }
      goto LABEL_72;
    }
LABEL_84:
    if (v15 >= v14)
    {
      uint64_t v12 = v198;
LABEL_143:
      if (v15 < v11) {
        goto LABEL_230;
      }
      goto LABEL_144;
    }
    if (__OFSUB__(v15, v11)) {
      goto LABEL_234;
    }
    uint64_t v12 = v198;
    uint64_t v81 = v199;
    if (v15 - v11 >= v187) {
      goto LABEL_143;
    }
    uint64_t v82 = v11 + v187;
    if (__OFADD__(v11, v187)) {
      goto LABEL_237;
    }
    if (v82 >= v14) {
      uint64_t v82 = v14;
    }
    if (v82 < v11) {
      break;
    }
    uint64_t v189 = v82;
    if (v15 == v82) {
      goto LABEL_143;
    }
    while (2)
    {
      uint64_t v83 = *(void **)(v12 + 8 * v15);
      uint64_t v191 = v15;
      uint64_t v84 = v15;
      do
      {
        uint64_t v85 = v84 - 1;
        uint64_t v86 = *(void **)(v12 + 8 * (v84 - 1));
        id v209 = v83;
        id v207 = v86;
        id v87 = objc_msgSend(v207, sel_identifier);
        uint64_t v88 = sub_1C1EAED38();
        uint64_t v90 = v89;

        if (MEMORY[0x1C874ACE0](v88, v90) == 4 || !*(void *)(v81 + 16)) {
          goto LABEL_135;
        }
        unint64_t v202 = *(void *)(v81 + 16);
        uint64_t v91 = sub_1C1EADAD8();
        uint64_t v93 = v92;
        if (v91 == sub_1C1EADAD8() && v93 == v94)
        {
          uint64_t v97 = 0;
LABEL_105:
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v96 = sub_1C1EAF7A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v96 & 1) == 0)
          {
            uint64_t v107 = 0;
            while (v202 - 1 != v107)
            {
              uint64_t v97 = v107 + 1;
              uint64_t v108 = sub_1C1EADAD8();
              uint64_t v110 = v109;
              if (v108 == sub_1C1EADAD8() && v110 == v111) {
                goto LABEL_105;
              }
              char v113 = sub_1C1EAF7A8();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v107 = v97;
              if (v113) {
                goto LABEL_106;
              }
            }
            uint64_t v12 = v198;
            uint64_t v81 = v199;
            uint64_t v11 = v197;
LABEL_135:

            goto LABEL_136;
          }
          uint64_t v97 = 0;
        }
LABEL_106:
        id v98 = objc_msgSend(v209, sel_identifier);
        uint64_t v99 = sub_1C1EAED38();
        uint64_t v101 = v100;

        if (MEMORY[0x1C874ACE0](v99, v101) == 4)
        {
LABEL_93:
          uint64_t v81 = v199;

          uint64_t v11 = v197;
          uint64_t v12 = v198;
          break;
        }
        uint64_t v102 = sub_1C1EADAD8();
        uint64_t v104 = v103;
        uint64_t v81 = v199;
        if (v102 == sub_1C1EADAD8() && v104 == v105)
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_112;
        }
        char v106 = sub_1C1EAF7A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v106)
        {

LABEL_112:
          BOOL v156 = v97 <= 0;
          uint64_t v11 = v197;
          uint64_t v12 = v198;
          if (v156) {
            break;
          }
          goto LABEL_136;
        }
        uint64_t v114 = 0;
        uint64_t v115 = v202;
        unint64_t v205 = v202 - 1;
        if (v202 <= 1) {
          uint64_t v115 = 1;
        }
        uint64_t v203 = v115 - 1;
        while (1)
        {
          uint64_t v116 = v114;
          if (v205 == v114) {
            goto LABEL_93;
          }
          if (v203 == v114)
          {
            __break(1u);
LABEL_213:
            __break(1u);
LABEL_214:
            __break(1u);
LABEL_215:
            __break(1u);
LABEL_216:
            __break(1u);
LABEL_217:
            __break(1u);
LABEL_218:
            __break(1u);
LABEL_219:
            __break(1u);
LABEL_220:
            __break(1u);
LABEL_221:
            __break(1u);
LABEL_222:
            __break(1u);
LABEL_223:
            __break(1u);
LABEL_224:
            __break(1u);
LABEL_225:
            __break(1u);
LABEL_226:
            __break(1u);
LABEL_227:
            __break(1u);
LABEL_228:
            __break(1u);
LABEL_229:
            __break(1u);
LABEL_230:
            __break(1u);
LABEL_231:
            __break(1u);
LABEL_232:
            __break(1u);
LABEL_233:
            __break(1u);
LABEL_234:
            __break(1u);
LABEL_235:
            __break(1u);
LABEL_236:
            __break(1u);
LABEL_237:
            __break(1u);
            goto LABEL_238;
          }
          uint64_t v117 = sub_1C1EADAD8();
          uint64_t v119 = v118;
          if (v117 == sub_1C1EADAD8() && v119 == v120) {
            break;
          }
          char v122 = sub_1C1EAF7A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v114 = v116 + 1;
          if (v122)
          {

            goto LABEL_140;
          }
        }

        swift_bridgeObjectRelease_n();
LABEL_140:
        BOOL v156 = v116 + 1 < v97;
        uint64_t v12 = v198;
        uint64_t v81 = v199;
        uint64_t v11 = v197;
        if (!v156) {
          break;
        }
LABEL_136:
        if (!v12) {
          goto LABEL_239;
        }
        uint64_t v83 = *(void **)(v12 + 8 * v84);
        *(void *)(v12 + 8 * v84) = *(void *)(v12 + 8 * v85);
        *(void *)(v12 + 8 * v85) = v83;
        --v84;
      }
      while (v85 != v11);
      uint64_t v15 = v191 + 1;
      if (v191 + 1 != v189) {
        continue;
      }
      break;
    }
    uint64_t v15 = v189;
    if (v189 < v11) {
      goto LABEL_230;
    }
LABEL_144:
    uint64_t v192 = v15;
    uint64_t v13 = v193;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1C1E7B3D4(0, *((void *)v193 + 2) + 1, 1, v193);
    }
    unint64_t v124 = *((void *)v13 + 2);
    unint64_t v123 = *((void *)v13 + 3);
    unint64_t v125 = v124 + 1;
    if (v124 >= v123 >> 1) {
      uint64_t v13 = sub_1C1E7B3D4((char *)(v123 > 1), v124 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v125;
    uint64_t v126 = v13 + 32;
    os_log_type_t v127 = &v13[16 * v124 + 32];
    *(void *)os_log_type_t v127 = v11;
    *((void *)v127 + 1) = v192;
    if (v124)
    {
      uint64_t v194 = v13;
      uint64_t v210 = v13 + 32;
      while (1)
      {
        unint64_t v128 = v125 - 1;
        if (v125 >= 4)
        {
          id v133 = &v126[16 * v125];
          uint64_t v134 = *((void *)v133 - 8);
          uint64_t v135 = *((void *)v133 - 7);
          BOOL v139 = __OFSUB__(v135, v134);
          uint64_t v136 = v135 - v134;
          if (v139) {
            goto LABEL_217;
          }
          uint64_t v138 = *((void *)v133 - 6);
          uint64_t v137 = *((void *)v133 - 5);
          BOOL v139 = __OFSUB__(v137, v138);
          uint64_t v131 = v137 - v138;
          char v132 = v139;
          if (v139) {
            goto LABEL_218;
          }
          unint64_t v140 = v125 - 2;
          uint64_t v141 = &v126[16 * v125 - 32];
          uint64_t v143 = *(void *)v141;
          uint64_t v142 = *((void *)v141 + 1);
          BOOL v139 = __OFSUB__(v142, v143);
          uint64_t v144 = v142 - v143;
          if (v139) {
            goto LABEL_220;
          }
          BOOL v139 = __OFADD__(v131, v144);
          uint64_t v145 = v131 + v144;
          if (v139) {
            goto LABEL_223;
          }
          if (v145 >= v136)
          {
            id v163 = &v126[16 * v128];
            uint64_t v165 = *(void *)v163;
            uint64_t v164 = *((void *)v163 + 1);
            BOOL v139 = __OFSUB__(v164, v165);
            uint64_t v166 = v164 - v165;
            if (v139) {
              goto LABEL_227;
            }
            BOOL v156 = v131 < v166;
            goto LABEL_181;
          }
        }
        else
        {
          if (v125 != 3)
          {
            uint64_t v157 = *((void *)v13 + 4);
            uint64_t v158 = *((void *)v13 + 5);
            BOOL v139 = __OFSUB__(v158, v157);
            uint64_t v150 = v158 - v157;
            char v151 = v139;
            goto LABEL_175;
          }
          uint64_t v130 = *((void *)v13 + 4);
          uint64_t v129 = *((void *)v13 + 5);
          BOOL v139 = __OFSUB__(v129, v130);
          uint64_t v131 = v129 - v130;
          char v132 = v139;
        }
        if (v132) {
          goto LABEL_219;
        }
        unint64_t v140 = v125 - 2;
        uint64_t v146 = &v126[16 * v125 - 32];
        uint64_t v148 = *(void *)v146;
        uint64_t v147 = *((void *)v146 + 1);
        BOOL v149 = __OFSUB__(v147, v148);
        uint64_t v150 = v147 - v148;
        char v151 = v149;
        if (v149) {
          goto LABEL_222;
        }
        uint64_t v152 = &v126[16 * v128];
        uint64_t v154 = *(void *)v152;
        uint64_t v153 = *((void *)v152 + 1);
        BOOL v139 = __OFSUB__(v153, v154);
        uint64_t v155 = v153 - v154;
        if (v139) {
          goto LABEL_225;
        }
        if (__OFADD__(v150, v155)) {
          goto LABEL_226;
        }
        if (v150 + v155 >= v131)
        {
          BOOL v156 = v131 < v155;
LABEL_181:
          if (v156) {
            unint64_t v128 = v140;
          }
          goto LABEL_183;
        }
LABEL_175:
        if (v151) {
          goto LABEL_221;
        }
        uint64_t v159 = &v126[16 * v128];
        uint64_t v161 = *(void *)v159;
        uint64_t v160 = *((void *)v159 + 1);
        BOOL v139 = __OFSUB__(v160, v161);
        uint64_t v162 = v160 - v161;
        if (v139) {
          goto LABEL_224;
        }
        if (v162 < v150) {
          goto LABEL_192;
        }
LABEL_183:
        unint64_t v167 = v128 - 1;
        if (v128 - 1 >= v125) {
          goto LABEL_213;
        }
        if (!v12) {
          goto LABEL_240;
        }
        uint64_t v168 = v12;
        uint64_t v169 = &v126[16 * v167];
        uint64_t v170 = *(void *)v169;
        unint64_t v171 = v128;
        os_log_t v172 = &v126[16 * v128];
        uint64_t v173 = *((void *)v172 + 1);
        uint64_t v174 = (void **)(v168 + 8 * *(void *)v169);
        uint64_t v175 = (id *)(v168 + 8 * *(void *)v172);
        uint64_t v176 = (id *)(v168 + 8 * v173);
        swift_bridgeObjectRetain();
        sub_1C1E7BEB8(v174, v175, v176, __dst, v199);
        if (v196)
        {
LABEL_210:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_1C1EAEEB8();
          swift_bridgeObjectRelease_n();
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        if (v173 < v170) {
          goto LABEL_214;
        }
        uint64_t v13 = v194;
        if (v171 > *((void *)v194 + 2)) {
          goto LABEL_215;
        }
        uint64_t v196 = 0;
        *(void *)uint64_t v169 = v170;
        uint64_t v126 = v210;
        *(void *)&v210[16 * v167 + 8] = v173;
        unint64_t v177 = *((void *)v194 + 2);
        if (v171 >= v177) {
          goto LABEL_216;
        }
        unint64_t v125 = v177 - 1;
        memmove(v172, v172 + 16, 16 * (v177 - 1 - v171));
        *((void *)v194 + 2) = v177 - 1;
        uint64_t v12 = v198;
        if (v177 <= 2) {
          goto LABEL_192;
        }
      }
    }
    unint64_t v125 = 1;
LABEL_192:
    uint64_t v14 = v188;
    uint64_t v11 = v192;
    if (v192 >= v188) {
      goto LABEL_198;
    }
  }
LABEL_238:
  __break(1u);
LABEL_239:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_240:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_241:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_242:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_243:
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_1C1EAF618();
  __break(1u);
  return result;
}

uint64_t sub_1C1E7D8D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C1E7B72C();
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  swift_bridgeObjectRetain();
  sub_1C1E7C930(v8, a2);
  swift_bridgeObjectRelease();
  sub_1C1EAF528();
  return swift_bridgeObjectRelease_n();
}

void sub_1C1E7D980()
{
  if (!qword_1EBB66120)
  {
    unint64_t v0 = sub_1C1EAF008();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB66120);
    }
  }
}

void sub_1C1E7D9E0()
{
  if (!qword_1EBB654B0)
  {
    sub_1C1DF9F8C(255, &qword_1EBB66FE0);
    sub_1C1EAD688();
    sub_1C1DFAEA0(&qword_1EBB66FD8, &qword_1EBB66FE0);
    unint64_t v0 = sub_1C1EAF5A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB654B0);
    }
  }
}