void sub_1D49DAB1C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_1D49DACB4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id HMDLocalizedStringForKey(void *a1)
{
  id v1 = a1;
  v2 = (void *)MEMORY[0x1D9452090]();
  v3 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
  if (!isAppleTV()) {
    goto LABEL_4;
  }
  v4 = [v1 stringByAppendingString:@"_APPLETV"];
  v5 = [v3 localizedStringForKey:v4 value:@"HMDDefaultLocalizedStringValue" table:@"HomeKitDaemon"];
  if ([v5 isEqualToString:@"HMDDefaultLocalizedStringValue"])
  {

LABEL_4:
    v5 = [v3 localizedStringForKey:v1 value:&stru_1F2C9F1A8 table:@"HomeKitDaemon"];
    goto LABEL_6;
  }

LABEL_6:

  return v5;
}

void setPropertyIMP(void *a1, const char *a2, void *a3)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  v5 = a1;
  id v6 = a3;
  v7 = (void *)MEMORY[0x1D9452090]();
  v8 = keyFromSelector(a2);
  if (![v5 propertyIsReadOnly:v8])
  {
    v14 = [(id)objc_opt_class() properties];
    v15 = [v14 objectForKey:v8];
    v16 = (objc_class *)[v15 classObj];

    if (v6 && (objc_opt_isKindOfClass() & 1) == 0)
    {
      v21 = (void *)MEMORY[0x1E4F1CA00];
      uint64_t v22 = *MEMORY[0x1E4F1C3B8];
      v23 = NSString;
      v24 = (objc_class *)objc_opt_class();
      v25 = NSStringFromClass(v24);
      v26 = NSStringFromClass(v16);
      v27 = [v23 stringWithFormat:@"Property for parameter %@ was supplied as %@, but was expected to be %@.", v8, v25, v26];
      id v28 = [v21 exceptionWithName:v22 reason:v27 userInfo:0];

      objc_exception_throw(v28);
    }
    if (v5[1])
    {
      if (v6)
      {
LABEL_9:
        v17 = (void *)v5[1];
        v18 = objc_msgSend(v8, "hmf_stringWithSmallestEncoding");
        [v17 setValue:v6 forKey:v18];

        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v19 = [MEMORY[0x1E4F1CA60] dictionary];
      v20 = (void *)v5[1];
      v5[1] = v19;

      if (v6) {
        goto LABEL_9;
      }
    }
    id v6 = [MEMORY[0x1E4F1CA98] null];
    goto LABEL_9;
  }
  v9 = (void *)MEMORY[0x1D9452090]();
  v10 = v5;
  v11 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    v12 = HMFGetLogIdentifier();
    v13 = +[HMDBackingStoreSingleton dataVersion];
    *(_DWORD *)buf = 138544130;
    v30 = v12;
    __int16 v31 = 2112;
    v32 = v8;
    __int16 v33 = 2112;
    v34 = v10;
    __int16 v35 = 2112;
    v36 = v13;
    _os_log_impl(&dword_1D49D5000, v11, OS_LOG_TYPE_ERROR, "%{public}@Attempting to write property %@ from %@, unwritable in homed data version %@.", buf, 0x2Au);
  }
LABEL_10:
}

uint64_t isEqualDeepCompare(void *a1, void *a2)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v5 = [v3 count];
      if (v5 == [v4 count])
      {
        long long v31 = 0u;
        long long v32 = 0u;
        long long v29 = 0u;
        long long v30 = 0u;
        id v6 = v3;
        uint64_t v7 = [v6 countByEnumeratingWithState:&v29 objects:v34 count:16];
        if (v7)
        {
          uint64_t v8 = v7;
          uint64_t v9 = *(void *)v30;
          while (2)
          {
            for (uint64_t i = 0; i != v8; ++i)
            {
              if (*(void *)v30 != v9) {
                objc_enumerationMutation(v6);
              }
              uint64_t v11 = *(void *)(*((void *)&v29 + 1) + 8 * i);
              v12 = [v6 objectForKey:v11];
              v13 = [v4 objectForKey:v11];
              if (!v13 || !isEqualDeepCompare(v12, v13))
              {

                uint64_t v14 = 0;
                goto LABEL_34;
              }
            }
            uint64_t v8 = [v6 countByEnumeratingWithState:&v29 objects:v34 count:16];
            uint64_t v14 = 1;
            if (v8) {
              continue;
            }
            goto LABEL_34;
          }
        }
LABEL_25:
        uint64_t v14 = 1;
LABEL_34:

        goto LABEL_35;
      }
LABEL_31:
      uint64_t v14 = 0;
      goto LABEL_35;
    }
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v15 = [v3 count];
      if (v15 == [v4 count])
      {
        long long v27 = 0u;
        long long v28 = 0u;
        long long v25 = 0u;
        long long v26 = 0u;
        id v6 = v3;
        uint64_t v16 = [v6 countByEnumeratingWithState:&v25 objects:v33 count:16];
        if (v16)
        {
          uint64_t v17 = v16;
          uint64_t v18 = 0;
          uint64_t v19 = *(void *)v26;
LABEL_19:
          uint64_t v20 = 0;
          while (1)
          {
            if (*(void *)v26 != v19) {
              objc_enumerationMutation(v6);
            }
            uint64_t v21 = *(void *)(*((void *)&v25 + 1) + 8 * v20);
            uint64_t v22 = objc_msgSend(v4, "objectAtIndex:", v18 + v20, (void)v25);
            uint64_t v14 = isEqualDeepCompare(v21, v22);

            if (!v14) {
              goto LABEL_34;
            }
            if (v17 == ++v20)
            {
              v18 += v20;
              uint64_t v17 = [v6 countByEnumeratingWithState:&v25 objects:v33 count:16];
              if (v17) {
                goto LABEL_19;
              }
              goto LABEL_25;
            }
          }
        }
        goto LABEL_25;
      }
      goto LABEL_31;
    }
  }
  if (objc_opt_respondsToSelector())
  {
    if (v3 == v4)
    {
      uint64_t v14 = 1;
      goto LABEL_35;
    }
    uint64_t v23 = [v3 isBackingStorageEqual:v4];
  }
  else
  {
    uint64_t v23 = HMFEqualObjects();
  }
  uint64_t v14 = v23;
LABEL_35:

  return v14;
}

id keyFromSelector(const char *a1)
{
  id v1 = NSStringFromSelector(a1);
  if ([v1 hasPrefix:@"set"] && objc_msgSend(v1, "length") != 3)
  {
    v2 = objc_msgSend(v1, "substringWithRange:", 3, 1);
    id v3 = [v2 lowercaseString];
    int v4 = [v2 isEqualToString:v3];

    if (v4)
    {
      id v5 = v1;

      goto LABEL_7;
    }
    id v6 = [v2 lowercaseString];
    uint64_t v7 = objc_msgSend(v1, "substringWithRange:", 4, objc_msgSend(v1, "length") - 5);
    uint64_t v8 = [v6 stringByAppendingString:v7];

    id v1 = (void *)v8;
  }
  id v5 = v1;
LABEL_7:

  return v5;
}

void sub_1D49DC328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

BOOL isWatch()
{
  v0 = [MEMORY[0x1E4F65548] productInfo];
  BOOL v1 = [v0 productClass] == 5;

  return v1;
}

BOOL isAppleTV()
{
  v0 = [MEMORY[0x1E4F65548] productInfo];
  BOOL v1 = [v0 productClass] == 4;

  return v1;
}

void sub_1D49DC570(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D49E04B0(_Unwind_Exception *a1)
{
}

id accessoryToEncodeForXPCTransportForAccessory(void *a1)
{
  id v1 = a1;
  v2 = [v1 hostAccessory];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;

  if (v4) {
    id v5 = v4;
  }
  else {
    id v5 = v1;
  }
  id v6 = v5;

  return v6;
}

void sub_1D49E3894(_Unwind_Exception *a1)
{
}

void sub_1D49E3CB4(_Unwind_Exception *a1)
{
}

void sub_1D49E4570(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D49E6208(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D49E736C(_Unwind_Exception *a1)
{
}

id propertyIMP(void *a1, const char *a2)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = (void *)MEMORY[0x1D9452090]();
  id v5 = NSStringFromSelector(a2);
  if ([v3 propertyIsAvailable:v5])
  {
    id v6 = [(id)objc_opt_class() properties];
    uint64_t v7 = [v6 objectForKey:v5];

    if (v7)
    {
      uint64_t v8 = [v3[1] objectForKey:v5];
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        if (v8)
        {

          goto LABEL_14;
        }
        uint64_t v18 = [v7 defaultValue];
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x1D9452090]();
      uint64_t v15 = v3;
      uint64_t v16 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        uint64_t v17 = HMFGetLogIdentifier();
        int v20 = 138543874;
        uint64_t v21 = v17;
        __int16 v22 = 2112;
        uint64_t v23 = v5;
        __int16 v24 = 2112;
        long long v25 = v15;
        _os_log_impl(&dword_1D49D5000, v16, OS_LOG_TYPE_ERROR, "%{public}@Attempting to read property %@ from %@, does not appear defined.", (uint8_t *)&v20, 0x20u);
      }
      uint64_t v8 = 0;
    }
    uint64_t v18 = 0;
LABEL_13:

    uint64_t v8 = (void *)v18;
    goto LABEL_14;
  }
  uint64_t v9 = (void *)MEMORY[0x1D9452090]();
  v10 = v3;
  uint64_t v11 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    v12 = HMFGetLogIdentifier();
    v13 = +[HMDBackingStoreSingleton dataVersion];
    int v20 = 138544130;
    uint64_t v21 = v12;
    __int16 v22 = 2112;
    uint64_t v23 = v5;
    __int16 v24 = 2112;
    long long v25 = v10;
    __int16 v26 = 2112;
    long long v27 = v13;
    _os_log_impl(&dword_1D49D5000, v11, OS_LOG_TYPE_ERROR, "%{public}@Attempting to read property %@ from %@, unavailable in homed data version %@ (returning nil).", (uint8_t *)&v20, 0x2Au);
  }

  uint64_t v8 = 0;
LABEL_14:

  return v8;
}

void sub_1D49E8D68(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D49E8E8C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D49EC844(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D49ECC38(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D49EF618(_Unwind_Exception *a1)
{
}

id anonymizeUnknownVendorString(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (anonymizeUnknownVendorString_onceToken != -1) {
      dispatch_once(&anonymizeUnknownVendorString_onceToken, &__block_literal_global_63549);
    }
    if (([(id)anonymizeUnknownVendorString_allowedNames containsObject:v1] & 1) != 0
      || (unint64_t)[v1 length] <= 2)
    {
      id v3 = v1;
    }
    else
    {
      v2 = [v1 substringToIndex:2];
      id v3 = [@"unknown: " stringByAppendingString:v2];
    }
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

void sub_1D49F332C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)&STACK[0x280]);
  _Block_object_dispose(&STACK[0x288], 8);
  _Block_object_dispose((const void *)(v14 - 192), 8);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

uint64_t shouldSkipLocalAccessoryNotificationRegistration(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  if (objc_msgSend(a3, "hmf_isEmpty"))
  {
    uint64_t v7 = 1;
  }
  else
  {
    if (![v5 isResidentFirstAccessoryCommunicationEnabled]) {
      goto LABEL_9;
    }
    uint64_t v8 = [v5 localCapabilitiesDataSource];
    char v9 = [v8 isResidentCapable];

    if ((v9 & 1) != 0
      || ([v5 enabledResidents],
          v10 = objc_claimAutoreleasedReturnValue(),
          uint64_t v11 = [v10 count],
          v10,
          !v11)
      || [v6 hasBTLELink] && (objc_msgSend(v6, "reachableTransports") & 2) != 0)
    {
LABEL_9:
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = [v6 isSecureSessionEstablished] ^ 1;
    }
  }

  return v7;
}

void sub_1D49F3C58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D49F44FC(_Unwind_Exception *a1)
{
}

void sub_1D49F4E6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 224));
  _Unwind_Resume(a1);
}

void sub_1D49F6E98(_Unwind_Exception *a1)
{
}

void sub_1D49F727C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D49F7A8C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id EpochIntervalFromDate(void *a1)
{
  if (a1)
  {
    uint64_t v2 = NSNumber;
    [a1 timeIntervalSince1970];
    a1 = objc_msgSend(v2, "numberWithDouble:");
    uint64_t v1 = vars8;
  }
  return a1;
}

void sub_1D49F872C(_Unwind_Exception *a1)
{
}

void sub_1D49F9A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void logAndPostNotification(void *a1, void *a2, void *a3)
{
  id v5 = (void *)MEMORY[0x1E4F28EB8];
  id v6 = a3;
  id v7 = a2;
  id v8 = a1;
  id v9 = [v5 defaultCenter];
  logAndPostNotificationWithNotificationCenter(v9, v8, v7, v6);
}

void logAndPostNotificationWithNotificationCenter(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = [v9 description];
  v12 = (void *)MEMORY[0x1D9452090]();
  v13 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    uint64_t v14 = HMFGetLogIdentifier();
    int v18 = 138543874;
    uint64_t v19 = v14;
    __int16 v20 = 2112;
    id v21 = v8;
    __int16 v22 = 2112;
    uint64_t v23 = v11;
    _os_log_impl(&dword_1D49D5000, v13, OS_LOG_TYPE_INFO, "%{public}@Sending notification %@ with object %@", (uint8_t *)&v18, 0x20u);
  }
  uint64_t v15 = (void *)MEMORY[0x1D9452090]();
  uint64_t v16 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v17 = HMFGetLogIdentifier();
    int v18 = 138544130;
    uint64_t v19 = v17;
    __int16 v20 = 2112;
    id v21 = v8;
    __int16 v22 = 2112;
    uint64_t v23 = v11;
    __int16 v24 = 2112;
    id v25 = v10;
    _os_log_impl(&dword_1D49D5000, v16, OS_LOG_TYPE_DEBUG, "%{public}@Sending notification %@ with object %@ and userInfo %@", (uint8_t *)&v18, 0x2Au);
  }
  [v7 postNotificationName:v8 object:v9 userInfo:v10];
}

void sub_1D49FC470(_Unwind_Exception *a1)
{
}

void sub_1D49FD0A8(_Unwind_Exception *a1)
{
}

void sub_1D4A00774(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A00F24(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A00FC0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A02104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4A03664(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A0400C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4A04F38(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A05340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_1D4A05728(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t HMDUserPrivilegeCompare(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 3;
  if (a1 == 1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = a1;
  }
  if (a2 != 1) {
    uint64_t v2 = a2;
  }
  if (v3 == v2) {
    return 0;
  }
  if (v3 == 3 || v2 == 3)
  {
    BOOL v6 = v3 == 3;
    goto LABEL_20;
  }
  if (v3 == 4 || v2 == 4)
  {
    BOOL v6 = v3 == 4;
LABEL_20:
    if (v6) {
      return 1;
    }
    else {
      return -1;
    }
  }
  if (v2) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = -1;
  }
  if (v3) {
    return v5;
  }
  else {
    return 1;
  }
}

void sub_1D4A05BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4A07908(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 240));
  _Unwind_Resume(a1);
}

void sub_1D4A08658(_Unwind_Exception *a1)
{
}

void sub_1D4A086D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A09A74(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A09BC4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A0A89C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id encodeRootObjectForIncomingXPCMessage(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = (void *)MEMORY[0x1D9452090]();
  BOOL v6 = (void *)[objc_alloc(MEMORY[0x1E4F654E0]) initWithName:@"com.apple.homed.hmdutil.encode-incoming-xpc."];
  id v7 = [[HMDXPCKeyedArchiver alloc] initForWritingWithMessage:v4];
  [v7 encodeObject:v3 forKey:*MEMORY[0x1E4F284E8]];
  [v7 finishEncoding];
  id v8 = [v7 encodedData];

  id v9 = (void *)[v8 copy];

  return v9;
}

void sub_1D4A0D104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4A0DEE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4A0EC74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4A0F820(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A0F930(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A0FB08(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A0FCC0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A10508(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL shouldSkipRemoteAccessoryNotificationRegistration(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  BOOL v5 = [v3 isCurrentDeviceAvailableResident]
    && [v4 hasIPLink]
    && ([v4 hasBTLELink] & 1) == 0
    && !isiPadDevice()
    && (!isAppleTV() || [v3 isCurrentDeviceConfirmedPrimaryResident]);

  return v5;
}

void sub_1D4A12D3C(_Unwind_Exception *a1)
{
}

void sub_1D4A12EC0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A152E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4A15804(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A16218(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A17E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location,id a24)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a24);
  _Unwind_Resume(a1);
}

void sub_1D4A18A40(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A18CCC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t validateEntitlementForConnection(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  BOOL v5 = v4;
  if (v4
    && (([v4 valueForEntitlement:v3],
         BOOL v6 = objc_claimAutoreleasedReturnValue(),
         objc_opt_class(),
         (objc_opt_isKindOfClass() & 1) == 0)
      ? (id v7 = 0)
      : (id v7 = v6),
        id v8 = v7,
        v6,
        v8))
  {
    uint64_t v9 = [v8 BOOLValue];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

uint64_t __HMDProcessInfoBoolForEntitlement(void *a1, uint64_t a2)
{
  if (!a1 || !a2) {
    return 0;
  }
  uint64_t v2 = [a1 valueForEntitlement:a2];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;

  uint64_t v5 = [v4 BOOLValue];
  return v5;
}

void sub_1D4A199C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id *__HMDApplicationRegistryApplicationForBundleURL(id *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = [a1[2] allObjects];
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    v6[2] = ____HMDApplicationRegistryApplicationForBundleURL_block_invoke;
    v6[3] = &unk_1E6A0FB90;
    id v7 = v3;
    objc_msgSend(v4, "hmf_objectPassingTest:", v6);
    a1 = (id *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

void sub_1D4A19B7C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A19D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4A1C760(_Unwind_Exception *a1)
{
}

id encodedSnapshotFile(void *a1)
{
  v9[4] = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    v8[0] = *MEMORY[0x1E4F2E028];
    id v1 = a1;
    uint64_t v2 = [v1 slotIdentifier];
    v9[0] = v2;
    v8[1] = *MEMORY[0x1E4F2EE88];
    id v3 = [v1 filePath];
    v9[1] = v3;
    v8[2] = *MEMORY[0x1E4F2EE80];
    id v4 = [v1 snapshotTimestamp];
    v9[2] = v4;
    v8[3] = *MEMORY[0x1E4F2E160];
    uint64_t v5 = [v1 aspectRatio];

    v9[3] = v5;
    BOOL v6 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v9 forKeys:v8 count:4];
  }
  else
  {
    BOOL v6 = 0;
  }
  return v6;
}

void sub_1D4A1FD0C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id spiClientIdentifierForUUID(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[HMDProcessInfo privateClientIdentifierSalt];
  id v3 = objc_msgSend(MEMORY[0x1E4F29128], "hm_deriveUUIDFromBaseUUID:identifierSalt:", v1, v2);

  return v3;
}

void sub_1D4A21FD4(_Unwind_Exception *a1)
{
}

id hds_log()
{
  if (hds_log__hmf_once_t0 != -1) {
    dispatch_once(&hds_log__hmf_once_t0, &__block_literal_global_35789);
  }
  v0 = (void *)hds_log__hmf_once_v1;
  return v0;
}

__CFString *HMDXPCCounterTypeAsString(uint64_t a1)
{
  switch(a1)
  {
    case 2:
      id v1 = @"XPCSentNotifications";
      goto LABEL_7;
    case 1:
      id v1 = @"XPCErroredRequests";
      goto LABEL_7;
    case 0:
      id v1 = @"XPCAcceptedRequests";
LABEL_7:
      uint64_t v2 = v1;
      goto LABEL_9;
  }
  objc_msgSend(NSString, "stringWithFormat:", @"Unknown counter type:%lu", a1);
  id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
LABEL_9:
  return v1;
}

void sub_1D4A23C44(_Unwind_Exception *exception_object)
{
}

void sub_1D4A24850(_Unwind_Exception *a1)
{
}

void sub_1D4A24EE8(_Unwind_Exception *a1)
{
}

void sub_1D4A24F9C(_Unwind_Exception *a1)
{
}

void sub_1D4A26EFC(_Unwind_Exception *a1)
{
}

BOOL isDeviceLocked()
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (+[HMDDeviceCapabilities supportsDeviceLock])
  {
    int v0 = MKBGetDeviceLockState();
    id v1 = (void *)MEMORY[0x1D9452090]();
    uint64_t v2 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      id v3 = HMFGetLogIdentifier();
      int v9 = 138543618;
      id v10 = v3;
      __int16 v11 = 2048;
      uint64_t v12 = v0;
      _os_log_impl(&dword_1D49D5000, v2, OS_LOG_TYPE_INFO, "%{public}@Device lock state (locked): %ld", (uint8_t *)&v9, 0x16u);
    }
    return v0 != 3 && v0 != 0;
  }
  else
  {
    BOOL v6 = (void *)MEMORY[0x1D9452090]();
    id v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id v8 = HMFGetLogIdentifier();
      int v9 = 138543362;
      id v10 = v8;
      _os_log_impl(&dword_1D49D5000, v7, OS_LOG_TYPE_INFO, "%{public}@Device does not support device lock (locked).", (uint8_t *)&v9, 0xCu);
    }
    return 1;
  }
}

void sub_1D4A29844(_Unwind_Exception *a1)
{
}

void sub_1D4A2B74C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_1D4A2B9F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A2D7C8(_Unwind_Exception *a1)
{
}

void sub_1D4A2E1C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4A2EE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

__CFString *HMDStreamingTierTypeAsString(unint64_t a1)
{
  if (a1 >= 5)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDStreamingTierType %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_1E6A0EC48[a1];
  }
  return v1;
}

__CFString *HMDVideoResolutionTypeAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 0x1D)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDVideoResolutionType %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_1E6A0ECA8[a1 - 1];
  }
  return v1;
}

id HMDCreateHomeKitDaemonCacheDirectory()
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  int v0 = HMCacheSubdirectoryWithRelativePath();
  unint64_t v1 = 0x1E4F28000uLL;
  uint64_t v2 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v43 = 0;
  char v3 = [v2 createDirectoryAtPath:v0 withIntermediateDirectories:1 attributes:0 error:&v43];
  id v4 = v43;

  if (v3)
  {
    id v5 = v0;
  }
  else
  {
    BOOL v6 = (void *)MEMORY[0x1D9452090]();
    id v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v8 = HMFGetLogIdentifier();
      uid_t v9 = getuid();
      *(_DWORD *)buf = 138544130;
      v45 = v8;
      __int16 v46 = 1024;
      *(_DWORD *)v47 = v9;
      *(_WORD *)&v47[4] = 2114;
      *(void *)&v47[6] = v0;
      *(_WORD *)&v47[14] = 2114;
      *(void *)&v47[16] = v4;
      _os_log_impl(&dword_1D49D5000, v7, OS_LOG_TYPE_ERROR, "%{public}@Failed to create HomeKit daemon cache directory for user %d at %{public}@: %{public}@", buf, 0x26u);
    }
    id v29 = v4;

    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v30 = v0;
    id obj = [v0 pathComponents];
    uint64_t v36 = [obj countByEnumeratingWithState:&v39 objects:v50 count:16];
    if (v36)
    {
      uint64_t v10 = *(void *)v40;
      uint64_t v35 = *MEMORY[0x1E4F28330];
      uint64_t v34 = *MEMORY[0x1E4F28318];
      uint64_t v33 = *MEMORY[0x1E4F282D8];
      __int16 v11 = &stru_1F2C9F1A8;
      uint64_t v31 = *(void *)v40;
      do
      {
        uint64_t v12 = 0;
        uint64_t v13 = v11;
        do
        {
          if (*(void *)v40 != v10) {
            objc_enumerationMutation(obj);
          }
          -[__CFString stringByAppendingPathComponent:](v13, "stringByAppendingPathComponent:", *(void *)(*((void *)&v39 + 1) + 8 * v12), v29);
          __int16 v11 = (__CFString *)objc_claimAutoreleasedReturnValue();

          uint64_t v14 = [*(id *)(v1 + 3256) defaultManager];
          id v38 = 0;
          uint64_t v15 = [v14 attributesOfItemAtPath:v11 error:&v38];
          id v16 = v38;

          if (v15)
          {
            id v37 = v16;
            uint64_t v17 = [v15 objectForKeyedSubscript:v35];
            int v18 = [v15 objectForKeyedSubscript:v34];
            uint64_t v19 = [v15 objectForKeyedSubscript:v33];
            __int16 v20 = (void *)MEMORY[0x1D9452090]();
            id v21 = HMFGetOSLogHandle();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              HMFGetLogIdentifier();
              v23 = unint64_t v22 = v1;
              int v24 = [v17 shortValue];
              *(_DWORD *)buf = 138544386;
              v45 = v23;
              __int16 v46 = 2112;
              *(void *)v47 = v11;
              *(_WORD *)&v47[8] = 1024;
              *(_DWORD *)&v47[10] = v24;
              *(_WORD *)&v47[14] = 2112;
              *(void *)&v47[16] = v18;
              __int16 v48 = 2112;
              v49 = v19;
              _os_log_impl(&dword_1D49D5000, v21, OS_LOG_TYPE_ERROR, "%{public}@Path: %@, permissions: %o, owner uid: %@, owner gid: %@", buf, 0x30u);

              unint64_t v1 = v22;
              uint64_t v10 = v31;
            }

            id v16 = v37;
          }
          else
          {
            id v25 = (void *)MEMORY[0x1D9452090]();
            uint64_t v26 = HMFGetOSLogHandle();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            {
              long long v27 = HMFGetLogIdentifier();
              *(_DWORD *)buf = 138543874;
              v45 = v27;
              __int16 v46 = 2112;
              *(void *)v47 = v11;
              *(_WORD *)&v47[8] = 2112;
              *(void *)&v47[10] = v16;
              _os_log_impl(&dword_1D49D5000, v26, OS_LOG_TYPE_ERROR, "%{public}@Failed to get attributes for path %@: %@", buf, 0x20u);
            }
          }

          ++v12;
          uint64_t v13 = v11;
        }
        while (v36 != v12);
        uint64_t v36 = [obj countByEnumeratingWithState:&v39 objects:v50 count:16];
      }
      while (v36);
    }
    else
    {
      __int16 v11 = &stru_1F2C9F1A8;
    }

    id v5 = 0;
    id v4 = v29;
    int v0 = v30;
  }

  return v5;
}

void sub_1D4A361D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4A366D0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A374E0(_Unwind_Exception *a1)
{
}

void sub_1D4A38318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1D4A386C0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A38A54(_Unwind_Exception *a1)
{
}

void sub_1D4A3935C(_Unwind_Exception *a1)
{
}

BOOL isTVOSDevice()
{
  int v0 = [MEMORY[0x1E4F65548] productInfo];
  BOOL v1 = [v0 productPlatform] == 4;

  return v1;
}

void sub_1D4A3ADA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL isiOSDevice()
{
  int v0 = [MEMORY[0x1E4F65548] productInfo];
  BOOL v1 = [v0 productPlatform] == 2;

  return v1;
}

id reportContextFromMessage(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 messagePayload];
  char v3 = objc_msgSend(v2, "hmf_stringForKey:", *MEMORY[0x1E4F2D678]);

  id v4 = [v1 messagePayload];
  id v5 = objc_msgSend(v4, "hmf_dataForKey:", *MEMORY[0x1E4F2D688]);

  if (v3) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    __int16 v11 = 0;
  }
  else
  {
    id v7 = [MEMORY[0x1E4F2E9A0] reportContextWithDomain:v3 requestInfo:v5];
    id v8 = [v1 messagePayload];
    uid_t v9 = objc_msgSend(v8, "hmf_numberForKey:", *MEMORY[0x1E4F2D680]);
    [v9 floatValue];
    [v7 setReportTimeout:v10];

    __int16 v11 = (void *)[v7 copy];
  }

  return v11;
}

BOOL isMostRecentSnapshotValid(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 slotIdentifier];
  if (v2)
  {
    char v3 = [v1 filePath];
    if (v3)
    {
      id v4 = [v1 snapshotTimestamp];
      if (v4)
      {
        id v5 = [v1 aspectRatio];
        BOOL v6 = v5 != 0;
      }
      else
      {
        BOOL v6 = 0;
      }
    }
    else
    {
      BOOL v6 = 0;
    }
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

BOOL isiPadDevice()
{
  int v0 = [MEMORY[0x1E4F65548] productInfo];
  BOOL v1 = [v0 productClass] == 3;

  return v1;
}

void sub_1D4A3CF7C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A3D2CC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A3D514(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A3E1BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t isPersistedConnectionRequiredForAccessory(void *a1)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = [v1 home];
  if (![v2 isCurrentDevicePrimaryResident])
  {
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v34 = 0x3032000000;
    uint64_t v35 = __Block_byref_object_copy__51043;
    uint64_t v36 = __Block_byref_object_dispose__51044;
    id v37 = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __isPersistedConnectionRequiredForAccessory_block_invoke;
    aBlock[3] = &unk_1E6A0B7F0;
    p_long long buf = &buf;
    id v7 = v1;
    id v23 = v7;
    id v8 = (void (**)(void))_Block_copy(aBlock);
    if ([v2 isCurrentDeviceAvailableResident] && !isiPadDevice() && !isAppleTV()
      || ([v2 areAllResidentsUnreachable] & 1) == 0
      && ([v2 isResidentFirstAccessoryCommunicationEnabled] & 1) != 0)
    {
      if ([v2 isCurrentDeviceAvailableResident])
      {
        *(void *)id v29 = 0;
        *(void *)&v29[8] = v29;
        *(void *)&v29[16] = 0x2020000000;
        LOBYTE(v30) = 0;
        uid_t v9 = v8[2](v8);
        v21[0] = MEMORY[0x1E4F143A8];
        v21[1] = 3221225472;
        v21[2] = __isPersistedConnectionRequiredForAccessory_block_invoke_772;
        v21[3] = &unk_1E6A0B818;
        v21[4] = v29;
        objc_msgSend(v9, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v21);

        if (*(unsigned char *)(*(void *)&v29[8] + 24))
        {
          float v10 = (void *)MEMORY[0x1D9452090]();
          HMFGetOSLogHandle();
          __int16 v11 = (id)objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
          {
            HMFGetLogIdentifier();
            id v12 = (id)objc_claimAutoreleasedReturnValue();
            uint64_t v13 = [v7 shortDescription];
            *(_DWORD *)id v25 = 138543618;
            id v26 = v12;
            __int16 v27 = 2112;
            uint64_t v28 = v13;
            _os_log_impl(&dword_1D49D5000, v11, OS_LOG_TYPE_INFO, "%{public}@Require persisted connection for Siri Remote accessory %@ for all residents", v25, 0x16u);
          }
          _Block_object_dispose(v29, 8);
LABEL_18:
          uint64_t v6 = 1;
LABEL_21:

          _Block_object_dispose(&buf, 8);
          goto LABEL_22;
        }
        _Block_object_dispose(v29, 8);
      }
      uint64_t v6 = 0;
      goto LABEL_21;
    }
    uint64_t v14 = (void *)MEMORY[0x1D9452090]();
    HMFGetOSLogHandle();
    uint64_t v15 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      id v16 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v17 = [v7 shortDescription];
      [v2 isResidentFirstAccessoryCommunicationEnabled];
      HMFBooleanToString();
      id v18 = (id)objc_claimAutoreleasedReturnValue();
      [v2 areAllResidentsUnreachable];
      uint64_t v19 = HMFBooleanToString();
      *(_DWORD *)id v29 = 138544130;
      *(void *)&v29[4] = v16;
      *(_WORD *)&v29[12] = 2112;
      *(void *)&v29[14] = v17;
      *(_WORD *)&v29[22] = 2112;
      id v30 = v18;
      __int16 v31 = 2112;
      long long v32 = v19;
      _os_log_impl(&dword_1D49D5000, v15, OS_LOG_TYPE_INFO, "%{public}@Require persisted connection for accessory %@: isResidentFirstAccessoryCommunicationEnabled = %@, areAllResidentsUnreachable = %@", v29, 0x2Au);
    }
    goto LABEL_18;
  }
  char v3 = (void *)MEMORY[0x1D9452090]();
  id v4 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    id v5 = HMFGetLogIdentifier();
    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v5;
    _os_log_impl(&dword_1D49D5000, v4, OS_LOG_TYPE_DEBUG, "%{public}@Current device is primary resident, always require persisted connection with accessories", (uint8_t *)&buf, 0xCu);
  }
  uint64_t v6 = 1;
LABEL_22:

  return v6;
}

void sub_1D4A3F6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

uint64_t shouldDisconnectOnIdleForAccessory(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 home];
  char v3 = isPersistedConnectionRequiredForAccessory(v1);

  if (v3) {
    uint64_t ShouldDisconnectOnIdleForHome = 0;
  }
  else {
    uint64_t ShouldDisconnectOnIdleForHome = defaultAccessoryShouldDisconnectOnIdleForHome(v2);
  }

  return ShouldDisconnectOnIdleForHome;
}

double getDiscoveryBackoffPeriod()
{
  int v0 = [MEMORY[0x1E4F65530] sharedPreferences];
  id v1 = [v0 preferenceForKey:@"DiscoveryBackoffInSeconds"];
  uint64_t v2 = [v1 numberValue];
  [v2 doubleValue];
  double v4 = v3;

  return v4;
}

void sub_1D4A3FFB0(_Unwind_Exception *a1)
{
}

void sub_1D4A4002C(_Unwind_Exception *a1)
{
}

void sub_1D4A400A8(_Unwind_Exception *a1)
{
}

void sub_1D4A40D08(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A411A8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void sub_1D4A41688(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A427D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,id a21)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a21);
  _Unwind_Resume(a1);
}

void sub_1D4A42FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4A46B90(_Unwind_Exception *a1)
{
}

void sub_1D4A470E4(_Unwind_Exception *a1)
{
}

void sub_1D4A472B0(_Unwind_Exception *a1)
{
}

void sub_1D4A49254(_Unwind_Exception *a1)
{
}

void sub_1D4A49A58(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4A49F18(_Unwind_Exception *a1)
{
}

uint64_t HomeManagerXPCClientConnectionsManager.messageTargetUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_messageTargetUUID;
  uint64_t v4 = sub_1D5459878();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

void variable initialization expression of HomeManagerXPCClientConnectionsManager.lockedState(uint64_t a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC870];
  *(_DWORD *)a1 = 0;
  uint64_t v2 = MEMORY[0x1E4FBC868];
  *(void *)(a1 + _Block_object_dispose(&STACK[0x368], 8) = v1;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = 0;
}

Swift::Void __swiftcall HomeManagerXPCClientConnectionsManager.configure()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_messageDispatcher);
  uint64_t v3 = *MEMORY[0x1E4F2C978];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD99A00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D54C3030;
  *(void *)(v4 + 32) = objc_msgSend(self, sel_policyWithEntitlements_, 5);
  *(void *)(v4 + 40) = objc_msgSend(self, sel_policyWithEntitlementRequirement_, 0);
  sub_1D5459C88();
  sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD999A0);
  id v5 = (void *)sub_1D5459C48();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_registerForMessage_receiver_policies_selector_, v3, v1, v5, sel_handleActiveAssertionUpdateStateMessage_);

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_notificationCenter);
  id v7 = *(void **)(v1 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_xpcTransport);
  objc_msgSend(v6, sel_addObserver_selector_name_object_, v1, sel_handleXPCConnectionDidStartNotification_, @"HMDXPCClientConnectionDidStartNotification", v7);
  objc_msgSend(v6, sel_addObserver_selector_name_object_, v1, sel_handleXPCConnectionDidInvalidateNotification_, @"HMDXPCClientConnectionDidInvalidateNotification", v7);
  id v8 = HMDProcessMonitorProcessStateDidChangeNotification;
  id v9 = objc_msgSend(v7, sel_processMonitor);
  objc_msgSend(v6, sel_addObserver_selector_name_object_, v1, sel_handleProcessInfoStateChangedNotification_, v8, v9);
}

BOOL HomeManagerXPCClientConnectionsManager.hasActiveConnections.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState;
  os_unfair_lock_lock((os_unfair_lock_t)(v0
                                       + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState));
  uint64_t v2 = *(void *)(v1 + 8);
  if ((v2 & 0xC000000000000001) != 0) {
    uint64_t v3 = sub_1D5459EE8();
  }
  else {
    uint64_t v3 = *(void *)(v2 + 16);
  }
  BOOL v4 = v3 != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)v1);
  return v4;
}

void sub_1D4A4BDA8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1D5459AF8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5459B58();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (uint64_t *)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_queue);
  void *v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBF0], v9);
  id v14 = v13;
  LOBYTE(v13) = sub_1D5459B78();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_33:
    sub_1D5459FE8();
    __break(1u);
    return;
  }
  uint64_t v39 = v6;
  id v15 = objc_msgSend(a1, sel_sendPolicyParameters);
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    unint64_t v18 = (unint64_t)objc_msgSend(a1, sel_inactiveUpdatingLevel);
    id v19 = objc_msgSend(a1, sel_processInfo);
    unsigned int v20 = objc_msgSend(v19, sel_shouldMonitor);

    if (v20)
    {
      id v21 = objc_msgSend(a1, sel_processInfo);
      unsigned __int8 v22 = objc_msgSend(v21, sel_isForegrounded);

      if (v22)
      {
        if (!v18) {
          goto LABEL_18;
        }
      }
      else
      {
        unint64_t v18 = 2;
      }
    }
    else if (v18 <= 1)
    {
      unint64_t v18 = 1;
    }
    uint64_t v29 = v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState;
    os_unfair_lock_lock((os_unfair_lock_t)(v2
                                         + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState));
    uint64_t v30 = *(void *)(v29 + 16);
    if (*(void *)(v30 + 16))
    {
      id v31 = a1;
      unint64_t v32 = sub_1D4A65A98((uint64_t)v31);
      if (v33)
      {
        uint64_t v34 = *(void *)(*(void *)(v30 + 56) + 8 * v32);
        swift_bridgeObjectRetain();

        uint64_t v35 = *(void *)(v34 + 16);
        swift_bridgeObjectRelease();
        os_unfair_lock_unlock((os_unfair_lock_t)v29);
        if (v35)
        {
LABEL_18:
          uint64_t v36 = 1;
          goto LABEL_25;
        }
LABEL_21:
        if (v18 == 2)
        {
          objc_msgSend(a1, sel_deactivate);
          if (objc_msgSend(v17, sel_isActive))
          {
            uint64_t v36 = 0;
            goto LABEL_26;
          }
LABEL_31:

          return;
        }
        uint64_t v36 = 0;
LABEL_25:
        objc_msgSend(a1, sel_activate);
        if (v36 != objc_msgSend(v17, sel_isActive))
        {
LABEL_26:
          id v37 = objc_msgSend(a1, sel_sendPolicyParameters);
          objc_msgSend(v37, sel_mutableCopy);

          sub_1D5459E88();
          swift_unknownObjectRelease();
          sub_1D4A51CAC(0, &qword_1EBD99B30);
          if (swift_dynamicCast())
          {
            id v38 = v40;
            objc_msgSend(v40, sel_setActive_, v36);
            objc_msgSend(a1, sel_updateSendPolicyParameters_, v38);
            if (v36) {
              sub_1D4A4C360(a1);
            }
            else {
              sub_1D4A4C978(a1);
            }

            goto LABEL_31;
          }
          goto LABEL_33;
        }
        goto LABEL_31;
      }
    }
    os_unfair_lock_unlock((os_unfair_lock_t)v29);
    goto LABEL_21;
  }

  sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
  id v23 = a1;
  int v24 = sub_1D5459AD8();
  os_log_type_t v25 = sub_1D5459D88();
  if (os_log_type_enabled(v24, v25))
  {
    id v26 = (uint8_t *)swift_slowAlloc();
    __int16 v27 = (void *)swift_slowAlloc();
    *(_DWORD *)id v26 = 138412290;
    id v28 = [v23 sendPolicyParameters];
    id v41 = v28;
    sub_1D5459E48();
    void *v27 = v28;

    _os_log_impl(&dword_1D49D5000, v24, v25, "Connection's send policy parameters were not of type HMDHomeManagerXPCMessageSendPolicyParameters: %@", v26, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
    swift_arrayDestroy();
    MEMORY[0x1D9452B60](v27, -1, -1);
    MEMORY[0x1D9452B60](v26, -1, -1);
  }
  else
  {

    int v24 = v23;
  }

  (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v5);
}

void sub_1D4A4C360(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_1D5459AF8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  __int16 v46 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = sub_1D5459B58();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (void **)((char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v14 = *(void **)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_queue);
  void *v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBF0], v10);
  id v15 = v14;
  char v16 = sub_1D5459B78();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v16)
  {
    __int16 v53 = 0;
    uint64_t v17 = v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState;
    os_unfair_lock_lock((os_unfair_lock_t)(v2
                                         + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState));
    sub_1D4A4CFD4((void *)(v17 + 8), a1, (unsigned char *)&v53 + 1, (BOOL *)&v53, v2);
    os_unfair_lock_unlock((os_unfair_lock_t)v17);
    if (HIBYTE(v53) == 1)
    {
      uint64_t v45 = v5;
      sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
      unint64_t v18 = a1;
      id v19 = sub_1D5459AD8();
      os_log_type_t v20 = sub_1D5459DA8();
      if (os_log_type_enabled(v19, v20))
      {
        id v21 = (uint8_t *)swift_slowAlloc();
        long long v42 = (void *)swift_slowAlloc();
        id v43 = v21;
        uint64_t v44 = v4;
        *(_DWORD *)id v21 = 138412290;
        *(void *)&long long v50 = v18;
        unsigned __int8 v22 = v18;
        uint64_t v4 = v44;
        sub_1D5459E48();
        id v23 = v42;
        *long long v42 = v18;

        int v24 = v43;
        _os_log_impl(&dword_1D49D5000, v19, v20, "Adding active connection: %@", v43, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
        swift_arrayDestroy();
        MEMORY[0x1D9452B60](v23, -1, -1);
        MEMORY[0x1D9452B60](v24, -1, -1);
      }
      else
      {

        id v19 = v18;
      }

      uint64_t v5 = v45;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v4);
      [v18 initiateRefresh];
      id v25 = objc_msgSend(objc_allocWithZone((Class)HMDActiveXPCConnectionLogEvent), sel_initWithXPCConnection_added_, v18, 1);
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_logEventSubmitter), sel_submitLogEvent_, v25);
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_notificationCenter), sel_postNotificationName_object_, @"HMDHomeManagerConnectionActiveStateUpdatedNotification", v18);
    }
    if (v53 == 1)
    {
      id v26 = v46;
      sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
      __int16 v27 = sub_1D5459AD8();
      os_log_type_t v28 = sub_1D5459DA8();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_1D49D5000, v27, v28, "Posting notification because first home manager connection has become active", v29, 2u);
        MEMORY[0x1D9452B60](v29, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v26, v4);
      uint64_t v30 = MEMORY[0x1E4FBC868];
      uint64_t v52 = MEMORY[0x1E4FBC868];
      uint64_t v31 = sub_1D5459BE8();
      uint64_t v33 = v32;
      id v34 = objc_msgSend(a1, sel_clientIdentifier);
      if (v34)
      {
        uint64_t v35 = v34;
        uint64_t v36 = sub_1D5459BE8();
        uint64_t v38 = v37;

        uint64_t v51 = MEMORY[0x1E4FBB1A0];
        *(void *)&long long v50 = v36;
        *((void *)&v50 + 1) = v38;
        sub_1D4A51C94(&v50, v49);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v48 = v30;
        uint64_t v52 = 0x8000000000000000;
        sub_1D4A6CCDC(v49, v31, v33, isUniquelyReferenced_nonNull_native);
        uint64_t v52 = v48;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1D4A5842C(v31, v33, &v50);
        swift_bridgeObjectRelease();
        sub_1D4A51D64((uint64_t)&v50, (uint64_t *)&unk_1EBD99A10);
      }
      id v40 = *(void **)(v2
                     + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_notificationCenter);
      sub_1D4A4D0D4(v52);
      swift_bridgeObjectRelease();
      id v41 = (void *)sub_1D5459B88();
      swift_bridgeObjectRelease();
      objc_msgSend(v40, sel_postNotificationName_object_userInfo_, @"HMDHomeManagerFirstProcessDidBecomeActiveNotification", v2, v41);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1D4A4C978(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_1D5459AF8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  long long v50 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v48 - v8;
  uint64_t v10 = sub_1D5459B58();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char **)((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v14 = *(void **)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_queue);
  void *v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBF0], v10);
  id v15 = v14;
  char v16 = sub_1D5459B78();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v16)
  {
    uint64_t v17 = v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState;
    os_unfair_lock_lock((os_unfair_lock_t)(v2
                                         + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState));
    uint64_t v18 = v17 + 8;
    id v19 = (void *)sub_1D4A59600(a1);

    if (v19)
    {
      if ((*(void *)v18 & 0xC000000000000001) != 0) {
        uint64_t v51 = sub_1D5459EE8();
      }
      else {
        uint64_t v51 = *(void *)(*(void *)v18 + 16);
      }
      uint64_t v52 = v5;
      if (*(void *)(v17 + 24))
      {
        objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_accessoryBrowser), sel_endActiveAssertion_, *(void *)(v17 + 24));
        swift_unknownObjectRelease();
        *(void *)(v17 + 24) = 0;
      }
      os_unfair_lock_unlock((os_unfair_lock_t)v17);
      sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
      os_log_type_t v20 = a1;
      id v21 = sub_1D5459AD8();
      os_log_type_t v22 = sub_1D5459DA8();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v49 = v4;
        int v24 = (uint8_t *)v23;
        id v25 = (void *)swift_slowAlloc();
        uint64_t v48 = v9;
        *(_DWORD *)int v24 = 138412290;
        *(void *)&long long v56 = v20;
        id v26 = v20;
        uint64_t v9 = v48;
        sub_1D5459E48();
        void *v25 = v20;

        _os_log_impl(&dword_1D49D5000, v21, v22, "Removing inactive connection: %@", v24, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
        swift_arrayDestroy();
        MEMORY[0x1D9452B60](v25, -1, -1);
        __int16 v27 = v24;
        uint64_t v4 = v49;
        MEMORY[0x1D9452B60](v27, -1, -1);
      }
      else
      {

        id v21 = v20;
      }

      os_log_type_t v28 = *(void (**)(char *, uint64_t))(v52 + 8);
      v28(v9, v4);
      id v29 = objc_msgSend(objc_allocWithZone((Class)HMDActiveXPCConnectionLogEvent), sel_initWithXPCConnection_added_, v20, 0);
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_logEventSubmitter), sel_submitLogEvent_, v29);
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_notificationCenter), sel_postNotificationName_object_, @"HMDHomeManagerConnectionActiveStateUpdatedNotification", v20);

      if (!v51)
      {
        uint64_t v30 = v20;
        uint64_t v31 = v2;
        uint64_t v32 = v50;
        sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
        uint64_t v33 = sub_1D5459AD8();
        os_log_type_t v34 = sub_1D5459DA8();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v35 = 0;
          _os_log_impl(&dword_1D49D5000, v33, v34, "Posting notification because last home manager connection has become inactive", v35, 2u);
          MEMORY[0x1D9452B60](v35, -1, -1);
        }

        v28(v32, v4);
        uint64_t v36 = MEMORY[0x1E4FBC868];
        uint64_t v58 = MEMORY[0x1E4FBC868];
        uint64_t v37 = sub_1D5459BE8();
        uint64_t v39 = v38;
        id v40 = [v30 clientIdentifier];
        if (v40)
        {
          id v41 = v40;
          uint64_t v42 = sub_1D5459BE8();
          uint64_t v44 = v43;

          uint64_t v57 = MEMORY[0x1E4FBB1A0];
          *(void *)&long long v56 = v42;
          *((void *)&v56 + 1) = v44;
          sub_1D4A51C94(&v56, v55);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v54 = v36;
          uint64_t v58 = 0x8000000000000000;
          sub_1D4A6CCDC(v55, v37, v39, isUniquelyReferenced_nonNull_native);
          uint64_t v58 = v54;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1D4A5842C(v37, v39, &v56);
          swift_bridgeObjectRelease();
          sub_1D4A51D64((uint64_t)&v56, (uint64_t *)&unk_1EBD99A10);
        }
        __int16 v46 = *(void **)(v31
                       + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_notificationCenter);
        sub_1D4A4D0D4(v58);
        swift_bridgeObjectRelease();
        v47 = (void *)sub_1D5459B88();
        swift_bridgeObjectRelease();
        objc_msgSend(v46, sel_postNotificationName_object_userInfo_, @"HMDHomeManagerLastProcessDidBecomeInactiveNotification", v31, v47);
      }
    }
    else
    {
      os_unfair_lock_unlock((os_unfair_lock_t)v17);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1D4A4CFD4(void *a1, void *a2, unsigned char *a3, BOOL *a4, uint64_t a5)
{
  char v9 = sub_1D4A77364(&v14, a2);

  if (v9)
  {
    *a3 = 1;
    if ((*a1 & 0xC000000000000001) != 0) {
      uint64_t v10 = sub_1D5459EE8();
    }
    else {
      uint64_t v10 = *(void *)(*a1 + 16);
    }
    *a4 = v10 == 1;
    if (!a1[2])
    {
      uint64_t v11 = *(void **)(a5
                     + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_accessoryBrowser);
      uint64_t v12 = (void *)sub_1D5459BC8();
      id v13 = objc_msgSend(v11, sel_beginActiveAssertionWithReason_, v12);

      a1[2] = v13;
    }
  }
}

uint64_t sub_1D4A4D0D4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99BB8);
    uint64_t v2 = sub_1D545A038();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1D4A51C38(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1D4A51C94(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1D4A51C94(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1D4A51C94(v36, v37);
    sub_1D4A51C94(v37, &v33);
    uint64_t result = sub_1D5459F28();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1D4A51C94(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1D4A51CA4();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1D4A4D49C(char *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1D5459AF8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v119 = v5;
  uint64_t v120 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  unint64_t v12 = (char *)&v100 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  v116 = (char *)&v100 - v14;
  MEMORY[0x1F4188790](v13);
  v114 = (char *)&v100 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99608);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v109 = (uint64_t)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v100 - v19;
  uint64_t v21 = sub_1D5459878();
  uint64_t v117 = *(void *)(v21 - 8);
  v118 = (void *)v21;
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  v112 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  v110 = (char *)&v100 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  v111 = (char *)&v100 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  long long v30 = (char *)&v100 - v29;
  MEMORY[0x1F4188790](v28);
  v115 = (char *)&v100 - v31;
  uint64_t v32 = sub_1D5459B58();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v35 = (uint64_t *)((char *)&v100 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v113 = v2;
  uint64_t v36 = *(void **)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_queue);
  *uint64_t v35 = v36;
  (*(void (**)(void *, void, uint64_t))(v33 + 104))(v35, *MEMORY[0x1E4FBCBF0], v32);
  id v37 = v36;
  LOBYTE(v36) = sub_1D5459B78();
  (*(void (**)(void *, uint64_t))(v33 + 8))(v35, v32);
  if ((v36 & 1) == 0)
  {
    __break(1u);
    return;
  }
  id v38 = objc_msgSend(a1, sel_proxyConnection);
  long long v39 = a1;
  if (!v38)
  {
    sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
    v70 = a1;
    v71 = sub_1D5459AD8();
    os_log_type_t v72 = sub_1D5459D88();
    if (os_log_type_enabled(v71, v72))
    {
      v73 = (uint8_t *)swift_slowAlloc();
      v74 = (void *)swift_slowAlloc();
      *(_DWORD *)v73 = 138412290;
      v121[0] = (uint64_t)v70;
      v75 = v70;
      sub_1D5459E48();
      void *v74 = v70;

      _os_log_impl(&dword_1D49D5000, v71, v72, "Could not find connection for active assertion message: %@", v73, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
      swift_arrayDestroy();
      MEMORY[0x1D9452B60](v74, -1, -1);
      MEMORY[0x1D9452B60](v73, -1, -1);
    }
    else
    {

      v71 = v70;
    }

    (*(void (**)(char *, uint64_t))(v120 + 8))(v9, v119);
    v80 = self;
    v81 = (void *)sub_1D5459BC8();
    id v82 = objc_msgSend(v80, sel_hmErrorWithCode_description_reason_suggestion_, 2, 0, v81, 0);

    v83 = (void *)sub_1D54597D8();
    [v70 respondWithError:v83];

    goto LABEL_21;
  }
  id v40 = v38;
  if (objc_msgSend(v38, sel_principalClass))
  {
    swift_getObjCClassMetadata();
    sub_1D4A51CAC(0, (unint64_t *)&unk_1EBD99B80);
    if (swift_dynamicCastMetatype())
    {
      id v41 = v40;
      id v42 = objc_msgSend(v39, sel_uuidForKey_, *MEMORY[0x1E4F2C970]);
      if (v42)
      {
        uint64_t v43 = v42;
        sub_1D5459858();

        uint64_t v44 = v117;
        uint64_t v45 = v118;
        __int16 v46 = *(void (**)(char *, char *, void *))(v117 + 32);
        v46(v20, v30, v118);
        v47 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(v44 + 56);
        v47((uint64_t)v20, 0, 1, v45);
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v44 + 48))(v20, 1, v45) != 1)
        {
          v104 = v47;
          uint64_t v48 = v115;
          v46(v115, v20, v45);
          unsigned int v108 = objc_msgSend(v39, sel_BOOLForKey_, *MEMORY[0x1E4F2C968]);
          uint64_t v49 = v114;
          sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
          long long v50 = v111;
          v107 = *(void (**)(char *, char *, void *))(v44 + 16);
          v107(v111, v48, v45);
          id v106 = v40;
          uint64_t v51 = sub_1D5459AD8();
          os_log_type_t v52 = sub_1D5459DA8();
          int v105 = v52;
          if (os_log_type_enabled(v51, v52))
          {
            uint64_t v53 = swift_slowAlloc();
            v102 = (void *)swift_slowAlloc();
            uint64_t v103 = swift_slowAlloc();
            v121[0] = v103;
            *(_DWORD *)uint64_t v53 = 136315650;
            sub_1D4A50EAC((unint64_t *)&unk_1EA70F618, MEMORY[0x1E4F27990]);
            os_log_t v101 = v51;
            uint64_t v54 = sub_1D545A058();
            uint64_t v122 = sub_1D4A57DD4(v54, v55, v121);
            v116 = v39;
            sub_1D5459E48();
            swift_bridgeObjectRelease();
            v111 = *(char **)(v44 + 8);
            ((void (*)(char *, void *))v111)(v50, v118);
            *(_WORD *)(v53 + 12) = 1024;
            LODWORD(v122) = v108;
            uint64_t v48 = v115;
            sub_1D5459E48();
            *(_WORD *)(v53 + 1_Block_object_dispose(&STACK[0x368], 8) = 2112;
            id v56 = v106;
            uint64_t v122 = (uint64_t)v106;
            id v57 = v106;
            long long v39 = v116;
            sub_1D5459E48();
            uint64_t v58 = v102;
            void *v102 = v40;

            os_log_t v59 = v101;
            _os_log_impl(&dword_1D49D5000, v101, (os_log_type_t)v105, "Updating assertion with UUID %s to %{BOOL}d for connection: %@", (uint8_t *)v53, 0x1Cu);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
            swift_arrayDestroy();
            MEMORY[0x1D9452B60](v58, -1, -1);
            uint64_t v60 = v103;
            swift_arrayDestroy();
            MEMORY[0x1D9452B60](v60, -1, -1);
            uint64_t v61 = v53;
            uint64_t v45 = v118;
            MEMORY[0x1D9452B60](v61, -1, -1);

            (*(void (**)(char *, uint64_t))(v120 + 8))(v114, v119);
            uint64_t v62 = (uint64_t)v112;
            id v63 = v56;
          }
          else
          {
            v111 = *(char **)(v44 + 8);
            ((void (*)(char *, void *))v111)(v50, v45);

            id v63 = v106;
            (*(void (**)(char *, uint64_t))(v120 + 8))(v49, v119);
            uint64_t v62 = (uint64_t)v112;
          }
          uint64_t v89 = v113;
          if (v108)
          {
            uint64_t v90 = (uint64_t)v110;
            v107(v110, v48, v45);
            v91 = (os_unfair_lock_s *)(v89
                                     + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState);
            os_unfair_lock_lock((os_unfair_lock_t)(v89
                                                 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState));
            v92 = v63;
            sub_1D4A4E364((uint64_t)&v91[2], v63, v90);
            os_unfair_lock_unlock(v91);
            v93 = (void (*)(char *, void *))v111;
            ((void (*)(uint64_t, void *))v111)(v90, v45);
          }
          else
          {
            v107((char *)v62, v48, v45);
            v94 = (os_unfair_lock_s *)(v89
                                     + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState);
            os_unfair_lock_lock((os_unfair_lock_t)(v89
                                                 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState));
            v92 = v63;
            id v95 = v63;
            v96 = sub_1D4A4E590(v121, v95);
            if (*v97)
            {
              uint64_t v98 = v109;
              sub_1D4A597D8(v62, v109);
              sub_1D4A51D64(v98, &qword_1EBD99608);
              ((void (*)(uint64_t *, void))v96)(v121, 0);
            }
            else
            {
              ((void (*)(uint64_t *, void))v96)(v121, 0);

              uint64_t v99 = v109;
              v104(v109, 1, 1, v45);
              sub_1D4A51D64(v99, &qword_1EBD99608);
            }
            os_unfair_lock_unlock(v94);
            v93 = (void (*)(char *, void *))v111;
            ((void (*)(uint64_t, void *))v111)(v62, v45);
            uint64_t v48 = v115;
          }
          sub_1D4A4BDA8(v92);
          objc_msgSend(v39, sel_respondWithSuccess);

          v93(v48, v45);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, void *))(v117 + 56))(v20, 1, 1, v118);
      }
      sub_1D4A51D64((uint64_t)v20, &qword_1EBD99608);
      v84 = v116;
      sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
      v85 = sub_1D5459AD8();
      os_log_type_t v86 = sub_1D5459D88();
      if (os_log_type_enabled(v85, v86))
      {
        v87 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v87 = 0;
        _os_log_impl(&dword_1D49D5000, v85, v86, "Could not find assertion UUID in update state message payload", v87, 2u);
        MEMORY[0x1D9452B60](v87, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v120 + 8))(v84, v119);
      type metadata accessor for HMError(0);
      uint64_t v122 = 3;
      sub_1D4A50FCC(MEMORY[0x1E4FBC860]);
      sub_1D4A50EAC(&qword_1EA70F610, type metadata accessor for HMError);
      sub_1D54597C8();
      v88 = (void *)v121[0];
      v83 = (void *)sub_1D54597D8();

      objc_msgSend(v39, sel_respondWithError_, v83);
LABEL_21:

      return;
    }
  }
  v116 = a1;
  sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
  v64 = v40;
  v65 = sub_1D5459AD8();
  os_log_type_t v66 = sub_1D5459D88();
  if (os_log_type_enabled(v65, v66))
  {
    v118 = v40;
    v67 = (uint8_t *)swift_slowAlloc();
    v68 = (void *)swift_slowAlloc();
    *(_DWORD *)v67 = 138412290;
    v121[0] = (uint64_t)v64;
    v69 = v64;
    sub_1D5459E48();
    void *v68 = v118;

    _os_log_impl(&dword_1D49D5000, v65, v66, "Cannot update assertion for non-home-manager connection: %@", v67, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
    swift_arrayDestroy();
    MEMORY[0x1D9452B60](v68, -1, -1);
    MEMORY[0x1D9452B60](v67, -1, -1);
  }
  else
  {

    v65 = v64;
  }
  uint64_t v77 = v119;
  uint64_t v76 = v120;

  (*(void (**)(char *, uint64_t))(v76 + 8))(v12, v77);
  type metadata accessor for HMError(0);
  uint64_t v122 = 48;
  sub_1D4A50FCC(MEMORY[0x1E4FBC860]);
  sub_1D4A50EAC(&qword_1EA70F610, type metadata accessor for HMError);
  sub_1D54597C8();
  v78 = (void *)v121[0];
  v79 = (void *)sub_1D54597D8();

  objc_msgSend(v116, sel_respondWithError_, v79);
}

void sub_1D4A4E364(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = sub_1D5459878();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v8 + 16);
  uint64_t v27 = v15;
  v14(v11, a3);
  id v16 = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = *(void *)(a1 + 8);
  uint64_t v18 = v28;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x368], 8) = 0x8000000000000000;
  unint64_t v20 = sub_1D4A65A98((uint64_t)v16);
  uint64_t v21 = *(void *)(v18 + 16);
  BOOL v22 = (v19 & 1) == 0;
  uint64_t v23 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
    __break(1u);
    goto LABEL_10;
  }
  char v3 = v19;
  if (*(void *)(v18 + 24) >= v23)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_6;
    }
LABEL_10:
    sub_1D4A765F0();
    uint64_t v18 = v28;
    goto LABEL_6;
  }
  sub_1D4A74E9C(v23, isUniquelyReferenced_nonNull_native);
  uint64_t v18 = v28;
  unint64_t v24 = sub_1D4A65A98((uint64_t)v16);
  if ((v3 & 1) != (v25 & 1))
  {
    sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B28);
    sub_1D545A0A8();
    __break(1u);
    return;
  }
  unint64_t v20 = v24;
LABEL_6:
  *(void *)(a1 + _Block_object_dispose(&STACK[0x368], 8) = v18;
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0)
  {
    sub_1D4A6D2E4(v20, (uint64_t)v16, MEMORY[0x1E4FBC870], *(void **)(a1 + 8));
    id v26 = v16;
  }
  sub_1D4A77604((uint64_t)v13, v11);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v27);
}

void (*sub_1D4A4E590(void *a1, void *a2))(void *a1)
{
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[4] = a2;
  v4[5] = sub_1D4A512B8(v4, a2);
  return sub_1D4A4E5FC;
}

void sub_1D4A4E5FC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);

  free(v1);
}

void sub_1D4A4E6B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1D5459758();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5459AF8();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v42 = (char *)v41 - v13;
  uint64_t v14 = sub_1D5459B58();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (void *)((char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41[1] = v2;
  uint64_t v18 = *(void **)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_queue);
  void *v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FBCBF0], v14);
  id v19 = v18;
  LOBYTE(v1_Block_object_dispose(&STACK[0x368], 8) = sub_1D5459B78();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v20 = sub_1D5459748();
  if (!v20)
  {
    long long v48 = 0u;
    long long v49 = 0u;
LABEL_14:
    sub_1D4A51D64((uint64_t)&v48, (uint64_t *)&unk_1EBD99A10);
    goto LABEL_15;
  }
  uint64_t v21 = v20;
  uint64_t v45 = sub_1D5459BE8();
  uint64_t v46 = v22;
  sub_1D5459F48();
  if (*(void *)(v21 + 16) && (unint64_t v23 = sub_1D4A65ADC((uint64_t)v47), (v24 & 1) != 0))
  {
    sub_1D4A51C38(*(void *)(v21 + 56) + 32 * v23, (uint64_t)&v48);
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1D4A51BE4((uint64_t)v47);
  if (!*((void *)&v49 + 1)) {
    goto LABEL_14;
  }
  sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B28);
  if (swift_dynamicCast())
  {
    id v25 = v47[0];
    if (objc_msgSend(v47[0], sel_principalClass)
      && (swift_getObjCClassMetadata(),
          sub_1D4A51CAC(0, (unint64_t *)&unk_1EBD99B80),
          swift_dynamicCastMetatype()))
    {
      sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
      id v26 = v25;
      uint64_t v27 = sub_1D5459AD8();
      os_log_type_t v28 = sub_1D5459D68();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        long long v30 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 138412290;
        v47[0] = v26;
        uint64_t v31 = v26;
        sub_1D5459E48();
        void *v30 = v26;

        _os_log_impl(&dword_1D49D5000, v27, v28, "Setting initial home manager policy parameters on connection: %@", v29, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
        swift_arrayDestroy();
        MEMORY[0x1D9452B60](v30, -1, -1);
        MEMORY[0x1D9452B60](v29, -1, -1);
      }
      else
      {

        uint64_t v27 = v26;
      }

      (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
      id v40 = objc_msgSend(objc_allocWithZone((Class)HMDHomeManagerXPCMessageSendPolicyParameters), sel_initWithEntitlements_options_, -[NSObject entitlements](v26, sel_entitlements), -[NSObject homeManagerOptions](v26, sel_homeManagerOptions));
      [v26 updateSendPolicyParameters:v40];
      [v26 notifyOfExternallyManagedActivation];
      sub_1D4A4BDA8(v26);
    }
    else
    {
    }
    return;
  }
LABEL_15:
  sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
  uint64_t v32 = (char *)v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  uint64_t v33 = sub_1D5459AD8();
  os_log_type_t v34 = sub_1D5459D98();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = (void *)swift_slowAlloc();
    id v42 = v32;
    id v37 = v36;
    v47[0] = v36;
    *(_DWORD *)uint64_t v35 = 136315138;
    *(void *)&long long v48 = sub_1D5459748();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F608);
    uint64_t v38 = sub_1D5459BF8();
    *(void *)&long long v48 = sub_1D4A57DD4(v38, v39, (uint64_t *)v47);
    sub_1D5459E48();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v6 + 8))(v8, v42);
    _os_log_impl(&dword_1D49D5000, v33, v34, "XPC connection did activate notification user info did not contain a HMDXPCClientConnection: %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9452B60](v37, -1, -1);
    MEMORY[0x1D9452B60](v35, -1, -1);
  }
  else
  {
    (*(void (**)(char *, char *))(v6 + 8))(v8, v32);
  }

  (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v44);
}

void sub_1D4A4EDB0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1D5459758();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5459AF8();
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v52 = (char *)&v49 - v13;
  uint64_t v14 = sub_1D5459B58();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (uint64_t *)((char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v51 = v2;
  uint64_t v18 = *(void **)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_queue);
  void *v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FBCBF0], v14);
  id v19 = v18;
  LOBYTE(v1_Block_object_dispose(&STACK[0x368], 8) = sub_1D5459B78();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v20 = sub_1D5459748();
  if (!v20)
  {
    long long v58 = 0u;
    long long v59 = 0u;
LABEL_14:
    sub_1D4A51D64((uint64_t)&v58, (uint64_t *)&unk_1EBD99A10);
    goto LABEL_15;
  }
  uint64_t v21 = v20;
  uint64_t v55 = sub_1D5459BE8();
  uint64_t v56 = v22;
  sub_1D5459F48();
  if (*(void *)(v21 + 16) && (unint64_t v23 = sub_1D4A65ADC((uint64_t)v57), (v24 & 1) != 0))
  {
    sub_1D4A51C38(*(void *)(v21 + 56) + 32 * v23, (uint64_t)&v58);
  }
  else
  {
    long long v58 = 0u;
    long long v59 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1D4A51BE4((uint64_t)v57);
  if (!*((void *)&v59 + 1)) {
    goto LABEL_14;
  }
  sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B28);
  if (swift_dynamicCast())
  {
    id v25 = v57[0];
    if (objc_msgSend(v57[0], sel_principalClass)
      && (swift_getObjCClassMetadata(),
          sub_1D4A51CAC(0, (unint64_t *)&unk_1EBD99B80),
          swift_dynamicCastMetatype()))
    {
      uint64_t v26 = v51;
      uint64_t v27 = (os_unfair_lock_s *)(v51
                               + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState);
      os_unfair_lock_lock((os_unfair_lock_t)(v51
                                           + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState));
      id v28 = v25;
      sub_1D4A58530((uint64_t)v28);

      swift_bridgeObjectRelease();
      os_unfair_lock_unlock(v27);
      sub_1D4A4C978(v28);
      id v29 = objc_msgSend(v28, sel_processInfo);
      id v30 = objc_msgSend(*(id *)(v26 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_xpcTransport), sel_connections);
      unint64_t v31 = sub_1D5459C68();

      id v32 = v29;
      LOBYTE(v29) = sub_1D4A51830(v31);
      swift_bridgeObjectRelease();

      if (v29)
      {
      }
      else
      {
        sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
        id v41 = v32;
        id v42 = sub_1D5459AD8();
        os_log_type_t v43 = sub_1D5459D68();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc();
          long long v50 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v44 = 138412290;
          v57[0] = v41;
          uint64_t v45 = v41;
          sub_1D5459E48();
          uint64_t v46 = v50;
          *long long v50 = v41;

          _os_log_impl(&dword_1D49D5000, v42, v43, "Posting notification that no more client connections exist for process: %@", v44, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
          swift_arrayDestroy();
          MEMORY[0x1D9452B60](v46, -1, -1);
          MEMORY[0x1D9452B60](v44, -1, -1);
        }
        else
        {

          id v42 = v41;
        }

        (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
        v47 = *(void **)(v26
                       + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_notificationCenter);
        long long v48 = v41;
        objc_msgSend(v47, sel_postNotificationName_object_, @"HMDHomeManagerClientProcessDisconnectedNotification", v48);
      }
    }
    else
    {
    }
    return;
  }
LABEL_15:
  sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
  uint64_t v33 = (char *)v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  os_log_type_t v34 = sub_1D5459AD8();
  os_log_type_t v35 = sub_1D5459D98();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    id v37 = (void *)swift_slowAlloc();
    os_log_type_t v52 = v33;
    uint64_t v38 = v37;
    v57[0] = v37;
    *(_DWORD *)uint64_t v36 = 136315138;
    *(void *)&long long v58 = sub_1D5459748();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F608);
    uint64_t v39 = sub_1D5459BF8();
    *(void *)&long long v58 = sub_1D4A57DD4(v39, v40, (uint64_t *)v57);
    sub_1D5459E48();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v6 + 8))(v8, v52);
    _os_log_impl(&dword_1D49D5000, v34, v35, "XPC connection did activate notification user info did not contain a HMDXPCClientConnection: %s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9452B60](v38, -1, -1);
    MEMORY[0x1D9452B60](v36, -1, -1);
  }
  else
  {
    (*(void (**)(char *, char *))(v6 + 8))(v8, v33);
  }

  (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v54);
}

uint64_t sub_1D4A4F548(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v41 = sub_1D5459758();
  uint64_t v5 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D5459AF8();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (unint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D5459B58();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = v2;
  uint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_queue);
  void *v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBF0], v11);
  id v16 = v15;
  char v17 = sub_1D5459B78();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1D545A008();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_11;
    }
LABEL_28:

    return swift_bridgeObjectRelease();
  }
  uint64_t v18 = sub_1D5459748();
  if (!v18)
  {
    long long v46 = 0u;
    long long v47 = 0u;
LABEL_20:
    sub_1D4A51D64((uint64_t)&v46, (uint64_t *)&unk_1EBD99A10);
    goto LABEL_21;
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_1D5459BE8();
  uint64_t v44 = v20;
  sub_1D5459F48();
  if (*(void *)(v19 + 16) && (unint64_t v21 = sub_1D4A65ADC((uint64_t)v45), (v22 & 1) != 0))
  {
    sub_1D4A51C38(*(void *)(v19 + 56) + 32 * v21, (uint64_t)&v46);
  }
  else
  {
    long long v46 = 0u;
    long long v47 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1D4A51BE4((uint64_t)v45);
  if (!*((void *)&v47 + 1)) {
    goto LABEL_20;
  }
  sub_1D4A51CAC(0, &qword_1EBD99B20);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8B7D0);
    uint64_t v31 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v41);
    id v32 = sub_1D5459AD8();
    os_log_type_t v33 = sub_1D5459D98();
    if (os_log_type_enabled(v32, v33))
    {
      os_log_type_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v45[0] = v35;
      *(_DWORD *)os_log_type_t v34 = 136315138;
      *(void *)&long long v46 = sub_1D5459748();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F608);
      uint64_t v36 = sub_1D5459BF8();
      *(void *)&long long v46 = sub_1D4A57DD4(v36, v37, v45);
      sub_1D5459E48();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v41);
      _os_log_impl(&dword_1D49D5000, v32, v33, "Process info state changed notification user info did not contain a HMDProcessInfo: %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9452B60](v35, -1, -1);
      MEMORY[0x1D9452B60](v34, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v31);
    }

    return (*(uint64_t (**)(unint64_t, uint64_t))(v39 + 8))(v10, v40);
  }
  uint64_t v15 = (void *)v45[0];
  id v23 = objc_msgSend(*(id *)(v42 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_xpcTransport), sel_connections);
  sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B28);
  unint64_t v10 = sub_1D5459C68();

  if (v10 >> 62) {
    goto LABEL_27;
  }
  uint64_t v24 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v24) {
    goto LABEL_28;
  }
LABEL_11:
  uint64_t result = sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B90);
  if (v24 >= 1)
  {
    for (uint64_t i = 0; i != v24; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v27 = (id)MEMORY[0x1D944FAD0](i, v10);
      }
      else {
        id v27 = *(id *)(v10 + 8 * i + 32);
      }
      id v28 = v27;
      id v29 = objc_msgSend(v27, sel_processInfo);
      char v30 = sub_1D5459E18();

      if (v30) {
        sub_1D4A4BDA8(v28);
      }
    }
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D4A4FB50(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = sub_1D5459758();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5459738();
  id v10 = a1;
  a4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id HomeManagerXPCClientConnectionsManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void HomeManagerXPCClientConnectionsManager.init()()
{
}

id HomeManagerXPCClientConnectionsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id HomeManagerXPCClientConnectionsManager.messageReceiveQueue.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_queue);
}

HMDHomeManagerXPCClientConnectionsManagerFactory __swiftcall HMDHomeManagerXPCClientConnectionsManagerFactory.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return (HMDHomeManagerXPCClientConnectionsManagerFactory)objc_msgSend(v0, sel_init);
}

id HMDHomeManagerXPCClientConnectionsManagerFactory.init()()
{
  v1.super_class = (Class)HMDHomeManagerXPCClientConnectionsManagerFactory;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t variable initialization expression of AccessoryInfoFetchController.messageDispatcher()
{
  return 0;
}

uint64_t variable initialization expression of AccessoryInfoFetchController.remoteEventRouterClientController()
{
  return 0;
}

uint64_t variable initialization expression of DiscoveryController.queue()
{
  uint64_t v0 = sub_1D5459DD8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  char v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D5459DB8();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1D5459B28();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1D4A51CAC(0, &qword_1EBD999B8);
  sub_1D5459B18();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1D4A50EAC(&qword_1EBD999B0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99978);
  sub_1D4A50690();
  sub_1D5459EA8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  return sub_1D5459DF8();
}

uint64_t variable initialization expression of DiscoveryController.logger()
{
  return sub_1D4A502E8();
}

uint64_t variable initialization expression of DiscoveryController.isDiscoveryAsserted()
{
  return 0;
}

uint64_t variable initialization expression of DiscoveryController.visibleSFDevices()
{
  return sub_1D4A50294(&qword_1EBD999E8, MEMORY[0x1E4FBC868]);
}

uint64_t variable initialization expression of DiscoveryController.assertions()
{
  return sub_1D4A50294((uint64_t *)&unk_1EBD999F0, MEMORY[0x1E4FBC870]);
}

uint64_t sub_1D4A50294(uint64_t *a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = a2;
  return result;
}

uint64_t variable initialization expression of NetworkInfoController.logger()
{
  return sub_1D4A502E8();
}

uint64_t sub_1D4A502E8()
{
  sub_1D5459BE8();
  return sub_1D5459AE8();
}

uint64_t variable initialization expression of NetworkInfoController.store()
{
  return 0;
}

uint64_t variable initialization expression of MatterAccessoryWriteAttributeLogEvent.home()
{
  return 0;
}

unint64_t variable initialization expression of MatterAccessoryWriteAttributeLogEvent.coreAnalyticsEventName()
{
  return 0xD00000000000003BLL;
}

uint64_t variable initialization expression of MatterAccessoryWriteAttributeLogEvent.coreAnalyticsEventOptions()
{
  return 0;
}

uint64_t variable initialization expression of Account.ChangeObserver.delegate()
{
  return 0;
}

uint64_t variable initialization expression of MatterAccessoryInvokeCommandLogEvent.home()
{
  return 0;
}

unint64_t variable initialization expression of MatterAccessoryInvokeCommandLogEvent.coreAnalyticsEventName()
{
  return 0xD00000000000003ALL;
}

uint64_t variable initialization expression of MatterAccessoryInvokeCommandLogEvent.coreAnalyticsEventOptions()
{
  return 0;
}

uint64_t sub_1D4A503AC(uint64_t a1)
{
  uint64_t v2 = sub_1D4A50EAC(&qword_1EA70F658, type metadata accessor for HMError);
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1D4A50418(uint64_t a1)
{
  uint64_t v2 = sub_1D4A50EAC(&qword_1EA70F658, type metadata accessor for HMError);
  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1D4A50488(uint64_t a1)
{
  uint64_t v2 = sub_1D4A50EAC(&qword_1EA70F610, type metadata accessor for HMError);
  return MEMORY[0x1F40E4480](a1, v2);
}

id sub_1D4A504F4()
{
  return *v0;
}

uint64_t sub_1D4A504FC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void *sub_1D4A50504@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1D4A50518(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1D4A50548(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1D4A5055C(void *result)
{
  *v1 &= *result;
  return result;
}

void sub_1D4A50570(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1D4A50578@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1D4A5058C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_1D4A505A0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x368], 8) = v3 == 0;
  return result;
}

uint64_t *sub_1D4A505CC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x368], 8) = v5 == 0;
  return result;
}

void *sub_1D4A505F0(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1D4A50604@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1D4A50618(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1D4A5062C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1D4A50640(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1D4A50654()
{
  return *v0 == 0;
}

uint64_t sub_1D4A50664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1D4A5067C(void *result)
{
  *v1 &= ~*result;
  return result;
}

unint64_t sub_1D4A50690()
{
  unint64_t result = qword_1EBD99980;
  if (!qword_1EBD99980)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBD99978);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD99980);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1D4A50734()
{
  return sub_1D5459BE8();
}

uint64_t sub_1D4A50744(uint64_t a1)
{
  uint64_t v2 = sub_1D4A50EAC(&qword_1EA70F610, type metadata accessor for HMError);
  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_1D4A507B0(uint64_t a1)
{
  uint64_t v2 = sub_1D4A50EAC(&qword_1EA70F610, type metadata accessor for HMError);
  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1D4A5081C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4A50EAC(&qword_1EA70F610, type metadata accessor for HMError);
  id v5 = a1;
  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1D4A508AC()
{
  id v1 = *v0;
  uint64_t v2 = sub_1D5459E28();

  return v2;
}

uint64_t sub_1D4A508E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4A50EAC(&qword_1EA70F610, type metadata accessor for HMError);
  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

uint64_t sub_1D4A50960()
{
  return sub_1D545A108();
}

void *sub_1D4A509C0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x368], 8) = 0;
  return result;
}

void sub_1D4A509D0(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_1D4A509DC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1D4A509E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1D4A517F8(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1D4A50A28()
{
  return type metadata accessor for HomeManagerXPCClientConnectionsManager();
}

uint64_t type metadata accessor for HomeManagerXPCClientConnectionsManager()
{
  uint64_t result = qword_1EBD99B10;
  if (!qword_1EBD99B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D4A50A7C()
{
  uint64_t result = sub_1D5459878();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D4A50B34()
{
  if (MEMORY[0x1E4FBC8F0]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F490);
  }
  else {
    return MEMORY[0x1E4FBC848] + 8;
  }
}

uint64_t type metadata accessor for HMDHomeManagerXPCClientConnectionsManagerFactory(uint64_t a1)
{
  return sub_1D4A51CAC(a1, &qword_1EA70F500);
}

void type metadata accessor for HMDRequestSource(uint64_t a1)
{
}

void type metadata accessor for HMMCoreAnalyticsEventOptions(uint64_t a1)
{
}

void type metadata accessor for SCDynamicStore(uint64_t a1)
{
}

uint64_t destroy for HomeManagerXPCClientConnectionsManager.LockedState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

void *_s19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManagerC11LockedStateVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for HomeManagerXPCClientConnectionsManager.LockedState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for HomeManagerXPCClientConnectionsManager.LockedState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeManagerXPCClientConnectionsManager.LockedState(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeManagerXPCClientConnectionsManager.LockedState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + _Block_object_dispose(&STACK[0x368], 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeManagerXPCClientConnectionsManager.LockedState()
{
  return &type metadata for HomeManagerXPCClientConnectionsManager.LockedState;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_1D4A50DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4A50EAC(&qword_1EA70F610, type metadata accessor for HMError);
  return MEMORY[0x1F40E44B8](a1, a2, a3, v6);
}

BOOL sub_1D4A50E50(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D4A50E64()
{
  return sub_1D4A50EAC(&qword_1EA70F580, type metadata accessor for HMMCoreAnalyticsEventOptions);
}

uint64_t sub_1D4A50EAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D4A50EF4()
{
  return sub_1D4A50EAC(&qword_1EA70F588, type metadata accessor for HMMCoreAnalyticsEventOptions);
}

uint64_t sub_1D4A50F3C()
{
  return sub_1D4A50EAC(&qword_1EA70F590, type metadata accessor for HMMCoreAnalyticsEventOptions);
}

uint64_t sub_1D4A50F84()
{
  return sub_1D4A50EAC(&qword_1EA70F598, type metadata accessor for HMMCoreAnalyticsEventOptions);
}

unint64_t sub_1D4A50FCC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99BB0);
  uint64_t v2 = sub_1D545A038();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D4A51CFC(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1D4A510F8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1D4A51C94(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D4A510F8(uint64_t a1, uint64_t a2)
{
  sub_1D545A0E8();
  sub_1D5459C08();
  uint64_t v4 = sub_1D545A108();
  return sub_1D4A51170(a1, a2, v4);
}

unint64_t sub_1D4A51170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1D545A078() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1D545A078() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_1D545A078()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

void (*sub_1D4A512B8(void *a1, void *a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[8] = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v6 = a2;
  v4[9] = sub_1D4A51554(v4);
  v4[10] = sub_1D4A513C4(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_1D4A51354;
}

void sub_1D4A51354(uint64_t a1)
{
  unint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 80))();

  v2(v1, 0);
  free(v1);
}

void (*sub_1D4A513C4(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_1D4A65A98(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        void *v8 = v17;
        return sub_1D4A51504;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_1D4A765F0();
      goto LABEL_7;
    }
    sub_1D4A74E9C(v14, a3 & 1);
    unint64_t v18 = sub_1D4A65A98(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B28);
  unint64_t result = (void (*)(uint64_t **))sub_1D545A0A8();
  __break(1u);
  return result;
}

void sub_1D4A51504(uint64_t **a1)
{
  unint64_t v1 = *a1;
  sub_1D4A51590(*a1, *((unsigned char *)*a1 + 32), (uint64_t *)(*a1)[2], (*a1)[3], (void *)(*a1)[1]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_1D4A51554(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_1D4A51584;
}

uint64_t sub_1D4A51584(uint64_t result)
{
  **(void **)(result + _Block_object_dispose(&STACK[0x368], 8) = *(void *)result;
  return result;
}

uint64_t sub_1D4A51590(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *a1;
  if (*a1)
  {
    uint64_t v8 = (void *)*a3;
    if (a2)
    {
      *(void *)(v8[7] + 8 * a4) = v7;
    }
    else
    {
      sub_1D4A6D2E4(a4, (uint64_t)a5, v7, v8);
      id v10 = a5;
    }
  }
  else if (a2)
  {
    sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B28);
    swift_arrayDestroy();
    sub_1D4A58A84(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

id sub_1D4A5164C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v8 = v7;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  BOOL v13 = &v7[OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_lockedState];
  *(_DWORD *)BOOL v13 = 0;
  uint64_t v14 = MEMORY[0x1E4FBC868];
  *((void *)v13 + 1) = MEMORY[0x1E4FBC870];
  *((void *)v13 + 2) = v14;
  *((void *)v13 + 3) = 0;
  *(void *)&v7[OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_queue] = a1;
  *(void *)&v7[OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_messageDispatcher] = a2;
  char v15 = &v7[OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_messageTargetUUID];
  uint64_t v16 = sub_1D5459878();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  char v19 = v8;
  v18(v15, a3, v16);
  *(void *)&v19[OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_accessoryBrowser] = a4;
  *(void *)&v19[OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_logEventSubmitter] = a5;
  *(void *)&v19[OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_xpcTransport] = a6;
  *(void *)&v19[OBJC_IVAR____TtC19HomeKitDaemonLegacy38HomeManagerXPCClientConnectionsManager_notificationCenter] = a7;
  id v20 = a1;
  id v21 = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v22 = a6;
  id v23 = a7;

  v30.receiver = v19;
  v30.super_class = ObjectType;
  id v24 = objc_msgSendSuper2(&v30, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a3, v16);
  return v24;
}

uint64_t sub_1D4A517F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1D4A51830(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1D545A008())
  {
    sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B90);
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D944FAD0](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = objc_msgSend(v4, sel_processInfo);
      char v8 = sub_1D5459E18();

      if (v8)
      {
        id v9 = objc_msgSend(v5, sel_principalClass);

        if (v9)
        {
          swift_getObjCClassMetadata();
          sub_1D4A51CAC(0, (unint64_t *)&unk_1EBD99B80);
          if (swift_dynamicCastMetatype())
          {
            uint64_t v10 = 1;
            goto LABEL_18;
          }
        }
      }
      else
      {
      }
      ++v3;
      if (v6 == v2)
      {
        uint64_t v10 = 0;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  uint64_t v10 = 0;
LABEL_18:
  swift_bridgeObjectRelease();
  return v10;
}

id sub_1D4A519D4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a5;
  uint64_t v9 = sub_1D5459878();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  BOOL v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v15 = (char *)&v26 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v26 - v14, a3, v9);
  v16(v13, (uint64_t)v15, v9);
  uint64_t v17 = self;
  id v18 = a1;
  id v19 = a2;
  swift_unknownObjectRetain();
  uint64_t v20 = v27;
  swift_unknownObjectRetain();
  id v21 = objc_msgSend(v17, sel_defaultTransport);
  id v22 = objc_msgSend(self, sel_defaultCenter);
  id v23 = objc_allocWithZone((Class)type metadata accessor for HomeManagerXPCClientConnectionsManager());
  id v24 = sub_1D4A5164C(v18, v19, (uint64_t)v13, a4, v20, v21, v22);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v24;
}

uint64_t sub_1D4A51BE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D4A51C38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_1D4A51C94(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1D4A51CA4()
{
  return swift_release();
}

uint64_t sub_1D4A51CAC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for HMError(uint64_t a1)
{
}

uint64_t sub_1D4A51CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4A51D64(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for SCNetworkInterface(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

uint64_t sub_1D4A51DE8()
{
  return sub_1D4A50EAC(&qword_1EA70F648, type metadata accessor for HMError);
}

uint64_t sub_1D4A51E30()
{
  return sub_1D4A50EAC(&qword_1EA70F650, type metadata accessor for HMError);
}

uint64_t sub_1D4A51E78()
{
  return sub_1D4A50EAC(&qword_1EA70F658, type metadata accessor for HMError);
}

uint64_t sub_1D4A51EC0()
{
  return sub_1D4A50EAC(&qword_1EA70F660, type metadata accessor for HMError);
}

uint64_t sub_1D4A51F08()
{
  return sub_1D4A50EAC(&qword_1EA70F668, type metadata accessor for HMError);
}

uint64_t sub_1D4A51F50()
{
  return sub_1D4A50EAC(&qword_1EA70F670, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

void sub_1D4A51FAC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1D4A51FF4()
{
  return sub_1D4A50EAC(&qword_1EA70F678, type metadata accessor for Code);
}

unint64_t sub_1D4A52040()
{
  unint64_t result = qword_1EA70F680;
  if (!qword_1EA70F680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA70F680);
  }
  return result;
}

uint64_t sub_1D4A52094()
{
  return sub_1D4A50EAC(&qword_1EA70F688, type metadata accessor for Code);
}

uint64_t sub_1D4A520DC()
{
  return sub_1D4A50EAC(&qword_1EA70F610, type metadata accessor for HMError);
}

void sub_1D4A52148()
{
  qword_1EBD99C48 = 0x4122750000000000;
}

uint64_t static HMDTTRManager.defaultFilter.getter()
{
  id v0 = objc_msgSend(self, sel_sharedPreferences);
  sub_1D5459AC8();
  swift_allocObject();
  uint64_t v1 = sub_1D5459AB8();
  uint64_t v2 = sub_1D4A522E0(v0, v1);
  swift_release();

  return v2;
}

uint64_t sub_1D4A522E0(void *a1, uint64_t a2)
{
  v20[3] = sub_1D5459AC8();
  v20[4] = MEMORY[0x1E4F6A200];
  v20[0] = a2;
  uint64_t v4 = qword_1EBD99990;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  sub_1D4A52548((uint64_t)v20, (uint64_t)v19);
  uint64_t v5 = (objc_class *)sub_1D5459AA8();
  id v6 = objc_allocWithZone(v5);
  swift_retain();
  id v7 = (void *)sub_1D5459A98();
  id v8 = objc_allocWithZone((Class)sub_1D5459A88());
  id v9 = v7;
  uint64_t v10 = sub_1D5459A68();
  uint64_t v11 = (void *)sub_1D5459BC8();
  id v12 = objc_msgSend(a1, sel_preferenceForKey_, v11);

  id v13 = objc_msgSend(v12, sel_numberValue);
  if (v13)
  {
    objc_msgSend(v13, sel_doubleValue);
    sub_1D4A52548((uint64_t)v20, (uint64_t)v19);
    id v14 = objc_allocWithZone(v5);
    swift_retain();
    char v15 = (void *)sub_1D5459A98();
    sub_1D5459BE8();
    id v16 = v15;
    sub_1D5459A78();

    swift_bridgeObjectRelease();
  }
  id v17 = objc_msgSend(objc_allocWithZone((Class)sub_1D5459A58()), sel_init);
  sub_1D5459BE8();
  sub_1D5459A78();

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return v10;
}

uint64_t sub_1D4A52548(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1D4A525FC(uint64_t a1, uint64_t a2)
{
  sub_1D5459BE8();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  return sub_1D5459AE8();
}

uint64_t sub_1D4A5268C()
{
  return sub_1D5459BF8();
}

uint64_t sub_1D4A526C4()
{
  return sub_1D5459BF8();
}

uint64_t sub_1D4A526F4()
{
  return sub_1D4A526C4();
}

uint64_t AccessoryInfoFetchController.messageTargetUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___HMDAccessoryInfoFetchController_messageTargetUUID;
  swift_beginAccess();
  uint64_t v4 = sub_1D5459878();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AccessoryInfoFetchController.messageTargetUUID.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR___HMDAccessoryInfoFetchController_messageTargetUUID;
  swift_beginAccess();
  uint64_t v4 = sub_1D5459878();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*AccessoryInfoFetchController.messageTargetUUID.modify())()
{
  return j__swift_endAccess;
}

id AccessoryInfoFetchController.messageReceiveQueue.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___HMDAccessoryInfoFetchController_messageReceiveQueue);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void AccessoryInfoFetchController.messageReceiveQueue.setter(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR___HMDAccessoryInfoFetchController_messageReceiveQueue);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

uint64_t (*AccessoryInfoFetchController.messageReceiveQueue.modify())()
{
  return j_j__swift_endAccess;
}

id AccessoryInfoFetchController.__allocating_init(homeUUID:workQueue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___HMDAccessoryInfoFetchController_messageDispatcher] = 0;
  *(void *)&v5[OBJC_IVAR___HMDAccessoryInfoFetchController_remoteEventRouterClientController] = 0;
  id v6 = &v5[OBJC_IVAR___HMDAccessoryInfoFetchController_messageTargetUUID];
  uint64_t v7 = sub_1D5459878();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  *(void *)&v5[OBJC_IVAR___HMDAccessoryInfoFetchController_messageReceiveQueue] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

id AccessoryInfoFetchController.init(homeUUID:workQueue:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR___HMDAccessoryInfoFetchController_messageDispatcher] = 0;
  *(void *)&v2[OBJC_IVAR___HMDAccessoryInfoFetchController_remoteEventRouterClientController] = 0;
  uint64_t v5 = &v2[OBJC_IVAR___HMDAccessoryInfoFetchController_messageTargetUUID];
  uint64_t v6 = sub_1D5459878();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  *(void *)&v2[OBJC_IVAR___HMDAccessoryInfoFetchController_messageReceiveQueue] = a2;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for AccessoryInfoFetchController();
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t type metadata accessor for AccessoryInfoFetchController()
{
  uint64_t result = qword_1EBD99948;
  if (!qword_1EBD99948) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::Void __swiftcall AccessoryInfoFetchController.configure(with:remoteEventRouterClientController:)(HMFMessageDispatcher *with, HMDHomeRemoteEventRouterClientController *remoteEventRouterClientController)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void **)(v3 + OBJC_IVAR___HMDAccessoryInfoFetchController_messageDispatcher);
  *(void *)(v3 + OBJC_IVAR___HMDAccessoryInfoFetchController_messageDispatcher) = with;
  uint64_t v6 = with;

  uint64_t v7 = *(void **)(v3 + OBJC_IVAR___HMDAccessoryInfoFetchController_remoteEventRouterClientController);
  *(void *)(v3 + OBJC_IVAR___HMDAccessoryInfoFetchController_remoteEventRouterClientController) = remoteEventRouterClientController;
  id v8 = remoteEventRouterClientController;

  id v9 = objc_msgSend(self, sel_policyWithEntitlements_, 5);
  uint64_t v10 = *MEMORY[0x1E4F2C3F8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD99A00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1D54C3660;
  *(void *)(v11 + 32) = v9;
  sub_1D5459C88();
  sub_1D4A5314C();
  id v12 = v9;
  id v13 = (id)sub_1D5459C48();
  swift_bridgeObjectRelease();
  [(HMFMessageDispatcher *)v6 registerForMessage:v10 receiver:v3 policies:v13 selector:sel_handleFetchWithMessage_];
}

unint64_t sub_1D4A5314C()
{
  unint64_t result = qword_1EBD999A0;
  if (!qword_1EBD999A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBD999A0);
  }
  return result;
}

id AccessoryInfoFetchController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AccessoryInfoFetchController.init()()
{
}

id AccessoryInfoFetchController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccessoryInfoFetchController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D4A53384()
{
  return type metadata accessor for AccessoryInfoFetchController();
}

uint64_t sub_1D4A5338C()
{
  uint64_t result = sub_1D5459878();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D4A53438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99620);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D5459938();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_1D4A51D64(a1, &qword_1EBD99620);
    sub_1D4A585F8(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1D4A51D64((uint64_t)v10, &qword_1EBD99620);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_1D4A6CE30((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D4A53614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1D4A5BF0C((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1D4A6D120(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D4A51D64(a1, &qword_1EA70F6C8);
    sub_1D4A587A0(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1D4A51D64((uint64_t)v9, &qword_1EA70F6C8);
  }
}

void sub_1D4A536EC(void *a1)
{
  objc_msgSend(v1, sel_setDispatchQueue_, a1);
}

id sub_1D4A53738(uint64_t a1)
{
  return objc_msgSend(v1, sel_setDiscoveryFlags_, a1);
}

void sub_1D4A5374C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D4A53764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D4A53778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  if (a1)
  {
    v9[4] = a1;
    void v9[5] = a2;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 1107296256;
    long long v9[2] = sub_1D4A53760;
    v9[3] = a5;
    uint64_t v8 = _Block_copy(v9);
    swift_release();
  }
  else
  {
    uint64_t v8 = 0;
  }
  objc_msgSend(v6, *a6, v8);
  _Block_release(v8);
}

void sub_1D4A53820(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    v4[4] = a1;
    v4[5] = a2;
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 1107296256;
    v4[2] = sub_1D4A538C8;
    v4[3] = &block_descriptor_131;
    uint64_t v3 = _Block_copy(v4);
    swift_release();
  }
  else
  {
    uint64_t v3 = 0;
  }
  objc_msgSend(v2, sel_setDeviceChangedHandler_, v3);
  _Block_release(v3);
}

void sub_1D4A538C8(uint64_t a1, void *a2)
{
}

void sub_1D4A538D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D4A538DC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

id sub_1D4A53948()
{
  return objc_msgSend(v0, sel_invalidate);
}

id sub_1D4A53958()
{
  return objc_msgSend(v0, sel_controlFlags);
}

id sub_1D4A53968(uint64_t a1)
{
  return objc_msgSend(v1, sel_setControlFlags_, a1);
}

uint64_t sub_1D4A5397C()
{
  id v1 = objc_msgSend(v0, sel_activeDevices);
  sub_1D4A51CAC(0, &qword_1EBD999C0);
  uint64_t v2 = sub_1D5459C68();

  return v2;
}

void sub_1D4A539E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D4A539F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D4A53A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  if (a1)
  {
    v9[4] = a1;
    void v9[5] = a2;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 1107296256;
    long long v9[2] = sub_1D4A53734;
    v9[3] = a5;
    uint64_t v8 = _Block_copy(v9);
    swift_release();
  }
  else
  {
    uint64_t v8 = 0;
  }
  objc_msgSend(v6, *a6, v8);
  _Block_release(v8);
}

void sub_1D4A53AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D4A53AC8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1D4A53B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D4A53B44(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    v4[4] = a1;
    v4[5] = a2;
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 1107296256;
    v4[2] = sub_1D4A53BEC;
    v4[3] = &block_descriptor_113;
    uint64_t v3 = _Block_copy(v4);
    swift_release();
  }
  else
  {
    uint64_t v3 = 0;
  }
  objc_msgSend(v2, sel_setDeviceChangedHandler_, v3);
  _Block_release(v3);
}

void sub_1D4A53BEC(uint64_t a1, void *a2)
{
}

void sub_1D4A53BF4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1D4A53C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D4A53C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    v7[4] = a1;
    v7[5] = a2;
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 1107296256;
    void v7[2] = sub_1D4A538DC;
    v7[3] = a5;
    uint64_t v6 = _Block_copy(v7);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v6 = 0;
  }
  objc_msgSend(v5, sel_activateWithCompletion_, v6);
  _Block_release(v6);
}

uint64_t sub_1D4A53D34()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC19HomeKitDaemonLegacy15AssertionHandle9Assertion_uuid;
  uint64_t v2 = sub_1D5459878();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x1F4186488](v0, v3, v4);
}

uint64_t sub_1D4A53DE8()
{
  return sub_1D545A108();
}

uint64_t sub_1D4A53E80()
{
  return sub_1D5459BA8();
}

uint64_t sub_1D4A53F08()
{
  return sub_1D545A108();
}

uint64_t sub_1D4A53F9C()
{
  return sub_1D5459848();
}

uint64_t sub_1D4A53FB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 24;
  uint64_t v3 = MEMORY[0x1D9452C30](v0 + 24);
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v5 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR___HMDDiscoveryController_assertions);
    swift_retain();
    os_unfair_lock_lock(v5 + 6);
    sub_1D4A5BD68((uint64_t)&v5[4], &v8);
    os_unfair_lock_unlock(v5 + 6);
    BOOL v6 = v8;
    swift_release();
    sub_1D4A579C8(v4);
    if (v6) {
      sub_1D4A57468();
    }
    swift_unknownObjectRelease();
  }
  *(void *)(v1 + 32) = 0;
  swift_unknownObjectWeakAssign();
  swift_release();
  sub_1D4A5BD84(v2);
  return v1;
}

uint64_t sub_1D4A540A0()
{
  sub_1D4A53FB8();
  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t sub_1D4A540D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  swift_retain();
  sub_1D4A77900(&v7, a2);
  swift_release();
  if ((*(void *)a1 & 0xC000000000000001) != 0) {
    uint64_t result = sub_1D5459EE8();
  }
  else {
    uint64_t result = *(void *)(*(void *)a1 + 16);
  }
  *a3 = result;
  return result;
}

uint64_t sub_1D4A54150@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  sub_1D4A59AB8();
  swift_release();
  if ((*(void *)a1 & 0xC000000000000001) != 0) {
    uint64_t result = sub_1D5459EE8();
  }
  else {
    uint64_t result = *(void *)(*(void *)a1 + 16);
  }
  *a2 = result == 0;
  return result;
}

id DiscoveryController.__allocating_init(discoveryNeedsAssertion:)(int a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = objc_allocWithZone((Class)type metadata accessor for DiscoveryController(0));
  id v5 = sub_1D4A5B434(a1, (uint64_t (*)(void))sub_1D4A5435C, 0, (uint64_t (*)(void))sub_1D4A54390, 0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

id DiscoveryController.init(discoveryNeedsAssertion:)(int a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for DiscoveryController(0));
  id v3 = sub_1D4A5B434(a1, (uint64_t (*)(void))sub_1D4A5435C, 0, (uint64_t (*)(void))sub_1D4A54390, 0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

id sub_1D4A5435C()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F946E0]), sel_init);
}

id sub_1D4A54390()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F6E8]), sel_init);
}

uint64_t type metadata accessor for DiscoveryController(uint64_t a1)
{
  return sub_1D4A5B9C8(a1, (uint64_t *)&unk_1EBD997B8);
}

uint64_t sub_1D4A544B0()
{
  uint64_t v1 = v0 + OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v5 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v2 + 112);
  swift_unknownObjectRetain();
  swift_retain();
  v5(sub_1D4A5BD20, v4, ObjectType, v2);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v7 = swift_getObjectType();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = *(void (**)(void (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t))(v6 + 160);
  swift_unknownObjectRetain();
  swift_retain();
  v9(sub_1D4A5BD40, v8, v7, v6);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v10 = *(void *)(v1 + 8);
  uint64_t v11 = swift_getObjectType();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v10 + 136);
  swift_unknownObjectRetain();
  swift_retain();
  v13(sub_1D4A5BD48, v12, v11, v10);
  swift_unknownObjectRelease();
  return swift_release();
}

void sub_1D4A5469C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1D9452C30](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_1D4A55E94(2u, a1);
  }
}

void sub_1D4A546FC(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1D9452C30](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_1D4A55E94(a3, a1);
  }
}

void sub_1D4A5476C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1D9452C30](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    swift_beginAccess();
    uint64_t v6 = MEMORY[0x1D9452C30](a2 + 16);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)(a2 + 24);
      uint64_t v9 = sub_1D5459AD8();
      os_log_type_t v10 = sub_1D5459D68();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl(&dword_1D49D5000, v9, v10, "Queue setup after invalidation.", v11, 2u);
        MEMORY[0x1D9452B60](v11, -1, -1);
      }

      sub_1D4A569A4(v7, v8, 120.0);
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_1D4A5489C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1D9452C30](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = sub_1D5459AD8();
    os_log_type_t v5 = sub_1D5459D68();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1D49D5000, v4, v5, "RPClient was interrupted", v6, 2u);
      MEMORY[0x1D9452B60](v6, -1, -1);
    }
  }
}

void sub_1D4A5496C(void *a1, uint64_t a2, char *a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1D9452C30](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    id v8 = a1;
    uint64_t v9 = sub_1D5459AD8();
    os_log_type_t v10 = sub_1D5459D78();
    if (os_log_type_enabled(v9, v10))
    {
      format = a3;
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 138412290;
      id v13 = v8;
      sub_1D5459E48();
      void *v12 = v8;

      _os_log_impl(&dword_1D49D5000, v9, v10, format, v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
      swift_arrayDestroy();
      MEMORY[0x1D9452B60](v12, -1, -1);
      MEMORY[0x1D9452B60](v11, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D4A54AF8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1D9452C30](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    id v7 = a1;
    id v8 = sub_1D5459AD8();
    os_log_type_t v9 = sub_1D5459D68();
    if (os_log_type_enabled(v8, v9))
    {
      os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v10 = 138412290;
      id v12 = v7;
      sub_1D5459E48();
      void *v11 = v7;

      _os_log_impl(&dword_1D49D5000, v8, v9, "device changed from RPClient: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
      swift_arrayDestroy();
      MEMORY[0x1D9452B60](v11, -1, -1);
      MEMORY[0x1D9452B60](v10, -1, -1);
    }
    else
    {
    }
  }
}

Swift::Void __swiftcall DiscoveryController.start()()
{
}

uint64_t sub_1D4A54CA8(uint64_t a1)
{
  uint64_t v2 = sub_1D5459B58();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(unsigned char *)(a1 + OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion) & 1) == 0)
  {
    id v7 = *(void **)(a1 + OBJC_IVAR___HMDDiscoveryController_queue);
    *uint64_t v6 = v7;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E4FBCBF0], v2);
    id v8 = v7;
    LOBYTE(v7) = sub_1D5459B78();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v6, v2);
    if (v7)
    {
      uint64_t v9 = a1 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient;
      swift_beginAccess();
      uint64_t v10 = *(void *)(v9 + 8);
      uint64_t v11 = swift_unknownObjectRetain();
      sub_1D4A5645C(v11, v10);
      swift_unknownObjectRelease();
      return sub_1D4A55890();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1D4A54E10(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1D4A54E9C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99620);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D5459938();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v36 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v29 = (char *)&v29 - v7;
  uint64_t v8 = v0 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient;
  swift_beginAccess();
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 56);
  swift_unknownObjectRetain();
  unint64_t v12 = v11(ObjectType, v9);
  swift_unknownObjectRelease();
  if (!(v12 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
LABEL_22:
    unint64_t v37 = MEMORY[0x1E4FBC860];
LABEL_23:
    swift_bridgeObjectRelease_n();
    return v37;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D545A008();
  uint64_t v13 = result;
  if (!result) {
    goto LABEL_22;
  }
LABEL_3:
  if (v13 >= 1)
  {
    uint64_t v15 = 0;
    os_log_type_t v33 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
    unint64_t v34 = v12 & 0xC000000000000001;
    id v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v30 + 32);
    unint64_t v37 = MEMORY[0x1E4FBC860];
    uint64_t v31 = v4;
    do
    {
      if (v34) {
        id v16 = (id)MEMORY[0x1D944FAD0](v15, v12);
      }
      else {
        id v16 = *(id *)(v12 + 8 * v15 + 32);
      }
      uint64_t v17 = v16;
      id v18 = objc_msgSend(v16, sel_idsDeviceIdentifier);
      if (v18)
      {
        id v19 = v18;
        sub_1D5459BE8();

        id v20 = objc_msgSend(v17, sel_mediaRouteIdentifier);
        if (v20)
        {
          id v21 = v20;
          sub_1D5459BE8();
        }
        sub_1D5459908();
        uint64_t v22 = 0;
        uint64_t v4 = v31;
      }
      else
      {
        uint64_t v22 = 1;
      }
      (*v33)(v3, v22, 1, v4);

      if ((*v32)(v3, 1, v4) == 1)
      {
        sub_1D4A51D64((uint64_t)v3, &qword_1EBD99620);
      }
      else
      {
        id v23 = *v35;
        id v24 = v29;
        (*v35)(v29, v3, v4);
        v23(v36, v24, v4);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v37 = sub_1D4A654F8(0, *(void *)(v37 + 16) + 1, 1, v37);
        }
        unint64_t v26 = *(void *)(v37 + 16);
        unint64_t v25 = *(void *)(v37 + 24);
        if (v26 >= v25 >> 1) {
          unint64_t v37 = sub_1D4A654F8(v25 > 1, v26 + 1, 1, v37);
        }
        uint64_t v27 = v36;
        unint64_t v28 = v37;
        *(void *)(v37 + 16) = v26 + 1;
        v23((char *)(v28+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v26), v27, v4);
      }
      ++v15;
    }
    while (v13 != v15);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D4A552D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t DiscoveryController.obtainNetworkVisibleDevicesProto()()
{
  uint64_t v0 = sub_1D5459938();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D4A54E9C();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    uint64_t v8 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    uint64_t v7 = v1 + 16;
    v19[1] = v4;
    id v20 = v8;
    unint64_t v9 = v4 + ((*(unsigned __int8 *)(v7 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64));
    uint64_t v10 = *(void *)(v7 + 56);
    uint64_t v11 = (uint64_t (**)(char *, uint64_t))(v7 - 8);
    swift_bridgeObjectRetain();
    do
    {
      v20(v3, v9, v0);
      id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2E568]), sel_init);
      if (v12)
      {
        uint64_t v13 = v12;
        sub_1D5459918();
        id v14 = (void *)sub_1D5459BC8();
        swift_bridgeObjectRelease();
        objc_msgSend(v13, sel_setIdsIdentifierString_, v14);

        sub_1D5459928();
        if (v15)
        {
          id v16 = (void *)sub_1D5459BC8();
          swift_bridgeObjectRelease();
          objc_msgSend(v13, sel_setMediaRouteIdString_, v16);
        }
        uint64_t v17 = (*v11)(v3, v0);
        MEMORY[0x1D944F760](v17);
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D5459C98();
        }
        sub_1D5459CA8();
        sub_1D5459C88();
      }
      else
      {
        (*v11)(v3, v0);
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v5 = v21;
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t DiscoveryController.obtainSFVisibleDevicesProto()()
{
  uint64_t v1 = sub_1D5459938();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR___HMDDiscoveryController_visibleSFDevices);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1D4A552D4((void *)(v5 + 16), &v24);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  uint64_t v6 = v24;
  swift_release();
  size_t v7 = sub_1D4A5A77C(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(v7 + 16);
  if (v9)
  {
    uint64_t v11 = *(void (**)(char *, size_t, uint64_t))(v2 + 16);
    uint64_t v10 = v2 + 16;
    size_t v22 = v7;
    id v23 = v11;
    size_t v12 = v7 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v13 = *(void *)(v10 + 56);
    id v14 = (uint64_t (**)(char *, uint64_t))(v10 - 8);
    swift_retain();
    do
    {
      v23(v4, v12, v1);
      id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2E568]), sel_init);
      if (v15)
      {
        id v16 = v15;
        sub_1D5459918();
        uint64_t v17 = (void *)sub_1D5459BC8();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_setIdsIdentifierString_, v17);

        sub_1D5459928();
        if (v18)
        {
          id v19 = (void *)sub_1D5459BC8();
          swift_bridgeObjectRelease();
          objc_msgSend(v16, sel_setMediaRouteIdString_, v19);
        }
        uint64_t v20 = (*v14)(v4, v1);
        MEMORY[0x1D944F760](v20);
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D5459C98();
        }
        sub_1D5459CA8();
        sub_1D5459C88();
      }
      else
      {
        (*v14)(v4, v1);
      }
      v12 += v13;
      --v9;
    }
    while (v9);
    swift_release();
    uint64_t v8 = v24;
  }
  swift_release();
  return v8;
}

id sub_1D4A55814(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  sub_1D4A51CAC(0, &qword_1EA70F6B0);
  uint64_t v5 = (void *)sub_1D5459C48();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D4A55890()
{
  uint64_t v1 = sub_1D5459B58();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR___HMDDiscoveryController_queue];
  void *v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCBF0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1D5459B78();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    if (v0[OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion] != 1
      || v0[OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted] == 1)
    {
      uint64_t v8 = *(void *)&v0[OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient + 8];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v0;
      uint64_t v11 = *(void (**)(void (*), uint64_t, uint64_t, uint64_t))(v8 + 176);
      swift_unknownObjectRetain();
      size_t v12 = v0;
      v11(sub_1D4A5BD18, v10, ObjectType, v8);
      swift_unknownObjectRelease();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D4A55A5C(NSObject *a1)
{
  if (a1)
  {
    uint64_t v2 = a1;
    uint64_t v3 = a1;
    id v4 = a1;
    uint64_t v5 = sub_1D5459AD8();
    os_log_type_t v6 = sub_1D5459D88();
    if (os_log_type_enabled(v5, v6))
    {
      size_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)size_t v7 = 138412290;
      uint64_t v9 = a1;
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      sub_1D5459E48();
      void *v8 = v14;

      _os_log_impl(&dword_1D49D5000, v5, v6, "Unable to start sfDiscovery %@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
      swift_arrayDestroy();
      MEMORY[0x1D9452B60](v8, -1, -1);
      MEMORY[0x1D9452B60](v7, -1, -1);

      return;
    }

    size_t v12 = a1;
  }
  else
  {
    oslog = sub_1D5459AD8();
    os_log_type_t v10 = sub_1D5459D68();
    if (os_log_type_enabled(oslog, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1D49D5000, oslog, v10, "Started sfDiscovery", v11, 2u);
      MEMORY[0x1D9452B60](v11, -1, -1);
    }
    size_t v12 = oslog;
  }
}

uint64_t sub_1D4A55CB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5459B58();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v6 = *(void **)(v1 + OBJC_IVAR___HMDDiscoveryController_queue);
  void *v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  id v7 = v6;
  char v8 = sub_1D5459B78();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v8)
  {
    os_log_type_t v10 = (uint64_t *)(v1 + OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient);
    uint64_t v11 = *(void *)(v1 + OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v11 + 184);
    swift_unknownObjectRetain();
    v13(ObjectType, v11);
    uint64_t v14 = swift_unknownObjectRelease();
    uint64_t v15 = (*(uint64_t (**)(uint64_t))(v1 + OBJC_IVAR___HMDDiscoveryController_sharingDiscoveryClientFactory))(v14);
    uint64_t v17 = v16;
    uint64_t v18 = swift_getObjectType();
    (*(void (**)(id, uint64_t, uint64_t))(v17 + 16))(v7, v18, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 88))(1, v18, v17);
    uint64_t *v10 = v15;
    v10[1] = v17;
    swift_unknownObjectRelease();
    return sub_1D4A544B0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1D4A55E94(unsigned __int8 a1, void *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99620);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1D5459B58();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  size_t v12 = *(void **)(v2 + OBJC_IVAR___HMDDiscoveryController_queue);
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBF0], v8);
  id v13 = v12;
  LOBYTE(v12) = sub_1D5459B78();
  id result = (id)(*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    id result = objc_msgSend(a2, sel_idsIdentifier);
    if (result)
    {
      uint64_t v15 = result;
      int v16 = a1;
      uint64_t v17 = sub_1D5459BE8();
      uint64_t v19 = v18;

      id v20 = objc_msgSend(a2, sel_mediaRouteID);
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = sub_1D5459BE8();
        uint64_t v24 = v23;
      }
      else
      {
        uint64_t v22 = 0;
        uint64_t v24 = 0;
      }
      if ((v16 - 1) > 1)
      {
        uint64_t v26 = swift_bridgeObjectRelease();
        uint64_t v27 = *(void *)(v2 + OBJC_IVAR___HMDDiscoveryController_visibleSFDevices);
        MEMORY[0x1F4188790](v26);
        *(void *)&v28[-16] = v17;
        *(void *)&v28[-8] = v19;
        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
        sub_1D4A5BCDC((uint64_t *)(v27 + 16), (uint64_t)v7);
        os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
        swift_release();
        swift_bridgeObjectRelease();
        return (id)sub_1D4A51D64((uint64_t)v7, &qword_1EBD99620);
      }
      else
      {
        unint64_t v25 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR___HMDDiscoveryController_visibleSFDevices);
        MEMORY[0x1F4188790](v20);
        *(void *)&v28[-32] = v17;
        *(void *)&v28[-24] = v19;
        *(void *)&v28[-16] = v22;
        *(void *)&v28[-8] = v24;
        swift_retain();
        os_unfair_lock_lock(v25 + 6);
        sub_1D4A5BCF8((uint64_t)&v25[4]);
        os_unfair_lock_unlock(v25 + 6);
        swift_release();
        swift_bridgeObjectRelease();
        return (id)swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D4A56190@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1D4A65B20(a2, a3);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *a1;
    uint64_t v17 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D4A7679C();
      uint64_t v11 = v17;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = sub_1D5459938();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a4, v12 + *(void *)(v14 + 72) * v8, v13);
    sub_1D4A58C38(v8, v11);
    *a1 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
  }
  else
  {
    uint64_t v16 = sub_1D5459938();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a4, 1, 1, v16);
  }
}

uint64_t sub_1D4A56340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99620);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1D5459908();
  uint64_t v8 = sub_1D5459938();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  return sub_1D4A53438((uint64_t)v7, a2, a3);
}

uint64_t sub_1D4A5645C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5459B58();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (void *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v3 + OBJC_IVAR___HMDDiscoveryController_queue);
  void *v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  id v11 = v10;
  LOBYTE(v10) = sub_1D5459B78();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    if (*(unsigned char *)(v3 + OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion) != 1
      || *(unsigned char *)(v3 + OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted) == 1)
    {
      swift_unknownObjectRetain();
      uint64_t v13 = sub_1D5459AD8();
      os_log_type_t v14 = sub_1D5459D68();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 134217984;
        uint64_t ObjectType = swift_getObjectType();
        v21[1] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
        sub_1D5459E48();
        swift_unknownObjectRelease();
        _os_log_impl(&dword_1D49D5000, v13, v14, "Set up the companion link client, controlFlags = %llu", v15, 0xCu);
        MEMORY[0x1D9452B60](v15, -1, -1);
      }
      else
      {
        swift_unknownObjectRelease();
      }

      uint64_t v17 = swift_getObjectType();
      uint64_t v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v19 = (void *)swift_allocObject();
      void v19[2] = v18;
      v19[3] = a1;
      v19[4] = a2;
      id v20 = *(void (**)(void (*)(void *), void *, uint64_t, uint64_t))(a2 + 184);
      swift_unknownObjectRetain();
      swift_retain();
      v20(sub_1D4A5BCD0, v19, v17, a2);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D4A56744(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a2 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1D9452C30](v7);
  if (v8)
  {
    char v9 = (void *)v8;
    if (a1)
    {
      id v10 = a1;
      id v11 = a1;
      id v12 = a1;
      uint64_t v13 = sub_1D5459AD8();
      os_log_type_t v14 = sub_1D5459D88();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v16 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 138412290;
        id v17 = a1;
        uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
        sub_1D5459E48();
        void *v16 = v21;

        _os_log_impl(&dword_1D49D5000, v13, v14, "Error activating RPClient: '%@'", v15, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
        swift_arrayDestroy();
        MEMORY[0x1D9452B60](v16, -1, -1);
        MEMORY[0x1D9452B60](v15, -1, -1);
      }
      else
      {
      }
      sub_1D4A569A4(a3, a4, 120.0);
    }
    else
    {
      uint64_t v18 = sub_1D5459AD8();
      uint64_t v19 = sub_1D5459D68();
      if (os_log_type_enabled(v18, (os_log_type_t)v19))
      {
        id v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v20 = 0;
        _os_log_impl(&dword_1D49D5000, v18, (os_log_type_t)v19, "RPClient activated successfully", v20, 2u);
        MEMORY[0x1D9452B60](v20, -1, -1);
      }
    }
  }
}

uint64_t sub_1D4A569A4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v27 = sub_1D5459B08();
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5459B28();
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D5459B48();
  uint64_t v26 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v24 - v17;
  uint64_t v24 = *(void *)(v3 + OBJC_IVAR___HMDDiscoveryController_queue);
  sub_1D5459B38();
  MEMORY[0x1D944F690](v16, a3);
  unint64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v16, v12);
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v20 = (void *)swift_allocObject();
  v20[2] = v19;
  v20[3] = a1;
  v20[4] = a2;
  void aBlock[4] = sub_1D4A5BCA8;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D4A53734;
  aBlock[3] = &block_descriptor_97;
  uint64_t v21 = _Block_copy(aBlock);
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_1D5459B18();
  uint64_t v31 = MEMORY[0x1E4FBC860];
  sub_1D4A5BBC0((unint64_t *)&qword_1EBD99960, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD995D0);
  sub_1D4A5BDAC((unint64_t *)&qword_1EBD99968, (uint64_t *)&unk_1EBD995D0);
  uint64_t v22 = v27;
  sub_1D5459EA8();
  MEMORY[0x1D944F8F0](v18, v11, v8, v21);
  _Block_release(v21);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
  v25(v18, v26);
  swift_release();
  return swift_release();
}

void sub_1D4A56D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5459B58();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1D9452C30](a1 + 16);
  if (v10)
  {
    id v11 = (char *)v10;
    uint64_t v12 = sub_1D5459AD8();
    os_log_type_t v13 = sub_1D5459D68();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1D49D5000, v12, v13, "Restarting RPDevice discovery", v14, 2u);
      MEMORY[0x1D9452B60](v14, -1, -1);
    }

    uint64_t v15 = *(void **)&v11[OBJC_IVAR___HMDDiscoveryController_queue];
    void *v9 = v15;
    (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
    id v16 = v15;
    LOBYTE(v15) = sub_1D5459B78();
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
    if (v15)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(a3 + 192))(ObjectType, a3);
      sub_1D4A5645C(a2, a3);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1D4A56FA4()
{
  return sub_1D4A56FCC((uint64_t)&unk_1F2C8BC70, (uint64_t)sub_1D4A5BC4C, (uint64_t)&block_descriptor_88);
}

uint64_t sub_1D4A56FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5459B08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D5459B28();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(void *)&v3[OBJC_IVAR___HMDDiscoveryController_queue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  void aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D4A53734;
  aBlock[3] = a3;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v3;
  sub_1D5459B18();
  v18[1] = MEMORY[0x1E4FBC860];
  sub_1D4A5BBC0((unint64_t *)&qword_1EBD99960, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD995D0);
  sub_1D4A5BDAC((unint64_t *)&qword_1EBD99968, (uint64_t *)&unk_1EBD995D0);
  sub_1D5459EA8();
  MEMORY[0x1D944F910](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_1D4A57268(uint64_t a1)
{
  uint64_t v2 = sub_1D5459B58();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1D5459AD8();
  os_log_type_t v7 = sub_1D5459DA8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D49D5000, v6, v7, "Became asserted", v8, 2u);
    MEMORY[0x1D9452B60](v8, -1, -1);
  }

  *(unsigned char *)(a1 + OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted) = 1;
  if (*(unsigned char *)(a1 + OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion) == 1)
  {
    uint64_t v9 = *(void **)(a1 + OBJC_IVAR___HMDDiscoveryController_queue);
    void *v5 = v9;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
    id v10 = v9;
    LOBYTE(v9) = sub_1D5459B78();
    (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    if (v9)
    {
      uint64_t v11 = a1 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient;
      swift_beginAccess();
      uint64_t v12 = *(void *)(v11 + 8);
      uint64_t v13 = swift_unknownObjectRetain();
      sub_1D4A5645C(v13, v12);
      swift_unknownObjectRelease();
      sub_1D4A55890();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1D4A57468()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1D5459B08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D5459B28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(void *)&v0[OBJC_IVAR___HMDDiscoveryController_queue];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  *(void *)(v10 + 24) = ObjectType;
  void aBlock[4] = sub_1D4A5BC44;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D4A53734;
  aBlock[3] = &block_descriptor_82;
  uint64_t v11 = _Block_copy(aBlock);
  uint64_t v12 = v0;
  sub_1D5459B18();
  v14[1] = MEMORY[0x1E4FBC860];
  sub_1D4A5BBC0((unint64_t *)&qword_1EBD99960, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD995D0);
  sub_1D4A5BDAC((unint64_t *)&qword_1EBD99968, (uint64_t *)&unk_1EBD995D0);
  sub_1D5459EA8();
  MEMORY[0x1D944F910](0, v9, v5, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

void sub_1D4A57720(uint64_t a1)
{
  uint64_t v2 = sub_1D5459B58();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1D5459AD8();
  os_log_type_t v7 = sub_1D5459DA8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D49D5000, v6, v7, "No more assertions", v8, 2u);
    MEMORY[0x1D9452B60](v8, -1, -1);
  }

  *(unsigned char *)(a1 + OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted) = 0;
  if (*(unsigned char *)(a1 + OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion) == 1)
  {
    sub_1D4A55CB0();
    uint64_t v9 = (uint64_t *)(a1 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient);
    swift_beginAccess();
    uint64_t v10 = v9[1];
    uint64_t v11 = *(void **)(a1 + OBJC_IVAR___HMDDiscoveryController_queue);
    void *v5 = v11;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
    swift_unknownObjectRetain();
    id v12 = v11;
    char v13 = sub_1D5459B78();
    (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    if (v13)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v10 + 192))(ObjectType, v10);
      uint64_t v15 = swift_unknownObjectRelease();
      uint64_t v16 = (*(uint64_t (**)(uint64_t))(a1 + OBJC_IVAR___HMDDiscoveryController_rapportDiscoveryClientFactory))(v15);
      uint64_t v18 = v17;
      uint64_t v19 = swift_getObjectType();
      (*(void (**)(id, uint64_t, uint64_t))(v18 + 16))(v12, v19, v18);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40))(0x60000400004, v19, v18);
      uint64_t *v9 = v16;
      v9[1] = v18;
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1D4A579BC(uint64_t a1)
{
}

void sub_1D4A579C8(uint64_t a1)
{
}

void sub_1D4A579D4(uint64_t a1, const char *a2)
{
  swift_retain_n();
  oslog = sub_1D5459AD8();
  os_log_type_t v4 = sub_1D5459D78();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtCC19HomeKitDaemonLegacy15AssertionHandle9Assertion_reason);
    unint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtCC19HomeKitDaemonLegacy15AssertionHandle9Assertion_reason + 8);
    swift_bridgeObjectRetain();
    sub_1D4A57DD4(v7, v8, &v12);
    sub_1D5459E48();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_1D5459878();
    sub_1D4A5BBC0((unint64_t *)&unk_1EA70F618, MEMORY[0x1E4F27990]);
    uint64_t v9 = sub_1D545A058();
    sub_1D4A57DD4(v9, v10, &v12);
    sub_1D5459E48();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D49D5000, oslog, v4, a2, (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9452B60](v6, -1, -1);
    MEMORY[0x1D9452B60](v5, -1, -1);
  }
  else
  {
    swift_release_n();
  }
}

id DiscoveryController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DiscoveryController.init()()
{
}

id DiscoveryController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiscoveryController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D4A57DD4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1D4A57EA8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1D4A51C38((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1D4A51C38((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1D4A57EA8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1D5459E58();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1D4A58064(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1D5459FB8();
  if (!v8)
  {
    sub_1D5459FD8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1D545A048();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1D4A58064(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1D4A580FC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1D4A582DC(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1D4A582DC(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1D4A580FC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1D4A58274(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1D5459F98();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1D5459FD8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1D5459C28();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1D545A048();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1D5459FD8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1D4A58274(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F6A8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1D4A582DC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F6A8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D545A048();
  __break(1u);
  return result;
}

double sub_1D4A5842C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1D4A65B20(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D4A76408();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1D4A51C94((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1D4A588AC(v8, v11);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1D4A58530(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1D4A65A98(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D4A765F0();
    uint64_t v7 = v10;
  }

  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1D4A58A84(v4, v7);
  uint64_t *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1D4A585F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1D4A65B20(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D4A7679C();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = sub_1D5459938();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a3, v12 + *(void *)(v20 + 72) * v8, v13);
    sub_1D4A58C38(v8, v11);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_1D5459938();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

double sub_1D4A587A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1D4A65B20(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D4A76EE0();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1D4A5BF0C((long long *)(*(void *)(v11 + 56) + 40 * v8), a3);
    sub_1D4A58E48(v8, v11);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1D4A588AC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1D5459EB8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1D545A0E8();
        swift_bridgeObjectRetain();
        sub_1D5459C08();
        uint64_t v10 = sub_1D545A108();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            _OWORD *v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            _OWORD *v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1D4A58A84(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1D5459EB8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1D5459E08();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              void *v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *uint64_t v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  uint64_t *v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1D4A58C38(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1D5459EB8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1D545A0E8();
        swift_bridgeObjectRetain();
        sub_1D5459C08();
        uint64_t v9 = sub_1D545A108();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          _OWORD *v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(sub_1D5459938() - 8) + 72);
        int64_t v16 = v15 * v3;
        double result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          double result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          double result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D4A58E48(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1D5459EB8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1D545A0E8();
        swift_bridgeObjectRetain();
        sub_1D5459C08();
        uint64_t v11 = sub_1D545A108();
        double result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            _OWORD *v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          unint64_t v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1D4A59034(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD99BA0);
    uint64_t v2 = sub_1D5459F78();
    uint64_t v14 = v2;
    sub_1D5459ED8();
    if (sub_1D5459F08())
    {
      sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B28);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1D4A77DC4();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_1D5459E08();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v_Block_object_dispose(&STACK[0x368], 8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1D5459F08());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1D4A5922C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD999D8);
    uint64_t v2 = sub_1D5459F78();
    uint64_t v14 = v2;
    sub_1D5459ED8();
    if (sub_1D5459F08())
    {
      type metadata accessor for AssertionHandle.Assertion(0);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1D4A7844C();
          uint64_t v2 = v14;
        }
        sub_1D545A0E8();
        sub_1D5459878();
        sub_1D4A5BBC0((unint64_t *)&qword_1EBD99600, MEMORY[0x1E4F27990]);
        sub_1D5459BA8();
        uint64_t result = sub_1D545A108();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v_Block_object_dispose(&STACK[0x368], 8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1D5459F08());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

unint64_t sub_1D4A59488(uint64_t a1, uint64_t a2)
{
  sub_1D5459E08();
  unint64_t result = sub_1D5459EC8();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1D4A5950C(uint64_t a1, uint64_t a2)
{
  sub_1D545A0E8();
  sub_1D5459878();
  sub_1D4A5BBC0((unint64_t *)&qword_1EBD99600, MEMORY[0x1E4F27990]);
  sub_1D5459BA8();
  sub_1D545A108();
  unint64_t result = sub_1D5459EC8();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1D4A59600(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_1D5459F18();

    if (v5)
    {
      uint64_t v6 = sub_1D4A59D00();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1D5459E08();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B28);
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_1D5459E18();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_1D5459E18();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  uint64_t *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D4A791D4();
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_1D4A5A0A0(v9);
  uint64_t *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1D4A597D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D5459878();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1D4A5BBC0((unint64_t *)&qword_1EBD99600, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1D5459B98();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    char v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1D4A5BBC0(&qword_1EA70F6B8, MEMORY[0x1E4F27990]);
      char v19 = sub_1D5459BB8();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D4A79380();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1D4A5A244(v12);
    uint64_t *v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1D4A59AB8()
{
  uint64_t v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    char v2 = sub_1D5459F18();
    swift_release();
    if (v2)
    {
      uint64_t v3 = sub_1D4A59E9C();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1D545A0E8();
  sub_1D5459878();
  sub_1D4A5BBC0((unint64_t *)&qword_1EBD99600, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  sub_1D5459BA8();
  uint64_t v4 = sub_1D545A108();
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_12;
  }
  swift_retain();
  char v7 = sub_1D5459848();
  swift_release();
  if ((v7 & 1) == 0)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_12;
      }
      swift_retain();
      char v9 = sub_1D5459848();
      swift_release();
    }
    while ((v9 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v0;
  uint64_t v13 = *v0;
  uint64_t *v0 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D4A79624();
    uint64_t v11 = v13;
  }
  uint64_t v3 = *(void *)(*(void *)(v11 + 48) + 8 * v6);
  sub_1D4A5A560(v6);
  uint64_t *v0 = v13;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1D4A59D00()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D5459EE8();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_1D4A59034(v3, v2);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_1D5459E08();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B28);
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_1D5459E18();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_1D4A5A0A0(v7);
      if (sub_1D5459E18())
      {
        uint64_t *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_1D5459E18();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D4A59E9C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1D5459EE8();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = sub_1D4A5922C(v2, v1);
  uint64_t v12 = v3;
  sub_1D545A0E8();
  sub_1D5459878();
  sub_1D4A5BBC0((unint64_t *)&qword_1EBD99600, MEMORY[0x1E4F27990]);
  swift_retain();
  sub_1D5459BA8();
  uint64_t v4 = sub_1D545A108();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if ((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    swift_retain();
    char v7 = sub_1D5459848();
    swift_release();
    if (v7)
    {
LABEL_6:
      swift_release();
      uint64_t v10 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
      sub_1D4A5A560(v6);
      if (sub_1D5459848())
      {
        uint64_t *v0 = v12;
        return v10;
      }
      __break(1u);
    }
    else
    {
      uint64_t v8 = ~v5;
      while (1)
      {
        unint64_t v6 = (v6 + 1) & v8;
        if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        swift_retain();
        char v9 = sub_1D5459848();
        swift_release();
        if (v9) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1D4A5A0A0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1D5459EB8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_1D5459E08();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v2);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              void *v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1D4A5A244(int64_t a1)
{
  uint64_t v3 = sub_1D5459878();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_1D5459EB8();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      char v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      uint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_1D4A5BBC0((unint64_t *)&qword_1EBD99600, MEMORY[0x1E4F27990]);
        uint64_t v21 = sub_1D5459B98();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

unint64_t sub_1D4A5A560(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1D5459EB8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1D545A0E8();
        sub_1D5459878();
        sub_1D4A5BBC0((unint64_t *)&qword_1EBD99600, MEMORY[0x1E4F27990]);
        swift_retain();
        sub_1D5459BA8();
        uint64_t v10 = sub_1D545A108();
        swift_release();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (void *)(v12 + 8 * v2);
          char v14 = (void *)(v12 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            void *v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

size_t sub_1D4A5A77C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F6C0);
  uint64_t v3 = *(void *)(sub_1D5459938() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_1D4A5AA04(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1D4A51CA4();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_1D4A5A8D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F6A0);
  uint64_t v3 = *(void *)(sub_1D5459878() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1D4A5AD4C(&v10, (char *)v6 + v5, v1, a1);
      sub_1D4A51CA4();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D4A5AA04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1D5459938();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v42 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  uint64_t v41 = (char *)&v32 - v13;
  uint64_t v43 = a4;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v15 = a4 + 64;
  uint64_t v14 = v16;
  uint64_t v37 = v15;
  uint64_t v17 = -1 << *(unsigned char *)(v15 - 32);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v31 = v37;
    *a1 = v43;
    a1[1] = v31;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(v15 - 32);
  uint64_t v35 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v38 = v9 + 32;
  uint64_t v39 = v9 + 16;
  int64_t v36 = (unint64_t)(63 - v17) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v40 = a3;
  unint64_t v22 = v41;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v24 = v23 | (v20 << 6);
  while (1)
  {
    ++v21;
    BOOL v28 = v42;
    uint64_t v29 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v42, *(void *)(v43 + 56) + v29 * v24, v8);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v22, v28, v8);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v8);
    a3 = v40;
    if (v21 == v40) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v36) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v20 = v25;
  }
  v20 += 2;
  if (v25 + 1 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v36) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v20 = v25 + 3;
  if (v25 + 3 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v20;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v36)
  {
LABEL_32:
    unint64_t v19 = 0;
LABEL_36:
    a3 = v21;
LABEL_37:
    uint64_t v17 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v36)
    {
      unint64_t v19 = 0;
      int64_t v20 = v33;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D4A5AD4C(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99608);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D5459878();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x1F4188790](v11);
  uint64_t v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 64;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  unint64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  uint64_t v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  uint64_t v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    int64_t v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_1D4A51D64((uint64_t)v10, &qword_1EBD99608);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1D4A5B140(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 24) = *(void *)(a2 + 8);
  swift_unknownObjectWeakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v3 + 96);
  swift_retain();
  swift_retain();
  v8(sub_1D4A5BEAC, v7, ObjectType, v3);
  swift_release();
  swift_release();
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = swift_getObjectType();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v9 + 72);
  swift_retain();
  v12(sub_1D4A5BEB4, v11, v10, v9);
  swift_release();
  uint64_t v13 = *(void *)(a2 + 8);
  uint64_t v14 = swift_getObjectType();
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v13 + 120);
  swift_retain();
  v16(sub_1D4A5BEBC, v15, v14, v13);
  swift_release();
  uint64_t v17 = *(void *)(a2 + 8);
  uint64_t v18 = swift_getObjectType();
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v20 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v17 + 144);
  swift_retain();
  v20(sub_1D4A5BEE0, v19, v18, v17);
  swift_release();
  uint64_t v21 = *(void *)(a2 + 8);
  uint64_t v22 = swift_getObjectType();
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int64_t v24 = *(void (**)(void (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t))(v21 + 168);
  swift_retain();
  v24(sub_1D4A5BF04, v23, v22, v21);
  return swift_release();
}

id sub_1D4A5B434(int a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v6 = v5;
  os_log_type_t v52 = a5;
  uint64_t v49 = a3;
  long long v50 = a4;
  long long v48 = a2;
  int v51 = a1;
  uint64_t v47 = sub_1D5459DD8();
  uint64_t v7 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  long long v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5459DB8();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_1D5459B28();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v53 = OBJC_IVAR___HMDDiscoveryController_queue;
  uint64_t v45 = sub_1D4A51CAC(0, &qword_1EBD999B8);
  uint64_t v11 = v5;
  sub_1D5459B18();
  uint64_t v54 = MEMORY[0x1E4FBC860];
  sub_1D4A5BBC0(&qword_1EBD999B0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99978);
  sub_1D4A5BDAC((unint64_t *)&qword_1EBD99980, &qword_1EBD99978);
  sub_1D5459EA8();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v46, *MEMORY[0x1E4FBCC58], v47);
  uint64_t v12 = (void *)sub_1D5459DF8();
  *(void *)&v5[v53] = v12;
  sub_1D5459BE8();
  sub_1D5459AE8();
  v11[OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted] = 0;
  uint64_t v13 = OBJC_IVAR___HMDDiscoveryController_visibleSFDevices;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD999E8);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = MEMORY[0x1E4FBC868];
  *(_DWORD *)(v14 + 24) = 0;
  *(void *)(v14 + 16) = v15;
  *(void *)&v11[v13] = v14;
  uint64_t v16 = OBJC_IVAR___HMDDiscoveryController_assertions;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD999F0);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = MEMORY[0x1E4FBC870];
  *(_DWORD *)(v17 + 24) = 0;
  *(void *)(v17 + 16) = v18;
  *(void *)&v11[v16] = v17;
  uint64_t v19 = (uint64_t (**)(void))&v11[OBJC_IVAR___HMDDiscoveryController_rapportDiscoveryClientFactory];
  unint64_t v20 = v48;
  uint64_t v21 = v49;
  *uint64_t v19 = v48;
  v19[1] = v21;
  uint64_t v22 = (uint64_t (**)(void))&v11[OBJC_IVAR___HMDDiscoveryController_sharingDiscoveryClientFactory];
  uint64_t v23 = v50;
  int64_t v24 = v52;
  *uint64_t v22 = v50;
  v22[1] = v24;
  v11[OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion] = v51;
  swift_retain();
  swift_retain();
  id v25 = v12;
  uint64_t v26 = v23();
  uint64_t v28 = v27;
  uint64_t ObjectType = swift_getObjectType();
  int64_t v30 = *(void (**)(void))(v28 + 16);
  id v31 = v25;
  v30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 88))(1, ObjectType, v28);

  uint64_t v32 = (uint64_t *)&v11[OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient];
  uint64_t *v32 = v26;
  v32[1] = v28;
  id v33 = *(id *)&v6[v53];
  uint64_t v34 = v20();
  uint64_t v36 = v35;
  uint64_t v37 = swift_getObjectType();
  uint64_t v38 = *(void (**)(void))(v36 + 16);
  id v39 = v33;
  v38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 40))(0x60000400004, v37, v36);

  uint64_t v40 = (uint64_t *)&v11[OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient];
  *uint64_t v40 = v34;
  v40[1] = v36;

  uint64_t v41 = (objc_class *)type metadata accessor for DiscoveryController(0);
  v55.receiver = v11;
  v55.super_class = v41;
  id v42 = objc_msgSendSuper2(&v55, sel_init);
  sub_1D4A544B0();
  uint64_t v43 = (uint64_t)v42 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient;
  swift_beginAccess();
  sub_1D4A5B140((uint64_t)v42, v43);
  swift_endAccess();

  return v42;
}

uint64_t sub_1D4A5B924()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4A5B95C()
{
  return sub_1D4A54CA8(*(void *)(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t type metadata accessor for AssertionHandle()
{
  return self;
}

uint64_t sub_1D4A5B9A0()
{
  return type metadata accessor for AssertionHandle.Assertion(0);
}

uint64_t type metadata accessor for AssertionHandle.Assertion(uint64_t a1)
{
  return sub_1D4A5B9C8(a1, (uint64_t *)&unk_1EBD99630);
}

uint64_t sub_1D4A5B9C8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D4A5BA00()
{
  uint64_t result = sub_1D5459878();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D4A5BA98()
{
  return type metadata accessor for DiscoveryController(0);
}

uint64_t sub_1D4A5BAA0()
{
  uint64_t result = sub_1D5459AF8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D4A5BB78()
{
  return sub_1D4A5BBC0(&qword_1EBD99628, (void (*)(uint64_t))type metadata accessor for AssertionHandle.Assertion);
}

uint64_t sub_1D4A5BBC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D4A5BC0C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D4A5BC44()
{
  sub_1D4A57720(*(void *)(v0 + 16));
}

void sub_1D4A5BC4C()
{
  sub_1D4A57268(*(void *)(v0 + 16));
}

uint64_t sub_1D4A5BC54()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4A5BC8C()
{
  return objectdestroy_93Tm(MEMORY[0x1E4FBC8F8], 40);
}

void sub_1D4A5BCA8()
{
  sub_1D4A56D9C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1D4A5BCB4()
{
  return objectdestroy_93Tm(MEMORY[0x1E4FBC8F8], 40);
}

void sub_1D4A5BCD0(void *a1)
{
  sub_1D4A56744(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1D4A5BCDC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D4A56190(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1D4A5BCF8(uint64_t a1)
{
  return sub_1D4A56340(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1D4A5BD18(NSObject *a1)
{
}

void sub_1D4A5BD20(void *a1)
{
  sub_1D4A546FC(a1, v1, 1u);
}

void sub_1D4A5BD40(void *a1, uint64_t a2)
{
  sub_1D4A5469C(a1, a2, v2);
}

void sub_1D4A5BD48(void *a1)
{
  sub_1D4A546FC(a1, v1, 0);
}

uint64_t sub_1D4A5BD68@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1D4A54150(a1, a2);
}

uint64_t sub_1D4A5BD84(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D4A5BDAC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D4A5BDFC()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4A5BE34()
{
  return objectdestroy_93Tm(MEMORY[0x1E4FBC8D0], 32);
}

uint64_t objectdestroy_93Tm(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 24));
  return MEMORY[0x1F4186498](v2, a2, 7);
}

void sub_1D4A5BEAC()
{
  sub_1D4A5476C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1D4A5BEB4()
{
  sub_1D4A5489C(v0);
}

void sub_1D4A5BEBC(void *a1)
{
  sub_1D4A5496C(a1, v1, "Device Found from RPClient: %@");
}

void sub_1D4A5BEE0(void *a1)
{
  sub_1D4A5496C(a1, v1, "Device lost from RPClient: %@");
}

void sub_1D4A5BF04(void *a1, uint64_t a2)
{
  sub_1D4A54AF8(a1, a2, v2);
}

uint64_t sub_1D4A5BF0C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t HMDSymptomManager.updateNetworkMismatchInfo()()
{
  v1[26] = v0;
  uint64_t v2 = sub_1D5459B08();
  v1[27] = v2;
  v1[28] = *(void *)(v2 - 8);
  v1[29] = swift_task_alloc();
  uint64_t v3 = sub_1D5459B28();
  v1[30] = v3;
  v1[31] = *(void *)(v3 - 8);
  v1[32] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F6D8);
  v1[33] = v4;
  v1[34] = *(void *)(v4 - 8);
  v1[35] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D4A5C118, 0, 0);
}

uint64_t sub_1D4A5C118()
{
  id v1 = objc_msgSend(*(id *)(v0 + 208), sel_dataSource);
  *(void *)(v0 + 28_Block_object_dispose(&STACK[0x368], 8) = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v4 = *(void *)(v0 + 272);
    uint64_t v3 = *(void *)(v0 + 280);
    uint64_t v5 = *(void *)(v0 + 264);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 192;
    *(void *)(v0 + 24) = sub_1D4A5C318;
    swift_continuation_init();
    *(void *)(v0 + 136) = v5;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 112));
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F6E0);
    sub_1D5459CD8();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 32))(boxed_opaque_existential_0, v3, v5);
    *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 8_Block_object_dispose(&STACK[0x368], 8) = 1107296256;
    *(void *)(v0 + 96) = sub_1D4A5C660;
    *(void *)(v0 + 104) = &block_descriptor_0;
    objc_msgSend(v2, sel_fetchNearbyAccessoriesNotOnCurrentNetworkWithCompletionHandler_, v0 + 80);
    return MEMORY[0x1F41881E8](v0 + 16);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_1D4A5C318()
{
  return MEMORY[0x1F4188298](sub_1D4A5C3F8, 0, 0);
}

uint64_t sub_1D4A5C3F8()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[29];
  uint64_t v13 = v0[31];
  uint64_t v14 = v0[30];
  uint64_t v4 = v0[27];
  uint64_t v3 = v0[28];
  uint64_t v5 = (void *)v0[26];
  uint64_t v6 = v0[24];
  swift_unknownObjectRelease();
  id v7 = objc_msgSend(v5, sel_workQueue);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = v6;
  v0[22] = sub_1D4A5C7B0;
  v0[23] = v8;
  v0[18] = MEMORY[0x1E4F143A8];
  v0[19] = 1107296256;
  v0[20] = sub_1D4A53734;
  v0[21] = &block_descriptor_3;
  uint64_t v9 = _Block_copy(v0 + 18);
  id v10 = v5;
  sub_1D5459B18();
  v0[25] = MEMORY[0x1E4FBC860];
  sub_1D4A5C7D0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD995D0);
  sub_1D4A5C828();
  sub_1D5459EA8();
  MEMORY[0x1D944F910](0, v1, v2, v9);
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v14);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1D4A5C660(uint64_t a1)
{
  return sub_1D5459CE8();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  return sub_1D4A51C38(a2 + 32, a1 + 32);
}

uint64_t block_destroy_helper_0(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
}

id sub_1D4A5C6E4(void *a1)
{
  id result = objc_msgSend(a1, sel__isNearbyDiscoveryActive);
  if (result)
  {
    sub_1D5459878();
    uint64_t v3 = (void *)sub_1D5459C48();
    objc_msgSend(a1, sel_setNearbyAccessoryUUIDsNotOnCurrentNetwork_, v3);

    return objc_msgSend(a1, sel__updateSymptomsForAllRegisteredAccessories);
  }
  return result;
}

uint64_t sub_1D4A5C770()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1D4A5C7B0()
{
  return sub_1D4A5C6E4(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

{
  uint64_t v2;

  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

{
  return swift_release();
}

unint64_t sub_1D4A5C7D0()
{
  unint64_t result = qword_1EBD99960;
  if (!qword_1EBD99960)
  {
    sub_1D5459B08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD99960);
  }
  return result;
}

unint64_t sub_1D4A5C828()
{
  unint64_t result = qword_1EBD99968;
  if (!qword_1EBD99968)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD995D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD99968);
  }
  return result;
}

uint64_t sub_1D4A5C9EC(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  void *v4 = v2;
  v4[1] = sub_1D4A5CA94;
  return HMDSymptomManager.updateNetworkMismatchInfo()();
}

uint64_t sub_1D4A5CA94()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 24);
  uint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t _sSo17HMDSymptomManagerC19HomeKitDaemonLegacyE24obtainDiscoveryAssertionyXlyF_0()
{
  id v0 = objc_msgSend(self, sel_driver);
  uint64_t v1 = (char *)sub_1D4A69B00();

  if (v1)
  {
    type metadata accessor for AssertionHandle();
    uint64_t v2 = swift_allocObject();
    sub_1D4A677D4(v1, 0xD000000000000014, 0x80000001D54D5E40, v2);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD997B0);
  uint64_t v3 = sub_1D5459E38();
  swift_release();
  return v3;
}

uint64_t _sSo17HMDSymptomManagerC19HomeKitDaemonLegacyE25releaseDiscoveryAssertion15assertionHandleyyXlSg_tF_0(uint64_t result)
{
  if (result)
  {
    type metadata accessor for AssertionHandle();
    swift_unknownObjectRetain();
    uint64_t v1 = swift_dynamicCastClass();
    if (v1)
    {
      uint64_t v2 = v1;
      uint64_t v3 = MEMORY[0x1D9452C30](v1 + 24);
      if (v3)
      {
        uint64_t v4 = *(void *)(v2 + 16);
        uint64_t v5 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR___HMDDiscoveryController_assertions);
        swift_retain();
        os_unfair_lock_lock(v5 + 6);
        sub_1D4A5BD68((uint64_t)&v5[4], &v7);
        os_unfair_lock_unlock(v5 + 6);
        BOOL v6 = v7;
        swift_release();
        sub_1D4A579C8(v4);
        if (v6) {
          sub_1D4A57468();
        }
        swift_unknownObjectRelease();
      }
      *(void *)(v2 + 32) = 0;
      swift_unknownObjectWeakAssign();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4A5CE30()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4A5CE70()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_1D4A5D228;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA70F6E8 + dword_1EA70F6E8);
  return v5(v2, v3);
}

uint64_t sub_1D4A5CF20()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_1D4A5D228;
  BOOL v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EA70F730 + dword_1EA70F730);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_9Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D4A5D024(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  BOOL v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_1D4A5D0F0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EA70F738 + dword_1EA70F738);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1D4A5D0F0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *__swift_project_boxed_opaque_existential_0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

id HMDWidgetMonitoredCharacteristic.characteristic.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_characteristic);
}

uint64_t HMDWidgetMonitoredCharacteristic.reachabilityMonitored.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_reachabilityMonitored);
}

id HMDWidgetMonitoredCharacteristic.__allocating_init(characteristic:reachabilityMonitored:)(uint64_t a1, char a2)
{
  uint64_t v5 = objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_characteristic] = a1;
  v5[OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_reachabilityMonitored] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id HMDWidgetMonitoredCharacteristic.init(characteristic:reachabilityMonitored:)(uint64_t a1, char a2)
{
  *(void *)&v2[OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_characteristic] = a1;
  v2[OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_reachabilityMonitored] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for HMDWidgetMonitoredCharacteristic();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for HMDWidgetMonitoredCharacteristic()
{
  return self;
}

uint64_t HMDWidgetMonitoredCharacteristic.hash.getter()
{
  return sub_1D5459E28();
}

uint64_t HMDWidgetMonitoredCharacteristic.isEqual(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1D4A5D504(a1, (uint64_t)v10);
  if (!v11)
  {
    sub_1D4A5D56C((uint64_t)v10);
    goto LABEL_7;
  }
  type metadata accessor for HMDWidgetMonitoredCharacteristic();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    char v7 = 0;
    return v7 & 1;
  }
  sub_1D4A5D5CC();
  id v3 = *(id *)&v9[OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_characteristic];
  char v4 = sub_1D5459E18();

  if ((v4 & 1) == 0)
  {

    goto LABEL_7;
  }
  char v5 = *(unsigned char *)(v2 + OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_reachabilityMonitored);
  char v6 = v9[OBJC_IVAR____TtC19HomeKitDaemonLegacy32HMDWidgetMonitoredCharacteristic_reachabilityMonitored];

  char v7 = v5 ^ v6 ^ 1;
  return v7 & 1;
}

uint64_t sub_1D4A5D504(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD99A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4A5D56C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD99A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D4A5D5CC()
{
  unint64_t result = qword_1EBD99B90;
  if (!qword_1EBD99B90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBD99B90);
  }
  return result;
}

id HMDWidgetMonitoredCharacteristic.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void HMDWidgetMonitoredCharacteristic.init()()
{
}

id HMDWidgetMonitoredCharacteristic.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HMDWidgetMonitoredCharacteristic();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D4A5D75C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99608);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D5459878();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v48 = (char *)&v41 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99828);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for NetworkDetectAccessory();
  uint64_t v46 = *(void *)(v49 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v49);
  uint64_t v56 = (uint64_t)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v45 = (uint64_t)&v41 - v17;
  id result = objc_msgSend(*a1, sel_appleMediaAccessories);
  if (!result)
  {
LABEL_26:
    __break(1u);
    return result;
  }
  uint64_t v19 = result;
  sub_1D4A51CAC(0, &qword_1EBD999C8);
  unint64_t v20 = sub_1D5459C68();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)sub_1D545A008();
    uint64_t v21 = (uint64_t)result;
    if (result) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v21)
    {
LABEL_4:
      if (v21 >= 1)
      {
        uint64_t v22 = 0;
        id v57 = (void (**)(char *, char *, uint64_t))(v7 + 32);
        os_log_type_t v52 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        unint64_t v53 = v20 & 0xC000000000000001;
        uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
        id v42 = (void (**)(char *, uint64_t))(v7 + 8);
        uint64_t v43 = (void (**)(char *, char *, uint64_t))(v7 + 16);
        long long v50 = (unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
        int v51 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
        unint64_t v58 = MEMORY[0x1E4FBC860];
        uint64_t v23 = v49;
        uint64_t v54 = v21;
        unint64_t v55 = v20;
        uint64_t v44 = v5;
        while (1)
        {
          id v24 = v53 ? (id)MEMORY[0x1D944FAD0](v22, v20) : *(id *)(v20 + 8 * v22 + 32);
          id v25 = v24;
          id v26 = objc_msgSend(v24, sel_idsIdentifier, v41);
          if (!v26) {
            break;
          }
          uint64_t v27 = v26;
          sub_1D5459858();

          uint64_t v28 = *v57;
          (*v57)(v5, v10, v6);
          (*v52)(v5, 0, 1, v6);
          if ((*v47)(v5, 1, v6) == 1) {
            goto LABEL_15;
          }
          v28(v48, v5, v6);
          id v29 = objc_msgSend(v25, sel_uuid);
          sub_1D5459858();

          id v30 = objc_msgSend(v25, sel_identifier);
          uint64_t v31 = sub_1D5459BE8();
          uint64_t v33 = v32;

          v28(v14, v10, v6);
          uint64_t v34 = v48;
          (*v43)(&v14[*(int *)(v49 + 20)], v48, v6);
          uint64_t v35 = (uint64_t *)&v14[*(int *)(v49 + 24)];
          *uint64_t v35 = v31;
          v35[1] = v33;
          char v5 = v44;
          uint64_t v23 = v49;
          (*v42)(v34, v6);
          (*v51)(v14, 0, 1, v23);
LABEL_16:

          if ((*v50)(v14, 1, v23) == 1)
          {
            sub_1D4A51D64((uint64_t)v14, &qword_1EBD99828);
            unint64_t v20 = v55;
          }
          else
          {
            uint64_t v36 = v45;
            sub_1D4A5FFB4((uint64_t)v14, v45);
            sub_1D4A5FFB4(v36, v56);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v20 = v55;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              unint64_t v58 = sub_1D4A6552C(0, *(void *)(v58 + 16) + 1, 1, v58);
            }
            unint64_t v39 = *(void *)(v58 + 16);
            unint64_t v38 = *(void *)(v58 + 24);
            if (v39 >= v38 >> 1) {
              unint64_t v58 = sub_1D4A6552C(v38 > 1, v39 + 1, 1, v58);
            }
            unint64_t v40 = v58;
            *(void *)(v58 + 16) = v39 + 1;
            sub_1D4A5FFB4(v56, v40+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v39);
          }
          if (v54 == ++v22) {
            goto LABEL_24;
          }
        }
        (*v52)(v5, 1, 1, v6);
LABEL_15:
        sub_1D4A51D64((uint64_t)v5, &qword_1EBD99608);
        (*v51)(v14, 1, 1, v23);
        goto LABEL_16;
      }
      __break(1u);
      goto LABEL_26;
    }
  }
  unint64_t v58 = MEMORY[0x1E4FBC860];
LABEL_24:
  id result = (id)swift_bridgeObjectRelease_n();
  *uint64_t v41 = v58;
  return result;
}

uint64_t sub_1D4A5DD9C(unint64_t a1)
{
  int64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_36;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1D545A008())
  {
    unint64_t v29 = v2 & 0xC000000000000001;
    unint64_t v4 = MEMORY[0x1E4FBC860];
    uint64_t v5 = 4;
    int64_t v28 = v2;
    while (1)
    {
      id v6 = v29 ? (id)MEMORY[0x1D944FAD0](v5 - 4, v2) : *(id *)(v2 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v31 = v6;
      sub_1D4A5D75C(&v31, &v30);
      if (v1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v4;
      }

      uint64_t v9 = v30;
      uint64_t v10 = *(void *)(v30 + 16);
      int64_t v11 = *(void *)(v4 + 16);
      int64_t v2 = v11 + v10;
      if (__OFADD__(v11, v10)) {
        goto LABEL_32;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v2 <= *(void *)(v4 + 24) >> 1)
      {
        if (*(void *)(v9 + 16)) {
          goto LABEL_20;
        }
      }
      else
      {
        if (v11 <= v2) {
          int64_t v13 = v11 + v10;
        }
        else {
          int64_t v13 = v11;
        }
        unint64_t v4 = sub_1D4A6552C(isUniquelyReferenced_nonNull_native, v13, 1, v4);
        if (*(void *)(v9 + 16))
        {
LABEL_20:
          uint64_t v14 = *(void *)(v4 + 16);
          int64_t v2 = (*(void *)(v4 + 24) >> 1) - v14;
          uint64_t v15 = *(void *)(type metadata accessor for NetworkDetectAccessory() - 8);
          uint64_t v16 = *(void *)(v15 + 72);
          if (v2 < v10) {
            goto LABEL_34;
          }
          unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
          unint64_t v18 = v4 + v17 + v16 * v14;
          unint64_t v19 = v9 + v17;
          uint64_t v20 = v16 * v10;
          unint64_t v21 = v18 + v20;
          unint64_t v22 = v19 + v20;
          if (v19 < v21 && v18 < v22)
          {
            uint64_t result = sub_1D545A048();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v10)
          {
            uint64_t v24 = *(void *)(v4 + 16);
            BOOL v25 = __OFADD__(v24, v10);
            uint64_t v26 = v24 + v10;
            if (v25) {
              goto LABEL_35;
            }
            *(void *)(v4 + 16) = v26;
          }
          goto LABEL_5;
        }
      }
      if (v10) {
        goto LABEL_33;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      ++v5;
      int64_t v2 = v28;
      if (v8 == v3)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void sub_1D4A5E050(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F768);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)sub_1D5459838();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  void aBlock[4] = sub_1D4A5FF18;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D4A5E254;
  aBlock[3] = &block_descriptor_1;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchSetupDiagnosticStateForAccessoryUUID_completion_, v7, v10);
  _Block_release(v10);
}

uint64_t sub_1D4A5E20C(void *a1)
{
  id v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F768);
  return sub_1D5459CE8();
}

void sub_1D4A5E254(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1D4A5E2E0()
{
  id v0 = objc_msgSend(self, sel_driver);
  id v1 = (void *)sub_1D4A69B00();

  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = sub_1D4A54E9C();

  return v2;
}

id sub_1D4A5E354()
{
  id result = objc_msgSend(v0, sel_homes);
  if (result)
  {
    uint64_t v2 = result;
    sub_1D4A51CAC(0, &qword_1EBD999D0);
    unint64_t v3 = sub_1D5459C68();

    uint64_t v4 = sub_1D4A5DD9C(v3);
    swift_bridgeObjectRelease();
    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D4A5E3EC(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1D4A5E40C, 0, 0);
}

uint64_t sub_1D4A5E40C()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 4_Block_object_dispose(&STACK[0x368], 8) = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F760);
  void *v2 = v0;
  v2[1] = sub_1D4A5E514;
  return MEMORY[0x1F41880D8](v0 + 16, 0, 0, 0xD000000000000023, 0x80000001D54D6000, sub_1D4A5FE7C, v1, v3);
}

uint64_t sub_1D4A5E514()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D4A5E62C, 0, 0);
}

uint64_t sub_1D4A5E62C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1D4A5E644(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x1F4188298](sub_1D4A5E664, 0, 0);
}

uint64_t sub_1D4A5E664()
{
  uint64_t v1 = (objc_class *)type metadata accessor for NetworkMismatchDetector();
  uint64_t v2 = (char *)objc_allocWithZone(v1);
  *(void *)&v2[OBJC_IVAR____TtC19HomeKitDaemonLegacy23NetworkMismatchDetector_dataSource + 8] = 0;
  *(void *)(swift_unknownObjectWeakInit() + _Block_object_dispose(&STACK[0x368], 8) = &off_1F2C8C048;
  swift_unknownObjectWeakAssign();
  v0[1].receiver = v2;
  v0[1].super_class = v1;
  v0[3].receiver = objc_msgSendSuper2(v0 + 1, sel_init);
  uint64_t v3 = (objc_class *)swift_task_alloc();
  v0[3].super_class = v3;
  *(void *)uint64_t v3 = v0;
  *((void *)v3 + 1) = sub_1D4A5E760;
  return sub_1D4A73D48();
}

uint64_t sub_1D4A5E760(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D4A5E860, 0, 0);
}

uint64_t sub_1D4A5E860()
{
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = (void *)v0[4];
  uint64_t v3 = sub_1D4A7B7AC(v2, v0[8]);
  swift_bridgeObjectRelease();
  id v4 = v2;
  uint64_t v5 = sub_1D4A5FC80(v3, v4);

  swift_bridgeObjectRelease();
  size_t v6 = sub_1D4A5A8D0(v5);
  swift_release();

  id v7 = (uint64_t (*)(size_t))v0[1];
  return v7(v6);
}

uint64_t sub_1D4A5EAAC(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  id v7 = a3;
  unint64_t v8 = (void *)swift_task_alloc();
  v3[5] = v8;
  void *v8 = v3;
  v8[1] = sub_1D4A5EB88;
  void v8[4] = v6;
  v8[5] = v7;
  return MEMORY[0x1F4188298](sub_1D4A5E664, 0, 0);
}

uint64_t sub_1D4A5EB88()
{
  uint64_t v1 = *(void (***)(void, void))(*v0 + 32);
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v3 = *(void **)(*v0 + 16);
  uint64_t v7 = *v0;
  swift_task_dealloc();

  sub_1D5459878();
  id v4 = (void *)sub_1D5459C48();
  swift_bridgeObjectRelease();
  ((void (**)(void, void *))v1)[2](v1, v4);

  _Block_release(v1);
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

uint64_t sub_1D4A5ED0C()
{
  _Block_release(*(const void **)(v0 + 24));
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D4A5ED54()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  id v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_1D4A5D228;
  id v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_1EA70F720 + dword_1EA70F720);
  return v6(v2, v3, v4);
}

uint64_t sub_1D4A5EE08(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  void *v4 = v3;
  v4[1] = sub_1D4A5D228;
  return v6();
}

uint64_t sub_1D4A5EED8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  void *v5 = v4;
  v5[1] = sub_1D4A5D228;
  return v7();
}

uint64_t sub_1D4A5EFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5459D28();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1D5459D18();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1D4A51D64(a1, &qword_1EBD99988);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D5459CC8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1D4A5F154(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1D4A5F230;
  return v6(a1);
}

uint64_t sub_1D4A5F230()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D4A5F328()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4A5F360(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1D4A5D0F0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA70F740 + dword_1EA70F740);
  return v6(a1, v4);
}

uint64_t sub_1D4A5F418(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v50 = sub_1D5459878();
  uint64_t v45 = *(void *)(v50 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v50);
  uint64_t v49 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v44 = (char *)&v39 - v10;
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F758);
  uint64_t result = sub_1D545A038();
  uint64_t v12 = result;
  unint64_t v40 = a1;
  uint64_t v41 = a2;
  if (a2 < 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = *a1;
  }
  uint64_t v14 = 0;
  id v42 = a4;
  uint64_t v43 = v45 + 16;
  uint64_t v48 = v45 + 32;
  uint64_t v15 = result + 64;
  uint64_t v16 = v50;
  while (1)
  {
    if (v13)
    {
      uint64_t v46 = (v13 - 1) & v13;
      uint64_t v47 = v14;
      unint64_t v17 = __clz(__rbit64(v13)) | (v14 << 6);
    }
    else
    {
      uint64_t v18 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_40;
      }
      if (v18 >= v41) {
        return v12;
      }
      unint64_t v19 = v40[v18];
      uint64_t v20 = v14 + 1;
      if (!v19)
      {
        uint64_t v20 = v14 + 2;
        if (v14 + 2 >= v41) {
          return v12;
        }
        unint64_t v19 = v40[v20];
        if (!v19)
        {
          uint64_t v20 = v14 + 3;
          if (v14 + 3 >= v41) {
            return v12;
          }
          unint64_t v19 = v40[v20];
          if (!v19)
          {
            uint64_t v21 = v14 + 4;
            if (v14 + 4 >= v41) {
              return v12;
            }
            unint64_t v19 = v40[v21];
            if (!v19)
            {
              while (1)
              {
                uint64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v20 >= v41) {
                  return v12;
                }
                unint64_t v19 = v40[v20];
                ++v21;
                if (v19) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v20 = v14 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v46 = (v19 - 1) & v19;
      uint64_t v47 = v20;
      unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
    }
    uint64_t v23 = v44;
    uint64_t v22 = v45;
    uint64_t v24 = *(void *)(v45 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v44, a4[6] + v24 * v17, v16);
    uint64_t v25 = a4[7] + 24 * v17;
    long long v51 = *(_OWORD *)v25;
    uint64_t v26 = *(void **)(v25 + 16);
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v27(v49, v23, v16);
    sub_1D4A5FE24();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v28 = v26;
    uint64_t result = sub_1D5459B98();
    uint64_t v29 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v32 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v35 = v31 == v34;
        if (v31 == v34) {
          unint64_t v31 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v15 + 8 * v31);
      }
      while (v36 == -1);
      unint64_t v32 = __clz(__rbit64(~v36)) + (v31 << 6);
    }
    *(void *)(v15 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(*(void *)(v12 + 48) + v32 * v24, v49, v50);
    uint64_t v37 = *(void *)(v12 + 56) + 24 * v32;
    *(_OWORD *)uint64_t v37 = v51;
    *(void *)(v37 + 16) = v26;
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v42;
    unint64_t v13 = v46;
    uint64_t v14 = v47;
    if (!a3) {
      return v12;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

size_t sub_1D4A5F7F4()
{
  id v0 = objc_msgSend(self, sel_driver);
  uint64_t v1 = (char *)sub_1D4A69B00();

  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = *(void *)&v1[OBJC_IVAR___HMDDiscoveryController_visibleSFDevices];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
  sub_1D4A552D4((void *)(v2 + 16), &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
  uint64_t v3 = v6;
  swift_release();
  size_t v4 = sub_1D4A5A77C(v3);

  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D4A5F8D4(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v35 = a2;
  uint64_t v47 = a4;
  uint64_t v36 = a1;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD995F0);
  MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1D5459878();
  uint64_t result = MEMORY[0x1F4188790](v44);
  id v42 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v7;
  int64_t v9 = 0;
  uint64_t v49 = (void *)a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v37 = 0;
  uint64_t v38 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v41 = v7 + 16;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v40 = v7 + 8;
  uint64_t v14 = v7;
  uint64_t v15 = v42;
  uint64_t v16 = v44;
  while (1)
  {
    if (v13)
    {
      uint64_t v50 = (v13 - 1) & v13;
      int64_t v51 = v9;
      unint64_t v17 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v29 >= v39) {
      return sub_1D4A5F418(v36, v35, v37, v49);
    }
    unint64_t v30 = *(void *)(v38 + 8 * v29);
    int64_t v31 = v9 + 1;
    if (!v30)
    {
      int64_t v31 = v9 + 2;
      if (v9 + 2 >= v39) {
        return sub_1D4A5F418(v36, v35, v37, v49);
      }
      unint64_t v30 = *(void *)(v38 + 8 * v31);
      if (!v30)
      {
        int64_t v31 = v9 + 3;
        if (v9 + 3 >= v39) {
          return sub_1D4A5F418(v36, v35, v37, v49);
        }
        unint64_t v30 = *(void *)(v38 + 8 * v31);
        if (!v30) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v50 = (v30 - 1) & v30;
    int64_t v51 = v31;
    unint64_t v17 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_5:
    uint64_t v18 = v49;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
    v19(v15, v49[6] + *(void *)(v14 + 72) * v17, v16);
    uint64_t v20 = v18[7];
    unint64_t v48 = v17;
    uint64_t v21 = (uint64_t *)(v20 + 24 * v17);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = (void *)v21[2];
    uint64_t v25 = (uint64_t)v45;
    v19(v45, (unint64_t)v15, v16);
    uint64_t v26 = (void *)(v25 + *(int *)(v46 + 48));
    void *v26 = v22;
    v26[1] = v23;
    v26[2] = v24;
    id v27 = v24;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v28 = v27;
    LOBYTE(v24) = sub_1D4A7BF60(v47, v23, v24);
    sub_1D4A51D64(v25, &qword_1EBD995F0);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v15, v16);
    int64_t v9 = v51;
    unint64_t v13 = v50;
    if ((v24 & 1) == 0)
    {
      *(unint64_t *)((char *)v36 + ((v48 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v48;
      if (__OFADD__(v37++, 1))
      {
        __break(1u);
        return sub_1D4A5F418(v36, v35, v37, v49);
      }
    }
  }
  uint64_t v32 = v9 + 4;
  if (v9 + 4 >= v39) {
    return sub_1D4A5F418(v36, v35, v37, v49);
  }
  unint64_t v30 = *(void *)(v38 + 8 * v32);
  if (v30)
  {
    int64_t v31 = v9 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v31 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v31 >= v39) {
      return sub_1D4A5F418(v36, v35, v37, v49);
    }
    unint64_t v30 = *(void *)(v38 + 8 * v31);
    ++v32;
    if (v30) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1D4A5FC80(uint64_t a1, void *a2)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  uint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    int64_t v9 = (char *)v15 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    uint64_t v11 = sub_1D4A5F8D4((unint64_t *)v9, v6, a1, v10);

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, 8 * v6);
    id v13 = v8;
    uint64_t v11 = sub_1D4A5F8D4((unint64_t *)v12, v6, a1, v13);

    MEMORY[0x1D9452B60](v12, -1, -1);
  }
  return v11;
}

unint64_t sub_1D4A5FE24()
{
  unint64_t result = qword_1EBD99600;
  if (!qword_1EBD99600)
  {
    sub_1D5459878();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD99600);
  }
  return result;
}

void sub_1D4A5FE7C(uint64_t a1)
{
  sub_1D4A5E050(a1, *(void **)(v1 + 16));
}

uint64_t sub_1D4A5FE84()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F768);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D4A5FF18(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F768);
  return sub_1D4A5E20C(a1);
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1D4A5FFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkDetectAccessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1D4A60018()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F798);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D5459978();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5459A48();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v40 - v12;
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2E5A8]), sel_init);
  if (v14)
  {
    uint64_t v40 = v6;
    uint64_t v41 = v4;
    sub_1D5459898();
    uint64_t v15 = (void *)sub_1D5459BC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_setMacAddress_, v15);

    sub_1D54598D8();
    uint64_t v16 = (void *)sub_1D5459BC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_setIfaceName_, v16);

    sub_1D54598E8();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    int v17 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
    if (v17 != *MEMORY[0x1E4F64D30] && v17 != *MEMORY[0x1E4F64D38] && v17 != *MEMORY[0x1E4F64D40]) {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v18 = (void *)sub_1D5459BC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_setType_, v18);

    uint64_t v19 = sub_1D54598A8();
    sub_1D4A60594(v19);
    swift_bridgeObjectRelease();
    id v20 = objc_allocWithZone(MEMORY[0x1E4F1CA48]);
    uint64_t v21 = (void *)sub_1D5459C48();
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(v20, sel_initWithArray_, v21);

    objc_msgSend(v14, sel_setIpv4Addresses_, v22);
    uint64_t v23 = sub_1D54598B8();
    sub_1D4A60594(v23);
    swift_bridgeObjectRelease();
    id v24 = objc_allocWithZone(MEMORY[0x1E4F1CA48]);
    uint64_t v25 = (void *)sub_1D5459C48();
    swift_bridgeObjectRelease();
    id v26 = objc_msgSend(v24, sel_initWithArray_, v25);

    objc_msgSend(v14, sel_setIpv6Addresses_, v26);
    sub_1D5459888();
    uint64_t v27 = v41;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v2, 1, v3) == 1)
    {
      sub_1D4A66E38((uint64_t)v2);
    }
    else
    {
      id v28 = v40;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v40, v2, v3);
      id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2E5A0]), sel_init);
      if (v29)
      {
        unint64_t v30 = v29;
        uint64_t v31 = sub_1D5459948();
        unint64_t v33 = v32;
        uint64_t v34 = (void *)sub_1D54597E8();
        sub_1D4A66E98(v31, v33);
        objc_msgSend(v30, sel_setSsid_, v34);

        uint64_t v35 = sub_1D5459968();
        unint64_t v37 = v36;
        uint64_t v38 = (void *)sub_1D54597E8();
        sub_1D4A66E98(v35, v37);
        objc_msgSend(v30, sel_setBssid_, v38);

        objc_msgSend(v14, sel_setWifiInfo_, v30);
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v3);
    }
  }
  return v14;
}

uint64_t sub_1D4A60594(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1D4A7A56C(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D4A7A56C(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1D4A7A56C(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_1D4A51C94(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1D4A606BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F798);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5459A48();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(a1, sel_ifaceName);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_1D5459BE8();

    id v14 = objc_msgSend(a1, sel_type);
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v38 = v13;
      uint64_t v16 = sub_1D5459BE8();
      uint64_t v18 = v17;

      id v19 = objc_msgSend(a1, sel_macAddress);
      if (v19)
      {
        id v20 = v19;
        uint64_t v35 = a2;
        uint64_t v21 = sub_1D5459BE8();
        uint64_t v36 = v22;
        uint64_t v37 = v21;

        if (v16 == 0x74656E7265687465 && v18 == 0xE800000000000000 || (sub_1D545A078() & 1) != 0)
        {
          uint64_t v23 = (unsigned int *)MEMORY[0x1E4F64D38];
          uint64_t v24 = v35;
        }
        else
        {
          uint64_t v23 = (unsigned int *)MEMORY[0x1E4F64D40];
          uint64_t v24 = v35;
          if ((v16 != 0x3132303865656569 || v18 != 0xE900000000000031) && (sub_1D545A078() & 1) == 0) {
            uint64_t v23 = (unsigned int *)MEMORY[0x1E4F64D30];
          }
        }
        (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *v23, v7);
        swift_bridgeObjectRelease();
        id v25 = objc_msgSend(a1, sel_ipv4Addresses);
        if (!v25 || (id v26 = v25, v39 = 0, sub_1D5459C58(), v26, !v39)) {
          swift_bridgeObjectRelease();
        }
        id v27 = objc_msgSend(a1, sel_ipv6Addresses);
        if (!v27 || (id v28 = v27, v39 = 0, sub_1D5459C58(), v28, !v39)) {
          swift_bridgeObjectRelease();
        }
        uint64_t v29 = sub_1D5459978();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 1, 1, v29);
        sub_1D54598C8();
        uint64_t v30 = sub_1D54598F8();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v24, 0, 1, v30);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = sub_1D54598F8();
  unint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
  return v33(a2, 1, 1, v32);
}

id sub_1D4A60B28()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2E5B0]), sel_init);
  if (v0)
  {
    sub_1D54599A8();
    int64_t v1 = (void *)sub_1D5459BC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setIfaceName_, v1);

    objc_msgSend(v0, sel_setIsPrimary_, sub_1D5459A18() & 1);
    sub_1D54599F8();
    if (v2)
    {
      uint64_t v3 = (void *)sub_1D5459BC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setConfirmedIfaceName_, v3);
    }
    uint64_t v4 = sub_1D54599B8();
    sub_1D4A60594(v4);
    swift_bridgeObjectRelease();
    id v5 = objc_allocWithZone(MEMORY[0x1E4F1CA48]);
    unint64_t v6 = (void *)sub_1D5459C48();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v5, sel_initWithArray_, v6);

    objc_msgSend(v0, sel_setIpv4Addresses_, v7);
    uint64_t v8 = sub_1D54599C8();
    sub_1D4A60594(v8);
    swift_bridgeObjectRelease();
    id v9 = objc_allocWithZone(MEMORY[0x1E4F1CA48]);
    uint64_t v10 = (void *)sub_1D5459C48();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v9, sel_initWithArray_, v10);

    objc_msgSend(v0, sel_setIpv6Addresses_, v11);
    sub_1D54599D8();
    if (v12)
    {
      uint64_t v13 = (void *)sub_1D5459BC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setNetworkSignatureV4_, v13);
    }
    sub_1D5459988();
    if (v14)
    {
      uint64_t v15 = (void *)sub_1D5459BC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setRouterIPv4_, v15);
    }
    sub_1D54599E8();
    if (v16)
    {
      uint64_t v17 = (void *)sub_1D5459BC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setNetworkSignatureV6_, v17);
    }
    sub_1D5459998();
    if (v18)
    {
      id v19 = (void *)sub_1D5459BC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setRouterIPv6_, v19);
    }
  }
  return v0;
}

uint64_t sub_1D4A60DB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_ifaceName);
  if (v4)
  {
    id v5 = v4;
    sub_1D5459BE8();

    objc_msgSend(a1, sel_isPrimary);
    id v6 = objc_msgSend(a1, sel_confirmedIfaceName);
    if (v6)
    {
      id v7 = v6;
      sub_1D5459BE8();
    }
    id v13 = objc_msgSend(a1, sel_ipv4Addresses);
    if (v13)
    {
      uint64_t v14 = v13;
      sub_1D5459C58();
    }
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(a1, sel_routerIPv4);
    if (v15)
    {
      uint64_t v16 = v15;
      sub_1D5459BE8();
    }
    id v17 = objc_msgSend(a1, sel_networkSignatureV4);
    if (v17)
    {
      uint64_t v18 = v17;
      sub_1D5459BE8();
    }
    id v19 = objc_msgSend(a1, sel_ipv6Addresses);
    if (v19)
    {
      id v20 = v19;
      sub_1D5459C58();
    }
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(a1, sel_routerIPv6);
    if (v21)
    {
      uint64_t v22 = v21;
      sub_1D5459BE8();
    }
    id v23 = objc_msgSend(a1, sel_networkSignatureV6);
    if (v23)
    {
      uint64_t v24 = v23;
      sub_1D5459BE8();
    }
    sub_1D5459A08();
    uint64_t v25 = sub_1D5459A28();
    id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    uint64_t v10 = v25;
    uint64_t v11 = a2;
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v8 = sub_1D5459A28();
    id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v10 = v8;
    uint64_t v11 = a2;
    uint64_t v12 = 1;
  }
  return v9(v11, v12, 1, v10);
}

void __swiftcall InterfaceInfo.init(name:type:hwAddr:)(HomeKitDaemonLegacy::InterfaceInfo *__return_ptr retstr, Swift::String name, Swift::String type, Swift::String hwAddr)
{
  retstr->name = name;
  retstr->type = type;
  retstr->hwAddr = hwAddr;
}

unint64_t sub_1D4A610E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7A8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7B0);
  uint64_t v6 = sub_1D545A038();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D4A67480(v12, (uint64_t)v5, &qword_1EA70F7A8);
    unint64_t result = sub_1D4A65B98((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1D5459878();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D4A612D4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD99610);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F758);
  uint64_t v6 = sub_1D545A038();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D4A67480(v12, (uint64_t)v5, (uint64_t *)&unk_1EBD99610);
    unint64_t result = sub_1D4A65B98((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1D5459878();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7] + 24 * v16;
    uint64_t v20 = *((void *)v9 + 2);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v9;
    *(void *)(v19 + 16) = v20;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    void v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D4A614DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F780);
  uint64_t v2 = (void *)sub_1D545A038();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_1D4A65B20(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D4A615F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7C8);
  uint64_t v2 = (void *)sub_1D545A038();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1D4A65B20(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D4A61714(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7C0);
  uint64_t v2 = (void *)sub_1D545A038();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1D4A65B20(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D4A61830(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7F0);
  uint64_t v2 = sub_1D545A038();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D4A67480(v6, (uint64_t)&v15, &qword_1EA70F7F8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1D4A65B20(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_1D4A5BF0C(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1D4A61974()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

CFStringRef sub_1D4A6198C(CFStringRef domain, CFStringRef ifname, CFStringRef entity)
{
  return SCDynamicStoreKeyCreateNetworkInterfaceEntity((CFAllocatorRef)*MEMORY[0x1E4F1CF80], domain, ifname, entity);
}

uint64_t sub_1D4A619AC(const __SCDynamicStore *a1, const __CFString *a2)
{
  CFArrayRef v2 = SCDynamicStoreCopyKeyList(a1, a2);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    CFArrayRef v4 = v2;
    type metadata accessor for CFString(0);
    sub_1D5459C58();
  }
  return v3;
}

void sub_1D4A61A14()
{
  static NetworkInfoController.NetworkInfoKey = 0x496B726F7774654ELL;
  unk_1EA722AA0 = 0xEB000000006F666ELL;
}

uint64_t *NetworkInfoController.NetworkInfoKey.unsafeMutableAddressor()
{
  if (qword_1EA70F328 != -1) {
    swift_once();
  }
  return &static NetworkInfoController.NetworkInfoKey;
}

uint64_t static NetworkInfoController.NetworkInfoKey.getter()
{
  if (qword_1EA70F328 != -1) {
    swift_once();
  }
  uint64_t v0 = static NetworkInfoController.NetworkInfoKey;
  swift_bridgeObjectRetain();
  return v0;
}

void *NetworkInfoController.NetworkServiceInfoKey.unsafeMutableAddressor()
{
  return &static NetworkInfoController.NetworkServiceInfoKey;
}

unint64_t static NetworkInfoController.NetworkServiceInfoKey.getter()
{
  return 0xD000000000000012;
}

id NetworkInfoController.__allocating_init(dataSource:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  id v6 = sub_1D4A6679C(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

id NetworkInfoController.init(dataSource:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  id v9 = sub_1D4A66080((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

id NetworkInfoController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id NetworkInfoController.init()()
{
  type metadata accessor for NetworkInfoSCDataSource();
  uint64_t v0 = swift_allocObject();
  id v1 = sub_1D4A668A8(v0);
  swift_release();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v1;
}

id NetworkInfoController.__deallocating_deinit()
{
  id v1 = *(void **)&v0[OBJC_IVAR___HMDNetworkInfoController_store];
  *(void *)&v0[OBJC_IVAR___HMDNetworkInfoController_store] = 0;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for NetworkInfoController();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

Swift::Void __swiftcall NetworkInfoController.start()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___HMDNetworkInfoController_dataSource + 24);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___HMDNetworkInfoController_dataSource + 32);
  __swift_project_boxed_opaque_existential_0((void *)(v0 + OBJC_IVAR___HMDNetworkInfoController_dataSource), v1);
  uint64_t v6 = v0;
  uint64_t v3 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t (*)(), uint64_t *, uint64_t, uint64_t))(v2 + 8))(0xD000000000000015, 0x80000001D54C38E0, sub_1D4A669F8, &v5, v1, v2);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR___HMDNetworkInfoController_store);
  *(void *)(v0 + OBJC_IVAR___HMDNetworkInfoController_store) = v3;
}

void sub_1D4A620C8()
{
  uint64_t v1 = v0;
  uint64_t v287 = sub_1D5459A28();
  uint64_t v290 = *(void *)(v287 - 8);
  MEMORY[0x1F4188790](v287);
  uint64_t v3 = (char *)v279 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v299 = sub_1D54598F8();
  uint64_t v300 = *(void *)(v299 - 8);
  MEMORY[0x1F4188790](v299);
  uint64_t v5 = (__CFString *)((char *)v279 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F798);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v297 = (uint64_t)v279 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v318 = (void *)((char *)v279 - v9);
  uint64_t v310 = sub_1D5459A48();
  uint64_t v10 = *(void *)(v310 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v310);
  v308 = (char *)v279 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  v311 = (char *)v279 - v13;
  uint64_t v14 = *(void **)(v1 + OBJC_IVAR___HMDNetworkInfoController_store);
  if (!v14)
  {
    v130 = sub_1D5459AD8();
    os_log_type_t v131 = sub_1D5459D88();
    if (os_log_type_enabled(v130, v131))
    {
      v132 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v132 = 0;
      _os_log_impl(&dword_1D49D5000, v130, v131, "No store", v132, 2u);
      MEMORY[0x1D9452B60](v132, -1, -1);
    }

    return;
  }
  v280 = v3;
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR___HMDNetworkInfoController_dataSource + 24);
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR___HMDNetworkInfoController_dataSource + 32);
  v319 = (void *)(v1 + OBJC_IVAR___HMDNetworkInfoController_dataSource);
  __swift_project_boxed_opaque_existential_0((void *)(v1 + OBJC_IVAR___HMDNetworkInfoController_dataSource), v15);
  long long v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 16);
  id v321 = v14;
  uint64_t v18 = v17(v15, v16);
  uint64_t v20 = *(void *)(v18 + 16);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    v139 = sub_1D5459AD8();
    uint64_t v140 = sub_1D5459D88();
    if (os_log_type_enabled(v139, (os_log_type_t)v140))
    {
      v141 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v141 = 0;
      _os_log_impl(&dword_1D49D5000, v139, (os_log_type_t)v140, "Couldn't obtain interfaces", v141, 2u);
      MEMORY[0x1D9452B60](v141, -1, -1);
    }

    return;
  }
  v328 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v329 = MEMORY[0x1E4FBC860];
  uint64_t v301 = v1 + OBJC_IVAR___HMDNetworkInfoController_logger;
  LODWORD(v309) = *MEMORY[0x1E4F64D40];
  BOOL v22 = *(void (**)(void, void, void))(v10 + 104);
  uint64_t v21 = v10 + 104;
  v316 = (void (*)(char *, void, uint64_t))v22;
  v315 = (void (**)(char *, uint64_t))(v21 - 96);
  unsigned int v286 = *MEMORY[0x1E4F64D38];
  CFStringRef v314 = (CFStringRef)*MEMORY[0x1E4F41AC8];
  v285 = &v323;
  uint64_t v317 = v21;
  v294 = (__CFString *)(v21 - 88);
  uint64_t v293 = v300 + 32;
  v279[1] = v18;
  uint64_t v23 = (unint64_t *)(v18 + 72);
  CFStringRef v298 = (CFStringRef)*MEMORY[0x1E4F41B10];
  uint64_t v289 = *MEMORY[0x1E4F41C60];
  v296 = (__CFString *)*MEMORY[0x1E4F41B18];
  uint64_t v281 = MEMORY[0x1E4FBC838] + 8;
  uint64_t v288 = *MEMORY[0x1E4F41CC0];
  uint64_t v284 = *MEMORY[0x1E4F41AF0];
  uint64_t v283 = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v19 = 136316162;
  long long v282 = v19;
  v295 = v5;
  uint64_t v24 = v310;
  uint64_t v25 = v311;
  do
  {
    id v27 = (void *)*(v23 - 5);
    unint64_t v26 = *(v23 - 4);
    uint64_t v29 = (void *)*(v23 - 3);
    unint64_t v28 = *(v23 - 2);
    uint64_t v30 = *(v23 - 1);
    unint64_t v31 = *v23;
    v316(v25, v309, v24);
    BOOL v32 = v29 == (void *)0x3132303845454549 && v28 == 0xE900000000000031;
    v312 = v29;
    uint64_t v307 = v20;
    v306 = v23;
    uint64_t v313 = v30;
    if (!v32)
    {
      char v33 = sub_1D545A078();
      uint64_t v34 = v312;
      if ((v33 & 1) == 0 && (v312 != (void *)0x74656E7265687445 || v28 != 0xE800000000000000))
      {
        char v36 = sub_1D545A078();
        uint64_t v34 = v312;
        if ((v36 & 1) == 0)
        {
          (*v315)(v25, v24);
          goto LABEL_57;
        }
      }
      if (v34 == (void *)0x74656E7265687445 && v28 == 0xE800000000000000) {
        goto LABEL_19;
      }
    }
    if (sub_1D545A078())
    {
LABEL_19:
      uint64_t v38 = *v315;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v25, v24);
      v316(v25, v286, v24);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v324 = MEMORY[0x1E4FBC860];
    uint64_t v323 = MEMORY[0x1E4FBC860];
    uint64_t v39 = v319;
    uint64_t v40 = v319[3];
    uint64_t v41 = v319[4];
    __swift_project_boxed_opaque_existential_0(v319, v40);
    id v320 = v27;
    id v42 = (void *)sub_1D5459BC8();
    CFAllocatorRef v43 = (const __CFAllocator *)(*(uint64_t (**)(CFStringRef, void *, CFStringRef, uint64_t, uint64_t))(v41 + 24))(v314, v42, v298, v40, v41);

    uint64_t v44 = v39[3];
    uint64_t v45 = v39[4];
    __swift_project_boxed_opaque_existential_0(v39, v44);
    uint64_t v46 = *(uint64_t (**)(id, const __CFAllocator *, uint64_t, uint64_t))(v45 + 32);
    CFAllocatorRef v304 = v43;
    uint64_t v47 = v46(v321, v43, v44, v45);
    unint64_t v48 = sub_1D4A64A64(v47, &qword_1EA70F7E0, &qword_1EA70F7D0);
    swift_bridgeObjectRelease();
    if (v48)
    {
      uint64_t v49 = sub_1D5459BE8();
      if (*(void *)(v48 + 16) && (unint64_t v51 = sub_1D4A65B20(v49, v50), (v52 & 1) != 0))
      {
        uint64_t v53 = *(void *)(*(void *)(v48 + 56) + 8 * v51);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        uint64_t v324 = v53;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    unint64_t v54 = v28;
    unint64_t v305 = v31;
    unint64_t v55 = v319;
    uint64_t v56 = v319[3];
    uint64_t v57 = v319[4];
    __swift_project_boxed_opaque_existential_0(v319, v56);
    unint64_t v58 = (void *)sub_1D5459BC8();
    CFStringRef v59 = (const __CFString *)(*(uint64_t (**)(CFStringRef, void *, __CFString *, uint64_t, uint64_t))(v57 + 24))(v314, v58, v296, v56, v57);

    uint64_t v60 = v55[3];
    uint64_t v61 = v55[4];
    __swift_project_boxed_opaque_existential_0(v55, v60);
    uint64_t v62 = *(uint64_t (**)(id, const __CFString *, uint64_t, uint64_t))(v61 + 32);
    v303 = (__CFString *)v59;
    uint64_t v63 = v62(v321, v59, v60, v61);
    unint64_t v64 = sub_1D4A64A64(v63, &qword_1EA70F7C8, &qword_1EA70F7B8);
    swift_bridgeObjectRelease();
    uint64_t v25 = v311;
    if (v64)
    {
      uint64_t v65 = sub_1D5459BE8();
      if (*(void *)(v64 + 16) && (unint64_t v67 = sub_1D4A65B20(v65, v66), (v68 & 1) != 0))
      {
        unint64_t v69 = *(void *)(*(void *)(v64 + 56) + 8 * v67);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v70 = sub_1D4A64D84(v69);
        swift_bridgeObjectRelease();
        if (!v70) {
          uint64_t v70 = MEMORY[0x1E4FBC860];
        }
        swift_beginAccess();
        uint64_t v323 = v70;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v71 = sub_1D5459978();
    os_log_type_t v72 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
    v72(v318, 1, 1, v71);
    v73 = v308;
    uint64_t v74 = v310;
    v316(v308, v309, v310);
    char v75 = sub_1D5459A38();
    v302 = *v315;
    v302(v73, v74);
    if (v75)
    {
      uint64_t v76 = (void (*)(uint64_t, void, uint64_t, uint64_t))v72;
      uint64_t v77 = v319;
      uint64_t v78 = v319[3];
      uint64_t v79 = v319[4];
      __swift_project_boxed_opaque_existential_0(v319, v78);
      v80 = (void *)sub_1D5459BC8();
      v81 = (void *)(*(uint64_t (**)(CFStringRef, void *, uint64_t, uint64_t, uint64_t))(v79 + 24))(v314, v80, v284, v78, v79);

      uint64_t v82 = v77[3];
      uint64_t v83 = v77[4];
      __swift_project_boxed_opaque_existential_0(v77, v82);
      uint64_t v84 = (*(uint64_t (**)(id, void *, uint64_t, uint64_t))(v83 + 32))(v321, v81, v82, v83);
      if (!*(void *)(v84 + 16))
      {
        swift_bridgeObjectRelease();

        goto LABEL_48;
      }
      unint64_t v85 = sub_1D4A65B20(0x4449535342, 0xE500000000000000);
      uint64_t v25 = v311;
      if (v86)
      {
        uint64_t v322 = *(void *)(*(void *)(v84 + 56) + 8 * v85);
        swift_unknownObjectRetain();
        if (swift_dynamicCast())
        {
          uint64_t v88 = (uint64_t)v326;
          unint64_t v87 = v327;
          if (*(void *)(v84 + 16) && (unint64_t v89 = sub_1D4A65B20(1145656147, 0xE400000000000000), (v90 & 1) != 0))
          {
            uint64_t v91 = *(void *)(*(void *)(v84 + 56) + 8 * v89);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v322 = v91;
            if (swift_dynamicCast())
            {
              uint64_t v92 = v297;
              sub_1D5459958();

              uint64_t v93 = (uint64_t)v318;
              sub_1D4A66E38((uint64_t)v318);
              v76(v92, 0, 1, v71);
              sub_1D4A66F44(v92, v93);
LABEL_48:
              uint64_t v25 = v311;
              goto LABEL_49;
            }
          }
          else
          {

            swift_bridgeObjectRelease();
          }
          sub_1D4A66E98(v88, v87);
          goto LABEL_48;
        }
      }
      swift_bridgeObjectRelease();
    }
LABEL_49:
    unint64_t v94 = v26;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v95 = v305;
    swift_bridgeObjectRetain_n();
    v96 = sub_1D5459AD8();
    os_log_type_t v97 = sub_1D5459D78();
    int v98 = v97;
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v99 = swift_slowAlloc();
      uint64_t v292 = swift_slowAlloc();
      v326 = (void *)v292;
      *(_DWORD *)uint64_t v99 = v282;
      swift_beginAccess();
      uint64_t v100 = swift_bridgeObjectRetain();
      int v291 = v98;
      uint64_t v101 = MEMORY[0x1D944F7A0](v100, MEMORY[0x1E4FBB1A0]);
      unint64_t v103 = v102;
      swift_bridgeObjectRelease();
      uint64_t v322 = sub_1D4A57DD4(v101, v103, (uint64_t *)&v326);
      sub_1D5459E48();
      swift_bridgeObjectRelease();
      *(_WORD *)(v99 + 12) = 2080;
      swift_beginAccess();
      uint64_t v104 = swift_bridgeObjectRetain();
      uint64_t v105 = MEMORY[0x1D944F7A0](v104, MEMORY[0x1E4FBB1A0]);
      unint64_t v107 = v106;
      swift_bridgeObjectRelease();
      uint64_t v322 = sub_1D4A57DD4(v105, v107, (uint64_t *)&v326);
      sub_1D5459E48();
      swift_bridgeObjectRelease();
      *(_WORD *)(v99 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v322 = sub_1D4A57DD4(v313, v95, (uint64_t *)&v326);
      sub_1D5459E48();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v99 + 32) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v322 = sub_1D4A57DD4((uint64_t)v320, v94, (uint64_t *)&v326);
      sub_1D5459E48();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v99 + 42) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v322 = sub_1D4A57DD4((uint64_t)v312, v54, (uint64_t *)&v326);
      sub_1D5459E48();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D49D5000, v96, (os_log_type_t)v291, "ObtainedIP: %s  %s mac: %s name: %s type: %s", (uint8_t *)v99, 0x34u);
      uint64_t v108 = v292;
      swift_arrayDestroy();
      MEMORY[0x1D9452B60](v108, -1, -1);
      uint64_t v109 = v99;
      uint64_t v25 = v311;
      MEMORY[0x1D9452B60](v109, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    v110 = v295;
    uint64_t v24 = v310;
    ((void (*)(char *, char *, uint64_t))v294->isa)(v308, v25, v310);
    swift_beginAccess();
    swift_beginAccess();
    sub_1D4A67480((uint64_t)v318, v297, &qword_1EA70F798);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D54598C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v111 = v329;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v111 = sub_1D4A65560(0, *(void *)(v111 + 16) + 1, 1, v111, &qword_1EA70F790, MEMORY[0x1E4F64D18], MEMORY[0x1E4F64D18]);
    }
    CFAllocatorRef v112 = v304;
    uint64_t v113 = v303;
    v114 = v302;
    unint64_t v116 = *(void *)(v111 + 16);
    unint64_t v115 = *(void *)(v111 + 24);
    if (v116 >= v115 >> 1) {
      unint64_t v111 = sub_1D4A65560(v115 > 1, v116 + 1, 1, v111, &qword_1EA70F790, MEMORY[0x1E4F64D18], MEMORY[0x1E4F64D18]);
    }
    *(void *)(v111 + 16) = v116 + 1;
    (*(void (**)(unint64_t, __CFString *, uint64_t))(v300 + 32))(v111+ ((*(unsigned __int8 *)(v300 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v300 + 80))+ *(void *)(v300 + 72) * v116, v110, v299);

    unint64_t v329 = v111;
    sub_1D4A66E38((uint64_t)v318);
    v114(v25, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v307;
    uint64_t v23 = v306;
LABEL_57:
    v23 += 6;
    --v20;
  }
  while (v20);
  swift_bridgeObjectRelease();
  CFAllocatorRef v117 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFStringRef NetworkGlobalEntity = SCDynamicStoreKeyCreateNetworkGlobalEntity((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v314, v298);
  uint64_t v119 = v319[3];
  uint64_t v120 = v319[4];
  __swift_project_boxed_opaque_existential_0(v319, v119);
  v121 = *(uint64_t (**)(id, CFStringRef, uint64_t, uint64_t))(v120 + 32);
  v295 = (__CFString *)NetworkGlobalEntity;
  uint64_t v122 = v121(v321, NetworkGlobalEntity, v119, v120);
  uint64_t v123 = v122;
  if (*(void *)(v122 + 16) && (unint64_t v124 = sub_1D4A65B20(0x537972616D697250, 0xEE00656369767265), (v125 & 1) != 0))
  {
    uint64_t v126 = *(void *)(*(void *)(v123 + 56) + 8 * v124);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v324 = v126;
    int v127 = swift_dynamicCast();
    uint64_t v128 = (uint64_t)v326;
    if (!v127) {
      uint64_t v128 = 0;
    }
    uint64_t v313 = v128;
    if (v127) {
      unint64_t v129 = v327;
    }
    else {
      unint64_t v129 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v313 = 0;
    unint64_t v129 = 0;
  }
  swift_bridgeObjectRetain_n();
  v133 = sub_1D5459AD8();
  os_log_type_t v134 = sub_1D5459D68();
  if (os_log_type_enabled(v133, v134))
  {
    v135 = (uint8_t *)swift_slowAlloc();
    uint64_t v136 = swift_slowAlloc();
    v326 = (void *)v136;
    *(_DWORD *)v135 = 136315138;
    if (v129) {
      uint64_t v137 = v313;
    }
    else {
      uint64_t v137 = 7104878;
    }
    if (v129) {
      unint64_t v138 = v129;
    }
    else {
      unint64_t v138 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v324 = sub_1D4A57DD4(v137, v138, (uint64_t *)&v326);
    sub_1D5459E48();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D49D5000, v133, v134, "primaryServiceName %s", v135, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9452B60](v136, -1, -1);
    MEMORY[0x1D9452B60](v135, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v303 = (__CFString *)*MEMORY[0x1E4F41AB8];
  CFStringRef NetworkServiceEntity = SCDynamicStoreKeyCreateNetworkServiceEntity(v117, v314, v303, v298);
  uint64_t v143 = v319[3];
  uint64_t v144 = v319[4];
  __swift_project_boxed_opaque_existential_0(v319, v143);
  v145 = *(uint64_t (**)(id, CFStringRef, uint64_t, uint64_t))(v144 + 40);
  v294 = (__CFString *)NetworkServiceEntity;
  unint64_t v146 = v145(v321, NetworkServiceEntity, v143, v144);
  swift_bridgeObjectRetain_n();
  v147 = sub_1D5459AD8();
  os_log_type_t v148 = sub_1D5459D68();
  BOOL v149 = os_log_type_enabled(v147, v148);
  v316 = (void (*)(char *, void, uint64_t))v129;
  if (v149)
  {
    v150 = (uint8_t *)swift_slowAlloc();
    uint64_t v151 = swift_slowAlloc();
    v326 = (void *)v151;
    *(_DWORD *)v150 = 136315138;
    type metadata accessor for CFString(0);
    uint64_t v153 = v152;
    uint64_t v154 = swift_bridgeObjectRetain();
    uint64_t v155 = MEMORY[0x1D944F7A0](v154, v153);
    unint64_t v157 = v156;
    swift_bridgeObjectRelease();
    uint64_t v324 = sub_1D4A57DD4(v155, v157, (uint64_t *)&v326);
    sub_1D5459E48();
    swift_bridgeObjectRelease_n();
    unint64_t v129 = (unint64_t)v316;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D49D5000, v147, v148, "v4ServiceKeys %s", v150, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9452B60](v151, -1, -1);
    MEMORY[0x1D9452B60](v150, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  CFAllocatorRef v304 = v117;
  if (v146 >> 62) {
    goto LABEL_204;
  }
  uint64_t v158 = *(void *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_88:
  if (!v158)
  {
    v312 = (void *)MEMORY[0x1E4FBC860];
LABEL_143:
    swift_bridgeObjectRelease();
    CFStringRef v204 = SCDynamicStoreKeyCreateNetworkServiceEntity(v304, v314, v303, v296);
    uint64_t v205 = v319[3];
    uint64_t v206 = v319[4];
    __swift_project_boxed_opaque_existential_0(v319, v205);
    v207 = *(uint64_t (**)(id, const __CFString *, uint64_t, uint64_t))(v206 + 40);
    v296 = (__CFString *)v204;
    unint64_t v208 = v207(v321, v204, v205, v206);
    swift_bridgeObjectRetain_n();
    v209 = sub_1D5459AD8();
    os_log_type_t v210 = sub_1D5459D68();
    if (os_log_type_enabled(v209, v210))
    {
      v211 = (uint8_t *)swift_slowAlloc();
      uint64_t v212 = swift_slowAlloc();
      v326 = (void *)v212;
      *(_DWORD *)v211 = 136315138;
      type metadata accessor for CFString(0);
      uint64_t v214 = v213;
      uint64_t v215 = swift_bridgeObjectRetain();
      uint64_t v216 = MEMORY[0x1D944F7A0](v215, v214);
      unint64_t v218 = v217;
      swift_bridgeObjectRelease();
      uint64_t v324 = sub_1D4A57DD4(v216, v218, (uint64_t *)&v326);
      sub_1D5459E48();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D49D5000, v209, v210, "v6serviceKeys %s", v211, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9452B60](v212, -1, -1);
      MEMORY[0x1D9452B60](v211, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    unint64_t v146 = (unint64_t)v312;
    if (v208 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v219 = sub_1D545A008();
      swift_bridgeObjectRelease();
      if (v219) {
        goto LABEL_148;
      }
    }
    else
    {
      uint64_t v219 = *(void *)((v208 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v219)
      {
LABEL_148:
        unint64_t v220 = 0;
        unint64_t v221 = v208 & 0xC000000000000001;
        CFAllocatorRef v222 = (CFAllocatorRef)(v208 & 0xFFFFFFFFFFFFFF8);
        CFStringRef v314 = (CFStringRef)(v208 + 32);
        v315 = (void (**)(char *, uint64_t))*MEMORY[0x1E4F41BA0];
        v303 = (__CFString *)*MEMORY[0x1E4F41D10];
        v302 = (void (*)(char *, uint64_t))(v146 + 72);
        uint64_t v310 = MEMORY[0x1E4FBC838] + 8;
        uint64_t v300 = 0x80000001D54D61C0;
        uint64_t v293 = 0x80000001D54D61E0;
        unint64_t v305 = v208 & 0xC000000000000001;
        CFAllocatorRef v304 = (CFAllocatorRef)(v208 & 0xFFFFFFFFFFFFFF8);
        CFStringRef v298 = (CFStringRef)v208;
        uint64_t v297 = v219;
        do
        {
          if (v221)
          {
            v223 = (void *)MEMORY[0x1D944FAD0](v220, v208);
          }
          else
          {
            if (v220 >= *((void *)v222 + 2)) {
              goto LABEL_203;
            }
            v223 = *(&v314->isa + v220);
          }
          id v320 = v223;
          if (__OFADD__(v220++, 1))
          {
            __break(1u);
LABEL_203:
            __break(1u);
LABEL_204:
            swift_bridgeObjectRetain();
            uint64_t v158 = sub_1D545A008();
            swift_bridgeObjectRelease();
            goto LABEL_88;
          }
          uint64_t v225 = v319[3];
          uint64_t v226 = v319[4];
          __swift_project_boxed_opaque_existential_0(v319, v225);
          uint64_t v227 = (*(uint64_t (**)(id, id, uint64_t, uint64_t))(v226 + 32))(v321, v320, v225, v226);
          uint64_t v228 = sub_1D5459BE8();
          if (*(void *)(v227 + 16) && (unint64_t v230 = sub_1D4A65B20(v228, v229), (v231 & 1) != 0))
          {
            uint64_t v232 = *(void *)(*(void *)(v227 + 56) + 8 * v230);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v324 = v232;
            if (swift_dynamicCast())
            {
              uint64_t v317 = (uint64_t)v326;
              v318 = (void *)v327;
              if (v129)
              {
                v326 = (void *)sub_1D5459BE8();
                uint64_t v327 = v233;
                uint64_t v324 = v313;
                unint64_t v325 = v129;
                sub_1D4A66EF0();
                swift_bridgeObjectRetain();
                sub_1D5459E68();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              if (!*(void *)(v227 + 16))
              {
                uint64_t v236 = 0;
                goto LABEL_175;
              }
              unint64_t v234 = sub_1D4A65B20(0xD000000000000010, v300);
              if (v235)
              {
                uint64_t v324 = *(void *)(*(void *)(v227 + 56) + 8 * v234);
                swift_unknownObjectRetain();
                if (swift_dynamicCast()) {
                  uint64_t v236 = v327;
                }
                else {
                  uint64_t v236 = 0;
                }
                if (!*(void *)(v227 + 16))
                {
LABEL_175:
                  v311 = 0;
                  goto LABEL_176;
                }
              }
              else
              {
                uint64_t v236 = 0;
                if (!*(void *)(v227 + 16)) {
                  goto LABEL_175;
                }
              }
              unint64_t v237 = sub_1D4A65B20(0xD000000000000016, v293);
              if ((v238 & 1) == 0) {
                goto LABEL_175;
              }
              uint64_t v324 = *(void *)(*(void *)(v227 + 56) + 8 * v237);
              swift_unknownObjectRetain();
              int v239 = swift_dynamicCast();
              v240 = (char *)v327;
              if (!v239) {
                v240 = 0;
              }
              v311 = v240;
LABEL_176:
              uint64_t v241 = sub_1D5459BE8();
              if (*(void *)(v227 + 16) && (unint64_t v243 = sub_1D4A65B20(v241, v242), (v244 & 1) != 0))
              {
                uint64_t v245 = *(void *)(*(void *)(v227 + 56) + 8 * v243);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v324 = v245;
                int v246 = swift_dynamicCast();
                uint64_t v247 = v327;
                if (!v246) {
                  uint64_t v247 = 0;
                }
                uint64_t v309 = v247;
              }
              else
              {
                swift_bridgeObjectRelease();
                uint64_t v309 = 0;
              }
              uint64_t v248 = sub_1D5459BE8();
              uint64_t v250 = *(void *)(v227 + 16);
              uint64_t v307 = v220;
              if (v250 && (unint64_t v251 = sub_1D4A65B20(v248, v249), (v252 & 1) != 0))
              {
                uint64_t v253 = *(void *)(*(void *)(v227 + 56) + 8 * v251);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v326 = (void *)v253;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7D0);
                if (swift_dynamicCast())
                {
                  v254 = (char *)v324;
LABEL_188:
                  v308 = v254;
                  uint64_t v255 = (uint64_t)v318;
                  uint64_t v256 = v317;
                  uint64_t v257 = *(void *)(v146 + 16);
                  if (v257)
                  {
                    v306 = (unint64_t *)v236;
                    v258 = v302;
                    while (1)
                    {
                      v259 = (char *)*((void *)v258 - 1);
                      BOOL v260 = *((void *)v258 - 4) == v256 && *((void *)v258 - 3) == v255;
                      if (v260 || (sub_1D545A078() & 1) != 0) {
                        break;
                      }
                      v258 = (void (*)(char *, uint64_t))((char *)v258 + 120);
                      --v257;
                      uint64_t v255 = (uint64_t)v318;
                      uint64_t v256 = v317;
                      if (!v257)
                      {

                        unint64_t v129 = (unint64_t)v316;
                        unint64_t v146 = (unint64_t)v312;
                        unint64_t v208 = (unint64_t)v298;
                        uint64_t v219 = v297;
                        unint64_t v220 = v307;
                        goto LABEL_201;
                      }
                    }
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease();

                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    uint64_t v219 = v297;
                    unint64_t v220 = v307;
                    if (v259)
                    {
                      swift_bridgeObjectRelease();
                      v311 = v259;
                    }
                    unint64_t v129 = (unint64_t)v316;
                    unint64_t v146 = (unint64_t)v312;
                    unint64_t v208 = (unint64_t)v298;
                  }
                  else
                  {

                    unint64_t v220 = v307;
                  }
LABEL_201:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  unint64_t v221 = v305;
                  CFAllocatorRef v222 = v304;
                  continue;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              v254 = (char *)MEMORY[0x1E4FBC860];
              goto LABEL_188;
            }

            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        while (v220 != v219);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v261 = *(void **)(v146 + 16);
    if (v261)
    {
      v326 = (void *)MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1D4A7A58C(0, (int64_t)v261, 0);
      v262 = v326;
      uint64_t v313 = v290 + 32;
      unint64_t v263 = v146 + 72;
      v264 = v280;
      do
      {
        v319 = v261;
        id v320 = v262;
        LODWORD(v31_Block_object_dispose(&STACK[0x368], 8) = *(unsigned __int8 *)(v263 - 40);
        uint64_t v317 = *(void *)(v263 - 32);
        v316 = *(void (**)(char *, void, uint64_t))(v263 - 16);
        v315 = *(void (***)(char *, uint64_t))(v263 + 24);
        CFStringRef v314 = *(CFStringRef *)(v263 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v262 = v320;
        sub_1D5459A08();
        v326 = v262;
        unint64_t v266 = v262[2];
        unint64_t v265 = v262[3];
        if (v266 >= v265 >> 1)
        {
          sub_1D4A7A58C(v265 > 1, v266 + 1, 1);
          v264 = v280;
          v262 = v326;
        }
        v263 += 120;
        v262[2] = v266 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v290 + 32))((unint64_t)v262+ ((*(unsigned __int8 *)(v290 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v290 + 80))+ *(void *)(v290 + 72) * v266, v264, v287);
        v261 = (void *)((char *)v319 - 1);
      }
      while (v319 != (void *)1);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      v262 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    v328 = v262;
    v267 = sub_1D5459AD8();
    os_log_type_t v268 = sub_1D5459D68();
    if (os_log_type_enabled(v267, v268))
    {
      uint64_t v269 = swift_slowAlloc();
      uint64_t v270 = swift_slowAlloc();
      v326 = (void *)v270;
      *(_DWORD *)uint64_t v269 = 136315394;
      swift_beginAccess();
      uint64_t v271 = swift_bridgeObjectRetain();
      uint64_t v272 = MEMORY[0x1D944F7A0](v271, v299);
      unint64_t v274 = v273;
      swift_bridgeObjectRelease();
      uint64_t v323 = sub_1D4A57DD4(v272, v274, (uint64_t *)&v326);
      sub_1D5459E48();
      swift_bridgeObjectRelease();
      *(_WORD *)(v269 + 12) = 2080;
      swift_beginAccess();
      uint64_t v275 = swift_bridgeObjectRetain();
      uint64_t v276 = MEMORY[0x1D944F7A0](v275, v287);
      unint64_t v278 = v277;
      swift_bridgeObjectRelease();
      uint64_t v322 = sub_1D4A57DD4(v276, v278, (uint64_t *)&v326);
      sub_1D5459E48();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D49D5000, v267, v268, "%s %s", (uint8_t *)v269, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9452B60](v270, -1, -1);
      MEMORY[0x1D9452B60](v269, -1, -1);
    }

    swift_beginAccess();
    return;
  }
  if (v158 >= 1)
  {
    uint64_t v159 = 0;
    id v320 = (id)(MEMORY[0x1E4FBC838] + 8);
    v306 = (unint64_t *)*MEMORY[0x1E4F41CA8];
    unint64_t v305 = 0x80000001D54D61C0;
    v302 = (void (*)(char *, uint64_t))0x80000001D54D61E0;
    v312 = (void *)MEMORY[0x1E4FBC860];
    while ((v146 & 0xC000000000000001) != 0)
    {
      id v160 = (id)MEMORY[0x1D944FAD0](v159, v146);
      if (v129) {
        goto LABEL_96;
      }
LABEL_97:
      uint64_t v162 = v319[3];
      uint64_t v163 = v319[4];
      __swift_project_boxed_opaque_existential_0(v319, v162);
      uint64_t v164 = (*(uint64_t (**)(id, id, uint64_t, uint64_t))(v163 + 32))(v321, v160, v162, v163);
      uint64_t v165 = sub_1D5459BE8();
      if (*(void *)(v164 + 16))
      {
        unint64_t v167 = sub_1D4A65B20(v165, v166);
        if (v168)
        {
          uint64_t v169 = *(void *)(*(void *)(v164 + 56) + 8 * v167);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v324 = v169;
          if ((swift_dynamicCast() & 1) == 0)
          {

            swift_bridgeObjectRelease();
            goto LABEL_93;
          }
          v318 = v326;
          uint64_t v317 = v327;
          if (!*(void *)(v164 + 16))
          {
            v311 = 0;
            v315 = 0;
            goto LABEL_121;
          }
          unint64_t v170 = sub_1D4A65B20(0xD000000000000010, v305);
          if (v171)
          {
            uint64_t v324 = *(void *)(*(void *)(v164 + 56) + 8 * v170);
            swift_unknownObjectRetain();
            int v172 = swift_dynamicCast();
            uint64_t v173 = (uint64_t)v326;
            if (!v172) {
              uint64_t v173 = 0;
            }
            v315 = (void (**)(char *, uint64_t))v173;
            if (v172) {
              v174 = (char *)v327;
            }
            else {
              v174 = 0;
            }
            v311 = v174;
            if (!*(void *)(v164 + 16))
            {
LABEL_121:
              uint64_t v310 = 0;
              uint64_t v309 = 0;
              goto LABEL_122;
            }
          }
          else
          {
            v315 = 0;
            v311 = 0;
            if (!*(void *)(v164 + 16)) {
              goto LABEL_121;
            }
          }
          unint64_t v175 = sub_1D4A65B20(0xD000000000000016, (uint64_t)v302);
          if ((v176 & 1) == 0) {
            goto LABEL_121;
          }
          uint64_t v324 = *(void *)(*(void *)(v164 + 56) + 8 * v175);
          swift_unknownObjectRetain();
          int v177 = swift_dynamicCast();
          uint64_t v178 = (uint64_t)v326;
          if (!v177) {
            uint64_t v178 = 0;
          }
          uint64_t v310 = v178;
          if (v177) {
            uint64_t v179 = v327;
          }
          else {
            uint64_t v179 = 0;
          }
          uint64_t v309 = v179;
LABEL_122:
          uint64_t v180 = sub_1D5459BE8();
          if (*(void *)(v164 + 16) && (unint64_t v182 = sub_1D4A65B20(v180, v181), (v183 & 1) != 0))
          {
            uint64_t v184 = *(void *)(*(void *)(v164 + 56) + 8 * v182);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v324 = v184;
            int v185 = swift_dynamicCast();
            uint64_t v186 = (uint64_t)v326;
            if (!v185) {
              uint64_t v186 = 0;
            }
            v308 = (char *)v186;
            if (v185) {
              uint64_t v187 = v327;
            }
            else {
              uint64_t v187 = 0;
            }
            uint64_t v307 = v187;
          }
          else
          {
            swift_bridgeObjectRelease();
            v308 = 0;
            uint64_t v307 = 0;
          }
          uint64_t v188 = sub_1D5459BE8();
          if (*(void *)(v164 + 16) && (unint64_t v190 = sub_1D4A65B20(v188, v189), (v191 & 1) != 0))
          {
            uint64_t v192 = *(void *)(*(void *)(v164 + 56) + 8 * v190);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v326 = (void *)v192;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7D0);
            if (swift_dynamicCast())
            {
              uint64_t v193 = v324;
LABEL_137:
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                v312 = sub_1D4A65908(0, v312[2] + 1, 1, v312);
              }
              unint64_t v195 = v312[2];
              unint64_t v194 = v312[3];
              uint64_t v196 = MEMORY[0x1E4FBC860];
              if (v195 >= v194 >> 1)
              {
                v203 = sub_1D4A65908((void *)(v194 > 1), v195 + 1, 1, v312);
                uint64_t v196 = MEMORY[0x1E4FBC860];
                v312 = v203;
              }
              v197 = v312;
              v312[2] = v195 + 1;
              v198 = &v197[15 * v195];
              *((unsigned char *)v198 + 32) = v129 & 1;
              uint64_t v199 = v317;
              v198[5] = v318;
              v198[6] = v199;
              uint64_t v200 = v309;
              v198[7] = v310;
              v198[8] = v200;
              v201 = v308;
              v198[9] = v193;
              v198[10] = v201;
              v202 = v315;
              v198[11] = v307;
              v198[12] = v202;
              v198[13] = v311;
              v198[14] = v196;
              *(_OWORD *)(v198 + 15) = 0u;
              *(_OWORD *)(v198 + 17) = 0u;
              goto LABEL_92;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v193 = MEMORY[0x1E4FBC860];
          goto LABEL_137;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_92:

LABEL_93:
      ++v159;
      unint64_t v129 = (unint64_t)v316;
      if (v158 == v159) {
        goto LABEL_143;
      }
    }
    id v160 = *(id *)(v146 + 8 * v159 + 32);
    if (!v129) {
      goto LABEL_97;
    }
LABEL_96:
    v326 = (void *)sub_1D5459BE8();
    uint64_t v327 = v161;
    uint64_t v324 = v313;
    unint64_t v325 = v129;
    sub_1D4A66EF0();
    swift_bridgeObjectRetain();
    LOBYTE(v129) = sub_1D5459E68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_97;
  }
  __break(1u);
}

unint64_t sub_1D4A64A64(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t v4 = (void *)sub_1D545A038();
  }
  else
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v6) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v9 << 6);
      int64_t v14 = v9;
    }
    else
    {
      int64_t v15 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_37;
      }
      if (v15 >= v27)
      {
LABEL_33:
        sub_1D4A51CA4();
        return (unint64_t)v4;
      }
      unint64_t v16 = *(void *)(v28 + 8 * v15);
      int64_t v14 = v9 + 1;
      if (!v16)
      {
        int64_t v14 = v9 + 2;
        if (v9 + 2 >= v27) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v28 + 8 * v14);
        if (!v16)
        {
          int64_t v14 = v9 + 3;
          if (v9 + 3 >= v27) {
            goto LABEL_33;
          }
          unint64_t v16 = *(void *)(v28 + 8 * v14);
          if (!v16)
          {
            int64_t v14 = v9 + 4;
            if (v9 + 4 >= v27) {
              goto LABEL_33;
            }
            unint64_t v16 = *(void *)(v28 + 8 * v14);
            if (!v16)
            {
              int64_t v17 = v9 + 5;
              if (v9 + 5 >= v27) {
                goto LABEL_33;
              }
              unint64_t v16 = *(void *)(v28 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  int64_t v14 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_38;
                  }
                  if (v14 >= v27) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = *(void *)(v28 + 8 * v14);
                  ++v17;
                  if (v16) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v14 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v12 = (v16 - 1) & v16;
      unint64_t v13 = __clz(__rbit64(v16)) + (v14 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v13);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D4A51CA4();
      swift_release();
      return 0;
    }
    unint64_t result = sub_1D4A65B20(v20, v19);
    unint64_t v21 = result;
    if (v22)
    {
      uint64_t v10 = (uint64_t *)(v4[6] + 16 * result);
      swift_bridgeObjectRelease();
      uint64_t *v10 = v20;
      v10[1] = v19;
      uint64_t v11 = v4[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v11 + 8 * v21) = v30;
      goto LABEL_8;
    }
    if (v4[2] >= v4[3]) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v23 = (uint64_t *)(v4[6] + 16 * result);
    uint64_t *v23 = v20;
    v23[1] = v19;
    *(void *)(v4[7] + 8 * result) = v30;
    uint64_t v24 = v4[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_36;
    }
    v4[2] = v26;
LABEL_8:
    int64_t v9 = v14;
    unint64_t v7 = v12;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1D4A64D84(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1D545A008();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1D4A7A54C(0, v3 & ~(v3 >> 63), 0);
  uint64_t v4 = v14;
  if (!v2)
  {
    unint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      return v4;
    }
LABEL_7:
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v6 = i - 4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1D944FAD0](i - 4, a1);
        uint64_t v7 = i - 3;
        if (__OFADD__(v6, 1)) {
          goto LABEL_22;
        }
      }
      else
      {
        swift_unknownObjectRetain();
        uint64_t v7 = i - 3;
        if (__OFADD__(v6, 1))
        {
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
      }
      if (!swift_dynamicCast())
      {
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D4A7A54C(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v14;
      }
      unint64_t v9 = *(void *)(v4 + 16);
      unint64_t v8 = *(void *)(v4 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1D4A7A54C(v8 > 1, v9 + 1, 1);
        uint64_t v4 = v14;
      }
      *(void *)(v4 + 16) = v9 + 1;
      uint64_t v10 = v4 + 16 * v9;
      *(void *)(v10 + 32) = v12;
      *(void *)(v10 + 40) = v13;
      if (v7 == v2) {
        return v4;
      }
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_1D545A008();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_7;
  }
  return v4;
}

unint64_t NetworkInfoController.obtainNetworkInfoProto()()
{
  uint64_t v41 = sub_1D5459A28();
  uint64_t v37 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v1 = (char *)v36 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1D54598F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4A620C8();
  unint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v42 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v38 = v7;
  if (v9)
  {
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v10 = v3 + 16;
    uint64_t v12 = v6 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v39 = *(void *)(v10 + 56);
    uint64_t v40 = v11;
    v36[1] = v6;
    swift_bridgeObjectRetain();
    do
    {
      v40(v5, v12, v2);
      id v13 = sub_1D4A60018();
      uint64_t v14 = (*(uint64_t (**)(char *, uint64_t))(v10 - 8))(v5, v2);
      if (v13)
      {
        MEMORY[0x1D944F760](v14);
        if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D5459C98();
        }
        sub_1D5459CA8();
        sub_1D5459C88();
      }
      v12 += v39;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    unint64_t v15 = v42;
    unint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v16 = v38;
  }
  else
  {
    uint64_t v16 = v7;
    unint64_t v15 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  unint64_t v42 = v8;
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v40 = (void (*)(char *, uint64_t, uint64_t))v15;
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
    uint64_t v19 = v16 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    uint64_t v20 = *(void *)(v37 + 72);
    unint64_t v21 = (uint64_t (**)(char *, uint64_t))(v37 + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v22 = v41;
      v18(v1, v19, v41);
      id v23 = sub_1D4A60B28();
      uint64_t v24 = (*v21)(v1, v22);
      if (v23)
      {
        MEMORY[0x1D944F760](v24);
        if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D5459C98();
        }
        sub_1D5459CA8();
        sub_1D5459C88();
      }
      v19 += v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    unint64_t v8 = v42;
    unint64_t v15 = (unint64_t)v40;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F770);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D54C38F0;
  if (qword_1EA70F328 != -1) {
    swift_once();
  }
  uint64_t v26 = unk_1EA722AA0;
  *(void *)(inited + 32) = static NetworkInfoController.NetworkInfoKey;
  *(void *)(inited + 40) = v26;
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1D5459FF8();
    swift_bridgeObjectRelease_n();
    unint64_t v15 = v34;
  }
  else
  {
    uint64_t v27 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D545A088();
    if (swift_dynamicCastMetatype() || (uint64_t v30 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_22:
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v31 = (void *)(v27 + 32);
      while (*v31)
      {
        ++v31;
        if (!--v30) {
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v15 = v27 | 1;
    }
  }
  *(void *)(inited + 4_Block_object_dispose(&STACK[0x368], 8) = v15;
  *(void *)(inited + 56) = 0xD000000000000012;
  *(void *)(inited + 64) = 0x80000001D54D6080;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1D5459FF8();
    swift_bridgeObjectRelease_n();
    unint64_t v8 = v35;
  }
  else
  {
    uint64_t v28 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_1D545A088();
    if (swift_dynamicCastMetatype() || (uint64_t v32 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_25:
      swift_bridgeObjectRelease();
    }
    else
    {
      char v33 = (void *)(v28 + 32);
      while (*v33)
      {
        ++v33;
        if (!--v32) {
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v8 = v28 | 1;
    }
  }
  *(void *)(inited + 72) = v8;
  return sub_1D4A615F8(inited);
}

uint64_t sub_1D4A654F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D4A65560(a1, a2, a3, a4, &qword_1EA70F6C0, MEMORY[0x1E4F64D20], MEMORY[0x1E4F64D20]);
}

uint64_t sub_1D4A6552C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D4A65560(a1, a2, a3, a4, &qword_1EBD99BC0, (uint64_t (*)(void))type metadata accessor for NetworkDetectAccessory, (uint64_t (*)(void))type metadata accessor for NetworkDetectAccessory);
}

uint64_t sub_1D4A65560(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1D5459FD8();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D4A66198(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1D4A657E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F788);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D4A66354(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D4A65908(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7E8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 120);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[15 * v8 + 4]) {
          memmove(v12, a4 + 4, 120 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D4A66FAC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D4A65A30(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D4A65560(a1, a2, a3, a4, &qword_1EA70F790, MEMORY[0x1E4F64D18], MEMORY[0x1E4F64D18]);
}

uint64_t sub_1D4A65A64(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D4A65560(a1, a2, a3, a4, &qword_1EA70F7A0, MEMORY[0x1E4F64D28], MEMORY[0x1E4F64D28]);
}

unint64_t sub_1D4A65A98(uint64_t a1)
{
  uint64_t v2 = sub_1D5459E08();
  return sub_1D4A65C1C(a1, v2);
}

unint64_t sub_1D4A65ADC(uint64_t a1)
{
  uint64_t v2 = sub_1D5459F28();
  return sub_1D4A65D28(a1, v2);
}

unint64_t sub_1D4A65B20(uint64_t a1, uint64_t a2)
{
  sub_1D545A0E8();
  sub_1D5459C08();
  uint64_t v4 = sub_1D545A108();
  return sub_1D4A65DF0(a1, a2, v4);
}

unint64_t sub_1D4A65B98(uint64_t a1)
{
  sub_1D5459878();
  sub_1D4A66D18((unint64_t *)&qword_1EBD99600);
  uint64_t v2 = sub_1D5459B98();
  return sub_1D4A65ED4(a1, v2);
}

unint64_t sub_1D4A65C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1D4A66D9C();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1D5459E18();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1D5459E18();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1D4A65D28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1D4A66DDC(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1D944FA60](v9, a1);
      sub_1D4A51BE4((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1D4A65DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D545A078() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D545A078() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1D4A65ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1D5459878();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1D4A66D18(&qword_1EA70F6B8);
      char v15 = sub_1D5459BB8();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

id sub_1D4A66080(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12[3] = a3;
  v12[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_0, a1, a3);
  sub_1D5459BE8();
  uint64_t v8 = a2;
  sub_1D5459AE8();
  *(void *)&v8[OBJC_IVAR___HMDNetworkInfoController_store] = 0;
  sub_1D4A52548((uint64_t)v12, (uint64_t)&v8[OBJC_IVAR___HMDNetworkInfoController_dataSource]);

  v11.receiver = v8;
  v11.super_class = (Class)type metadata accessor for NetworkInfoController();
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v9;
}

uint64_t sub_1D4A66198(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1D545A048();
  __break(1u);
  return result;
}

SCDynamicStoreRef sub_1D4A662F4()
{
  CFAllocatorRef v0 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  uint64_t v1 = (__CFString *)sub_1D5459BC8();
  SCDynamicStoreRef v2 = SCDynamicStoreCreate(v0, v1, 0, 0);

  return v2;
}

uint64_t sub_1D4A66354(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D545A048();
  __break(1u);
  return result;
}

void sub_1D4A6644C()
{
  CFArrayRef v0 = SCNetworkInterfaceCopyAll();
  type metadata accessor for SCNetworkInterface(0);
  sub_1D5459C58();
}

unint64_t sub_1D4A666C4(const __SCDynamicStore *a1, const __CFString *a2)
{
  CFPropertyListRef v2 = SCDynamicStoreCopyValue(a1, a2);
  if (v2)
  {
    uint64_t v3 = v2;
    CFTypeID TypeID = CFDictionaryGetTypeID();
    if (TypeID == CFGetTypeID(v3)
      && (swift_unknownObjectRetain(),
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F778),
          swift_dynamicCast()))
    {
      swift_unknownObjectRelease();
      return v8;
    }
    else
    {
      unint64_t v5 = sub_1D4A614DC(MEMORY[0x1E4FBC860]);
      swift_unknownObjectRelease();
    }
    return v5;
  }
  else
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    return sub_1D4A614DC(v7);
  }
}

id sub_1D4A6679C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_allocWithZone((Class)type metadata accessor for NetworkInfoController());
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_1D4A66080((uint64_t)v9, v10, a3, a4);
}

uint64_t type metadata accessor for NetworkInfoSCDataSource()
{
  return self;
}

id sub_1D4A668A8(uint64_t a1)
{
  CFPropertyListRef v2 = (objc_class *)type metadata accessor for NetworkInfoController();
  id v3 = objc_allocWithZone(v2);
  v8[3] = type metadata accessor for NetworkInfoSCDataSource();
  void v8[4] = &off_1F2C8C1F8;
  v8[0] = a1;
  sub_1D5459BE8();
  swift_retain();
  uint64_t v4 = (char *)v3;
  sub_1D5459AE8();
  *(void *)&v4[OBJC_IVAR___HMDNetworkInfoController_store] = 0;
  sub_1D4A52548((uint64_t)v8, (uint64_t)&v4[OBJC_IVAR___HMDNetworkInfoController_dataSource]);

  v7.receiver = v4;
  v7.super_class = v2;
  id v5 = objc_msgSendSuper2(&v7, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t type metadata accessor for NetworkInfoController()
{
  uint64_t result = qword_1EBD997D8;
  if (!qword_1EBD997D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for InterfaceInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for InterfaceInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for InterfaceInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InterfaceInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for InterfaceInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InterfaceInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InterfaceInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x368], 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4_Block_object_dispose(&STACK[0x368], 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&STACK[0x368], 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4_Block_object_dispose(&STACK[0x368], 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InterfaceInfo()
{
  return &type metadata for InterfaceInfo;
}

uint64_t sub_1D4A66C6C()
{
  return type metadata accessor for NetworkInfoController();
}

uint64_t sub_1D4A66C74()
{
  uint64_t result = sub_1D5459AF8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D4A66D18(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D5459878();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D4A66D5C()
{
  sub_1D4A620C8();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D4A66D9C()
{
  unint64_t result = qword_1EBD99B28;
  if (!qword_1EBD99B28)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBD99B28);
  }
  return result;
}

uint64_t sub_1D4A66DDC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D4A66E38(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F798);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D4A66E98(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

unint64_t sub_1D4A66EF0()
{
  unint64_t result = qword_1EA70F7D8;
  if (!qword_1EA70F7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA70F7D8);
  }
  return result;
}

uint64_t sub_1D4A66F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4A66FAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 120 * a1 + 32;
    unint64_t v6 = a3 + 120 * v4;
    if (v5 >= v6 || v5 + 120 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D545A048();
  __break(1u);
  return result;
}

uint64_t destroy for NetworkInfoController.PartialNetworkServiceInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NetworkInfoController.PartialNetworkServiceInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x368], 8) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 8_Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NetworkInfoController.PartialNetworkServiceInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8_Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x368], 8) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for NetworkInfoController.PartialNetworkServiceInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 8_Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkInfoController.PartialNetworkServiceInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkInfoController.PartialNetworkServiceInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 8_Block_object_dispose(&STACK[0x368], 8) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x368], 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkInfoController.PartialNetworkServiceInfo()
{
  return &type metadata for NetworkInfoController.PartialNetworkServiceInfo;
}

uint64_t sub_1D4A67480(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id HMDAccessorySetupMetricDispatcher.networkMetric(discoveryController:networkInfoController:sessionID:idsIdentifierString:currentWiFiInfo:currentWiFiNetworkRSSI:numResidents:numAppleMediaAccessories:accessoryDiagnosticInfo:primaryResidentIdsIdentifierString:primaryResidentDiagnosticInfo:homeUUID:primaryResidentDiagnosticInfoFetched:)(void *a1, void *a2, uint64_t a3, uint64_t a4, char *a5, unint64_t a6, void *a7, int a8, char *a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, char a16)
{
  return sub_1D4A67924(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1D4A677D4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 32) = &off_1F2C8BBB0;
  swift_unknownObjectWeakAssign();
  type metadata accessor for AssertionHandle.Assertion(0);
  uint64_t v8 = swift_allocObject();
  sub_1D5459868();
  if (!a3)
  {
    a2 = sub_1D5459828();
    a3 = v9;
  }
  id v10 = (uint64_t *)(v8 + OBJC_IVAR____TtCC19HomeKitDaemonLegacy15AssertionHandle9Assertion_reason);
  uint64_t *v10 = a2;
  v10[1] = a3;
  *(void *)(a4 + 16) = v8;
  uint64_t v11 = *(os_unfair_lock_s **)&a1[OBJC_IVAR___HMDDiscoveryController_assertions];
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v11 + 6);
  sub_1D4A67DC4((uint64_t)&v11[4], &v14);
  os_unfair_lock_unlock(v11 + 6);
  uint64_t v12 = v14;
  swift_release();
  sub_1D4A579BC(v8);
  if (v12 == 1) {
    sub_1D4A56FA4();
  }
  swift_release();

  return a4;
}

id sub_1D4A67924(void *a1, void *a2, uint64_t a3, uint64_t a4, char *a5, unint64_t a6, void *a7, int a8, char *a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, char a16)
{
  int v53 = a8;
  unint64_t v51 = a6;
  char v52 = a7;
  unint64_t v54 = (void (**)(char *, uint64_t))a5;
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  uint64_t v18 = sub_1D5459878();
  MEMORY[0x1F4188790](v18);
  uint64_t v57 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = v20;
  uint64_t v21 = *(void (**)(void))(v20 + 16);
  uint64_t v59 = v22;
  v21();
  unint64_t v23 = a1;
  id v55 = a2;
  sub_1D4A620C8();
  uint64_t v46 = v24;
  uint64_t v48 = v25;
  uint64_t v47 = sub_1D4A54E9C();
  id v56 = v23;
  uint64_t v26 = *(void *)&v23[OBJC_IVAR___HMDDiscoveryController_visibleSFDevices];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_1D4A552D4((void *)(v26 + 16), v62);
  uint64_t v45 = a10;
  uint64_t v44 = a9;
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  uint64_t v27 = *(void *)&v62[0];
  swift_release();
  size_t v28 = sub_1D4A5A77C(v27);
  swift_bridgeObjectRelease();
  sub_1D4A6F51C(v49, v50, 0, v52, v53, v46, v48, v54, v62, v51, v47, v28, v44, v45, (char *)v54, v51, a11, a12, a13,
    a14,
    a16 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v61[3] = &type metadata for Metric.Setup.NetworkInfo;
  v61[4] = &off_1F2C8C540;
  uint64_t v29 = swift_allocObject();
  v61[0] = v29;
  long long v30 = v62[13];
  *(_OWORD *)(v29 + 20_Block_object_dispose(&STACK[0x368], 8) = v62[12];
  *(_OWORD *)(v29 + 224) = v30;
  *(_WORD *)(v29 + 240) = v63;
  long long v31 = v62[9];
  *(_OWORD *)(v29 + 144) = v62[8];
  *(_OWORD *)(v29 + 160) = v31;
  long long v32 = v62[11];
  *(_OWORD *)(v29 + 176) = v62[10];
  *(_OWORD *)(v29 + 192) = v32;
  long long v33 = v62[5];
  *(_OWORD *)(v29 + 80) = v62[4];
  *(_OWORD *)(v29 + 96) = v33;
  long long v34 = v62[7];
  *(_OWORD *)(v29 + 112) = v62[6];
  *(_OWORD *)(v29 + 12_Block_object_dispose(&STACK[0x368], 8) = v34;
  long long v35 = v62[1];
  *(_OWORD *)(v29 + 16) = v62[0];
  *(_OWORD *)(v29 + 32) = v35;
  long long v36 = v62[3];
  *(_OWORD *)(v29 + 4_Block_object_dispose(&STACK[0x368], 8) = v62[2];
  *(_OWORD *)(v29 + 64) = v36;
  uint64_t v37 = (objc_class *)type metadata accessor for Metric.LogEventAdaptor();
  uint64_t v38 = (char *)objc_allocWithZone(v37);
  uint64_t v39 = &v38[OBJC_IVAR____TtCO19HomeKitDaemonLegacy6Metric15LogEventAdaptor_name];
  *(void *)uint64_t v39 = 0xD000000000000035;
  *((void *)v39 + 1) = 0x80000001D54D6240;
  sub_1D4A52548((uint64_t)v61, (uint64_t)&v38[OBJC_IVAR____TtCO19HomeKitDaemonLegacy6Metric15LogEventAdaptor_event]);
  *(void *)&v38[OBJC_IVAR____TtCO19HomeKitDaemonLegacy6Metric15LogEventAdaptor_coreAnalyticsEventOptions] = 2;
  sub_1D4A67E18((uint64_t)v62);
  uint64_t v40 = v57;
  uint64_t v41 = (void *)sub_1D5459838();
  v60.receiver = v38;
  v60.super_class = v37;
  id v42 = objc_msgSendSuper2(&v60, sel_initWithHomeUUID_, v41);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v40, v59);
  sub_1D4A67E44((uint64_t)v62);

  return v42;
}

uint64_t _sSo33HMDAccessorySetupMetricDispatcherC19HomeKitDaemonLegacyE25releaseDiscoveryAssertion15assertionHandleyyXl_tF_0()
{
  type metadata accessor for AssertionHandle();
  swift_unknownObjectRetain();
  uint64_t v0 = swift_dynamicCastClass();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = MEMORY[0x1D9452C30](v0 + 24);
    if (v2)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      uint64_t v4 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR___HMDDiscoveryController_assertions);
      swift_retain();
      os_unfair_lock_lock(v4 + 6);
      sub_1D4A5BD68((uint64_t)&v4[4], &v7);
      os_unfair_lock_unlock(v4 + 6);
      BOOL v5 = v7;
      swift_release();
      sub_1D4A579C8(v3);
      if (v5) {
        sub_1D4A57468();
      }
      swift_unknownObjectRelease();
    }
    *(void *)(v1 + 32) = 0;
    swift_unknownObjectWeakAssign();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1D4A67DC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D4A540D4(a1, v2, a2);
}

uint64_t sub_1D4A67DE0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 242, 7);
}

uint64_t sub_1D4A67E18(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D4A67E44(uint64_t a1)
{
  return a1;
}

uint64_t MatterAccessoryWriteAttributeLogEvent.home.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_home;
  swift_beginAccess();
  return MEMORY[0x1D9452C30](v1);
}

void MatterAccessoryWriteAttributeLogEvent.home.setter(void *a1)
{
}

void (*MatterAccessoryWriteAttributeLogEvent.home.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_home;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1D9452C30](v5);
  return sub_1D4A67F98;
}

void sub_1D4A67F98(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }
  free(v3);
}

uint64_t MatterAccessoryWriteAttributeLogEvent.nodeId.getter()
{
  return *(void *)(v0 + OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_nodeId);
}

id MatterAccessoryWriteAttributeLogEvent.endpointId.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_endpointId);
}

id MatterAccessoryWriteAttributeLogEvent.clusterId.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_clusterId);
}

id MatterAccessoryWriteAttributeLogEvent.attributeId.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_attributeId);
}

id MatterAccessoryWriteAttributeLogEvent.value.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_value);
}

void *MatterAccessoryWriteAttributeLogEvent.timedWriteTimeout.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_timedWriteTimeout);
  id v2 = v1;
  return v1;
}

uint64_t MatterAccessoryWriteAttributeLogEvent.__allocating_init(home:nodeId:endpointId:clusterId:attributeId:value:timedWriteTimeout:)(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v15 = objc_allocWithZone(v7);
  return MatterAccessoryWriteAttributeLogEvent.init(home:nodeId:endpointId:clusterId:attributeId:value:timedWriteTimeout:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t MatterAccessoryWriteAttributeLogEvent.init(home:nodeId:endpointId:clusterId:attributeId:value:timedWriteTimeout:)(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  uint64_t v8 = v7;
  id v34 = a2;
  id v35 = a7;
  uint64_t v14 = sub_1D5459878();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  long long v33 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99608);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  uint64_t v20 = &v8[OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_coreAnalyticsEventName];
  *(void *)uint64_t v20 = 0xD00000000000003BLL;
  *((void *)v20 + 1) = 0x80000001D54D5320;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_coreAnalyticsEventOptions] = 0;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_nodeId] = v34;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_endpointId] = a3;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_clusterId] = a4;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_attributeId] = a5;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_value] = a6;
  id v21 = v35;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_timedWriteTimeout] = v35;
  id v35 = v21;
  id v34 = a3;
  id v32 = a4;
  id v22 = a5;
  id v23 = a6;
  id v24 = objc_msgSend(a1, sel_uuid);
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = v33;
    sub_1D5459858();

    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v26, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14);
    if (result != 1)
    {
      size_t v28 = (void *)sub_1D5459838();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
      uint64_t v29 = (objc_class *)type metadata accessor for MatterAccessoryWriteAttributeLogEvent();
      v36.receiver = v8;
      v36.super_class = v29;
      id v30 = objc_msgSendSuper2(&v36, sel_initWithHomeUUID_, v28);

      return (uint64_t)v30;
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v19, 1, 1, v14);
  }
  __break(1u);
  return result;
}

uint64_t MatterAccessoryWriteAttributeLogEvent.coreAnalyticsEventName.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_coreAnalyticsEventName);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t MatterAccessoryWriteAttributeLogEvent.coreAnalyticsEventDictionary.getter()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA70F850);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D54C3A00;
  *(void *)(inited + 32) = 0x644965646F6ELL;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 4_Block_object_dispose(&STACK[0x368], 8) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedLongLong_, *(void *)(v0 + OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_nodeId));
  *(void *)(inited + 56) = 0x746E696F70646E65;
  *(void *)(inited + 64) = 0xEA00000000006449;
  id v2 = *(void **)(v0 + OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_endpointId);
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = 0x4972657473756C63;
  *(void *)(inited + 8_Block_object_dispose(&STACK[0x368], 8) = 0xE900000000000064;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_clusterId);
  *(void *)(inited + 96) = v3;
  *(void *)(inited + 104) = 0x7475626972747461;
  *(void *)(inited + 112) = 0xEB00000000644965;
  id v4 = *(void **)(v0 + OBJC_IVAR___HMDMatterAccessoryWriteAttributeLogEvent_attributeId);
  *(void *)(inited + 120) = v4;
  id v5 = v2;
  id v6 = v3;
  id v7 = v4;
  return sub_1D4A61714(inited);
}

uint64_t MatterAccessoryWriteAttributeLogEvent.coreAnalyticsEventOptions.getter()
{
  return 0;
}

id MatterAccessoryWriteAttributeLogEvent.__allocating_init(homeUUID:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = (void *)sub_1D5459838();
  id v5 = objc_msgSend(v3, sel_initWithHomeUUID_, v4);

  uint64_t v6 = sub_1D5459878();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return v5;
}

void MatterAccessoryWriteAttributeLogEvent.init(homeUUID:)()
{
}

id MatterAccessoryWriteAttributeLogEvent.__allocating_init(startTime:homeUUID:)(uint64_t a1, double a2)
{
  id v5 = objc_allocWithZone(v2);
  uint64_t v6 = (void *)sub_1D5459838();
  id v7 = objc_msgSend(v5, sel_initWithStartTime_homeUUID_, v6, a2);

  uint64_t v8 = sub_1D5459878();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

void MatterAccessoryWriteAttributeLogEvent.init(startTime:homeUUID:)()
{
}

id MatterAccessoryWriteAttributeLogEvent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MatterAccessoryWriteAttributeLogEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MatterAccessoryWriteAttributeLogEvent()
{
  return self;
}

uint64_t sub_1D4A68B38(void *a1)
{
  objc_super v2 = v1;
  id v53 = a1;
  uint64_t v3 = sub_1D5459878();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x1F4188790](v3);
  id v56 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99608);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA70F940);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D5459818();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v52 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = sub_1D5459728();
  uint64_t v59 = *(void *)(v19 - 8);
  uint64_t v60 = v19;
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v58 = (char *)v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v57 = (char *)v52 - v22;
  id v23 = objc_msgSend(v2, sel_startDate);
  sub_1D54597F8();

  id v24 = v2;
  id v25 = objc_msgSend(v2, sel_endDate);
  if (v25)
  {
    uint64_t v26 = v25;
    sub_1D54597F8();

    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v27(v10, v15, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v27(v18, v10, v11);
      size_t v28 = v24;
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  size_t v28 = v24;
  id v29 = objc_msgSend(v24, sel_startDate);
  sub_1D54597F8();

  sub_1D4A69AA0((uint64_t)v10);
LABEL_6:
  id v30 = v57;
  sub_1D5459718();
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v58, v30, v60);
  id v31 = v53;
  id v32 = objc_msgSend(v53, sel_spiClientIdentifier);
  uint64_t v33 = v54;
  uint64_t v34 = v55;
  if (!v32)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v7, 1, 1, v55);
    goto LABEL_13;
  }
  id v35 = v32;
  objc_super v36 = v56;
  sub_1D5459858();

  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v7, v36, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v7, 0, 1, v34);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v7, 1, v34);
  if (result == 1)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v52[1] = sub_1D5459828();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v33 + 8);
  v38(v7, v34);
  BOOL v39 = objc_msgSend(v31, sel_atHomeLevel) == (id)2 || objc_msgSend(v31, sel_atHomeLevel) == (id)3;
  LODWORD(v54) = v39;
  uint64_t v40 = HMDRequestSourceAsString(*(void *)&v28[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_source]);
  sub_1D5459BE8();

  uint64_t v41 = v56;
  sub_1D5459868();
  sub_1D5459828();
  v38(v41, v34);
  id v42 = objc_allocWithZone(MEMORY[0x1E4F50370]);
  CFAllocatorRef v43 = v58;
  uint64_t v44 = (void *)sub_1D5459708();
  uint64_t v45 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  uint64_t v46 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  uint64_t v47 = (void *)sub_1D5459BC8();
  uint64_t v48 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  id v49 = objc_msgSend(v42, sel_initWithDateInterval_homeUniqueIdentifier_homeOccupancy_source_clientName_eventCorrelationIdentifier_, v44, v45, v54, v46, v47, v48);

  uint64_t v50 = v60;
  unint64_t v51 = *(void (**)(char *, uint64_t))(v59 + 8);
  v51(v43, v60);
  v51(v57, v50);
  return (uint64_t)v49;
}

unint64_t sub_1D4A69248()
{
  return 0xD000000000000024;
}

id sub_1D4A69264(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v27 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  id v25 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  if (a13)
  {
    uint64_t v13 = (void *)sub_1D5459BC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v14 = (void *)sub_1D5459C48();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  id v23 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  id v24 = (void *)sub_1D5459C48();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_1D5459BC8();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(v28, sel_initWithBase_stringAccessoryState_accessoryUniqueIdentifier_serviceUniqueIdentifier_serviceType_characteristicType_serviceGroupUniqueIdentifier_zoneUniqueIdentifiers_roomUniqueIdentifier_accessoryName_serviceName_roomName_serviceGroupName_zoneNames_homeName_, a1, v27, v26, v25, v19, v18, v13, v14, v15, v20, v21, v22, v23, v24, v16);

  return v29;
}

uint64_t _s19HomeKitDaemonLegacy36MatterAccessoryInvokeCommandLogEventC25biomeEventsRepresentation03forI8ObserverSaySo11BMStoreData_pGSo08HMDBiomeijO0C_tF_0()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1D5459AF8();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v41 - v7;
  MEMORY[0x1F4188790](v6);
  id v42 = (char *)&v41 - v9;
  id v10 = *(void **)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_clusterId);
  id v11 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, 97);
  unsigned int v12 = objc_msgSend(v10, sel_isEqualToNumber_, v11);

  if (!v12)
  {
    sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8C2F0);
    id v30 = sub_1D5459AD8();
    os_log_type_t v31 = sub_1D5459D68();
    if (os_log_type_enabled(v30, v31))
    {
      id v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v32 = 0;
      _os_log_impl(&dword_1D49D5000, v30, v31, "Ignoring MatterAccessoryInvokeCommandLogEvent since MTRClusterIDType is not rvcOperationState", v32, 2u);
      MEMORY[0x1D9452B60](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v44);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = *(void **)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_commandId);
  id v14 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, 3);
  LODWORD(v13) = objc_msgSend(v13, sel_isEqualToNumber_, v14);

  if (!v13)
  {
    sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8C2F0);
    uint64_t v33 = sub_1D5459AD8();
    os_log_type_t v34 = sub_1D5459D68();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v35 = 0;
      _os_log_impl(&dword_1D49D5000, v33, v34, "Ignoring MatterAccessoryInvokeCommandLogEvent MTRCommandIDType is not clusterRVCOperationalStateCommandResume", v35, 2u);
      MEMORY[0x1D9452B60](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v44);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v15 = v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_home;
  swift_beginAccess();
  uint64_t v16 = (void *)MEMORY[0x1D9452C30](v15);
  if (!v16)
  {
    objc_super v36 = v42;
    sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8C2F0);
    uint64_t v37 = sub_1D5459AD8();
    os_log_type_t v38 = sub_1D5459D88();
    if (os_log_type_enabled(v37, v38))
    {
      BOOL v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v39 = 0;
      _os_log_impl(&dword_1D49D5000, v37, v38, "Unable to donate to Biome due to nil home", v39, 2u);
      MEMORY[0x1D9452B60](v39, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v43 + 8))(v36, v44);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = v16;
  uint64_t v18 = (void *)sub_1D4A68B38(v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD99A00);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1D54C3660;
  uint64_t v45 = *(void *)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_nodeId);
  sub_1D4A69A4C();
  id v20 = v18;
  uint64_t v21 = sub_1D5459E78();
  uint64_t v23 = v22;
  id v24 = objc_msgSend(v10, sel_description);
  uint64_t v25 = sub_1D5459BE8();
  uint64_t v27 = v26;

  id v28 = objc_allocWithZone(MEMORY[0x1E4F50350]);
  *(void *)(v19 + 32) = sub_1D4A69264(v20, 0, 0xE000000000000000, v21, v23, v25, v27, 0, 0xE000000000000000, 0, 0xE000000000000000, 0, 0);
  uint64_t v45 = v19;
  sub_1D5459C88();
  uint64_t v29 = v45;

  return v29;
}

unint64_t sub_1D4A69A4C()
{
  unint64_t result = qword_1EA70F930;
  if (!qword_1EA70F930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA70F930);
  }
  return result;
}

uint64_t sub_1D4A69AA0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA70F940);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D4A69B00()
{
  if (objc_msgSend(v0, sel_discoveryController))
  {
    sub_1D5459E88();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_1D4A69BB8((uint64_t)v3, (uint64_t)v4);
  if (v5)
  {
    type metadata accessor for DiscoveryController(0);
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1D4A5D56C((uint64_t)v4);
    return 0;
  }
}

uint64_t sub_1D4A69BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD99A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id Account.__deallocating_deinit()
{
  return sub_1D4A6AA38(type metadata accessor for Account);
}

uint64_t type metadata accessor for Account()
{
  return self;
}

uint64_t Account.ChangeObserver.delegate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___HMDAccountChangeObserver_delegate;
  swift_beginAccess();
  return MEMORY[0x1D9452C30](v1);
}

uint64_t Account.ChangeObserver.delegate.setter()
{
  uint64_t v1 = &v0[OBJC_IVAR___HMDAccountChangeObserver_delegate];
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1D9452C30](v1);
  swift_unknownObjectWeakAssign();
  if (v2)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void **)&v0[OBJC_IVAR___HMDAccountChangeObserver_eventSubscriber];
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v0;
    void aBlock[4] = sub_1D4A69F18;
    aBlock[5] = v4;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D4A69F3C;
    aBlock[3] = &block_descriptor_2;
    uint64_t v5 = _Block_copy(aBlock);
    uint64_t v6 = v0;
    swift_release();
    objc_msgSend(v3, sel_registerAccountChangeEventHandler_, v5);
    _Block_release(v5);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1D4A69EE0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1D4A69F18(void *a1, int a2)
{
}

void sub_1D4A69F3C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(void *, uint64_t))(a1 + 32);
  swift_retain();
  id v6 = a2;
  v5(a2, a3);
  swift_release();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

void (*Account.ChangeObserver.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HMDAccountChangeObserver_delegate;
  v3[10] = v1;
  v3[11] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[9] = MEMORY[0x1D9452C30](v5);
  return sub_1D4A6A050;
}

void sub_1D4A6A050(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = MEMORY[0x1D9452C30](*(void *)(*(void *)a1 + 80) + *(void *)(*(void *)a1 + 88));
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    if (!v4)
    {
      uint64_t v5 = (char *)v3[10];
      id v6 = *(void **)&v5[OBJC_IVAR___HMDAccountChangeObserver_eventSubscriber];
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v5;
      v3[4] = sub_1D4A6AAF0;
      v3[5] = v7;
      void *v3 = MEMORY[0x1E4F143A8];
      v3[1] = 1107296256;
      _OWORD v3[2] = sub_1D4A69F3C;
      v3[3] = &block_descriptor_7;
      uint64_t v8 = _Block_copy(v3);
      uint64_t v9 = v5;
      swift_unknownObjectRetain();
      swift_release();
      objc_msgSend(v6, sel_registerAccountChangeEventHandler_, v8);
      _Block_release(v8);
    }
    goto LABEL_5;
  }
  if (v4)
  {
LABEL_5:
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  id v10 = (char *)v3[10];
  id v11 = *(void **)&v10[OBJC_IVAR___HMDAccountChangeObserver_eventSubscriber];
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  v3[4] = sub_1D4A6AAF0;
  v3[5] = v12;
  void *v3 = MEMORY[0x1E4F143A8];
  v3[1] = 1107296256;
  _OWORD v3[2] = sub_1D4A69F3C;
  v3[3] = &block_descriptor_14;
  uint64_t v13 = _Block_copy(v3);
  id v14 = v10;
  swift_release();
  objc_msgSend(v11, sel_registerAccountChangeEventHandler_, v13);
  _Block_release(v13);
LABEL_8:
  swift_unknownObjectRelease();
  free(v3);
}

id Account.ChangeObserver.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id Account.ChangeObserver.init()()
{
  id v0 = objc_msgSend(self, sel_sharedSubscriber);
  id v1 = (objc_class *)type metadata accessor for Account.ChangeObserver();
  uint64_t v2 = (char *)objc_allocWithZone(v1);
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR___HMDAccountChangeObserver_eventSubscriber] = v0;
  v5.receiver = v2;
  v5.super_class = v1;
  id v3 = objc_msgSendSuper2(&v5, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t type metadata accessor for Account.ChangeObserver()
{
  return self;
}

void sub_1D4A6A43C(void *a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1D5459AF8();
  uint64_t v8 = *(NSObject **)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  id v14 = (char *)&v39 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v39 - v15;
  if (!a1) {
    goto LABEL_8;
  }
  uint64_t v17 = *MEMORY[0x1E4F4BF38];
  id v42 = a1;
  if (![v42 aa_isAccountClass:v17])
  {

LABEL_8:
    sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8C3F8);
    uint64_t v19 = a1;
    id v20 = sub_1D5459AD8();
    os_log_type_t v21 = sub_1D5459D78();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v41 = v7;
      id v42 = v8;
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      if (a1)
      {
        uint64_t v43 = v19;
        id v24 = v19;
      }
      else
      {
        uint64_t v43 = 0;
      }
      sub_1D5459E48();
      uint64_t v8 = v42;
      void *v23 = a1;

      _os_log_impl(&dword_1D49D5000, v20, v21, "Ignoring change for non-primary account %@", v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
      swift_arrayDestroy();
      MEMORY[0x1D9452B60](v23, -1, -1);
      MEMORY[0x1D9452B60](v22, -1, -1);
      uint64_t v7 = (uint64_t)v41;
    }
    else
    {

      id v20 = v19;
    }

    ((void (*)(char *, uint64_t))v8[1].isa)(v11, v7);
    return;
  }
  switch(a2)
  {
    case 1:
    case 2:
    case 4:
    case 5:
      uint64_t v18 = v42;

      break;
    case 3:
      sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8C3F8);
      uint64_t v29 = v42;
      id v30 = sub_1D5459AD8();
      os_log_type_t v31 = sub_1D5459D88();
      if (os_log_type_enabled(v30, v31))
      {
        id v32 = (uint8_t *)swift_slowAlloc();
        BOOL v39 = (void *)swift_slowAlloc();
        id v42 = v8;
        uint64_t v43 = v29;
        uint64_t v40 = v32;
        *(_DWORD *)id v32 = 138412290;
        uint64_t v33 = v29;
        uint64_t v41 = v29;
        os_log_type_t v34 = v33;
        uint64_t v8 = v42;
        sub_1D5459E48();
        id v35 = v39;
        *BOOL v39 = a1;

        objc_super v36 = v40;
        uint64_t v29 = v41;
        _os_log_impl(&dword_1D49D5000, v30, v31, "Account removed %@", v40, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99B98);
        swift_arrayDestroy();
        MEMORY[0x1D9452B60](v35, -1, -1);
        MEMORY[0x1D9452B60](v36, -1, -1);
      }
      else
      {

        id v30 = v29;
      }

      ((void (*)(char *, uint64_t))v8[1].isa)(v16, v7);
      uint64_t v37 = v3 + OBJC_IVAR___HMDAccountChangeObserver_delegate;
      swift_beginAccess();
      os_log_type_t v38 = (void *)MEMORY[0x1D9452C30](v37);
      if (v38)
      {
        objc_msgSend(v38, sel_accountChangeObserver_observedDeletedAccount_, v3, v29);
        swift_unknownObjectRelease();
      }

      break;
    default:
      sub_1D4A525FC(ObjectType, (uint64_t)&off_1F2C8C3F8);
      uint64_t v25 = sub_1D5459AD8();
      os_log_type_t v26 = sub_1D5459D88();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 67109120;
        LODWORD(v43) = a2;
        sub_1D5459E48();
        _os_log_impl(&dword_1D49D5000, v25, v26, "Unexpected, unhandled account change case: %u", v27, 8u);
        MEMORY[0x1D9452B60](v27, -1, -1);
        id v28 = v42;
      }
      else
      {
        id v28 = v25;
        uint64_t v25 = v42;
      }

      ((void (*)(char *, uint64_t))v8[1].isa)(v14, v7);
      break;
  }
}

id Account.ChangeObserver.__deallocating_deinit()
{
  return sub_1D4A6AA38(type metadata accessor for Account.ChangeObserver);
}

id sub_1D4A6AA38(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

unint64_t sub_1D4A6AABC()
{
  return 0xD000000000000018;
}

uint64_t MatterAccessoryInvokeCommandLogEvent.home.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_home;
  swift_beginAccess();
  return MEMORY[0x1D9452C30](v1);
}

void MatterAccessoryInvokeCommandLogEvent.home.setter(void *a1)
{
}

void (*MatterAccessoryInvokeCommandLogEvent.home.modify(void *a1))(id **a1, char a2)
{
  objc_super v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_home;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1D9452C30](v5);
  return sub_1D4A67F98;
}

uint64_t MatterAccessoryInvokeCommandLogEvent.nodeId.getter()
{
  return *(void *)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_nodeId);
}

id MatterAccessoryInvokeCommandLogEvent.endpointId.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_endpointId);
}

id MatterAccessoryInvokeCommandLogEvent.clusterId.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_clusterId);
}

id MatterAccessoryInvokeCommandLogEvent.commandId.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_commandId);
}

id MatterAccessoryInvokeCommandLogEvent.fields.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_fields);
}

uint64_t MatterAccessoryInvokeCommandLogEvent.source.getter()
{
  return *(void *)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_source);
}

uint64_t MatterAccessoryInvokeCommandLogEvent.__allocating_init(home:nodeId:endpointId:clusterId:commandId:fields:source:)(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  uint64_t v8 = v7;
  id v32 = a6;
  id v33 = a7;
  id v31 = a2;
  uint64_t v13 = sub_1D5459878();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99608);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v30 = v8;
  id v20 = (char *)objc_allocWithZone(v8);
  swift_unknownObjectWeakInit();
  os_log_type_t v21 = &v20[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_coreAnalyticsEventName];
  *(void *)os_log_type_t v21 = 0xD00000000000003ALL;
  *((void *)v21 + 1) = 0x80000001D54D5360;
  *(void *)&v20[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_coreAnalyticsEventOptions] = 0;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  uint64_t v22 = v32;
  *(void *)&v20[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_nodeId] = v31;
  *(void *)&v20[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_endpointId] = a3;
  *(void *)&v20[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_clusterId] = a4;
  *(void *)&v20[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_commandId] = a5;
  *(void *)&v20[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_fields] = v22;
  *(void *)&v20[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_source] = v33;
  id v33 = a3;
  id v31 = a4;
  id v29 = a5;
  id v23 = v22;
  id v24 = objc_msgSend(a1, sel_uuid);
  if (v24)
  {
    uint64_t v25 = v24;
    sub_1D5459858();

    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v16, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13);
    if (result != 1)
    {
      uint64_t v27 = (void *)sub_1D5459838();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      v34.receiver = v20;
      v34.super_class = v30;
      id v28 = objc_msgSendSuper2(&v34, sel_initWithHomeUUID_, v27);

      return (uint64_t)v28;
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v19, 1, 1, v13);
  }
  __break(1u);
  return result;
}

uint64_t MatterAccessoryInvokeCommandLogEvent.init(home:nodeId:endpointId:clusterId:commandId:fields:source:)(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  uint64_t v8 = v7;
  id v32 = a6;
  id v33 = a7;
  id v31 = a2;
  uint64_t v13 = sub_1D5459878();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99608);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  id v20 = &v8[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_coreAnalyticsEventName];
  *(void *)id v20 = 0xD00000000000003ALL;
  *((void *)v20 + 1) = 0x80000001D54D5360;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_coreAnalyticsEventOptions] = 0;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  os_log_type_t v21 = v32;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_nodeId] = v31;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_endpointId] = a3;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_clusterId] = a4;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_commandId] = a5;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_fields] = v21;
  *(void *)&v8[OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_source] = v33;
  id v33 = a3;
  id v31 = a4;
  id v30 = a5;
  id v22 = v21;
  id v23 = objc_msgSend(a1, sel_uuid);
  if (v23)
  {
    id v24 = v23;
    sub_1D5459858();

    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v16, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13);
    if (result != 1)
    {
      os_log_type_t v26 = (void *)sub_1D5459838();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      uint64_t v27 = (objc_class *)type metadata accessor for MatterAccessoryInvokeCommandLogEvent();
      v34.receiver = v8;
      v34.super_class = v27;
      id v28 = objc_msgSendSuper2(&v34, sel_initWithHomeUUID_, v26);

      return (uint64_t)v28;
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v19, 1, 1, v13);
  }
  __break(1u);
  return result;
}

uint64_t MatterAccessoryInvokeCommandLogEvent.coreAnalyticsEventName.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_coreAnalyticsEventName);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t MatterAccessoryInvokeCommandLogEvent.coreAnalyticsEventDictionary.getter()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA70F850);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D54C3AF0;
  *(void *)(inited + 32) = 0x644965646F6ELL;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 4_Block_object_dispose(&STACK[0x368], 8) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedLongLong_, *(void *)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_nodeId));
  *(void *)(inited + 56) = 0x746E696F70646E65;
  *(void *)(inited + 64) = 0xEA00000000006449;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_endpointId);
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = 0x4972657473756C63;
  *(void *)(inited + 8_Block_object_dispose(&STACK[0x368], 8) = 0xE900000000000064;
  objc_super v3 = *(void **)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_clusterId);
  *(void *)(inited + 96) = v3;
  *(void *)(inited + 104) = 0x49646E616D6D6F63;
  *(void *)(inited + 112) = 0xE900000000000064;
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_commandId);
  *(void *)(inited + 120) = v4;
  *(void *)(inited + 12_Block_object_dispose(&STACK[0x368], 8) = 0x656372756F73;
  *(void *)(inited + 136) = 0xE600000000000000;
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR___HMDMatterAccessoryInvokeCommandLogEvent_source);
  id v6 = objc_allocWithZone(NSNumber);
  id v7 = v2;
  id v8 = v3;
  id v9 = v4;
  *(void *)(inited + 144) = objc_msgSend(v6, sel_initWithUnsignedInteger_, v5);
  return sub_1D4A61714(inited);
}

uint64_t MatterAccessoryInvokeCommandLogEvent.coreAnalyticsEventOptions.getter()
{
  return 0;
}

id MatterAccessoryInvokeCommandLogEvent.__allocating_init(homeUUID:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  uint64_t v4 = (void *)sub_1D5459838();
  id v5 = objc_msgSend(v3, sel_initWithHomeUUID_, v4);

  uint64_t v6 = sub_1D5459878();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return v5;
}

void MatterAccessoryInvokeCommandLogEvent.init(homeUUID:)()
{
}

id MatterAccessoryInvokeCommandLogEvent.__allocating_init(startTime:homeUUID:)(uint64_t a1, double a2)
{
  id v5 = objc_allocWithZone(v2);
  uint64_t v6 = (void *)sub_1D5459838();
  id v7 = objc_msgSend(v5, sel_initWithStartTime_homeUUID_, v6, a2);

  uint64_t v8 = sub_1D5459878();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

void MatterAccessoryInvokeCommandLogEvent.init(startTime:homeUUID:)()
{
}

id MatterAccessoryInvokeCommandLogEvent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MatterAccessoryInvokeCommandLogEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MatterAccessoryInvokeCommandLogEvent()
{
  return self;
}

uint64_t sub_1D4A6BB78(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  __swift_project_boxed_opaque_existential_0(a3, v7);
  id v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  uint64_t v10 = v9(v7, v8);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *a4;
  *a4 = 0x8000000000000000;
  sub_1D4A6CFB0(v10, a1, a2, isUniquelyReferenced_nonNull_native);
  *a4 = v13;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1D4A6BD5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Metric.LogEventAdaptor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL sub_1D4A6BDD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D4A6BDEC()
{
  return sub_1D545A0F8();
}

unint64_t sub_1D4A6BE1C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1D4A728F0(*a1);
  *a2 = result;
  return result;
}

void sub_1D4A6BE48(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t *sub_1D4A6BE54@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_1D4A6BE6C()
{
  return sub_1D545A108();
}

uint64_t sub_1D4A6BEB4()
{
  return sub_1D545A108();
}

unint64_t sub_1D4A6BEF8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FA00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D54C3B40;
  *(void *)(inited + 32) = 0x69466957736168;
  *(void *)(inited + 40) = 0xE700000000000000;
  char v2 = *v0;
  uint64_t v3 = MEMORY[0x1E4FBB390];
  *(void *)(inited + 72) = MEMORY[0x1E4FBB390];
  *(void *)(inited + 80) = &off_1F2C8C420;
  *(unsigned char *)(inited + 4_Block_object_dispose(&STACK[0x368], 8) = v2;
  *(void *)(inited + 8_Block_object_dispose(&STACK[0x368], 8) = 0x7265687445736168;
  *(void *)(inited + 96) = 0xEB0000000074656ELL;
  char v4 = v0[1];
  *(void *)(inited + 12_Block_object_dispose(&STACK[0x368], 8) = v3;
  *(void *)(inited + 136) = &off_1F2C8C420;
  *(unsigned char *)(inited + 104) = v4;
  strcpy((char *)(inited + 144), "primaryService");
  *(unsigned char *)(inited + 159) = -18;
  uint64_t v5 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 160) = v0[2];
  *(void *)(inited + 200) = 0xD000000000000016;
  *(void *)(inited + 20_Block_object_dispose(&STACK[0x368], 8) = 0x80000001D54D6A40;
  *(void *)(inited + 216) = v0[3];
  *(void *)(inited + 256) = 0x4973614869666977;
  *(void *)(inited + 264) = 0xE900000000000050;
  *(unsigned char *)(inited + 272) = v0[4];
  strcpy((char *)(inited + 312), "ethernetHasIP");
  *(_WORD *)(inited + 326) = -4864;
  *(unsigned char *)(inited + 32_Block_object_dispose(&STACK[0x368], 8) = v0[5];
  *(void *)(inited + 36_Block_object_dispose(&STACK[0x368], 8) = 0xD000000000000013;
  *(void *)(inited + 376) = 0x80000001D54D6A60;
  *(unsigned char *)(inited + 384) = v0[6];
  *(void *)(inited + 424) = 0xD000000000000016;
  *(void *)(inited + 432) = 0x80000001D54D6A80;
  *(unsigned char *)(inited + 440) = v0[7];
  *(void *)(inited + 480) = 0x616D697250736168;
  *(void *)(inited + 48_Block_object_dispose(&STACK[0x368], 8) = 0xEA00000000007972;
  *(unsigned char *)(inited + 496) = v0[8];
  strcpy((char *)(inited + 536), "numResidents");
  *(unsigned char *)(inited + 549) = 0;
  *(_WORD *)(inited + 550) = -5120;
  uint64_t v6 = *((void *)v0 + 3);
  *(void *)(inited + 552) = *((void *)v0 + 2);
  *(void *)(inited + 184) = v5;
  *(void *)(inited + 192) = &off_1F2C8C430;
  *(void *)(inited + 240) = v5;
  *(void *)(inited + 24_Block_object_dispose(&STACK[0x368], 8) = &off_1F2C8C430;
  *(void *)(inited + 296) = v3;
  *(void *)(inited + 304) = &off_1F2C8C420;
  *(void *)(inited + 352) = v3;
  *(void *)(inited + 360) = &off_1F2C8C420;
  *(void *)(inited + 40_Block_object_dispose(&STACK[0x368], 8) = v3;
  *(void *)(inited + 416) = &off_1F2C8C420;
  *(void *)(inited + 464) = v3;
  *(void *)(inited + 472) = &off_1F2C8C420;
  *(void *)(inited + 520) = v3;
  *(void *)(inited + 52_Block_object_dispose(&STACK[0x368], 8) = &off_1F2C8C420;
  *(void *)(inited + 576) = v5;
  *(void *)(inited + 584) = &off_1F2C8C430;
  *(void *)(inited + 592) = 0xD000000000000018;
  *(void *)(inited + 600) = 0x80000001D54D6AA0;
  *(void *)(inited + 632) = v5;
  *(void *)(inited + 640) = &off_1F2C8C430;
  *(void *)(inited + 60_Block_object_dispose(&STACK[0x368], 8) = v6;
  strcpy((char *)(inited + 648), "wifiRSSIStatus");
  *(unsigned char *)(inited + 663) = -18;
  uint64_t v7 = v0[32];
  *(void *)(inited + 68_Block_object_dispose(&STACK[0x368], 8) = v5;
  *(void *)(inited + 696) = &off_1F2C8C430;
  *(void *)(inited + 664) = v7;
  *(void *)(inited + 704) = 0x4969466957736168;
  *(void *)(inited + 712) = 0xEB000000006F666ELL;
  LOBYTE(v5) = v0[33];
  *(void *)(inited + 744) = v3;
  *(void *)(inited + 752) = &off_1F2C8C420;
  *(unsigned char *)(inited + 720) = v5;
  return sub_1D4A61830(inited);
}

uint64_t sub_1D4A6C198(uint64_t a1, uint64_t a2, unsigned char *a3, unsigned char *a4, unsigned char *a5)
{
  uint64_t v55 = a4;
  uint64_t v48 = a3;
  id v49 = a5;
  uint64_t v7 = sub_1D54598F8();
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1D5459A48();
  uint64_t v56 = *(void *)(v57 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v57);
  id v53 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v46 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = sub_1D5459A28();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a1;
  uint64_t v20 = sub_1D54598D8();
  uint64_t v22 = v21;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = v54;
    uint64_t v25 = v51;
    uint64_t v24 = v52;
    os_log_type_t v26 = v50;
    goto LABEL_3;
  }
  uint64_t v47 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a2, v16);
  uint64_t v31 = sub_1D54599A8();
  uint64_t v33 = v32;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (v20 == v31 && v22 == v33)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v23 = v54;
    uint64_t v25 = v51;
    uint64_t v24 = v52;
    os_log_type_t v26 = v50;
  }
  else
  {
    char v35 = sub_1D545A078();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v54;
    uint64_t v25 = v51;
    uint64_t v24 = v52;
    os_log_type_t v26 = v50;
    if ((v35 & 1) == 0) {
      goto LABEL_3;
    }
  }
  id v42 = v47;
  sub_1D54598E8();
  uint64_t v43 = v56;
  uint64_t v44 = v57;
  int v45 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v42, v57);
  if (v45 == *MEMORY[0x1E4F64D38])
  {
    *uint64_t v48 = 2;
  }
  else if (v45 == *MEMORY[0x1E4F64D40])
  {
    *uint64_t v48 = 1;
  }
  else
  {
    *uint64_t v48 = 3;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
  }
LABEL_3:
  uint64_t v27 = *(void *)(sub_1D54598A8() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v26, v23, v24);
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v24);
    uint64_t v28 = v57;
    uint64_t v29 = v53;
    uint64_t v30 = v56;
  }
  else
  {
    uint64_t v36 = *(void *)(sub_1D54598B8() + 16);
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v26, v24);
    uint64_t v28 = v57;
    uint64_t v29 = v53;
    uint64_t v30 = v56;
    if (!v36) {
      return result;
    }
  }
  sub_1D54598E8();
  os_log_type_t v38 = *(void (**)(char *, void, uint64_t))(v30 + 104);
  v38(v29, *MEMORY[0x1E4F64D40], v28);
  char v39 = sub_1D5459A38();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v30 + 8);
  v40(v29, v28);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v40)(v13, v28);
  if ((v39 & 1) != 0
    || (sub_1D54598E8(),
        v38(v29, *MEMORY[0x1E4F64D38], v28),
        char v41 = sub_1D5459A38(),
        v40(v29, v28),
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v40)(v13, v28),
        uint64_t v55 = v49,
        (v41 & 1) != 0))
  {
    *uint64_t v55 = 1;
  }
  return result;
}

uint64_t sub_1D4A6C6D0()
{
  return sub_1D5459BC8();
}

uint64_t sub_1D4A6C6D8()
{
  return MEMORY[0x1F40E6388](*v0);
}

uint64_t sub_1D4A6C6E0()
{
  return MEMORY[0x1F40E6478](*v0);
}

uint64_t sub_1D4A6C6E8()
{
  return MEMORY[0x1F40E63C8](*v0);
}

uint64_t type metadata accessor for Metric.LogEventAdaptor()
{
  return self;
}

ValueMetadata *type metadata accessor for Metric()
{
  return &type metadata for Metric;
}

uint64_t sub_1D4A6C724(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1D4A6BB78(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

unint64_t sub_1D4A6C72C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FA00);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1D54C3B50;
  *(void *)(v2 + 32) = 0xD000000000000016;
  *(void *)(v2 + 40) = 0x80000001D54D6830;
  *(void *)(v2 + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 80) = &off_1F2C8C410;
  *(_OWORD *)(v2 + 4_Block_object_dispose(&STACK[0x368], 8) = *(_OWORD *)v1;
  strcpy((char *)(v2 + 88), "numUniqueSSIDs");
  *(unsigned char *)(v2 + 103) = -18;
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(void *)(v2 + 12_Block_object_dispose(&STACK[0x368], 8) = MEMORY[0x1E4FBB550];
  *(void *)(v2 + 136) = &off_1F2C8C430;
  uint64_t v4 = *(void *)(v1 + 152);
  *(void *)(v2 + 104) = *(void *)(v1 + 144);
  *(void *)(v2 + 144) = 0x7571696E556D756ELL;
  *(void *)(v2 + 152) = 0xEF73444953534265;
  *(void *)(v2 + 184) = v3;
  *(void *)(v2 + 192) = &off_1F2C8C430;
  *(void *)(v2 + 160) = v4;
  strcpy((char *)(v2 + 200), "numSharedSSIDs");
  *(unsigned char *)(v2 + 215) = -18;
  *(void *)(v2 + 240) = v3;
  *(void *)(v2 + 24_Block_object_dispose(&STACK[0x368], 8) = &off_1F2C8C430;
  uint64_t v5 = *(void *)(v1 + 168);
  *(void *)(v2 + 216) = *(void *)(v1 + 160);
  *(void *)(v2 + 256) = 0x65726168536D756ELL;
  *(void *)(v2 + 264) = 0xEF73444953534264;
  *(void *)(v2 + 296) = v3;
  *(void *)(v2 + 304) = &off_1F2C8C430;
  *(void *)(v2 + 272) = v5;
  *(void *)(v2 + 312) = 0xD000000000000023;
  *(void *)(v2 + 320) = 0x80000001D54D6850;
  *(void *)(v2 + 352) = v3;
  *(void *)(v2 + 360) = &off_1F2C8C430;
  uint64_t v6 = *(void *)(v1 + 184);
  *(void *)(v2 + 32_Block_object_dispose(&STACK[0x368], 8) = *(void *)(v1 + 176);
  *(void *)(v2 + 36_Block_object_dispose(&STACK[0x368], 8) = 0xD000000000000023;
  *(void *)(v2 + 376) = 0x80000001D54D6880;
  *(void *)(v2 + 40_Block_object_dispose(&STACK[0x368], 8) = v3;
  *(void *)(v2 + 416) = &off_1F2C8C430;
  *(void *)(v2 + 384) = v6;
  *(void *)(v2 + 424) = 0xD000000000000022;
  *(void *)(v2 + 432) = 0x80000001D54D68B0;
  LOBYTE(v6) = *(unsigned char *)(v1 + 192);
  uint64_t v7 = MEMORY[0x1E4FBB390];
  *(void *)(v2 + 464) = MEMORY[0x1E4FBB390];
  *(void *)(v2 + 472) = &off_1F2C8C420;
  *(unsigned char *)(v2 + 440) = v6;
  *(void *)(v2 + 480) = 0xD00000000000001FLL;
  *(void *)(v2 + 48_Block_object_dispose(&STACK[0x368], 8) = 0x80000001D54D68E0;
  LOBYTE(v5) = *(unsigned char *)(v1 + 193);
  *(void *)(v2 + 520) = v7;
  *(void *)(v2 + 52_Block_object_dispose(&STACK[0x368], 8) = &off_1F2C8C420;
  *(unsigned char *)(v2 + 496) = v5;
  *(void *)(v2 + 536) = 0xD00000000000001FLL;
  *(void *)(v2 + 544) = 0x80000001D54D6900;
  LOBYTE(v6) = *(unsigned char *)(v1 + 194);
  *(void *)(v2 + 576) = v7;
  *(void *)(v2 + 584) = &off_1F2C8C420;
  *(unsigned char *)(v2 + 552) = v6;
  *(void *)(v2 + 592) = 0xD00000000000001CLL;
  *(void *)(v2 + 600) = 0x80000001D54D6920;
  LOBYTE(v6) = *(unsigned char *)(v1 + 195);
  *(void *)(v2 + 632) = v7;
  *(void *)(v2 + 640) = &off_1F2C8C420;
  *(unsigned char *)(v2 + 60_Block_object_dispose(&STACK[0x368], 8) = v6;
  *(void *)(v2 + 64_Block_object_dispose(&STACK[0x368], 8) = 0xD000000000000020;
  *(void *)(v2 + 656) = 0x80000001D54D6940;
  LOBYTE(v6) = *(unsigned char *)(v1 + 196);
  *(void *)(v2 + 68_Block_object_dispose(&STACK[0x368], 8) = v7;
  *(void *)(v2 + 696) = &off_1F2C8C420;
  *(unsigned char *)(v2 + 664) = v6;
  *(void *)(v2 + 704) = 0xD00000000000001DLL;
  *(void *)(v2 + 712) = 0x80000001D54D6970;
  LOBYTE(v6) = *(unsigned char *)(v1 + 197);
  *(void *)(v2 + 744) = v7;
  *(void *)(v2 + 752) = &off_1F2C8C420;
  *(unsigned char *)(v2 + 720) = v6;
  *(void *)(v2 + 760) = 0xD00000000000001BLL;
  *(void *)(v2 + 76_Block_object_dispose(&STACK[0x368], 8) = 0x80000001D54D6990;
  *(void *)(v2 + 800) = v3;
  *(void *)(v2 + 80_Block_object_dispose(&STACK[0x368], 8) = &off_1F2C8C430;
  uint64_t v8 = *(void *)(v1 + 208);
  *(void *)(v2 + 776) = *(void *)(v1 + 200);
  *(void *)(v2 + 816) = 0xD00000000000001ELL;
  *(void *)(v2 + 824) = 0x80000001D54D69B0;
  *(void *)(v2 + 856) = v3;
  *(void *)(v2 + 864) = &off_1F2C8C430;
  *(void *)(v2 + 832) = v8;
  *(void *)(v2 + 872) = 0xD00000000000001CLL;
  *(void *)(v2 + 880) = 0x80000001D54D69D0;
  uint64_t v9 = *(void *)(v1 + 216);
  *(void *)(v2 + 912) = v3;
  *(void *)(v2 + 920) = &off_1F2C8C430;
  *(void *)(v2 + 88_Block_object_dispose(&STACK[0x368], 8) = v9;
  *(void *)(v2 + 92_Block_object_dispose(&STACK[0x368], 8) = 0xD000000000000014;
  *(void *)(v2 + 936) = 0x80000001D54D69F0;
  LOBYTE(v3) = *(unsigned char *)(v1 + 224);
  *(void *)(v2 + 96_Block_object_dispose(&STACK[0x368], 8) = v7;
  *(void *)(v2 + 976) = &off_1F2C8C420;
  *(unsigned char *)(v2 + 944) = v3;
  *(void *)(v2 + 984) = 0xD000000000000024;
  *(void *)(v2 + 992) = 0x80000001D54D6A10;
  char v10 = *(unsigned char *)(v1 + 225);
  *(void *)(v2 + 1024) = v7;
  *(void *)(v2 + 1032) = &off_1F2C8C420;
  *(unsigned char *)(v2 + 1000) = v10;
  sub_1D4A67E18(v1);
  unint64_t v18 = sub_1D4A61830(v2);
  long long v11 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)&v20[40] = *(_OWORD *)(v1 + 24);
  long long v21 = v11;
  __int16 v22 = *(_WORD *)(v1 + 56);
  unint64_t v12 = sub_1D4A6BEF8();
  sub_1D4A71BB0(v12, (void (*)(uint64_t, uint64_t, unsigned char *))sub_1D4A72240);
  swift_bridgeObjectRelease();
  sub_1D4A72278(v1 + 64, (uint64_t)v20);
  sub_1D4A72278((uint64_t)v20, (uint64_t)v29);
  if (LOBYTE(v29[0]) != 2)
  {
    long long v26 = v29[0];
    long long v27 = v29[1];
    __int16 v28 = v30;
    unint64_t v13 = sub_1D4A6BEF8();
    uint64_t v14 = MEMORY[0x1F4188790](v13);
    sub_1D4A71BB0(v14, (void (*)(uint64_t, uint64_t, unsigned char *))sub_1D4A72310);
    swift_bridgeObjectRelease();
  }
  sub_1D4A72278(v1 + 104, (uint64_t)v19);
  sub_1D4A72278((uint64_t)v19, (uint64_t)v31);
  if (LOBYTE(v31[0]) != 2)
  {
    long long v23 = v31[0];
    long long v24 = v31[1];
    __int16 v25 = v32;
    unint64_t v15 = sub_1D4A6BEF8();
    uint64_t v16 = MEMORY[0x1F4188790](v15);
    sub_1D4A71BB0(v16, (void (*)(uint64_t, uint64_t, unsigned char *))sub_1D4A722E0);
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t sub_1D4A6CC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = a5;
  uint64_t v11 = a6;
  sub_1D5459C18();
  uint64_t v7 = v10;
  uint64_t v8 = v11;
  sub_1D4A52548(a3, (uint64_t)&v10);
  return sub_1D4A53614((uint64_t)&v10, v7, v8);
}

unint64_t sub_1D4A6CC70()
{
  return sub_1D4A6C72C();
}

_OWORD *sub_1D4A6CCDC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1D4A65B20(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D4A76408();
      goto LABEL_7;
    }
    sub_1D4A74B9C(v15, a4 & 1);
    unint64_t v21 = sub_1D4A65B20(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1D545A0A8();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_1D4A51C94(a1, v19);
  }
LABEL_13:
  sub_1D4A6D278(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1D4A6CE30(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1D4A65B20(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D4A7679C();
      goto LABEL_7;
    }
    sub_1D4A75174(v15, a4 & 1);
    unint64_t v26 = sub_1D4A65B20(a2, a3);
    if ((v16 & 1) == (v27 & 1))
    {
      unint64_t v12 = v26;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1D545A0A8();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = sub_1D5459938();
    uint64_t v21 = *(void *)(v20 - 8);
    char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = v20;
    uint64_t v24 = v19 + *(void *)(v21 + 72) * v12;
    return v22(v24, a1, v23);
  }
LABEL_13:
  sub_1D4A6D32C(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

void sub_1D4A6CFB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1D4A65B20(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1D4A76D2C();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1D4A759C0(v15, a4 & 1);
  unint64_t v20 = sub_1D4A65B20(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1D545A0A8();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v22 = (uint64_t *)(v18[6] + 16 * v12);
  *char v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v25;
  swift_bridgeObjectRetain();
}

uint64_t sub_1D4A6D120(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1D4A65B20(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D4A76EE0();
      goto LABEL_7;
    }
    sub_1D4A75CD0(v15, a4 & 1);
    unint64_t v21 = sub_1D4A65B20(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1D545A0A8();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    __swift_destroy_boxed_opaque_existential_1(v19);
    return sub_1D4A5BF0C(a1, v19);
  }
LABEL_13:
  sub_1D4A6D3DC(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

_OWORD *sub_1D4A6D278(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1D4A51C94(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_1D4A6D2E4(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_1D4A6D32C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  void *v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_1D5459938();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_1D4A6D3DC(unint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  BOOL v6 = (void *)(a5[6] + 16 * a1);
  *BOOL v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1D4A5BF0C(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1D4A6D44C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1D4A6D75C((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1D4A6D75C((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1D9452B60](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1D4A6D5D4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1D4A6D970((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1D4A6D970((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1D9452B60](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1D4A6D75C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v31 = *(void *)(a3 + 16);
  if (!v31)
  {
    uint64_t v26 = 0;
    goto LABEL_27;
  }
  uint64_t v32 = a4 + 56;
  uint64_t v30 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  for (uint64_t i = 0; i != v31; ++i)
  {
    uint64_t v7 = (uint64_t *)(v30 + 16 * i);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    sub_1D545A0E8();
    swift_bridgeObjectRetain();
    sub_1D5459C08();
    uint64_t v10 = sub_1D545A108();
    uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = 1 << v12;
    if (((1 << v12) & *(void *)(v32 + 8 * (v12 >> 6))) == 0) {
      goto LABEL_3;
    }
    uint64_t v15 = *(void *)(a4 + 48);
    char v16 = (void *)(v15 + 16 * v12);
    BOOL v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_1D545A078() & 1) == 0)
    {
      uint64_t v21 = ~v11;
      for (unint64_t j = v12 + 1; ; unint64_t j = v23 + 1)
      {
        unint64_t v23 = j & v21;
        if (((*(void *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0) {
          break;
        }
        BOOL v24 = (void *)(v15 + 16 * v23);
        BOOL v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_1D545A078() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v13 = v23 >> 6;
          uint64_t v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_12:
    unint64_t v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v26 = v28;
LABEL_27:
  swift_retain();
  return sub_1D4A6DEB0(a1, v5, v26, a4);
}

uint64_t sub_1D4A6D970(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v61 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59) {
            goto LABEL_79;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v6 + 2;
            if (v6 + 2 >= v59) {
              goto LABEL_79;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v6 + 3;
              if (v6 + 3 >= v59) {
                goto LABEL_79;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                uint64_t v16 = v6 + 4;
                if (v6 + 4 >= v59) {
                  goto LABEL_79;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_83;
                    }
                    if (v15 >= v59) {
                      goto LABEL_79;
                    }
                    unint64_t v14 = *(void *)(v58 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        BOOL v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_1D545A0E8();
        swift_bridgeObjectRetain();
        sub_1D5459C08();
        uint64_t v20 = sub_1D545A108();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      uint64_t v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1D545A078() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          uint64_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1D545A078() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v60 = a3 + 56;
  uint64_t v61 = 0;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_79;
      }
      unint64_t v42 = *(void *)(v60 + 8 * v34);
      if (!v42)
      {
        int64_t v34 = v41 + 2;
        if (v41 + 2 >= v63) {
          goto LABEL_79;
        }
        unint64_t v42 = *(void *)(v60 + 8 * v34);
        if (!v42) {
          break;
        }
      }
    }
LABEL_62:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_1D545A0E8();
    swift_bridgeObjectRetain();
    sub_1D5459C08();
    uint64_t v47 = sub_1D545A108();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    uint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1D545A078() & 1) != 0)
    {
LABEL_76:
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_1D4A6DEB0(v57, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        uint64_t v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1D545A078() & 1) != 0) {
          goto LABEL_76;
        }
      }
LABEL_46:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v63) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)(v60 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_62;
    }
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1D4A6DEB0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F9F0);
  uint64_t result = sub_1D5459F88();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    BOOL v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1D545A0E8();
    swift_bridgeObjectRetain();
    sub_1D5459C08();
    uint64_t result = sub_1D545A108();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1D4A6E148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, char a13)
{
  int v88 = a8;
  int v90 = a7;
  uint64_t v91 = a6;
  uint64_t v92 = a5;
  uint64_t v94 = a4;
  uint64_t v96 = a3;
  uint64_t v89 = a9;
  uint64_t v111 = sub_1D5459A48();
  unint64_t v15 = *(void (***)(unsigned char *, uint64_t))(v111 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v111);
  v110 = &v84[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  uint64_t v109 = &v84[-v18];
  uint64_t v112 = sub_1D54598F8();
  uint64_t v19 = *(unsigned __int8 **)(v112 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v112);
  os_log_type_t v97 = &v84[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v20);
  uint64_t v99 = &v84[-v22];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F9F8);
  MEMORY[0x1F4188790](v23 - 8);
  unint64_t v25 = &v84[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = sub_1D5459A28();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v28(v25, 1, 1, v26);
  v114[0] = 0;
  uint64_t v29 = *(void *)(a2 + 16);
  uint64_t v95 = a1;
  unint64_t v106 = v15;
  if (v29)
  {
    uint64_t v108 = v19;
    uint64_t v30 = a2 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    uint64_t v31 = *(void *)(v27 + 72);
    do
    {
      if (sub_1D5459A18())
      {
        sub_1D4A51D64((uint64_t)v25, &qword_1EA70F9F8);
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v27 + 16))(v25, v30, v26);
        v28(v25, 0, 1, v26);
      }
      v30 += v31;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
    uint64_t v32 = v94;
    a1 = v95;
    uint64_t v19 = v108;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = v94;
  }
  __int16 v113 = 0;
  uint64_t v33 = *(void *)(a1 + 16);
  uint64_t v93 = v25;
  if (!v33) {
    goto LABEL_21;
  }
  uint64_t v34 = a1 + ((v19[80] + 32) & ~(unint64_t)v19[80]);
  uint64_t v35 = *((void *)v19 + 9);
  swift_bridgeObjectRetain();
  uint64_t v36 = v34;
  do
  {
    sub_1D4A6C198(v36, (uint64_t)v25, v114, (unsigned char *)&v113 + 1, &v113);
    v36 += v35;
    --v33;
  }
  while (v33);
  swift_bridgeObjectRelease();
  uint64_t v104 = *(void *)(a1 + 16);
  if (v104)
  {
    uint64_t v103 = v35;
    uint64_t v86 = 0;
    uint64_t v108 = v19 + 16;
    unsigned int v98 = *MEMORY[0x1E4F64D40];
    unint64_t v37 = v106++;
    unint64_t v107 = (void (**)(unsigned char *, void, uint64_t))(v37 + 13);
    uint64_t v105 = (uint64_t (**)(unsigned char *, uint64_t))(v19 + 8);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v39 = 0;
    uint64_t v87 = v34;
    unint64_t v40 = v99;
    int64_t v41 = v109;
    unint64_t v42 = v110;
    int64_t v43 = v106;
    do
    {
      uint64_t v44 = v39 + 1;
      if (__OFADD__(v39, 1))
      {
        __break(1u);
LABEL_59:
        __break(1u);
        return result;
      }
      unint64_t v102 = *(void (**)(unsigned char *, uint64_t, uint64_t))v108;
      v102(v40, v34, v112);
      sub_1D54598E8();
      uint64_t v45 = v111;
      uint64_t v101 = *v107;
      v101(v42, v98, v111);
      int v46 = sub_1D5459A38();
      uint64_t v47 = *v43;
      (*v43)(v42, v45);
      uint64_t v100 = v47;
      v47(v41, v45);
      uint64_t v48 = *v105;
      uint64_t result = (*v105)(v40, v112);
      if (v46) {
        break;
      }
      ++v39;
      v34 += v103;
    }
    while (v44 != v104);
    int v85 = v46;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v49 = 0;
    unsigned int v98 = *MEMORY[0x1E4F64D38];
    uint64_t v50 = v87;
    uint64_t v51 = v97;
    uint64_t v53 = v111;
    uint64_t v52 = v112;
    uint64_t v54 = v109;
    BOOL v55 = v100;
    while (1)
    {
      uint64_t v56 = v49 + 1;
      if (__OFADD__(v49, 1)) {
        goto LABEL_59;
      }
      v102(v51, v50, v52);
      sub_1D54598E8();
      uint64_t v57 = v110;
      v101(v110, v98, v53);
      LODWORD(v99) = sub_1D5459A38();
      v55(v57, v53);
      v55(v54, v53);
      uint64_t result = v48(v51, v52);
      if (v99) {
        break;
      }
      ++v49;
      v50 += v103;
      if (v56 == v104)
      {
        swift_bridgeObjectRelease_n();
        LODWORD(v109) = 0;
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease_n();
    LODWORD(v109) = 1;
LABEL_23:
    uint64_t v32 = v94;
    char v58 = v85;
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    LODWORD(v109) = 0;
    char v58 = 0;
  }
  uint64_t v59 = *(void *)(v32 + 16);
  LODWORD(v112) = HIBYTE(v113);
  LODWORD(v111) = v113;
  LODWORD(v110) = v114[0];
  if (!v59)
  {
    swift_bridgeObjectRelease();
    LODWORD(v10_Block_object_dispose(&STACK[0x368], 8) = 0;
    uint64_t v67 = v96;
    goto LABEL_38;
  }
  char v60 = v58;
  uint64_t v61 = *(void *)(sub_1D5459938() - 8);
  uint64_t v62 = v32 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
  uint64_t v63 = *(void *)(v61 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v65 = sub_1D5459918();
    if (!a11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    if (v65 == a10 && v66 == a11)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    char v64 = sub_1D545A078();
    swift_bridgeObjectRelease();
    if (v64) {
      break;
    }
LABEL_27:
    v62 += v63;
    if (!--v59)
    {
      swift_bridgeObjectRelease_n();
      LODWORD(v10_Block_object_dispose(&STACK[0x368], 8) = 0;
      goto LABEL_37;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_36:
  LODWORD(v10_Block_object_dispose(&STACK[0x368], 8) = 1;
LABEL_37:
  uint64_t v67 = v96;
  char v58 = v60;
LABEL_38:
  uint64_t v68 = *(void *)(v67 + 16);
  if (!v68)
  {
    char v69 = v58;
    swift_bridgeObjectRelease();
    char v76 = 0;
    goto LABEL_51;
  }
  char v69 = v58;
  uint64_t v70 = *(void *)(sub_1D5459938() - 8);
  uint64_t v71 = v67 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
  uint64_t v72 = *(void *)(v70 + 72);
  swift_bridgeObjectRetain();
  while (2)
  {
    uint64_t v74 = sub_1D5459918();
    if (!a11)
    {
      swift_bridgeObjectRelease();
LABEL_41:
      v71 += v72;
      if (!--v68)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v76 = 0;
        goto LABEL_51;
      }
      continue;
    }
    break;
  }
  if (v74 == a10 && v75 == a11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_50;
  }
  char v73 = sub_1D545A078();
  swift_bridgeObjectRelease();
  if ((v73 & 1) == 0) {
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_50:
  char v76 = 1;
LABEL_51:
  uint64_t v77 = v92;
  uint64_t v78 = v91;
  char v79 = v90;
  uint64_t v80 = v89;
  char v81 = v88;
  swift_bridgeObjectRelease();
  if (v81 == 3) {
    char v82 = 0;
  }
  else {
    char v82 = v81;
  }
  if (a12 == 4) {
    char v83 = 0;
  }
  else {
    char v83 = a12;
  }
  uint64_t result = sub_1D4A51D64((uint64_t)v93, &qword_1EA70F9F8);
  *(unsigned char *)uint64_t v80 = v69 & 1;
  *(unsigned char *)(v80 + 1) = (_BYTE)v109;
  *(unsigned char *)(v80 + 2) = (_BYTE)v110;
  *(unsigned char *)(v80 + 3) = v82;
  *(unsigned char *)(v80 + 4) = v112;
  *(unsigned char *)(v80 + 5) = v111;
  *(unsigned char *)(v80 + 6) = (_BYTE)v108;
  *(unsigned char *)(v80 + 7) = v76;
  *(unsigned char *)(v80 + _Block_object_dispose(&STACK[0x368], 8) = v79 & 1;
  *(void *)(v80 + 16) = v78;
  *(void *)(v80 + 24) = v77;
  *(unsigned char *)(v80 + 32) = v83;
  *(unsigned char *)(v80 + 33) = a13 & 1;
  return result;
}

void sub_1D4A6EA98(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99620);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v104 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v103 = (char *)&v90 - v11;
  uint64_t v12 = sub_1D5459938();
  uint64_t v102 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v100 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v94 = (char *)&v90 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v101 = (char *)&v90 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v95 = (char *)&v90 - v19;
  uint64_t v93 = a1;
  id v20 = objc_msgSend(a1, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v20) {
    goto LABEL_75;
  }
  uint64_t v21 = v20;
  id v22 = objc_msgSend(v20, sel_nearbyVisibleDeviceInfos);

  if (!v22
    || (*(void *)&v106[0] = 0,
        sub_1D4A51CAC(0, &qword_1EA70F6B0),
        sub_1D5459C58(),
        v22,
        (unint64_t v23 = *(void *)&v106[0]) == 0))
  {
    swift_bridgeObjectRelease();
    unint64_t v23 = MEMORY[0x1E4FBC860];
  }
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1D545A008();
  }
  else
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v91 = a3;
  uint64_t v92 = a4;
  uint64_t v90 = a2;
  if (v24)
  {
    if (v24 < 1)
    {
      __break(1u);
      goto LABEL_74;
    }
    uint64_t v25 = 0;
    uint64_t v26 = (uint64_t)v103;
    unsigned int v98 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56);
    uint64_t v99 = (void (**)(id, uint64_t, uint64_t, char *))(v23 & 0xC000000000000001);
    uint64_t v96 = (void (**)(char *, uint64_t, uint64_t))(v102 + 32);
    os_log_type_t v97 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
    uint64_t v105 = MEMORY[0x1E4FBC860];
    do
    {
      if (v99) {
        id v27 = (id)MEMORY[0x1D944FAD0](v25, v23);
      }
      else {
        id v27 = *(id *)(v23 + 8 * v25 + 32);
      }
      uint64_t v28 = v27;
      id v29 = objc_msgSend(v27, sel_idsIdentifierString, v90, v91);
      if (v29)
      {
        uint64_t v30 = v29;
        sub_1D5459BE8();

        id v31 = objc_msgSend(v28, sel_mediaRouteIdString);
        if (v31)
        {
          uint64_t v32 = v31;
          sub_1D5459BE8();
        }
        uint64_t v26 = (uint64_t)v103;
        sub_1D5459908();
        uint64_t v33 = 0;
      }
      else
      {
        uint64_t v33 = 1;
      }
      (*v98)(v26, v33, 1, v12);

      if ((*v97)(v26, 1, v12) == 1)
      {
        sub_1D4A51D64(v26, &qword_1EBD99620);
      }
      else
      {
        uint64_t v34 = v95;
        uint64_t v35 = *v96;
        (*v96)(v95, v26, v12);
        v35(v101, (uint64_t)v34, v12);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v105 = sub_1D4A654F8(0, *(void *)(v105 + 16) + 1, 1, v105);
        }
        unint64_t v37 = *(void *)(v105 + 16);
        unint64_t v36 = *(void *)(v105 + 24);
        if (v37 >= v36 >> 1) {
          uint64_t v105 = sub_1D4A654F8(v36 > 1, v37 + 1, 1, v105);
        }
        uint64_t v38 = v105;
        *(void *)(v105 + 16) = v37 + 1;
        v35((char *)(v38+ ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80))+ *(void *)(v102 + 72) * v37), (uint64_t)v101, v12);
        uint64_t v26 = (uint64_t)v103;
      }
      ++v25;
    }
    while (v24 != v25);
  }
  else
  {
    uint64_t v105 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease_n();
  id v39 = objc_msgSend(v93, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v39)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  unint64_t v40 = v39;
  id v41 = objc_msgSend(v39, sel_networkVisibleDeviceInfos);

  unint64_t v42 = MEMORY[0x1E4FBC860];
  if (v41)
  {
    *(void *)&v106[0] = 0;
    sub_1D4A51CAC(0, &qword_1EA70F6B0);
    sub_1D5459C58();

    if (*(void *)&v106[0]) {
      unint64_t v42 = *(void *)&v106[0];
    }
  }
  id v43 = v104;
  if (!(v42 >> 62))
  {
    uint64_t v44 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v44) {
      goto LABEL_33;
    }
LABEL_53:
    unint64_t v46 = MEMORY[0x1E4FBC860];
    goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_1D545A008();
  if (!v44) {
    goto LABEL_53;
  }
LABEL_33:
  if (v44 < 1)
  {
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  uint64_t v45 = 0;
  uint64_t v101 = (char *)(v42 & 0xC000000000000001);
  unsigned int v98 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 48);
  uint64_t v99 = (void (**)(id, uint64_t, uint64_t, char *))(v102 + 56);
  os_log_type_t v97 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 32);
  unint64_t v46 = MEMORY[0x1E4FBC860];
  uint64_t v103 = (char *)v12;
  do
  {
    if (v101) {
      id v47 = (id)MEMORY[0x1D944FAD0](v45, v42);
    }
    else {
      id v47 = *(id *)(v42 + 8 * v45 + 32);
    }
    uint64_t v48 = v47;
    id v49 = objc_msgSend(v47, sel_idsIdentifierString, v90);
    if (v49)
    {
      uint64_t v50 = v49;
      sub_1D5459BE8();

      id v51 = objc_msgSend(v48, sel_mediaRouteIdString);
      if (v51)
      {
        uint64_t v52 = v51;
        sub_1D5459BE8();
      }
      id v43 = v104;
      sub_1D5459908();
      uint64_t v53 = 0;
    }
    else
    {
      uint64_t v53 = 1;
    }
    uint64_t v54 = v103;
    (*v99)(v43, v53, 1, v103);

    if (((unsigned int (*)(id, uint64_t, char *))*v98)(v43, 1, v54) == 1)
    {
      sub_1D4A51D64((uint64_t)v43, &qword_1EBD99620);
    }
    else
    {
      BOOL v55 = *v97;
      uint64_t v56 = v94;
      (*v97)((uint64_t)v94, (uint64_t)v43, (uint64_t)v54);
      v55((uint64_t)v100, (uint64_t)v56, (uint64_t)v54);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v46 = sub_1D4A654F8(0, *(void *)(v46 + 16) + 1, 1, v46);
      }
      unint64_t v58 = *(void *)(v46 + 16);
      unint64_t v57 = *(void *)(v46 + 24);
      if (v58 >= v57 >> 1) {
        unint64_t v46 = sub_1D4A654F8(v57 > 1, v58 + 1, 1, v46);
      }
      *(void *)(v46 + 16) = v58 + 1;
      v55(v46+ ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80))+ *(void *)(v102 + 72) * v58, (uint64_t)v100, (uint64_t)v54);
      id v43 = v104;
    }
    ++v45;
  }
  while (v44 != v45);
LABEL_54:
  swift_bridgeObjectRelease_n();
  uint64_t v59 = v93;
  sub_1D4A7B000(v93);
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  id v66 = objc_msgSend(v59, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v66)
  {
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  uint64_t v67 = v66;
  id v68 = objc_msgSend(v66, sel_cloudInfo);

  if (v68)
  {
    if (objc_msgSend(v68, sel_hasCloudState))
    {
      unsigned int v69 = objc_msgSend(v68, sel_firstCloudImportComplete);

      if (v69) {
        LODWORD(v6_Block_object_dispose(&STACK[0x368], 8) = 1;
      }
      else {
        LODWORD(v6_Block_object_dispose(&STACK[0x368], 8) = 2;
      }
    }
    else
    {

      LODWORD(v6_Block_object_dispose(&STACK[0x368], 8) = 0;
    }
  }
  id v70 = objc_msgSend(v59, sel_appleMediaAccessoryDiagnosticInfo, v90);
  if (!v70) {
    goto LABEL_78;
  }
  uint64_t v71 = v70;
  id v72 = objc_msgSend(v70, sel_wifiInfo);

  uint64_t v104 = v65;
  LODWORD(v103) = v68;
  if (v72)
  {
    int v73 = objc_msgSend(v72, sel_networkRSSI);

    if (v73 >= -80)
    {
      if (v73 >= -60) {
        int v74 = (v73 >> 31) & 3;
      }
      else {
        LOBYTE(v74) = 2;
      }
    }
    else
    {
      LOBYTE(v74) = 1;
    }
  }
  else
  {
    LOBYTE(v74) = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v75 = v93;
  id v76 = objc_msgSend(v93, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v76) {
    goto LABEL_79;
  }
  uint64_t v77 = v76;
  uint64_t v78 = v46;
  id v79 = objc_msgSend(v76, sel_numResidents);

  id v80 = objc_msgSend(v75, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v80)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  char v81 = v80;
  id v82 = objc_msgSend(v80, sel_numAppleMediaAccessories);

  id v83 = objc_msgSend(v75, sel_appleMediaAccessoryDiagnosticInfo);
  if (v83)
  {
    uint64_t v84 = v83;
    char v85 = v72 != 0;
    unsigned int v86 = objc_msgSend(v83, sel_primaryResidentStatus);

    uint64_t v87 = swift_bridgeObjectRetain();
    sub_1D4A6E148(v61, v63, v78, v105, (uint64_t)v79, (uint64_t)v82, v86 == 2, (int)v103, (uint64_t)v106, v90, v87, v74, v85);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    long long v88 = v106[1];
    uint64_t v89 = v92;
    _OWORD *v92 = v106[0];
    v89[1] = v88;
    *((_WORD *)v89 + 16) = v107;
    return;
  }
LABEL_81:
  __break(1u);
}

void sub_1D4A6F51C(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void (**a8)(char *, uint64_t)@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, uint64_t a14, char *a15, unint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20,unsigned __int8 a21)
{
  v389 = a8;
  uint64_t v376 = a6;
  int v358 = a5;
  uint64_t v361 = a19;
  uint64_t v360 = a18;
  uint64_t v396 = sub_1D5459A48();
  uint64_t v354 = *(void *)(v396 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v396);
  v395 = (char *)&v333 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  v394 = (char *)&v333 - v29;
  uint64_t v397 = sub_1D54598F8();
  uint64_t v377 = *(void *)(v397 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v397);
  v386 = (char *)&v333 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  v391 = (char *)&v333 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  v387 = (char *)&v333 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  v392 = (char *)&v333 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  v393 = (char *)&v333 - v39;
  MEMORY[0x1F4188790](v38);
  unint64_t v398 = (unint64_t)&v333 - v40;
  uint64_t v378 = sub_1D5459A28();
  uint64_t v375 = *(void *)(v378 - 8);
  uint64_t v41 = MEMORY[0x1F4188790](v378);
  v381 = (char *)&v333 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  v382 = (void (**)(char *, uint64_t))((char *)&v333 - v44);
  MEMORY[0x1F4188790](v43);
  v390 = (char *)&v333 - v45;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99620);
  uint64_t v47 = MEMORY[0x1F4188790](v46 - 8);
  v383 = (char *)&v333 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v47);
  v384 = (char *)&v333 - v49;
  uint64_t v399 = sub_1D5459938();
  uint64_t v374 = *(void *)(v399 - 8);
  uint64_t v50 = MEMORY[0x1F4188790](v399);
  v380 = (char *)&v333 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  v367 = (char *)&v333 - v53;
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  v385 = (char *)&v333 - v55;
  MEMORY[0x1F4188790](v54);
  unint64_t v368 = (unint64_t)&v333 - v56;
  id v357 = a17;
  if (!a17) {
    goto LABEL_9;
  }
  id v57 = objc_msgSend(v357, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v57) {
    goto LABEL_276;
  }
  unint64_t v58 = v57;
  id v59 = objc_msgSend(v57, sel_idsInfo);

  if (!v59)
  {
LABEL_277:
    __break(1u);
    goto LABEL_278;
  }
  id v60 = objc_msgSend(v59, sel_idsIdentifierString);

  if (!v60)
  {
LABEL_9:
    BOOL v64 = v361 == 0;
    goto LABEL_10;
  }
  uint64_t v61 = sub_1D5459BE8();
  uint64_t v63 = v62;

  if (v361)
  {
    if (v61 == v360 && v63 == v361)
    {
      swift_bridgeObjectRelease();
      BOOL v64 = 1;
LABEL_10:
      int v353 = v64;
      goto LABEL_11;
    }
    int v353 = sub_1D545A078();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    int v353 = 0;
  }
LABEL_11:
  id v363 = a20;
  if (a20)
  {
    id v65 = objc_msgSend(v363, sel_appleMediaAccessoryDiagnosticInfo);
    if (v65)
    {
      id v66 = v65;
      id v67 = objc_msgSend(v65, sel_nearbyVisibleDeviceInfos);

      if (v67)
      {
        unint64_t v425 = 0;
        sub_1D4A51CAC(0, &qword_1EA70F6B0);
        sub_1D5459C58();

        unint64_t v68 = v425;
        if (v425) {
          goto LABEL_16;
        }
      }
      goto LABEL_15;
    }
LABEL_278:
    __break(1u);
    goto LABEL_279;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  unint64_t v68 = MEMORY[0x1E4FBC860];
LABEL_16:
  uint64_t v69 = v399;
  if (v68 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v69 = v399;
    uint64_t v70 = sub_1D545A008();
  }
  else
  {
    uint64_t v70 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v362 = a7;
  id v356 = a4;
  v352 = a9;
  int v351 = a3;
  uint64_t v349 = a1;
  uint64_t v350 = a2;
  if (v70)
  {
    if (v70 < 1) {
      goto LABEL_274;
    }
    unint64_t v379 = v70;
    uint64_t v71 = 0;
    v372 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v374 + 56);
    unint64_t v373 = v68 & 0xC000000000000001;
    v371 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v374 + 48);
    unint64_t v369 = v374 + 32;
    v388 = (void (**)(char *, uint64_t))MEMORY[0x1E4FBC860];
    id v72 = (char *)v398;
    uint64_t v73 = (uint64_t)v383;
    unint64_t v370 = v68;
    do
    {
      if (v373) {
        id v74 = (id)MEMORY[0x1D944FAD0](v71, v68);
      }
      else {
        id v74 = *(id *)(v68 + 8 * v71 + 32);
      }
      uint64_t v75 = v74;
      id v76 = objc_msgSend(v74, sel_idsIdentifierString);
      if (v76)
      {
        uint64_t v77 = v76;
        sub_1D5459BE8();

        id v78 = objc_msgSend(v75, sel_mediaRouteIdString);
        if (v78)
        {
          id v79 = v78;
          sub_1D5459BE8();
        }
        uint64_t v69 = v399;
        uint64_t v81 = (uint64_t)v384;
        sub_1D5459908();
        uint64_t v80 = 0;
        id v72 = (char *)v398;
      }
      else
      {
        uint64_t v80 = 1;
        uint64_t v81 = (uint64_t)v384;
      }
      (*v372)(v81, v80, 1, v69);

      if ((*v371)(v81, 1, v69) == 1)
      {
        sub_1D4A51D64(v81, &qword_1EBD99620);
      }
      else
      {
        id v82 = (char *)v368;
        id v83 = *(void (**)(char *, uint64_t, uint64_t))v369;
        (*(void (**)(unint64_t, uint64_t, uint64_t))v369)(v368, v81, v69);
        v83(v385, (uint64_t)v82, v69);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v84 = (unint64_t)v388;
        }
        else {
          unint64_t v84 = sub_1D4A654F8(0, (int64_t)v388[2] + 1, 1, (unint64_t)v388);
        }
        unint64_t v86 = *(void *)(v84 + 16);
        unint64_t v85 = *(void *)(v84 + 24);
        if (v86 >= v85 >> 1) {
          unint64_t v84 = sub_1D4A654F8(v85 > 1, v86 + 1, 1, v84);
        }
        *(void *)(v84 + 16) = v86 + 1;
        unint64_t v87 = (*(unsigned __int8 *)(v374 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80);
        v388 = (void (**)(char *, uint64_t))v84;
        uint64_t v69 = v399;
        v83((char *)(v84 + v87 + *(void *)(v374 + 72) * v86), (uint64_t)v385, v399);
        uint64_t v73 = (uint64_t)v383;
      }
      unint64_t v68 = v370;
      ++v71;
    }
    while (v379 != v71);
  }
  else
  {
    v388 = (void (**)(char *, uint64_t))MEMORY[0x1E4FBC860];
    id v72 = (char *)v398;
    uint64_t v73 = (uint64_t)v383;
  }
  swift_bridgeObjectRelease_n();
  if (!v363)
  {
    unint64_t v91 = MEMORY[0x1E4FBC860];
    goto LABEL_46;
  }
  id v88 = objc_msgSend(v363, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v88)
  {
LABEL_279:
    __break(1u);
    return;
  }
  uint64_t v89 = v88;
  id v90 = objc_msgSend(v88, sel_networkVisibleDeviceInfos);

  unint64_t v91 = MEMORY[0x1E4FBC860];
  if (v90)
  {
    unint64_t v425 = 0;
    sub_1D4A51CAC(0, &qword_1EA70F6B0);
    sub_1D5459C58();

    if (v425) {
      unint64_t v91 = v425;
    }
  }
LABEL_46:
  if (v91 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v92 = sub_1D545A008();
    if (v92) {
      goto LABEL_48;
    }
LABEL_70:
    unint64_t v95 = MEMORY[0x1E4FBC860];
    goto LABEL_71;
  }
  uint64_t v92 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v92) {
    goto LABEL_70;
  }
LABEL_48:
  if (v92 < 1) {
    goto LABEL_275;
  }
  uint64_t v93 = 0;
  v372 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v374 + 56);
  unint64_t v373 = v91 & 0xC000000000000001;
  v371 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v374 + 48);
  uint64_t v94 = (void (**)(char *, uint64_t, uint64_t))(v374 + 32);
  unint64_t v95 = MEMORY[0x1E4FBC860];
  unint64_t v379 = v91;
  do
  {
    unint64_t v96 = v95;
    if (v373) {
      id v97 = (id)MEMORY[0x1D944FAD0](v93, v91);
    }
    else {
      id v97 = *(id *)(v91 + 8 * v93 + 32);
    }
    unsigned int v98 = v97;
    id v99 = objc_msgSend(v97, sel_idsIdentifierString);
    if (v99)
    {
      uint64_t v100 = v99;
      uint64_t v101 = sub_1D5459BE8();
      v384 = v102;
      v385 = (char *)v101;

      id v103 = objc_msgSend(v98, sel_mediaRouteIdString);
      if (v103)
      {
        uint64_t v104 = v103;
        sub_1D5459BE8();
      }
      uint64_t v106 = v399;
      sub_1D5459908();
      uint64_t v105 = 0;
      id v72 = (char *)v398;
    }
    else
    {
      uint64_t v105 = 1;
      uint64_t v106 = v399;
    }
    (*v372)(v73, v105, 1, v106);

    if ((*v371)(v73, 1, v106) == 1)
    {
      sub_1D4A51D64(v73, &qword_1EBD99620);
      unint64_t v95 = v96;
    }
    else
    {
      __int16 v107 = *v94;
      uint64_t v108 = v367;
      (*v94)(v367, v73, v106);
      v107(v380, (uint64_t)v108, v106);
      unint64_t v95 = v96;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v95 = sub_1D4A654F8(0, *(void *)(v96 + 16) + 1, 1, v96);
      }
      unint64_t v110 = *(void *)(v95 + 16);
      unint64_t v109 = *(void *)(v95 + 24);
      if (v110 >= v109 >> 1) {
        unint64_t v95 = sub_1D4A654F8(v109 > 1, v110 + 1, 1, v95);
      }
      *(void *)(v95 + 16) = v110 + 1;
      v107((char *)(v95+ ((*(unsigned __int8 *)(v374 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80))+ *(void *)(v374 + 72) * v110), (uint64_t)v380, v399);
      uint64_t v73 = (uint64_t)v383;
    }
    unint64_t v91 = v379;
    ++v93;
  }
  while (v92 != v93);
LABEL_71:
  swift_bridgeObjectRelease_n();
  uint64_t v111 = *(void *)(v95 + 16);
  if (v111)
  {
    unint64_t v112 = v95 + ((*(unsigned __int8 *)(v374 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80));
    uint64_t v113 = *(void *)(v374 + 72);
    unint64_t v114 = v95;
    swift_bridgeObjectRetain();
    uint64_t v115 = v111 - 1;
    id v116 = v356;
    int v117 = v358;
    while (1)
    {
      uint64_t v118 = v115;
      if ((void (**)(char *, uint64_t))sub_1D5459918() == v389 && v119 == a10) {
        break;
      }
      int v120 = sub_1D545A078();
      swift_bridgeObjectRelease();
      int v365 = v120;
      if ((v120 & 1) == 0)
      {
        uint64_t v115 = v118 - 1;
        v112 += v113;
        if (v118) {
          continue;
        }
      }
      goto LABEL_80;
    }
    swift_bridgeObjectRelease();
    int v365 = 1;
LABEL_80:
    swift_bridgeObjectRelease();
    id v72 = (char *)v398;
  }
  else
  {
    unint64_t v114 = v95;
    int v365 = 0;
    id v116 = v356;
    int v117 = v358;
  }
  unint64_t v373 = a16;
  v380 = a15;
  v121 = v388[2];
  if (v121)
  {
    uint64_t v122 = (char *)v388
         + ((*(unsigned __int8 *)(v374 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80));
    uint64_t v123 = *(void *)(v374 + 72);
    swift_bridgeObjectRetain();
    uint64_t v124 = (uint64_t)v121 - 1;
    while (1)
    {
      uint64_t v125 = v124;
      if ((void (**)(char *, uint64_t))sub_1D5459918() == v389 && v126 == a10) {
        break;
      }
      int v127 = sub_1D545A078();
      swift_bridgeObjectRelease();
      int v364 = v127;
      if ((v127 & 1) == 0)
      {
        uint64_t v124 = v125 - 1;
        v122 += v123;
        if (v125) {
          continue;
        }
      }
      goto LABEL_90;
    }
    swift_bridgeObjectRelease();
    int v364 = 1;
LABEL_90:
    swift_bridgeObjectRelease();
    id v72 = (char *)v398;
  }
  else
  {
    int v364 = 0;
  }
  uint64_t v128 = *(void *)(v114 + 16);
  if (v128)
  {
    unint64_t v129 = v114 + ((*(unsigned __int8 *)(v374 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80));
    uint64_t v130 = *(void *)(v374 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      if ((char *)sub_1D5459918() == v380 && v131 == v373)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_102;
      }
      char v132 = sub_1D545A078();
      swift_bridgeObjectRelease();
      if (v132) {
        break;
      }
      v129 += v130;
      if (!--v128)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_99;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_102:
    int v348 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_99:
    int v348 = 0;
  }
  v133 = v388[2];
  int v134 = v117;
  if (v133)
  {
    v135 = (char *)v388
         + ((*(unsigned __int8 *)(v374 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80));
    uint64_t v136 = *(void *)(v374 + 72);
    swift_bridgeObjectRetain();
    uint64_t v137 = v362;
    while (1)
    {
      if ((char *)sub_1D5459918() == v380 && v138 == v373)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_113;
      }
      char v139 = sub_1D545A078();
      swift_bridgeObjectRelease();
      if (v139) {
        break;
      }
      v135 += v136;
      v133 = (void (*)(char *, uint64_t))((char *)v133 - 1);
      if (!v133)
      {
        swift_bridgeObjectRelease_n();
        int v347 = 0;
        goto LABEL_114;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_113:
    int v347 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    int v347 = 0;
    uint64_t v137 = v362;
  }
LABEL_114:
  uint64_t v140 = MEMORY[0x1E4FBC870];
  uint64_t v413 = MEMORY[0x1E4FBC870];
  uint64_t v414 = MEMORY[0x1E4FBC870];
  uint64_t v411 = MEMORY[0x1E4FBC870];
  uint64_t v412 = MEMORY[0x1E4FBC870];
  uint64_t v409 = MEMORY[0x1E4FBC870];
  uint64_t v410 = MEMORY[0x1E4FBC870];
  uint64_t v408 = MEMORY[0x1E4FBC870];
  id v141 = objc_msgSend(v116, sel_SSID);
  v142 = v391;
  if (v141)
  {
    uint64_t v143 = v141;
    uint64_t v144 = sub_1D5459BE8();
    uint64_t v146 = v145;

    sub_1D4A77C14((uint64_t *)&v425, v144, v146);
    swift_bridgeObjectRelease();
    uint64_t v140 = v414;
    swift_bridgeObjectRetain();
  }
  uint64_t v359 = v140;
  id v147 = objc_msgSend(v116, sel_networkBSSID);
  if (v147)
  {
    os_log_type_t v148 = v147;
    uint64_t v149 = sub_1D5459BE8();
    uint64_t v151 = v150;

    sub_1D4A77C14((uint64_t *)&v425, v149, v151);
    swift_bridgeObjectRelease();
    uint64_t v355 = v413;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v355 = MEMORY[0x1E4FBC870];
  }
  uint64_t v152 = v378;
  uint64_t v154 = v392;
  uint64_t v153 = v393;
  uint64_t v155 = v390;
  v372 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v137 + 16);
  if (v372)
  {
    uint64_t v156 = *(void *)(v376 + 16);
    unint64_t v157 = *(void *)(v375 + 16);
    unint64_t v369 = v137 + ((*(unsigned __int8 *)(v375 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v375 + 80));
    unint64_t v370 = v157;
    unint64_t v368 = *(void *)(v375 + 72);
    uint64_t v399 = v377 + 16;
    v388 = (void (**)(char *, uint64_t))(v377 + 8);
    LODWORD(v385) = *MEMORY[0x1E4F64D40];
    v383 = (char *)(v354 + 8);
    v384 = (char *)(v354 + 104);
    v371 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v375 + 16);
    v367 = (char *)(v375 + 8);
    swift_bridgeObjectRetain();
    unint64_t v158 = 0;
    uint64_t v159 = v397;
    uint64_t v366 = v156;
    while (1)
    {
      unint64_t v379 = v158;
      ((void (*)(char *, unint64_t, uint64_t))v370)(v155, v369 + v368 * v158, v152);
      if (!v156)
      {
LABEL_122:
        (*(void (**)(char *, uint64_t))v367)(v155, v152);
        goto LABEL_123;
      }
      uint64_t v160 = v376 + ((*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80));
      v389 = *(void (***)(char *, uint64_t))(v377 + 72);
      uint64_t v161 = *(void (**)(char *, uint64_t, uint64_t))(v377 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v161(v72, v160, v159);
        uint64_t v163 = sub_1D54598D8();
        uint64_t v165 = v164;
        if (v163 == sub_1D54599A8() && v165 == v166) {
          break;
        }
        char v167 = sub_1D545A078();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v72 = (char *)v398;
        v161(v153, v398, v159);
        if (v167) {
          goto LABEL_132;
        }
        uint64_t v162 = *v388;
        (*v388)(v153, v159);
        v162(v72, v159);
LABEL_127:
        v160 += (uint64_t)v389;
        if (!--v156)
        {
          swift_bridgeObjectRelease();
          v142 = v391;
          uint64_t v154 = v392;
          uint64_t v152 = v378;
          uint64_t v155 = v390;
          uint64_t v156 = v366;
          goto LABEL_122;
        }
      }
      swift_bridgeObjectRelease_n();
      v161(v153, v398, v159);
LABEL_132:
      char v168 = v394;
      sub_1D54598E8();
      unint64_t v170 = v395;
      uint64_t v169 = v396;
      (*(void (**)(char *, void, uint64_t))v384)(v395, v385, v396);
      char v171 = sub_1D5459A38();
      int v172 = *(void (**)(char *, uint64_t))v383;
      uint64_t v173 = v170;
      uint64_t v159 = v397;
      (*(void (**)(char *, uint64_t))v383)(v173, v169);
      v174 = v168;
      uint64_t v153 = v393;
      uint64_t v175 = v169;
      id v72 = (char *)v398;
      v172(v174, v175);
      char v176 = *v388;
      (*v388)(v153, v159);
      v176(v72, v159);
      if ((v171 & 1) == 0) {
        goto LABEL_127;
      }
      swift_bridgeObjectRelease();
      uint64_t v155 = v390;
      uint64_t v177 = sub_1D54599D8();
      if (v178)
      {
        uint64_t v179 = v177;
        uint64_t v180 = v178;
        swift_bridgeObjectRetain();
        sub_1D4A77C14((uint64_t *)&v425, v179, v180);
        swift_bridgeObjectRelease();
        sub_1D4A77C14((uint64_t *)&v425, v179, v180);
        swift_bridgeObjectRelease();
      }
      uint64_t v181 = sub_1D54599E8();
      v142 = v391;
      uint64_t v156 = v366;
      if (v182)
      {
        sub_1D4A77C14((uint64_t *)&v425, v181, v182);
        swift_bridgeObjectRelease();
      }
      uint64_t v152 = v378;
      (*(void (**)(char *, uint64_t))v367)(v155, v378);
      uint64_t v154 = v392;
      id v72 = (char *)v398;
LABEL_123:
      unint64_t v158 = v379 + 1;
      if ((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v379 + 1) == v372)
      {
        swift_bridgeObjectRelease();
        int v134 = v358;
        break;
      }
    }
  }
  if (v363)
  {
    id v183 = v363;
    sub_1D4A6EA98(v183, v360, v361, &v415);
    uint64_t v343 = v415;
    unint64_t v344 = BYTE2(v415);
    uint64_t v345 = BYTE3(v415);
    unint64_t v368 = BYTE8(v415);
    uint64_t v366 = v417;
    v367 = v416;
    LODWORD(v342) = v418;
    if (BYTE1(v415)) {
      uint64_t v184 = 256;
    }
    else {
      uint64_t v184 = 0;
    }
    uint64_t v185 = 0x100000000;
    if (!BYTE4(v415)) {
      uint64_t v185 = 0;
    }
    uint64_t v339 = v185;
    uint64_t v340 = v184;
    if (BYTE5(v415)) {
      uint64_t v186 = 0x10000000000;
    }
    else {
      uint64_t v186 = 0;
    }
    uint64_t v187 = 0x1000000000000;
    if (!BYTE6(v415)) {
      uint64_t v187 = 0;
    }
    uint64_t v337 = v187;
    uint64_t v338 = v186;
    uint64_t v188 = 0x100000000000000;
    if (!BYTE7(v415)) {
      uint64_t v188 = 0;
    }
    unint64_t v336 = v188;
    if (v419) {
      int v189 = 256;
    }
    else {
      int v189 = 0;
    }
    LODWORD(v335) = v189;
    unint64_t v341 = (unint64_t)v183;
    sub_1D4A7B000(v183);
    unint64_t v193 = v192;
    unint64_t v194 = v191;
    v346 = v191;
    unint64_t v370 = v190;
    if (v191)
    {
      id v195 = objc_msgSend(v191, sel_SSID);
      uint64_t v196 = (char *)v382;
      if (v195)
      {
        v197 = v195;
        uint64_t v198 = sub_1D5459BE8();
        uint64_t v200 = v199;

        swift_bridgeObjectRetain();
        sub_1D4A77C14((uint64_t *)&v425, v198, v200);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA70F9E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1D54C3B60;
        *(void *)(inited + 32) = v198;
        *(void *)(inited + 40) = v200;
        uint64_t v202 = sub_1D4A6D44C(inited, v359);
        swift_setDeallocating();
        unint64_t v194 = v346;
        swift_arrayDestroy();
      }
      else
      {
        uint64_t v202 = v359;
      }
      uint64_t v359 = v202;
      id v207 = objc_msgSend(v194, sel_networkBSSID);
      if (v207)
      {
        unint64_t v208 = v207;
        uint64_t v209 = sub_1D5459BE8();
        uint64_t v211 = v210;

        swift_bridgeObjectRetain();
        sub_1D4A77C14((uint64_t *)&v425, v209, v211);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA70F9E0);
        uint64_t v212 = swift_initStackObject();
        *(_OWORD *)(v212 + 16) = xmmword_1D54C3B60;
        *(void *)(v212 + 32) = v209;
        *(void *)(v212 + 40) = v211;
        uint64_t v355 = sub_1D4A6D44C(v212, v355);
        swift_setDeallocating();
        unint64_t v194 = v346;
        swift_arrayDestroy();
      }
      v142 = v391;
      uint64_t v152 = v378;
      unint64_t v206 = v370;
    }
    else
    {
      unint64_t v206 = v190;
      uint64_t v196 = (char *)v382;
    }
    v383 = *(char **)(v206 + 16);
    if (v383)
    {
      v385 = *(char **)(v193 + 16);
      unint64_t v379 = v206 + ((*(unsigned __int8 *)(v375 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v375 + 80));
      v372 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v375 + 16);
      uint64_t v399 = v377 + 16;
      v393 = (char *)(v377 + 8);
      LODWORD(v390) = *MEMORY[0x1E4F64D30];
      v388 = (void (**)(char *, uint64_t))(v354 + 8);
      v389 = (void (**)(char *, uint64_t))(v354 + 104);
      v371 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v375 + 8);
      swift_bridgeObjectRetain();
      unint64_t v213 = 0;
      uint64_t v214 = v397;
      uint64_t v215 = v387;
      unint64_t v369 = v193;
      while (1)
      {
        if (v213 >= *(void *)(v206 + 16))
        {
          __break(1u);
LABEL_272:
          __break(1u);
LABEL_273:
          __break(1u);
LABEL_274:
          __break(1u);
LABEL_275:
          __break(1u);
LABEL_276:
          __break(1u);
          goto LABEL_277;
        }
        (*(void (**)(char *, unint64_t, uint64_t))(v375 + 16))(v196, v379 + *(void *)(v375 + 72) * v213, v152);
        if (!v385)
        {
LABEL_168:
          ((void (*)(char *, uint64_t))*v371)(v196, v152);
          goto LABEL_169;
        }
        v384 = (char *)v213;
        unint64_t v216 = v193 + ((*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80));
        unint64_t v398 = *(void *)(v377 + 72);
        unint64_t v217 = *(void (**)(char *, unint64_t, uint64_t))(v377 + 16);
        swift_bridgeObjectRetain_n();
        unint64_t v218 = v385;
        while (1)
        {
          v217(v154, v216, v214);
          uint64_t v220 = sub_1D54598D8();
          uint64_t v222 = v221;
          if (v220 == sub_1D54599A8() && v222 == v223) {
            break;
          }
          char v224 = sub_1D545A078();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v154 = v392;
          v217(v215, (unint64_t)v392, v214);
          if (v224) {
            goto LABEL_179;
          }
          uint64_t v219 = *(void (**)(char *, uint64_t))v393;
          (*(void (**)(char *, uint64_t))v393)(v215, v214);
          v219(v154, v214);
LABEL_174:
          v216 += v398;
          if (!--v218)
          {
            unint64_t v193 = v369;
            swift_bridgeObjectRelease_n();
            uint64_t v152 = v378;
            uint64_t v196 = (char *)v382;
            unint64_t v206 = v370;
            unint64_t v213 = (unint64_t)v384;
            goto LABEL_168;
          }
        }
        swift_bridgeObjectRelease_n();
        v217(v215, (unint64_t)v392, v214);
LABEL_179:
        uint64_t v225 = v394;
        sub_1D54598E8();
        uint64_t v226 = v395;
        uint64_t v227 = v396;
        ((void (*)(char *, void, uint64_t))*v389)(v395, v390, v396);
        sub_1D4A71D80();
        char v228 = sub_1D5459BB8();
        uint64_t v229 = *v388;
        (*v388)(v226, v227);
        unint64_t v230 = v225;
        uint64_t v215 = v387;
        uint64_t v214 = v397;
        uint64_t v231 = v227;
        uint64_t v154 = v392;
        v229(v230, v231);
        uint64_t v232 = *(void (**)(char *, uint64_t))v393;
        (*(void (**)(char *, uint64_t))v393)(v215, v214);
        v232(v154, v214);
        if (v228) {
          goto LABEL_174;
        }
        unint64_t v193 = v369;
        swift_bridgeObjectRelease_n();
        uint64_t v196 = (char *)v382;
        uint64_t v233 = sub_1D54599D8();
        unint64_t v213 = (unint64_t)v384;
        if (v234)
        {
          uint64_t v235 = v233;
          uint64_t v236 = v234;
          swift_bridgeObjectRetain();
          sub_1D4A77C14((uint64_t *)&v425, v235, v236);
          swift_bridgeObjectRelease();
          sub_1D4A77C14((uint64_t *)&v425, v235, v236);
          swift_bridgeObjectRelease();
        }
        uint64_t v237 = sub_1D54599E8();
        if (v238)
        {
          sub_1D4A77C14((uint64_t *)&v425, v237, v238);
          swift_bridgeObjectRelease();
        }
        uint64_t v152 = v378;
        ((void (*)(char *, uint64_t))*v371)(v196, v378);
        uint64_t v154 = v392;
        unint64_t v206 = v370;
LABEL_169:
        if ((char *)++v213 == v383)
        {

          swift_bridgeObjectRelease();
          int v134 = v358;
          v142 = v391;
          unint64_t v194 = v346;
          goto LABEL_187;
        }
      }
    }

LABEL_187:
    unint64_t v370 = v340 | v343 | (v344 << 16) | (v345 << 24) | v339 | v338 | v337 | v336;
    LODWORD(v371) = v335 | v342;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    id v203 = v357;
    if (v357) {
      goto LABEL_188;
    }
  }
  else
  {
    v367 = 0;
    unint64_t v368 = 0;
    uint64_t v366 = 0;
    LODWORD(v371) = 0;
    unint64_t v370 = 2;
    id v203 = v357;
    if (v357)
    {
LABEL_188:
      id v239 = v203;
      sub_1D4A6EA98(v239, v360, v361, &v420);
      uint64_t v240 = v420;
      uint64_t v241 = BYTE2(v420);
      uint64_t v242 = BYTE3(v420);
      unint64_t v369 = BYTE8(v420);
      uint64_t v345 = v422;
      v346 = v421;
      LODWORD(v343) = v423;
      if (BYTE1(v420)) {
        uint64_t v243 = 256;
      }
      else {
        uint64_t v243 = 0;
      }
      uint64_t v244 = 0x100000000;
      if (!BYTE4(v420)) {
        uint64_t v244 = 0;
      }
      unint64_t v341 = v244;
      uint64_t v342 = v243;
      if (BYTE5(v420)) {
        uint64_t v245 = 0x10000000000;
      }
      else {
        uint64_t v245 = 0;
      }
      uint64_t v246 = 0x1000000000000;
      if (!BYTE6(v420)) {
        uint64_t v246 = 0;
      }
      uint64_t v339 = v246;
      uint64_t v340 = v245;
      uint64_t v247 = 0x100000000000000;
      if (!BYTE7(v420)) {
        uint64_t v247 = 0;
      }
      uint64_t v338 = v247;
      if (v424) {
        int v248 = 256;
      }
      else {
        int v248 = 0;
      }
      LODWORD(v337) = v248;
      unint64_t v336 = (unint64_t)v239;
      sub_1D4A7B000(v239);
      v388 = v251;
      char v252 = v250;
      unint64_t v344 = (unint64_t)v250;
      unint64_t v379 = v249;
      if (v250)
      {
        id v253 = objc_msgSend(v250, sel_SSID);
        if (v253)
        {
          v254 = v253;
          uint64_t v255 = sub_1D5459BE8();
          uint64_t v257 = v256;

          swift_bridgeObjectRetain();
          sub_1D4A77C14((uint64_t *)&v425, v255, v257);
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA70F9E0);
          uint64_t v258 = swift_initStackObject();
          *(_OWORD *)(v258 + 16) = xmmword_1D54C3B60;
          *(void *)(v258 + 32) = v255;
          *(void *)(v258 + 40) = v257;
          char v252 = (void *)v344;
          uint64_t v259 = sub_1D4A6D44C(v258, v359);
          swift_setDeallocating();
          swift_arrayDestroy();
        }
        else
        {
          uint64_t v259 = v359;
        }
        uint64_t v359 = v259;
        id v261 = objc_msgSend(v252, sel_networkBSSID);
        if (v261)
        {
          v262 = v261;
          uint64_t v263 = sub_1D5459BE8();
          uint64_t v265 = v264;

          swift_bridgeObjectRetain();
          sub_1D4A77C14((uint64_t *)&v425, v263, v265);
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA70F9E0);
          uint64_t v266 = swift_initStackObject();
          *(_OWORD *)(v266 + 16) = xmmword_1D54C3B60;
          *(void *)(v266 + 32) = v263;
          *(void *)(v266 + 40) = v265;
          char v252 = (void *)v344;
          uint64_t v355 = sub_1D4A6D44C(v266, v355);
          swift_setDeallocating();
          swift_arrayDestroy();
        }
        v142 = v391;
        uint64_t v152 = v378;
        unint64_t v260 = v379;
      }
      else
      {
        unint64_t v260 = v249;
      }
      v385 = *(char **)(v260 + 16);
      if (v385)
      {
        uint64_t v333 = v240;
        uint64_t v334 = v241;
        uint64_t v335 = v242;
        v267 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v388[2];
        v384 = (char *)(v260
                      + ((*(unsigned __int8 *)(v375 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v375 + 80)));
        v383 = (char *)(v375 + 16);
        uint64_t v399 = v377 + 16;
        v393 = (char *)(v377 + 8);
        LODWORD(v392) = *MEMORY[0x1E4F64D30];
        v389 = (void (**)(char *, uint64_t))(v354 + 8);
        v390 = (char *)(v354 + 104);
        v382 = (void (**)(char *, uint64_t))(v375 + 8);
        swift_bridgeObjectRetain();
        unint64_t v268 = 0;
        uint64_t v269 = v397;
        uint64_t v270 = v386;
        uint64_t v271 = v381;
        v372 = v267;
        while (1)
        {
          if (v268 >= *(void *)(v260 + 16)) {
            goto LABEL_272;
          }
          (*(void (**)(char *, char *, uint64_t))(v375 + 16))(v271, &v384[*(void *)(v375 + 72) * v268], v152);
          if (!v267)
          {
LABEL_214:
            (*v382)(v271, v152);
            goto LABEL_215;
          }
          v387 = (char *)v268;
          uint64_t v272 = (char *)v388
               + ((*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80));
          unint64_t v398 = *(void *)(v377 + 72);
          unint64_t v273 = *(void (**)(char *, char *, uint64_t))(v377 + 16);
          swift_bridgeObjectRetain_n();
          while (1)
          {
            v273(v142, v272, v269);
            uint64_t v275 = sub_1D54598D8();
            uint64_t v277 = v276;
            if (v275 == sub_1D54599A8() && v277 == v278) {
              break;
            }
            char v279 = sub_1D545A078();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v142 = v391;
            v273(v270, v391, v269);
            if (v279) {
              goto LABEL_225;
            }
            unint64_t v274 = *(void (**)(char *, uint64_t))v393;
            (*(void (**)(char *, uint64_t))v393)(v270, v269);
            v274(v142, v269);
LABEL_220:
            v272 += v398;
            v267 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v267 - 1);
            if (!v267)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v152 = v378;
              unint64_t v260 = v379;
              uint64_t v271 = v381;
              v267 = v372;
              unint64_t v268 = (unint64_t)v387;
              goto LABEL_214;
            }
          }
          swift_bridgeObjectRelease_n();
          v273(v270, v391, v269);
LABEL_225:
          v280 = v394;
          sub_1D54598E8();
          long long v282 = v395;
          uint64_t v281 = v396;
          (*(void (**)(char *, void, uint64_t))v390)(v395, v392, v396);
          sub_1D4A71D80();
          char v283 = sub_1D5459BB8();
          uint64_t v284 = *v389;
          (*v389)(v282, v281);
          v285 = v280;
          uint64_t v270 = v386;
          uint64_t v269 = v397;
          uint64_t v286 = v281;
          v142 = v391;
          v284(v285, v286);
          uint64_t v287 = *(void (**)(char *, uint64_t))v393;
          (*(void (**)(char *, uint64_t))v393)(v270, v269);
          v287(v142, v269);
          if (v283) {
            goto LABEL_220;
          }
          swift_bridgeObjectRelease_n();
          uint64_t v271 = v381;
          uint64_t v288 = sub_1D54599D8();
          if (v289)
          {
            uint64_t v290 = v288;
            uint64_t v291 = v289;
            swift_bridgeObjectRetain();
            sub_1D4A77C14((uint64_t *)&v425, v290, v291);
            swift_bridgeObjectRelease();
            sub_1D4A77C14((uint64_t *)&v425, v290, v291);
            swift_bridgeObjectRelease();
          }
          uint64_t v292 = sub_1D54599E8();
          v267 = v372;
          unint64_t v268 = (unint64_t)v387;
          if (v293)
          {
            sub_1D4A77C14((uint64_t *)&v425, v292, v293);
            swift_bridgeObjectRelease();
          }
          uint64_t v152 = v378;
          (*v382)(v271, v378);
          v142 = v391;
          unint64_t v260 = v379;
LABEL_215:
          if ((char *)++v268 == v385)
          {

            swift_bridgeObjectRelease();
            id v203 = v357;
            int v134 = v358;
            uint64_t v241 = v334;
            uint64_t v242 = v335;
            uint64_t v240 = v333;
            char v252 = (void *)v344;
            goto LABEL_233;
          }
        }
      }

LABEL_233:
      unint64_t v205 = v342 | v240 | (v241 << 16) | (v242 << 24) | v341 | v340 | v339 | v338;
      int v204 = v337 | v343;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_234;
    }
  }
  unint64_t v369 = 0;
  uint64_t v345 = 0;
  v346 = 0;
  int v204 = 0;
  unint64_t v205 = 2;
LABEL_234:
  id v294 = v363;
  if (v134 >= -80)
  {
    if (v134 > -61) {
      int v295 = (v134 >> 31) & 3;
    }
    else {
      int v295 = 2;
    }
  }
  else
  {
    int v295 = 1;
  }
  unint64_t v296 = v373;
  if (!v203) {
    goto LABEL_244;
  }
  uint64_t v297 = (uint64_t)objc_msgSend(v203, sel_version);
  if (v297 < 0) {
    goto LABEL_273;
  }
  if (v294)
  {
    while (1)
    {
      uint64_t v298 = (uint64_t)objc_msgSend(v294, sel_version);
      if ((v298 & 0x8000000000000000) == 0) {
        break;
      }
      __break(1u);
LABEL_244:
      uint64_t v297 = 0;
      if (!v294) {
        goto LABEL_245;
      }
    }
  }
  else
  {
LABEL_245:
    uint64_t v298 = 0;
  }
  uint64_t v396 = v298;
  uint64_t v397 = v297;
  unint64_t v398 = v205;
  LODWORD(v399) = v204;
  uint64_t v299 = *(void *)(a11 + 16);
  if (v299)
  {
    unint64_t v300 = a11 + ((*(unsigned __int8 *)(v374 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80));
    uint64_t v301 = *(void *)(v374 + 72);
    swift_bridgeObjectRetain();
    uint64_t v302 = v299 - 1;
    while (1)
    {
      uint64_t v303 = v302;
      if ((char *)sub_1D5459918() == v380 && v304 == v296) {
        break;
      }
      char v305 = sub_1D545A078();
      swift_bridgeObjectRelease();
      if ((v305 & 1) == 0)
      {
        uint64_t v302 = v303 - 1;
        v300 += v301;
        if (v303) {
          continue;
        }
      }
      goto LABEL_255;
    }
    swift_bridgeObjectRelease();
    char v305 = 1;
LABEL_255:
    swift_bridgeObjectRelease();
  }
  else
  {
    char v305 = 0;
  }
  LODWORD(v394) = v295;
  uint64_t v307 = (uint64_t)a13;
  uint64_t v306 = a14;
  uint64_t v308 = *(void *)(a12 + 16);
  if (v308)
  {
    v395 = a13;
    unint64_t v309 = a12 + ((*(unsigned __int8 *)(v374 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80));
    uint64_t v310 = *(void *)(v374 + 72);
    swift_bridgeObjectRetain();
    uint64_t v311 = v308 - 1;
    while (1)
    {
      uint64_t v312 = v311;
      if ((char *)sub_1D5459918() == v380 && v313 == v373) {
        break;
      }
      char v314 = sub_1D545A078();
      swift_bridgeObjectRelease();
      if ((v314 & 1) == 0)
      {
        uint64_t v311 = v312 - 1;
        v309 += v310;
        if (v312) {
          continue;
        }
      }
      goto LABEL_265;
    }
    swift_bridgeObjectRelease();
    char v314 = 1;
LABEL_265:
    swift_bridgeObjectRelease();
    uint64_t v306 = a14;
    uint64_t v307 = (uint64_t)v395;
  }
  else
  {
    char v314 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v315 = v356;
  id v316 = objc_msgSend(v356, sel_SSID);
  LODWORD(v395) = a21;
  if (v316
    && (v316, (id v317 = objc_msgSend(v315, sel_networkBSSID)) != 0))
  {

    char v318 = 1;
  }
  else
  {
    char v318 = 0;
  }
  uint64_t v319 = v361;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D4A6E148(v376, v362, a11, a12, v307, v306, v319 != 0, 1, (uint64_t)&v425, v360, v319, (char)v394, v318);
  LODWORD(v386) = v425;
  LODWORD(v385) = BYTE1(v425);
  LODWORD(v384) = WORD1(v425);
  LODWORD(v383) = BYTE4(v425);
  LODWORD(v382) = BYTE5(v425);
  LODWORD(v381) = BYTE6(v425);
  LOBYTE(v319) = HIBYTE(v425);
  char v320 = v426;
  uint64_t v321 = v427;
  uint64_t v322 = v428;
  LODWORD(v390) = v429;
  LODWORD(v389) = v430;
  v394 = *(char **)(v414 + 16);
  uint64_t v323 = v350;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v393 = *(char **)(v413 + 16);
  swift_bridgeObjectRelease();
  v392 = *(char **)(v359 + 16);
  swift_bridgeObjectRelease();
  v391 = *(char **)(v355 + 16);
  swift_bridgeObjectRelease();
  v388 = *(void (***)(char *, uint64_t))(v412 + 16);
  swift_bridgeObjectRelease();
  v387 = *(char **)(v408 + 16);
  swift_bridgeObjectRelease();
  uint64_t v324 = sub_1D4A6D5D4(v409, v411);
  swift_bridgeObjectRelease();
  uint64_t v325 = sub_1D4A6D5D4(v410, v324);
  swift_bridgeObjectRelease();
  uint64_t v326 = *(void *)(v325 + 16);
  swift_release();
  uint64_t v327 = v352;
  void *v352 = v349;
  v327[1] = v323;
  *((unsigned char *)v327 + 16) = v351;
  *((unsigned char *)v327 + 24) = (_BYTE)v386;
  *((unsigned char *)v327 + 25) = (_BYTE)v385;
  *((_WORD *)v327 + 13) = (_WORD)v384;
  *((unsigned char *)v327 + 2_Block_object_dispose(&STACK[0x368], 8) = (_BYTE)v383;
  *((unsigned char *)v327 + 29) = (_BYTE)v382;
  *((unsigned char *)v327 + 30) = (_BYTE)v381;
  *((unsigned char *)v327 + 31) = v319;
  *((unsigned char *)v327 + 32) = v320;
  v327[5] = v321;
  v327[6] = v322;
  *(_DWORD *)((char *)v327 + 17) = *(_DWORD *)v407;
  *((_DWORD *)v327 + 5) = *(_DWORD *)&v407[3];
  *((_DWORD *)v327 + 9) = *(_DWORD *)&v406[3];
  *(_DWORD *)((char *)v327 + 33) = *(_DWORD *)v406;
  char v328 = v365 & 1;
  char v329 = v364 & 1;
  char v330 = v353 & 1;
  char v331 = v395 & 1;
  *((unsigned char *)v327 + 56) = (_BYTE)v390;
  *((unsigned char *)v327 + 57) = (_BYTE)v389;
  *(_DWORD *)((char *)v327 + 5_Block_object_dispose(&STACK[0x368], 8) = v404;
  *((_WORD *)v327 + 31) = v405;
  v327[8] = v398;
  v327[9] = v369;
  v327[10] = v346;
  v327[11] = v345;
  *((_WORD *)v327 + 4_Block_object_dispose(&STACK[0x368], 8) = v399;
  *(_DWORD *)((char *)v327 + 9_Block_object_dispose(&STACK[0x368], 8) = v402;
  *((_WORD *)v327 + 51) = v403;
  v327[13] = v370;
  v327[14] = v368;
  v327[15] = v367;
  v327[16] = v366;
  *((_WORD *)v327 + 6_Block_object_dispose(&STACK[0x368], 8) = (_WORD)v371;
  *((_WORD *)v327 + 71) = v401;
  *(_DWORD *)((char *)v327 + 13_Block_object_dispose(&STACK[0x368], 8) = v400;
  v327[18] = v394;
  v327[19] = v393;
  v327[20] = v392;
  v327[21] = v391;
  v327[22] = v388;
  v327[23] = v387;
  *((unsigned char *)v327 + 192) = v305 & 1;
  *((unsigned char *)v327 + 193) = v314 & 1;
  *((unsigned char *)v327 + 194) = v348;
  *((unsigned char *)v327 + 195) = v347;
  *((unsigned char *)v327 + 196) = v328;
  *((unsigned char *)v327 + 197) = v329;
  uint64_t v332 = v397;
  v327[25] = v326;
  v327[26] = v332;
  v327[27] = v396;
  *((unsigned char *)v327 + 224) = v330;
  *((unsigned char *)v327 + 225) = v331;
}

uint64_t sub_1D4A71BB0(uint64_t a1, void (*a2)(uint64_t, uint64_t, unsigned char *))
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v20 + 8 * v15);
    ++v9;
    if (!v16)
    {
      int64_t v9 = v15 + 1;
      if (v15 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v20 + 8 * v9);
      if (!v16)
      {
        int64_t v9 = v15 + 2;
        if (v15 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v20 + 8 * v9);
        if (!v16)
        {
          int64_t v9 = v15 + 3;
          if (v15 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v20 + 8 * v9);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    sub_1D4A52548(*(void *)(a1 + 56) + 40 * v11, (uint64_t)v19);
    v18[0] = v13;
    v18[1] = v14;
    swift_bridgeObjectRetain();
    a2(v13, v14, v19);
    uint64_t result = sub_1D4A51D64((uint64_t)v18, (uint64_t *)&unk_1EA70F9C8);
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v7) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v20 + 8 * v17);
  if (v16)
  {
    int64_t v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v20 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1D4A71D80()
{
  unint64_t result = qword_1EA70F9D8;
  if (!qword_1EA70F9D8)
  {
    sub_1D5459A48();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA70F9D8);
  }
  return result;
}

uint64_t destroy for Metric.Setup.NetworkInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Metric.Setup.NetworkInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x368], 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  long long v5 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v5;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_WORD *)(a1 + 196) = *(_WORD *)(a2 + 196);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Metric.Setup.NetworkInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 2_Block_object_dispose(&STACK[0x368], 8) = *(unsigned char *)(a2 + 28);
  *(unsigned char *)(a1 + 29) = *(unsigned char *)(a2 + 29);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(unsigned char *)(a1 + 31) = *(unsigned char *)(a2 + 31);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  long long v4 = *(_OWORD *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 104);
  long long v7 = *(_OWORD *)(a2 + 120);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = v7;
  *(_OWORD *)(a1 + 104) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 16_Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(unsigned char *)(a1 + 194) = *(unsigned char *)(a2 + 194);
  *(unsigned char *)(a1 + 195) = *(unsigned char *)(a2 + 195);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(unsigned char *)(a1 + 197) = *(unsigned char *)(a2 + 197);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 20_Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
  return a1;
}

__n128 __swift_memcpy226_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x368], 8) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 12_Block_object_dispose(&STACK[0x368], 8) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(_WORD *)(a1 + 224) = *((_WORD *)a2 + 112);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 20_Block_object_dispose(&STACK[0x368], 8) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for Metric.Setup.NetworkInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x368], 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
  *(unsigned char *)(a1 + 2_Block_object_dispose(&STACK[0x368], 8) = *(unsigned char *)(a2 + 28);
  *(unsigned char *)(a1 + 29) = *(unsigned char *)(a2 + 29);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(unsigned char *)(a1 + 31) = *(unsigned char *)(a2 + 31);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  long long v6 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v6;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(unsigned char *)(a1 + 194) = *(unsigned char *)(a2 + 194);
  *(unsigned char *)(a1 + 195) = *(unsigned char *)(a2 + 195);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(unsigned char *)(a1 + 197) = *(unsigned char *)(a2 + 197);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
  return a1;
}

uint64_t getEnumTagSinglePayload for Metric.Setup.NetworkInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 226)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Metric.Setup.NetworkInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 16_Block_object_dispose(&STACK[0x368], 8) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 8_Block_object_dispose(&STACK[0x368], 8) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x368], 8) = 0u;
    *(_WORD *)(result + 224) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 226) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&STACK[0x368], 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 226) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Metric.Setup.NetworkInfo()
{
  return &type metadata for Metric.Setup.NetworkInfo;
}

uint64_t sub_1D4A72240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4A6CC0C(a1, a2, a3, *(void *)(v3 + 16), 0x6C6C6F72746E6F63, 0xEB000000005F7265);
}

uint64_t sub_1D4A72278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FA08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4A722E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4A6CC0C(a1, a2, a3, *(void *)(v3 + 16), 0x5F7972616D697270, 0xE800000000000000);
}

uint64_t sub_1D4A72310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4A6CC0C(a1, a2, a3, *(void *)(v3 + 16), 0x726F737365636361, 0xEA00000000005F79);
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for Metric.NetworkInfo(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[34]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Metric.NetworkInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + _Block_object_dispose(&STACK[0x368], 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Metric.NetworkInfo()
{
  return &type metadata for Metric.NetworkInfo;
}

ValueMetadata *type metadata accessor for Metric.Setup()
{
  return &type metadata for Metric.Setup;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Metric.Setup.NetworkInfo.SetupCompletionState()
{
  return &type metadata for Metric.Setup.NetworkInfo.SetupCompletionState;
}

unint64_t sub_1D4A72444()
{
  unint64_t result = qword_1EA70FA10;
  if (!qword_1EA70FA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA70FA10);
  }
  return result;
}

ValueMetadata *type metadata accessor for Metric.NetworkInfo.WiFiRSSIStatus()
{
  return &type metadata for Metric.NetworkInfo.WiFiRSSIStatus;
}

uint64_t _s19HomeKitDaemonLegacy6MetricO5SetupO11NetworkInfoV20SetupCompletionStateOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19HomeKitDaemonLegacy6MetricO5SetupO11NetworkInfoV20SetupCompletionStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4A7260CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Metric.NetworkInfo.FirstCloudImportStatus()
{
  return &type metadata for Metric.NetworkInfo.FirstCloudImportStatus;
}

uint64_t _s19HomeKitDaemonLegacy6MetricO11NetworkInfoV14PrimaryServiceOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19HomeKitDaemonLegacy6MetricO11NetworkInfoV14PrimaryServiceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4A727A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1D4A727C8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1D4A727D0(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Metric.NetworkInfo.PrimaryService()
{
  return &type metadata for Metric.NetworkInfo.PrimaryService;
}

unint64_t sub_1D4A727EC()
{
  unint64_t result = qword_1EA70FA18;
  if (!qword_1EA70FA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA70FA18);
  }
  return result;
}

unint64_t sub_1D4A72844()
{
  unint64_t result = qword_1EA70FA20;
  if (!qword_1EA70FA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA70FA20);
  }
  return result;
}

unint64_t sub_1D4A7289C()
{
  unint64_t result = qword_1EA70FA28;
  if (!qword_1EA70FA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA70FA28);
  }
  return result;
}

unint64_t sub_1D4A728F0(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

unint64_t sub_1D4A72918()
{
  uint64_t v1 = sub_1D5459938();
  uint64_t v47 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  int v3 = (char *)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC19HomeKitDaemonLegacy23NetworkMismatchDetector_dataSource;
  uint64_t v5 = MEMORY[0x1D9452C30](v0 + OBJC_IVAR____TtC19HomeKitDaemonLegacy23NetworkMismatchDetector_dataSource);
  unint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v7 = v5;
    int v8 = *(uint64_t (***)(void, void))(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v42 = v8[3](ObjectType, v8);
    uint64_t v10 = v8[2](ObjectType, v8);
    int64_t v11 = *(void *)(v10 + 16);
    uint64_t v43 = v7;
    if (v11)
    {
      uint64_t v40 = ObjectType;
      uint64_t v41 = v8;
      unint64_t v48 = v6;
      sub_1D4A7A54C(0, v11, 0);
      long long v12 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
      uint64_t v13 = *(unsigned __int8 *)(v47 + 80);
      v39[1] = v10;
      uint64_t v14 = v10 + ((v13 + 32) & ~v13);
      uint64_t v44 = *(void *)(v47 + 72);
      uint64_t v45 = v12;
      uint64_t v46 = (void (*)(char *, uint64_t, uint64_t))(v47 + 16);
      int64_t v15 = (void (**)(char *, uint64_t))(v47 + 8);
      do
      {
        v45(v3, v14, v1);
        uint64_t v16 = sub_1D5459918();
        uint64_t v18 = v17;
        (*v15)(v3, v1);
        uint64_t v19 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D4A7A54C(0, *(void *)(v19 + 16) + 1, 1);
          uint64_t v19 = v48;
        }
        unint64_t v21 = *(void *)(v19 + 16);
        unint64_t v20 = *(void *)(v19 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1D4A7A54C(v20 > 1, v21 + 1, 1);
          uint64_t v19 = v48;
        }
        *(void *)(v19 + 16) = v21 + 1;
        uint64_t v22 = v19 + 16 * v21;
        *(void *)(v22 + 32) = v16;
        *(void *)(v22 + 40) = v18;
        v14 += v44;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      unint64_t v6 = MEMORY[0x1E4FBC860];
      uint64_t ObjectType = v40;
      int v8 = v41;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = MEMORY[0x1E4FBC860];
    }
    uint64_t v23 = sub_1D4A7AF68(v19);
    swift_bridgeObjectRelease();
    uint64_t v24 = v8[1](ObjectType, v8);
    int64_t v25 = *(void *)(v24 + 16);
    if (v25)
    {
      uint64_t v44 = v23;
      unint64_t v48 = v6;
      sub_1D4A7A54C(0, v25, 0);
      uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
      uint64_t v27 = *(unsigned __int8 *)(v47 + 80);
      uint64_t v41 = (uint64_t (**)(void, void))v24;
      uint64_t v28 = v24 + ((v27 + 32) & ~v27);
      uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 72);
      uint64_t v46 = v26;
      v47 += 16;
      uint64_t v29 = (void (**)(char *, uint64_t))(v47 - 8);
      do
      {
        v46(v3, v28, v1);
        uint64_t v30 = sub_1D5459918();
        uint64_t v32 = v31;
        (*v29)(v3, v1);
        uint64_t v33 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D4A7A54C(0, *(void *)(v33 + 16) + 1, 1);
          uint64_t v33 = v48;
        }
        unint64_t v35 = *(void *)(v33 + 16);
        unint64_t v34 = *(void *)(v33 + 24);
        if (v35 >= v34 >> 1)
        {
          sub_1D4A7A54C(v34 > 1, v35 + 1, 1);
          uint64_t v33 = v48;
        }
        *(void *)(v33 + 16) = v35 + 1;
        uint64_t v36 = v33 + 16 * v35;
        *(void *)(v36 + 32) = v30;
        *(void *)(v36 + 40) = v32;
        v28 += (uint64_t)v45;
        --v25;
      }
      while (v25);
      swift_bridgeObjectRelease();
      uint64_t v23 = v44;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = MEMORY[0x1E4FBC860];
    }
    uint64_t v37 = sub_1D4A7AF68(v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_1D4A7AAC8(v42, v23, v37);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v6;
}

uint64_t sub_1D4A72D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1D545A0E8();
    sub_1D5459C08();
    uint64_t v6 = sub_1D545A108();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      int64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1D545A078() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1D545A078() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1D4A72E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  uint64_t v6 = sub_1D5459878();
  v5[15] = v6;
  v5[16] = *(void *)(v6 - 8);
  v5[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FA60);
  v5[18] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FA40);
  v5[19] = v7;
  v5[20] = *(void *)(v7 - 8);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FA68);
  v5[24] = v8;
  v5[25] = *(void *)(v8 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for NetworkDetectAccessory();
  v5[27] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[28] = v10;
  v5[29] = *(void *)(v10 + 64);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99988);
  v5[32] = swift_task_alloc();
  v5[33] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D4A73118, 0, 0);
}

uint64_t sub_1D4A73118()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 224);
    uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v5 = v1 + ((v4 + 32) & ~v4);
    uint64_t v30 = (v4 + 48) & ~v4;
    uint64_t v31 = *(void *)(v3 + 72);
    uint64_t v6 = sub_1D5459D28();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v28 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v27 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v9 = *(void *)(v0 + 256);
      uint64_t v10 = *(void *)(v0 + 264);
      uint64_t v11 = *(void *)(v0 + 248);
      long long v32 = *(_OWORD *)(v0 + 104);
      v29(v10, 1, 1, v6);
      sub_1D4A74768(v5, v11);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 0;
      uint64_t v13 = (void *)(v12 + 16);
      *(void *)(v12 + 24) = 0;
      *(_OWORD *)(v12 + 32) = v32;
      sub_1D4A5FFB4(v11, v12 + v30);
      sub_1D4A67480(v10, v9, &qword_1EBD99988);
      LODWORD(v9) = (*v28)(v9, 1, v6);
      swift_unknownObjectRetain();
      uint64_t v14 = *(void *)(v0 + 256);
      if (v9 == 1)
      {
        sub_1D4A51D64(*(void *)(v0 + 256), &qword_1EBD99988);
        if (!*v13) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_1D5459D18();
        (*v27)(v14, v6);
        if (!*v13)
        {
LABEL_8:
          uint64_t v15 = 0;
          uint64_t v17 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v15 = sub_1D5459CC8();
      uint64_t v17 = v16;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v18 = **(void **)(v0 + 88);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = &unk_1EA70FA80;
      *(void *)(v19 + 24) = v12;
      uint64_t v20 = v17 | v15;
      if (v17 | v15)
      {
        uint64_t v20 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v15;
        *(void *)(v0 + 40) = v17;
      }
      uint64_t v8 = *(void *)(v0 + 264);
      *(void *)(v0 + 4_Block_object_dispose(&STACK[0x368], 8) = 1;
      *(void *)(v0 + 56) = v20;
      *(void *)(v0 + 64) = v18;
      swift_task_create();
      swift_release();
      sub_1D4A51D64(v8, &qword_1EBD99988);
      v5 += v31;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  unint64_t v21 = sub_1D4A610E0(MEMORY[0x1E4FBC860]);
  sub_1D5459CF8();
  *(void *)(v0 + 272) = v21;
  unint64_t v22 = sub_1D4A74AE4();
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v23;
  void *v23 = v0;
  v23[1] = sub_1D4A734B0;
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = *(void *)(v0 + 144);
  return MEMORY[0x1F4187C78](v25, v24, v22);
}

uint64_t sub_1D4A734B0()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[25];
    uint64_t v3 = v2[26];
    uint64_t v5 = v2[24];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = nullsub_1;
  }
  else
  {
    uint64_t v6 = sub_1D4A735F0;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1D4A735F0()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[18];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[20] + 48))(v2, 1, v1) == 1)
  {
    uint64_t v3 = v0[34];
    uint64_t v4 = (void *)v0[10];
    (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
    sub_1D4A51D64(v2, &qword_1EA70FA60);
    void *v4 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  uint64_t v7 = v0[27];
  uint64_t v8 = v0[28];
  uint64_t v10 = v0[22];
  uint64_t v9 = v0[23];
  sub_1D4A7C444(v2, v9, &qword_1EA70FA40);
  uint64_t v11 = *(int *)(v1 + 48);
  sub_1D4A67480(v9, v10, &qword_1EBD99828);
  uint64_t v12 = *(void **)(v9 + v11);
  *(void *)(v10 + v11) = v12;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7) == 1)
  {
    uint64_t v13 = v0[22];
LABEL_15:
    sub_1D4A51D64(v13, &qword_1EBD99828);
    uint64_t v38 = (void *)v0[34];
    goto LABEL_24;
  }
  uint64_t v14 = v0[23];
  uint64_t v15 = v0[21];
  uint64_t v16 = v0[19];
  sub_1D4A5FFB4(v0[22], v0[30]);
  uint64_t v17 = *(int *)(v16 + 48);
  sub_1D4A67480(v14, v15, &qword_1EBD99828);
  *(void *)(v15 + v17) = v12;
  if (!v12)
  {
    uint64_t v37 = v0[21];
    sub_1D4A74B40(v0[30]);
    uint64_t v13 = v37;
    goto LABEL_15;
  }
  uint64_t v18 = v0[34];
  uint64_t v19 = v0[30];
  uint64_t v20 = v0[21];
  uint64_t v22 = v0[16];
  uint64_t v21 = v0[17];
  uint64_t v23 = v0[15];
  id v24 = v12;
  sub_1D4A51D64(v20, &qword_1EBD99828);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  v25(v21, v19, v23);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v0[9] = v18;
  unint64_t v29 = sub_1D4A65B98(v21);
  uint64_t v30 = *(void *)(v18 + 16);
  BOOL v31 = (v27 & 1) == 0;
  uint64_t v32 = v30 + v31;
  if (__OFADD__(v30, v31))
  {
    __break(1u);
    goto LABEL_28;
  }
  char v33 = v27;
  if (*(void *)(v0[34] + 24) >= v32)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1D4A770CC();
    }
    goto LABEL_19;
  }
  uint64_t v34 = v0[17];
  sub_1D4A75FF8(v32, isUniquelyReferenced_nonNull_native);
  unint64_t v35 = sub_1D4A65B98(v34);
  if ((v33 & 1) == (v36 & 1))
  {
    unint64_t v29 = v35;
LABEL_19:
    uint64_t v38 = (void *)v0[9];
    if (v33)
    {
      uint64_t v39 = v38[7];
      uint64_t v40 = 8 * v29;

      *(void *)(v39 + v40) = v24;
LABEL_23:
      uint64_t v47 = v0[30];
      uint64_t v49 = v0[16];
      uint64_t v48 = v0[17];
      uint64_t v50 = v0[15];
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
      sub_1D4A74B40(v47);
LABEL_24:
      sub_1D4A51D64(v0[23], &qword_1EA70FA40);
      v0[34] = v38;
      unint64_t v51 = sub_1D4A74AE4();
      uint64_t v52 = (void *)swift_task_alloc();
      v0[35] = v52;
      *uint64_t v52 = v0;
      v52[1] = sub_1D4A734B0;
      uint64_t v27 = v0[24];
      uint64_t v32 = v0[18];
      unint64_t v28 = v51;
      return MEMORY[0x1F4187C78](v32, v27, v28);
    }
    uint64_t v42 = v0[16];
    uint64_t v41 = v0[17];
    uint64_t v43 = v0[15];
    v38[(v29 >> 6) + 8] |= 1 << v29;
    uint64_t v32 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v25)(v38[6] + *(void *)(v42 + 72) * v29, v41, v43);
    *(void *)(v38[7] + 8 * v29) = v24;
    uint64_t v44 = v38[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (!v45)
    {
      _OWORD v38[2] = v46;
      goto LABEL_23;
    }
LABEL_28:
    __break(1u);
    return MEMORY[0x1F4187C78](v32, v27, v28);
  }
  return sub_1D545A0A8();
}

uint64_t sub_1D4A73A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = a6;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 32) + **(int **)(a5 + 32));
  uint64_t v10 = (void *)swift_task_alloc();
  void v6[4] = v10;
  void *v10 = v6;
  v10[1] = sub_1D4A73B80;
  return v12(a6, ObjectType, a5);
}

uint64_t sub_1D4A73B80(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D4A73C80, 0, 0);
}

uint64_t sub_1D4A73C80()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FA40) + 48);
  sub_1D4A74768(v3, v2);
  uint64_t v5 = type metadata accessor for NetworkDetectAccessory();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 0, 1, v5);
  *(void *)(v2 + v4) = v1;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1D4A73D48()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1D4A73D68, 0, 0);
}

uint64_t sub_1D4A73D68()
{
  unint64_t v1 = sub_1D4A72918();
  v0[4] = v1;
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = v0[3] + OBJC_IVAR____TtC19HomeKitDaemonLegacy23NetworkMismatchDetector_dataSource;
    uint64_t v3 = MEMORY[0x1D9452C30](v2);
    v0[5] = v3;
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = *(void *)(v2 + 8);
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FA40);
      uint64_t v7 = (void *)swift_task_alloc();
      v0[6] = v7;
      void v7[2] = v1;
      v7[3] = v4;
      v7[4] = v5;
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FA58);
      uint64_t v9 = (void *)swift_task_alloc();
      v0[7] = v9;
      void *v9 = v0;
      v9[1] = sub_1D4A73F54;
      return MEMORY[0x1F4187F28](v0 + 2, v6, v8, 0, 0, &unk_1EA70FA50, v7, v6);
    }
    unint64_t v11 = sub_1D4A610E0(MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease();
    sub_1D4A740FC(v11);
    unint64_t v10 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v10 = sub_1D4A612D4(MEMORY[0x1E4FBC860]);
  }
  uint64_t v13 = (uint64_t (*)(unint64_t))v0[1];
  return v13(v10);
}

uint64_t sub_1D4A73F54()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D4A7406C, 0, 0);
}

uint64_t sub_1D4A7406C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4A740FC(*(void *)(v0 + 16));
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

void sub_1D4A740FC(uint64_t a1)
{
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FA98);
  uint64_t v2 = MEMORY[0x1F4188790](v51);
  unint64_t v58 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v50 = (char *)&v46 - v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v49 = (char *)&v46 - v6;
  uint64_t v7 = MEMORY[0x1E4FBC868];
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v48 = a1 + 64;
  uint64_t v59 = MEMORY[0x1E4FBC868];
  uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
  if (-v9 < 64) {
    uint64_t v10 = ~(-1 << -(char)v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v8;
  uint64_t v46 = -1 << *(unsigned char *)(a1 + 32);
  int64_t v47 = (unint64_t)(63 - v9) >> 6;
  uint64_t v52 = a1;
  swift_bridgeObjectRetain();
  int64_t v53 = 0;
  uint64_t v12 = (uint64_t)v50;
  while (1)
  {
    if (v11)
    {
      uint64_t v57 = (v11 - 1) & v11;
      unint64_t v21 = __clz(__rbit64(v11)) | (v53 << 6);
      goto LABEL_34;
    }
    int64_t v22 = v53 + 1;
    if (__OFADD__(v53, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v22 >= v47) {
      goto LABEL_36;
    }
    unint64_t v23 = *(void *)(v48 + 8 * v22);
    int64_t v24 = v53 + 1;
    if (!v23)
    {
      int64_t v24 = v53 + 2;
      if (v53 + 2 >= v47) {
        goto LABEL_36;
      }
      unint64_t v23 = *(void *)(v48 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v53 + 3;
        if (v53 + 3 >= v47) {
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v48 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v53 + 4;
          if (v53 + 4 >= v47) {
            goto LABEL_36;
          }
          unint64_t v23 = *(void *)(v48 + 8 * v24);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_33:
    uint64_t v57 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    int64_t v53 = v24;
LABEL_34:
    uint64_t v30 = v52;
    uint64_t v31 = *(void *)(v52 + 48);
    uint64_t v32 = sub_1D5459878();
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v34 = v33;
    uint64_t v35 = *(void *)(v33 + 72);
    uint64_t v36 = (uint64_t)v49;
    (*(void (**)(char *, unint64_t, uint64_t))(v33 + 16))(v49, v31 + v35 * v21, v32);
    uint64_t v37 = *(void **)(*(void *)(v30 + 56) + 8 * v21);
    uint64_t v38 = v51;
    *(void *)(v36 + *(int *)(v51 + 48)) = v37;
    sub_1D4A7C444(v36, v12, &qword_1EA70FA98);
    uint64_t v39 = *(void **)(v12 + *(int *)(v38 + 48));
    id v40 = v37;
    sub_1D4A7B000(v39);
    uint64_t v55 = v42;
    uint64_t v56 = v41;
    uint64_t v54 = v43;
    uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
    v44(v58, v12, v32);
    unint64_t v45 = *(void *)(v7 + 16);
    if (*(void *)(v7 + 24) <= v45) {
      sub_1D4A7555C(v45 + 1, 1);
    }
    uint64_t v7 = v59;
    sub_1D4A66D18((unint64_t *)&qword_1EBD99600);
    uint64_t v13 = sub_1D5459B98();
    uint64_t v14 = v7 + 64;
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v13 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v7 + 64 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v7 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v14 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v44((char *)(*(void *)(v7 + 48) + v18 * v35), (uint64_t)v58, v32);
    uint64_t v19 = (void *)(*(void *)(v7 + 56) + 24 * v18);
    uint64_t v20 = v55;
    *uint64_t v19 = v56;
    v19[1] = v20;
    void v19[2] = v54;
    ++*(void *)(v7 + 16);

    unint64_t v11 = v57;
  }
  int64_t v25 = v53 + 5;
  if (v53 + 5 >= v47)
  {
LABEL_36:
    sub_1D4A51CA4();
    return;
  }
  unint64_t v23 = *(void *)(v48 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v53 + 5;
    goto LABEL_33;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v47) {
      goto LABEL_36;
    }
    unint64_t v23 = *(void *)(v48 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_33;
    }
  }
LABEL_38:
  __break(1u);
}

id sub_1D4A745F0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NetworkMismatchDetector();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NetworkMismatchDetector()
{
  return self;
}

uint64_t sub_1D4A74658(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  void *v9 = v3;
  v9[1] = sub_1D4A5D228;
  return sub_1D4A72E90(a1, a2, v6, v7, v8);
}

uint64_t type metadata accessor for NetworkDetectAccessory()
{
  uint64_t result = qword_1EBD997E8;
  if (!qword_1EBD997E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D4A74768(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkDetectAccessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4A747CC()
{
  uint64_t v1 = (int *)(type metadata accessor for NetworkDetectAccessory() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1D5459878();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v6 + v1[7], v7);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1D4A748F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for NetworkDetectAccessory() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_1D4A5D0F0;
  return sub_1D4A73A68(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1D4A749F4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4A74A2C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1D4A5D0F0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA70FA78 + dword_1EA70FA78);
  return v6(a1, v4);
}

unint64_t sub_1D4A74AE4()
{
  unint64_t result = qword_1EA70FA90;
  if (!qword_1EA70FA90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA70FA68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA70FA90);
  }
  return result;
}

uint64_t sub_1D4A74B40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NetworkDetectAccessory();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D4A74B9C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99BB0);
  uint64_t v6 = sub_1D545A028();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1D4A51C94(v24, v35);
      }
      else
      {
        sub_1D4A51C38((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1D545A0E8();
      sub_1D5459C08();
      uint64_t result = sub_1D545A108();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1D4A51C94(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1D4A74E9C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FAC0);
  uint64_t v6 = sub_1D545A028();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_1D5459E08();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1D4A75174(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_1D5459938();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FAB8);
  int v47 = a2;
  uint64_t v8 = sub_1D545A028();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  unint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  int64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    uint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    BOOL v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_1D545A0E8();
    sub_1D5459C08();
    uint64_t result = sub_1D545A108();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    *uint64_t v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  uint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v9;
  return result;
}

uint64_t sub_1D4A7555C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D5459878();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F758);
  int v48 = a2;
  uint64_t v10 = sub_1D545A028();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v44 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v12 + 63) >> 6;
  unint64_t v45 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v49 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v50 = v5;
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v46 = v6;
  for (i = v9; ; uint64_t v9 = i)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v43) {
      break;
    }
    unint64_t v24 = v44;
    unint64_t v25 = v44[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v25 = v44[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v44[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v43) {
              goto LABEL_34;
            }
            unint64_t v25 = v44[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v48)
    {
      (*v49)(v8, v28, v50);
      uint64_t v29 = *(void *)(v9 + 56) + 24 * v22;
      long long v51 = *(_OWORD *)v29;
      uint64_t v30 = *(void **)(v29 + 16);
    }
    else
    {
      (*v45)(v8, v28, v50);
      uint64_t v31 = *(void *)(v9 + 56) + 24 * v22;
      long long v51 = *(_OWORD *)v31;
      uint64_t v30 = *(void **)(v31 + 16);
      id v32 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D4A66D18((unint64_t *)&qword_1EBD99600);
    uint64_t result = sub_1D5459B98();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v49)(*(void *)(v11 + 48) + v27 * v19, v8, v50);
    uint64_t v20 = *(void *)(v11 + 56) + 24 * v19;
    *(_OWORD *)uint64_t v20 = v51;
    *(void *)(v20 + 16) = v30;
    ++*(void *)(v11 + 16);
    uint64_t v6 = v46;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v24 = v44;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_1D4A759C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7C0);
  char v38 = a2;
  uint64_t v6 = sub_1D545A028();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    id v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1D545A0E8();
    sub_1D5459C08();
    uint64_t result = sub_1D545A108();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1D4A75CD0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7F0);
  char v37 = a2;
  uint64_t v6 = sub_1D545A028();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    unint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    char v25 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (v37)
    {
      sub_1D4A5BF0C(v25, (uint64_t)v38);
    }
    else
    {
      sub_1D4A52548((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_1D545A0E8();
    sub_1D5459C08();
    uint64_t result = sub_1D545A108();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    void *v15 = v24;
    v15[1] = v23;
    uint64_t result = sub_1D4A5BF0C(v38, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1D4A75FF8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D5459878();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7B0);
  int v46 = a2;
  uint64_t v10 = sub_1D545A028();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (uint64_t i = v11; ; v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1D4A66D18((unint64_t *)&qword_1EBD99600);
    uint64_t result = sub_1D5459B98();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

void *sub_1D4A76408()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99BB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D545A018();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  char v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1D4A51C38(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_1D4A51C94(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D4A765F0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FAC0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D545A018();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D4A7679C()
{
  uint64_t v35 = sub_1D5459938();
  uint64_t v1 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FAB8);
  id v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_1D545A018();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v28 = v36;
    int64_t v27 = v30;
LABEL_25:
    uint64_t *v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  uint64_t result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    uint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    unint64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    void *v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    int64_t v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D4A76A60()
{
  uint64_t v1 = sub_1D5459878();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F758);
  uint64_t v28 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1D545A018();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *uint64_t v28 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v29 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v32 = v2 + 16;
  int64_t v30 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v31 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v24 >= v30) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v30) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v29 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 24 * v15;
    uint64_t v18 = *(void *)(v5 + 56) + v17;
    uint64_t v19 = *(void **)(v18 + 16);
    unint64_t v20 = *(void *)(v7 + 48) + v16;
    unint64_t v21 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 32);
    long long v33 = *(_OWORD *)v18;
    v21(v20, v4, v1);
    uint64_t v22 = *(void *)(v7 + 56) + v17;
    *(_OWORD *)uint64_t v22 = v33;
    *(void *)(v22 + 16) = v19;
    id v23 = v19;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v30) {
    goto LABEL_23;
  }
  unint64_t v25 = *(void *)(v29 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1D4A76D2C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D545A018();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D4A76EE0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D545A018();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_1D4A52548(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_1D4A5BF0C(v26, *(void *)(v4 + 56) + v20);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1D4A770CC()
{
  uint64_t v1 = sub_1D5459878();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7B0);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1D545A018();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D4A77364(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1D5459EF8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B28);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1D5459EE8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1D4A59034(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_1D4A77DC4();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_1D4A59488((uint64_t)v8, v22);
    uint64_t *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1D5459E08();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B28);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1D5459E18();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        int64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1D5459E18();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1D4A78A40((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1D4A77604(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5459878();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D4A66D18((unint64_t *)&qword_1EBD99600);
  swift_bridgeObjectRetain();
  uint64_t v34 = a2;
  uint64_t v11 = sub_1D5459B98();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v33 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v29 = v2;
    uint64_t v30 = a1;
    uint64_t v31 = ~v12;
    uint64_t v28 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    id v14 = v16;
    uint64_t v32 = *(void *)(v15 + 56);
    id v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v27[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v32 * v13;
      unint64_t v20 = *(void *)(v10 + 48) + v32 * v13;
      uint64_t v21 = v14;
      v14(v9, v20, v6);
      sub_1D4A66D18(&qword_1EA70F6B8);
      char v22 = sub_1D5459BB8();
      id v23 = *v17;
      (*v17)(v9, v6);
      if (v22) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v31;
      id v14 = v21;
      uint64_t v10 = v18;
      if (((*(void *)(v33 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v29;
        a1 = v30;
        uint64_t v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v34, v6);
    v21(v30, *(void *)(*v29 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v25 = v34;
    v14(v9, v34, v6);
    uint64_t v35 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1D4A78BC8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1D4A77900(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_1D5459EF8();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for AssertionHandle.Assertion(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v21;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1D5459EE8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = sub_1D4A5922C(v7, result + 1);
    uint64_t v22 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_1D4A7844C();
      uint64_t v17 = v22;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_1D4A5950C(a2, v17);
    uint64_t *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  else
  {
    sub_1D545A0E8();
    sub_1D5459878();
    sub_1D4A66D18((unint64_t *)&qword_1EBD99600);
    swift_bridgeObjectRetain();
    sub_1D5459BA8();
    uint64_t v10 = sub_1D545A108();
    uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v12 = v10 & ~v11;
    if ((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      swift_retain();
      char v13 = sub_1D5459848();
      swift_release();
      if (v13)
      {
LABEL_12:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
        swift_retain();
        return 0;
      }
      uint64_t v14 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v14;
        if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          break;
        }
        swift_retain();
        char v15 = sub_1D5459848();
        swift_release();
        if (v15) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    uint64_t v19 = swift_retain();
    sub_1D4A78E40(v19, v12, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v23;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  return 1;
}

uint64_t sub_1D4A77C14(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1D545A0E8();
  swift_bridgeObjectRetain();
  sub_1D5459C08();
  uint64_t v8 = sub_1D545A108();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1D545A078() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1D545A078() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1D4A79038(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1D4A77DC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD99BA0);
  uint64_t v3 = sub_1D5459F68();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_1D5459E08();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1D4A78064()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5459878();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FAC8);
  uint64_t v5 = sub_1D5459F68();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D4A66D18((unint64_t *)&qword_1EBD99600);
      uint64_t result = sub_1D5459B98();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_1D4A7844C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD999D8);
  uint64_t v3 = sub_1D5459F68();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8) {
          goto LABEL_33;
        }
        unint64_t v16 = v27[v15];
        ++v11;
        if (!v16)
        {
          int64_t v11 = v15 + 1;
          if (v15 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v16 = v27[v11];
          if (!v16)
          {
            int64_t v11 = v15 + 2;
            if (v15 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v16 = v27[v11];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v27 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v27[v11];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_1D545A0E8();
      sub_1D5459878();
      sub_1D4A66D18((unint64_t *)&qword_1EBD99600);
      sub_1D5459BA8();
      uint64_t result = sub_1D545A108();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v9 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1D4A78760()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F9F0);
  uint64_t v3 = sub_1D5459F68();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1D545A0E8();
      sub_1D5459C08();
      uint64_t result = sub_1D545A108();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

void sub_1D4A78A40(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1D4A77DC4();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1D4A791D4();
      goto LABEL_14;
    }
    sub_1D4A79984();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1D5459E08();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1D4A51CAC(0, (unint64_t *)&qword_1EBD99B28);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1D5459E18();

    if (v12)
    {
LABEL_13:
      sub_1D545A098();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1D5459E18();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_1D4A78BC8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5459878();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D4A78064();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D4A79380();
      goto LABEL_12;
    }
    sub_1D4A79C00();
  }
  uint64_t v12 = *v3;
  sub_1D4A66D18((unint64_t *)&qword_1EBD99600);
  uint64_t v13 = sub_1D5459B98();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D4A66D18(&qword_1EA70F6B8);
      char v21 = sub_1D5459BB8();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D545A098();
  __break(1u);
  return result;
}

uint64_t sub_1D4A78E40(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1D4A7844C();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_1D4A79624();
      goto LABEL_14;
    }
    sub_1D4A79F9C();
  }
  uint64_t v9 = *v3;
  sub_1D545A0E8();
  sub_1D5459878();
  sub_1D4A66D18((unint64_t *)&qword_1EBD99600);
  sub_1D5459BA8();
  uint64_t result = sub_1D545A108();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for AssertionHandle.Assertion(0);
    swift_retain();
    char v11 = sub_1D5459848();
    uint64_t result = swift_release();
    if (v11)
    {
LABEL_13:
      uint64_t result = sub_1D545A098();
      __break(1u);
    }
    else
    {
      uint64_t v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        swift_retain();
        char v13 = sub_1D5459848();
        uint64_t result = swift_release();
        if (v13) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v14 + 48) + 8 * a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

uint64_t sub_1D4A79038(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1D4A78760();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1D4A797D0();
      goto LABEL_22;
    }
    sub_1D4A7A29C();
  }
  uint64_t v11 = *v4;
  sub_1D545A0E8();
  sub_1D5459C08();
  uint64_t result = sub_1D545A108();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1D545A078(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1D545A098();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1D545A078();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

id sub_1D4A791D4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD99BA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5459F58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D4A79380()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5459878();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FAC8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1D5459F58();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_27:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  id result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    id result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1D4A79624()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD999D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5459F58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    id result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D4A797D0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F9F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5459F58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D4A79984()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD99BA0);
  uint64_t v3 = sub_1D5459F68();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1D5459E08();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D4A79C00()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5459878();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FAC8);
  uint64_t v7 = sub_1D5459F68();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D4A66D18((unint64_t *)&qword_1EBD99600);
    uint64_t result = sub_1D5459B98();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D4A79F9C()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD999D8);
  uint64_t v2 = sub_1D5459F68();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v24 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v25 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v25) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v25) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v24 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v25) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v24 + 8 * v9);
        if (!v14) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v12);
    sub_1D545A0E8();
    sub_1D5459878();
    sub_1D4A66D18((unint64_t *)&qword_1EBD99600);
    swift_retain();
    sub_1D5459BA8();
    uint64_t result = sub_1D545A108();
    uint64_t v17 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v7 + 8 * (v18 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v18) & ~*(void *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v20 = 0;
      unint64_t v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v22 = v19 == v21;
        if (v19 == v21) {
          unint64_t v19 = 0;
        }
        v20 |= v22;
        uint64_t v23 = *(void *)(v7 + 8 * v19);
      }
      while (v23 == -1);
      unint64_t v10 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(void *)(*(void *)(v3 + 48) + 8 * v10) = v16;
    ++*(void *)(v3 + 16);
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v25)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v25) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D4A7A29C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F9F0);
  uint64_t v3 = sub_1D5459F68();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1D545A0E8();
    swift_bridgeObjectRetain();
    sub_1D5459C08();
    uint64_t result = sub_1D545A108();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D4A7A54C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4A7A5AC(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1D4A7A56C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4A7A718(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1D4A7A58C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4A7A888(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1D4A7A5AC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA70F9E0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D545A048();
  __break(1u);
  return result;
}

uint64_t sub_1D4A7A718(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA70FAD0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D545A048();
  __break(1u);
  return result;
}

uint64_t sub_1D4A7A888(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F7A0);
  uint64_t v10 = *(void *)(sub_1D5459A28() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_1D5459A28() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  int64_t v18 = (char *)v13 + v17;
  unint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1D545A048();
  __break(1u);
  return result;
}

unint64_t sub_1D4A7AAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD99828);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NetworkDetectAccessory();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v58 = (uint64_t)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v56 = (uint64_t)v48 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v51 = (uint64_t)v48 - v15;
  uint64_t v57 = *(void *)(a1 + 16);
  if (!v57) {
    return MEMORY[0x1E4FBC860];
  }
  v48[1] = v3;
  unint64_t v50 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v55 = a1 + v50;
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v59 = a2 + 56;
  uint64_t v60 = v16;
  uint64_t v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v54 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v48[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  unint64_t v18 = MEMORY[0x1E4FBC860];
  int64_t v53 = v8;
  do
  {
    unint64_t v61 = v18;
    uint64_t v19 = v55 + v60 * v17;
    uint64_t v20 = v9;
    uint64_t v21 = sub_1D5459828();
    uint64_t v23 = v22;
    uint64_t v24 = a2;
    if (!*(void *)(a2 + 16)) {
      goto LABEL_22;
    }
    uint64_t v25 = v21;
    sub_1D545A0E8();
    sub_1D5459C08();
    uint64_t v26 = sub_1D545A108();
    uint64_t v27 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v28 = v26 & ~v27;
    if (((*(void *)(v59 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
      goto LABEL_22;
    }
    uint64_t v29 = *(void *)(v24 + 48);
    unint64_t v30 = (void *)(v29 + 16 * v28);
    BOOL v31 = *v30 == v25 && v30[1] == v23;
    if (!v31 && (sub_1D545A078() & 1) == 0)
    {
      unint64_t v38 = v28 + 1;
      uint64_t v39 = ~v27;
      for (unint64_t i = v38 & ~v27; ((*(void *)(v59 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v39)
      {
        int64_t v41 = (void *)(v29 + 16 * i);
        BOOL v42 = *v41 == v25 && v41[1] == v23;
        if (v42 || (sub_1D545A078() & 1) != 0) {
          goto LABEL_12;
        }
      }
LABEL_22:
      swift_bridgeObjectRelease();
      uint64_t v43 = v56;
      sub_1D4A74768(v19, v56);
      sub_1D4A74B40(v43);
      uint64_t v9 = v20;
      goto LABEL_23;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v32 = v56;
    sub_1D4A74768(v19, v56);
    uint64_t v9 = v20;
    uint64_t v33 = sub_1D5459828();
    char v35 = sub_1D4A72D58(v33, v34, v49);
    swift_bridgeObjectRelease();
    sub_1D4A74B40(v32);
    if ((v35 & 1) == 0)
    {
      uint64_t v36 = v19;
      uint64_t v37 = (uint64_t)v53;
      sub_1D4A74768(v36, (uint64_t)v53);
      (*v52)(v37, 0, 1, v20);
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v37 = (uint64_t)v53;
    (*v52)((uint64_t)v53, 1, 1, v9);
LABEL_24:
    a2 = v24;
    unint64_t v18 = v61;
    if ((*v54)(v37, 1, v9) == 1)
    {
      sub_1D4A51D64(v37, &qword_1EBD99828);
    }
    else
    {
      uint64_t v44 = v51;
      sub_1D4A5FFB4(v37, v51);
      sub_1D4A5FFB4(v44, v58);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_1D4A6552C(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v46 = *(void *)(v18 + 16);
      unint64_t v45 = *(void *)(v18 + 24);
      if (v46 >= v45 >> 1) {
        unint64_t v18 = sub_1D4A6552C(v45 > 1, v46 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v46 + 1;
      sub_1D4A5FFB4(v58, v18 + v50 + v46 * v60);
    }
    ++v17;
  }
  while (v17 != v57);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1D4A7AF68(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1D5459D48();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1D4A77C14(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

void sub_1D4A7B000(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70F9F8);
  MEMORY[0x1F4188790](v3 - 8);
  id v65 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1D5459A28();
  uint64_t v63 = *(void *)(v68 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v68);
  id v66 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v61 = (char *)&v57 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA70FAA0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D54598F8();
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  id v67 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v62 = (char *)&v57 - v14;
  id v15 = objc_msgSend(a1, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v15) {
    goto LABEL_50;
  }
  uint64_t v16 = v15;
  id v17 = objc_msgSend(v15, sel_wifiInfo);

  if (v17)
  {
    id v1 = objc_msgSend(self, sel_wifiNetworkInfoFromProto_, v17);
  }
  else
  {
    id v1 = 0;
  }
  id v18 = objc_msgSend(a1, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v18) {
    goto LABEL_51;
  }
  uint64_t v19 = v18;
  id v20 = objc_msgSend(v18, sel_networkInfos);

  if (!v20 || (v70 = 0, sub_1D4A51CAC(0, &qword_1EA70FAB0), sub_1D5459C58(), v20, (unint64_t v21 = v70) == 0))
  {
    unint64_t v69 = MEMORY[0x1E4FBC860];
    goto LABEL_27;
  }
  uint64_t v58 = a1;
  if (v70 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1D545A008();
    id v59 = v1;
    if (v22) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v22 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    id v59 = v1;
    if (v22)
    {
LABEL_10:
      if (v22 < 1)
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:

        __break(1u);
        goto LABEL_52;
      }
      uint64_t v23 = 0;
      unint64_t v24 = v21 & 0xC000000000000001;
      uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
      uint64_t v26 = (void (**)(char *, char *, uint64_t))(v64 + 32);
      unint64_t v69 = MEMORY[0x1E4FBC860];
      unint64_t v60 = v21;
      do
      {
        if (v24) {
          id v27 = (id)MEMORY[0x1D944FAD0](v23, v21);
        }
        else {
          id v27 = *(id *)(v21 + 8 * v23 + 32);
        }
        unint64_t v28 = v27;
        sub_1D4A606BC(v27, (uint64_t)v10);

        if ((*v25)(v10, 1, v11) == 1)
        {
          sub_1D4A51D64((uint64_t)v10, &qword_1EA70FAA0);
        }
        else
        {
          unint64_t v29 = v24;
          uint64_t v30 = v11;
          uint64_t v31 = v22;
          uint64_t v32 = *v26;
          uint64_t v33 = v62;
          (*v26)(v62, v10, v30);
          v32(v67, v33, v30);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v69 = sub_1D4A65A30(0, *(void *)(v69 + 16) + 1, 1, v69);
          }
          unint64_t v35 = *(void *)(v69 + 16);
          unint64_t v34 = *(void *)(v69 + 24);
          if (v35 >= v34 >> 1) {
            unint64_t v69 = sub_1D4A65A30(v34 > 1, v35 + 1, 1, v69);
          }
          unint64_t v36 = v69;
          *(void *)(v69 + 16) = v35 + 1;
          v32((char *)(v36+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v35), v67, v30);
          uint64_t v22 = v31;
          uint64_t v11 = v30;
          unint64_t v24 = v29;
          unint64_t v21 = v60;
        }
        ++v23;
      }
      while (v22 != v23);
      goto LABEL_26;
    }
  }
  unint64_t v69 = MEMORY[0x1E4FBC860];
LABEL_26:
  swift_bridgeObjectRelease_n();
  a1 = v58;
  id v1 = v59;
LABEL_27:
  id v37 = objc_msgSend(a1, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v37)
  {
LABEL_52:
    swift_bridgeObjectRelease();

    __break(1u);
    return;
  }
  unint64_t v38 = v37;
  id v39 = objc_msgSend(v37, sel_networkServiceInfos);

  if (v39)
  {
    unint64_t v70 = 0;
    sub_1D4A51CAC(0, &qword_1EA70FAA8);
    sub_1D5459C58();

    unint64_t v40 = v70;
    if (v70)
    {
      id v59 = v1;
      if (v70 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_1D545A008();
        uint64_t v42 = (uint64_t)v65;
        if (v41)
        {
LABEL_32:
          if (v41 >= 1)
          {
            uint64_t v43 = 0;
            unint64_t v44 = v40 & 0xC000000000000001;
            unint64_t v45 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
            unint64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v63 + 32);
            unint64_t v47 = MEMORY[0x1E4FBC860];
            id v67 = (char *)v40;
            int v48 = v61;
            do
            {
              if (v44) {
                id v49 = (id)MEMORY[0x1D944FAD0](v43, v40);
              }
              else {
                id v49 = *(id *)(v40 + 8 * v43 + 32);
              }
              unint64_t v50 = v49;
              sub_1D4A60DB8(v49, v42);

              uint64_t v51 = v68;
              if ((*v45)(v42, 1, v68) == 1)
              {
                sub_1D4A51D64(v42, &qword_1EA70F9F8);
              }
              else
              {
                uint64_t v52 = v41;
                unint64_t v53 = v44;
                uint64_t v54 = *v46;
                (*v46)(v48, v42, v51);
                v54(v66, (uint64_t)v48, v51);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v47 = sub_1D4A65A64(0, *(void *)(v47 + 16) + 1, 1, v47);
                }
                unint64_t v56 = *(void *)(v47 + 16);
                unint64_t v55 = *(void *)(v47 + 24);
                if (v56 >= v55 >> 1) {
                  unint64_t v47 = sub_1D4A65A64(v55 > 1, v56 + 1, 1, v47);
                }
                *(void *)(v47 + 16) = v56 + 1;
                v54((char *)(v47+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v56), (uint64_t)v66, v68);
                uint64_t v42 = (uint64_t)v65;
                unint64_t v44 = v53;
                uint64_t v41 = v52;
                unint64_t v40 = (unint64_t)v67;
              }
              ++v43;
            }
            while (v41 != v43);
            goto LABEL_47;
          }
          goto LABEL_49;
        }
      }
      else
      {
        uint64_t v41 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        uint64_t v42 = (uint64_t)v65;
        if (v41) {
          goto LABEL_32;
        }
      }
LABEL_47:
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1D4A7B7AC(void *a1, uint64_t a2)
{
  id v88 = a1;
  uint64_t v3 = sub_1D5459878();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v81 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v75 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD995F8);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v75 - v13;
  uint64_t v15 = *(void *)(a2 + 64);
  uint64_t v82 = a2 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  unint64_t v19 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v85 = v4;
  unint64_t v86 = (void (**)(uint64_t, char *, uint64_t))(v4 + 16);
  unint64_t v91 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v89 = (void (**)(char *, uint64_t))(v4 + 8);
  unint64_t v76 = v19 - 1;
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  int64_t v83 = v19;
  uint64_t v84 = a2;
  unint64_t v77 = v19 - 5;
  uint64_t v78 = a2 + 104;
  uint64_t v80 = (void *)MEMORY[0x1E4FBC868];
  unint64_t v87 = v8;
  uint64_t v92 = v14;
  id v90 = v12;
  while (1)
  {
    if (v18)
    {
      unint64_t v21 = __clz(__rbit64(v18));
      uint64_t v22 = (v18 - 1) & v18;
      unint64_t v23 = v21 | (v20 << 6);
      goto LABEL_9;
    }
    int64_t v32 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v32 >= v83)
    {
      unint64_t v34 = v20;
    }
    else
    {
      unint64_t v33 = *(void *)(v82 + 8 * v32);
      if (v33) {
        goto LABEL_13;
      }
      unint64_t v34 = v20 + 1;
      if ((uint64_t)(v20 + 2) < v83)
      {
        unint64_t v33 = *(void *)(v82 + 8 * (v20 + 2));
        if (v33)
        {
          int64_t v32 = v20 + 2;
          goto LABEL_13;
        }
        unint64_t v34 = v20 + 2;
        if ((uint64_t)(v20 + 3) < v83)
        {
          unint64_t v33 = *(void *)(v82 + 8 * (v20 + 3));
          if (v33)
          {
            int64_t v32 = v20 + 3;
LABEL_13:
            uint64_t v22 = (v33 - 1) & v33;
            unint64_t v23 = __clz(__rbit64(v33)) + (v32 << 6);
            unint64_t v20 = v32;
LABEL_9:
            uint64_t v24 = v84;
            (*(void (**)(char *, unint64_t, uint64_t))(v85 + 16))(v12, *(void *)(v84 + 48) + *(void *)(v85 + 72) * v23, v3);
            uint64_t v25 = (uint64_t *)(*(void *)(v24 + 56) + 24 * v23);
            uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD995F0);
            id v27 = &v12[*(int *)(v26 + 48)];
            uint64_t v28 = *v25;
            uint64_t v29 = v25[1];
            uint64_t v30 = (void *)v25[2];
            *(void *)id v27 = v28;
            *((void *)v27 + 1) = v29;
            *((void *)v27 + 2) = v30;
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 0, 1, v26);
            id v31 = v30;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_16;
          }
          int64_t v32 = v20 + 4;
          unint64_t v34 = v20 + 3;
          if ((uint64_t)(v20 + 4) < v83)
          {
            unint64_t v33 = *(void *)(v82 + 8 * v32);
            if (v33) {
              goto LABEL_13;
            }
            while (v77 != v20)
            {
              unint64_t v33 = *(void *)(v78 + 8 * v20++);
              if (v33)
              {
                int64_t v32 = v20 + 4;
                goto LABEL_13;
              }
            }
            unint64_t v34 = v76;
          }
        }
      }
    }
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD995F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v12, 1, 1, v35);
    uint64_t v22 = 0;
    unint64_t v20 = v34;
LABEL_16:
    sub_1D4A7C444((uint64_t)v12, (uint64_t)v14, &qword_1EBD995F8);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD995F0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v14, 1, v36) == 1)
    {
      swift_release();
      return (uint64_t)v80;
    }
    unint64_t v93 = v22;
    unint64_t v94 = v20;
    id v37 = &v14[*(int *)(v36 + 48)];
    uint64_t v39 = *(void *)v37;
    uint64_t v38 = *((void *)v37 + 1);
    unint64_t v40 = (void *)*((void *)v37 + 2);
    (*v91)(v8, v14, v3);
    if (!v40) {
      goto LABEL_30;
    }
    id v41 = v40;
    id v42 = objc_msgSend(v41, sel_SSID);
    if (v42)
    {
      uint64_t v43 = v42;
      uint64_t v44 = sub_1D5459BE8();
      uint64_t v46 = v45;
    }
    else
    {
      uint64_t v44 = 0;
      uint64_t v46 = 0;
    }
    uint64_t v47 = v3;
    id v48 = objc_msgSend(v88, sel_SSID);
    if (!v48)
    {
      if (!v46) {
        goto LABEL_28;
      }
LABEL_34:

      swift_bridgeObjectRelease();
      uint64_t v3 = v47;
      uint64_t v8 = v87;
      goto LABEL_39;
    }
    id v49 = v48;
    uint64_t v50 = sub_1D5459BE8();
    uint64_t v52 = v51;

    if (v46)
    {
      if (!v52) {
        goto LABEL_34;
      }
      if (v44 == v50 && v46 == v52)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_28:

        uint64_t v3 = v47;
        uint64_t v8 = v87;
        uint64_t v14 = v92;
LABEL_5:
        (*v89)(v8, v3);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v90;
        goto LABEL_6;
      }
      char v53 = sub_1D545A078();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v3 = v47;
      uint64_t v8 = v87;
      uint64_t v14 = v92;
      if (v53) {
        goto LABEL_5;
      }
LABEL_30:
      id v41 = v40;
      goto LABEL_39;
    }

    uint64_t v3 = v47;
    uint64_t v8 = v87;
    uint64_t v14 = v92;
    if (!v52) {
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
LABEL_39:
    uint64_t v54 = *v86;
    uint64_t v55 = (uint64_t)v81;
    (*v86)((uint64_t)v81, v8, v3);
    id v79 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v56 = v80;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v95 = v56;
    unint64_t v59 = sub_1D4A65B98(v55);
    uint64_t v60 = v56[2];
    BOOL v61 = (v58 & 1) == 0;
    uint64_t v62 = v60 + v61;
    if (__OFADD__(v60, v61)) {
      goto LABEL_58;
    }
    char v63 = v58;
    if (v56[3] >= v62)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1D4A76A60();
      }
    }
    else
    {
      sub_1D4A7555C(v62, isUniquelyReferenced_nonNull_native);
      unint64_t v64 = sub_1D4A65B98((uint64_t)v81);
      if ((v63 & 1) != (v65 & 1)) {
        goto LABEL_60;
      }
      unint64_t v59 = v64;
    }
    id v66 = v95;
    uint64_t v80 = v95;
    if (v63)
    {
      id v67 = (void *)(v95[7] + 24 * v59);
      uint64_t v68 = (void *)v67[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      void *v67 = v39;
      v67[1] = v38;
      v67[2] = v40;
    }
    else
    {
      v95[(v59 >> 6) + 8] |= 1 << v59;
      v54(v66[6] + *(void *)(v85 + 72) * v59, v81, v3);
      unint64_t v69 = (void *)(v66[7] + 24 * v59);
      void *v69 = v39;
      v69[1] = v38;
      v69[2] = v40;
      uint64_t v70 = v66[2];
      BOOL v71 = __OFADD__(v70, 1);
      uint64_t v72 = v70 + 1;
      if (v71) {
        goto LABEL_59;
      }
      v66[2] = v72;
    }
    swift_bridgeObjectRelease();
    uint64_t v73 = *v89;
    (*v89)(v81, v3);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v73(v8, v3);
    uint64_t v12 = v90;
    uint64_t v14 = v92;
LABEL_6:
    unint64_t v18 = v93;
    unint64_t v20 = v94;
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  uint64_t result = sub_1D545A0A8();
  __break(1u);
  return result;
}

uint64_t sub_1D4A7BF60(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1D5459A28();
  uint64_t v53 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = a3;
  id v10 = objc_msgSend(a1, sel_networkGatewayIPAddress);
  if (!v10) {
    goto LABEL_9;
  }
  uint64_t v11 = v10;
  uint64_t v54 = sub_1D5459BE8();
  uint64_t v13 = v12;

  id v14 = objc_msgSend(a1, sel_networkGatewayMACAddress);
  if (!v14)
  {
    swift_bridgeObjectRelease();
LABEL_9:

    return 0;
  }
  uint64_t v15 = v14;
  uint64_t v55 = v13;
  uint64_t v50 = sub_1D5459BE8();
  uint64_t v17 = v16;

  if (!a3) {
    goto LABEL_16;
  }
  id v18 = v9;
  id v19 = objc_msgSend(v18, sel_networkGatewayIPAddress);
  if (!v19) {
    goto LABEL_15;
  }
  unint64_t v20 = v19;
  uint64_t v21 = sub_1D5459BE8();
  uint64_t v23 = v22;

  if (v21 == v54 && v23 == v55)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v24 = sub_1D545A078();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
LABEL_15:

      goto LABEL_16;
    }
  }
  id v25 = objc_msgSend(v18, sel_networkGatewayMACAddress);
  if (!v25) {
    goto LABEL_15;
  }
  uint64_t v26 = v25;
  uint64_t v27 = sub_1D5459BE8();
  uint64_t v29 = v28;

  if (v27 == v50 && v29 == v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

LABEL_37:
    return 1;
  }
  char v45 = sub_1D545A078();
  swift_bridgeObjectRelease();

  if (v45)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
LABEL_16:
  uint64_t v30 = *(void *)(a2 + 16);
  if (!v30)
  {
    swift_bridgeObjectRelease();

LABEL_32:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v49 = v17;
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  v53 += 16;
  uint64_t v31 = a2 + ((*(unsigned __int8 *)(v53 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 64));
  uint64_t v32 = a2;
  unint64_t v33 = (void (**)(char *, uint64_t))(v53 - 8);
  uint64_t v51 = *(void *)(v53 + 56);
  id v47 = v9;
  uint64_t v48 = v32;
  swift_bridgeObjectRetain();
  while (1)
  {
    v52(v8, v31, v6);
    uint64_t v34 = sub_1D54599D8();
    if (v35)
    {
      uint64_t v36 = v34;
      uint64_t v37 = v35;
      uint64_t v58 = v34;
      uint64_t v59 = v35;
      uint64_t v56 = v54;
      uint64_t v57 = v55;
      sub_1D4A66EF0();
      if (sub_1D5459E68())
      {
        uint64_t v58 = v36;
        uint64_t v59 = v37;
        uint64_t v56 = v50;
        uint64_t v57 = v49;
        char v38 = sub_1D5459E68();
        swift_bridgeObjectRelease();
        if (v38)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*v33)(v8, v6);
          goto LABEL_34;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v39 = sub_1D54599E8();
    if (!v40)
    {
      (*v33)(v8, v6);
      goto LABEL_19;
    }
    uint64_t v41 = v39;
    uint64_t v42 = v40;
    uint64_t v58 = v39;
    uint64_t v59 = v40;
    uint64_t v56 = v54;
    uint64_t v57 = v55;
    sub_1D4A66EF0();
    if ((sub_1D5459E68() & 1) == 0)
    {
      (*v33)(v8, v6);
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    uint64_t v58 = v41;
    uint64_t v59 = v42;
    uint64_t v56 = v50;
    uint64_t v57 = v49;
    char v43 = sub_1D5459E68();
    (*v33)(v8, v6);
    swift_bridgeObjectRelease();
    if (v43) {
      break;
    }
LABEL_19:
    v31 += v51;
    if (!--v30)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_34:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1D4A7C444(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void destroy for NetworkMismatchDetector.AccessoryNetworkInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s19HomeKitDaemonLegacy23NetworkMismatchDetectorC20AccessoryNetworkInfoVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for NetworkMismatchDetector.AccessoryNetworkInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  id v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for NetworkMismatchDetector.AccessoryNetworkInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for NetworkMismatchDetector.AccessoryNetworkInfo()
{
  return &type metadata for NetworkMismatchDetector.AccessoryNetworkInfo;
}

uint64_t *sub_1D4A7C610(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D5459878();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    id v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1D4A7C710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5459878();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4A7C7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5459878();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  id v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D4A7C864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5459878();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  id v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D4A7C928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5459878();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1D4A7C9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5459878();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  id v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D4A7CA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D4A7CA94);
}

uint64_t sub_1D4A7CA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5459878();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1D4A7CB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D4A7CB6C);
}

uint64_t sub_1D4A7CB6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D5459878();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + _Block_object_dispose(&STACK[0x368], 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D4A7CC2C()
{
  uint64_t result = sub_1D5459878();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1D4A7CCC4(void *result)
{
  *uint64_t result = ++qword_1EA71FF60;
  return result;
}

uint64_t sub_1D4A7CCE0(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  uint64_t v34 = *MEMORY[0x1E4F14068];
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = v34;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1D4A7CF3C(mach_port_t a1, unsigned int a2, long long *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  uint64_t v13 = *MEMORY[0x1E4F14068];
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_1D4A7D0CC(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  uint64_t v22 = *MEMORY[0x1E4F14068];
  *(_DWORD *)uint64_t v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1D4A7D2BC(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_1D4A7D438(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F2C91B30
                + ((-35 * (dword_1EA710770 ^ 0xD8 ^ qword_1EA70FB08)) ^ byte_1D54D30A0[byte_1D54CE550[(-35 * (dword_1EA710770 ^ 0xD8 ^ qword_1EA70FB08))] ^ 0x3B])
                + 37);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = *(&off_1F2C91B30
       + (*((unsigned char *)off_1F2C91FA8
                           + (*((unsigned __int8 *)off_1F2C91D80
                              + (-35 * (v2 ^ qword_1EA70FB08 ^ 0xD8))
                              - 4) ^ 0xD6u)) ^ (-35 * (v2 ^ qword_1EA70FB08 ^ 0xD8)))
       - 11);
  uint64_t v4 = (*v3 ^ v2) - (void)&v6;
  *(void *)(v1 - 4) = 1226760413 * v4 + 0x6CBF210706C72F78;
  void *v3 = 1226760413 * (v4 ^ 0x5B705F9A26A579D8);
  unsigned int v8 = 724 - 1759421093 * ((&v7 + 137599165 - 2 * (&v7 & 0x83398BD)) ^ 0xBB4E28E9);
  uint64_t v7 = a1;
  LOBYTE(v3) = -35 * ((*(_DWORD *)v3 - *(_DWORD *)(v1 - 4)) ^ 0xD8);
  (*(void (**)(uint64_t *))((char *)*(&off_1F2C91B30
                                              + ((-35
                                                                               * ((qword_1EA70FB08 + dword_1EA710770) ^ 0xD8)) ^ byte_1D54D30A0[byte_1D54CE550[(-35 * ((qword_1EA70FB08 + dword_1EA710770) ^ 0xD8))] ^ 0x3B])
                                              + 43)
                                    + 8
                                    * (*((unsigned char *)off_1F2C91D28
                                                                      + (*((unsigned __int8 *)off_1F2C91F90
                                                                         + v3
                                                                         - 12) ^ 0x3Bu)) ^ v3)
                                    + 17196))(&v7);
  return v9;
}

uint64_t sub_1D4A7D61C(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F2C91DA8 + (*((unsigned char *)off_1F2C91CB0 + a2) ^ a1)
                                            - 4) ^ a2;
}

uint64_t sub_1D4A7D648(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91D28 + (*((unsigned __int8 *)off_1F2C91F90 + a1 - 12) ^ 0x8Cu)) ^ a1;
}

uint64_t sub_1D4A7D674(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F2C91C90
         + (*((unsigned char *)off_1F2C91DC8 + a2 - 12) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_1D4A7D6A0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91D00 + (*((unsigned __int8 *)off_1F2C91B68 + a1) ^ 0x8Bu) - 8) ^ a1;
}

uint64_t sub_1D4A7D6D0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91FA8 + (*((unsigned __int8 *)off_1F2C91D80 + a1 - 4) ^ 0xD9u)) ^ a1;
}

uint64_t sub_1D4A7D6FC(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91D28 + (*((unsigned __int8 *)off_1F2C91F90 + a1 - 12) ^ 0x3Bu)) ^ a1;
}

uint64_t sub_1D4A7D728(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91D00 + (*((unsigned __int8 *)off_1F2C91B68 + a1) ^ 0xABu) - 8) ^ a1;
}

uint64_t sub_1D4A7D758(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t *)*(&off_1F2C91B30
                  + ((-35 * ((qword_1EA70FB08 - dword_1EA710768) ^ 0xD8)) ^ byte_1D54C7F60[byte_1D54D2FA0[(-35 * ((qword_1EA70FB08 - dword_1EA710768) ^ 0xD8))] ^ 0x92])
                  - 104);
  unsigned __int8 v2 = -35 * ((qword_1EA70FB08 - *v1) ^ 0xD8);
  uint64_t v3 = *(&off_1F2C91B30
       + (*((unsigned char *)off_1F2C91D28
                                         + (*((unsigned __int8 *)off_1F2C91F90 + v2 - 12) ^ 0x8Cu)) ^ v2)
       + 54);
  unint64_t v4 = (unint64_t)&v6[*v1 + *v3];
  uint64_t *v1 = (1226760413 * v4) ^ 0x5B705F9A26A579D8;
  void *v3 = 1226760413 * (v4 ^ 0x5B705F9A26A579D8);
  uint64_t v7 = a1;
  unsigned int v8 = (3804331 * ((&v7 & 0xB40B85C6 | ~(&v7 | 0xB40B85C6)) ^ 0x35215FCF)) ^ 0x62F;
  LOBYTE(v3) = -35 * ((*(_DWORD *)v3 + *(_DWORD *)v1) ^ 0xD8);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F2C91B30
                                                        + ((-35
                                                                                         * (dword_1EA710768 ^ 0xD8 ^ qword_1EA70FB08)) ^ byte_1D54C8060[byte_1D54D31A0[(-35 * (dword_1EA710768 ^ 0xD8 ^ qword_1EA70FB08))] ^ 0xD6])
                                                        + 51)
                                              + 8
                                              * (*((unsigned char *)off_1F2C91D00
                                                                                + (*((unsigned __int8 *)off_1F2C91B68
                                                                                   + v3) ^ 0x68u)
                                                                                - 8) ^ v3)
                                              + 16612))(&v7);
}

uint64_t sub_1D4A7D958(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F2C92068
         + (*((unsigned char *)off_1F2C91D50 + a2 - 12) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_1D4A7D984(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91DA8 + (*((unsigned __int8 *)off_1F2C91CB0 + a1) ^ 0xF1u) - 4) ^ a1;
}

uint64_t sub_1D4A7D9B4(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F2C91FA8 + (*((unsigned char *)off_1F2C91D80 + a2 - 4) ^ a1)) ^ a2;
}

uint64_t sub_1D4A7D9E0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91C90
         + (*((unsigned __int8 *)off_1F2C91DC8 + a1 - 12) ^ 0xA9u)
         - 4) ^ a1;
}

uint64_t sub_1D4A7DA10(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91FA8 + (*((unsigned __int8 *)off_1F2C91D80 + a1 - 4) ^ 0xCAu)) ^ a1;
}

uint64_t sub_1D4A7DA3C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91D00 + (*((unsigned __int8 *)off_1F2C91B68 + a1) ^ 0x68u) - 8) ^ a1;
}

uint64_t sub_1D4A7DA6C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91DA8 + (*((unsigned __int8 *)off_1F2C91CB0 + a1) ^ 0x92u) - 4) ^ a1;
}

uint64_t sub_1D4A7DA9C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91D00 + (*((unsigned __int8 *)off_1F2C91B68 + a1) ^ 0x50u) - 8) ^ a1;
}

uint64_t sub_1D4A7DACC(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (unint64_t *)*(&off_1F2C91B30
                           + ((-35 * ((qword_1EA70FB08 + dword_1EA70FB20) ^ 0xD8)) ^ byte_1D54D32A0[byte_1D54CE650[(-35 * ((qword_1EA70FB08 + dword_1EA70FB20) ^ 0xD8))] ^ 0x27])
                           - 15);
  unsigned __int8 v2 = -35 * ((qword_1EA70FB08 - *v1) ^ 0xD8);
  uint64_t v3 = (unint64_t *)*(&off_1F2C91B30
                           + (*((unsigned char *)off_1F2C91FA8
                                                             + (*((unsigned __int8 *)off_1F2C91D80 + v2 - 4) ^ 0xCAu)) ^ v2)
                           + 50);
  unint64_t v4 = 1226760413 * ((*v3 - *v1) ^ (unint64_t)&v6 ^ 0x5B705F9A26A579D8);
  unint64_t *v1 = v4;
  unint64_t *v3 = v4;
  uint64_t v7 = a1;
  unsigned int v8 = 1755732067 * (((&v7 | 0xF9EE60DF) + (~&v7 | 0x6119F20)) ^ 0x2728DD05) + 645;
  LOBYTE(v3) = -35 * ((*(_DWORD *)v3 + *(_DWORD *)v1) ^ 0xD8);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F2C91B30
                                                        + ((-35
                                                                                         * ((qword_1EA70FB08
                                                                                           + dword_1EA70FB20) ^ 0xD8)) ^ byte_1D54D30A0[byte_1D54CE550[(-35 * ((qword_1EA70FB08 + dword_1EA70FB20) ^ 0xD8))] ^ 0x8C])
                                                        + 116)
                                              + 8
                                              * (*((unsigned char *)off_1F2C91D00
                                                                                + (*((unsigned __int8 *)off_1F2C91B68
                                                                                   + v3) ^ 0x8Bu)
                                                                                - 8) ^ v3)
                                              + 16756))(&v7);
}

uint64_t sub_1D4A7DCC0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C92068
         + (*((unsigned __int8 *)off_1F2C91D50 + a1 - 12) ^ 0x83u)
         - 4) ^ a1;
}

uint64_t sub_1D4A7DCF0(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F2C91D28
         + (*((unsigned char *)off_1F2C91F90 + a2 - 12) ^ a1)) ^ a2;
}

uint64_t sub_1D4A7DD1C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91FA8 + (*((unsigned __int8 *)off_1F2C91D80 + a1 - 4) ^ 0xD6u)) ^ a1;
}

uint64_t sub_1D4A7DD48(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F2C91D00 + (*((unsigned char *)off_1F2C91B68 + a2) ^ a1)
                                            - 8) ^ a2;
}

uint64_t sub_1D4A7DD74(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91D00 + (*((unsigned __int8 *)off_1F2C91B68 + a1) ^ 0x11u) - 8) ^ a1;
}

uint64_t sub_1D4A7DDA4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91C90
         + (*((unsigned __int8 *)off_1F2C91DC8 + a1 - 12) ^ 0x27u)
         - 4) ^ a1;
}

uint64_t sub_1D4A7DDD4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91DA8 + (*((unsigned __int8 *)off_1F2C91CB0 + a1) ^ 0x83u) - 4) ^ a1;
}

uint64_t sub_1D4A7DE04(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2C91DA8 + (*((unsigned __int8 *)off_1F2C91CB0 + a1) ^ 0x4Du) - 4) ^ a1;
}

uint64_t sub_1D4A7DE34(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((((2 * a1) | 0x340440B2) - a1 + 1711136679) ^ 0xF7F63850);
  return (*(uint64_t (**)(void))((char *)*(&off_1F2C91B30 + v1 - 1666)
                              + 8 * (((*(void *)a1 != *(void *)(a1 + 8)) * (v1 - 1761)) ^ v1)
                              - 4))();
}

uint64_t sub_1D4A7DEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, int a16)
{
  BOOL v18 = a14 > 0x4FBDA167;
  if (v18 == a6 + 769635598 < -1337827688) {
    BOOL v18 = a6 + 769635598 < a16;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17
                                                                       + 8 * ((v18 * ((v16 ^ 0x5B5) - 1769)) ^ v16)))(a1, 3103670704, 2152148850, 0x25362CBF80472F72);
}

uint64_t sub_1D4A7DF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t a17, int32x4_t a18, int8x16_t a19, int8x16_t a20,int8x16_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v38 = v34 + 40561067;
  *(_DWORD *)uint64_t v37 = 2103820122;
  (*(void (**)(uint64_t))(v36 + 8 * (v34 ^ 0x888)))(a34);
  int v39 = 2 * (v38 ^ 0x26AEA7C);
  int8x16_t v40 = (int8x16_t)vld1q_dup_f32((const float *)v37);
  v41.i64[0] = 0x8000000080000000;
  v41.i64[1] = 0x8000000080000000;
  uint64_t v42 = 257 * (v39 ^ 0xB0u);
  v43.i32[0] = *(_DWORD *)(v37 + 4);
  v43.i32[1] = *(_DWORD *)(v37 + 4 * (v42 ^ 0x200));
  v43.i32[2] = *(_DWORD *)(v37 + 12);
  int8x16_t v44 = vextq_s8(v40, v43, 0xCuLL);
  int8x16_t v45 = v43;
  v45.i32[3] = *(_DWORD *)(v37 + 16);
  int32x4_t v46 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v45, a21), vandq_s8(v44, v41)), 1uLL), a20);
  v47.i32[0] = *(_DWORD *)(v35 + 4 * (*(_DWORD *)(v37 + 4) & 1));
  v47.i32[1] = *(_DWORD *)(v35 + 4 * (*(_DWORD *)(v37 + 4 * (v42 ^ 0x200)) & 1));
  v47.i32[2] = *(_DWORD *)(v35 + 4 * (*(_DWORD *)(v37 + 12) & 1));
  v47.i32[3] = *(_DWORD *)(v35 + 4 * (v45.i8[12] & 1));
  *(int8x16_t *)uint64_t v37 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v37 + 1588), v47), a17), (int8x16_t)vaddq_s32(vsubq_s32(v46, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v46, v46), a19)), a18));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * v39))(4251303770, 4207640244, 2125651885, 40561189, a29, 50, 2289935841, 176);
}

uint64_t sub_1D4A7E0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1926 * (v5 == ((a5 + 302) ^ (v7 + 647)))) ^ (a5 - 1037))))();
}

uint64_t sub_1D4A7E114(double a1, int8x16_t a2)
{
  int v4 = STACK[0x420] - 91;
  int8x16_t v5 = (int8x16_t)vld1q_dup_f32((const float *)v2);
  v6.i64[0] = 0x8000000080000000;
  v6.i64[1] = 0x8000000080000000;
  a2.i32[0] = *(_DWORD *)(v2 + 4 * ((STACK[0x420] - 247) ^ 0x365));
  a2.i32[1] = *(_DWORD *)(v2 + 8);
  a2.i32[2] = *(_DWORD *)(v2 + 12);
  int8x16_t v7 = vextq_s8(v5, a2, 0xCuLL);
  int8x16_t v8 = a2;
  v8.i32[3] = *(_DWORD *)(v2 + 16);
  int32x4_t v9 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v8, *(int8x16_t *)&STACK[0x350]), vandq_s8(v7, v6)), 1uLL), *(int8x16_t *)&STACK[0x330]);
  v10.i32[0] = *((_DWORD *)&STACK[0x678] + (*(_DWORD *)(v2 + 4 * ((STACK[0x420] - 247) ^ 0x365)) & 1));
  v10.i32[1] = *((_DWORD *)&STACK[0x678] + (*(_DWORD *)(v2 + 8) & 1));
  v10.i32[2] = *((_DWORD *)&STACK[0x678] + (*(_DWORD *)(v2 + 12) & 1));
  v10.i32[3] = *((_DWORD *)&STACK[0x678] + (v8.i8[12] & 1));
  *(int8x16_t *)uint64_t v2 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v2 + 1588), v10), *(int8x16_t *)&STACK[0x300]), (int8x16_t)vaddq_s32(vsubq_s32(v9, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v9, v9), *(int8x16_t *)&STACK[0x320])), *(int32x4_t *)&STACK[0x310]));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t *))(v3 + 8 * v4))(4251303770, 1519013783, 869, &STACK[0x678]);
}

uint64_t sub_1D4A7E140@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, int a5@<W8>, int8x16_t a6@<Q0>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int8x16_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * ((int)a3 + a5 + 24));
  uint64_t v46 = LODWORD(STACK[0x2F8]);
  uint64_t v47 = LODWORD(STACK[0x2F4]);
  int v48 = STACK[0x2F8];
  uint64_t v49 = LODWORD(STACK[0x2FC]);
  int v50 = STACK[0x300];
  int v51 = STACK[0x2FC];
  uint64_t v52 = LODWORD(STACK[0x300]);
  int v53 = LOBYTE(STACK[0x30C]) ^ 0xDD;
  if (v53 == 2)
  {
    int8x16x4_t v73 = vld4q_s8(v36);
    uint8x16_t v63 = (uint8x16_t)veorq_s8(v73.val[1], a6);
    _Q23 = vmovl_u8(*(uint8x8_t *)v63.i8);
    _Q22 = vmovl_high_u8(v63);
    __asm
    {
      SHLL2           V24.4S, V22.8H, #0x10
      SHLL2           V25.4S, V23.8H, #0x10
    }
    uint64_t v68 = (_DWORD *)(v39 + 4 * (v40 + 283323323));
    int v69 = *(v68 - 8) ^ *(v68 - 3);
    int v70 = *(v68 - 16) ^ *(v68 - 14) ^ (v69 + ((v38 + 1053) ^ 0x423) - ((2 * v69) & 0x3EBED70E));
    HIDWORD(v71) = v70 ^ v38;
    LODWORD(v71) = v70;
    _DWORD *v68 = (v71 >> 31) + v38 - ((2 * (v71 >> 31)) & 0x3EBED70E);
    return (*(uint64_t (**)(uint64_t))(v41 + 8 * ((61 * (v44 == 283323260)) ^ 0x41Eu)))(v52);
  }
  else if (v53 == 1)
  {
    HIDWORD(a21) = STACK[0x2F4];
    LODWORD(a23) = STACK[0x300];
    int8x16x4_t v72 = vld4q_s8(v36);
    uint64_t v54 = 80 * (a2 ^ (a2 + 6));
    uint8x16_t v55 = (uint8x16_t)veorq_s8(v72.val[2], a6);
    _Q27 = vmovl_high_u8(v55);
    _Q26 = vmovl_u8(*(uint8x8_t *)v55.i8);
    __asm
    {
      SHLL2           V26.4S, V26.8H, #0x10
      SHLL2           V27.4S, V27.8H, #0x10
    }
    HIDWORD(a20) = LOBYTE(STACK[0x30C]) ^ 0xFFFFFFDD;
    return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * (int)((1307 * (a25 + 1 == v44)) ^ v54)))(a25 + v40, a1, *(void *)(v37 + 8 * ((int)v54 - 411)), *(void *)(v37 + 8 * ((int)v54 - 446)), *(void *)(v37 + 8 * ((int)v54 - 414)), v54, a25 + 1, v52, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
             a18,
             a19,
             a20,
             a21,
             __PAIR64__(v49, v46),
             a23,
             v45,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
  }
  else
  {
    LODWORD(STACK[0x2F4]) = 2 * (LODWORD(STACK[0x2F4]) ^ v42) + v42 - (v43 & (4 * (LODWORD(STACK[0x2F4]) ^ v42)));
    LODWORD(STACK[0x2F8]) = (v48 ^ v42) + (v46 ^ v42) + v42 - (v43 & (2 * ((v48 ^ v42) + (v46 ^ v42))));
    LODWORD(STACK[0x2FC]) = (v51 ^ v42) + (v49 ^ v42) + v42 - (v43 & (2 * ((v51 ^ v42) + (v49 ^ v42))));
    LODWORD(STACK[0x300]) = (v52 ^ v42) + (v50 ^ v42) + v42 - (v43 & (2 * ((v52 ^ v42) + (v50 ^ v42))));
    return v45(v52, a1, v49, v46, a2, a3, a4, v47, a7, a8, a9, a10, a11, a12);
  }
}

void sub_1D4A7E680(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 108757529 * (((a1 | 0xFA9FB8B3) - (a1 & 0xFA9FB8B3)) ^ 0x1A03DA98);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D4A7E75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v13 = *(unsigned __int8 *)(v8 + (v11 + v10 + 2));
  return (*(uint64_t (**)(uint64_t, void, void, void))(v9 + 8 * (v12 ^ (31 * (a8 != 131585752)))))(a1, (a5 + v10 + 1), (v12 + 1328), (v13 ^ (v12 - 823858)) + ((2 * v13) & 0xFFFFFFFB) + ((v12 + 339438973) & 0xEBC49377 ^ 0x7BFDF8DF));
}

uint64_t sub_1D4A7E7F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((unint64_t)(v4 - a1) < 0x20) ^ ((a4 ^ 0xAD) + 1)) & 1)
                                * ((226 * (a4 ^ 0x29C)) ^ 0x613)) ^ a4)))();
}

uint64_t sub_1D4A7E840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((a11 != ((31 * (v13 ^ 0x49D)) ^ (v11 - 375))) * ((482 * (v13 ^ 0x492)) ^ 0x3CD)) | v13)))();
}

uint64_t sub_1D4A7E890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,unsigned int a45,uint64_t a46,uint64_t a47)
{
  int v52 = v47 - 651;
  int v53 = (char *)*(&off_1F2C91B30 + v47 - 1529) - 12;
  int v54 = v53[*(unsigned __int8 *)(v48 - 0x7785963AF3444771) ^ 0x85];
  HIDWORD(v55) = v54 ^ 0x16;
  LODWORD(v55) = v54 << 24;
  int v56 = ((v55 >> 30) ^ 0x9F) << 16;
  uint64_t v57 = (char *)*(&off_1F2C91B30 + (int)(v52 & 0xE4D6187B)) - 8;
  int v58 = v57[(v52 - 8) ^ 0x76 ^ *(unsigned char *)(v48 - 0x7785963AF3444767)];
  HIDWORD(v55) = v58 ^ 8;
  LODWORD(v55) = (v58 ^ 0xFFFFFF9F) << 24;
  unsigned __int8 v59 = v55 >> 28;
  int v60 = v53[*(unsigned __int8 *)(v48 - 0x7785963AF344476DLL) ^ 0x6FLL];
  HIDWORD(v55) = v60 ^ 0x16;
  LODWORD(v55) = v60 << 24;
  BOOL v61 = (char *)*(&off_1F2C91B30 + (v52 ^ 0x3DC)) - 8;
  uint64_t v62 = (char *)*(&off_1F2C91B30 + v52 - 799) - 12;
  char v63 = v62[*(unsigned __int8 *)(v48 - 0x7785963AF3444766) ^ 0xD8];
  int v64 = (((v55 >> 30) ^ 0x68) << 16) | ((v61[*(unsigned __int8 *)(v48
                                                                                                  - 0x7785963AF344476CLL) ^ 0xDFLL] ^ 0x18) << 8);
  int v65 = v57[*(unsigned __int8 *)(v48 - 0x7785963AF3444763) ^ 0xBCLL];
  HIDWORD(v55) = v65 ^ 8;
  LODWORD(v55) = (v65 ^ 0xFFFFFF9F) << 24;
  LOBYTE(v65) = v55 >> 28;
  uint64_t v66 = v65 ^ 0x68;
  int v67 = v64 | ((v62[*(unsigned __int8 *)(v48 - 0x7785963AF344476ELL) ^ 0xAFLL] ^ 0x8C) << 24);
  int v68 = v57[*(unsigned __int8 *)(v48 - 0x7785963AF344476BLL) ^ 0x98];
  HIDWORD(v55) = v68 ^ 8;
  LODWORD(v55) = (v68 ^ 0xFFFFFF9F) << 24;
  unsigned int v69 = v67 & 0xFFFFFF00 | (v55 >> 28);
  int v70 = v56 | ((v61[*(unsigned __int8 *)(v48 - 0x7785963AF3444770) ^ 0x49] ^ 0x92) << 8) | ((v62[*v49 ^ 0xFELL] ^ 0x55555555) << 24);
  LODWORD(v57) = v57[*(unsigned __int8 *)(v48 - 0x7785963AF344476FLL) ^ 0xD0];
  HIDWORD(v55) = v57 ^ 8;
  LODWORD(v55) = (v57 ^ 0xFFFFFF9F) << 24;
  int v71 = v53[*(unsigned __int8 *)(v48 - 0x7785963AF3444765) ^ 0xB6];
  LOBYTE(v57) = (v55 >> 28) ^ 0x3C;
  HIDWORD(v55) = v71 ^ 0x16;
  LODWORD(v55) = v71 << 24;
  unsigned int v72 = v70 & 0xFFFFFF00 | v57;
  uint64_t v73 = (v55 >> 30) ^ 0x21;
  LODWORD(v53) = v53[*(unsigned __int8 *)(v48 - 0x7785963AF3444769) ^ 0xC8];
  HIDWORD(v55) = v53 ^ 0x16;
  LODWORD(v55) = v53 << 24;
  unint64_t v74 = (((v61[*(unsigned __int8 *)(v48 - 0x7785963AF3444764) ^ 0xC7] ^ 0xD9) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v63 ^ 0x5Cu) << 24) | (v73 << 16) | v66) ^ 0x75F49EF4;
  uint64_t v75 = ((unsigned __int16)((((v61[*(unsigned __int8 *)(v48 - 0x7785963AF3444764) ^ 0xC7] ^ 0xD9) << 8) | v66) ^ 0x9EF4) >> 8);
  unsigned int v76 = v59 | ((v61[*(unsigned __int8 *)(v48 - 0x7785963AF3444768) ^ 0xB7] ^ 0x39) << 8) & 0xFF00FFFF | (((v55 >> 30) ^ 0x37) << 16) | ((v62[*(unsigned __int8 *)(v48 - 0x7785963AF344476ALL) ^ 0x18] ^ 0x13) << 24);
  int v77 = v75 - ((2 * (v74 >> 8)) & 0x5E);
  uint64_t v78 = (char *)*(&off_1F2C91B30 + (v52 ^ 0x38D)) - 12;
  uint64_t v79 = (uint64_t)*(&off_1F2C91B30 + v52 - 925);
  LODWORD(v61) = *(_DWORD *)(v79 + 4 * (v63 ^ 0x43u));
  LODWORD(v66) = ((v77 + 1871712559) ^ *(_DWORD *)&v78[4 * (v75 ^ 0xF5)])
               - ((2 * ((v77 + 1871712559) ^ *(_DWORD *)&v78[4 * (v75 ^ 0xF5)])) & 0x9AFD019C);
  HIDWORD(v55) = ~v61;
  LODWORD(v55) = v61 ^ 0x25749864;
  uint64_t v80 = (char *)*(&off_1F2C91B30 + (v52 ^ 0x3D8)) - 4;
  LODWORD(v66) = (v55 >> 2) ^ *(_DWORD *)&v80[4 * (v73 ^ 0xDD)] ^ (v66 + 1300136142);
  int v81 = v66 - ((2 * v66) & 0xAF3E77C0);
  uint64_t v82 = (char *)*(&off_1F2C91B30 + v52 - 840) - 12;
  int v83 = *(_DWORD *)&v82[4 * (v65 ^ 0xD9)] ^ v72 ^ (v81 - 677430304);
  unsigned int v273 = v69;
  HIDWORD(v271) = v76;
  HIDWORD(v270) = v83 ^ v69 ^ 0x2789BBD4;
  int v84 = v76 ^ 0xE6 ^ HIDWORD(v270);
  int v85 = *(_DWORD *)(v79 + 4 * (((v84 ^ v74) >> 24) ^ 0x21));
  HIDWORD(v55) = ~v85;
  LODWORD(v55) = v85 ^ 0x25749864;
  int v86 = ((v55 >> 2) - ((2 * (v55 >> 2)) & 0xAF3E77C0) - 677430304) ^ *(_DWORD *)&v82[4
                                                                                   * ((v84 ^ v74) ^ 0xDE)];
  HIDWORD(v269) = v84 ^ v74;
  LODWORD(v271) = v83;
  LODWORD(v269) = *(_DWORD *)&v78[4 * (((unsigned __int16)(v84 ^ v74) >> 8) ^ 0x1E)] ^ *(_DWORD *)&v80[4 * (((v84 ^ v74) >> 16) ^ 0x8F)] ^ v83 ^ ((((unsigned __int16)(v84 ^ v74) >> 8) ^ 0xEB) - ((2 * (((v84 ^ v74) >> 8) ^ 0x4BA6EB)) & 0x5E) + 1871712559) ^ (v86 - ((2 * v86) & 0x9AFD019C) + 1300136142);
  int v87 = v269 ^ 0x76E748E2 ^ v83 ^ v69;
  int v272 = v74;
  int v88 = *(_DWORD *)(v79 + 4 * (((v87 ^ v74) >> 24) ^ 0xA2));
  HIDWORD(v55) = ~v88;
  LODWORD(v55) = v88 ^ 0x25749864;
  unsigned int v89 = v87 ^ v74 ^ 0xC84590C6;
  int v90 = *(_DWORD *)&v78[4 * (BYTE1(v89) ^ 0xF5)] ^ *(_DWORD *)&v80[4
                                                                 * (((v87 ^ v74) >> 16) ^ 0x6C)] ^ (BYTE1(v89) - (((v87 ^ v74) >> 7) & 0x5E) + 1871712559) ^ ((v55 >> 2) - ((2 * (v55 >> 2)) & 0x9AFD019C) + 1300136142);
  LODWORD(v26_Block_object_dispose(&STACK[0x368], 8) = v87 ^ v74;
  HIDWORD(v26_Block_object_dispose(&STACK[0x368], 8) = v87;
  HIDWORD(v267) = v269 ^ 0x76E748E2 ^ *(_DWORD *)&v82[4 * ((v87 ^ v74) ^ 0x83)] ^ (v90
                                                                                                  - ((2 * v90) & 0xAF3E77C0)
                                                                                                  - 677430304);
  LODWORD(v74) = HIDWORD(v267) ^ 0x2789BBD4 ^ v87 ^ 0x8EDEEA78;
  LODWORD(v270) = v84;
  HIDWORD(v266) = v87 ^ v84;
  LODWORD(v267) = HIDWORD(v267) ^ 0x2789BBD4 ^ v87;
  int v91 = v74 ^ v87 ^ v84;
  unsigned int v92 = v91 ^ v89;
  int v93 = *(_DWORD *)(v79 + 4 * (((v91 ^ v89) >> 24) ^ 0x67));
  HIDWORD(v55) = ~v93;
  LODWORD(v55) = v93 ^ 0x25749864;
  int v94 = (v55 >> 2) ^ *(_DWORD *)&v78[4 * (BYTE1(v92) ^ 0x97)] ^ ((BYTE1(v92) ^ 0x62)
                                                               - ((2 * ((v92 >> 8) ^ 0xD8B62)) & 0x5E)
                                                               + 1871712559);
  unsigned int v95 = (v94 - ((2 * v94) & 0xAF3E77C0) - 677430304) ^ *(_DWORD *)&v82[4 * ((v91 ^ v89) ^ 0xE1)];
  unsigned int v96 = HIDWORD(v267) ^ 0x2789BBD4 ^ *(_DWORD *)&v80[4 * (((v91 ^ v89 ^ 0x2142BA5) >> 16) ^ 0xB6)] ^ (v95 - ((2 * v95) & 0x9AFD019C) + 1300136142);
  HIDWORD(v265) = v91 ^ v89;
  LODWORD(v266) = v91;
  v91 ^= 0x5EF1BA37u;
  HIDWORD(v264) = v96 ^ v74;
  int v97 = v96 ^ v74 ^ 0x307C325C;
  LODWORD(v264) = v97 ^ v91;
  unsigned int v98 = v97 ^ v91 ^ v92;
  int v99 = *(_DWORD *)(v79 + 4 * (HIBYTE(v98) ^ 0xA4));
  HIDWORD(v55) = ~v99;
  LODWORD(v55) = v99 ^ 0x25749864;
  int v100 = ((v55 >> 2) - ((2 * (v55 >> 2)) & 0xAF3E77C0) - 677430304) ^ *(_DWORD *)&v82[4 * (v98 ^ 0x18)];
  LODWORD(v265) = v96;
  unsigned int v101 = *(_DWORD *)&v80[4 * (BYTE2(v98) ^ 0xCA)] ^ *(_DWORD *)&v78[4
                                                                  * (((unsigned __int16)(v98 ^ 0x7B5D) >> 8) ^ 0xF5)] ^ v96 ^ (((unsigned __int16)(v98 ^ 0x7B5D) >> 8) - (((v98 ^ 0xCEE37B5D) >> 7) & 0x5E) + 1871712559) ^ 0x6AA69E2 ^ (v100 - ((2 * v100) & 0x9AFD019C) + 1300136142);
  int v102 = v101 ^ (v91 - ((2 * v91) & 0xD54D3C4) + 111831522);
  int v103 = *(_DWORD *)(v79 + 4 * (((v102 ^ v98 ^ 0xCEE37B5D) >> 24) ^ 0x70));
  HIDWORD(v55) = ~v103;
  LODWORD(v55) = v103 ^ 0x25749864;
  int v104 = ((v55 >> 2) - ((2 * (v55 >> 2)) & 0x9AFD019C) + 1300136142) ^ *(_DWORD *)&v80[4
                                                                                     * (((v102 ^ v98 ^ 0xCEE37B5D ^ 0xF3443494) >> 16) ^ 0xE4)];
  unsigned int v105 = (v104 - ((2 * v104) & 0xAF3E77C0) - 677430304) ^ *(_DWORD *)&v82[4
                                                                        * ((v102 ^ v98 ^ 0x5D) ^ 0x91)];
  LODWORD(v262) = v102 ^ v98 ^ 0xCEE37B5D;
  unsigned int v106 = (v105 - ((2 * v105) & 0xDF20225E) + 1871712559) ^ *(_DWORD *)&v78[4
                                                                         * (((unsigned __int16)(v262 ^ 0xBBD4) >> 8) ^ 0xF5)];
  LODWORD(v74) = v101 ^ ((unsigned __int16)(v262 ^ 0xBBD4) >> 8) ^ (v106
                                                                                   - ((2 * v106) & 0xD54D3C4)
                                                                                   + 111831522);
  HIDWORD(v262) = v102;
  unint64_t v263 = __PAIR64__(v98, v101);
  LODWORD(v261) = v101 ^ (v97 - ((2 * v97) & 0xD54D3C4) + 111831522);
  HIDWORD(v260) = v74 ^ v261;
  int v107 = v74 ^ v261 ^ 0xE6F58988;
  int v108 = v107 ^ v102;
  int v109 = *(_DWORD *)(v79 + 4 * (((v108 ^ v262 ^ 0x1A89BBD4) >> 24) ^ 0x43));
  HIDWORD(v55) = ~v109;
  LODWORD(v55) = v109 ^ 0x25749864;
  HIDWORD(v259) = v108 ^ v262 ^ 0x1A89BBD4;
  int v110 = *(_DWORD *)&v78[4 * (((unsigned __int16)(WORD2(v259) ^ 0x7ABE) >> 8) ^ 0xF5)] ^ *(_DWORD *)&v80[4 * (((HIDWORD(v259) ^ 0x4D501F31u) >> 16) ^ 0xE2)] ^ (((unsigned __int16)(WORD2(v259) ^ 0x7ABE) >> 8) - (((HIDWORD(v259) ^ 0x299B7ABEu) >> 7) & 0x5E) + 1871712559) ^ ((v55 >> 2) - ((2 * (v55 >> 2)) & 0x9AFD019C) + 1300136142);
  HIDWORD(v261) = v74;
  int v111 = v74 ^ *(_DWORD *)&v82[4 * ((v108 ^ v262 ^ 0xD4) ^ 0xFB)] ^ (v110
                                                                                    - ((2 * v110) & 0xAF3E77C0)
                                                                                    - 677430304);
  int v112 = v111 ^ v107 ^ 0x5BF36347;
  LODWORD(v260) = v108;
  LODWORD(v25_Block_object_dispose(&STACK[0x368], 8) = v112 ^ v108;
  HIDWORD(v25_Block_object_dispose(&STACK[0x368], 8) = v111 ^ v107;
  int v113 = v112 ^ v108 ^ 0x2745D0FF;
  unsigned int v114 = v113 ^ HIDWORD(v259) ^ 0x299B7ABE ^ 0x3DCC6B2B;
  unsigned int v115 = (BYTE1(v114) + 1871712559 + (~(v114 >> 7) | 0xFFFFFFA1) + 1) ^ *(_DWORD *)&v78[4 * (BYTE1(v114) ^ 0xF5)];
  unsigned int v116 = (v115 - ((2 * v115) & 0xAF3E77C0) - 677430304) ^ *(_DWORD *)&v82[4
                                                                        * ((~(v112 ^ v108) ^ BYTE4(v259) ^ 0xBE) ^ 0x6E)];
  HIDWORD(v257) = v113 ^ HIDWORD(v259) ^ 0x299B7ABE;
  int v117 = *(_DWORD *)(v79 + 4 * (HIBYTE(HIDWORD(v257)) ^ 0x57u));
  HIDWORD(v55) = ~v117;
  LODWORD(v55) = v117 ^ 0x25749864;
  LODWORD(v259) = v111;
  LODWORD(v257) = (v55 >> 2) ^ *(_DWORD *)&v80[4 * (((HIDWORD(v257) ^ 0x516EF336u) >> 16) ^ 0x8B)] ^ v111 ^ (v116 - ((2 * v116) & 0x9AFD019C) + 1300136142);
  HIDWORD(v256) = v257 ^ 0x930000ED ^ v112;
  LODWORD(v256) = HIDWORD(v256) ^ 0x8D06EA22 ^ v113;
  unsigned int v118 = v256 ^ v114;
  int v119 = v256 ^ v114 ^ 0x9289BB39;
  int v120 = v256 ^ v114 ^ 0x53DEAA41;
  int v121 = *(_DWORD *)&v82[4 * ((v256 ^ v114) ^ 4)];
  LODWORD(v74) = *(_DWORD *)&v78[4 * (BYTE1(v120) ^ 0xF5)];
  int v122 = *(_DWORD *)(v79 + 4 * (HIBYTE(v118) ^ 0x39));
  HIDWORD(v55) = ~v122;
  LODWORD(v55) = v122 ^ 0x25749864;
  unsigned int v123 = *(_DWORD *)&v80[4 * (BYTE2(v119) ^ 0x7E)] ^ v257 ^ 0x930000ED ^ BYTE1(v120) ^ 0x98AF5C70 ^ ((v74 ^ v121 ^ (v55 >> 2) ^ 0xB80F2ACF) - 2 * ((v74 ^ v121 ^ (v55 >> 2) ^ 0xB80F2ACF) & 0x4D7E80EE ^ (v74 ^ v121 ^ (v55 >> 2)) & 0x20) + 1300136142);
  unsigned int v124 = v123 ^ (v113 - 1733338000 + (~(2 * v113) | 0xCEA1471F) + 1);
  unsigned int v125 = v124 ^ v120;
  LODWORD(v79) = *(_DWORD *)(v79 + 4 * (((v124 ^ v120) >> 24) ^ 0x44));
  HIDWORD(v55) = ~v79;
  LODWORD(v55) = v79 ^ 0x25749864;
  LODWORD(v75) = *(_DWORD *)&v78[4 * (BYTE1(v125) ^ 0xFD)] ^ *(_DWORD *)&v82[4 * ((v124 ^ v120) ^ 0xC4)] ^ ((BYTE1(v125) ^ 8) - 2 * (((v125 >> 8) ^ 0x2E3F08) & 0x3F ^ (v125 >> 8) & 0x10) + 1871712559) ^ ((v55 >> 2) - ((2 * (v55 >> 2)) & 0xAF3E77C0) - 677430304);
  HIDWORD(v254) = v124 ^ v120 ^ 0xB8432478;
  LODWORD(v75) = (v75 - ((2 * v75) & 0x9AFD019C) + 1300136142) ^ *(_DWORD *)&v80[4
                                                                               * (((v124 ^ v120) >> 16) ^ 0x16)];
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = v75 - ((2 * v75) & 0x315EB8E0);
  LODWORD(v80) = v124 ^ 0x626A2240;
  uint64_t v126 = (char *)*(&off_1F2C91B30 + v52 - 854) - 12;
  int v127 = v126[*(unsigned __int8 *)(v51 - 109) ^ 0xA5];
  HIDWORD(v55) = v127 ^ 0x2E;
  LODWORD(v55) = (v127 ^ 0x80) << 24;
  unint64_t v251 = v126;
  id v253 = (char *)*(&off_1F2C91B30 + (v52 ^ 0x3CD)) - 4;
  uint64_t v250 = (uint64_t)*(&off_1F2C91B30 + v52 - 862);
  uint64_t v252 = (uint64_t)*(&off_1F2C91B30 + v52 - 974);
  int v128 = (((((v55 >> 30) ^ 0xDB) >> 2) | (((v55 >> 30) ^ 0xDB) << 6)) | ((*(unsigned __int8 *)(v252 + (*(unsigned __int8 *)(v51 - 111) ^ 0x7ALL)) ^ 0xCA) << 16) | ((*(unsigned __int8 *)(v250 + (*(unsigned __int8 *)(v51 - 112) ^ 0x78)) ^ 0x37) << 24) | (((v253[*(unsigned __int8 *)(v51 - 110) ^ 0x5DLL] + (*(unsigned char *)(v51 - 110) ^ 0x52) + 75) ^ 0x5D) << 8)) ^ 0x644C427B;
  unsigned int v129 = ((v126[*(unsigned __int8 *)(v51 - 101) ^ 0x60] ^ 0x65) & 0xFFFF00FF | ((*(unsigned __int8 *)(v252 + (*(unsigned __int8 *)(v51 - 103) ^ 5)) ^ 0x9B) << 16) | (((v253[*(unsigned __int8 *)(v51 - 102) ^ 4] + (*(unsigned char *)(v51 - 102) ^ 0xB) + 75) ^ 0x33) << 8) | ((*(unsigned __int8 *)(v250 + (*(unsigned __int8 *)(v51 - 104) ^ 0x1CLL)) ^ 0xC2) << 24)) ^ 0x959E548F;
  unsigned int v130 = ((v126[*(unsigned __int8 *)(v51 - 105) ^ 0x28] ^ 0xA4) & 0xFFFF00FF | ((((*(unsigned char *)(v51 - 106) ^ 0xAC) + v253[*(unsigned __int8 *)(v51 - 106) ^ 0xA3] + 75) ^ 0xF6) << 8) | ((*(unsigned __int8 *)(v250 + (*(unsigned __int8 *)(v51 - 108) ^ 0xB2)) ^ 0x35) << 24) | ((*(unsigned __int8 *)(v252 + (*(unsigned __int8 *)(v51 - 107) ^ 0x27)) ^ 0xFF) << 16)) ^ 0xB47F1174;
  LODWORD(v74) = ((v126[*(unsigned __int8 *)(v51 - 97) ^ 0x7BLL] ^ 0xD1) & 0xFFFF00FF | ((((*(unsigned char *)(v51 - 98) ^ 0xD0) + v253[*(unsigned __int8 *)(v51 - 98) ^ 0xDFLL] + 75) ^ 0xE4) << 8) | ((*(unsigned __int8 *)(v252 + (*(unsigned __int8 *)(v51 - 99) ^ 0xAALL)) ^ 0xA9) << 16) | ((*(unsigned __int8 *)(v250 + (*(unsigned __int8 *)(v51 - 100) ^ 0x45)) ^ 0xD) << 24)) ^ 0xBD445121;
  unsigned int v131 = (HIDWORD(v256) ^ 0x8D06EA22) - ((2 * (HIDWORD(v256) ^ 0x8D06EA22)) & 0x315EB8E0) - 1733338000;
  LODWORD(v249) = (v52 + 1016) ^ 0x7EE;
  HIDWORD(v24_Block_object_dispose(&STACK[0x368], 8) = (v52 + 1016) ^ 0x74D;
  LODWORD(v24_Block_object_dispose(&STACK[0x368], 8) = (v52 + 1016) ^ 0x7A2;
  HIDWORD(v247) = v123 ^ v131;
  LODWORD(v247) = (v52 + 1016) ^ 0x7DB;
  HIDWORD(v246) = (v52 + 1016) ^ 0x794;
  LODWORD(v246) = (v52 + 1016) ^ 0x79F;
  HIDWORD(v245) = (v52 + 1016) & 0x46328873;
  unint64_t v255 = __PAIR64__(v118, v123);
  LODWORD(v245) = (v78 - 1733338000) ^ v123;
  HIDWORD(v244) = (v52 + 1016) ^ 0x799;
  LODWORD(v244) = (v52 + 1016) ^ 0x75D;
  HIDWORD(v243) = (v52 + 1016) & 0xF1F6481E;
  *(_DWORD *)(v51 - 120) = v52 + 1016;
  LODWORD(v243) = (v52 + 1016) ^ 0x79C;
  LODWORD(v254) = v80;
  HIDWORD(v249) = v131 ^ 0x3DC8BA5D ^ (v78 - 1733338000);
  HIDWORD(a11) = HIDWORD(v249) ^ v80;
  *(void *)(v51 - 216) = 7;
  int v132 = v126[v50[7] ^ 0x41];
  uint64_t v133 = (2 * (v52 + 1016)) ^ 0xF9Eu;
  uint64_t v134 = v50[v133] ^ 0x60;
  *(void *)(v51 - 152) = v133;
  *(void *)(v51 - 144) = 8;
  LODWORD(v134) = *(unsigned __int8 *)(v250 + v134);
  uint64_t v135 = v50[8];
  *(void *)(v51 - 12_Block_object_dispose(&STACK[0x368], 8) = 1;
  LODWORD(v62) = *(unsigned __int8 *)(v250 + (v135 ^ 0xC1)) ^ 2;
  int v136 = *(unsigned __int8 *)(v252 + (v50[1] ^ 0x66)) ^ 0x26;
  *(void *)(v51 - 136) = 15;
  uint64_t v137 = v50[15] ^ 0xE9;
  *(void *)(v51 - 16_Block_object_dispose(&STACK[0x368], 8) = 11;
  LODWORD(v137) = v126[v137] ^ 0x73 | ((v134 ^ 0xB6) << 24);
  LODWORD(v134) = v126[v50[11] ^ 0xC3];
  *(void *)(v51 - 176) = 0;
  LODWORD(v61) = (v136 << 16) | ((*(unsigned __int8 *)(v250 + (*v50 ^ 0x30)) ^ 0x86) << 24);
  int v138 = v134 ^ 0xB9;
  *(void *)(v51 - 160) = 2;
  LODWORD(v61) = v61 & 0xFFFF00FF | (((v253[v50[2] ^ 0xC0] + (v50[2] ^ 0xCF) + 75) ^ 0xF9) << 8);
  *(_DWORD *)(v51 - 196) = 328348218;
  *(void *)(v51 - 224) = 4;
  v132 ^= 0xA3u;
  LODWORD(v134) = v132 | ((*(unsigned __int8 *)(v250 + (v50[4] ^ 0xFCLL)) ^ 0x38) << 24);
  *(_DWORD *)(v51 - 180) = 328348223;
  *(void *)(v51 - 24_Block_object_dispose(&STACK[0x368], 8) = 5;
  *(void *)(v51 - 240) = 9;
  int v139 = (*(unsigned __int8 *)(v252 + (v50[9] ^ 0x5DLL)) ^ 0xF5) << 16;
  *(void *)(v51 - 20_Block_object_dispose(&STACK[0x368], 8) = 10;
  unsigned int v140 = v139 & 0xFFFF00FF | (((v253[v50[10] ^ 0xD5] + (v50[10] ^ 0xDA) + 75) ^ 0xCF) << 8) | v138 | (v62 << 24);
  *(void *)(v51 - 192) = 14;
  LODWORD(v137) = v137 & 0xFFFF00FF | ((v253[v50[14] ^ 0xE4] + (v50[14] ^ 0xEB) - 53) << 8);
  *(void *)(v51 - 232) = 3;
  int v141 = v126[v50[3] ^ 0xDCLL] ^ 0x67;
  *(void *)(v51 - 256) = 13;
  LODWORD(v137) = v137 | ((*(unsigned __int8 *)(v252 + (v50[13] ^ 0x92)) ^ 0xC8) << 16);
  LODWORD(v134) = ((*(unsigned __int8 *)(v252 + (v50[5] ^ 0xA9)) ^ 0x1B) << 16) | (((v253[v50[6] ^ 0x4FLL] + (v50[6] ^ 0x40) + 75) ^ 0xB7) << 8) | v134;
  unsigned int v142 = v128 ^ v72 ^ ((v141 | v61)
                     - 2 * ((v141 | v61) & 0x5DF5FB5B ^ v141 & 0x19)
                     - 571081918);
  LODWORD(v134) = v130 ^ v273 ^ (v134 + 231123149 - 2 * (v134 & 0xDC6A8CF ^ v132 & 2));
  unsigned int v143 = v74 ^ v272 ^ (v137 - ((2 * v137) & 0x9FBD130) + 83749016);
  LODWORD(v62) = v129 ^ HIDWORD(v271) ^ (v140 + 740814134 - 2 * (v140 & 0x2C27ED37 ^ v138 & 1));
  uint64_t v144 = (char *)*(&off_1F2C91B30 + (int)v248) - 8;
  int v145 = *(_DWORD *)&v144[4 * ((v62 >> 24) ^ 0x3F)];
  HIDWORD(v55) = ~v145;
  LODWORD(v55) = v145 ^ 0xEF74699C;
  uint64_t v146 = (char *)*(&off_1F2C91B30 + (int)v249) - 4;
  LODWORD(v137) = (v55 >> 1) ^ ((BYTE2(v143) ^ 0x68) + 1755584905 - ((2 * (HIWORD(v143) ^ 0xB768)) & 0x112)) ^ *(_DWORD *)&v146[4 * (BYTE2(v143) ^ 0x34)];
  id v147 = (char *)*(&off_1F2C91B30 + SHIDWORD(v248)) - 12;
  LODWORD(v61) = *(_DWORD *)&v147[4 * (v62 ^ 0xC6)] ^ ((BYTE2(v142) ^ 0xD5)
                                                                      + 1755584905
                                                                      - ((2 * (HIWORD(v142) ^ 0x6CD5)) & 0x112)) ^ ((v62 ^ 0xAB) + 310545904 + ((2 * (v62 ^ 0xAB) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v146[4 * (BYTE2(v142) ^ 0x89)];
  unsigned int v148 = *(_DWORD *)&v146[4 * (BYTE2(v134) ^ 0x8C)] ^ *(_DWORD *)&v147[4 * (v143 ^ 0xB6)] ^ ((v143 ^ 0xDB) + 310545904 + ((2 * (v143 ^ 0xDB) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ ((BYTE2(v134) ^ 0xD0) + 1755584905 - 2 * ((WORD1(v134) ^ 0xC8D0) & 0x8F ^ WORD1(v134) & 6));
  int v149 = *(_DWORD *)&v144[4 * (BYTE3(v134) ^ 0xC8)];
  HIDWORD(v55) = ~v149;
  LODWORD(v55) = v149 ^ 0xEF74699C;
  int v150 = (v55 >> 1) ^ *(_DWORD *)&v146[4 * (BYTE2(v62) ^ 0xF1)];
  int v151 = *(_DWORD *)&v144[4 * (HIBYTE(v142) ^ 0x6C)];
  HIDWORD(v55) = ~v151;
  LODWORD(v55) = v151 ^ 0xEF74699C;
  int v152 = v55 >> 1;
  unsigned int v153 = ((BYTE2(v62) ^ 0xAD) + 1755584905 - ((2 * ((v62 >> 16) ^ 0x3FAD)) & 0x112)) ^ *(_DWORD *)&v147[4 * (v142 ^ 0x1C)] ^ ((v142 ^ 0x71) + 310545904 + ((2 * (v142 ^ 0x71) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ v150;
  int v154 = *(_DWORD *)&v144[4 * (HIBYTE(v143) ^ 0xB7)];
  int v155 = v153 - 1499549486 - ((2 * v153) & 0x4D3D61A4);
  HIDWORD(v55) = ~v154;
  LODWORD(v55) = v154 ^ 0xEF74699C;
  unsigned int v156 = (v134 ^ 0x10) + 310545904 + ((2 * (v134 ^ 0x10) + 254) & 0x2E0 ^ 0xCDFA7BFF);
  uint64_t v157 = (uint64_t)*(&off_1F2C91B30 + *(_DWORD *)(v51 - 120) - 1982);
  int v158 = *(_DWORD *)(v157 + 4 * (BYTE1(v142) ^ 0xDEu)) ^ v270 ^ *(_DWORD *)&v147[4 * (v134 ^ 0x7D)] ^ (v137 - 1499549486 - ((2 * v137) & 0x4D3D61A4));
  LODWORD(v134) = (v61 - 1499549486 - ((2 * v61) & 0x4D3D61A4)) ^ *(_DWORD *)(v157
                                                                                            + 4
                                                                                            * (BYTE1(v134) ^ 0x2Fu)) ^ (v55 >> 1);
  LODWORD(v137) = v134 - ((2 * v134) & 0x3F659592);
  LODWORD(v134) = *(_DWORD *)(v157 + 4 * (BYTE1(v62) ^ 0x29u));
  LODWORD(v62) = *(_DWORD *)(v157 + 4 * (BYTE1(v143) ^ 0x66u));
  LOWORD(v153) = v158 ^ v156;
  unsigned int v159 = v134 ^ v271 ^ v152 ^ (v148 - 1499549486 - ((2 * v148) & 0x4D3D61A4));
  LODWORD(v134) = v62 ^ HIDWORD(v270) ^ v155;
  LODWORD(v62) = *(_DWORD *)&v144[4 * ((v158 ^ ~v156) >> 24)];
  HIDWORD(v55) = ~v62;
  LODWORD(v55) = v62 ^ 0xEF74699C;
  LODWORD(v62) = v55 >> 1;
  LODWORD(v61) = (v158 ^ v156) >> 16;
  int v160 = *(_DWORD *)&v144[4 * (HIBYTE(v159) ^ 0x91)];
  HIDWORD(v55) = ~v160;
  LODWORD(v55) = v160 ^ 0xEF74699C;
  int v161 = v55 >> 1;
  int v162 = *(_DWORD *)&v144[4 * (BYTE3(v134) ^ 0xA3)];
  HIDWORD(v55) = ~v162;
  LODWORD(v55) = v162 ^ 0xEF74699C;
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = v161 ^ *(_DWORD *)&v146[4 * (BYTE2(v134) ^ 0xF0)] ^ ((BYTE2(v134) ^ 0xAC)
                                                                    + 1755584905
                                                                    - 2
                                                                    * ((WORD1(v134) ^ 0xA3AC) & 0x99 ^ WORD1(v134) & 0x10));
  int v163 = (v55 >> 1) ^ *(_DWORD *)&v147[4 * (v159 ^ 0x7B)] ^ *(_DWORD *)&v146[4
                                                                                            * (v61 ^ 0x15)] ^ ((v61 ^ 0x49) + 1755584905 - 2 * ((v61 ^ 0xFF49) & 0x8D ^ v61 & 4)) ^ ((v159 ^ 0x16) + 310545904 + ((2 * (v159 ^ 0x16) + 254) & 0x2E0 ^ 0xCDFA7BFF));
  int v164 = v163 - 1499549486 - ((2 * v163) & 0x4D3D61A4);
  LODWORD(v137) = (v137 + 531811017) ^ HIDWORD(v269);
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = (v78 - 1499549486 - ((2 * v78) & 0x4D3D61A4)) ^ *(_DWORD *)(v157
                                                                                           + 4 * (BYTE1(v153) ^ 0x2Cu));
  LODWORD(v62) = v62 ^ *(_DWORD *)&v147[4 * (v134 ^ 3)] ^ ((v134 ^ 0x6E)
                                                                                        + 310545904
                                                                                        + ((2
                                                                                          * (v134 ^ 0x6E)
                                                                                          + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ ((BYTE2(v137) ^ 0x8B) + 1755584905 - 2 * ((WORD1(v137) ^ 0x718B) & 0xA9 ^ WORD1(v137) & 0x20)) ^ *(_DWORD *)&v146[4 * (BYTE2(v137) ^ 0xD7)];
  int v165 = *(_DWORD *)&v146[4 * (BYTE2(v159) ^ 0x2E)] ^ ((BYTE2(v159) ^ 0x72) + 1755584905 - ((v159 >> 15) & 0x112));
  int v166 = *(_DWORD *)&v144[4 * (BYTE3(v137) ^ 0x71)];
  HIDWORD(v55) = ~v166;
  LODWORD(v55) = v166 ^ 0xEF74699C;
  LODWORD(v61) = *(_DWORD *)(v157 + 4 * (BYTE1(v137) ^ 0x51u));
  int v167 = ((v153 ^ 0xFC) + 310545904 + ((2 * (v153 ^ 0xFC) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)(v157 + 4 * (BYTE1(v134) ^ 0xBDu)) ^ *(_DWORD *)&v147[4 * (v153 ^ 0x91)] ^ (v165 - 1499549486 - ((2 * v165) & 0x4D3D61A4)) ^ (v55 >> 1);
  LODWORD(v137) = ((v137 ^ 0x84) - 1726037377) ^ v269 ^ *(_DWORD *)&v147[4
                                                                                        * (v137 ^ 0xE9)] ^ (v78 + 2036583280 - ((2 * v78) & 0xF2C796E0));
  LODWORD(v134) = *(_DWORD *)(v157 + 4 * (BYTE1(v159) ^ 0x57u)) ^ HIDWORD(v266) ^ (v62
                                                                                   - 1499549486
                                                                                   - ((2 * v62) & 0x4D3D61A4));
  unsigned int v168 = (v167 - ((2 * v167) & 0xB4C2F650) - 631145688) ^ v268;
  unsigned int v169 = v61 ^ HIDWORD(v268) ^ v164;
  int v170 = *(_DWORD *)&v144[4 * (HIBYTE(v168) ^ 0x37)];
  HIDWORD(v55) = ~v170;
  LODWORD(v55) = v170 ^ 0xEF74699C;
  LODWORD(v62) = (((v61 ^ BYTE4(v268) ^ v164) ^ 0xA1)
                + 310545903
                - ((2 * ((v61 ^ BYTE4(v268) ^ v164) ^ 0xA1) + 842892542) & 0x320586E0)) ^ *(_DWORD *)&v147[4 * ((v61 ^ BYTE4(v268) ^ v164) ^ 0xCC)];
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)&v146[4 * (BYTE2(v137) ^ 0xDB)] ^ ((BYTE2(v137) ^ 0x87)
                                                             + 1755584905
                                                             - ((2 * (WORD1(v137) ^ 0x3A87)) & 0x112)) ^ (v55 >> 1);
  LODWORD(v62) = (v62 - 1499549486 - ((2 * v62) & 0x4D3D61A4)) ^ *(_DWORD *)(v157
                                                                                           + 4 * (BYTE1(v137) ^ 0xDEu));
  unsigned int v171 = ((v137 ^ 0x9E) + 310545904 + ((2 * (v137 ^ 0x9E) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v147[4 * (v137 ^ 0xF3)];
  int v172 = v171 - 1499549486 - ((2 * v171) & 0x4D3D61A4);
  unsigned int v173 = v62 + 1755584905 - ((2 * v62) & 0xD1483312);
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = (v78 - 1499549486 - ((2 * v78) & 0x4D3D61A4)) ^ *(_DWORD *)(v157
                                                                                           + 4 * (BYTE1(v169) ^ 0x57u));
  int v174 = ((v134 ^ 0x740CBC3A) >> 16);
  unsigned int v175 = v174 + 1755584905 - (((v134 ^ 0x740CBC3A) >> 15) & 0x112);
  LODWORD(v62) = *(_DWORD *)&v144[4 * (BYTE3(v134) ^ 0x37)];
  HIDWORD(v55) = ~v62;
  LODWORD(v55) = v62 ^ 0xEF74699C;
  int v176 = v55 >> 1;
  LODWORD(v137) = *(_DWORD *)&v144[4 * (BYTE3(v137) ^ 0x3A)];
  HIDWORD(v55) = ~v137;
  LODWORD(v55) = v137 ^ 0xEF74699C;
  LODWORD(v137) = BYTE2(v169) ^ *(_DWORD *)&v146[4 * (BYTE2(v169) ^ 0xF6)] ^ *(_DWORD *)(v157
                                                                                       + 4
                                                                                       * ((unsigned __int16)(v134 ^ 0xBC3A) >> 8)) ^ 0xCE3AA9F1 ^ (v55 >> 1);
  LODWORD(v62) = ((v168 ^ 0x38) - 1726037377) ^ HIDWORD(v267) ^ *(_DWORD *)&v147[4
                                                                                                * (v168 ^ 0x55)] ^ (v137 + 2036583280 - ((2 * v137) & 0xF2C796E0));
  LODWORD(v134) = ((v134 ^ 0x3A) - 1726037377) ^ HIDWORD(v265) ^ *(_DWORD *)&v147[4
                                                                                                 * (v134 ^ 0x57)] ^ (v78 + 2036583280 - ((2 * v78) & 0xF2C796E0));
  LODWORD(v137) = *(_DWORD *)&v144[4 * (HIBYTE(v169) ^ 0x7C)];
  HIDWORD(v55) = ~v137;
  LODWORD(v55) = v137 ^ 0xEF74699C;
  unsigned int v177 = *(_DWORD *)&v146[4 * (BYTE2(v168) ^ 0xE7)] ^ v266 ^ BYTE2(v168) ^ v176 ^ v173;
  unsigned int v178 = *(_DWORD *)(v157 + 4 * (BYTE1(v168) ^ 0x9Bu)) ^ v267 ^ v175 ^ *(_DWORD *)&v146[4 * (v174 ^ 0x5C)] ^ (v55 >> 1) ^ v172;
  LODWORD(v137) = ((v177 ^ 0x78)
                 + 310545904
                 + ((2 * (v177 ^ 0x78) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v147[4 * (v177 ^ 0x15)];
  int v179 = v137 - 1499549486 - ((2 * v137) & 0x4D3D61A4);
  LODWORD(v137) = *(_DWORD *)&v144[4 * ((v62 >> 24) ^ 0x5B)];
  HIDWORD(v55) = ~v137;
  LODWORD(v55) = v137 ^ 0xEF74699C;
  LODWORD(v61) = *(_DWORD *)&v144[4 * (BYTE3(v134) ^ 0x28)];
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = (v55 >> 1) ^ *(_DWORD *)&v147[4 * (v134 ^ 0x1F)];
  HIDWORD(v55) = ~v61;
  LODWORD(v55) = v61 ^ 0xEF74699C;
  LODWORD(v137) = v55 >> 1;
  LODWORD(v61) = *(_DWORD *)&v144[4 * (HIBYTE(v177) ^ 0xB9)];
  HIDWORD(v55) = ~v61;
  LODWORD(v55) = v61 ^ 0xEF74699C;
  int v180 = v55 >> 1;
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = v78 ^ ((v134 ^ 0x72)
                                    + 310545904
                                    + ((2 * (v134 ^ 0x72) + 254) & 0x2E0 ^ 0xCDFA7BFF));
  int v181 = *(_DWORD *)&v144[4 * (HIBYTE(v178) ^ 0xB4)];
  HIDWORD(v55) = ~v181;
  LODWORD(v55) = v181 ^ 0xEF74699C;
  unsigned int v182 = v180 ^ *(_DWORD *)&v147[4 * (v178 ^ 0x8B)] ^ ((v178 ^ 0xE6)
                                                                      + 310545904
                                                                      + ((2 * (v178 ^ 0xE6) + 254) & 0x2E0 ^ 0xCDFA7BFF));
  LODWORD(v73) = ((v62 >> 16) ^ 0x5B95) & 0xA9 ^ (v62 >> 16) & 0x20;
  int v183 = BYTE2(v62) ^ 0x95;
  int v184 = v62;
  unsigned int v185 = (v62 ^ 0xF4) + 310545904 + ((2 * (v62 ^ 0xF4) + 254) & 0x2E0 ^ 0xCDFA7BFF);
  unsigned int v186 = ((BYTE2(v134) ^ 0x14) + 1755584905 - ((v134 >> 15) & 0x112)) ^ v264 ^ *(_DWORD *)(v157 + 4 * (BYTE1(v62) ^ 0x1Fu)) ^ *(_DWORD *)&v146[4 * (BYTE2(v134) ^ 0x48)] ^ (v182 - 1499549486 - ((2 * v182) & 0x4D3D61A4));
  LODWORD(v62) = *(_DWORD *)(v157 + 4 * ((unsigned __int16)(v177 ^ 0xA578) >> 8)) ^ v265 ^ *(_DWORD *)&v146[4 * (BYTE2(v178) ^ 5)] ^ ((BYTE2(v178) ^ 0x59) + 1755584905 - 2 * ((HIWORD(v178) ^ 0xB459) & 0x8D ^ HIWORD(v178) & 4)) ^ (v78 - 1499549486 - ((2 * v78) & 0x4D3D61A4));
  unsigned int v187 = (((v177 ^ 0xFA64A578) >> 16) + 1755584905 - ((v177 >> 15) & 0x112)) ^ HIDWORD(v264) ^ *(_DWORD *)&v147[4 * (v184 ^ 0x99)] ^ v185 ^ ((v55 >> 1) - 1499549486 - ((2 * (v55 >> 1)) & 0x4D3D61A4)) ^ *(_DWORD *)&v146[4 * (((v177 ^ 0xFA64A578) >> 16) ^ 0x5C)] ^ *(_DWORD *)(v157 + 4 * (BYTE1(v134) ^ 0x12u));
  unsigned int v188 = *(_DWORD *)(v157 + 4 * (BYTE1(v178) ^ 0x34u)) ^ HIDWORD(v263) ^ *(_DWORD *)&v146[4 * (v183 ^ 0x5C)] ^ (v183 + 1755584905 - 2 * v73) ^ v179 ^ v137;
  int v189 = *(_DWORD *)&v144[4 * (HIBYTE(v188) ^ 0xEB)];
  HIDWORD(v55) = ~v189;
  LODWORD(v55) = v189 ^ 0xEF74699C;
  LODWORD(v82) = (v55 >> 1) - 1499549486 - ((2 * (v55 >> 1)) & 0x4D3D61A4);
  LODWORD(v133) = ((BYTE2(v187) ^ 0x81) + 1755584905 - 2 * ((HIWORD(v187) ^ 0x1481) & 0x99 ^ HIWORD(v187) & 0x10)) ^ *(_DWORD *)&v146[4 * (BYTE2(v187) ^ 0xDD)];
  int v190 = ((v187 ^ 0x51) + 310545903 - ((2 * (v187 ^ 0x51) + 842892542) & 0x320586E0)) ^ *(_DWORD *)&v147[4 * (v187 ^ 0x3C)];
  LODWORD(v61) = *(_DWORD *)&v146[4 * (BYTE2(v186) ^ 0xDB)] ^ ((BYTE2(v186) ^ 0x87)
                                                             + 1755584905
                                                             - ((2 * (HIWORD(v186) ^ 0x7787)) & 0x112));
  int v191 = *(_DWORD *)&v144[4 * (HIBYTE(v187) ^ 0x14)];
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)&v146[4 * (((v188 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v188 ^ 0xA87CE98B) >> 16) ^ (v190 + 1755584905 - ((2 * v190) & 0xD1483312));
  HIDWORD(v55) = ~v191;
  LODWORD(v55) = v191 ^ 0xEF74699C;
  int v192 = v55 >> 1;
  int v193 = *(_DWORD *)&v144[4 * ((v62 >> 24) ^ 0x9A)];
  HIDWORD(v55) = ~v193;
  LODWORD(v55) = v193 ^ 0xEF74699C;
  LODWORD(v133) = *(_DWORD *)&v147[4 * (v188 ^ 0xE6)] ^ *(_DWORD *)(v157 + 4 * (BYTE1(v186) ^ 0xDEu)) ^ ((v188 ^ 0x8B) + 310545904 + ((2 * (v188 ^ 0x8B) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ (v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4)) ^ (v55 >> 1);
  int v194 = *(_DWORD *)&v144[4 * (HIBYTE(v186) ^ 0x77)];
  HIDWORD(v55) = ~v194;
  LODWORD(v55) = v194 ^ 0xEF74699C;
  int v195 = *(_DWORD *)(v157 + 4 * (BYTE1(v187) ^ 0x34u)) ^ v262 ^ ((BYTE2(v62) ^ 0xE9)
                                                                 + 1755584905
                                                                 - 2
                                                                 * (((v62 >> 16) ^ 0x9AE9) & 0x8F ^ (v62 >> 16) & 6)) ^ *(_DWORD *)&v146[4 * (BYTE2(v62) ^ 0xB5)] ^ ((v186 ^ 0x9E) + 310545904 + ((2 * (v186 ^ 0x9E) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ v82 ^ *(_DWORD *)&v147[4 * (v186 ^ 0xF3)];
  LODWORD(v137) = *(_DWORD *)(v157 + 4 * (BYTE1(v188) ^ 0xBu)) ^ v261 ^ ((v62 ^ 0xA8)
                                                                         + 310545903
                                                                         - ((2 * (v62 ^ 0xA8)
                                                                           + 842892542) & 0x320586E0)) ^ *(_DWORD *)&v147[4 * (v62 ^ 0xC5)] ^ v192 ^ (v61 - 1499549486 - ((2 * v61) & 0x4D3D61A4));
  LODWORD(v134) = *(_DWORD *)(v157 + 4 * (BYTE1(v62) ^ 0x2Du)) ^ HIDWORD(v262) ^ (v55 >> 1) ^ (v78
                                                                                               - 1499549486
                                                                                               - ((2 * v78) & 0x4D3D61A4));
  BYTE1(v189) = ((unsigned __int16)(*(_WORD *)(v157 + 4 * (BYTE1(v188) ^ 0xBu)) ^ v261 ^ ((v62 ^ 0xA8)
                                                                                          - 29201
                                                                                          - ((2
                                                                                            * (v62 ^ 0xA8)
                                                                                            - 31490) & 0x86E0)) ^ *(_WORD *)&v147[4 * (v62 ^ 0xC5)] ^ v192 ^ ((_WORD)v61 - 20270 - ((2 * (_WORD)v61) & 0x61A4))) >> 8) ^ 0x65;
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = ((v137 ^ 0x2E0E654A) >> 16);
  LODWORD(v73) = v78 + 1755584905 - (((v137 ^ 0x2E0E654A) >> 15) & 0x112);
  LODWORD(v62) = *(_DWORD *)&v144[4 * (BYTE3(v137) ^ 0x6D)];
  HIDWORD(v55) = ~v62;
  LODWORD(v55) = v62 ^ 0xEF74699C;
  LODWORD(v61) = v55 >> 1;
  LODWORD(v62) = (v133 + 111831522 - ((2 * v133) & 0xD54D3C4)) ^ v263;
  LODWORD(v133) = *(_DWORD *)&v146[4 * (v78 ^ 0x5C)];
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)&v144[4 * ((v62 >> 24) ^ 0xFD)];
  LODWORD(v133) = v133 ^ (~v78 << 31) ^ (v78 >> 1) ^ v73 ^ 0x77BA34CE;
  LODWORD(v137) = ((v137 ^ 0x4A)
                 + 310545904
                 + ((2 * (v137 ^ 0x4A) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v147[4 * (v137 ^ 0x27)];
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = v137 - 1499549486 - ((2 * v137) & 0x4D3D61A4);
  LODWORD(v137) = *(_DWORD *)&v144[4 * (BYTE3(v134) ^ 0xAE)];
  HIDWORD(v55) = ~v137;
  LODWORD(v55) = v137 ^ 0xEF74699C;
  LODWORD(v137) = v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4);
  LODWORD(v133) = (v55 >> 1) ^ *(_DWORD *)(v157 + 4 * (BYTE1(v62) ^ 0xA4u)) ^ v78;
  int v196 = v133 + 1755584905 - ((2 * v133) & 0xD1483312);
  LODWORD(v133) = *(_DWORD *)&v146[4 * (BYTE2(v134) ^ 0x3A)] ^ ((BYTE2(v134) ^ 0x66)
                                                              + 1755584905
                                                              - ((v134 >> 15) & 0x112)) ^ v61 ^ *(_DWORD *)&v147[4 * (v62 ^ 0x4D)] ^ ((v62 ^ 0x20) + 310545904 + ((2 * (v62 ^ 0x20) + 254) & 0x2E0 ^ 0xCDFA7BFF));
  unsigned int v197 = ((v134 ^ 0xB3) + 1069380434 + ((2 * (v134 ^ 0xB3) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)(v157 + 4 * BYTE1(v189));
  unsigned int v198 = (v197 + 2036583280 - ((2 * v197) & 0xF2C796E0)) ^ *(_DWORD *)&v147[4 * (v134 ^ 0xDE)];
  LODWORD(v62) = *(_DWORD *)&v146[4 * (BYTE2(v62) ^ 0x40)] ^ ((BYTE2(v62) ^ 0x1C)
                                                            + 1755584905
                                                            - ((2 * ((v62 >> 16) ^ 0xFD1C)) & 0x112));
  unsigned int v199 = v62 ^ v198 ^ 0x431D28D3;
  v198 ^= 0x6500C283u;
  LODWORD(v62) = v62 ^ 0xD9E215AF ^ -(v62 ^ 0xD9E215AF) ^ (v199 + v198 + 1);
  int v200 = *(_DWORD *)&v144[4 * ((v195 ^ 0x3F162902u) >> 24)];
  HIDWORD(v55) = ~v200;
  LODWORD(v55) = v200 ^ 0xEF74699C;
  unsigned int v201 = v62 + v198;
  LODWORD(v62) = ((v195 ^ 0x3F162902u) >> 16) ^ v260 ^ *(_DWORD *)&v146[4 * (((v195 ^ 0x3F162902u) >> 16) ^ 0x5C)] ^ v196;
  unsigned int v202 = (v55 >> 1) ^ HIDWORD(v259) ^ v201;
  unsigned int v203 = *(_DWORD *)(v157 + 4 * (BYTE1(v195) ^ 0xCBu)) ^ HIDWORD(v260) ^ (v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4));
  LODWORD(v134) = *(_DWORD *)(v157 + 4 * (BYTE1(v134) ^ 0x7Cu)) ^ HIDWORD(v261) ^ ((v195 ^ 2)
                                                                                   + 310545904
                                                                                   + ((2 * (v195 ^ 2)
                                                                                     + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v147[4 * (v195 ^ 0x6F)] ^ v137;
  LODWORD(v133) = ((BYTE2(v134) ^ 0xE9) + 1755584905 - 2 * ((WORD1(v134) ^ 0xB8E9) & 0x8B ^ WORD1(v134) & 2)) ^ *(_DWORD *)&v146[4 * (BYTE2(v134) ^ 0xB5)];
  int v204 = v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4);
  LODWORD(v61) = *(_DWORD *)&v144[4 * ((v62 >> 24) ^ 0x9D)];
  HIDWORD(v55) = ~v61;
  LODWORD(v55) = v61 ^ 0xEF74699C;
  LODWORD(v61) = v55 >> 1;
  int v205 = *(_DWORD *)&v144[4 * (HIBYTE(v203) ^ 0x61)];
  HIDWORD(v55) = ~v205;
  LODWORD(v55) = v205 ^ 0xEF74699C;
  LODWORD(v133) = *(_DWORD *)&v147[4 * (v134 ^ 0xC5)] ^ *(_DWORD *)&v146[4 * (BYTE2(v62) ^ 0x28)] ^ ((v134 ^ 0xA8) + 310545904 + ((2 * (v134 ^ 0xA8) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ ((BYTE2(v62) ^ 0x74) + 1755584905 - ((v62 >> 15) & 0x112)) ^ (v55 >> 1);
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = v61 ^ ((BYTE2(v202) ^ 0xE6) + 1755584905 - ((2 * (HIWORD(v202) ^ 0xB0E6)) & 0x112)) ^ *(_DWORD *)&v146[4 * (BYTE2(v202) ^ 0xBA)];
  LODWORD(v61) = (((v195 ^ 0x3F162902u) >> 16) ^ v260 ^ v146[4
                                                                            * (((v195 ^ 0x3F162902u) >> 16) ^ 0x5C)] ^ v196);
  LODWORD(v73) = (v62 ^ 0xD9)
               + 310545904
               + ((2 * (v62 ^ 0xD9) + 254) & 0x2E0 ^ 0xCDFA7BFF);
  int v206 = *(_DWORD *)&v144[4 * (BYTE3(v134) ^ 0xB8)];
  HIDWORD(v55) = ~v206;
  LODWORD(v55) = v206 ^ 0xEF74699C;
  LODWORD(v137) = ((BYTE2(v203) ^ 8) + 1755584905 - ((2 * (HIWORD(v203) ^ 0x6108)) & 0x112)) ^ *(_DWORD *)&v146[4 * (BYTE2(v203) ^ 0x54)] ^ *(_DWORD *)&v147[4 * (v202 ^ 0x29)] ^ ((v202 ^ 0x44) + 310545904 + ((2 * (v202 ^ 0x44) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ (v55 >> 1);
  unsigned int v207 = *(_DWORD *)(v157 + 4 * (BYTE1(v202) ^ 0xDDu)) ^ HIDWORD(v258) ^ (v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4));
  LODWORD(v133) = v137 - 1499549486 - ((2 * v137) & 0x4D3D61A4);
  LODWORD(v137) = *(_DWORD *)&v144[4 * (HIBYTE(v202) ^ 0xB0)];
  HIDWORD(v55) = ~v137;
  LODWORD(v55) = v137 ^ 0xEF74699C;
  LODWORD(v62) = *(_DWORD *)(v157 + 4 * (BYTE1(v62) ^ 0xBDu)) ^ v259 ^ v133;
  unsigned int v208 = *(_DWORD *)(v157 + 4 * (BYTE1(v203) ^ 0x8Fu)) ^ HIDWORD(v257) ^ *(_DWORD *)&v147[4
                                                                                          * (v61 ^ 0xB4)] ^ v73 ^ (v55 >> 1) ^ v204;
  unsigned int v209 = ((v203 ^ 0x85) + 310545904 + ((2 * (v203 ^ 0x85) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ v258 ^ *(_DWORD *)&v147[4 * (v203 ^ 0xE8)] ^ *(_DWORD *)(v157 + 4 * (BYTE1(v134) ^ 0x2Du)) ^ (v78 - 1499549486 - ((2 * v78) & 0x4D3D61A4));
  LODWORD(v133) = *(_DWORD *)&v144[4 * (HIBYTE(v208) ^ 0x18)];
  HIDWORD(v55) = ~v133;
  LODWORD(v55) = v133 ^ 0xEF74699C;
  LODWORD(v137) = ((BYTE2(v209) ^ 0x66) + 1755584905 - ((v209 >> 15) & 0x112)) ^ *(_DWORD *)&v146[4
                                                                                                * (BYTE2(v209) ^ 0x3A)];
  LODWORD(v134) = ((v55 >> 1) + 1755584905 - ((2 * (v55 >> 1)) & 0xD1483312)) ^ *(_DWORD *)&v146[4 * (BYTE2(v62) ^ 0x40)];
  int v210 = *(_DWORD *)&v144[4 * ((v62 >> 24) ^ 0xEF)];
  HIDWORD(v55) = ~v210;
  LODWORD(v55) = v210 ^ 0xEF74699C;
  LODWORD(v133) = (v55 >> 1) ^ *(_DWORD *)&v147[4 * (v208 ^ 0x90)] ^ ((v208 ^ 0xFD)
                                                                                     + 310545904
                                                                                     + ((2
                                                                                       * (v208 ^ 0xFD)
                                                                                       + 254) & 0x2E0 ^ 0xCDFA7BFF));
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)&v147[4 * (v207 ^ 0x27)] ^ ((v207 ^ 0x4A)
                                                                       + 310545904
                                                                       + ((2 * (v207 ^ 0x4A) + 254) & 0x2E0 ^ 0xCDFA7BFF));
  LODWORD(v73) = *(_DWORD *)&v144[4 * (HIBYTE(v209) ^ 0xAE)];
  HIDWORD(v55) = ~v73;
  LODWORD(v55) = v73 ^ 0xEF74699C;
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = (v55 >> 1) ^ *(_DWORD *)&v146[4 * (BYTE2(v208) ^ 0xF)] ^ (v78
                                                                         + 1755584905
                                                                         - ((2 * v78) & 0xD1483312));
  int v211 = *(_DWORD *)&v144[4 * (HIBYTE(v207) ^ 0xDC)];
  HIDWORD(v55) = ~v211;
  LODWORD(v55) = v211 ^ 0xEF74699C;
  int v212 = v134 - 1499549486 - ((2 * v134) & 0x4D3D61A4);
  LODWORD(v134) = ((BYTE2(v207) ^ 0xE) + 1755584905 - ((2 * (HIWORD(v207) ^ 0xDC0E)) & 0x112)) ^ v257 ^ *(_DWORD *)(v157 + 4 * (BYTE1(v209) ^ 0x7Cu)) ^ *(_DWORD *)&v146[4 * (BYTE2(v207) ^ 0x52)] ^ (v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4));
  unsigned int v213 = *(_DWORD *)(v157 + 4 * (BYTE1(v208) ^ 0x1Bu)) ^ HIDWORD(v256) ^ *(_DWORD *)&v147[4
                                                                                          * (v62 ^ 0x4D)] ^ ((v62 ^ 0x20) + 310545904 + ((2 * (v62 ^ 0x20) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ (v137 - 1499549486 - ((2 * v137) & 0x4D3D61A4)) ^ (v55 >> 1);
  LODWORD(v80) = ((v209 ^ 0xB3)
                + 310545904
                + ((2 * (v209 ^ 0xB3) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ HIDWORD(v255) ^ *(_DWORD *)(v157 + 4 * (BYTE1(v207) ^ 0x65u)) ^ *(_DWORD *)&v147[4 * (v209 ^ 0xDE)] ^ v212;
  LODWORD(v133) = *(_DWORD *)(v157 + 4 * (BYTE1(v62) ^ 0xA4u));
  LODWORD(v62) = v80 ^ BYTE2(v62);
  unsigned int v214 = v133 ^ v256 ^ (v78 - 1499549486 - ((2 * v78) & 0x4D3D61A4));
  LODWORD(v73) = *(_DWORD *)&v144[4 * ((v62 ^ 0x7641388B) >> 24)];
  HIDWORD(v55) = ~v73;
  LODWORD(v55) = v73 ^ 0xEF74699C;
  LODWORD(v73) = v55 >> 1;
  LODWORD(v137) = *(_DWORD *)&v144[4 * ((v134 ^ 0xF7E9CFA8) >> 24)];
  HIDWORD(v55) = ~v137;
  LODWORD(v55) = v137 ^ 0xEF74699C;
  int v215 = v55 >> 1;
  LODWORD(v137) = (((v62 ^ 0x7641388B) >> 16)
                 + 1755584905
                 - (((v62 ^ 0x7641388B) >> 15) & 0x112)) ^ *(_DWORD *)&v146[4
                                                                                        * (((v62 ^ 0x7641388B) >> 16) ^ 0x5C)];
  int v216 = *(_DWORD *)&v144[4 * (HIBYTE(v214) ^ 0xE7)];
  HIDWORD(v55) = ~v216;
  LODWORD(v55) = v216 ^ 0xEF74699C;
  int v217 = v55 >> 1;
  LODWORD(v133) = v73 ^ *(_DWORD *)&v147[4 * ((v214 ^ BYTE2(v208)) ^ 0x18)] ^ (((v134 ^ 0xF7E9CFA8) >> 16)
                                                                                              + 1755584905
                                                                                              - (((v134 ^ 0xF7E9CFA8) >> 15) & 0x112)) ^ *(_DWORD *)&v146[4 * (((v134 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ (((v214 ^ BYTE2(v208)) ^ 0x75) + 310545904 + ((2 * ((v214 ^ BYTE2(v208)) ^ 0x75) + 254) & 0x2E0 ^ 0xCDFA7BFF));
  LODWORD(v133) = (v133 - 1499549486 - ((2 * v133) & 0x4D3D61A4)) ^ *(_DWORD *)(v157 + 4 * (BYTE1(v213) ^ 0xECu));
  LODWORD(v144) = *(_DWORD *)&v144[4 * (HIBYTE(v213) ^ 0x57)];
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = v215 ^ *(_DWORD *)&v146[4 * (BYTE2(v213) ^ 0xA7)] ^ ((BYTE2(v213) ^ 0xFB)
                                                                    + 1755584905
                                                                    - ((2 * (HIWORD(v213) ^ 0x57FB)) & 0x112)) ^ ((v62 ^ 0x8B) + 310545904 + ((2 * (v62 ^ 0x8B) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v147[4 * (v62 ^ 0xE6)];
  HIDWORD(v55) = ~v144;
  LODWORD(v55) = v144 ^ 0xEF74699C;
  LODWORD(v73) = HIWORD(v214);
  LODWORD(v62) = HIWORD(v214) ^ 0xE731;
  int v218 = BYTE2(v214) ^ 0x31;
  LODWORD(v61) = *(_DWORD *)&v146[4 * (BYTE2(v214) ^ 0x6D)];
  int v219 = (v78 - 1499549486 - ((2 * v78) & 0x4D3D61A4)) ^ *(_DWORD *)(v157 + 4 * (BYTE1(v214) ^ 0x6Du));
  LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = ((v134 ^ 0xA8)
                + 310545904
                + ((2 * (v134 ^ 0xA8) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ *(_DWORD *)&v147[4 * (v134 ^ 0xC5)] ^ (v218 + 1755584905 - 2 * (v62 & 0x8F ^ v73 & 6));
  LODWORD(v73) = *(_DWORD *)(v157 + 4 * (BYTE1(v134) ^ 0x2Du));
  int v220 = *(_DWORD *)&v147[4 * (v213 ^ 0x42)];
  LODWORD(v134) = HIDWORD(v247) ^ *(_DWORD *)(v157 + 4 * (BYTE1(v80) ^ 0xDAu)) ^ ((v78 ^ v61 ^ (v55 >> 1))
                                                                                  - 1499549486
                                                                                  - ((2
                                                                                    * (v78 ^ v61 ^ (v55 >> 1))) & 0x4D3D61A4));
  unsigned int v221 = (v219 - 1733338000 - ((2 * v219) & 0x315EB8E0)) ^ v255;
  LODWORD(v144) = (v133 - 1770246919 - ((2 * v133) & 0x2CF859F2)) ^ HIDWORD(v254);
  LODWORD(v157) = v73 ^ v254 ^ ((v213 ^ 0x2F)
                              + 310545904
                              + ((2 * (v213 ^ 0x2F) + 254) & 0x2E0 ^ 0xCDFA7BFF)) ^ v217 ^ v220 ^ (v137 - 1499549486 - ((2 * v137) & 0x4D3D61A4));
  BYTE2(v219) = BYTE2(v134) ^ 0x8C;
  LODWORD(v137) = (v73 ^ v254 ^ ((v213 ^ 0x2F) - 16 + ~((2 * (v213 ^ 0x2F) - 2) & 0xE0)) ^ v217 ^ v220 ^ (v137 - 46 - ((2 * v137) & 0xA4))) ^ 0xC9;
  uint64_t v222 = (uint64_t)*(&off_1F2C91B30 + SHIDWORD(v246));
  uint64_t v223 = (char *)*(&off_1F2C91B30 + (int)v246) - 12;
  int v224 = *(_DWORD *)(v222 + 4 * (v221 ^ 0xA2u));
  uint64_t v225 = (char *)*(&off_1F2C91B30 + HIDWORD(v245)) - 8;
  LODWORD(v137) = (*(_DWORD *)&v225[4 * (BYTE2(v221) ^ 0x9E)] - 706985666) ^ (*(_DWORD *)(v222 + 4
                                                                                               * v137)
                                                                            + 1370156948);
  int v226 = v137 - 40208883 - ((2 * v137) & 0xFB34EC1A);
  uint64_t v227 = *(unsigned int *)(v222 + 4 * (v134 ^ 0xC8u));
  unsigned int v228 = v144 ^ 0x351D74B9;
  LODWORD(v137) = *(_DWORD *)(v222 + 4 * (v144 ^ 0xB9u));
  LODWORD(v62) = *(_DWORD *)&v223[4 * (HIBYTE(v221) ^ 0xE7)];
  LODWORD(v222) = *(_DWORD *)&v223[4 * (BYTE3(v157) ^ 0xB8)];
  LODWORD(v144) = *(_DWORD *)&v223[4 * ((v144 >> 24) ^ 0x65)];
  LODWORD(v133) = (*(_DWORD *)&v225[4 * (BYTE2(v157) ^ 0x38)] - 706985666) ^ (*(_DWORD *)&v223[4
                                                                                             * ((v134 ^ 0x898C5DC8) >> 24)]
                                                                            - 992035984) ^ (v224 + 1370156948);
  uint64_t v229 = (char *)*(&off_1F2C91B30 + (int)v247) - 8;
  LODWORD(v134) = v226 ^ *(_DWORD *)&v229[4 * (BYTE1(v134) ^ 0x61)] ^ (v144 - 992035984);
  int v230 = *(_DWORD *)&v229[4 * (BYTE1(v221) ^ 0xA0)];
  int v231 = *(_DWORD *)&v229[4 * (BYTE1(v157) ^ 0xE9)];
  int v232 = *(_DWORD *)&v225[4 * BYTE2(v219)];
  int v233 = *(_DWORD *)&v225[4 * BYTE2(v228)];
  unsigned int v234 = *(_DWORD *)&v229[4 * BYTE1(v228)] ^ HIDWORD(v249) ^ (v133 - 40208883 - ((2 * v133) & 0xFB34EC1A));
  uint64_t v235 = (char *)*(&off_1F2C91B30 + SHIDWORD(v244)) - 4;
  LODWORD(v134) = HIDWORD(a11) ^ HIDWORD(v254) ^ (v134 - 1770246919 - ((2 * v134) & 0x2CF859F2));
  *(unsigned char *)(a43 + 6) = v235[((unsigned __int16)(*(_WORD *)&v229[4 * BYTE1(v228)] ^ WORD2(v249) ^ (v133 + 30221 - ((2 * v133) & 0xEC1A))) >> 8) ^ 0x99] ^ 0xB6;
  uint64_t v236 = (char *)*(&off_1F2C91B30 + (int)v244) - 4;
  *(unsigned char *)(a43 + *(void *)(v51 - 256)) = (v236[BYTE2(v134) ^ 0xADLL] - 49) ^ 0xC5;
  unsigned int v237 = v230 ^ HIDWORD(a11) ^ (v227 - ((2 * v227 - 1554653400) & 0xFB34EC1A) + 1329948065) ^ (v222 - 992035984) ^ (v233 - 706985666);
  uint64_t v238 = (char *)*(&off_1F2C91B30 + SHIDWORD(v243)) - 8;
  *(unsigned char *)(a43 + *(void *)(v51 - 216)) = v238[v234 ^ 0xFCLL] ^ 0xAB;
  *(unsigned char *)(a43 + *(void *)(v51 - 240)) = (v236[BYTE2(v237) ^ 0x8CLL] - 49) ^ 0x47;
  id v239 = (char *)*(&off_1F2C91B30 + (int)v243) - 4;
  *(unsigned char *)(a43 + *(void *)(v51 - 224)) = (v239[HIBYTE(v234) ^ 0xDELL] - 44) ^ 0x1B;
  LODWORD(v229) = v236[BYTE2(v234) ^ 0x15];
  *(unsigned char *)(a43 + *(void *)(v51 - 248)) = (((_BYTE)v229 + (((_BYTE)v229 - 49) ^ 0xDA) - 48) ^ 0xFE)
                                           + (_BYTE)v229
                                           - 49;
  uint64_t v240 = v245 ^ v231;
  LODWORD(v137) = v240 ^ (v232 - 706985666) ^ (v137 + 1370156948) ^ (v62
                                                                   - ((2 * v62 - 1984071968) & 0xFB34EC1A)
                                                                   - 1032244867);
  *(unsigned char *)(a43 + *(void *)(v51 - 232)) = v238[v137 ^ 5] ^ 0x59;
  *(unsigned char *)(a43 + *(void *)(v51 - 152)) = (v239[BYTE3(v134) ^ 0x4ELL] - 44) ^ 0xE6;
  *(unsigned char *)(a43 + *(void *)(v51 - 144)) = (v239[HIBYTE(v237) ^ 0x9CLL] - 44) ^ 0xB8;
  uint64_t v241 = *(void *)(v51 - 176);
  *(unsigned char *)(a43 + v241) = (v239[BYTE3(v137) ^ 0x67] - 44) ^ 0x91;
  *(unsigned char *)(a43 + *(void *)(v51 - 168)) = v238[v237 ^ 0xF2] ^ 0x53;
  *(unsigned char *)(a43 + *(void *)(v51 - 208)) = v235[BYTE1(v237) ^ 0x1ELL] ^ 0x15;
  *(unsigned char *)(a43 + *(void *)(v51 - 160)) = v235[BYTE1(v137) ^ 0x33] ^ 0xC;
  *(unsigned char *)(a43 + *(void *)(v51 - 192)) = v235[BYTE1(v134) ^ 0xBCLL] ^ 0xC2;
  *(unsigned char *)(a43 + *(void *)(v51 - 136)) = v238[v134 ^ 0x9FLL] ^ 0xAB;
  *(unsigned char *)(a43 + *(void *)(v51 - 128)) = (v236[BYTE2(v137) ^ 0xDLL] - 49) ^ 0x8E;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a47 + 8 * ((22 * (((v241 + 328348234 - 2 * ((v241 + 16) & *(_DWORD *)(v51 - 180) ^ *(_DWORD *)(v51 - 196) & 5)) ^ 0x1392323Au) >= a45)) | (*(_DWORD *)(v51 - 120) - 609))))(21, 5, v241, v240, (v229 - 49) ^ 0xDAu, 171, 2524720377, v227, a9, a10, a11, v243, v244, v245, v246, v247, v248, v249, v250,
           v251,
           v252,
           v253,
           v254,
           v255,
           v256,
           v257,
           v258,
           v259,
           v260,
           v261,
           v262,
           v263,
           v264,
           v265,
           v266,
           v267,
           v268,
           v269,
           v270,
           v271);
}

uint64_t sub_1D4A81A3C@<X0>(int a1@<W3>, int a2@<W8>)
{
  *v4 ^= v3;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((4067 * (((223 * ((a2 - 454554227) & 0x1B17F7FF ^ 0x7EB)) ^ a1) + v2 != 1666313860)) ^ (a2 - 454554227) & 0x1B17F7FF)))();
}

uint64_t sub_1D4A81AB4@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * (((v4 == ((v5 - 58) ^ a1) + v3) * a2) ^ v5)))();
}

uint64_t sub_1D4A81ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((*(_DWORD *)(*v10 + 4 * v12) != v8) * (((a8 + a6) & (v9 + 1040)) - 1021)) ^ a8)))();
}

uint64_t sub_1D4A81B18@<X0>(uint64_t a1@<X8>)
{
  int v5 = 5 * (v3 ^ 0x73E);
  unsigned int v9 = v3 + 1374699841 * (((&v7 | 0x24434647) + (~&v7 | 0xDBBCB9B8)) ^ 0x49B75E4F) + 175;
  uint64_t v7 = a1;
  uint64_t v8 = v2;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(v1 + 8 * (v3 + 640)))(&v7);
  _DWORD *v4 = (v5 ^ 0xCF7B7BDB) - *v4;
  return result;
}

uint64_t sub_1D4A81B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((241 * (a5 + ((v9 - 161) | 0x18) == 526347423)) ^ ((v9 - 161) | 0x18))))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1D4A81BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((55 * ((((a6 - 444) ^ 0x413) & v6) == (a6 ^ 0x4E5) - 290)) ^ a6)))();
}

uint64_t sub_1D4A81C28(int8x8_t a1, int8x8_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  unsigned int v11 = v6 - 8;
  int8x8_t v12 = vrev64_s8(*(int8x8_t *)(v8 + v11));
  *(int8x8_t *)(a6 + v11) = vrev64_s8(vadd_s8(vsub_s8(v12, vand_s8(vadd_s8(v12, v12), a1)), a2));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v7 == -8) * v9) ^ a5)))();
}

uint64_t sub_1D4A81C34(uint64_t result)
{
  *(_DWORD *)(result + 4) = v1;
  return result;
}

uint64_t sub_1D4A81C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v28 = (v24 - 1227219730) & 0x4925E1E7;
  *(_DWORD *)(v27 - 112) = v24
                         + 1224239923 * (((v27 - 144) & 0x2D9ACFFC | ~((v27 - 144) | 0x2D9ACFFC)) ^ 0x20D6CDD4)
                         + 625;
  *(void *)(v27 - 104) = a24;
  *(void *)(v27 - 144) = a22;
  *(void *)(v27 - 136) = a13;
  *(void *)(v27 - 12_Block_object_dispose(&STACK[0x368], 8) = a24;
  *(void *)(v27 - 120) = a23;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 + 1763)))(v27 - 144);
  BOOL v30 = v26 + a20 + 2 >= (((v28 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((2 * v30) | (8 * v30) | (v28 + 974))))(v29);
}

uint64_t sub_1D4A81D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 112) = v17
                         + 1374699841 * (((~(v18 - 128) & 0x2D3D96EC) - (~(v18 - 128) | 0x2D3D96ED)) ^ 0x40C98EE4)
                         + 1660;
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x368], 8) = a14;
  *(void *)(v18 - 120) = &STACK[0x139154EEB432830];
  (*(void (**)(uint64_t))(v14 + 8 * (v17 + 2125)))(v18 - 128);
  *(void *)(v18 - 120) = a14;
  *(_DWORD *)(v18 - 112) = v17
                         + ((((v18 - 128) ^ 0x5F497C76) & 0x2F4F9D48 | ~((v18 - 128) ^ 0x5F497C76 | 0x2F4F9D48)) ^ 0x356D66A3)
                         * v16
                         + 1574;
  *(void *)(v18 - 104) = v15;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v17 ^ 0x86E)))(v18 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v18 - 128) > ((v17 + 1581) ^ 0x4B4B6D80u))
                                              * (458 * (v17 ^ 0x9C) - 861)) ^ v17)))(v19);
}

uint64_t sub_1D4A81E3C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((23 * (v1 + v2 - 1 < (v0 ^ 0x407u) + 2147482362)) ^ v0)))();
}

uint64_t sub_1D4A81E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16, unsigned int a17)
{
  unsigned int v18 = a14 + 84993300 + ((a6 + a5) ^ 0x717);
  BOOL v19 = v18 < 0x2C5908E5;
  BOOL v20 = v18 > a17;
  if (a17 < 0x2C5908E5 != v19) {
    unsigned __int8 v21 = v19;
  }
  else {
    unsigned __int8 v21 = v20;
  }
  return (*(uint64_t (**)(void))(v17 + 8 * ((113 * (((a6 + a5 + 1) ^ v21) & 1)) ^ (a6 + a5 + 1461))))();
}

uint64_t sub_1D4A81E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v29 = v27 | 0x194;
  *(_DWORD *)(v28 - 144) = (v29 - 751) ^ (1225351577
                                        * ((((v28 - 144) | 0x20BD77BF) + (~(v28 - 144) | 0xDF428840)) ^ 0x327AFA8));
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 12_Block_object_dispose(&STACK[0x368], 8) = a24;
  (*(void (**)(uint64_t))(v26 + 8 * (v29 ^ 0xADE)))(v28 - 144);
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 12_Block_object_dispose(&STACK[0x368], 8) = a24;
  *(_DWORD *)(v28 - 144) = (v29 - 751) ^ (1225351577 * ((v28 - 1717821674 - 2 * ((v28 - 144) & 0x999C1FA6)) ^ 0xBA06C7B0));
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  (*(void (**)(uint64_t))(v26 + 8 * (v29 ^ 0xADE)))(v28 - 144);
  int v30 = 1374699841 * ((((v28 - 144) | 0x4996AB21) - (v28 - 144) + ((v28 - 144) & 0xB66954D8)) ^ 0x2462B328);
  *(_DWORD *)(v28 - 144) = (v29 + 454) ^ v30;
  *(_DWORD *)(v28 - 12_Block_object_dispose(&STACK[0x368], 8) = v25 - v30 + (((v29 - 975) | 0x201) ^ 0xF8585D97);
  *(void *)(v28 - 136) = a25;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v29 + 1284)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((44 * (*(_DWORD *)(v28 - 140) == (((v29 - 478) | 0x10) ^ 0x5F2A471))) ^ v29)))(v31);
}

uint64_t sub_1D4A8203C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  int v7 = 4 * (v3 ^ 0x58D);
  (*(void (**)(void, void, void))(v5 + 8 * (v3 ^ 0xD94)))(**(unsigned int **)(a1 + 8 * (int)(v3 & 0xB690EABB)), *v4, *(_DWORD *)(v6 - 0x2C138C8FAF40FC1ALL) + (v7 ^ (v2 + 1257)));
  unint64_t v8 = ((unint64_t)&a2 ^ 0x7FDF97FF8BFD7FE9)
     - 0x1A13167009307428
     + ((2 * (void)&a2) & 0xFFBF2FFF17FAFFD0);
  *(unsigned char *)(v6 - 0x2C138C8FAF40FC03) = ((v8 + (v7 ^ 0xF7)) ^ 0xBA) * (v8 + 80);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * v7))(v6 - 0x2C138C8FAF40FC22);
}

uint64_t sub_1D4A8214C@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  unsigned int v10 = *(_DWORD *)(*(void *)(v9 - 0x139154EEB4327E8) + 4 * (v6 + v7)) ^ v3;
  *(_DWORD *)(*(void *)(v9 - 0x139154EEB4327E8) + 4 * (a3 + v4)) = ((v10 >> (32 - v5)) | a2 ^ v3)
                                                                       + v3
                                                                       - ((2 * ((v10 >> (32 - v5)) | a2 ^ v3)) & 0xB8FE41B0);
  return (*(uint64_t (**)(void))(v8 + 8 * (a1 ^ 0x4D7 ^ (4 * (v6 + v7 > 0)))))();
}

uint64_t sub_1D4A821DC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((15 * ((v3 ^ v0) >> 31)) ^ v1)))();
}

uint64_t sub_1D4A82210@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v8 = ((v5 + 1580645245) & 0xFE9EC7EF ^ (v3 + 1642)) + v4;
  *(unsigned char *)(a1 + v_Block_object_dispose(&STACK[0x368], 8) = *(unsigned char *)(v2 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * ((31 * (v4 - 1 == a2)) ^ (v6 + v5 + 1948))))();
}

uint64_t sub_1D4A82268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_DWORD *a22)
{
  *a22 = -595648296;
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v24
                                                             + 8
                                                             * (((v22 - 438978921 < -438978920) * ((v23 - 788) ^ 0x1E5)) ^ (v23 - 267))))(a1, (v23 - 267), 1);
}

void sub_1D4A822EC(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(*(void *)(a1 + 8) - 0x2C138C8FAF40FC16) + 1178193093;
  unsigned int v2 = *(_DWORD *)a1 + 1759421093 * (a1 ^ 0xB37DB054) + 438556326;
  int v3 = (v2 < 0x819BD015) ^ (v1 < 0x819BD015);
  BOOL v4 = v1 < v2;
  if (v3) {
    BOOL v4 = v2 < 0x819BD015;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1D4A823D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t *a22,uint64_t a23,int a24,int a25,int a26,int a27)
{
  if ((a12 - 20931516) >= 0xAF3931E) {
    int v30 = -1247212205;
  }
  else {
    int v30 = 1646191814;
  }
  int v31 = 460628867 * ((&a22 - 68604818 - 2 * ((unint64_t)&a22 & 0xFBE92C6E)) ^ 0xB77FAE13);
  a26 = v30 - v31;
  a24 = v31 - 101825754;
  a25 = v31 + v28 - 2024874190;
  a22 = &STACK[0x38223619C320A73];
  a23 = a17;
  uint64_t v32 = (*(uint64_t (**)(unint64_t **))(v29 + 8 * (v28 + 1192)))(&a22);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * (((a27 == (((v28 - 719) | 0x212) ^ (v27 - 886))) * (v28 + 1984)) ^ v28)))(v32);
}

uint64_t sub_1D4A824CC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6, uint64_t a7, int a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  *a6 = a9 ^ 0x87;
  return (*(uint64_t (**)(void))(v15 + 8 * (((a14 != v14) * ((3 * (a1 ^ 0x46) - 551828131) & 0x20E43D57 ^ 0x440)) | a1)))();
}

void sub_1D4A82530()
{
  int *v0 = v1 | 1;
}

uint64_t sub_1D4A8256C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int32x4_t a29,int32x4_t a30,int32x4_t a31,int32x4_t a32)
{
  uint64_t v97 = v33;
  int v91 = (const char *)(v40 - 220);
  int8x16_t v92 = (int8x16_t)vdupq_n_s32(0x3EBED70Eu);
  int32x4_t v93 = vdupq_n_s32(0x1F5F6B87u);
  v94.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v94.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  HIDWORD(v99) = (a6 - 952716564) & 0x3CED7EBC;
  a21 = v39 - 16;
  uint64_t v95 = (v38 - 2);
  int8x16_t v96 = (int8x16_t)vdupq_n_s32(0x1F5F6B8Fu);
  uint64_t v41 = *(uint64_t (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * v32);
  uint64_t v42 = *(unsigned int *)(v40 - 148);
  int v43 = *(_DWORD *)(v40 - 144);
  HIDWORD(a19) = *(_DWORD *)(v40 - 148);
  LODWORD(v99) = v43;
  unsigned int v45 = *(_DWORD *)(v40 - 140);
  unsigned int v44 = *(_DWORD *)(v40 - 136);
  int v46 = *(unsigned char *)(v40 - 124) ^ 0xDD;
  LODWORD(v9_Block_object_dispose(&STACK[0x368], 8) = *(unsigned __int8 *)(v40 - 124) ^ 0xFFFFFFDD;
  if (v46 == 2)
  {
    int8x16x4_t v101 = vld4q_s8(v91);
    uint64_t v73 = *(unsigned int *)(v40 - 132);
    uint8x16_t v74 = (uint8x16_t)veorq_s8(v101.val[0], v94);
    uint16x8_t v75 = vmovl_u8(*(uint8x8_t *)v74.i8);
    uint16x8_t v76 = vmovl_high_u8(v74);
    uint8x16_t v77 = (uint8x16_t)veorq_s8(v101.val[1], v94);
    _Q23 = vmovl_u8(*(uint8x8_t *)v77.i8);
    _Q22 = vmovl_high_u8(v77);
    __asm
    {
      SHLL2           V24.4S, V22.8H, #0x10
      SHLL2           V25.4S, V23.8H, #0x10
    }
    uint8x16_t v82 = (uint8x16_t)veorq_s8(v101.val[2], v94);
    uint16x8_t v83 = vmovl_high_u8(v82);
    uint16x8_t v84 = vmovl_u8(*(uint8x8_t *)v82.i8);
    v101.val[0] = veorq_s8(v101.val[3], v94);
    v101.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v101.val[0]);
    v101.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v101.val[1]);
    v101.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v101.val[0].i8);
    v101.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v101.val[0]);
    v101.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q23.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v84.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v75.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v101.val[0].i8));
    int32x4_t v85 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q25, (int8x16_t)vshll_high_n_u16(v84, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v75), 0x18uLL)), v101.val[3]);
    v101.val[1] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v83.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v76.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v101.val[1].i8));
    int32x4_t v86 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v83, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v76), 0x18uLL)), v101.val[2]);
    a31 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v101.val[1], (int32x4_t)v101.val[1]), v92)), v93);
    a32 = vaddq_s32(vsubq_s32(v86, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v86, v86), v92)), v93);
    a29 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v101.val[0], (int32x4_t)v101.val[0]), v92)), v93);
    a30 = vaddq_s32(vsubq_s32(v85, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v85, v85), v92)), v93);
    int v87 = (_DWORD *)&a29 + v37 + 596678619;
    int v88 = *((_DWORD *)&a29 + ((HIDWORD(v99) - 886) ^ (unint64_t)(v37 + 314)) + 596678619) ^ *(v87 - 3);
    int v89 = *(v87 - 16) ^ *(v87 - 14) ^ (v88 + v36 - ((2 * v88) & 0x3EBED70E));
    HIDWORD(v90) = v89 ^ v36;
    LODWORD(v90) = v89;
    _DWORD *v87 = (v90 >> 31) + v36 - ((2 * (v90 >> 31)) & 0x3EBED70E);
    return (*(uint64_t (**)(uint64_t))(v35
                                              + 8
                                              * (((v39 != 596678556) | (2 * (v39 != 596678556))) ^ HIDWORD(v99))))(v73);
  }
  else if (v46 == 1)
  {
    int8x16x4_t v100 = vld4q_s8(v91);
    uint64_t v47 = 433 * (a6 ^ (a6 - 2));
    uint8x16_t v48 = (uint8x16_t)veorq_s8(v100.val[0], v94);
    uint16x8_t v49 = vmovl_u8(*(uint8x8_t *)v48.i8);
    int8x16_t v50 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v49.i8);
    int8x16_t v51 = (int8x16_t)vmovl_high_u16(v49);
    uint16x8_t v52 = vmovl_high_u8(v48);
    int8x16_t v53 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v52.i8);
    int8x16_t v54 = (int8x16_t)vmovl_high_u16(v52);
    uint8x16_t v55 = (uint8x16_t)veorq_s8(v100.val[1], v94);
    uint16x8_t v56 = vmovl_high_u8(v55);
    uint16x8_t v57 = vmovl_u8(*(uint8x8_t *)v55.i8);
    uint8x16_t v58 = (uint8x16_t)veorq_s8(v100.val[2], v94);
    _Q27 = (int8x16_t)vmovl_high_u8(v58);
    _Q26 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v58.i8);
    int8x16_t v61 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    int8x16_t v66 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q27.i8, 0x10uLL);
    __asm { SHLL2           V27.4S, V27.8H, #0x10 }
    v100.val[0] = veorq_s8(v100.val[3], v94);
    v100.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v100.val[0]);
    v100.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v100.val[1]);
    v100.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v100.val[0].i8);
    v100.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v100.val[0]);
    v100.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v100.val[0].i8), 0x18uLL), v61), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v57.i8, 8uLL), v50));
    v100.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v100.val[3], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v57, 8uLL), v51));
    v100.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v100.val[1].i8), 0x18uLL), v66), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v56.i8, 8uLL), v53));
    v100.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v100.val[2], 0x18uLL), _Q27), vorrq_s8((int8x16_t)vshll_high_n_u16(v56, 8uLL), v54));
    int32x4_t v67 = (int32x4_t)veorq_s8(vandq_s8(v100.val[0], v96), (int8x16_t)(*(_OWORD *)&v50 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
    int32x4_t v68 = (int32x4_t)veorq_s8(vandq_s8(v100.val[3], v96), (int8x16_t)(*(_OWORD *)&v51 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
    int32x4_t v69 = (int32x4_t)veorq_s8(vandq_s8(v100.val[1], v96), (int8x16_t)(*(_OWORD *)&v53 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
    int32x4_t v70 = (int32x4_t)veorq_s8(vandq_s8(v100.val[2], v96), (int8x16_t)(*(_OWORD *)&v54 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
    a31 = vaddq_s32(vsubq_s32((int32x4_t)v100.val[1], vaddq_s32(v69, v69)), v93);
    a32 = vaddq_s32(vsubq_s32((int32x4_t)v100.val[2], vaddq_s32(v70, v70)), v93);
    a29 = vaddq_s32(vsubq_s32((int32x4_t)v100.val[0], vaddq_s32(v67, v67)), v93);
    a30 = vaddq_s32(vsubq_s32((int32x4_t)v100.val[3], vaddq_s32(v68, v68)), v93);
    uint64_t v71 = (uint64_t)*(&off_1F2C91B30 + (int)(v47 ^ 0x340));
    HIDWORD(v9_Block_object_dispose(&STACK[0x368], 8) = HIDWORD(a12) + 322302574;
    return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, void, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * (int)((133 * (a21 + 1 != v39)) | v47)))(*(&off_1F2C91B30 + (int)v47 - 797), v95, v47, v71, *(&off_1F2C91B30 + (int)(v47 ^ 0x320)), *(unsigned int *)(v71 + 4 * (a21 + v37)), &off_1F2C91B30, v42, a9, a10, a11, a12, a13, v97, a15, v98, __PAIR64__(v44, v45), v41, a19,
             v99,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
  else
  {
    *(_DWORD *)(v40 - 14_Block_object_dispose(&STACK[0x368], 8) = (v42 ^ v38)
                           + (HIDWORD(a19) ^ v38)
                           + v38
                           - (v34 & (2 * ((v42 ^ v38) + (HIDWORD(a19) ^ v38))));
    *(_DWORD *)(v40 - 144) = 2 * (v43 ^ v38) + v38 - (v34 & (4 * (v43 ^ v38)));
    *(_DWORD *)(v40 - 140) = 2 * (v45 ^ v38) + v38 - (v34 & (4 * (v45 ^ v38)));
    *(_DWORD *)(v40 - 136) = 2 * (v44 ^ v38) + v38 - (v34 & (4 * (v44 ^ v38)));
    return v41(v91, v95, 41, 182, a5, a6, &off_1F2C91B30, v42, a9, a10, a11, a12, a13);
  }
}

uint64_t sub_1D4A82574()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v1 - 40561137) * (v2 <= 0x2290703D)) ^ (v1 - 40560973))))();
}

uint64_t sub_1D4A825BC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x288] = v67;
  *(void *)(v66 + 1516) = v64;
  *(void *)(v66 + 1524) = v64;
  *(_DWORD *)(v66 + 1532) = v65;
  *(void *)(a1 + 96) = v66;
  STACK[0x258] = v66;
  *(_DWORD *)(v66 + 476) = 2115178075;
  unint64_t v70 = v63[38];
  uint64_t v71 = (char *)&STACK[0x680] + v70 + (a9 + 1823) - 0x74CFFF0833D7937CLL;
  STACK[0x3F0] = (unint64_t)(v71 + 1447);
  STACK[0x380] = v70;
  STACK[0x378] = v70 + 432;
  STACK[0x260] = (unint64_t)(v71 + 1839);
  STACK[0x3E8] = v63[15];
  STACK[0x388] = a1;
  int v72 = (a9 - 26) | 0x281;
  STACK[0x3D0] = *(void *)(v69 + 8 * a9);
  v63[38] = STACK[0x378];
  LODWORD(STACK[0x624]) = 2029314993;
  LODWORD(STACK[0x4E8]) = 2079419384;
  v63[45] = 0;
  LODWORD(STACK[0x58C]) = 2119813987;
  uint64_t v73 = (_DWORD *)STACK[0x3F0];
  _DWORD *v73 = 659196916;
  LODWORD(STACK[0x3C8]) = -248854377;
  LODWORD(STACK[0x3F8]) = (v72 ^ 0xF8731C1D) + 201353439;
  LODWORD(STACK[0x3B0]) = 553152386;
  LODWORD(STACK[0x3B8]) = 24464185;
  LODWORD(v73) = *v73;
  LODWORD(STACK[0x3E0]) = 659196261;
  int v75 = v73 != (v72 ^ 0x274A8965) || a6 + 1 != a6 + ((v72 - 144) | 0x182) - 899;
  uint16x8_t v76 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * (((v75 << 7) | (v75 << 8)) ^ v72));
  LODWORD(STACK[0x3D8]) = v68;
  return v76(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_1D4A82760(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x139154EEB4327ECLL) = (((v3 + v2) * (v1 - 674146141)) ^ 0xF7BFBFBD)
                                        + 1878916860
                                        + ((2 * (v3 + v2) * (v1 - 674146141)) & 0xEF7F7F7A);
}

uint64_t sub_1D4A827EC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((489 * (v0 + 1 == v3 + 16)) ^ v1)))();
}

uint64_t sub_1D4A828D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v8 = v6 + 562855979;
  if (v8 <= 0x40) {
    int v9 = 64;
  }
  else {
    int v9 = v8;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * ((((((-v3 - 562855979 - v5 + v9) < 0xF) ^ (v4 + 5)) & 1)
                                                                         * ((v4 + 1283) ^ 0x761)) ^ v4)))(a1, a2, a3, 2710471100);
}

uint64_t sub_1D4A8295C@<X0>(int a1@<W1>, int a2@<W2>, char a3@<W4>, uint64_t a4@<X8>)
{
  uint64_t v13 = (v8 + a2);
  *(unsigned char *)(v11 + v13 + 36) = *(unsigned char *)(v10 + v13) ^ *(unsigned char *)(v5 + ((v7 ^ 0x10) & v13)) ^ *(unsigned char *)(((v7 ^ 0x10) & v13) + v4 + 1) ^ *(unsigned char *)(a4 + ((v7 ^ 0x10) & v13)) ^ (((v7 ^ 0x10) & v13) * v9) ^ a3;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((15 * (((v8 - 1 == v6) ^ ((v7 ^ a1) - 60)) & 1)) ^ ((v7 ^ a1) - 517))))();
}

void sub_1D4A829D4()
{
}

void sub_1D4A82DE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  *(_DWORD *)(v18 - 132) = (a3 ^ v17)
                         + (a16 ^ v17)
                         + v17
                         - ((((v16 - 245657213) | 0xA804003) - 1144593267) & (2 * ((a3 ^ v17) + (a16 ^ v17))));
  JUMPOUT(0x1D4A82E48);
}

#error "1D4A83620: call analysis failed (funcsize=314)"

uint64_t sub_1D4A83624()
{
  *(_DWORD *)(v5 - 120) = v3
                        + ((-738313505 - ((v5 - 136) | 0xD3FE3ADF) + ((v5 - 136) | 0x2C01C520)) ^ 0x9695BD42) * v0
                        + 1382;
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x368], 8) = v4;
  *(void *)(v5 - 112) = v1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 + 1938)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)((((*(_DWORD *)(v5 - 136) - 1263233868) < 0xBD19A08E)
                                                   * ((v3 + 1188607638) & 0xB9274B7F ^ 0x3B3)) ^ v3)))(v6);
}

uint64_t sub_1D4A836E4(int a1, int a2, int a3, int a4)
{
  unsigned int v10 = a4 - 34;
  int v11 = (a4 - 406) | 0x5A2;
  uint64_t v12 = (a2 + a1 + a3);
  uint64_t v13 = v12 + v4;
  uint64_t v14 = v12 + v8;
  uint64_t v15 = (a2 + a1) & 0xF;
  uint64_t v16 = v15 - v14;
  uint64_t v17 = (v7 | v15) - v14;
  BOOL v19 = (unint64_t)(v13 - v14) >= 0x10
     && (unint64_t)(v16 + v5) >= 0x10
     && (unint64_t)(v16 + v6) >= 0x10;
  unint64_t v20 = v17 + 4;
  int v22 = !v19 || v20 < (v10 ^ 0x368uLL);
  return (*(uint64_t (**)(void))(v9 + 8 * (int)((v22 * (v11 - 1732)) ^ v10)))();
}

uint64_t sub_1D4A83764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v75 = ((((2 * v70) | 0xDFD9FE) - v70 - 7335167) ^ 0x94C2A5A6) * v68;
  v72[3] = a68;
  *(_DWORD *)(v74 - 200) = v75 ^ 0xC1674A5D;
  *(_DWORD *)(v74 - 164) = v71 - v75 - 525;
  v72[1] = v69;
  v72[2] = a67;
  uint64_t v76 = (*(uint64_t (**)(uint64_t))(v73 + 8 * (v71 + 1403)))(v74 - 200);
  return (*(uint64_t (**)(uint64_t))(v73
                                            + 8
                                            * (int)(((*(_DWORD *)(v74 - 168) != 526347143)
                                                   * ((v71 + 1046505424) & 0xC19F94FF ^ 0xB5)) ^ v71)))(v76);
}

uint64_t sub_1D4A83838@<X0>(int a1@<W8>)
{
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8 * ((98 * (a1 + 8 == (((v1 ^ 0x75) + 720) ^ 0x70B))) ^ v1));
  STACK[0x3F8] = *(void *)(v2 + 8 * (v1 - 887)) - 4;
  STACK[0x3F0] = *(void *)(v2 + 8 * (v1 ^ 0x46D));
  return v4();
}

uint64_t sub_1D4A83840@<X0>(int a1@<W3>, int a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 - 1605072734)) = *(unsigned char *)(v5 + (a1 - 1605072734));
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * (int)(((a1 - 1 != v4)
                                                  * (v6 + (((a2 ^ 0x1B2) + 873463090) | 0x830D2413) + 2106)) ^ a2 ^ 0x1B2)))(0);
}

uint64_t sub_1D4A838A0(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  unsigned int v12 = a4 + a3 + a6;
  uint64_t v13 = v8 + v12;
  long long v14 = *(_OWORD *)(v13 - 31);
  uint64_t v15 = a1 + v12;
  *(_OWORD *)(v15 - 15) = *(_OWORD *)(v13 - 15);
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((v9 & 0xFFFFFFE0) == 32) * ((209 * ((v10 + 1784) ^ (v6 + 2026))) ^ 0x7F4)) ^ (v7 + v10 + 1784 + 793))))();
}

uint64_t sub_1D4A8390C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v11 = a1 - 1656;
  unsigned int v12 = (a1 + 1444223239) & 0xA9EAE4FE;
  unsigned int v14 = 1755732067 * (((&a4 | 0xA509F51) - (&a4 & 0xA509F51)) ^ 0xD496228A);
  a7 = &STACK[0x5E89E940DF8E90E9];
  a4 = &STACK[0x3F70C0CAD4126774];
  a5 = v10;
  a8 = v14 ^ 0x5191942E;
  a6 = (a1 - 1364) ^ v14;
  uint64_t v15 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * (a1 + 587)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (int)(((*(_DWORD *)(v10 - 0x2C138C8FAF40FC0ALL) == v8)
                                                   * (v12 + (a1 ^ 0x4F2))) | v11)))(v15);
}

uint64_t sub_1D4A83A10@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  int v55 = *(_DWORD *)(&a39 + ((v53 + v51) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v53 + v51)) = v55 ^ 0x25;
  *(unsigned char *)(a1 + (v53 + v51 + 2)) = (BYTE2(v55) ^ 0xD1)
                                                 - 2 * ((BYTE2(v55) ^ 0xD1) & 0xEF ^ BYTE2(v55) & 4)
                                                 - 21;
  *(unsigned char *)(a1 + (v53 + v51 + 1)) = ((v52 - 38) ^ 0x4B ^ BYTE1(v55))
                                                 + ~(2 * (((v52 - 38) ^ 0x4B ^ BYTE1(v55)) & 0xEF ^ BYTE1(v55) & 4))
                                                 - 20;
  *(unsigned char *)(a1 + (v53 + v51 + 3)) = (HIBYTE(v55) ^ 0xDB)
                                                 - 2 * ((HIBYTE(v55) ^ 0xDB) & 0xEF ^ HIBYTE(v55) & 4)
                                                 - 21;
  BOOL v56 = v53 - 1365032998 < (a51 - 1977280246);
  if (v53 - 1365032998 < a2 != a51 - 1977280246 < a2) {
    BOOL v56 = a51 - 1977280246 < a2;
  }
  return (*(uint64_t (**)(void))(v54 + 8 * (((2 * v56) | (8 * v56)) ^ v52)))();
}

uint64_t sub_1D4A83B14@<X0>(int a1@<W2>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v31 = 66 * (v26 ^ 0x2D2);
  unint64_t v32 = ((((v31 - 751322467) & v30) - 560) ^ (v22 + 323) ^ *(_DWORD *)(a22 + v25)) + HIDWORD(v23);
  *(_DWORD *)(a22 + 4 * v2_Block_object_dispose(&STACK[0x368], 8) = v32 + v22 - (v24 & (2 * v32));
  *(_DWORD *)(a22 + v25) = HIDWORD(v32) | v22;
  BOOL v33 = v27 + 1484150213 < a1;
  if (a2 > 0xC5742D3 != v27 + 1484150213 < -207045332) {
    BOOL v33 = a2 > 0xC5742D3;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * (v31 ^ (363 * v33))))();
}

uint64_t sub_1D4A83B2C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2432
                                * ((v2 & (2 * (**(unsigned __int8 **)(a2 + 8) - 42)))
                                 + ((**(unsigned __int8 **)(a2 + 8) - 42) ^ v3) == (((v4 - 356) | 0x105) ^ (v3 - 442))
                                                                                 + ((v4 + 1339737921) & 0xB02537F7))) ^ v4)))();
}

uint64_t sub_1D4A83B94(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (int)((((STACK[0x420] - 506) ^ 0x269)
                                                                              * (v2 < v3)) | (STACK[0x420] + 523))))(a1, a2, 4251303770, 4294966180);
}

uint64_t sub_1D4A83BD4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((a1 == 99788384) ^ (77 * (v1 ^ 0x1E))) & 1)
                                * (((v1 ^ 0x41E) + 526) ^ 0x23C)) ^ v1)))();
}

uint64_t sub_1D4A83C1C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 != (v1 ^ 0x8C9u) + 242 + 0x5E18B9DD4E8C077) * ((22 * (v1 ^ 0x8C9)) ^ 0x5DF)) ^ v1)))();
}

void sub_1D4A83C6C(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1225351577
            * ((-1431559688 - (a1 ^ 0x637B64C4 | 0xAAAC21F8) + (a1 ^ 0x637B64C4 | 0x5553DE07)) ^ 0x15B262D5));
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1D4A83D90(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 ^ 0xCCD)))(a1);
  _DWORD *v2 = 295258426;
  return result;
}

uint64_t sub_1D4A83DC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v12 = v9 + 883188498;
  if (v12 <= 0x40) {
    unsigned int v12 = 64;
  }
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((a3 - v8 - v10 + v12 >= ((a8 + 522726097) & 0xE0D7D73F) - 1784)
                                * ((a8 + 522726097) ^ 0x1F282E16)) ^ a8)))();
}

uint64_t sub_1D4A83E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unint64_t a33,uint64_t a34,_DWORD *a35)
{
  if (v36 <= 0x3D847029) {
    int v41 = a16 + *a35;
  }
  else {
    int v41 = v38;
  }
  *a35 = v41;
  int v42 = (((v35 >> 11) ^ 0x1FACB7) - 43663526 - ((2 * ((v35 >> 11) ^ 0x1FACB7)) & 0xB7EB4)) ^ v35;
  unsigned int v43 = (((v42 << 7) & 0x9D2C5680 ^ v42) << 15) & 0xEFC60000 ^ (v42 << 7) & 0x9D2C5680 ^ v42;
  *(_DWORD *)(*v40 + a33) ^= v43 ^ (v43 >> 18);
  return (*(uint64_t (**)(void))(v37 + 8 * ((v39 + 40561541) ^ (234 * (a33 > 0x1FB)))))();
}

uint64_t sub_1D4A83F14@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((v2 - 1 + ((a1 | 0x80) ^ 0x26B) >= 0) * (((a1 | 0x80) ^ 0x3F) + 2126)) ^ (a1 | 0x80))))();
}

uint64_t sub_1D4A83F54@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v12 = v5 - 1307;
  uint64_t v13 = 4 * (v8 + ((v12 - 150) ^ (v6 - 195)));
  int v14 = v9
      - 722943572
      + (*(_DWORD *)(*(void *)(a3 - 0x139154EEB4327E8) + v13) ^ v10)
      + (*(_DWORD *)(*(void *)(a4 - 0x139154EEB4327E8) + v13) ^ v10);
  *(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + v13) = v14 + v10 - (v7 & (2 * v14));
  BOOL v15 = v4 > 0x96A162A;
  if (v15 == v8 + 1796525228 < -157947435) {
    BOOL v15 = v8 + 1796525228 < (int)(v4 + 1989536213);
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((1837 * v15) ^ v12)))();
}

uint64_t sub_1D4A8407C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 < 0x7FFFFFFF) * ((((v1 - 827) | 0x500) - 767) ^ 0x463)) ^ (((v1 - 827) | 0x500)
                                                                                               - 649))))();
}

uint64_t sub_1D4A840C8()
{
  unsigned int v6 = 535753261 * (((v2 | 0x9FEF1DFC) - v2 + (v2 & 0x6010E200)) ^ 0x951B13D3);
  void *v3 = STACK[0x248];
  v3[5] = STACK[0x2B8];
  *(_DWORD *)(v5 - 16_Block_object_dispose(&STACK[0x368], 8) = v1 - v6 + ((v0 - 866326915) & 0x33A31FD7 ^ 0xDD503891);
  _OWORD v3[2] = STACK[0x250];
  int v7 = v0 - v6 + 2053;
  int v8 = LODWORD(STACK[0x244]) ^ v6;
  *(_DWORD *)(v5 - 192) = v7;
  *(_DWORD *)(v5 - 176) = v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 | 0x8B1)))(v5 - 200);
  int v10 = *(_DWORD *)(v5 - 172);
  LODWORD(STACK[0x5D8]) = v10;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((1039 * (v10 == v0 + 526347077)) ^ v0)))(v9);
}

uint64_t sub_1D4A841C0(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = v5 + (v6 ^ 0x105 ^ (v3 + 809));
  long long v9 = *(_OWORD *)(a2 + v8 - 15);
  long long v10 = *(_OWORD *)(a2 + v8 - 31);
  uint64_t v11 = v2 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((38 * ((v4 & 0xFFFFFFE0) != 32)) ^ (v6 + 1176))))();
}

uint64_t sub_1D4A8421C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,unsigned int a21,uint64_t a22)
{
  unsigned int v27 = 1178560073
      * (((&a18 | 0x2DEBD9B6) - &a18 + (&a18 & 0xD2142648)) ^ 0x977FA1D4);
  a21 = (v22 + 881) ^ v27;
  a20 = a14;
  a19 = v27 + 762105055 * v25 + 296806364;
  (*(void (**)(int *))(v26 + 8 * (v22 ^ 0xA65)))(&a18);
  unsigned int v28 = 1178560073
      * (((&a18 | 0xA44E095A) - &a18 + (&a18 & 0x5BB1F6A0)) ^ 0x1EDA7138);
  a21 = (((2 * v24) & 0xD4F5F5A2) + (v24 ^ 0x6A7AFAD1) + ((v22 - 953879728) & 0x5F6 ^ 0xFFADF344)) ^ v28;
  a19 = v22 + 885 + v28;
  a20 = a14;
  a22 = v23;
  (*(void (**)(int *))(v26 + 8 * (v22 ^ 0xA73)))(&a18);
  unsigned int v29 = 1178560073 * ((&a18 - 791991911 - 2 * (&a18 & 0xD0CB2999)) ^ 0x6A5F51FB);
  a20 = a14;
  a22 = a11;
  a21 = v29 ^ ((a10 ^ 0x6AFCF6D3) - 13894786 + ((2 * a10) & 0xD5F9EDA6));
  a19 = v22 + 885 + v29;
  uint64_t v30 = (*(uint64_t (**)(int *))(v26 + 8 * (v22 ^ 0xA73)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((1630 * (a18 == 526347143)) ^ v22)))(v30);
}

uint64_t sub_1D4A843FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12)
{
  int v18 = 628203409 * ((((v17 - 160) | 0x36F0807) - ((v17 - 160) & 0x36F0807)) ^ 0x81E70434);
  STACK[0x318] = a9;
  *(_DWORD *)(v17 - 144) = v16 - v18 + 1745;
  *(_DWORD *)(v17 - 140) = v13 - v18 - 1178884814 + ((v16 + 1398754151) & 0xACA0B49E);
  STACK[0x338] = a7;
  STACK[0x328] = a12;
  STACK[0x340] = a10;
  STACK[0x310] = a11;
  uint64_t v20 = v12;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 2189)))(v17 - 160);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15
                                                                       + 8
                                                                       * (((*(_DWORD *)(v17 - 128) == v14)
                                                                         * (((v16 + 33849979) | 0x50407C20) ^ 0x5244FD4F)) ^ v16)))(3689027270, 1048539665, v20, 605940025);
}

uint64_t sub_1D4A84520@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unint64_t v5 = ((unint64_t)&STACK[0x4C8] ^ 0xBD20EF73ABE79BF7)
     + 0x66FFFECD57FA8009
     + ((2 * (void)&STACK[0x4C8]) & 0x7A41DEE757CF37E0);
  uint64_t v6 = v2 + (a2 - 433) - 138;
  *(void *)(v3 + 24) = v6;
  *(unsigned char *)(a1 + v6) = (v5 ^ 0xBA) * (v5 + 17);
  return (*(uint64_t (**)(void))(v4 + 8 * ((83 * (*(void *)(v3 + 24) == 0)) ^ a2)))();
}

uint64_t sub_1D4A845AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (((((v6 + v8) ^ (a6 == (v6 ^ v7 ^ v9))) & 1) * v10) ^ v6)))();
}

uint64_t sub_1D4A845B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v7 = v7[623];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((49
                                                                         * (v6
                                                                          - 40560652
                                                                          + ((((v3 + 599) | 0xC8) - 1574431841) & 0x5DD7E6DD)
                                                                          - v4
                                                                          + 465
                                                                          - 538 != v8)) ^ ((v3 + 599) | 0xC8))))(a1, a2, a3, 4251303770);
}

uint64_t sub_1D4A8462C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,uint64_t a22,uint64_t a23)
{
  a21 = (v23 + 739) ^ (((&a21 & 0x80170750 | ~(&a21 | 0x80170750)) ^ 0x121CE0A6) * v25);
  a22 = v26;
  a23 = a18;
  (*(void (**)(unsigned int *))(v27 + 8 * (v23 ^ 0x82E)))(&a21);
  a22 = v24;
  a23 = a18;
  a21 = (v23 + 739) ^ (((&a21 - 1703598249 - 2 * (&a21 & 0x9A752757)) ^ 0xF7813F5E) * v25);
  (*(void (**)(unsigned int *))(v27 + 8 * (v23 ^ 0x82E)))(&a21);
  a22 = a18;
  a21 = (v23 + 1224) ^ (1755732067
                      * ((2 * (&a21 & 0x6B25E860) - &a21 + 349837213) ^ 0xCA1CAA46));
  uint64_t v28 = (*(uint64_t (**)(unsigned int *))(v27 + 8 * (v23 + 2075)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * ((579 * (a23 == ((((v23 + 80) | 0x82) + 693) ^ 0x1F5F6FD4))) ^ v23)))(v28);
}

uint64_t sub_1D4A8477C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v4 == a3) ^ (a4 + 12)) & 1) * ((3 * (a4 ^ 0x6C)) ^ 0x723)) ^ a4)))();
}

uint64_t sub_1D4A847B8@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(unsigned char *)(a3 + (v4 + 1 + v7)) = *(unsigned char *)(a1 + (v5 - 713989072));
  return (*(uint64_t (**)(void))(v8 + 8 * ((425 * ((((a2 ^ (8 * a4) ^ 0x11) + v5) & 0xFFFFFFFC) == v6)) ^ a4)))();
}

uint64_t sub_1D4A8480C()
{
  int v3 = v1 - (((v1 << ((v2 + 32) ^ 0xD2)) + 136128528) & ((v2 - 1052822201) & 0x3EC0CA7F ^ 0x3A8184A4)) - 1588635017;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((99
                                * (((2 * v3) & 0x5E7BB9FE ^ 0x1A0188DE) + (v3 ^ 0x327D1A90) - 203789313 == 588794110)) ^ v2)))();
}

uint64_t sub_1D4A848BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  BOOL v32 = a29 - 607101020 < (v30 - 566706417);
  if (a29 - 607101020 < (((v29 + 408) | 0x102) ^ 0x5A2A2E05u) != v30 - 566706417 < ((71 * ((v29 + 45) ^ 0x297)) ^ 0x5A2A2B89u)) {
    BOOL v32 = v30 - 566706417 < ((71 * ((v29 + 45) ^ 0x297)) ^ 0x5A2A2B89u);
  }
  return (*(uint64_t (**)(void))(v31 + 8 * (((4 * v32) | (8 * v32)) ^ (v29 + 45))))();
}

uint64_t sub_1D4A848D0(int a1, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = (a5 - 32 + a3);
  long long v11 = *(_OWORD *)(v8 + v10 - 15);
  long long v12 = *(_OWORD *)(v8 + v10 - 31);
  uint64_t v13 = a8 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 == 32) * a4) ^ (a2 + 492))))();
}

uint64_t sub_1D4A848DC()
{
  *(void *)(v3 + v2 - 0x72E93EC13A593D8FLL) = v5;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((52 * ((v1 & 0xFFFFFFFFFFFFFFF8) - (v0 + 1400) == -1737)) ^ v0)))((v0 + 1400) - 1737);
}

void sub_1D4A84938(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x335EB1051722DFECLL) = v2;
  *(_DWORD *)(v1 + 32) = 526347143;
}

uint64_t sub_1D4A84990@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 481) ^ 0xFFFFFC3C) + a1 + v1 < 0x7FFFFF7D) * (v2 - 1203)) ^ v2)))();
}

uint64_t sub_1D4A849D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  if (a23 < 0x30CC5AB5 != (v24 - 799581894) < 0x30CC5AB5) {
    BOOL v26 = (v24 - 799581894) < 0x30CC5AB5;
  }
  else {
    BOOL v26 = v24 - 799581894 > a23;
  }
  return (*(uint64_t (**)(void))(v23 + 8 * ((!v26 * ((38 * (a5 ^ (a5 + 10)) + 2728) ^ v25)) ^ (a6 + a5 + 2017))))();
}

uint64_t sub_1D4A84A58@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v27 = v17 ^ 0x607;
  int v28 = ((((v26 - 144) | 0xA1543A50) - (v26 - 144) + ((v26 - 144) & 0x5EABC5A8)) ^ 0x1BC04232) * v19;
  *(_DWORD *)(v26 - 116) = v28 + v18 + 309955180 + (v17 ^ 0x607);
  *(_DWORD *)(v26 - 144) = v28 + v17 + 130;
  *(void *)(v26 - 136) = a1;
  *(void *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = v22;
  (*(void (**)(uint64_t))(v21 + 8 * (v17 + 1788)))(v26 - 144);
  *(_DWORD *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = (v27 - 141) ^ (628203409
                                        * ((2 * ((v26 - 144) & 0x54E47578) - (v26 - 144) + 723225217) ^ 0xA99386B2));
  *(void *)(v26 - 144) = v25;
  *(void *)(v26 - 136) = a17;
  uint64_t v31 = 8 * (v27 + 1284);
  (*(void (**)(uint64_t))(v21 + v31))(v26 - 144);
  *(void *)(v26 - 120) = v25;
  *(void *)(v26 - 112) = v24;
  *(_DWORD *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = (v27 + 5) ^ (1178560073
                                      * ((((v26 - 144) | 0x680F62BB) - ((v26 - 144) & 0x680F62BB)) ^ 0xD29B1AD9));
  *(void *)(v26 - 144) = a17;
  *(void *)(v26 - 136) = v22;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 + 1266)))(v26 - 144);
  *(_DWORD *)(v26 - 112) = v27
                         + 117
                         + 1224239923
                         * ((((v26 - 144) ^ 0xF9BB0CB1 | 0x15437DFD) - (((v26 - 144) ^ 0xF9BB0CB1) & 0x15437DFD)) ^ 0x1E4B8C9B);
  *(void *)(v26 - 104) = v20;
  *(void *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = v24;
  *(void *)(v26 - 120) = v25;
  *(void *)(v26 - 144) = a17;
  *(void *)(v26 - 136) = v24;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 ^ 0xCF9)))(v26 - 144);
  *(_DWORD *)(v26 - 120) = v27 - 806 + 1225351577 * ((v26 - 144) ^ 0x239AD816);
  *(void *)(v26 - 112) = a8;
  *(void *)(v26 - 104) = v25;
  *(void *)(v26 - 144) = a17;
  *(void *)(v26 - 136) = v24;
  *(void *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = v24;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 ^ 0xD3B)))(v26 - 144);
  *(void *)(v26 - 144) = a12;
  *(void *)(v26 - 136) = a17;
  *(_DWORD *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = (v27 - 141) ^ (628203409
                                        * ((((v26 - 144) | 0xDED8722D) - ((v26 - 144) & 0xDED8722D)) ^ 0x5C507E1E));
  (*(void (**)(uint64_t))(v21 + v31))(v26 - 144);
  *(void *)(v26 - 120) = a12;
  *(void *)(v26 - 112) = v23;
  *(_DWORD *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = (v27 + 5) ^ (1178560073
                                      * ((989915423 - ((v26 - 144) | 0x3B00E91F) + ((v26 - 144) | 0xC4FF16E0)) ^ 0x7E6B6E82));
  *(void *)(v26 - 144) = a17;
  *(void *)(v26 - 136) = v22;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 ^ 0xCF2)))(v26 - 144);
  *(_DWORD *)(v26 - 112) = v27
                         + 117
                         + 1224239923 * ((((v26 - 144) | 0x639614A3) + (~(v26 - 144) | 0x9C69EB5C)) ^ 0x9125E975);
  *(void *)(v26 - 104) = v20;
  *(void *)(v26 - 144) = a17;
  *(void *)(v26 - 136) = v23;
  *(void *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = v23;
  *(void *)(v26 - 120) = a12;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 ^ 0xCF9)))(v26 - 144);
  *(void *)(v26 - 136) = v23;
  *(void *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = v23;
  *(void *)(v26 - 112) = a10;
  *(void *)(v26 - 104) = a12;
  *(_DWORD *)(v26 - 120) = v27
                         - 806
                         + 1225351577 * ((((v26 - 144) | 0x59480BB8) - ((v26 - 144) & 0x59480BB8)) ^ 0x7AD2D3AE);
  *(void *)(v26 - 144) = a17;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 ^ 0xD3B)))(v26 - 144);
  *(_DWORD *)(v26 - 144) = v27
                         - 108757529
                         * (((((v26 - 144) | 0xF475AFFA) ^ 0xFFFFFFFE) - (~(v26 - 144) | 0xB8A5005)) ^ 0xEB16322E)
                         + 668;
  *(void *)(v26 - 136) = v23;
  *(void *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = v24;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 + 1263)))(v26 - 144);
  *(_DWORD *)(v26 - 140) = (v27 + 7) ^ (460628867 * ((v26 - 144) ^ 0x4C96827D));
  *(void *)(v26 - 136) = v23;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v27 ^ 0xD02)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (((*(_DWORD *)(v26 - 144) == ((v27 + 1992532974) & 0x893C5ECC) + 674144404)
                                              * (((4 * v27) ^ 0x16FC) - 1306)) ^ v27)))(v29);
}

uint64_t sub_1D4A84F04(_DWORD *a1)
{
  unsigned int v1 = 1224239923 * (((a1 | 0x8C9528F6) - a1 + (a1 & 0x736AD709)) ^ 0x7E26D521);
  unsigned int v2 = a1[4] - v1;
  int v3 = *a1 ^ v1;
  unsigned int v5 = v3 - 1126802573;
  BOOL v4 = v3 - 1126802573 < 0;
  LODWORD(v6) = 1126802573 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F2C91B30 + (int)(v2 ^ 0x8C4))
                              + 8 * (int)(((v6 == ((2 * v6) & 0x7F9534EC)) * (((v2 - 346) | 0x10) - 1762)) ^ v2)
                              - 4))();
}

void sub_1D4A84FC4(uint64_t a1)
{
  int v1 = (*(_DWORD *)(a1 + 16) ^ (628203409 * ((1303688841 - (a1 | 0x4DB4B689) + (a1 | 0xB24B4976)) ^ 0x30C34545))) - 464;
  __asm { BRAA            X3, X17 }
}

uint64_t sub_1D4A85128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v12 = v6 == v10 && v8 != (v7 ^ 0x2A7 ^ (a6 - 1011) ^ (v7 + 1788118598) & 0x956B7F2B);
  return (*(uint64_t (**)(void))(v9 + 8 * ((1468 * v12) ^ v7)))();
}

uint64_t sub_1D4A8518C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16)
{
  int v22 = (a5 - 1072588593) & 0x3FEE6776;
  int v18 = 628203409 * ((((v17 - 120) | 0xE8E27941) - (v17 - 120) + ((v17 - 120) & 0x171D86B8)) ^ 0x6A6A7572);
  *(void *)(v17 - 120) = a11;
  *(_DWORD *)(v17 - 112) = v18 + a5 + 572;
  *(_DWORD *)(v17 - 10_Block_object_dispose(&STACK[0x368], 8) = a14 - v18 + 623924053;
  (*(void (**)(uint64_t))(v16 + 8 * (a5 ^ 0x8E4)))(v17 - 120);
  uint64_t v19 = *(_DWORD *)(v17 - 152) & 0x3F;
  *(unsigned char *)(v17 - 220 + (v19 ^ 0x24)) = 107;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16
                                                     + 8 * ((((v19 ^ 0x24) > 0x37) * (v22 + 379)) ^ a5)))(3299963166, a16);
}

uint64_t sub_1D4A852B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(v6 + 304) = v4 - 16;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a4 == v8) * ((v5 - 366) ^ 0xA6F)) ^ v5)))();
}

uint64_t sub_1D4A852F0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)(v2 - 128)
                                 + 1493
                                 + ((*(_DWORD *)(v2 - 128) - 967191047) & 0x39A62FDB)
                                 - 3097)
                                * (v0 == *(_DWORD *)(v2 - 120))) ^ *(_DWORD *)(v2 - 128))))();
}

uint64_t sub_1D4A8533C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  LODWORD(STACK[0x3F8]) = 911095922;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * ((((*(unsigned char *)(v9 + v7) + ((a3 + v3) & v5) - *(unsigned char *)(*(void *)(v4 + 8 * (a3 ^ 0x455)) - 4)) != 235) * (((a3 - 1067) | v6) - 275)) ^ (a3 - 621))))(a1, a2, 1339085737, 3175002011, 1119964591, 1533, 3191475289, 1103492823);
}

uint64_t sub_1D4A853D0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((((v0 + 514) ^ 0x28B) * ((v1 >> 1) & 1)) ^ v0)))();
}

uint64_t sub_1D4A853FC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((224
                                * (a2 + v3 + (((v2 ^ 0x3AB) - 560946317) & 0x216F5E7C ^ 0xA0540445) < (((v2 ^ 0x3AB) + 2068011327) & 0x84BCA76C) - 792)) ^ v2 ^ 0x3AB)))();
}

uint64_t sub_1D4A85484@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (int)((((a3 - 182238939) < 0x38)
                                                            * ((v3 - 214409674) & 0xBA82AAFE ^ 0x84A)) ^ (a2 + v3 + 100))))(a1, -182238939);
}

uint64_t sub_1D4A854DC(int a1, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  *(_DWORD *)(v64 - 140) = v61;
  unsigned int v65 = v61 & 0xFFFFFFF8;
  *(void *)(v64 - 12_Block_object_dispose(&STACK[0x368], 8) = v56 - 7;
  *(void *)(v64 - 136) = v63 - 7;
  *(_DWORD *)(v64 - 144) = v65;
  int v66 = -a4;
  char v67 = v62 + a2 + a1;
  uint64_t v68 = (a2 + a1 + a3 + v66);
  v70.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3 + (_BYTE)v66) & 0xF;
  v70.val[0].i64[1] = (v67 + 15 + (_BYTE)v66) & 0xF;
  v70.val[1].i64[0] = (v67 + 14 + (_BYTE)v66) & 0xF;
  v70.val[1].i64[1] = (v67 + 13 + (_BYTE)v66) & 0xF;
  v70.val[2].i64[0] = (v67 + 12 + (_BYTE)v66) & 0xF;
  v70.val[2].i64[1] = (v60 + (_BYTE)v66 + ((a5 + 103) ^ 1)) & 0xF;
  v70.val[3].i64[0] = (v67 + 10 + (_BYTE)v66) & 0xF;
  v70.val[3].i64[1] = (v67 + 9 + (_BYTE)v66) & 0xF;
  *(int8x8_t *)(*(void *)(v64 - 136) + v6_Block_object_dispose(&STACK[0x368], 8) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v57 + (v68 & 0xF) - 7), *(int8x8_t *)(*(void *)(v64 - 128) + v68)), veor_s8(*(int8x8_t *)(v58 + (v68 & 0xF) - 7), *(int8x8_t *)((v68 & 0xF) + v59 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v70, (int8x16_t)xmmword_1D54D34C0), (int8x8_t)0x2929292929292929)));
  return (*(uint64_t (**)(__n128))(a56 + 8 * ((1329 * (8 - v65 == v66)) ^ a5)))((__n128)xmmword_1D54D34C0);
}

uint64_t sub_1D4A85618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X6>, int a5@<W7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  unint64_t v65 = STACK[0x508] + (v62 + a6 - 1742768035 + 1063);
  unint64_t v66 = STACK[0x650];
  STACK[0x578] = *(void *)(v64 + 8 * v62);
  STACK[0x660] = v66;
  STACK[0x668] = v65;
  unint64_t v67 = STACK[0x5E0];
  uint64_t v68 = (char *)&a7 + STACK[0x5E0] - 0x74CFFF0833D7800CLL;
  STACK[0x670] = (unint64_t)v68;
  STACK[0x5E0] = v67 + 320;
  int v69 = *(_DWORD *)(v66 - 0x72E93EC0CCAF573ALL);
  LODWORD(STACK[0x53C]) = v69;
  int v70 = *(_DWORD *)(v66 - 0x72E93EC0CCAF5736);
  LODWORD(STACK[0x458]) = v70;
  int v71 = *(_DWORD *)(v66 - 0x72E93EC0CCAF5732);
  LODWORD(STACK[0x504]) = v71;
  int v72 = *(_DWORD *)(v66 - 0x72E93EC0CCAF572ELL);
  LODWORD(STACK[0x5D4]) = v72;
  int v73 = *(unsigned __int8 *)(v66 - 0x72E93EC0CCAF5722) ^ 0xDD;
  if (v73 == 2)
  {
    LODWORD(STACK[0x588]) = *(_DWORD *)(v66 - 0x72E93EC0CCAF572ALL);
    LODWORD(STACK[0x45C]) = 351843406;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * ((((((((a5 - 1098) | 0x264) + 660) | 0x82) ^ 0xEB074E39) + 351843406 > 0x3F) * (((((a5 - 1098) | 0x264) - 1755476443) & 0x68A26F7F) + 193)) ^ ((a5 - 1098) | 0x264))))(a1, 64052174, 3623878656, a2, a3, 3080894364, a4, 3687930830);
  }
  else if (v73 == 1)
  {
    LODWORD(STACK[0x45C]) = v63;
    BOOL v75 = v65 >= a62 + v67 || (unint64_t)v68 >= v65 + 64;
    return (*(uint64_t (**)(void))(v64 + 8 * ((((LODWORD(STACK[0x36C]) - 170) ^ (a5 - 874)) * v75) ^ (a5 - 550))))();
  }
  else
  {
    unsigned int v77 = (*(_DWORD *)(v66 - 0x72E93EC0CCAF573ALL) ^ 0xDBD15BCE) + (v69 ^ 0xDBD15BCE);
    *(_DWORD *)(v66 - 0x72E93EC0CCAF573ALL) = v77 - 607036466 - ((2 * v77) & 0xB7A2B79C);
    unsigned int v78 = (*(_DWORD *)(v66 - 0x72E93EC0CCAF5736) ^ 0xDBD15BCE) + (v70 ^ 0xDBD15BCE);
    *(_DWORD *)(v66 - 0x72E93EC0CCAF5736) = v78 - 607036466 - ((2 * v78) & 0xB7A2B79C);
    unsigned int v79 = (*(_DWORD *)(v66 - 0x72E93EC0CCAF5732) ^ 0xDBD15BCE) + (v71 ^ 0xDBD15BCE);
    *(_DWORD *)(v66 - 0x72E93EC0CCAF5732) = v79 - 607036466 - ((2 * v79) & 0xB7A2B79C);
    unsigned int v80 = (*(_DWORD *)(v66 - 0x72E93EC0CCAF572ELL) ^ 0xDBD15BCE) + (v72 ^ 0xDBD15BCE);
    *(_DWORD *)(v66 - 0x72E93EC0CCAF572ELL) = v80 - 607036466 - ((2 * v80) & 0xB7A2B79C);
    STACK[0x5E0] = v67;
    return ((uint64_t (*)(void))STACK[0x578])();
  }
}

uint64_t sub_1D4A8564C@<X0>(int a1@<W8>)
{
  BOOL v3 = (a1 ^ 0x1Bu) >= (((v1 ^ 0x72B) + 34) ^ 0x6F5u);
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v3) | (8 * v3)) ^ v1)))();
}

uint64_t sub_1D4A85688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = *(_DWORD *)(a2 + 4) + ((((a8 - 365) | 0x4B8) - v8 - 1083) ^ 0x86A53C2D);
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_1D4A856DC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*v2 == 0) * (((v0 - 517) ^ 0x21F) - 765)) ^ v0)))();
}

uint64_t sub_1D4A8570C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((936
                                * (((v23 + 528) ^ 0xB3912BE9)
                                 + a23
                                 + ((v23 - 2091754591) & 0x7CADA43F)
                                 - *(_DWORD *)(a19 + 4) == -1241935543)) ^ v23)))();
}

uint64_t sub_1D4A8577C(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v7 = v4 < v3;
  unint64_t v8 = ((a3 + 1310074422) & 0xB1E9DB6B) + v5 + ((a3 - 847746571) & 0x328797AF ^ 0xE9E26F9D243D8B96);
  int v9 = v7 ^ (v8 < v3);
  BOOL v10 = v8 < v4;
  if (!v9) {
    BOOL v7 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((30 * !v7) ^ a3)))();
}

void sub_1D4A8580C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
}

uint64_t sub_1D4A85814()
{
  *(unsigned char *)(*(void *)(v3 + 96) + 156_Block_object_dispose(&STACK[0x368], 8) = 1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2187
                                * (*(_DWORD *)(v3 + 72) == (((v0 - 2004598808) | 0xA0861) ^ 0x7BED6BFC) + (v0 ^ v1))) ^ v0)))();
}

_DWORD *sub_1D4A85870(_DWORD *result)
{
  if (v2 + 207 >= ((v5 + 926) ^ 0x7FFFFA9Eu)) {
    int v6 = -v1;
  }
  else {
    int v6 = v3;
  }
  int *v4 = v6;
  *uint64_t result = 725983426;
  return result;
}

uint64_t sub_1D4A8589C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19)
{
  unint64_t v20 = STACK[0x510];
  STACK[0x628] -= 32;
  *(unsigned char *)(v20 + 335) = *((unsigned char *)*(&off_1F2C91B30 + (a19 ^ 0x63E)) + 15) ^ *(unsigned char *)(a14 + 335) ^ (((a19 + 100) & 0xFB) + 115) ^ 0xCD ^ *((unsigned char *)*(&off_1F2C91B30 + (int)(a19 - 1386)) + 17) ^ *((unsigned char *)*(&off_1F2C91B30 + (int)(a19 - 1485)) + 10);
  return (*(uint64_t (**)(_UNKNOWN **, uint64_t))(v19 + 8 * a19))(&off_1F2C91B30, 3768594526);
}

uint64_t sub_1D4A85964()
{
  STACK[0x3D0] = v0;
  unint64_t v4 = STACK[0x420];
  int v5 = STACK[0x420] + 140;
  (*(void (**)(unint64_t))(v3 + 8 * SLODWORD(STACK[0x2AC])))(STACK[0x2B0]);
  int v6 = (*(uint64_t (**)(void))(v3 + 8 * ((int)v4 + 1183)))();
  int v7 = v6 - 43663526 - ((v6 << (v5 ^ 0xE6)) & v1);
  int *v2 = v7;
  unsigned int v8 = ((~v7 >> 30) - 43663526 - ((~v7 >> 30 << ((v5 + 38) ^ 0xC)) & 4)) ^ v7;
  v2[1] = 1812433253 * v8 - ((2 - 670100790 * v8) & v1) - 43663525;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 8 * v5))(2060, 1812433253, 3624866506, 4251303771);
}

void sub_1D4A85A4C()
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1F2C91B30
                + ((-35 * ((qword_1EA70FB08 + dword_1EA7106D8) ^ 0xD8)) ^ byte_1D54C7F60[byte_1D54D2FA0[(-35 * ((qword_1EA70FB08 + dword_1EA7106D8) ^ 0xD8))] ^ 0x4D])
                + 6);
  uint64_t v1 = *(void *)(v0 - 4);
  int v2 = (unsigned __int8 *)off_1F2C91B68;
  uint64_t v3 = (char *)off_1F2C91D00 - 8;
  unint64_t v4 = (uint64_t *)*(&off_1F2C91B30
                  + (*((unsigned char *)off_1F2C91D00
                                                    + (*((unsigned __int8 *)off_1F2C91B68
                                                       + (-35 * ((qword_1EA70FB08 + v1) ^ 0xD8))) ^ 0xABu)
                                                    - 8) ^ (-35 * ((qword_1EA70FB08 + v1) ^ 0xD8)))
                  + 42);
  unint64_t v5 = (unint64_t)&v12[*v4 ^ v1];
  uint64_t v6 = 1226760413 * v5 - 0x5B705F9A26A579D8;
  uint64_t v7 = 1226760413 * (v5 ^ 0x5B705F9A26A579D8);
  *(void *)(v0 - 4) = v6;
  uint64_t *v4 = v7;
  LOBYTE(v7) = -35 * ((v7 - *(_DWORD *)(v0 - 4)) ^ 0xD8);
  unsigned int v8 = (unsigned __int8 *)off_1F2C91CB0;
  int v9 = (char *)off_1F2C91DA8 - 4;
  *(_DWORD *)*(&off_1F2C91B30
             + (*((unsigned char *)off_1F2C91DA8
                                 + (*((unsigned __int8 *)off_1F2C91CB0 + v7) ^ 0x4Du)
                                 - 4) ^ v7)
             - 13) = 526347143;
  BOOL v10 = (char *)*(&off_1F2C91B30
                + ((-35 * ((qword_1EA70FB08 + dword_1EA7106D8) ^ 0xD8)) ^ byte_1D54D30A0[byte_1D54CE550[(-35 * ((qword_1EA70FB08 + dword_1EA7106D8) ^ 0xD8))] ^ 0x8C])
                + 116)
      - 4;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))&v10[8
                                               * ((-35 * (*(_DWORD *)(v0 - 4) ^ 0xD8 ^ *(_DWORD *)v4)) ^ v3[v2[(-35 * (*(_DWORD *)(v0 - 4) ^ 0xD8 ^ *(_DWORD *)v4))] ^ 0x11])
                                               + 17696])(512);
  *(void *)((char *)*(&off_1F2C91B30
                      + ((-35 * (*(_DWORD *)(v0 - 4) ^ 0xD8 ^ *(_DWORD *)v4)) ^ v9[v8[(-35 * (*(_DWORD *)(v0 - 4) ^ 0xD8 ^ *(_DWORD *)v4))] ^ 0x4D])
                      - 19)
            - 4) = v11;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4A85C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  *a6 = 0;
  *a7 = 0;
  a22 = 108757529 * (((~&a21 & 0x37AB7138) - (~&a21 | 0x37AB7139)) ^ 0xD7371312) - 504207030;
  uint64_t v24 = (*(uint64_t (**)(int *))(v23 + 17848))(&a21);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((1653 * (a21 == v22)) ^ 0x160)))(v24);
}

uint64_t sub_1D4A85D5C(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, uint64_t a13, int a14)
{
  int v20 = ((v19 - 270) | 0x4A8) + *a1 - v18 + *(_DWORD *)(v14 - 0x2C138C8FAF40FC12) - 483383190;
  unsigned int v21 = 1759421093 * (&a11 ^ 0xB37DB054);
  a14 = v19 - v21 + 94;
  a13 = v14;
  a11 = v20 - v21 + 1509852572;
  a12 = v21 + 1752598896;
  uint64_t v22 = (*(uint64_t (**)(int *))(v17 + 8 * (v19 ^ 0xAD6)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1612 * (*v16 == v15)) ^ v19)))(v22);
}

void sub_1D4A85E2C()
{
}

uint64_t sub_1D4A85E80(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v10 = v7 + a3 > (v8 ^ 0x777) + 1263549681 || v7 + a3 < a6;
  return (*(uint64_t (**)(void))(v6 + 8 * ((14 * v10) ^ v8)))();
}

uint64_t sub_1D4A85EC8@<X0>(uint64_t a1@<X8>)
{
  int v5 = v3 - (((((v2 - 620) | 2) ^ 0x432986) + v4) & 0xF9F4F0) + 2132709394;
  unsigned int v6 = 1755732067 * ((v8 & 0x9095DB2C | ~(v8 | 0x9095DB2C)) ^ 0xB1AC9908);
  uint64_t v9 = a1;
  v8[0] = v5 ^ v6;
  v8[1] = (v2 - 1) ^ v6;
  return (*(uint64_t (**)(_DWORD *))(v1 + 8 * (v2 ^ 0xDAC)))(v8);
}

uint64_t sub_1D4A85F64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = v4 - 1605109252 + v3 + 262 * (v5 ^ 0x45Du);
  long long v8 = *(_OWORD *)(v1 + v7 - 15);
  long long v9 = *(_OWORD *)(v1 + v7 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((89 * ((v2 & 0xFFFFFFE0) != 32)) ^ (v5 - 31))))();
}

uint64_t sub_1D4A85FCC@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1268));
  return v3(v1);
}

uint64_t sub_1D4A85FFC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(v5 - 220 + v2 + a2) = -21;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v3 - 2) ^ (2 * ((unint64_t)(v2 + a2 + 1) < 0x40)))))();
}

uint64_t sub_1D4A86044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((a6 - 270952346) & 0x102662CE) - 647) * (v6 == v7)) ^ a6)))();
}

uint64_t sub_1D4A8607C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((492 * ((((STACK[0x420] - 340) ^ 0x306) & a1) == 0)) ^ (STACK[0x420] + 673))))();
}

uint64_t sub_1D4A860B0@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((22 * (a2 - 1340507626 >= (((a1 + v3 + 212) | 1) ^ 0xEDu))) | (a1 + v3 + 544))))();
}

uint64_t sub_1D4A860FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  unint64_t v50 = STACK[0x4F0];
  int v51 = LODWORD(STACK[0x5B4]) ^ 0x7EF5EFAF;
  unsigned int v52 = (2 * LODWORD(STACK[0x5B4])) & 0xFDEBDF5E;
  int v53 = 235795823 * ((((2 * (v49 - 200)) | 0x7ACDC568) - (v49 - 200) - 1030152884) ^ 0xA9CBABED);
  *(void *)(v47 + _Block_object_dispose(&STACK[0x368], 8) = v43;
  *(void *)(v47 + 16) = a42;
  *(void *)(v47 + 32) = v45;
  *(_DWORD *)(v49 - 136) = (v46 ^ 0xFDFEB9FB) + v51 + v52 + v53;
  *(unsigned char *)(v47 + 24) = 111 * ((((2 * (v49 + 56)) | 0x68) - (v49 + 56) + 76) ^ 0xED) - 67;
  *(void *)(v47 + 56) = v50;
  *(void *)(v47 + 4_Block_object_dispose(&STACK[0x368], 8) = a43;
  *(_DWORD *)(v49 - 160) = (v46 - 613) ^ v53;
  *(_DWORD *)(v49 - 200) = (v44 + ((v46 + 441712373) & 0xE5ABFF7A) - 1082863669) ^ v53;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v48 + 8 * (v46 ^ 0xA39)))(v49 - 200);
  int v55 = *(_DWORD *)(v49 - 132);
  LODWORD(STACK[0x5D8]) = v55;
  return (*(uint64_t (**)(uint64_t))(v48 + 8 * (((2 * (v55 != 526347143)) | (32 * (v55 != 526347143))) ^ v46)))(v54);
}

uint64_t sub_1D4A86218()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((v1 - 2177) ^ 0x38D) - 944) * (v0 + v2 + 63 >= (v0 + v2))) ^ v1)))();
}

uint64_t sub_1D4A8626C()
{
  *(_DWORD *)(*(void *)(v4 - 0x139154EEB4327E8) + 4 * (((v2 - 1025) ^ (v1 + 202)) + v0)) = -595648296;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1534 * ((v0 + v1) < 0x7FFFFFFF)) ^ (v2 - 373))))();
}

uint64_t sub_1D4A862D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10)
{
  unint64_t v11 = STACK[0x380];
  BOOL v12 = (char *)&STACK[0x680] + STACK[0x380] - 0x74CFFF0833D7937CLL;
  STACK[0x568] = (unint64_t)(v12 + 1488);
  STACK[0x3E8] = (unint64_t)(v12 + 1716);
  LODWORD(STACK[0x468]) = 837403461;
  STACK[0x5E0] = v11 - 192;
  STACK[0x488] = 0;
  LODWORD(STACK[0x5B0]) = 2079419384;
  STACK[0x3F0] = (unint64_t)(v12 + 1488);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((a9 - 5) ^ ((4 * (v12 + 1488 == (char *)-248)) | (32 * (v12 + 1488 == (char *)-248))))))(a1, a2, a3, a4, a5, a6, a7, a8, a10);
}

uint64_t sub_1D4A862DC()
{
  LODWORD(STACK[0x42C]) = v1 - 1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 + 265062587) ^ (((v1 - 1) & 0xFFFFFFFC) == 2079419384)) & 1) == 0)
                                * (((v0 - 1700) | 0x440) - 991)) ^ v0)))();
}

uint64_t sub_1D4A86340@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x2C138C8FAF40FC12) - 272911807;
  unsigned int v4 = *(_DWORD *)(v2 - 0x2C138C8FAF40FC16) - 1043127620;
  BOOL v5 = v3 < 0xFD35260C;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0xFD35260C) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(a2 + 8 * ((251 * (((a1 + 47) ^ v6) & 1)) ^ a1)))();
}

uint64_t sub_1D4A863EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,int a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  unsigned int v61 = a25 - (((((a60 + 1348018224) & 0xAFA6DE57) + 1022) ^ 0xF87597AC) & (2 * a22)) + 1137704974;
  return (*(uint64_t (**)(void))(v60
                              + 8
                              * ((986
                                * (((2 * v61) & 0xCBD6F376 ^ 0xC8549376) + (v61 ^ 0x19D1B644) - 82316257 == 1627614682)) ^ a60)))();
}

uint64_t sub_1D4A864C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((47 * (~a18 + v19 - a1 < (v18 ^ (a5 - 378) ^ 0xFFFFFFFFFFFFFFCELL) + (v18 ^ (a5 - 378)))) ^ v18)))();
}

uint64_t sub_1D4A86508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t))(v11
                                            + 8
                                            * ((((v10 + 348) ^ (v10 + 196))
                                              * (*(_DWORD *)(v12 - 144) == *(_DWORD *)(v12 - 152))) ^ v10)))(a10);
}

void sub_1D4A86544()
{
}

uint64_t sub_1D4A86554(int a1, uint64_t a2, int a3)
{
  if ((v4 + v3 - 1522488794) > 0x40) {
    int v6 = v4 + v3 - 1522488794;
  }
  else {
    int v6 = 64;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((47 * (a3 - v4 - v3 + v6 < ((a1 - 730) | 0x140u) - 355)) ^ a1)))();
}

uint64_t sub_1D4A865FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, int a4@<W8>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int32x4_t a9@<Q7>)
{
  uint64_t v13 = (const float *)(v9 + 908);
  int8x16_t v14 = (int8x16_t)vld1q_dup_f32(v13);
  a5.i64[0] = *(void *)(v9 + 912);
  a5.i32[2] = *(_DWORD *)(v9 + 920);
  int8x16_t v15 = vextq_s8(v14, a5, 0xCuLL);
  int8x16_t v16 = a5;
  v16.i32[3] = *(_DWORD *)(v9 + 924);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a6), vandq_s8(v15, v12)), 1uLL), a7);
  v18.i32[0] = *(_DWORD *)(a3 + 4 * (*(_DWORD *)(v9 + 912) & 1));
  v18.i32[1] = *(_DWORD *)(a3 + 4 * (*(_DWORD *)(v9 + 916) & 1));
  v18.i32[2] = *(_DWORD *)(a3 + 4 * (*(_DWORD *)(v9 + 920) & ((a4 ^ 0x70Cu) - 708)));
  v18.i32[3] = *(_DWORD *)(a3 + 4 * (v16.i8[12] & 1));
  *(int8x16_t *)(v9 + 90_Block_object_dispose(&STACK[0x368], 8) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)v9, v18), v11), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), a8)), a9));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8 * a4))(a1, a2, 1804);
}

uint64_t sub_1D4A866C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * ((((v9 - 1046) ^ 0x224)
                                                                                 * ((v8 & 0x18) == 0)) ^ v9)))(a1, a2, a3, a4, (a4 - a7));
}

uint64_t sub_1D4A866F8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((23
                                * (a14 + v17 - 220 + (unint64_t)(v15 + v14 - 1) >= ((a1 + 138) ^ 0x7C7uLL))) ^ a1)))();
}

uint64_t sub_1D4A86744(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a4 - 938) & a5) == 2139086816) * (a4 + 802)) ^ a4)))();
}

uint64_t sub_1D4A86778@<X0>(int a1@<W8>)
{
  *(void *)(v2 - 0x1244BACB8843828DLL) = (v1 ^ 0x3B6u) + a1 + *v3 + *(void *)(v4 - 0x2C138C8FAF40FC22) + 8;
  return (*(uint64_t (**)(void))(v7 + 8 * ((950 * (*v6 != ((v1 + 86) ^ (v5 - 510)))) ^ v1)))();
}

uint64_t sub_1D4A867E8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ (8 * ((v1 ^ 0x302u) * v2 + 4 == v0 - 2079419384)))))();
}

uint64_t sub_1D4A8682C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v2 + a2 + a1) = v4;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((13 * (a2 + a1 + (unint64_t)(7 * ((17 * (v3 ^ 0x61D)) ^ 0x672u)) - 20 < 0x40)) ^ (17 * (v3 ^ 0x61D)))))();
}

uint64_t sub_1D4A8687C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 + v1 + ((v2 - 1732) ^ 0x89400568) < 0xC) * (v2 ^ 0x85B)) ^ v2)))();
}

uint64_t sub_1D4A868C4()
{
  int v5 = 35 * (v2 ^ 0x1BB) + *(unsigned __int8 *)(v3 + 2) - 317;
  return (*(uint64_t (**)(void))(v4 + 8 * ((963 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1D4A86918@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 8 * (a1 ^ 0xA05)))(*v4);
  _DWORD *v3 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 1667755604;
  *(_DWORD *)(v1 + 56) = 651598691;
  return result;
}

uint64_t sub_1D4A86968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((127 * ((((v6 + 1688) ^ 0x1FD ^ (v5 == a5)) & 1) == 0)) ^ v6)))();
}

uint64_t sub_1D4A869A0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((30 * (v3 + 1 == v2 + 44)) ^ v0)))();
}

uint64_t sub_1D4A86A8C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((50 * (v1 > 0x82)) ^ (v0 + 594))))();
}

uint64_t sub_1D4A86ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((489 * ((v6 ^ (a6 + 5) ^ (((v7 + 928608668) & 0xC8A68ECF) - a5 - 207)) > 7)) ^ (v7 + 1159))))();
}

uint64_t sub_1D4A86B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((v5 + a5 - 1598 + 191472129) & 0x6695D123) - 270) * (v6 < 0x20)) ^ (a5 - 1598))))();
}

uint64_t sub_1D4A86B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,unint64_t *a23,unint64_t *a24,unsigned int a25)
{
  a23 = &STACK[0x237357D135FF6929];
  a24 = &STACK[0x3EA9131FAE910FF8];
  a22 = a18;
  a25 = (v27 - 824) ^ (1225351577
                     * ((((2 * &a21) | 0xE5132B40) - &a21 + 225864288) ^ 0xD1134DB6));
  uint64_t v29 = (*(uint64_t (**)(char *))(v28 + 8 * (v27 + 1174)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * ((((v27 - 903) ^ 0x322) * (v25 < v26)) ^ (v27 + 246))))(v29);
}

uint64_t sub_1D4A86C48()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2251
                                * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ (v1 + v2 + 575 - 820)) == v1)) ^ v2)))();
}

uint64_t sub_1D4A86C88(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((748
                                * ((v6 & (2 * (*(unsigned __int8 *)(a2 + 6) - 44)))
                                 + ((*(unsigned __int8 *)(a2 + 6) - 44) ^ ((a3 ^ (v4 - 163)) + a4)) == v7)) ^ a3)))();
}

uint64_t sub_1D4A86CCC(_DWORD *a1)
{
  int v5 = *a1 ^ v1;
  unsigned int v6 = *(_DWORD *)(v3 + 352);
  if (v6 > 0x404B9DC4 != v5 - 1511209020 < ((v4 - 836) ^ 0xBFB466FC)) {
    BOOL v7 = v6 > 0x404B9DC4;
  }
  else {
    BOOL v7 = v6 + (v4 ^ 0xBFB46A30) > v5 - 1511209020;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((30 * v7) ^ v4)))();
}

uint64_t sub_1D4A86D48@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v1 + (v4 + v2)) = *(unsigned char *)(v5 + (v4 + v2))
                                           - ((2 * *(unsigned char *)(v5 + (v4 + v2))) & 0xD6)
                                           - 21;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 - 1 == a1) * (((v3 + 791) | 0x2F0) ^ 0x712)) ^ v3)))();
}

uint64_t sub_1D4A86D98()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 ^ 0x788) - 143) ^ 0x3C5) * ((v1 + v0 - 268107771) > 7)) ^ v2)))();
}

uint64_t sub_1D4A86DE0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((79 * (v3 + 8 == 31 * (a2 ^ 0x507) - 1115)) ^ a2)))();
}

uint64_t sub_1D4A86E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v21 = v18 - 1900653136;
  unsigned int v22 = v21 + (a18 ^ 0x324) - 587;
  if (v22 <= 0x40) {
    unsigned int v22 = 64;
  }
  BOOL v23 = !__CFADD__(v21 + 631, v19 + v22);
  return (*(uint64_t (**)(void))(v20 + 8 * ((4011 * v23) ^ a18)))();
}

uint64_t sub_1D4A86E7C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((867
                                * (((v0 + ((5 * (v2 ^ 0x118) - 724) | 0x95) - 245) & (2
                                                                                    * (*(unsigned __int8 *)(v3 + 8) - 5)))
                                 + ((*(unsigned __int8 *)(v3 + 8) - 5) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1D4A86ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int32x4_t a35,int32x4_t a36,int32x4_t a37,int32x4_t a38)
{
  __n128 v47 = (__n128)vdupq_n_s32(0x3EBED70Eu);
  uint64_t v48 = (const char *)(v46 - 220);
  __n128 v49 = (__n128)vdupq_n_s32(0x1F5F6B87u);
  v50.n128_u64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v50.n128_u64[1] = 0xEBEBEBEBEBEBEBEBLL;
  v51.n128_u64[0] = 0xD6D6D6D6D6D6D6D6;
  v51.n128_u64[1] = 0xD6D6D6D6D6D6D6D6;
  __n128 v52 = (__n128)vdupq_n_s32(0x1F5F6B8Fu);
  int v53 = *(uint64_t (**)(uint64_t, __n128, __n128, __n128, __n128, __n128))(v40 + 8 * v38);
  int v54 = *(_DWORD *)(v46 - 144);
  uint64_t v55 = *(unsigned int *)(v46 - 148);
  int v57 = *(_DWORD *)(v46 - 140);
  unsigned int v56 = *(_DWORD *)(v46 - 136);
  int v58 = *(unsigned char *)(v46 - 124) ^ 0xDD;
  if (v58 == 2)
  {
    int8x16x4_t v102 = vld4q_s8(v48);
    uint8x16_t v83 = (uint8x16_t)veorq_s8(v102.val[0], (int8x16_t)v50);
    uint16x8_t v84 = vmovl_u8(*(uint8x8_t *)v83.i8);
    uint16x8_t v85 = vmovl_high_u8(v83);
    uint8x16_t v86 = (uint8x16_t)veorq_s8(v102.val[1], (int8x16_t)v50);
    _Q22 = vmovl_u8(*(uint8x8_t *)v86.i8);
    _Q21 = vmovl_high_u8(v86);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    uint8x16_t v91 = (uint8x16_t)veorq_s8(v102.val[2], (int8x16_t)v50);
    uint16x8_t v92 = vmovl_high_u8(v91);
    uint16x8_t v93 = vmovl_u8(*(uint8x8_t *)v91.i8);
    v102.val[0] = veorq_s8(v102.val[3], (int8x16_t)v50);
    v102.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v102.val[0]);
    v102.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v102.val[0].i8);
    int32x4_t v94 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v93.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v84.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v102.val[0].i8));
    int32x4_t v95 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v93, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v84), 0x18uLL)), (int8x16_t)vmovl_high_u16((uint16x8_t)v102.val[0]));
    v102.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v92.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v85.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v102.val[1].i8));
    int32x4_t v96 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v92, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v85), 0x18uLL)), (int8x16_t)vmovl_high_u16((uint16x8_t)v102.val[1]));
    a37 = vaddq_s32(vsubq_s32((int32x4_t)v102.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v102.val[0], (int32x4_t)v102.val[0]), (int8x16_t)v47)), (int32x4_t)v49);
    a38 = vaddq_s32(vsubq_s32(v96, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v96, v96), (int8x16_t)v47)), (int32x4_t)v49);
    a35 = vaddq_s32(vsubq_s32(v94, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v94, v94), (int8x16_t)v47)), (int32x4_t)v49);
    a36 = vaddq_s32(vsubq_s32(v95, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v95, v95), (int8x16_t)v47)), (int32x4_t)v49);
    uint64_t v97 = (_DWORD *)&a35 + v43 + 1824787902;
    int v98 = *((_DWORD *)&a35 + ((a5 + v41 - 60) ^ (unint64_t)(v43 - 293)) + 1824787902) ^ *(v97 - 3);
    int v99 = *(v97 - 16) ^ *(v97 - 14) ^ (v98 + v45 - ((2 * v98) & 0x3EBED70E));
    HIDWORD(v100) = v99 ^ v45;
    LODWORD(v100) = v99;
    _DWORD *v97 = (v100 >> 31) + v45 - ((2 * (v100 >> 31)) & 0x3EBED70E);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40
                                                                + 8
                                                                * (((16 * (v44 == 1824787839)) | ((v44 == 1824787839) << 6)) ^ (a5 + v41 + 654))))(3623878656, 64052174, v55);
  }
  else if (v58 == 1)
  {
    int8x16x4_t v101 = vld4q_s8(v48);
    uint8x16_t v59 = (uint8x16_t)veorq_s8(v101.val[0], (int8x16_t)v50);
    uint16x8_t v60 = vmovl_u8(*(uint8x8_t *)v59.i8);
    int8x16_t v61 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8);
    int8x16_t v62 = (int8x16_t)vmovl_high_u16(v60);
    uint16x8_t v63 = vmovl_high_u8(v59);
    int8x16_t v64 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v63.i8);
    int8x16_t v65 = (int8x16_t)vmovl_high_u16(v63);
    uint8x16_t v66 = (uint8x16_t)veorq_s8(v101.val[1], (int8x16_t)v50);
    uint16x8_t v67 = vmovl_high_u8(v66);
    uint16x8_t v68 = vmovl_u8(*(uint8x8_t *)v66.i8);
    uint8x16_t v69 = (uint8x16_t)veorq_s8(v101.val[2], (int8x16_t)v50);
    _Q26 = (int8x16_t)vmovl_high_u8(v69);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v69.i8);
    int8x16_t v72 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    int8x16_t v77 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v101.val[0] = veorq_s8(v101.val[3], (int8x16_t)v50);
    v101.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v101.val[0]);
    v101.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v101.val[1]);
    v101.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v101.val[0].i8);
    v101.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v101.val[0]);
    v101.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v101.val[0].i8), 0x18uLL), v72), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v68.i8, 8uLL), v61));
    v101.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v101.val[3], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v68, 8uLL), v62));
    v101.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v101.val[1].i8), 0x18uLL), v77), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v67.i8, 8uLL), v64));
    v101.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v101.val[2], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v67, 8uLL), v65));
    int32x4_t v78 = (int32x4_t)veorq_s8(vandq_s8(v101.val[0], (int8x16_t)v52), (int8x16_t)(*(_OWORD *)&v61 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
    int32x4_t v79 = (int32x4_t)veorq_s8(vandq_s8(v101.val[3], (int8x16_t)v52), (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
    int32x4_t v80 = (int32x4_t)veorq_s8(vandq_s8(v101.val[1], (int8x16_t)v52), (int8x16_t)(*(_OWORD *)&v64 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
    int32x4_t v81 = (int32x4_t)veorq_s8(vandq_s8(v101.val[2], (int8x16_t)v52), (int8x16_t)(*(_OWORD *)&v65 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
    a37 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[1], vaddq_s32(v80, v80)), (int32x4_t)v49);
    a38 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[2], vaddq_s32(v81, v81)), (int32x4_t)v49);
    a35 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[0], vaddq_s32(v78, v78)), (int32x4_t)v49);
    a36 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[3], vaddq_s32(v79, v79)), (int32x4_t)v49);
    return (*(uint64_t (**)(uint64_t, uint64_t, void, __n128))(v40
                                                                       + 8 * ((v41 + 541807691) & 0x34538EED ^ 0x1Eu)))(3299963166, a2, v56, v47);
  }
  else
  {
    *(_DWORD *)(v46 - 14_Block_object_dispose(&STACK[0x368], 8) = 2 * (*(_DWORD *)(v46 - 148) ^ v39) + v39 - (v42 & (4 * (*(_DWORD *)(v46 - 148) ^ v39)));
    *(_DWORD *)(v46 - 144) = 2 * (v54 ^ v39) + v39 - (v42 & (4 * (v54 ^ v39)));
    *(_DWORD *)(v46 - 140) = 2 * (v57 ^ v39) + v39 - (v42 & (4 * (v57 ^ v39)));
    *(_DWORD *)(v46 - 136) = 2 * (v56 ^ v39) + v39 - (v42 & (4 * (v56 ^ v39)));
    return v53(3299963166, v47, v49, v50, v51, v52);
  }
}

uint64_t sub_1D4A86FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(v17 - 112) = v12 + 1224239923 * ((v17 + 1260386870 - 2 * ((v17 - 144) & 0x4B1FFAC6)) ^ 0xB9AC0711) - 32;
  *(void *)(v17 - 144) = v14;
  *(void *)(v17 - 136) = a11;
  *(void *)(v17 - 104) = v13;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x368], 8) = v13;
  *(void *)(v17 - 120) = v15;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v12 + 1106)))(v17 - 144);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((110 * ((((v12 + 124) | 0x200) ^ 0xF8585898) + v11 > 0x7FFFFFFE)) ^ (v12 - 872))))(v18);
}

uint64_t sub_1D4A8704C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,unsigned int a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  if (a38 < 0xDC9AD618 != (a37 + a42) < 0xDC9AD618) {
    BOOL v43 = (a37 + a42) < 0xDC9AD618;
  }
  else {
    BOOL v43 = a37 + a42 > a38;
  }
  return (*(uint64_t (**)(void))(v42 + 8 * ((!v43 * ((a3 + 1349) ^ 0x553)) ^ (a3 + 1370))))();
}

uint64_t sub_1D4A87058()
{
  int v5 = 1178560073 * ((2 * ((v4 - 120) & 0x128615B8) - (v4 - 120) - 310777277) ^ 0x57ED9221);
  *(void *)(v4 - 112) = v4 + 0x72E93EC0CCAF56A6;
  *(_DWORD *)(v4 - 120) = (v0 ^ 0x5E4C3EC8) - v5;
  *(_DWORD *)(v4 - 104) = v3 - v5 - 1882358660;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v3 + 1080)))(v4 - 120);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((*v2
                                              - 386070185
                                              + ((*(_DWORD *)(v4 - 152) << ((v3 ^ 0x1F) + (v3 ^ 0xE4) + 6)) & 0x64 ^ 0x40)
                                              + (*(_DWORD *)(v4 - 152) & 0x3F ^ 0xFDDFDFD6) < 0xFFFFFFC0) ^ v3)))(v6);
}

uint64_t sub_1D4A871D4()
{
  int v5 = (v2 ^ 0x149) + *(unsigned __int8 *)(v3 + 5) - 258;
  return (*(uint64_t (**)(void))(v4 + 8 * ((698 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1D4A87214@<X0>(int a1@<W0>, const char *a2@<X3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int8x16_t a20,uint64_t a21,int a22,int a23)
{
  int8x16x4_t v62 = vld4q_s8(a2);
  uint8x16_t v35 = (uint8x16_t)veorq_s8(v62.val[0], v33);
  int8x16_t v36 = (int8x16_t)vmovl_high_u16(vmovl_u8(*(uint8x8_t *)v35.i8));
  uint16x8_t v37 = vmovl_high_u8(v35);
  int8x16_t v38 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v37.i8);
  int8x16_t v39 = (int8x16_t)vmovl_high_u16(v37);
  uint8x16_t v40 = (uint8x16_t)veorq_s8(v62.val[1], v33);
  uint16x8_t v41 = vmovl_high_u8(v40);
  uint8x16_t v42 = (uint8x16_t)veorq_s8(v62.val[2], v33);
  _Q21 = (int8x16_t)vmovl_high_u8(v42);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v42.i8);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v49 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v62.val[0] = veorq_s8(v62.val[3], v33);
  v62.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v62.val[0]);
  v62.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v62.val[1]);
  v62.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(vmovl_u8(*(uint8x8_t *)v62.val[0].i8)), 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(vmovl_u8(*(uint8x8_t *)v40.i8), 8uLL), v36));
  v62.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v62.val[1].i8), 0x18uLL), v49), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v41.i8, 8uLL), v38));
  v62.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v62.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v41, 8uLL), v39));
  int32x4_t v50 = (int32x4_t)veorq_s8(vandq_s8(v62.val[3], a20), (int8x16_t)(*(_OWORD *)&v36 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  int32x4_t v51 = (int32x4_t)veorq_s8(vandq_s8(v62.val[1], a20), (int8x16_t)(*(_OWORD *)&v38 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  int32x4_t v52 = (int32x4_t)veorq_s8(vandq_s8(v62.val[2], a20), (int8x16_t)(*(_OWORD *)&v39 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  void v27[2] = vaddq_s32(vsubq_s32((int32x4_t)v62.val[1], vaddq_s32(v51, v51)), v34);
  v27[3] = vaddq_s32(vsubq_s32((int32x4_t)v62.val[2], vaddq_s32(v52, v52)), v34);
  v27[1] = vaddq_s32(vsubq_s32((int32x4_t)v62.val[3], vaddq_s32(v50, v50)), v34);
  int v53 = v23;
  int v54 = v24;
  int v56 = a1 ^ v32;
  int v57 = ((a23 + 199) ^ (v32 - 181) ^ v25)
      + a3
      + ((v53 ^ v32) & (a1 ^ 0x242EA431) | (v54 ^ v32) & v56)
      + *((_DWORD *)*(&off_1F2C91B30 + (a23 ^ 0x32)) + v29 + 290758882)
      + (v27->i32[(*((unsigned char *)*(&off_1F2C91B30 + (a23 ^ 0x55)) + v29 + 290758882) - 72)] ^ v26);
  uint64_t v58 = (uint64_t)*(&off_1F2C91B30 + a23 + 50);
  unsigned int v59 = (v57 + v32 - (v30 & (2 * v57))) ^ v32;
  unsigned int v60 = ((v59 << (*(unsigned char *)(v58 + v29 + 290758882) - 76)) | (v59 >> (76 - *(unsigned char *)(v58 + v29 + 290758882)))) + v56;
  return (*(uint64_t (**)(void))(v28
                                           + 8 * ((4 * (v31 != 290758867)) | ((v31 != 290758867) << 7) | (a23 + 1827))))(v60 + v32 - (v30 & (2 * v60)));
}

uint64_t sub_1D4A87444@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, char a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v23 = 4 * a1;
  unint64_t v24 = ((0xF41BD8C901F2D9AFLL >> (((-66 * (v22 ^ 0x19)) ^ a4) + 72)) ^ v18)
      + (v16 ^ (v13 + 1290) ^ (446 * (v22 ^ 0x319))) * (unint64_t)(**v21 ^ v13)
      + (*(_DWORD *)(a12 + v23) ^ v13);
  *(_DWORD *)(a12 + v23) = (v24 + a2 - (v15 & (2 * v24))) ^ v12;
  BOOL v26 = a3 + 1 < v17 && a3 + 1 >= v20;
  return (*(uint64_t (**)(void))(v19 + 8 * ((v26 * v14) ^ (446 * (v22 ^ 0x319)))))();
}

uint64_t sub_1D4A874F0(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 0;
  }
  int v4 = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((182 * v4) ^ 0x260u)))();
}

uint64_t sub_1D4A87534(uint64_t a1)
{
  unsigned int v5 = *(_DWORD *)(v3 + 336);
  unsigned int v6 = (*(_DWORD *)(a1 + 4) ^ v1) - 1008027242;
  if (v5 > 0x17FAD589 != v6 < 0xE8052A76) {
    BOOL v7 = v5 > 0x17FAD589;
  }
  else {
    BOOL v7 = v5 - 402314634 > v6;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((2 * (((v4 - 44) ^ v7) & 1)) & 0xF7 | (8
                                                                                        * (((v4 - 44) ^ v7) & 1))) ^ v4)))();
}

uint64_t sub_1D4A875B0()
{
  int v4 = (_DWORD *)STACK[0x3E0];
  int v5 = LODWORD(STACK[0x454])++;
  _DWORD *v4 = v5 + 405273881;
  unint64_t v6 = STACK[0x2F8];
  int v7 = STACK[0x2F8] + 1;
  int v8 = ((v0 ^ 0x69E) - 1518279842) & 0xE5E6FF82 ^ STACK[0x2F8];
  int v9 = ((v0 ^ 0x69E) - 1518279807) ^ STACK[0x2F8];
  uint64_t v10 = v3 - 200;
  *(void *)(v10 + 16) = (*v1 - 1518389094) ^ STACK[0x2F8];
  *(_DWORD *)(v3 - 176) = (v0 ^ 0x69E) - v6 + 2104631275;
  *(_DWORD *)(v3 - 172) = v7;
  *(_DWORD *)(v3 - 200) = v8;
  *(_DWORD *)(v3 - 196) = (v0 ^ 0x69E) - 1518279842 - v6;
  *(_DWORD *)(v3 - 192) = v9;
  *(void *)(v10 + 32) = STACK[0x2F0];
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0xA33)))(v3 - 200);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 160)))(v11);
}

uint64_t sub_1D4A87680@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  HIDWORD(a35) = v50;
  unsigned int v60 = (const char *)(a4 + ((7 * (a7 ^ 0x3E)) ^ (a2 + 4)) + v49);
  int8x16_t v61 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * a7);
  int v62 = STACK[0x338];
  int v63 = STACK[0x338];
  int v64 = STACK[0x33C];
  uint64_t v65 = LODWORD(STACK[0x340]);
  int v66 = STACK[0x33C];
  int v67 = STACK[0x340];
  LODWORD(v91) = LOBYTE(STACK[0x34C]) ^ 0xFFFFFFDD;
  int v68 = LOBYTE(STACK[0x34C]) ^ 0xDD;
  if (v68 == 2)
  {
    HIDWORD(v91) = STACK[0x340];
    uint64_t v92 = *(void *)(v53 + 8 * a7);
    uint64_t v79 = LODWORD(STACK[0x344]);
    int8x16x4_t v94 = vld4q_s8(v60);
    LODWORD(a30) = STACK[0x344];
    uint8x16_t v80 = (uint8x16_t)veorq_s8(v94.val[1], v59);
    _Q17 = vmovl_u8(*(uint8x8_t *)v80.i8);
    _Q16 = vmovl_high_u8(v80);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    uint16x8_t v85 = (_DWORD *)(v56 + 4 * (v55 + 1974069450));
    int v86 = *(v85 - 8) ^ *(v85 - 3);
    uint64_t v87 = *(v85 - 16);
    int v88 = v87 ^ *(v85 - 14) ^ (v86 + v54 - ((v86 << ((v52 + 90) ^ 0x6F)) & 0x3EBED70E));
    HIDWORD(v89) = v88 ^ v54;
    LODWORD(v89) = v88;
    _DWORD *v85 = (v89 >> 31) + v54 - ((2 * (v89 >> 31)) & 0x3EBED70E);
    unint64_t v90 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * ((175 * (v58 == 1974069387)) ^ v52));
    return v90(v90, 3623878656, v87, v79, a3, a4, (v52 - 934), a6, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             v91,
             v92,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49);
  }
  else if (v68 == 1)
  {
    HIDWORD(v91) = STACK[0x340];
    int8x16x4_t v93 = vld4q_s8(v60);
    uint64_t v69 = (a1 + 1267);
    uint8x16_t v70 = (uint8x16_t)veorq_s8(v93.val[2], v59);
    _Q21 = vmovl_high_u8(v70);
    _Q20 = vmovl_u8(*(uint8x8_t *)v70.i8);
    __asm
    {
      SHLL2           V20.4S, V20.8H, #0x10
      SHLL2           V21.4S, V21.8H, #0x10
    }
    uint64_t v77 = (uint64_t)*(&off_1F2C91B30 + (int)(v69 & 0xC45BC2A2));
    return (*(uint64_t (**)(void, void, void, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * (int)v69))(*(void *)(v53 + 8 * (int)v69), *(unsigned int *)(v77 + 4 * (v58 - 16 + v55)), *(&off_1F2C91B30 + (int)(v69 ^ 0x577)), v77, *(&off_1F2C91B30 + (int)(v69 ^ 0x570)), v69, (a1 + 577) | 0x64u, v58 - 15, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             v91,
             v61,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49);
  }
  else
  {
    LODWORD(STACK[0x334]) = 2 * (LODWORD(STACK[0x334]) ^ v51) + v51 - (v57 & (4 * (LODWORD(STACK[0x334]) ^ v51)));
    LODWORD(STACK[0x338]) = (v63 ^ v51) + (v62 ^ v51) + v51 - (v57 & (2 * ((v63 ^ v51) + (v62 ^ v51))));
    LODWORD(STACK[0x33C]) = (v66 ^ v51) + (v64 ^ v51) + v51 - (v57 & (2 * ((v66 ^ v51) + (v64 ^ v51))));
    LODWORD(STACK[0x340]) = (v67 ^ v51) + (v65 ^ v51) + v51 - (v57 & (2 * ((v67 ^ v51) + (v65 ^ v51))));
    return v61(v61, a1, v65, a2, a3, a4, a5, a6, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27);
  }
}

uint64_t sub_1D4A87B9C()
{
  *(unsigned char *)(*(void *)(v3 - 0x2C138C8FAF40FC22) + (v5 - 1978662212 + v2)) = *(unsigned char *)(*(void *)(v3 - 0x2C138C8FAF40FC22) + (v2 - 226063316));
  return (*(uint64_t (**)(void))(v4 + 8 * ((76 * (v2 - 1 == v0 + 1790 + v1)) ^ (v0 + 1790))))();
}

uint64_t sub_1D4A87C04(uint64_t a1, uint64_t a2, char a3)
{
  int v9 = v7 + 4;
  int v10 = *(_DWORD *)(v6 + ((v9 - 1587210567) & 0xFFFFFFFC));
  *(unsigned char *)(v5 + (v9 - 1587210567)) = (HIBYTE(v10) ^ 0xDB)
                                                   + ((v4 - 52) ^ 0xB0)
                                                   - ((2 * (HIBYTE(v10) ^ 0xDB)) & 0xD6);
  *(unsigned char *)(v5 + (v9 - 1587210566)) = (BYTE2(v10) ^ 0xD1)
                                                   - 2 * ((BYTE2(v10) ^ 0xD1) & 0xEF ^ BYTE2(v10) & 4)
                                                   - 21;
  *(unsigned char *)(v5 + (v9 - 1587210565)) = (BYTE1(v10) ^ 0x5B)
                                                   - 2 * ((BYTE1(v10) ^ 0x5B) & 0xEF ^ BYTE1(v10) & 4)
                                                   - 21;
  *(unsigned char *)(v5 + (v9 - 1587210564)) = v10 ^ a3;
  unsigned int v11 = *v3 + 504427789;
  BOOL v12 = v11 < 0x6DAC00FF;
  BOOL v13 = v9 + 252778428 < v11;
  if ((v9 + 252778428) < 0x6DAC00FF != v12) {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((1321 * v13) ^ v4)))();
}

void sub_1D4A87C0C()
{
  LODWORD(STACK[0x53C]) = v0;
  LODWORD(STACK[0x504]) = v1;
  LODWORD(STACK[0x458]) = v2;
  LODWORD(STACK[0x5D4]) = v3;
  LODWORD(STACK[0x45C]) = v4 + 64;
  JUMPOUT(0x1D4ABCAB8);
}

uint64_t sub_1D4A87C48@<X0>(uint64_t a1@<X2>, int a2@<W5>, unsigned int a3@<W8>)
{
  unsigned int v9 = a2 + v4 - 552 + v6 - 1226009850;
  int v10 = *(_DWORD *)(v8 - 220 + (v9 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + v9) = v10 ^ 0x25;
  unsigned int v11 = v6 + v3;
  *(unsigned char *)(a1 + v11 + 1) = (BYTE2(v10) ^ 0xD1) - 2 * ((BYTE2(v10) ^ 0xD1) & 0xEF ^ BYTE2(v10) & 4) - 21;
  *(unsigned char *)(a1 + v11) = (BYTE1(v10) ^ 0x5B) + ~(2 * ((BYTE1(v10) ^ 0x5B) & 0xEF ^ BYTE1(v10) & 4)) - 20;
  *(unsigned char *)(a1 + v11 + 2) = (HIBYTE(v10) ^ 0xDB) - 2 * ((HIBYTE(v10) ^ 0xDB) & 0xEF ^ HIBYTE(v10) & 4) - 21;
  unsigned int v12 = *(_DWORD *)(v8 - 128) - 1931248329;
  BOOL v13 = v12 < a3;
  BOOL v14 = v6 - 1891176638 < v12;
  if (v6 - 1891176638 < a3 != v13) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v14 * v5) ^ v4)))();
}

uint64_t sub_1D4A87D54@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v7 = (((v3 + 692132353) | 0x2200131) ^ 0xA6520145) + v4;
  int v8 = *(_DWORD *)(v6 - 220 + (v7 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + v7) = v8 ^ 0x25;
  unsigned int v9 = v4 + a2;
  *(unsigned char *)(a1 + v9 + 1) = (BYTE2(v8) ^ 0xD1) - 2 * ((BYTE2(v8) ^ 0xD1) & 0xEF ^ BYTE2(v8) & 4) - 21;
  *(unsigned char *)(a1 + v9) = (BYTE1(v8) ^ 0x5B) + ~(2 * ((BYTE1(v8) ^ 0x5B) & 0xEF ^ BYTE1(v8) & 4)) - 20;
  *(unsigned char *)(a1 + v9 + 2) = (HIBYTE(v8) ^ 0xDB) - 2 * ((HIBYTE(v8) ^ 0xDB) & 0xEF ^ HIBYTE(v8) & 4) - 21;
  unsigned int v10 = *(_DWORD *)(v6 - 128) - 678963966;
  BOOL v11 = v10 < v2;
  BOOL v12 = v4 - 1269431826 < v10;
  if (v4 - 1269431826 < v2 != v11) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((v12 | (8 * v12)) ^ v3)))();
}

uint64_t sub_1D4A87E70@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  int v6 = (a2 - 81) | 0x40;
  *(unsigned char *)(v3 + (a1 - 951018787)) = ((79 * (v6 ^ 0x47)) ^ 0x36)
                                                  + *(unsigned char *)(v4 + (a1 - 951018787))
                                                  - ((2 * *(unsigned char *)(v4 + (a1 - 951018787))) & 0xD6);
  return (*(uint64_t (**)(void))(v5 + 8 * ((49 * (a1 - 1 != a3)) ^ v6)))();
}

uint64_t sub_1D4A87ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unint64_t *a11, char a12, int a13, uint64_t a14, int a15)
{
  char v22 = (v18 + 36) * (*(unsigned char *)(v15 + 24) - v21) - 100;
  unsigned int v23 = 1759421093 * (&a10 ^ 0xB37DB054);
  a11 = &STACK[0x335F4D7B17DD4E17];
  a14 = v20;
  a12 = ((v22 ^ 0x51) + ((2 * v22) & 0xA2) - 16) ^ (-91 * (&a10 ^ 0x54));
  a13 = v23 - 1100130128 + v19;
  a15 = v18 - v23 + 1439;
  uint64_t v24 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 + 2198)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((344 * (a10 == v16)) ^ v18)))(v24);
}

uint64_t sub_1D4A87FA0@<X0>(int a1@<W8>, uint64_t a2, int a3, int a4, unint64_t *a5, uint64_t a6, unsigned int a7)
{
  int v10 = a1 - 24;
  unsigned int v11 = 3804331 * (&a3 ^ 0x7ED525F6);
  a7 = v11 + 1608052035;
  a5 = &STACK[0x1244BACB8843828D];
  a6 = v7;
  a3 = v11 + (v9 ^ 0x3FEFD5FE) - 589300744 + ((v9 << ((a1 + 120) ^ 0x7C)) & 0x7FDFABFC);
  a4 = v11 + a1 - 24 + 289;
  uint64_t v12 = (*(uint64_t (**)(int *))(v8 + 8 * (a1 + 2024)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((505 * (*(_DWORD *)(v7 - 0x2C138C8FAF40FC0ALL) == 526347143)) ^ v10)))(v12);
}

uint64_t sub_1D4A88084()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 239) ^ 0x58A ^ ((v2 + 106) | 0x410)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1D4A880C0@<X0>(int a1@<W8>)
{
  uint64_t v8 = v2 - 1;
  *(unsigned char *)(v4 + v_Block_object_dispose(&STACK[0x368], 8) = ((v5 + v1 + 34) ^ v3) * (v5 + v1 + 51);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 != 0) * v6) ^ a1)))();
}

uint64_t sub_1D4A880CC(uint64_t a1, uint64_t a2, int a3)
{
  int v7 = v3 - 655;
  BOOL v9 = v5 - 856691106 > (int)(((v7 + 393) | a3) ^ 0x87B74EE7) && v5 - 856691106 < v4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1188 * v9) ^ v7)))();
}

uint64_t sub_1D4A88114@<X0>(uint64_t a1@<X3>, int a2@<W5>, int a3@<W8>)
{
  uint64_t v7 = (((v4 + a3 + 724) ^ (a2 + 1027)) - 1883210540) & 0xE7B13FF6;
  int v8 = **(unsigned __int8 **)(v6 + 80) - (*(unsigned __int8 *)(*(void *)(a1 + 8 * (v4 + a3 - 150)) - 2) ^ 0xEB);
  BOOL v10 = (v8 ^ 0xF9FDE26) + ((2 * v8) & 0x1F3FBC4C) - 193073152 != v5 || v7 == 0x5AD;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (int)((108 * v10) ^ v7)))(2411756756);
}

void sub_1D4A88130(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x139154EEB4327ECLL) + 110452459;
  int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL) + 110452459;
  int v4 = (v2 < -296542812) ^ (v3 < -296542812);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v6 = v2 < -296542812;
  }
  else {
    BOOL v6 = v5;
  }
  int v1 = *(_DWORD *)(a1 + 16) - 1178560073 * ((-2 - ((a1 | 0x5930FF1B) + (~a1 | 0xA6CF00E4))) ^ 0x1C5B7886);
  __asm { BRAA            X15, X17 }
}

void sub_1D4A88220(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a4 = v7;
  a5 = a1;
  a3 = v7;
  a6 = v8 + 1225351577 * (((~&a3 & 0xC516940) - (~&a3 | 0xC516941)) ^ 0x2FCBB157) - 358;
  (*(void (**)(uint64_t *))(v6 + 8 * (v8 + 665)))(&a3);
  JUMPOUT(0x1D4A8827CLL);
}

uint64_t sub_1D4A882A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v29 - 104) = a24;
  *(_DWORD *)(v29 - 112) = v26
                         + 1224239923 * ((2 * ((v29 - 144) & 0x2E58740) - (v29 - 144) + 2098886841) ^ 0x8FA9856E)
                         + 290;
  *(void *)(v29 - 144) = v24;
  *(void *)(v29 - 136) = a21;
  *(void *)(v29 - 12_Block_object_dispose(&STACK[0x368], 8) = a24;
  *(void *)(v29 - 120) = a23;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 + 1428)))(v29 - 144);
  BOOL v31 = v27 + v28 + 2 >= (((v26 - 271) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((2 * v31) | (8 * v31) | (v26 + 341))))(v30);
}

uint64_t sub_1D4A88378()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1078)))(1576);
  STACK[0x570] = v2;
  STACK[0x258] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 != 0) * (v0 - 124 + v0 + 292 - 2183)) ^ v0)))();
}

uint64_t sub_1D4A883E8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((7 * ((((v1 - 1347) ^ ((v2 + v0) < 0x7FFFFFFF)) & 1) == 0)) ^ v1)))();
}

void sub_1D4A8842C()
{
  *(_DWORD *)(v0 + _Block_object_dispose(&STACK[0x368], 8) = -526372781;
}

uint64_t sub_1D4A88438()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((79 * (31 * (((v1 - 859) | 0x402) ^ 0x507) == 1147)) ^ ((v1 - 859) | 0x402))))();
}

uint64_t sub_1D4A884C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  return (*(uint64_t (**)(void))(v15 + 8 * ((617 * (a14 == (((v14 - 6) | 0x22D) ^ v16))) ^ v14)))();
}

uint64_t sub_1D4A884F4@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((((a1 - 1420) | 2) ^ 0x9A) * (v3 == v2)) ^ a1)))();
}

uint64_t sub_1D4A88520(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 ^ 0x34C) + 1285) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1D4A88558(uint64_t a1)
{
  int v1 = 1759421093 * ((~a1 & 0xA201450D | a1 & 0x5DFEBAF2) ^ 0x117CF559);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  unsigned int v3 = *((_DWORD *)*(&off_1F2C91B30 + (v2 ^ 0x51B)) + 83);
  unsigned int v4 = (*(_DWORD *)(a1 + 16) ^ v1) + 321837373;
  BOOL v5 = v3 + 1470627956 > v4;
  if (v4 < 0x57A80074 != v3 > 0xA857FF8B) {
    BOOL v5 = v3 > 0xA857FF8B;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F2C91B30 + v2 - 1272) + 8 * ((v5 * ((v2 - 268) ^ 0x4DC)) ^ v2) - 4))();
}

uint64_t sub_1D4A8863C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(_DWORD *)(a19 + 4 * a2) = a5;
  int v22 = a2 + 1 + v19;
  BOOL v24 = v22 < a3 && v22 > v20;
  return (*(uint64_t (**)(void))(v21 + 8 * ((v24 * a4) ^ a1)))();
}

uint64_t sub_1D4A8866C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((*(unsigned char *)(v1 - 0x2C138C8FAF40FC0ELL) & 1) == 0) * (((v0 ^ 0x10A) + 325) ^ 0x6E6)) ^ v0)))();
}

uint64_t sub_1D4A886B0@<X0>(int a1@<W3>, int a2@<W5>, uint64_t a3@<X6>, int a4@<W8>, int8x16_t a5@<Q3>, int8x16_t a6@<Q5>)
{
  int8x16_t *v7 = vaddq_s8(vaddq_s8(*(int8x16_t *)(a3 + (v6 + a1)), a6), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(a3 + (v6 + a1)), *(int8x16_t *)(a3 + (v6 + a1))), a5)));
  return (*(uint64_t (**)(void))(v8 + 8 * (a2 + a4 + 1524)))();
}

uint64_t sub_1D4A88704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if (a16 == 2)
  {
    BOOL v25 = *(_DWORD *)(v23 - 128) != ((184 * (a6 ^ (a6 - 3))) ^ 0x4F9B09DA);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 8 * (v25 | (16 * v25) | (a5 + a6 + 552))))(a1, a2, a9);
  }
  else if (a16 == 1)
  {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22
                                                                + 8
                                                                * ((309
                                                                  * (((*(_DWORD *)(v23 - 128) == 1335561202) ^ (a6 + a5 - 1)) & 1)) ^ (a6 + a5 + 552))))(a1, a2, a9);
  }
  else
  {
    uint64_t v26 = (a5 - 69478993) | 0x4Au;
    unint64_t v27 = ((2 * (void)&a22) & 0xFAFA3FFFCF7ADFB0)
        + ((unint64_t)&a22 ^ 0x7D7D1FFFE7BD6FDBLL)
        + (v26 ^ 0xF6FEFAF37DFBF514);
    *(unsigned char *)(v23 - 129) = ((v27 + 24 + ((((a5 - 81) | 0x4A) + 34) | 3)) ^ 0xBA) * (v27 + 56);
    return (*(uint64_t (**)(void))(v22 + 8 * (int)v26))(0);
  }
}

uint64_t sub_1D4A888AC@<X0>(uint64_t a1@<X8>)
{
  int v3 = STACK[0x420] - 906;
  uint64_t v4 = v1[19];
  v1[39] = *(void *)(v2 + 8 * (int)(STACK[0x420] - 1110));
  v1[52] = v4;
  LODWORD(STACK[0x65C]) = 1858992376;
  int v5 = *(_DWORD *)(v4 - 0x72E93EC0CCAF573ELL);
  v1[11] = a1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1889
                                * (((v3 + 625428252) & 0xDAB8BB1E ^ 0x5ABF56F3 ^ v5 & 0x3F)
                                 + ((v5 << (v3 ^ 0xD0)) & 0x36)
                                 - 1522488845 < 0xFFFFFFC0)) ^ v3)))();
}

uint64_t sub_1D4A888D4()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1D4A8890C@<X0>(uint64_t a1@<X1>, char a2@<W4>, int a3@<W8>)
{
  unsigned int v9 = *(_DWORD *)(v8 - 220 + ((v6 + a3) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v6 + a3)) = (HIBYTE(v9) ^ 0xDB) - ((2 * (HIBYTE(v9) ^ 0xDB)) & 0xD6) - 21;
  *(unsigned char *)(a1 + (v6 + a3 + 1)) = ((v9 >> (a2 + (v5 ^ v4) + 109)) ^ 0xD1)
                                               - 2
                                               * (((v9 >> (a2 + (v5 ^ v4) + 109)) ^ 0xD1) & 0xEF ^ (v9 >> (a2 + (v5 ^ v4) + 109)) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v6 + a3 + 2)) = (BYTE1(v9) ^ 0x5B)
                                               - 2 * ((BYTE1(v9) ^ 0x5B) & 0xEF ^ BYTE1(v9) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v6 + a3 + 3)) = v9 ^ 0x25;
  unsigned int v10 = *(_DWORD *)(v8 - 128) - 980422760;
  BOOL v11 = v6 - 827128215 < v10;
  if (v6 - 827128215 < v3 != v10 < v3) {
    BOOL v11 = v10 < v3;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * (v5 ^ (4 * v11))))();
}

uint64_t sub_1D4A889FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,char a43)
{
  *(unsigned char *)(a6 + (a4 + v43 + 1567)) = *(&a43 + v46 - 713989072);
  return (*(uint64_t (**)(void))(v45
                              + 8
                              * ((49 * (a5 + v43 + 1 < (((4 * (v44 ^ 0x3DC) - 1220) | 0x38) ^ 0x7Cu))) ^ (4 * (v44 ^ 0x3DC)))))();
}

uint64_t sub_1D4A88A64()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((227 * (v2 + v0 - 1605107679 >= (v1 ^ 0x3E2u) - 662)) ^ v1)))();
}

uint64_t sub_1D4A88AC8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1F2C91FF0
                                            - 4
                                            + 8 * ((217 * (*(_DWORD *)(a2 + 4) != 2079419397)) ^ 0x15Fu)))(4294925278);
}

uint64_t sub_1D4A88B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((((v8 - 75) ^ (v9 == (((v8 + a7) & a8) + 56))) & 1)
                                * v10) ^ v8)))();
}

uint64_t sub_1D4A88B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38)
{
  return (*(uint64_t (**)(void))(v40
                              + 8
                              * (v39 ^ 0x6E8 | (4
                                              * ((v39 ^ 0x15F ^ (v38 + 514) ^ LODWORD(STACK[0x550]) ^ (((v39 ^ 0x6E8) - 1423) | 0x408)) != a38 - 24759838)))))();
}

uint64_t sub_1D4A88BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,int a40)
{
  *(_DWORD *)(v42 - 224) ^= a40;
  return (*(uint64_t (**)(void))(v41
                              + 8
                              * ((((((a38 ^ 0x26AEA25) + 34127547) | 0x622821) ^ 0x26AEDD0) * (v40 == 1)) ^ a38 ^ 0x26AEA25)))();
}

uint64_t sub_1D4A88BC8()
{
  uint64_t v7 = (void *)STACK[0x3F0];
  unint64_t v8 = STACK[0x3F0] + 264;
  v7[31] = 0x67BDBEB93F075306;
  v7[32] = v8;
  int v9 = v7 + 0x2722A9DD68651DLL;
  v7[65] = 0x67BDBEB93F075306;
  v7[66] = v7 + 67;
  STACK[0x3B0] = (unint64_t)(v7 + 0x2722A9DD68653FLL);
  v7[99] = 0x67BDBEB93F075306;
  v7[100] = v7 + 101;
  STACK[0x3D0] = (unint64_t)(v7 + 0x2722A9DD686561);
  v7[133] = 0x67BDBEB93F075306;
  v7[134] = v7 + 135;
  STACK[0x3D8] = (unint64_t)(v7 + 0x2722A9DD686583);
  v7[167] = 0x67BDBEB93F075306;
  v7[168] = v7 + 169;
  STACK[0x3E0] = (unint64_t)(v7 + 0x2722A9DD6865A5);
  unint64_t v10 = STACK[0x488] + 4;
  int v11 = v0 << (((v2 + 76) | 8) - 90);
  LODWORD(STACK[0x3F8]) = v2 + 602;
  unsigned int v12 = 1178560073 * (v4 ^ 0xBA947862);
  uint64_t v13 = v6 - 200;
  *(void *)(v13 + 16) = v10;
  *(void *)(v13 + 24) = v9;
  LODWORD(STACK[0x3C8]) = v12;
  LODWORD(v13) = v2 + 602 - v12;
  LODWORD(STACK[0x3B8]) = v13;
  *(_DWORD *)(v6 - 196) = v13;
  *(_DWORD *)(v6 - 192) = v12 + (v0 ^ 0x42A69A7E) - 17309849 + (v11 & 0xBBF3E3F2 ^ 0x3AB2C302);
  (*(void (**)(uint64_t))(v5 + 8 * (v2 ^ 0xA1E)))(v6 - 200);
  uint64_t v14 = v10 + v3;
  unsigned int v15 = 1178560073 * (((v4 | 0xAF7A9D5D) - (v4 & 0xAF7A9D5D)) ^ 0x15EEE53F);
  int v16 = STACK[0x3F8];
  unsigned int v17 = LODWORD(STACK[0x3F8]) - v15;
  uint64_t v18 = v6 - 200;
  unint64_t v19 = STACK[0x3B0];
  *(void *)(v18 + 16) = v14;
  *(void *)(v18 + 24) = v19;
  *(_DWORD *)(v6 - 196) = v17;
  *(_DWORD *)(v6 - 192) = v15 + (v0 ^ 0x42AE9E60) - 16786567 + (v11 & 0xBBE3EBCE ^ 0x3AA2C30E);
  (*(void (**)(uint64_t))(v5 + 8 * (v2 ^ 0xA1E)))(v6 - 200);
  uint64_t v20 = v14 + v3;
  int v21 = 1178560073 * (((v6 - 200) & 0xCF040D76 | ~((v6 - 200) | 0xCF040D76)) ^ 0x8A6F8AEB);
  *(_DWORD *)(v6 - 196) = v16 - v21;
  *(_DWORD *)(v6 - 192) = v21 + (v0 ^ 0x60AC9869) - 587342478 + (v11 & 0xFFE7E7DC ^ 0x3EA6C70C);
  uint64_t v22 = v6 - 200;
  unint64_t v23 = STACK[0x3D0];
  *(void *)(v22 + 16) = v20;
  *(void *)(v22 + 24) = v23;
  (*(void (**)(uint64_t))(v5 + 8 * (v2 ^ 0xA1E)))(v6 - 200);
  uint64_t v24 = v20 + v3;
  uint64_t v25 = v6 - 200;
  unint64_t v26 = STACK[0x3D8];
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = v26;
  unsigned int v27 = LODWORD(STACK[0x3C8]) + (v0 ^ 0xC3A490EE) + 2146817527 + (v11 & 0xB9F7F6D2 ^ 0x38B6D602);
  *(_DWORD *)(v6 - 196) = STACK[0x3B8];
  *(_DWORD *)(v6 - 192) = v27;
  (*(void (**)(uint64_t))(v5 + 8 * (v2 + 1554)))(v6 - 200);
  int v28 = 1178560073 * ((v6 - 437410645 - 2 * ((v6 - 200) & 0xE5EDA573)) ^ 0x5F79DD11);
  *(_DWORD *)(v6 - 196) = LODWORD(STACK[0x3F8]) - v28;
  *(_DWORD *)(v6 - 192) = v28 + (v0 ^ 0xE0A0BA7A) + 1559363427 + (v11 & 0xFFFFA3FA ^ 0x3EBE830A);
  *(void *)(v6 - 184) = v24 + v3;
  *(void *)(v6 - 176) = STACK[0x3E0];
  (*(void (**)(uint64_t))(v5 + 8 * (v2 + 1554)))(v6 - 200);
  int v29 = ((v2 + 332) | 8) - 314;
  unint64_t v30 = STACK[0x488];
  STACK[0x598] = (v29 ^ 0x840E9729) + v1;
  return (*(uint64_t (**)(unint64_t))(v5 + 8 * ((127 * ((v29 ^ 0x840E9729) + v1 == 0)) ^ v29)))(v30);
}

void sub_1D4A88FBC(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D4A89044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unsigned int v13 = v11 - 688;
  unint64_t v14 = ((unint64_t)&a10 ^ 0x5EFDF9DEDF77FFE7)
      - 0x60CC118804488E7
      + ((2 * (void)&a10) & 0xBDFBF3BDBEEFFFC0);
  a10 = (v13 ^ 0xFFFFFFFFFFFFFC34) + v10;
  *(unsigned char *)(a2 + a10) = (v14 ^ 0xBA) * (v14 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8 * (int)((1118 * (a10 == 0)) ^ v13)))(1118, a2);
}

uint64_t sub_1D4A890DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2
                                                                                + 8
                                                                                * ((386
                                                                                  * (23 * ((v3 - 205) ^ 0x6FB) == 1885)) ^ (v3 - 205))))(a1, v2 - 0x139154EEB4327E8, 1787, 23, 3103670704);
}

uint64_t sub_1D4A89120(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(void *)(a5 + (v7 - v8)) = *(void *)(v9 + (v7 - v8));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a6 + v8 == a3) * a7) ^ a2)))();
}

uint64_t sub_1D4A8914C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((237 * (v1 + 1 != v3 + 48)) ^ a1)))();
}

uint64_t sub_1D4A89228(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v4 & (2 * (*(unsigned __int8 *)(a2 + 7) - 100)))
                                 + ((*(unsigned __int8 *)(a2 + 7) - 100) ^ v5) == v5)
                                * (a3 + 1176)) ^ a3)))();
}

uint64_t sub_1D4A89260()
{
  int v5 = v0 ^ (v1 - 232);
  int v6 = v0 + 552400906;
  BOOL v7 = v2 - 1339579022 < (v3 - 1299184419);
  if (v2 - 1339579022 < (v5 + 780234685) != (v3 - 1299184419) < 0x2E8170D5) {
    BOOL v7 = (v3 - 1299184419) < 0x2E8170D5;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (((4 * v7) | (8 * v7)) ^ v6)))();
}

uint64_t sub_1D4A892E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  unsigned int v7 = v3 + 1374699841 * ((2 * (&v5 & 0x37738180) - &v5 - 930316676) ^ 0xA5786675) + 1336;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0x909)))(&v5);
}

uint64_t sub_1D4A89348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v21 = (v18 + a7) & a8;
  unint64_t v22 = a1 + v9 + (*(_DWORD *)(v19 + 4 * v20) ^ v11);
  *(_DWORD *)(v19 + 4 * v20) = v22 + v11 - ((((v21 - 1362) | 4) ^ (v12 + 669)) & (2 * v22));
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((((v21 - 1830) | v13) ^ HIDWORD(v22) ^ v14) + (v15 & (v22 >> 31)) + v16 == v10) * v17) ^ v21)))();
}

uint64_t sub_1D4A89358()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 - 100 < (((v1 ^ 0xA4A) + 1462) ^ 0x828u)) * ((23 * (v1 ^ 0x891)) ^ 0x2FE)) ^ v1 ^ 0xA4A)))();
}

uint64_t sub_1D4A893AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * ((149 * ((a3 + 1 + v5) < 0x3C)) ^ v4)))(a4, a4);
}

uint64_t sub_1D4A89478@<X0>(int a1@<W3>, int a2@<W8>)
{
  uint64_t v3 = (a2 + 477) | 0x50u;
  STACK[0x5E0] += v3 ^ 0xFFFFFFFFFFFFFDEBLL;
  LODWORD(STACK[0x46C]) = a1 + 82;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)(((STACK[0x600] == 0) * ((((v3 - 597) | 0x400) - 822) ^ 0x2BA)) ^ (v3 + 483))))();
}

uint64_t sub_1D4A894E4()
{
  *(_DWORD *)(*v2 + 4 * (((v3 - 1096) ^ (v1 + 180)) + v4)) = v0;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((2 * ((v1 + v4 - 2) >> 31)) | (8
                                                                                  * ((v1 + v4 - 2) >> 31))) ^ v3)))();
}

uint64_t sub_1D4A89524(uint64_t a1, uint64_t a2)
{
  int v6 = v2 - 391;
  (*(void (**)(void, uint64_t, void))(v4 + 8 * (v2 + 713)))(*(unsigned int *)STACK[0x2D0], a2, 0);
  uint64_t v7 = LODWORD(STACK[0x5D8]);
  unint64_t v8 = 1178560073 * ((2 * ((v5 - 200) & 0x9EFB9DEBFD6CFA8) - (v5 - 200) - 0x9EFB9DEBFD6CFA9) ^ 0xEDEC16C9FABD4835);
  *(void *)(v3 + _Block_object_dispose(&STACK[0x368], 8) = v8 + 3768594525u;
  *(void *)(v3 + 24) = v7 + v8;
  *(_DWORD *)(v5 - 160) = v6
                        + 1473596674
                        - 1178560073 * ((2 * ((v5 - 200) & 0xBFD6CFA8) - (v5 - 200) + 1076441175) ^ 0xFABD4835)
                        - 83;
  *(_DWORD *)(v5 - 16_Block_object_dispose(&STACK[0x368], 8) = (1178560073 * ((2 * ((v5 - 200) & 0xBFD6CFA8) - (v5 - 200) + 1076441175) ^ 0xFABD4835)) ^ (v6 + 1473596674) ^ 0x15;
  *(_DWORD *)(v5 - 164) = 1178560073 * ((2 * ((v5 - 200) & 0xBFD6CFA8) - (v5 - 200) + 1076441175) ^ 0xFABD4835)
                        + v6
                        + 2021362662;
  *(_DWORD *)(v5 - 196) = 1178560073 * ((2 * ((v5 - 200) & 0xBFD6CFA8) - (v5 - 200) + 1076441175) ^ 0xFABD4835);
  *(_DWORD *)(v5 - 184) = v6
                        + 1473596674
                        + 1178560073 * ((2 * ((v5 - 200) & 0xBFD6CFA8) - (v5 - 200) + 1076441175) ^ 0xFABD4835);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v6 ^ 0xC8D)))(v5 - 200);
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v5 - 200));
  LODWORD(STACK[0x2EC]) = 604952942;
  return v10(v9);
}

void sub_1D4A8952C()
{
  unsigned int v12 = (v7 + 1535915660) & 0xA473CD9B;
  uint64_t v13 = *(void *)(v10 - 0x139154EEB4327E8);
  unsigned int v14 = (*(_DWORD *)(v13 + 4 * (v11 - 1)) ^ v3) >> v1;
  uint64_t v15 = 4 * (v6 + v0 + 1308);
  *(_DWORD *)(v13 + v15) = v3 + v14 + (v12 ^ 0xFFFFFAE4 ^ v5 & (2 * v14)) + 1;
  int v16 = v2 - (*(_DWORD *)(*(void *)(v10 - 0x139154EEB4327E8) + v15) == v3);
  if (*v8 + v9 >= v4) {
    int v16 = -813990542 - v16;
  }
  _DWORD *v8 = v16;
}

uint64_t sub_1D4A89604(int a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v12 = v8 - 2144134811 + v7 - a1 + 1967;
  int8x8_t v13 = vrev64_s8(*(int8x8_t *)(v5 - 7 + v12));
  *(int8x8_t *)(v4 - 7 + v12) = vrev64_s8(vadd_s8(vsub_s8(v13, vand_s8(vadd_s8(v13, v13), v10)), v11));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 - (v6 & 0xFFFFFFF8) == -8) * (((a4 - 762) | 0x22C) ^ 0x1B1)) ^ a4)))();
}

uint64_t sub_1D4A89688(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = -4;
  }
  else {
    char v2 = -6;
  }
  *(unsigned char *)(a1 + 8_Block_object_dispose(&STACK[0x368], 8) = ((**(unsigned char **)(a2 + 8) != 0) ^ 0x3F) + v2;
  return 0;
}

uint64_t sub_1D4A896BC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v0 + 8) != 0x1244BACB8843828DLL)
                                * ((v1 - 1008) ^ 0x7BA ^ (549 * (v1 ^ 0x5AB)))) ^ v1)))();
}

uint64_t sub_1D4A8971C@<X0>(int a1@<W5>, unsigned int a2@<W8>)
{
  BOOL v4 = v2 + 1484150212 < (int)(a2 + (a1 ^ 0x16B) + ((a1 - 983387235) & 0x3A9D4CF3) + 1940435760);
  if (a2 > 0xC5742D3 != v2 + 1484150212 < -207045332) {
    BOOL v4 = a2 > 0xC5742D3;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((252 * v4) ^ a1)))();
}

uint64_t sub_1D4A897B0()
{
  void *v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_1D4A897D4@<X0>(int a1@<W5>, unsigned int a2@<W7>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int8x16_t a9@<Q7>)
{
  a5.i64[0] = *(void *)(v10 + 4);
  a5.i32[2] = *(_DWORD *)(v10 + 12);
  int8x16_t v15 = vextq_s8(a4, a5, 0xCuLL);
  int8x16_t v16 = a5;
  v16.i32[3] = *(_DWORD *)(v10 + 16);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a7), vandq_s8(v15, a6)), 1uLL), a8);
  v18.i32[0] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v10 + 4) & ((a3 ^ a2) - 788)));
  v18.i32[1] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v10 + 8) & 1));
  v18.i32[2] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v10 + 12) & 1));
  v18.i32[3] = *(_DWORD *)(v11 + 4 * (v16.i8[12] & 1));
  *(int8x16_t *)uint64_t v10 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v10 - 908), v18), v14), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), a9)), v13));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v9 != 4) * a1) ^ a3)))();
}

uint64_t sub_1D4A897E0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 + v2 + (a1 ^ 0x9E9u) - 322 < 2) * (a1 - 2199)) ^ a1)))();
}

void sub_1D4A89814()
{
  _DWORD *v0 = *(_DWORD *)(v1 - 0x2C138C8FAF40FC0ALL);
}

uint64_t sub_1D4A89864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8
                                                                      * ((v7 < (((a7 - 1026) | 0x888) ^ 0x89Cu)) | a7)))(a1, a2, a3, 0);
}

uint64_t sub_1D4A89894@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((a1 + 993848508) & 0x3C34CAFA ^ 0x8AD) * (a2 == v4)) ^ (v3 + a1 - 143))))();
}

uint64_t sub_1D4A898D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53,int a54,int a55,unsigned int a56,int a57,int a58,int a59,int a60,unsigned __int8 a61)
{
  int v67 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8 * (v61 + 34));
  uint64_t v68 = a56;
  int v69 = a61 ^ 0xDD;
  if (v69 == 2)
  {
    BOOL v76 = (unint64_t)&a44 + 4 >= a35 || v62 >= (unint64_t)&a53;
    return (*(uint64_t (**)(void, uint64_t))(v63 + 8 * (int)((a34 * v76) ^ (a3 + 777))))(a56, 64052174);
  }
  else if (v69 == 1)
  {
    int v70 = a3 + 1414;
    int v71 = a3 + 1248;
    BOOL v73 = (unint64_t)&a44 + 4 < a35 && v62 < (unint64_t)&a53;
    return (*(uint64_t (**)(void))(v63 + 8 * (((HIDWORD(a33) + v70) * v73) ^ v71)))(a56);
  }
  else
  {
    a55 = 2 * (a55 ^ v65) + v65 - (v64 & (4 * (a55 ^ v65)));
    a56 = 2 * (a56 ^ v65) + v65 - (v64 & (4 * (a56 ^ v65)));
    a57 = 2 * (a57 ^ v65) + v65 - (v64 & (4 * (a57 ^ v65)));
    a58 = 2 * (a58 ^ v65) + v65 - (v64 & (4 * (a58 ^ v65)));
    HIDWORD(a39) = a61 ^ 0xFFFFFFDD;
    return v67(v68, a2, a3, (char *)&a44 + 4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, v66 - 188, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46);
  }
}

void sub_1D4A89A84()
{
}

void sub_1D4A89A94()
{
  unint64_t v3 = STACK[0x548];
  int v4 = 1178560073 * ((((v2 - 200) | 0x33FBA1D0) - (v2 - 200) + ((v2 - 200) & 0xCC045E28)) ^ 0x896FD9B2);
  *(_DWORD *)(v2 - 200) = 1184294775 - v4;
  *(_DWORD *)(v2 - 184) = -1882357475 - v4 + v0;
  *(void *)(v2 - 192) = v3;
  (*(void (**)(uint64_t))(v1 + 8 * ((int)v0 + 2265)))(v2 - 200);
  STACK[0x5E8] = *(void *)(v1 + 8 * v0);
  JUMPOUT(0x1D4AA9B04);
}

uint64_t sub_1D4A89B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13
                                                     + 8
                                                     * ((387 * (((a13 > a12) ^ ((v14 ^ 0x75) + 74)) & 1)) ^ v14)))(a1, a2);
}

uint64_t sub_1D4A89BE8()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((15 * (v1 + 1 != v4 + 4)) ^ v2)))(v0);
}

uint64_t sub_1D4A89CAC()
{
  BOOL v5 = v0 < v4;
  if (v5 == v1 - 0x7AC82A11D32549D5 < v4) {
    LOBYTE(v5) = v1 - 0x7AC82A11D32549D5 < v0;
  }
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * (((16 * ((((v2 + 42) ^ v5) & 1) == 0)) & 0xDF | (32 * (((v2 + 42) ^ ~v5) & 1))) ^ v2)))((v2 - 690));
}

uint64_t sub_1D4A89D20(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((((((a7 - 370) | 0x84) - v7 - 302) ^ (a2 + 339)) * ((v8 & 0x18) == 0)) ^ a7)))();
}

uint64_t sub_1D4A89D5C()
{
  BOOL v5 = v1 - 1504566318 > 1169184023 || v1 - 1504566318 < (int)(((v2 - 1826503446) & 0x6CDE3F3E ^ 0xC5B0532C) + v0);
  return (*(uint64_t (**)(void))(v3 + 8 * ((31 * v5) ^ v2)))();
}

uint64_t sub_1D4A89DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 < a5 - 1335) * (((a5 - 340) | 8) - 891)) ^ a5)))(0);
}

void sub_1D4A89DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(v14 - 112) = v13 + 1374699841 * ((v14 - 128) ^ 0x6DF41809) + 695;
  *(void *)(v14 - 12_Block_object_dispose(&STACK[0x368], 8) = v12;
  *(void *)(v14 - 120) = a11;
  (*(void (**)(uint64_t))(v11 + 8 * (v13 + 1160)))(v14 - 128);
  JUMPOUT(0x1D4A89E34);
}

uint64_t sub_1D4A89E70@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  uint64_t v50 = (*(uint64_t (**)(void, void, void, void, unint64_t *, uint64_t, void, unint64_t *))(v48 + 8 * (a1 + 245)))(*v47, v42 + v43 + ((a1 + 1579853163) & 0x21D556DBu) - 1113, LODWORD(STACK[0x240]), v47[13] - 604525873, &STACK[0x1980], v44, (LODWORD(STACK[0x2EC]) - 604952942), &STACK[0x1970]);
  unint64_t v52 = STACK[0x420];
  int v53 = (v50 ^ 0xFF69CFB1) + 2025323776 + ((2 * v50) & 0xFED39F62);
  if (v53 == -2011050828) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v48
  }
                                                       + 8
                                                       * ((49
                                                         * (LODWORD(STACK[0x2C8])
                                                          - 913371510
                                                          + ((v52 + 1103) ^ 0x8E8u) < 3)) ^ ((int)v52 - 974))))(v50, v51);
  if (v53 == 2015481009)
  {
    LODWORD(STACK[0x418]) = v52 - 518;
    (*(void (**)(void, uint64_t, void))(v48 + 8 * (int)(v52 ^ 0xCF0)))(*(unsigned int *)STACK[0x2D0], v44, ((v52 - 527) ^ 0xDBF124DE) + LODWORD(STACK[0x2EC]));
    STACK[0x2C0] = (unint64_t)v47;
    unint64_t v57 = STACK[0x4F0];
    int v58 = LODWORD(STACK[0x5B4]) ^ 0x75996DFF;
    unsigned int v59 = (2 * LODWORD(STACK[0x5B4])) & 0xEB32DBFE;
    int v60 = 1755732067 * ((((v49 - 200) | 0x77060834) - (v49 - 200) + ((v49 - 200) & 0x88F9F7C8)) ^ 0xA9C0B5EF);
    *(_DWORD *)(v49 - 160) = v47[13] - v60 + 521743872;
    *(_DWORD *)(v49 - 156) = v60 + v52 - 1052;
    *(_DWORD *)(v49 - 184) = (a42 & 0x7FFFFFFF ^ 0xA89A5370) - v60 + (a41 & 0x9E4F6F76 ^ 0x8E4B4916) - 201733258;
    *(_DWORD *)(v49 - 164) = v58 - v60 + v59 - 8481860;
    int v61 = (unint64_t *)(v49 - 200);
    *int v61 = v57;
    v61[1] = (unint64_t)&STACK[0x1970];
    v61[3] = v45;
    uint64_t v62 = (*(uint64_t (**)(uint64_t))(v48 + 8 * ((int)v52 + 1232)))(v49 - 200);
    int v63 = *(_DWORD *)(v49 - 168);
    LODWORD(STACK[0x5D8]) = v63;
    return (*(uint64_t (**)(uint64_t))(v48 + 8 * ((14 * (v63 == 526347143)) ^ LODWORD(STACK[0x418]))))(v62);
  }
  else
  {
    int v54 = 3 * LODWORD(STACK[0x234]);
    unsigned int v55 = 1178560073 * ((2 * (v46 & 0x36413638) - v46 + 1237240260) ^ 0xF32AB1A6);
    LODWORD(STACK[0x2CC]) = v53;
    *(_DWORD *)(v49 - 200) = v55 + v53 - ((v54 + 2 * v53 + 264005212) & 0x3EBED70E) - 1489133866;
    *(_DWORD *)(v49 - 196) = v52 - v55 + 1113;
    *(void *)(v49 - 192) = STACK[0x238];
    uint64_t v56 = (*(uint64_t (**)(uint64_t))(v48 + 8 * ((int)v52 + 1192)))(v49 - 200);
    return (*(uint64_t (**)(uint64_t))(v48
                                              + 8
                                              * (((LODWORD(STACK[0x5D8]) == v54 + 526347077) * (v54 + 1990)) | v54)))(v56);
  }
}

uint64_t sub_1D4A89F2C()
{
  *(_DWORD *)(*(void *)(v0 + 96) + 142_Block_object_dispose(&STACK[0x368], 8) = 642161888;
  return sub_1D4A87058();
}

uint64_t sub_1D4A89F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = 1759421093 * ((-1949523746 - ((v18 - 136) | 0x8BCCA0DE) + ((v18 - 136) | 0x74335F21)) ^ 0xC74EEF75);
  *(_DWORD *)(v18 - 120) = v17 - v19 + 286;
  *(_DWORD *)(v18 - 136) = v14 - v19 + (v17 ^ 0x81E5512);
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x368], 8) = v16;
  (*(void (**)(uint64_t))(v15 + 8 * (v17 + 1473)))(v18 - 136);
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x368], 8) = a14;
  *(_DWORD *)(v18 - 120) = (v17 ^ 0x3C2) + 1178560073 * ((v18 - 136) ^ 0xBA947862) + 1579;
  *(void *)(v18 - 112) = a13;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 ^ 0xBAB)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 136) > 0x4B4B6B4Bu)
                                              * (((((v17 ^ 0x3C2) - 1935766684) & 0x736177F3) + 94) ^ 0x463)) ^ v17 ^ 0x3C2)))(v20);
}

uint64_t sub_1D4A8A078()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 - 553 + v2 + 1285 - 565) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1D4A8A0B0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((4 * (v0 != ((v1 - 475) ^ 0x274A8877))) | (32 * (v0 != ((v1 - 475) ^ 0x274A8877)))) ^ v1)))();
}

uint64_t sub_1D4A8A0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int8x16_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *a5 = vaddq_s8(vsubq_s8(*(int8x16_t *)(a8 + (v23 + v24)), vandq_s8(vaddq_s8(*(int8x16_t *)(a8 + (v23 + v24)), *(int8x16_t *)(a8 + (v23 + v24))), v26)), v27);
  BOOL v28 = (v22 ^ 0x70) == 127;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((4 * v28) | (8 * v28) | (v22 + 865))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1D4A8A148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  STACK[0x438] = *(void *)(v5 + 176);
  unsigned int v8 = ((v6 - 376) ^ 0x6FDACD83) + LODWORD(STACK[0x4DC]) - ((2 * LODWORD(STACK[0x4DC]) + 136128528) & 0xD7986BE8);
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((44 * (((2 * v8) & 0xBF57FFBE ^ 0x97106BA8) + (v8 ^ 0xB467CA2B) - 34946 == a5)) ^ (v6 - 28))))();
}

uint64_t sub_1D4A8A160()
{
  BOOL v6 = (*(_DWORD *)(v2 + 16) ^ v0) - 1781068434 > 0xFFFFFFBE
    || (*(_DWORD *)(v3 - 0x2C138C8FAF40FC0ELL) & 1) != 89 * (((v1 - 458) | 0x101) ^ 0x108) - 267;
  return (*(uint64_t (**)(void))(v4 + 8 * ((961 * v6) ^ v1)))();
}

void sub_1D4A8A1E8(_DWORD *a1@<X8>)
{
  *a1 = v2;
  *(_DWORD *)(v1 + 4) = -526372686;
}

uint64_t sub_1D4A8A1F8(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((a5 - 893) | 0x648) - 1524) * ((a3 + a2 - 1287251399) < 8)) ^ a5)))();
}

uint64_t sub_1D4A8A248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v76 = ((((2 * v70) | 0x989D4EA2) - v70 + 867260591) ^ 0x58E3EE08) * v68;
  *(_DWORD *)(v75 - 164) = v71 - v76 - 525;
  *(_DWORD *)(v75 - 200) = v76 ^ 0xC1674A5F;
  v73[1] = v69;
  v73[2] = a67;
  v73[3] = a68;
  uint64_t v77 = (*(uint64_t (**)(uint64_t))(v74 + 8 * (v71 + 1403)))(v75 - 200);
  return (*(uint64_t (**)(uint64_t))(v74 + 8 * (((*(_DWORD *)(v75 - 168) != v72) * (v71 ^ 0x385)) ^ v71)))(v77);
}

uint64_t sub_1D4A8A2EC@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(*(void *)(result + 8) - 0x5224DE3D6C39C413) = (a2 ^ 0xE0A09478)
                                                              - ((2 * (a2 ^ 0xE0A09478) + 1073656626) & 0x3EBED70E)
                                                              + 2 * (((v2 - 1652) | 0x113) ^ 0x709)
                                                              + 526302316;
  return result;
}

uint64_t sub_1D4A8A33C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((58
                                * ((((((v0 ^ 0xF) - 2079421449) ^ (v0 + 13)) + v1) & 0xFFFFFFFC) - LODWORD(STACK[0x3D8]) == -2079419384)) ^ v0)))();
}

uint64_t sub_1D4A8A388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                       + 8
                                                                       * (int)(((v4 <= (((v5 + 40561166) | 0x594) ^ 0xEEB004D6))
                                                                              * ((v5 + 218945450) & 0xF55E17F7 ^ 0x670)) ^ (v5 + 40561906))))(a1, a2, a3, 4251303770);
}

uint64_t sub_1D4A8A3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v59 = (*(uint64_t (**)(void, void, uint64_t))(v57 + 8 * (((v53 - 633) | 0x48) ^ 0xD76)))(LODWORD(STACK[0x4EC]), (v55 + v54 + 2), a46);
  int v66 = ((2 * v59) & 0xBFDFFCFC) + (v59 ^ 0xDFEFFE7E);
  unint64_t v67 = STACK[0x420];
  unint64_t v68 = STACK[0x420];
  if (v66 == -537919874)
  {
    unint64_t v70 = STACK[0x380];
    int v71 = (char *)&STACK[0x680] + STACK[0x380] - 0x74CFFF0833D7937CLL;
    STACK[0x568] = (unint64_t)(v71 + 1488);
    STACK[0x3E8] = (unint64_t)(v71 + 1716);
    LODWORD(STACK[0x468]) = 837403461;
    STACK[0x5E0] = v70 - 192;
    STACK[0x488] = 0;
    LODWORD(STACK[0x5B0]) = 2079419384;
    STACK[0x3F0] = (unint64_t)(v71 + 1488);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * (int)((v68 - 5) ^ ((4 * (v71 + 1488 == (char *)-248)) | (32 * (v71 + 1488 == (char *)-248))))))(v59, v60, v61, 3768594526, v62, v63, v64, v65, a9);
  }
  else if (v66 == -269484415)
  {
    LODWORD(STACK[0x46C]) = -526372673;
    return (*(uint64_t (**)(void))(v57
                                + 8
                                * (int)(((STACK[0x600] == 0) * ((((v67 - 597) | 0x400) - 822) ^ 0x2BA)) ^ (v67 + 483))))();
  }
  else
  {
    unsigned int v72 = 1178560073 * ((v56 & 0xE6D2436E | ~(v56 | 0xE6D2436E)) ^ 0xA3B9C4F3);
    *(void *)(v58 - 192) = a53;
    *(_DWORD *)(v58 - 200) = v72 + v66 - ((2 * v66 + 2097924) & 0x3EBED70E) + 1064267017;
    *(_DWORD *)(v58 - 196) = v67 - v72 + 1113;
    int v73 = v67;
    uint64_t v74 = (*(uint64_t (**)(uint64_t))(v57 + 8 * ((int)v67 + 1192)))(v58 - 200);
    return (*(uint64_t (**)(uint64_t))(v57
                                              + 8
                                              * (((STACK[0x600] == 0) * ((((v73 - 597) | 0x400) - 822) ^ 0x2BA)) ^ (v73 + 483))))(v74);
  }
}

uint64_t sub_1D4A8A644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52)
{
  unint64_t v54 = *(void *)(v52 + 152);
  *(void *)(v52 + 4_Block_object_dispose(&STACK[0x368], 8) = *(void *)(v53 + 8 * (int)(STACK[0x420] - 1066));
  STACK[0x448] = v54;
  STACK[0x4F8] = STACK[0x3E8];
  uint64_t v55 = *(_DWORD *)(v54 - 0x72E93EC0CCAF573ELL) & ((a52 & 0x8020445F) + 42);
  *(unsigned char *)(v54 - 0x72E93EC0CCAF5782 + (v55 ^ 0x24)) = 107;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53
                                                                                                  + 8 * (int)((((v55 ^ 0x24) > 0x37) * ((a52 & 0x8020445F) + 1079)) ^ a52 & 0x8020445F)))(a1, a2, a3, 3768594526, 2772, a6, 1052694286);
}

uint64_t sub_1D4A8A660()
{
  return 0;
}

uint64_t sub_1D4A8A6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,unsigned int a33)
{
  unsigned int v35 = (a6 + 447467373) & 0xE554307F;
  int v36 = 628203409 * ((((v34 - 160) | 0x8BCD2C81) + (~(v34 - 160) | 0x7432D37E)) ^ 0x94520B3);
  *(_DWORD *)(v34 - 152) = v36 + a6 + 536;
  *(_DWORD *)(v34 - 14_Block_object_dispose(&STACK[0x368], 8) = a12 - v36;
  *(void *)(v34 - 160) = a28;
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (a6 ^ 0x898)))(v34 - 160);
  unsigned int v38 = STACK[0x330] & 0x3F ^ (v35 - 27);
  *((unsigned char *)&STACK[0x2EC] + v3_Block_object_dispose(&STACK[0x368], 8) = 107;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 8 * ((501 * (v38 > 0x37)) ^ a6)))(v37, a33, 141, 4013838779);
}

uint64_t sub_1D4A8A7BC()
{
  int v6 = 535753261 * ((((v5 - 144) | 0xBD960BE0) - (v5 - 144) + ((v5 - 144) & 0x4269F418)) ^ 0xB76205CF);
  *(_DWORD *)(v5 - 120) = v6 + v1 + (v4 ^ 0x31C37950);
  *(void *)(v5 - 144) = v9;
  *(_DWORD *)(v5 - 136) = (v4 + 361) ^ v6;
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x368], 8) = v3;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 ^ 0xAF5)))(v5 - 144);
  _DWORD *v10 = v8;
  _DWORD *v0 = 526347143;
  return result;
}

uint64_t sub_1D4A8A844()
{
  _DWORD *v2 = STACK[0x4EC];
  v2[85] = STACK[0x4A4];
  v2[86] = STACK[0x5DC];
  v2[87] = STACK[0x5CC];
  v2[88] = STACK[0x4AC];
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(void *)(v1 + 336) == 0) * (((((v0 ^ 0x49B) - 597) | 0x400) - 822) ^ 0x2BA)) ^ ((v0 ^ 0x49B) + 483))))();
}

uint64_t sub_1D4A8A8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, unsigned int a19)
{
  a17 = &STACK[0x4313E3591B4C289];
  a19 = 1410 - 460628867 * ((&a17 & 0xA1039BA5 | ~(&a17 | 0xA1039BA5)) ^ 0x126AE627);
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v20 + 18432))(&a17);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((2 * (a18 == 526347143)) | (16 * (a18 == 526347143))) ^ v19)))(v21);
}

void sub_1D4A8A948(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x19A1466F6B3326CLL) - 2139852653;
  unsigned int v3 = *(_DWORD *)(a1 + 20) + v1 - 920573385;
  BOOL v4 = v2 < 0xFECE3BF5;
  BOOL v5 = v2 > v3;
  if (v3 < 0xFECE3BF5 != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X9, X17 }
}

void sub_1D4A8AA2C(uint64_t a1)
{
  int v1 = 1374699841 * ((a1 - 1542394297 - 2 * (a1 & 0xA410EE47)) ^ 0xC9E4F64E);
  __asm { BRAA            X14, X17 }
}

void IPaI1oem5iL(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_1D4A8AB5C(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x8DE5192BDC53166) = v2 - 1;
  *(_DWORD *)(v1 + 6_Block_object_dispose(&STACK[0x368], 8) = 526347143;
}

uint64_t sub_1D4A8AB78@<X0>(uint64_t a1@<X6>, int a2@<W7>, int a3@<W8>)
{
  *((unsigned char *)&STACK[0x2AC] + (a3 + v3)) = *(unsigned char *)(v5 + a1 - 1618280891)
                                                      - ((2 * *(unsigned char *)(v5 + a1 - 1618280891)) & 0xD6)
                                                      - 21;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1793 * ((a2 + a3 + 1) < 0x40)) ^ (5 * (v4 ^ 0x72E)))))();
}

uint64_t sub_1D4A8ABE8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 ^ 0x7D7) - 243) * (v1 == 483381750)) ^ v0)))();
}

uint64_t sub_1D4A8AC18(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((105 * (v8 + 1 != v10 + 44)) ^ a3)))(a8);
}

void sub_1D4A8ACD4(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)*(&off_1F2C91B30
                  + ((-35 * (dword_1EA70FB10 ^ 0xD8 ^ qword_1EA70FB08)) ^ byte_1D54D30A0[byte_1D54CE550[(-35 * (dword_1EA70FB10 ^ 0xD8 ^ qword_1EA70FB08))] ^ 0x8C])
                  + 141);
  unsigned __int8 v3 = -35 * (*v2 ^ qword_1EA70FB08 ^ 0xD8);
  int v4 = (uint64_t *)*(&off_1F2C91B30
                  + (*((unsigned char *)off_1F2C91C90
                                                    + (*((unsigned __int8 *)off_1F2C91DC8 + v3 - 12) ^ 0x27u)
                                                    - 4) ^ v3)
                  + 46);
  unint64_t v5 = (unint64_t)&v9[*v4 ^ *v2];
  uint64_t v6 = 1226760413 * v5 + 0x5B705F9A26A579D8;
  uint64_t v7 = 1226760413 * (v5 ^ 0x5B705F9A26A579D8);
  uint64_t *v2 = v6;
  uint64_t *v4 = v7;
  LODWORD(v4) = *(_DWORD *)v2;
  uint64_t v8 = (char *)*(&off_1F2C91B30
               + ((-35 * ((qword_1EA70FB08 - dword_1EA70FB10) ^ 0xD8)) ^ byte_1D54D33A0[byte_1D54CE750[(-35 * ((qword_1EA70FB08 - dword_1EA70FB10) ^ 0xD8))] ^ 0x8B])
               - 79)
     - 4;
  (*(void (**)(char *, uint64_t (*)()))&v8[8
                                                   * (*((unsigned char *)off_1F2C91D28
                                                                       + (*((unsigned __int8 *)off_1F2C91F90
                                                                          + (-35
                                                                                            * ((v7 - (_BYTE)v4) ^ 0xD8))
                                                                          - 12) ^ 0x8Cu)) ^ (-35
                                                                                           * ((v7 - (_BYTE)v4) ^ 0xD8)))
                                                   + 17952])((char *)*(&off_1F2C91B30+ (*((unsigned char *)off_1F2C91D00+ (*((unsigned __int8 *)off_1F2C91B68+ (-35 * (v4 ^ 0xD8 ^ v7))) ^ 0xABu)- 8) ^ (-35 * (v4 ^ 0xD8 ^ v7)))+ 115)- 8, sub_1D4ABA8E0);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D4A8AEBC@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v7 = a1 - 1027;
  int v8 = (**(_DWORD **)(a2 - 0x139154EEB4327E8) ^ 0x2380DF27) + 1;
  **(_DWORD **)(a2 - 0x139154EEB4327E_Block_object_dispose(&STACK[0x368], 8) = v8 + v3 - (v6 & (2 * v8));
  BOOL v9 = v4 - 1314620802 > 763311293;
  if (v4 - 1314620802 < (int)(v2 ^ 0xAD7F37FC)) {
    BOOL v9 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((1417 * v9) ^ v7)))(615976035);
}

void sub_1D4A8AF8C()
{
  STACK[0x3F8] = v0;
  *(_DWORD *)(STACK[0x670] + ((LODWORD(STACK[0x45C]) + v1) & 0xFFFFFFFC)) = v2;
  JUMPOUT(0x1D4ABCA44);
}

uint64_t sub_1D4A8AFCC(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v1 - 1140) ^ (*(_DWORD *)(v2 + 48 * (v4 + a1) + 36) == v4)) & 1) == 0)
                                * ((v1 - 1140) ^ 0x8B)) ^ v1)))();
}

void sub_1D4A8B018()
{
}

uint64_t sub_1D4A8B098(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a1 ^ 0x21F) + a1 - 754 - 259) * (v5 == a5)) ^ a1)))();
}

void sub_1D4A8B0D4(uint64_t a1@<X8>, uint64_t a2, char a3, unsigned int a4, uint64_t a5)
{
  a5 = a1;
  a4 = v6
     - 426
     + 535753261 * ((((2 * &a3) | 0x550EA4F0) - &a3 + 1433972104) ^ 0xA0735C57)
     + 1178;
  (*(void (**)(char *))(v5 + 8 * (v6 + 1702)))(&a3);
  JUMPOUT(0x1D4A8B130);
}

uint64_t sub_1D4A8B170()
{
  int v2 = STACK[0x420] - 1074;
  LODWORD(STACK[0x640]) = v0;
  return (*(uint64_t (**)(void))(v1 + 8 * v2))();
}

uint64_t sub_1D4A8B194(uint64_t a1)
{
  int v1 = 535753261 * ((a1 - 1922189914 - 2 * (a1 & 0x8D6DB5A6)) ^ 0x8799BB89);
  int v2 = *(_DWORD *)(a1 + 16) + v1;
  int v3 = *(_DWORD *)a1 ^ v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 24) - 0x139154EEB4327ECLL);
  unsigned int v6 = v4 - 1740488377;
  BOOL v5 = v4 - 1740488377 < 0;
  unsigned int v7 = 1740488377 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F2C91B30 + (v2 ^ 0x5AF))
                              + 8
                              * ((((v3 - 313536509) >= 4 * (unint64_t)v7)
                                * (((v2 - 1335) | 0x896) ^ 0x8F7)) ^ v2)
                              - 4))();
}

void sub_1D4A8B26C(uint64_t a1@<X8>, int a2, uint64_t a3, int a4)
{
  unsigned int v8 = ((v5 - 652) | 0x22) - (((45929676 - v7) & 0xF4DA0A2A) + v6) + 2076929225;
  int v9 = 108757529 * ((&a2 - 141626625 - 2 * ((unint64_t)&a2 & 0xF78EF2FF)) ^ 0x171290D4);
  a4 = v8 ^ v9;
  a3 = a1;
  a2 = v9 + v5 + 48;
  (*(void (**)(int *))(v4 + 8 * (v5 ^ 0xDF9)))(&a2);
  JUMPOUT(0x1D4A8B30CLL);
}

uint64_t sub_1D4A8B334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20
                                                                                         + 8
                                                                                         * (((*(_DWORD *)(a19 - 0x2C138C8FAF40FC0ALL) == (((v19 | 0x28) + 551) | 0xA4) + 526345875)
                                                                                           * (((v19 | 0x28) + 1566) ^ 0xC5E)) ^ (v19 | 0x28))))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1D4A8B3A0(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)((((((a1 + 1355388342) & 0xAF366FFF) - 995) ^ (a1 - 81)) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1D4A8B3E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, char a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((v6 ^ 0x69 ^ a6)
                                                   + *(unsigned char *)(v10 + v8)
                                                   - *(unsigned char *)(*(void *)(v7 + 8 * ((v6 ^ 0x569) - 934)) - 8)) == 95)
                                * ((((v6 ^ 0x569) + a4) & a5) - 324)) ^ ((v6 ^ 0x569) + 86))))();
}

void sub_1D4A8B430(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 16) - 3804331 * ((a1 - 2 * (a1 & 0xF3A65B02) - 207201534) ^ 0x8D737EF4);
  int v2 = (char *)*(&off_1F2C91B30 + (v1 ^ 0x652)) - 4;
  int v3 = (*(unsigned char *)a1 ^ (-85 * ((a1 - 2 * (a1 & 2) + 2) ^ 0xF4)));
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * v1 + 4336])((char *)*(&off_1F2C91B30 + (v1 ^ 0x6E2)) - 12, sub_1D4AB9438);
  uint64_t v4 = *(void *)((char *)*(&off_1F2C91B30 + (v1 ^ 0x6DC)) - 4);
  unsigned int v6 = v1 + 1755732067 * (((&v5 | 0x1283C73D) - (&v5 & 0x1283C73D)) ^ 0xCC457AE6) - 1093;
  uint64_t v5 = v4;
  (*(void (**)(uint64_t *))&v2[8 * v1 + 4704])(&v5);
  __asm { BRAA            X9, X17 }
}

void sub_1D4A8B59C()
{
  *(_DWORD *)(v0 - 0x2C138C8FAF40FC0ALL) = -526372781;
}

uint64_t sub_1D4A8B5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v13 = (_DWORD *)(v9 + 4 * (a7 + v11));
  int v14 = *(v13 - 8) ^ *(v13 - 3);
  int v15 = *(v13 - 16) ^ *(v13 - 14) ^ (v14 + v8 - (v7 & (2 * v14)));
  HIDWORD(v16) = v15 ^ (v8 + ((a5 - 16) | 0x2C0) - 704);
  LODWORD(v16) = v15;
  _DWORD *v13 = (v16 >> 31) + v8 - (v7 & (2 * (v16 >> 31)));
  return (*(uint64_t (**)(void))(v10 + 8 * ((1128 * (a7 + 1 == v12 + 80)) ^ (a5 + 204))))();
}

uint64_t sub_1D4A8B64C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X6>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  unint64_t v25 = (*(_DWORD *)(a1 + v23) ^ a4) + HIDWORD(v20);
  *(_DWORD *)(a1 + 4 * a3) = v25 + a4 - ((v18 + v19 + 1348 - 1588) & (2 * v25));
  *(_DWORD *)(a18 + v23) = HIDWORD(v25) | a4;
  BOOL v27 = v21 - 1504566317 > 1169184023 || v21 - 1504566317 < a2;
  return (*(uint64_t (**)(void))(v22 + 8 * ((v19 + 283) ^ (v27 * v24))))();
}

uint64_t sub_1D4A8B6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v13 = (_DWORD *)STACK[0x3F0];
  _DWORD *v13 = v8 - 1;
  int v14 = &v13[6 * (v8 - 659196917)];
  int v15 = v14[2];
  STACK[0x3E8] = *((void *)v14 + 2);
  LODWORD(STACK[0x58C]) = v14[6];
  unsigned int v12 = (v9 + 476299861) & 0xE39C3BCF;
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (int)(((*(_DWORD *)(v10 + (int)((v12 ^ (a7 + 1026)) + v15) * (uint64_t)a8 + 36) == a6)
                                     * ((v12 - 2093457294) & 0x7CC79DDB ^ 0x2E8 ^ (3 * (v12 ^ 0x291)))) ^ v12)))();
}

void sub_1D4A8B7A8(uint64_t a1)
{
  int v1 = 1225351577 * (((a1 | 0xD0007703) - a1 + (a1 & 0x2FFF88FC)) ^ 0xF39AAF15);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1D4A8B874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  a14 = 108757529 * ((-1250741474 - (&a13 | 0xB573331E) + (&a13 | 0x4A8CCCE1)) ^ 0xAA10AECA)
      - 504207030;
  uint64_t v15 = (*(uint64_t (**)(int *))(v14 + 17848))(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((1702 * (a13 == 526347143)) ^ 0x2D6u)))(v15);
}

uint64_t sub_1D4A8B930@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v15 = (v9 + a4);
  *(unsigned char *)(v12 + v15 + 4) = ((v15 & 0xF) * v11) ^ *(unsigned char *)(a5 + v15) ^ *(unsigned char *)(v8 + (v15 & 0xF)) ^ *(unsigned char *)((v15 & 0xF) + v7 + 1) ^ *(unsigned char *)(a7 + (v15 & 0xF)) ^ v13;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * (((((v10 + 1066) ^ a1) + v9 == (((v10 - 33) | a2) ^ (a6 + 2) ^ ((v10 - 48) | 2))) * a3) ^ (v10 + 968))))();
}

uint64_t sub_1D4A8B97C(uint64_t result)
{
  if (v1 + v2 - 1 >= ((2 * (v5 ^ 0xC5)) ^ 0x7FFFFD73u)) {
    int v6 = -813990542 - v4;
  }
  else {
    int v6 = v4;
  }
  _DWORD *v3 = v6;
  *(_DWORD *)(result + 24) = 1310800152;
  return result;
}

uint64_t sub_1D4A8B9BC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 819) ^ 0x3A1) + (v2 ^ 0x61D)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1D4A8B9F4@<X0>(uint64_t a1@<X4>, int a2@<W6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v4 + a1 - 1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(a3 + v4) < 0x38) * a2) ^ (v3 - 484))))();
}

uint64_t sub_1D4A8BA20(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v2 = 628203409 * (((a1 | 0xBB8CAEEC) - (a1 & 0xBB8CAEEC)) ^ 0x3904A2DF);
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  int v6 = *(_DWORD *)(a1 + 20) + v2;
  int v7 = *(_DWORD *)a1 - 368400025 + v2;
  unsigned int v8 = 235795823
     * (((&v10 | 0xDE5284D5) - &v10 + (&v10 & 0x21AD7B28)) ^ 0x4AFFCD8C);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = v4;
  uint64_t v16 = v3;
  unsigned int v11 = v8 + (v6 ^ 0xA7444C8) + 511336312 + ((2 * v6) & 0xE7AFCBFC ^ 0xE307426C);
  uint64_t v10 = v5;
  int v15 = v8 ^ (v7 + 1841);
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F2C91B30 + v7) + 8 * v7 + 16516))(&v10);
  *(_DWORD *)(a1 + 40) = v14;
  return result;
}

uint64_t sub_1D4A8BB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, unsigned int a19, int a20)
{
  unsigned int v23 = 1759421093 * ((&a17 - 826825291 - 2 * (&a17 & 0xCEB7A5B5)) ^ 0x7DCA15E1);
  HIDWORD(a17) = v23 ^ 0x241A7128;
  a18 = v23 + 1424;
  a20 = v23 ^ 0x4479276D;
  LODWORD(a17) = v23 ^ 0x19C79A77;
  (*(void (**)(unint64_t **))(v21 + 17696))(&a17);
  a17 = &STACK[0x4313E3591B4C2A1];
  a19 = 1410 - 460628867 * ((((2 * &a17) | 0x9D678C32) - &a17 + 827079143) ^ 0x82254464);
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v21 + 18432))(&a17);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((63 * (a18 == (v20 ^ 0x915FFF71))) ^ v22)))(v24);
}

void sub_1D4A8BCB0()
{
  _DWORD *v0 = -526372781;
}

void sub_1D4A8BCC4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 3804331 * (((a1 | 0x51A664) - (a1 & 0x51A664)) ^ 0x7E848392);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4A8BD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * (v6 ^ (32 * (((((v6 - 1281) | 0x22) ^ ((v6 ^ 0x662) - 953)) & v7) == 281128576)))))(1313, a2, 4013838720, a4, a5, a6, 782);
}

void sub_1D4A8BE00()
{
  *(_DWORD *)(v0 + 32) = 526347143;
}

uint64_t sub_1D4A8BE4C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((55 * (*(void *)off_1F2C91FA0 != 0)) ^ 0x3D4u)))();
}

uint64_t sub_1D4A8BE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  LODWORD(STACK[0x42C]) = 2079419384;
  unint64_t v40 = STACK[0x608];
  STACK[0x480] = 335;
  *(unsigned char *)(v40 + 335) = (a38 + ((-88 * (v38 ^ 0x59)) ^ 0x3A) - 89) * (a38 ^ 0xBA);
  return (*(uint64_t (**)(void))(v39 + 8 * (((4 * (STACK[0x480] != 0)) | (32 * (STACK[0x480] != 0))) ^ v38 ^ 0x69D)))();
}

uint64_t sub_1D4A8BE98()
{
  STACK[0x290] = v0;
  STACK[0x2C0] = v2;
  STACK[0x498] = 0;
  int v6 = 235795823 * ((565679011 - ((v5 - 200) | 0x21B793A3) + ((v5 - 200) | 0xDE486C5C)) ^ 0x4AE52505);
  v3[1] = 0x6AF2A8617E594F5;
  unint64_t v7 = STACK[0x278];
  *(_DWORD *)(v5 - 200) = v6 ^ 0xC1674A5A;
  *(_DWORD *)(v5 - 164) = v1 - v6 - 1256;
  unint64_t v8 = STACK[0x280];
  _OWORD v3[2] = v7;
  v3[3] = v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v1 ^ 0xEA0)))(v5 - 200);
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (((*(_DWORD *)(v5 - 168) == ((v1 + 893794130) & 0xCAB9C35E) + 526346877)
                                              * (((v1 - 1495920606) & 0x5929EDDF) - 890)) ^ v1)))(v9);
}

uint64_t sub_1D4A8BFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (int)(((a5 + ((v6 + 1780187811) | 0x91C05009) + 161) * (v5 == 63)) ^ v6)))();
}

uint64_t sub_1D4A8BFF0@<X0>(int a1@<W8>)
{
  int v4 = a1 - 1592;
  int v5 = (v4 - 412) | 0x301;
  uint64_t v6 = (*(uint64_t (**)(void))(v1 + 8 * (v4 ^ 0x8BA)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (((*v2 == 0) * (((v5 - 517) ^ 0x21F) - 765)) ^ v5)))(v6);
}

uint64_t sub_1D4A8C048()
{
  _DWORD *v3 = v3[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((((v0 - 690377574) & 0x292656BD) + 695657) | 0x2604800) ^ (v1 + 363))
                                 + ((((v0 - 690377574) & 0x292656BD) - 1186) | 0x60))
                                * (v4 == 1906244676)) ^ (v0 - 690377574) & 0x292656BD)))();
}

uint64_t sub_1D4A8C0D4(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v1 = *(void *)(a1 + 16);
  int v3 = (*(_DWORD *)a1 ^ (235795823 * ((2 * (a1 & 0x5AD4AFC8) - a1 + 623595575) ^ 0xB186196E))) - 426522865;
  unsigned int v5 = v3
     + 1225351577
     * ((2 * ((&v5 ^ 0x618AC2C7) & 0x400DFC4D) - (&v5 ^ 0x618AC2C7) - 1074658382) ^ 0xFDE21963)
     + 1837;
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_1F2C91B30 + v3) + 8 * v3 + 17460))(&v5);
}

uint64_t sub_1D4A8C1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((((v11 + ((v13 - 1093410309) & 0x412C1FFE) - 1780) ^ a11) > 0x14)
                                * (((v13 + 776) | 0x84) ^ 0x9F3)) ^ v13)))();
}

void sub_1D4A8C23C(uint64_t a1)
{
  uint64_t v2 = (unsigned __int8 *)off_1F2C91B68;
  int v3 = (char *)off_1F2C91D00 - 8;
  int v4 = (uint64_t *)*(&off_1F2C91B30
                  + (*((unsigned char *)off_1F2C91D00
                                                    + (*((unsigned __int8 *)off_1F2C91B68
                                                       + (-35
                                                                         * ((qword_1EA70FB08 + dword_1EA7106C8) ^ 0xD8))) ^ 0xABu)
                                                    - 8) ^ (-35 * ((qword_1EA70FB08 + dword_1EA7106C8) ^ 0xD8)))
                  + 85);
  unsigned __int8 v5 = -35 * ((qword_1EA70FB08 + *v4) ^ 0xD8);
  uint64_t v6 = (uint64_t *)*(&off_1F2C91B30
                  + (*((unsigned char *)off_1F2C91C90
                                      + (*((unsigned __int8 *)off_1F2C91DC8 + v5 - 12) ^ 0xA9u)
                                      - 4) ^ v5)
                  - 76);
  unint64_t v7 = (*v6 + *v4) ^ (unint64_t)&v11;
  uint64_t v8 = (1226760413 * v7) ^ 0x5B705F9A26A579D8;
  uint64_t v9 = 1226760413 * (v7 ^ 0x5B705F9A26A579D8);
  uint64_t *v4 = v8;
  *uint64_t v6 = v9;
  uint64_t v10 = (char *)*(&off_1F2C91B30
                + ((-35 * (dword_1EA7106C8 ^ 0xD8 ^ qword_1EA70FB08)) ^ byte_1D54C7F60[byte_1D54D2FA0[(-35 * (dword_1EA7106C8 ^ 0xD8 ^ qword_1EA70FB08))] ^ 0xF1])
                - 75)
      - 4;
  (*(void (**)(char *, uint64_t (*)()))&v10[8
                                                    * (*((unsigned char *)off_1F2C91DA8
                                                                        + (*((unsigned __int8 *)off_1F2C91CB0
                                                                           + (-35
                                                                                             * ((v9 - *(_DWORD *)v4) ^ 0xD8))) ^ 0xF1u)
                                                                        - 4) ^ (-35 * ((v9 - *(_DWORD *)v4) ^ 0xD8)))
                                                    + 16424])((char *)*(&off_1F2C91B30+ ((-35 * (*(_DWORD *)v4 ^ 0xD8 ^ v9)) ^ v3[v2[(-35 * (*(_DWORD *)v4 ^ 0xD8 ^ v9))] ^ 0x50])+ 50)- 8, sub_1D4ABA8E0);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D4A8C424(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * (int)((((v2 + ((v4 + 1874713167) & 0xFD6BBE6D) - 174) ^ 0x4D3) * (v3 == a2)) ^ v4)))();
}

uint64_t sub_1D4A8C468()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((856 * (v0 < 0xE4D5C22F)) ^ 0x164)))();
}

uint64_t sub_1D4A8C4D4(uint64_t a1, int a2)
{
  uint64_t v9 = (v4 + v3 - v6);
  int8x8_t v10 = vrev64_s8(*(int8x8_t *)(v7 - 7 + v9));
  *(int8x8_t *)(v2 - 7 + v9) = vrev64_s8(vadd_s8(vsub_s8(v10, vand_s8(vadd_s8(v10, v10), (int8x8_t)0xD6D6D6D6D6D6D6D6)), (int8x8_t)0xEBEBEBEBEBEBEBEBLL));
  LODWORD(v9) = ((a2 - 636) ^ 0x134) + v6 == (v5 & 0xFFFFFFF8);
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((2 * v9) | (4 * v9) | a2)))();
}

void sub_1D4A8C544()
{
}

uint64_t sub_1D4A8C558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * (((*(_DWORD *)(a16 + 4 * (v19 + v18 + 1990)) == v16 + v17 - 1682 - 307)
                                * (v17 ^ 0x2A1)) ^ (v17 - 1682))))();
}

uint64_t sub_1D4A8C5A4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  __int16 v2 = *(_DWORD *)result + 26185 * ((2 * (result & 0x1A68) - result - 6761) ^ 0x9DF5);
  *(_DWORD *)(v1 - 0x72E93EC0CCAF5722) = (((2 * (v2 & 0x1FF ^ 0x62890305)) & 0xC01006F2)
                                          - (v2 & 0x1FF ^ 0x62890305)
                                          + 384929926) ^ 0x9768242B;
  *(void *)(v1 - 0x72E93EC0CCAF5742) = 0xAA8110E443B50625;
  *(_DWORD *)(v1 - 0x72E93EC0CCAF5726) = 1335561202;
  int v3 = v2 ^ 0x75;
  if (v3 == 1)
  {
    int v4 = 1335561218;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x72E93EC0CCAF572ALL) = 402897470;
    int v4 = 1335561222;
LABEL_5:
    *(void *)(v1 - 0x72E93EC0CCAF573ALL) = 0x341CF047BC9478CFLL;
    *(void *)(v1 - 0x72E93EC0CCAF5732) = 0xCBE30FB8436B8730;
    *(_DWORD *)(v1 - 0x72E93EC0CCAF5726) = v4;
  }
  *(_DWORD *)(result + 4) = 261852838;
  return result;
}

uint64_t sub_1D4A8C714(uint64_t result)
{
  *(_DWORD *)(result + 4) = 99788384;
  return result;
}

void sub_1D4A8C724(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4A8C848@<X0>(unsigned int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((174 * (a2 + 1 == v3 + 24)) ^ a1)))();
}

uint64_t sub_1D4A8C910()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((57 * (v1 - 1667755606 < ((v0 + 2002) ^ 0xFFFFF7EA))) ^ (v0 + 2002))))();
}

uint64_t sub_1D4A8C948(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = v2 + a2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((22 * (v5 - v2 + (((v3 - 1035) | 0x401u) ^ 0x26A80733) > 7)) ^ v3)))();
}

uint64_t sub_1D4A8C9A0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(a8 - 7 + (v11 + v9 - v12)) = *(void *)(v8 - 7 + (v11 + v9 - v12));
  return (*(uint64_t (**)(void))(v13 + 8 * ((1294 * (v12 + ((a2 - 729) | 0x403) - 1223 == (v10 & 0xFFFFFFF8))) ^ a2)))();
}

uint64_t sub_1D4A8C9F4()
{
  int v3 = v0;
  uint64_t v4 = (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ 0xCA9)))();
  STACK[0x5E0] -= 16;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v3 == 526347143) * ((((v1 - 1830195628) & 0x6D168F7E) - 366) ^ 0xA6F)) ^ (v1 - 1830195628) & 0x6D168F7E)))(v4);
}

uint64_t sub_1D4A8CA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * (int)((((((v17 - 1023) ^ (v16 == 0)) & 1) == 0) * (((v17 + 1245419505) & 0xB5C4660F) - 476)) ^ v17)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a1, a11, a12, a13, a14, v19 - 0x3768F75C95423C39, a16, v19 - 0x3768F75C95423D49);
}

uint64_t sub_1D4A8CB94@<X0>(unsigned int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  if (!a3) {
    return (*(uint64_t (**)(void))(v60
  }
                                + 8
                                * ((963 * ((a14 & 0xFFFFFFF0) == a2 + 56 * (v59 ^ (v59 - 5)) + 964)) ^ (v58 + v59 + 910))))();
  if (a3 != 3) {
    return (*(uint64_t (**)(void))(v60 + 8 * ((185 * (*(_DWORD *)(v61 + 48 * v62 + 36) + v63 < a1)) ^ 0x118)))();
  }
  uint64_t v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 48 * v62 + 8))(a5, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * ((905 * (v64 + 526347143 - ((2 * v64) & 0x3EBED70E) == 526347143)) ^ (v59 + 552401151))))(v64, v65, v66, v67, 526347143, 3452455880, 2147483652, 1883609044, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1D4A8CD04(double a1, double a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  uint64_t v17 = v15 - 2144134811 + v14 + 1481 + ((a11 - 947) | 0x42u);
  int8x16_t v18 = vrev64q_s8(*(int8x16_t *)(v12 + v17 - 15));
  int8x16_t v19 = vextq_s8(v18, v18, 8uLL);
  int8x16_t v20 = vrev64q_s8(*(int8x16_t *)(v12 + v17 - 31));
  int8x16_t v21 = vextq_s8(v20, v20, 8uLL);
  uint64_t v22 = v11 + v17;
  int8x16_t v23 = vrev64q_s8(vaddq_s8(vsubq_s8(v19, vandq_s8(vaddq_s8(v19, v19), a5)), a6));
  *(int8x16_t *)(v22 - 15) = vextq_s8(v23, v23, 8uLL);
  int8x16_t v24 = vrev64q_s8(vaddq_s8(vsubq_s8(v21, vandq_s8(vaddq_s8(v21, v21), a5)), a6));
  *(int8x16_t *)(v22 - 31) = vextq_s8(v24, v24, 8uLL);
  return (*(uint64_t (**)(void))(v16 + 8 * ((75 * ((v13 & 0xFFFFFFE0) == 32)) ^ (a11 + 452))))();
}

uint64_t sub_1D4A8CDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(a5 + (v7 ^ v6) + v_Block_object_dispose(&STACK[0x368], 8) = v11;
  return (*(uint64_t (**)(void))(v12 + 8 * ((((unint64_t)(v8 + v10) < 0x40) * v9) ^ v5)))();
}

uint64_t sub_1D4A8CDDC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 44_Block_object_dispose(&STACK[0x368], 8) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 2312))(0);
}

uint64_t sub_1D4A8CE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  BOOL v22 = (unint64_t)&STACK[0x2AC] + ~a18 + v18 + ((v20 + 1483904863) & 0xA78D67CF ^ (v19 + 2268)) < (unint64_t)((v20 + 159107108) & 0xF684335F) - 844;
  return (*(uint64_t (**)(void))(v21 + 8 * ((2 * v22) | (32 * v22) | v20)))();
}

uint64_t sub_1D4A8CEB0()
{
  *(_DWORD *)(v2 + 52) += ((v0 - 1683) | 0x88) ^ 0x8D;
  uint64_t v5 = v1 + (v0 ^ 0x6D5u) - 2498;
  STACK[0x3F8] = v5;
  STACK[0x5E0] = v5;
  LODWORD(STACK[0x5D8]) = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((303 * (STACK[0x460] == 0)) ^ v0)))();
}

uint64_t sub_1D4A8CF18@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v11 = 3804331 * (&a3 ^ 0x7ED525F6);
  a5 = a1;
  a6 = v7;
  a7 = v11 + 1594874511;
  a3 = v11 + v9 - 1297688397 + ((v10 - 905232660) & 0x35F4C6FA);
  a4 = v11 + v10 + 259;
  uint64_t v12 = (*(uint64_t (**)(int *))(v8 + 8 * (v10 + 2018)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((1799 * (*(_DWORD *)(v7 - 0x2C138C8FAF40FC0ALL) == 526347143)) ^ v10)))(v12);
}

uint64_t sub_1D4A8CFD4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((STACK[0x420] - 1019) * (v1 > v0 + 623)) ^ (STACK[0x420] - 687))))();
}

uint64_t sub_1D4A8D004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v7
                                                                      + 8
                                                                      * (((((v5 == a5) ^ (v6 - 5)) & 1)
                                                                        * (((v6 - 72893933) & 0x45847DF) - 1473)) ^ v6)))(a1, a2, a3, (v6 + 1617728251) & 0x9F936B7F);
}

uint64_t sub_1D4A8D05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11, unint64_t *a12, uint64_t a13, unsigned int a14)
{
  unsigned int v17 = 3804331 * (((&a10 | 0x81ADAAE9) + (~&a10 | 0x7E525516)) ^ 0xFF788F1E);
  a12 = &STACK[0x1244BACB8843828D];
  a13 = v15;
  a14 = v17 + 1605043039;
  a10 = v17 + 483381754;
  a11 = v17 + v14 - 550;
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v14 ^ 0xCD9)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v15 - 0x2C138C8FAF40FC0ALL) == 526347143)
                                              * (((v14 - 937260341) & 0x37DD77EE) + 1313)) ^ v14)))(v18);
}

uint64_t sub_1D4A8D148@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((4 * (*v2 < 0x15u)) | ((*v2 < 0x15u) << 6)) ^ (a1 - 1240))))();
}

uint64_t sub_1D4A8D170()
{
  uint64_t v6 = *(void *)(v9 + 24);
  int v7 = 1224239923 * ((((v5 - 144) | 0x5ECCF06D) + (~(v5 - 144) | 0xA1330F92)) ^ 0xAC7F0DBB);
  *(_DWORD *)(v5 - 144) = v7 ^ 0x4329A48E;
  *(void *)(v5 - 136) = v10;
  *(_DWORD *)(v5 - 12_Block_object_dispose(&STACK[0x368], 8) = v7 + v3 + 1826;
  (*(void (**)(uint64_t))(v4 + 8 * (v3 ^ 0x9D0)))(v5 - 144);
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 136) = v10;
  *(void *)(v5 - 104) = v0;
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x368], 8) = v0;
  *(void *)(v5 - 120) = v2;
  *(_DWORD *)(v5 - 112) = v3
                        + 1224239923 * ((2 * ((v5 - 144) & 0x10151408) - (v5 - 144) - 269816843) ^ 0x1D591622)
                        + 840;
  (*(void (**)(uint64_t))(v4 + 8 * (v3 + 1978)))(v5 - 144);
  *(_DWORD *)(v5 - 12_Block_object_dispose(&STACK[0x368], 8) = v3 + 1374699841 * ((v5 - 144) ^ 0x6DF41809) + 1504;
  *(void *)(v5 - 144) = v0;
  *(void *)(v5 - 136) = v6;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v3 ^ 0x9D1)))(v5 - 144);
}

uint64_t sub_1D4A8D2B8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((110 * (((((v1 ^ 0xF06) + 996) | 0x200) ^ 0xF8585898) + v0 > 0x7FFFFFFE)) ^ v1 ^ 0xF06)))();
}

uint64_t sub_1D4A8D304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5 = v4 + 173;
  *(unsigned char *)(a1 + (v3 - 633261842) + 4) = (2 * (**(unsigned char **)(a2 + 8) & 0xF) + (**(unsigned char **)(a2 + 8) ^ 0x8F)) ^ 0x80;
  unsigned int v6 = *(_DWORD *)(a2 + 4) + 703128494;
  BOOL v7 = v6 < 0xA5DA4FA6;
  BOOL v8 = v6 > 0xA5DA4FA7;
  if (v7) {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((735 * v8) ^ v5)))();
}

uint64_t sub_1D4A8D3B8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (2030 * (v1 != 0x7FE9FC69)))))();
}

uint64_t sub_1D4A8D410(int a1)
{
  unsigned int v5 = (((a1 + 39) | 0x38) ^ 0xFFFFFEC6) + *(unsigned __int8 *)(v3 + 1);
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v1 & (2 * v5)) + (v5 ^ v2) != v2) * (49 * (a1 ^ 0x158) - 20)) ^ a1)))();
}

uint64_t sub_1D4A8D464(int8x16_t a1, int8x8_t a2, uint64_t a3, char a4, int a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  char v58 = v51 - 8;
  uint64_t v59 = (a6 + a5 - 8);
  v61.val[0].i64[0] = ((_BYTE)a6 + (_BYTE)a5 - 8) & 0xF;
  v61.val[0].i64[1] = ((_BYTE)a6 + v56 - 8) & 0xF;
  v61.val[1].i64[0] = ((_BYTE)a6 + v55 - 8) & 0xF;
  v61.val[1].i64[1] = ((_BYTE)a6 + v58) & 0xF;
  v61.val[2].i64[0] = ((_BYTE)a6 + v58 + (a8 ^ 1)) & 0xF;
  v61.val[2].i64[1] = ((_BYTE)a6 + v54 - 8) & 0xF;
  v61.val[3].i64[0] = ((_BYTE)a6 + a4 - 8) & 0xF;
  v61.val[3].i64[1] = ((_BYTE)a6 + v52 - 8) & 0xF;
  *(int8x8_t *)(a10 + v59) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v49 + (v59 & 0xF) - 7), *(int8x8_t *)(a10 + v59)), veor_s8(*(int8x8_t *)((v59 & 0xF) + v48 - 5), *(int8x8_t *)((v59 & 0xF) + v50 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v61, a1), a2)));
  return (*(uint64_t (**)(void))(a48 + 8 * (((a6 != v53 + 8) * v57) ^ a8)))();
}

uint64_t sub_1D4A8D488(double a1)
{
  double *v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_1D4A8D4AC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  LODWORD(STACK[0x5D8]) = a4 + 10;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6
                                                     + 8
                                                     * (((v5 != 0)
                                                       * ((((5 * (v4 ^ 0x9D)) ^ 0x6E7) - 75) ^ (5 * (v4 ^ 0x9D) - 603))) ^ (5 * (v4 ^ 0x9D) - 415))))(a1, v5);
}

uint64_t sub_1D4A8D4C4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  LODWORD(STACK[0x5D8]) = a2;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v3
                                                              + 8
                                                              * (((STACK[0x370] != 0)
                                                                * ((((v2 - 1720521059) & 0x668D157B ^ 0x6E7) - 75) ^ (((v2 - 1720521059) & 0x668D157B) - 603))) ^ (((v2 - 1720521059) & 0x668D157B) - 415))))(a1, STACK[0x370]);
}

uint64_t sub_1D4A8D4E8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((79 * (v1 != 2079419384)) ^ 0x5BAu)))();
}

uint64_t sub_1D4A8D51C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = v3 - (**(unsigned char **)(a2 + 8) == 0);
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 1057444614;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 1740488377;
  *(void *)(*(void *)(a1 + 96) + 80_Block_object_dispose(&STACK[0x368], 8) = *(void *)(a1 + 96) + 816;
  uint64_t v5 = *(void *)(a1 + 96) + 0x139154EEB432B10;
  unsigned int v6 = 1178560073
     * (((&v8 ^ 0xF4D518DC | 0xA372392C)
       - (&v8 ^ 0xF4D518DC)
       + ((&v8 ^ 0xF4D518DC) & 0x5C8DC6D0)) ^ 0xED335992);
  uint64_t v9 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v4);
  uint64_t v10 = v5;
  unsigned int v12 = v6 + v4 - 932059834;
  unsigned int v8 = v6 + 652;
  (*(void (**)(unsigned int *))(a3 + 18480))(&v8);
  return (v11 - 1310800152);
}

uint64_t sub_1D4A8D544@<X0>(int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((63
                                * (((*(_DWORD *)(*v4 + 4 * a2) == v3) ^ ((a1 - 111) ^ (41 * (a1 ^ 0x9C)))) & 1)) ^ a1)))();
}

uint64_t sub_1D4A8D58C()
{
  int v5 = (v2 ^ 0x3C1) + *(unsigned __int8 *)(v3 + 7) - 821;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1561 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)))();
}

void sub_1D4A8D5CC(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL);
  int v4 = v2 - 1740488377;
  BOOL v3 = v2 - 1740488377 < 0;
  int v5 = 1740488377 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = *(_DWORD *)a1 - 235795823 * ((a1 + 1658036232 - 2 * (a1 & 0x62D3A008)) ^ 0xF67EE951);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1D4A8D6FC(int a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 142_Block_object_dispose(&STACK[0x368], 8) = 642161872;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_DWORD *)(a2 + 4) == v2 + 1441)
                                * (((a1 - 820) | 0x4AC) ^ ((a1 - 660) | 0x11C) ^ 0x1DC)) ^ a1)))();
}

uint64_t sub_1D4A8D75C()
{
  STACK[0x380] = v1;
  *(void *)(v2 + 304) = v1 - 112;
  return v0();
}

uint64_t sub_1D4A8D778()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((242 * ((v0 ^ 0x81 ^ (11 * ((v1 - 1726880331) & 0x66EE1555 ^ 0x5F))) > 7)) ^ v1)))();
}

uint64_t sub_1D4A8D7D0()
{
  (*(void (**)(void))(v2 + 8 * (v1 + 1175)))();
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((2 * (*(void *)(v0 + 128) == 0)) | (8 * (*(void *)(v0 + 128) == 0))) ^ (v1 + 423))))();
}

uint64_t sub_1D4A8D808(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (int)(((((a2 + 606949179) & 0xDBD2AEFB) - 1113) * (v2 == v3)) | a2)))();
}

uint64_t sub_1D4A8D848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1048 * (v5 + 1 == v7 + 64)) ^ a5)))();
}

uint64_t sub_1D4A8D904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,uint64_t a32,_DWORD *a33,_DWORD *a34)
{
  *a33 = 405273881;
  uint64_t v37 = (*a34 + 1853291894);
  uint64_t v38 = 1374699841
      * ((((2 * (v36 - 144)) | 0x57CB64B05A500F2) - (v36 - 144) - 0x2BE5B2582D28079) ^ 0xCB2C529EF269870);
  int v39 = (v34 + 948342127) ^ (1374699841 * ((((2 * (v36 - 144)) | 0x5A500F2) - (v36 - 144) + 2100133767) ^ 0xEF269870));
  *(_DWORD *)(v36 - 104) = v39 ^ 0x3D;
  *(_DWORD *)(v36 - 116) = v39;
  *(_DWORD *)(v36 - 112) = (v34 + 948342189) ^ (1374699841
                                              * ((((2 * (v36 - 144)) | 0x5A500F2) - (v36 - 144) + 2100133767) ^ 0xEF269870));
  *(_DWORD *)(v36 - 144) = 1374699841 * ((((2 * (v36 - 144)) | 0x5A500F2) - (v36 - 144) + 2100133767) ^ 0xEF269870)
                         + v34
                         - 1542247033;
  *(_DWORD *)(v36 - 120) = -1374699841 * ((((2 * (v36 - 144)) | 0x5A500F2) - (v36 - 144) + 2100133767) ^ 0xEF269870);
  *(void *)(v36 - 136) = v38 + 2222530445;
  *(void *)(v36 - 12_Block_object_dispose(&STACK[0x368], 8) = v37 ^ v38;
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 ^ a31)))(v36 - 144);
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * *(int *)(v36 - 108)))(v40);
}

void sub_1D4A8D90C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D4A8D99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((62 * (((-338938380 << (3 * (a6 ^ 0xA6) - 106)) & 0xBF57FFBE) == 0x97106BA8)) ^ a6)))();
}

uint64_t sub_1D4A8D9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((v8 & 8) == ((a8 + 1852080519) & 0x919B7C77) - 1109) * (((a8 - 1334) | 0x83) ^ 0x169)) ^ a8)))();
}

uint64_t sub_1D4A8D9FC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, int a5, uint64_t a6, unint64_t *a7, int a8, unint64_t *a9, char a10, int a11)
{
  uint64_t v14 = *(void *)(v11 + 8);
  unsigned int v15 = 1755732067
      * (((&a4 | 0xA5876138) - &a4 + (&a4 & 0x5A789EC0)) ^ 0x7B41DCE3);
  a8 = v15 + 1172345066 + v13;
  a9 = &STACK[0x53A673BF11B47F2B];
  a6 = v14;
  a7 = &STACK[0x6F16120776D4F6DF];
  a10 = (99 * (((&a4 | 0x38) - &a4 + (&a4 & 0xC0)) ^ 0xE3)) ^ 0xDF;
  a5 = ((a1 ^ 0x7ABCAEBD) + 1744142240 + ((a1 << ((v13 + 116) ^ 0xE4)) & 0x75B7C9C2 ^ 0x868080)) ^ v15;
  a4 = &STACK[0x708F6A420CBDE15B];
  uint64_t v16 = (*(uint64_t (**)(unint64_t **))(v12 + 8 * (v13 ^ 0x857)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * ((1677 * (a11 == 526347143)) ^ v13)))(v16);
}

uint64_t sub_1D4A8DB3C(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return sub_1D4A8DBC8(a1, ((a4 - 1749) ^ 0xDB75D9FC) + a2, 2603874049, 1691094995, 1941443190, 1534449920, 643790582, 3651178462);
}

uint64_t sub_1D4A8DBC8(uint64_t a1, int a2, int a3, int a4, int a5, int a6)
{
  int v9 = v6 + a5 + ((v8 + a3) & a4);
  BOOL v11 = v9 > a6 || v9 < a2;
  return (*(uint64_t (**)(void))(v7 + 8 * (v8 | (2 * v11))))();
}

uint64_t sub_1D4A8DC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v71 = 235795823 * (((v70 - 200) & 0x502C1621 | ~((v70 - 200) | 0x502C1621)) ^ 0x3B7EA087);
  unsigned int v72 = (void *)(v70 - 200);
  v72[1] = 0x6AF2A8617E594F5;
  v72[2] = a67;
  v72[3] = a68;
  *(_DWORD *)(v70 - 200) = v71 ^ 0xC1674A5F;
  *(_DWORD *)(v70 - 164) = v68 - v71 - 525;
  uint64_t v73 = (*(uint64_t (**)(uint64_t))(v69 + 8 * (v68 + 1403)))(v70 - 200);
  return (*(uint64_t (**)(uint64_t))(v69
                                            + 8
                                            * (((*(_DWORD *)(v70 - 168) != ((v68 - 547373455) & 0x20A03E5E ^ 0x1F5F6BC9))
                                              * ((v68 ^ 0x330) + 173)) ^ v68)))(v73);
}

uint64_t sub_1D4A8DCE4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v0 + 336) == 0) * ((((v1 - 597) | 0x400) - 822) ^ 0x2BA)) ^ (v1 + 483))))();
}

uint64_t sub_1D4A8DD20()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 + 484) * (v0 == v1)) ^ v2)))();
}

void sub_1D4A8DD44()
{
  int v7 = ((v6 - 1244544018 - 2 * ((v6 - 144) & 0xB5D1C47E)) ^ 0xF45BC1C) * v3;
  *(void *)(v6 - 12_Block_object_dispose(&STACK[0x368], 8) = v0;
  *(void *)(v6 - 120) = v5;
  *(_DWORD *)(v6 - 140) = (v1 | 0x200) - v7 + 855;
  *(_DWORD *)(v6 - 136) = v2 + v7 + ((61 * ((v1 | 0x200) ^ 0x21B)) ^ 0x2B080A96);
  (*(void (**)(uint64_t))(v4 + 8 * ((v1 | 0x200) ^ 0xB13)))(v6 - 144);
  JUMPOUT(0x1D4A84AD0);
}

uint64_t sub_1D4A8DDC8@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v3 - 0x139154EEB4327ECLL);
  int v5 = v4 - 1740488377;
  if (v4 - 1740488377 < 0) {
    int v5 = 1740488377 - v4;
  }
  *(_DWORD *)(v2 - 0x139154EEB4327ECLL) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((111
                                * ((v5 ^ 0xEFADFBFA)
                                 + 1020526464
                                 + ((v5 << (v1 - 67 + ((v1 - 10) | 0xA) + 16)) & 0xDF5BF7F4) != 746716026)) ^ (v1 - 619))))();
}

void gLg1CWr7p()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1F2C91B30
                + ((-35 * ((qword_1EA70FB08 + dword_1EA7106E0) ^ 0xD8)) ^ byte_1D54D33A0[byte_1D54CE750[(-35 * ((qword_1EA70FB08 + dword_1EA7106E0) ^ 0xD8))] ^ 0x68])
                - 99);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = *(&off_1F2C91B30
       + (*((unsigned char *)off_1F2C91D00
                           + (*((unsigned __int8 *)off_1F2C91B68
                              + (-35 * ((qword_1EA70FB08 + v1) ^ 0xD8))) ^ 0x8Bu)
                           - 8) ^ (-35 * ((qword_1EA70FB08 + v1) ^ 0xD8)))
       - 141);
  uint64_t v3 = *v2 - v1 - (void)&v5;
  *(void *)(v0 - 4) = (1226760413 * v3) ^ 0x5B705F9A26A579D8;
  void *v2 = 1226760413 * (v3 ^ 0x5B705F9A26A579D8);
  v6[1] = 108757529 * ((v6 + 70320331 - 2 * (v6 & 0x43100CB)) ^ 0xE4AD62E0) - 504207030;
  LOBYTE(v2) = -35 * ((*(_DWORD *)v2 - *(_DWORD *)(v0 - 4)) ^ 0xD8);
  int v4 = (char *)*(&off_1F2C91B30
               + ((-35 * ((qword_1EA70FB08 + dword_1EA7106E0) ^ 0xD8)) ^ byte_1D54C8060[byte_1D54D31A0[(-35 * ((qword_1EA70FB08 + dword_1EA7106E0) ^ 0xD8))] ^ 0xCA])
               + 112)
     - 4;
  (*(void (**)(_DWORD *))&v4[8
                                      * (*((unsigned char *)off_1F2C91C90
                                                          + (*((unsigned __int8 *)off_1F2C91DC8
                                                             + v2
                                                             - 12) ^ 0x27u)
                                                          - 4) ^ v2)
                                      + 17496])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4A8E0B4@<X0>(uint64_t a1@<X5>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _DWORD *a16)
{
  unint64_t v20 = (*a16 ^ (a2 + (v17 ^ 0x6B8) + 728 - 921))
      + (**(_DWORD **)(v16 - 0x139154EEB4327E8) ^ a2)
      * (unint64_t)(**(_DWORD **)(v16 - 0x139154EEB4327E8) ^ a2);
  uint64_t v21 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v18 + 8 * (((v17 ^ 0x6B8) + 1918) ^ (103 * (v19 > 1))));
  return v21(v20 + 0x30530205DD195846 - ((2 * v20) & 0x60A6040BBA32B08CLL), 3103670704, 810745870, v16 - 0x139154EEB4327E8, v21, a1, 2446764576, v19 - 1555464716, a3, a4, a5);
}

uint64_t sub_1D4A8E2B0@<X0>(unint64_t a1@<X0>, int a2@<W1>, unint64_t a3@<X2>, int a4@<W6>, int a5@<W7>, unsigned int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  BOOL v33 = v20 > v30;
  int v34 = v27 + a4;
  int v35 = v27 + 1;
  uint64_t v36 = 4 * (v35 + a4);
  uint64_t v37 = (*(_DWORD *)(a20 + v36) ^ a6) + ((v21 + 503) ^ HIDWORD(a1));
  unint64_t v38 = HIDWORD(v23)
      + v31 * (unint64_t)(*(_DWORD *)(*v29 + v36) ^ a6)
      + ((v37 + (v24 ^ (a2 + 184)) - (v26 & (2 * v37))) ^ a3);
  *(_DWORD *)(a20 + 4 * v34) = v38 + a6 - (v22 & (2 * v38));
  if (v33 == v35 + v32 < -1175863809) {
    BOOL v33 = v35 + v32 < a5;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * (v25 | (4 * v33))))();
}

uint64_t sub_1D4A8E35C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_DWORD *)(v1 - 0x2C138C8FAF40FC12) == ((2 * (a1 ^ 0x456)) ^ 0xD7971BF))
                                * ((a1 ^ 0x456) - 65)) ^ a1)))();
}

uint64_t sub_1D4A8E3AC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1020
                                * (((LODWORD(STACK[0x4E8]) - 2079419384) ^ 0xBCE8FFFFB7F7F5F2)
                                 + 0x4317000127EE6504
                                 + (((unint64_t)(LODWORD(STACK[0x4E8]) - 2079419384) << (3 * (v0 ^ 0x23u) + 112)) & 0x16FEFEBE4) != 3756415734)) ^ v0)))();
}

uint64_t sub_1D4A8E440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a5 + (v6 + v9)) = *(unsigned char *)(v11 + a6 - 281128576);
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((207 * (v9 + v6 + 1 < (v8 ^ (4 * ((v7 - 1219) | 0x513u))) + 56)) ^ ((v7 - 1219) | 0x513))))();
}

uint64_t sub_1D4A8E49C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v5)) = *(unsigned char *)(v4 + (v7 + v5));
  return (*(uint64_t (**)(void))(v1 + 8 * ((v6 ^ (v7 - 1 == v2)) & 1 | v3)))(0);
}

uint64_t sub_1D4A8E4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v28 = 628203409 * ((~((v27 - 168) | 0x9F6F2C5F) + ((v27 - 168) & 0x9F6F2C5F)) ^ 0xE218DF93);
  *(_DWORD *)(v27 - 160) = v28 + v24 + 602;
  *(_DWORD *)(v27 - 156) = 1045653968 - v28;
  *(void *)(v25 + 392) = a24;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v24 + 2234)))(v27 - 168);
  return a20(v29);
}

uint64_t sub_1D4A8E54C()
{
  *(void *)(v5 - 120) = v1;
  *(void *)(v5 - 112) = v2;
  *(_DWORD *)(v5 - 12_Block_object_dispose(&STACK[0x368], 8) = v3
                        - 108757529 * ((2 * ((v5 - 128) & 0x2474F870) - (v5 - 128) - 611645560) ^ 0x3B1765A3)
                        + 1067;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v3 + 1662)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((v4 != ((v3 + 725) ^ 0x56B25506)) * (7 * (v3 ^ 0x2C1) - 1092)) ^ v3)))(v6);
}

uint64_t sub_1D4A8E5F8(uint64_t result)
{
  unint64_t v1 = 1374699841 * ((result - 2 * (result & 0xA8F7ECC532399345) - 0x5708133ACDC66CBBLL) ^ 0xA6FB72C95FCD8B4CLL);
  unint64_t v2 = *(void *)(result + 16) ^ v1;
  unint64_t v3 = *(void *)(result + 8) - v1;
  BOOL v4 = v2 >= v3;
  BOOL v5 = (uint64_t)v2 < (uint64_t)v3;
  int v6 = !v4;
  if (((*(_DWORD *)(result + 24) + 1374699841 * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) & 1) == 0) {
    BOOL v5 = v6;
  }
  BOOL v7 = !v5;
  uint64_t v8 = 32;
  if (!v7) {
    uint64_t v8 = 28;
  }
  *(_DWORD *)(result + 36) = *(_DWORD *)(result + 40) ^ (1374699841
                                                       * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) ^ *(_DWORD *)(result + v8) ^ (1374699841 * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C));
  return result;
}

uint64_t sub_1D4A8E688(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((28
                                * ((((unint64_t)(v4 - v5 - 4) < 0x20) ^ (53 * ((2 * a4) ^ 0xB8)
                                                                                               + 1)) & 1)) | (2 * a4))))();
}

uint64_t sub_1D4A8E6D4@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  uint64_t v11 = (v5 + a1);
  *(unsigned char *)(v10 + v11) = *(unsigned char *)(v7 + v11) ^ *(unsigned char *)(v2 + (v11 & 0xF)) ^ *(unsigned char *)(a2 + (v11 & 0xF)) ^ *(unsigned char *)((v11 & 0xF) + v3 + 2) ^ (((v5 + a1) & 0xF) * v6) ^ v8;
  return (*(uint64_t (**)(void))(v9 + 8 * ((54 * ((v11 + 1) < 0x150)) ^ v4)))();
}

void sub_1D4A8E740(uint64_t a1)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  int v2 = 3804331 * (((a1 | 0xD29CC998) - (a1 | 0x2D633667) + 761476711) ^ 0xAC49EC6E);
  int v3 = *(_DWORD *)(a1 + 4);
  int v4 = *(_DWORD *)a1 ^ v2;
  int v36 = *(_DWORD *)(a1 + 8) ^ v2;
  unint64_t v15 = 3804331
      * (((a1 | 0xF8BBF308D29CC998) - (a1 | 0x7440CF72D633667) + 0x7440CF72D633667) ^ 0x3712930CAC49EC6ELL);
  int v5 = v3 + v2;
  unsigned int v6 = 1178560073
     * ((((&v46 | 0x135B03A) ^ 0xFFFFFFFE) - (~&v46 | 0xFECA4FC5)) ^ 0x445E37A7);
  unint64_t v23 = &STACK[0x72E93EC0CCAF589E];
  __n128 v47 = &STACK[0x72E93EC0CCAF589E];
  unsigned int v46 = 1184294775 - v6;
  int v48 = v4 - v6 - 1882357480;
  uint64_t v7 = (char *)*(&off_1F2C91B30 + v4 + 136) - 4;
  (*(void (**)(unsigned int *))&v7[8 * v4 + 18080])(&v46);
  int v8 = v36;
  int v34 = v5 + 2053176831;
  int v14 = v5 - 1085102127;
  int v17 = v5 - 778917869;
  int v16 = v5 - 602304077;
  unsigned int v30 = &v45;
  v12[2] = (char *)&v12[-81068119] + 2;
  v12[1] = &v43 - 495;
  int v20 = (v4 - 1735151643) & 0x676C562B;
  int v18 = v4 ^ 0x5DC51FCA;
  int v38 = (v4 - 927855129) & 0x374DF6DC;
  int v29 = v38 ^ 0x4FC;
  int32x4_t v26 = vdupq_n_s32(0x3EBED70Eu);
  int v33 = v4 ^ 0x7A180424;
  unsigned int v28 = v4 ^ 0xFFFFFC49;
  int v25 = (v4 ^ 0x5B1) - 1425;
  int32x4_t v24 = vdupq_n_s32(0x1F5F6B8Fu);
  int v13 = v4 + 887796651;
  uint64_t v37 = 1130;
  uint64_t v27 = 1130;
  int v31 = v4 ^ 0x46A;
  int v32 = v4;
  int32x4_t v22 = vdupq_n_s32(0x1F5F6B87u);
  uint64_t v19 = a1;
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v21 = *(void *)&v7[8 * v4];
  unsigned int v10 = v8 - (((v4 ^ 0x5DC51FCA) + 2 * v8) & 0xA7400726) - 2105371776;
  char v39 = (v20 ^ HIBYTE(v10) ^ 0xF2) - ((2 * (v20 ^ HIBYTE(v10) ^ 0xF2)) & 0xD6) - 21;
  char v40 = (BYTE2(v10) ^ 0xA0) - 2 * ((BYTE2(v10) ^ 0xA0) & 0xEF ^ BYTE2(v10) & 4) - 21;
  char v41 = (BYTE1(v10) ^ 3) - 2 * ((BYTE1(v10) ^ 3) & 0xEF ^ BYTE1(v10) & 4) - 21;
  char v42 = (v8 - (((v4 ^ 0xCA) + 2 * v8) & 0x26) + 0x80) ^ 0x78;
  uint64_t v11 = *(void *)&v7[8
                     * ((31 * (((2 * v44) & 0x2E ^ 8) + (v44 & 0x3F ^ 0x61FBFF73u) - 1643904915 < 0xFFFFFFC0)) ^ (v4 + 437))];
  uint64_t v35 = v9;
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1D4A8EA20@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v1 + 96) + 52_Block_object_dispose(&STACK[0x368], 8) = 1057444614;
  *(_DWORD *)(*(void *)(v1 + 96) + 532) = 1740488377;
  *(void *)(*(void *)(v1 + 96) + 536) = *(void *)(v1 + 96) + 544;
  uint64_t v4 = *(void *)(v1 + 96) + 0x139154EEB432A00;
  unsigned int v5 = 1178560073 * (((&v8 | 0x314D4C0E) - (&v8 & 0x314D4C0E)) ^ 0x8BD9346C);
  uint64_t v9 = *(void *)(v2 + 8) + (*(_DWORD *)(v2 + 4) - v3);
  uint64_t v10 = v4;
  unsigned int v8 = v5 + 652;
  unsigned int v12 = v5 + v3 - 932059834;
  (*(void (**)(unsigned int *))(a1 + 18480))(&v8);
  int v6 = v11;
  *(void *)(*(void *)(v1 + 96) + 512) = *(void *)(v2 + 8) + (*(_DWORD *)(v2 + 4) - v3);
  return (v6 - 1310800152);
}

uint64_t sub_1D4A8EB60@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((*(_DWORD *)(a1 + 532) - 1740488378) < 0x7FFFFFFF)
                                * (223 * (v1 ^ 0x2D0) + 657)) ^ v1)))();
}

uint64_t sub_1D4A8EBAC@<X0>(unsigned int a1@<W1>, int a2@<W2>, unsigned int a3@<W3>, int a4@<W8>)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a4 + v4 + 1485 < (a3 ^ a1)) * a2) ^ a3)))();
}

uint64_t sub_1D4A8EBE8@<X0>(uint64_t a1@<X3>, int a2@<W5>, uint64_t a3@<X6>, int a4@<W8>)
{
  uint64_t v15 = v4;
  uint64_t v16 = (((v13 + a4 + 724) ^ (a2 + 1027)) - 1883210540) & 0xE7B13FF6;
  int v17 = *(unsigned __int8 *)(*v5 + v6 + 0x7AC82A126901FFA0)
      - (*(unsigned __int8 *)(*(void *)(a1 + 8 * (v13 + a4 - 115)) - 2 + v6 + 0x7AC82A126901FFA0) ^ v10);
  BOOL v19 = (v17 ^ v12) + (v11 & (2 * v17)) + v7 != v14 || v16 + a3 + 0x7AC82A11D3254418 == 0x7AC82A126901FFA0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8 * (int)((v19 * v8) ^ v16)))(2411756756, v15);
}

void sub_1D4A8EC08()
{
  *(void *)(v0 + 312) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1098));
  JUMPOUT(0x1D4AA9AFCLL);
}

uint64_t sub_1D4A8EC64()
{
  BOOL v5 = v1 + 838228837 > 768677282 || v1 + 838228837 < v3 + v0 + 786 + ((v0 - 209) | 0xC8) - 1378808656;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1091 * v5) ^ v0)))();
}

uint64_t sub_1D4A8ECC0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1221
                                * (((v0 + ((v3 + 271428864) & 0xEFD253BD) - 444) & (2
                                                                                  * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v1) == v1)) ^ v3)))();
}

uint64_t sub_1D4A8ED20@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((2768 * (((a1 + 458) ^ 0xD8B57057) + *(_DWORD *)STACK[0x3F0] < 0x10)) ^ a1)))();
}

void sub_1D4A8ED64()
{
}

uint64_t sub_1D4A8ED78()
{
  return 4294925273;
}

uint64_t sub_1D4A8ED94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  uint64_t v43 = *(void *)(a20 + 24);
  *(void *)(v42 - 176) = 0xEBEBEBEBEBEBEBEBLL;
  *(void *)(v42 - 16_Block_object_dispose(&STACK[0x368], 8) = 0xEBEBEBEBEBEBEBEBLL;
  int v44 = 235795823 * (((v42 - 160) & 0xA61497F7 | ~((v42 - 160) | 0xA61497F7)) ^ 0xCD462151);
  *(_DWORD *)(v42 - 152) = v44 + 307381638;
  *(void *)(v42 - 160) = v42 - 192;
  *(_DWORD *)(v42 - 124) = (v39 + 1928) ^ v44;
  *(void *)(v42 - 144) = &a39;
  *(void *)(v42 - 136) = v43;
  *(void *)(v42 - 120) = v42 + 0xC8F4093922907B7;
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (v39 ^ 0x8E8)))(v42 - 160);
  return (*(uint64_t (**)(uint64_t))(v40
                                            + 8
                                            * ((1921
                                              * (*(_DWORD *)(v42 - 128) == (((v39 - 6) | 4) ^ (v41 + 433) ^ ((v39 + 1471) | 0x80)))) ^ v39)))(v45);
}

uint64_t sub_1D4A8EEA8@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unsigned int a41)
{
  unsigned int v43 = ((a3 + a5 - 4377252) | 0x42CA05) ^ ((*v42 & 0x7FFFFFFE | v42[623] & 0x80000000) >> 1) ^ 0x7CD83588;
  v42[623] = v42[396] ^ a4 ^ *((_DWORD *)&STACK[0x530] + (*v42 & 1)) ^ (v43 + a1 - (a2 & (2 * v43)));
  return (*(uint64_t (**)(void))(v41 + 8 * ((1767 * (a41 > 0x26F)) ^ a5)))();
}

uint64_t sub_1D4A8EF34@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  int v9 = *(_DWORD *)(a2 + 4 * (v6 + v4 - 8)) ^ *(_DWORD *)(a2 + 4 * (v6 + v4 - 3));
  HIDWORD(v10) = *(_DWORD *)(a2 + 4 * (v6 + v4 - 16)) ^ *(_DWORD *)(a2
                                                                                  + 4 * (v6 + v4 - 14)) ^ (v9 + v8 - ((v9 << (v2 + 118)) & a1)) ^ v8;
  LODWORD(v10) = *(_DWORD *)(a2 + 4 * (v6 + v4 - 16)) ^ *(_DWORD *)(a2
                                                                                  + 4 * (v6 + v4 - 14)) ^ (v9 + v8 - ((v9 << (v2 + 118)) & a1));
  *(_DWORD *)(a2 + 4 * (v3 + v6)) = (v10 >> 31) + v8 - (a1 & (2 * (v10 >> 31)));
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v3 + 1 + v6) < 0x50) * v5) ^ v2)))();
}

uint64_t sub_1D4A8EFBC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(a3 + (v4 - 8)) = *(void *)(v5 + (v4 - 8));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 == -8) * v7) ^ a4)))();
}

void sub_1D4A8EFC8()
{
}

uint64_t sub_1D4A8EFD0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((63 * (STACK[0x498] == 0)) ^ (v0 + 434))))();
}

uint64_t sub_1D4A8F008()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((v0 <= ((STACK[0x420] - 590) | 0x4B0) + 1952422574)
                                     * ((STACK[0x420] + 643) ^ 0x6E5)) ^ (STACK[0x420] + 555))))();
}

uint64_t sub_1D4A8F054(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((110
                                * (((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 - 2119813987))
                                   + (((v3 - 672) | 0x70) ^ 0x78F4E5C2)
                                   - ((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 - 2119813987)) << (v3 + 94)) & 0x162)) & 0x1F) != 14)) ^ v3)))();
}

uint64_t sub_1D4A8F0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((75 * (v7 + 1 == v9 + 4)) ^ a6)))(v6);
}

uint64_t sub_1D4A8F190@<X0>(int a1@<W2>, unsigned int a2@<W5>, uint64_t a3@<X8>)
{
  int v12 = (v3 - 928) | 0x84;
  int v13 = (char)(v4 - 15) - (char)(v5 + v12 + 77);
  uint64_t v14 = (v13 ^ 0xFC9FBFFF) + 268363596 + ((2 * v13) & 0xF93F7FFE);
  int v15 = v12 - 19;
  int v16 = (*(unsigned __int8 *)(a3 + 1128 + v8 + 0x3DD4ED798559EACCLL) ^ v6)
      - *(unsigned __int8 *)(v10 + 1148 + v8 + 0x3DD4ED798559EACCLL);
  BOOL v18 = (v16 ^ v9) + 1878695675 + ((2 * v16) & 0xB59ED37E) == 1254754490
     && ((5 * ((v12 - 19) ^ a2)) ^ 0x45ALL) + 0x3DD4ED798559EACCLL != v7 + 20;
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((v18 * a1) ^ v15)))(v14);
}

uint64_t sub_1D4A8F1DC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v5)) = *(unsigned char *)(v4 + (a2 + v5));
  return (*(uint64_t (**)(void))(v6 + 8 * (int)(((a2 - 1 == a4) * (((a3 + 640272837) & 0xD9D637DF) - 1715)) ^ a3)))();
}

uint64_t sub_1D4A8F224(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 2_Block_object_dispose(&STACK[0x368], 8) = a3;
  return result;
}

uint64_t sub_1D4A8F22C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((50 * (v2 > 0x82)) ^ (v0 + 594))))();
}

uint64_t sub_1D4A8F250(uint64_t a1, int a2)
{
  uint64_t v10 = *(uint64_t (**)(void))(v6 + 8 * (v7 - 2022));
  uint64_t v11 = *v9;
  unsigned int v12 = v2 + a2;
  *(unsigned char *)(*v9 + v12) = (v4 ^ HIBYTE(v3)) - (v5 & (2 * (v4 ^ HIBYTE(v3)))) - 21;
  *(unsigned char *)(v11 + v12 + 1) = (BYTE2(v3) ^ v8) - 2 * ((BYTE2(v3) ^ v8) & 0xEF ^ BYTE2(v3) & 4) - 21;
  *(unsigned char *)(v11 + (v2 + a2 + 2)) = (BYTE1(v3) ^ 3) - 2 * ((BYTE1(v3) ^ 3) & 0xEF ^ BYTE1(v3) & 4) - 21;
  *(unsigned char *)(v11 + v12 + 3) = v3 ^ 0x78;
  return v10();
}

uint64_t sub_1D4A8F260(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((50 * (((((a2 ^ 0x2FC) - 826) ^ (v2 < 0x20)) & 1) == 0)) ^ a2 ^ 0x508)))();
}

uint64_t sub_1D4A8F2A4()
{
  *(void *)(v6 - 120) = v2;
  *(void *)(v6 - 104) = v1;
  *(_DWORD *)(v6 - 112) = v4 + (((~(v6 - 128) & 0x9AB77AE2) - (~(v6 - 128) | 0x9AB77AE3)) ^ 0x20230281) * v5 + 1434;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 + 1990)))(v6 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((*(_DWORD *)(v6 - 128) > v3) * (((v4 + 318) | 0x591) ^ 0x7AA)) ^ v4)))(v7);
}

uint64_t sub_1D4A8F338(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unsigned int v31 = *(_DWORD *)(a23 - 0x2C138C8FAF40FC12) + 1339439294;
  v27.n128_u64[0] = 0xD6D6D6D6D6D6D6D6;
  v27.n128_u64[1] = 0xD6D6D6D6D6D6D6D6;
  v28.n128_u64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v28.n128_u64[1] = 0xEBEBEBEBEBEBEBEBLL;
  *(_DWORD *)(v26 - 140) = (((2 * v25) ^ 0x1080) - 204628499) & 0xC3266BE ^ 0x4A5;
  BOOL v29 = v31 < 0x5D4FAC91;
  if (v29 == (v23 + 1565501341) < 0x5D4FAC91) {
    BOOL v29 = v23 + 1565501341 < v31;
  }
  return (*(uint64_t (**)(uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(v24
                                                                                            + 8
                                                                                            * ((!v29
                                                                                              * ((7
                                                                                                * ((v23 + 757) ^ 0x7A6)) ^ 0xDC0)) ^ (v23 + 757))))(2801639823, a1, a2, a3, a4, v27, v28);
}

uint64_t sub_1D4A8F49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                               + 8
                                                                               * ((((a7 + 238) ^ (a7 + 508) ^ 0x2F1)
                                                                                 * (v7 > 0xF)) ^ a7)))(a1, a2, a3, a4, 0);
}

uint64_t sub_1D4A8F4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((LODWORD(STACK[0x3D8]) == 642161856) ^ (5 * (v8 ^ 0x8F))) & 1) * a8) ^ v8)))();
}

void sub_1D4A8F51C(uint64_t a1, int a2)
{
  LODWORD(STACK[0x53C]) = v2;
  LODWORD(STACK[0x458]) = v4;
  LODWORD(STACK[0x504]) = v3;
  LODWORD(STACK[0x5D4]) = v5;
  LODWORD(STACK[0x588]) = v6;
  unint64_t v10 = STACK[0x660];
  int v11 = *(_DWORD *)(STACK[0x660] - 0x72E93EC0CCAF572ALL);
  LODWORD(STACK[0x45C]) = v9 + 80;
  *(_DWORD *)(v10 - 0x72E93EC0CCAF572ALL) = (v11 ^ v8)
                                          + (v6 ^ v8)
                                          + (a2 ^ (v8 + 536))
                                          - (v7 & (2 * ((v11 ^ v8) + (v6 ^ v8))));
  JUMPOUT(0x1D4A8F594);
}

uint64_t sub_1D4A8F59C()
{
  BOOL v4 = v1 - 106275087 < (int)((((v0 - 572) | 0xC0) ^ 0x75851BDA) + v3);
  if (v3 > 0xA7AE6D0 != v1 - 106275087 < -175826641) {
    BOOL v4 = v3 > 0xA7AE6D0;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (v0 - 532)) ^ v0)))();
}

uint64_t sub_1D4A8F60C@<X0>(int a1@<W4>, int a2@<W8>)
{
  *(unsigned char *)(v3 + (a1 + v5)) = *(unsigned char *)(v4 + (a1 + v5));
  return (*(uint64_t (**)(void))(v2 + 8 * ((15 * (a1 - 1 == ((v6 + 2047008956) & 0x85FD1FBE ^ (a2 + 944)))) ^ v6)))();
}

uint64_t sub_1D4A8F660@<X0>(int a1@<W0>, int a2@<W4>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31,uint64_t a32)
{
  LODWORD(STACK[0x3E0]) = a1;
  LODWORD(STACK[0x3D8]) = v32;
  if (v32 == 642161876)
  {
    int v38 = 15;
  }
  else
  {
    if (v32 != 642161872)
    {
      LODWORD(STACK[0x3C8]) = 0;
      LODWORD(STACK[0x3D0]) = 0;
      goto LABEL_7;
    }
    int v38 = 18;
  }
  LODWORD(STACK[0x3D0]) = v38;
  LODWORD(STACK[0x3C8]) = 1;
LABEL_7:
  int v39 = (a2 - 986) | 0x46;
  int v40 = 1178560073 * ((2 * ((v37 - 200) & 0x70168B28) - (v37 - 200) - 1880525616) ^ 0x357D0CB2);
  uint64_t v41 = (void *)(v37 - 200);
  v41[4] = STACK[0x3E8];
  void v41[2] = a3 + 0x139154EEB432A00;
  v41[1] = a32;
  v41[6] = 0;
  v41[7] = 0;
  *(_DWORD *)(v37 - 176) = v33 - v40 - 619482852;
  *(_DWORD *)(v37 - 160) = (a2 + 787) ^ v40;
  v41[8] = v35 + 1168;
  v41[9] = a3 + 0x139154EEB432B10;
  (*(void (**)(uint64_t))(v36 + 8 * a31))(v37 - 200);
  return (*(uint64_t (**)(void))(v36 + 8 * ((2813 * (*(_DWORD *)(v37 - 200) == (v39 ^ 0x1F5F6B40))) ^ v34)))(LODWORD(STACK[0x3E0]));
}

uint64_t sub_1D4A8F7E4(int a1, int a2, uint64_t a3, uint64_t a4)
{
  unsigned int v9 = v5 ^ ((*v7 & (v4 ^ 0x7FFFFD3B) | v7[623] & 0x80000000) >> 1);
  v7[623] = v7[396] ^ a2 ^ *(_DWORD *)(a4 + 4 * (*v7 & 1)) ^ (a1
                                                              + ((v4 - 1998105290) & 0x7718AC5F)
                                                              + v9
                                                              - (v6 & (2 * v9))
                                                              - 1115);
  return (*(uint64_t (**)(void))(v8 + 8 * ((2799 * (LODWORD(STACK[0x454]) > 0x26F)) ^ v4)))();
}

uint64_t sub_1D4A8F874()
{
  int v3 = v1 - ((2 * v1 + 136128526) & 0x9FC9B8C) + v2 + 151837928;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (v2 | (16
                                     * (((v2 - 465321450) & 0x1BBC3FFF ^ 0x9D40F77 ^ (2 * v3) & 0xFDD749DE)
                                      + (v3 ^ 0xFA15E929)
                                      - 1390642336 != 738730063)))))();
}

uint64_t sub_1D4A8F920()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v1 + 1175)))();
  BOOL v4 = v0 == ((v1 + 1988889500) & 0x8973F38C ^ 0x1F5F6803);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v4 | (2 * v4)) ^ (v1 - 215))))(v3);
}

uint64_t sub_1D4A8F984@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (a1 - v4);
  int8x16_t v9 = vrev64q_s8(*(int8x16_t *)(a4 + v8 - 15));
  int8x16_t v10 = vextq_s8(v9, v9, 8uLL);
  int8x16_t v11 = vrev64q_s8(*(int8x16_t *)(a4 + v8 - 31));
  int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
  uint64_t v13 = v6 + v8;
  v14.i64[0] = 0xD6D6D6D6D6D6D6D6;
  v14.i64[1] = 0xD6D6D6D6D6D6D6D6;
  v15.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v15.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v10, vandq_s8(vaddq_s8(v10, v10), v14)), v15));
  *(int8x16_t *)(v13 - 15) = vextq_s8(v16, v16, 8uLL);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), v14)), v15));
  *(int8x16_t *)(v13 - 31) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 + 32 == ((v5 + 370) ^ a2)) * a3) ^ v5)))();
}

uint64_t sub_1D4A8FA10(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((180 * ((a7 + 1 + v7) < 0x20)) ^ a3)))();
}

uint64_t sub_1D4A8FAF0(int a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 142_Block_object_dispose(&STACK[0x368], 8) = 642161876;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1107 * (*(_DWORD *)(a2 + 4) == a1 + 376 + v2 + 5 * (a1 ^ 0x305))) ^ a1)))();
}

uint64_t sub_1D4A8FB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * (((a23 == ((v23 + 1191) ^ 0x78F4E5DB)) * (v23 + 756)) ^ v23)))();
}

uint64_t sub_1D4A8FB88()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((59
                                     * (((v0 < (STACK[0x420] ^ 0x745F9AA7)) ^ (STACK[0x420] + 94)) & 1)) ^ (STACK[0x420] + 555))))();
}

uint64_t sub_1D4A8FBD8(int a1, int a2, int a3, int a4)
{
  uint64_t v9 = (a1 + a2 + a3);
  unint64_t v10 = v9 + v8 + 1;
  uint64_t v11 = ((_BYTE)a1 + (_BYTE)a2 + (_BYTE)a3) & 0xF;
  uint64_t v12 = v11 - v9;
  unint64_t v13 = v5 + v11 - v9;
  unint64_t v14 = v11 + v5 + 1;
  unint64_t v15 = v11 + v4 - v9 + 2;
  unint64_t v16 = v11 + v4 + 3;
  unint64_t v17 = v12 + v6 + 4;
  unint64_t v18 = v6 + v11 + ((((a4 + 57692409) & 0xFC8FAFEB) - 966) ^ (a4 - 734));
  BOOL v20 = v14 > v8 && v13 < v10;
  int v22 = v16 > v8 && v15 < v10 || v20;
  if (v17 < v10 && v18 > v8) {
    int v22 = 1;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((508 * v22) ^ a4)))();
}

uint64_t sub_1D4A8FC80()
{
  return 4294925278;
}

uint64_t sub_1D4A8FC88()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((41 * (*(void *)(v1 + 264) != 0)) ^ (v0 + 1028))))();
}

uint64_t sub_1D4A8FCBC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,uint64_t a29,int a30)
{
  STACK[0x538] = 0xEC10AA6475181ABBLL;
  uint64_t v34 = *(unsigned int *)*(&off_1F2C91B30 + v32 + a1 - 453);
  *(void *)(v33 - 136) = a29 + v31;
  *(_DWORD *)(v33 - 12_Block_object_dispose(&STACK[0x368], 8) = a30 + a29;
  *(void *)(v33 - 120) = v34 + a29;
  *(_DWORD *)(v33 - 140) = a29;
  *(_DWORD *)(v33 - 10_Block_object_dispose(&STACK[0x368], 8) = a29 + a1 + 1980802588;
  *(_DWORD *)(v33 - 104) = a30 - a29 - 48;
  *(_DWORD *)(v33 - 112) = a29 ^ a28;
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(v30 + 8 * (v32 + a1 + 1725)))(v33 - 144);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * *(int *)(v33 - 144)))(v35);
}

uint64_t sub_1D4A8FCC8@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v60 = (unsigned __int8 *)&STACK[0x1990] + a2;
  *uint64_t v60 = *v59;
  *(void *)(v60 + 1) = *(void *)(v59 + 1);
  *(_DWORD *)(v60 + 9) = *(_DWORD *)(v59 + 9);
  *(_WORD *)(v60 + 13) = *(_WORD *)(v59 + 13);
  v60[15] = v59[15];
  uint64_t v61 = *((void *)v59 + 1);
  *((void *)v60 + 2) = *(void *)v59;
  *((void *)v60 + 3) = v61;
  int v62 = (v55 - 671) | 0x649;
  uint64_t v63 = *(void *)(v56 + 8 * (v55 ^ 0x3AE));
  uint64_t v64 = *(void *)(v56 + 8 * (v55 & 0x8776C86)) - 4;
  uint64_t v65 = *(void *)(v56 + 8 * (v55 - 883));
  char v66 = *(unsigned char *)(v65 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 14) ^ 0x86));
  char v67 = *(unsigned char *)(v65 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 10) ^ 0xCBLL));
  uint64_t v68 = *(void *)(v56 + 8 * (v55 ^ 0x3E5)) - 8;
  unsigned int v69 = *(unsigned __int8 *)(v68 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 1) ^ 0x1ALL));
  int v70 = (v69 >> 1) ^ (((((v69 ^ 0xE2) + (v69 & 0xD5 ^ 0x3F) + 1) ^ v69 & 0xDF) & 0xF0) >> 4) ^ 0x1A;
  int v71 = ((v60[3] ^ 0xB8) + *(unsigned char *)(v63 + (v60[3] ^ 0x54)) - 68) | ((v69 ^ 0xED ^ (v70 + (~(2 * v70) | 0x67) - 51)) << 16);
  LODWORD(v61) = (((*(unsigned __int8 *)(v64 + (v60[8] ^ 0x65)) + (v60[8] ^ 0x34) - 73) ^ 0xF5) << 24) | (((v67 ^ (16 * v67)) ^ 0xA1) << 8) | ((v60[11] ^ 0x3E) + *(unsigned char *)(v63 + (v60[11] ^ 0xD2)) - 68);
  LOBYTE(v69) = *(unsigned char *)(v65 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 6) ^ 0x2ELL));
  unsigned int v72 = *(unsigned char *)(v68 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 13) ^ 0x5BLL)) ^ 0x37;
  unsigned int v73 = ((v60[7] ^ 0x90) + *(unsigned char *)(v63 + (v60[7] ^ 0x7CLL)) - 68) | ((((v62 ^ v60[4] ^ 0x78)
                                                                                         + *(unsigned __int8 *)(v64 + (v60[4] ^ 0x42))
                                                                                         - 73) ^ v57) << 24) | (((v69 ^ (16 * v69)) ^ 0xBD) << 8);
  int v74 = *(unsigned __int8 *)(v68 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 13) ^ 0x5BLL)) ^ 0x37 ^ (v72 >> 4) ^ (v72 >> 1);
  int v75 = (((v66 ^ (16 * v66)) ^ 0x6D) << 8) | ((v74 - ((2 * v74) & 0x2E) + 23) << 16);
  LOBYTE(v70) = *(unsigned char *)(v68 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 5) ^ 0xEDLL));
  int v76 = v71 | (((*(unsigned __int8 *)(v64 + (*v60 ^ 0x81)) + (*v60 ^ 0xD0) - 73) ^ 0x3C) << 24);
  int v77 = ((v70 ^ 0x37) >> 4) ^ ((v70 ^ 0x37) >> 1);
  uint64_t v78 = *((unsigned __int8 *)&STACK[0x1990] + a2 + 9) ^ 0x38;
  uint64_t v343 = v68;
  uint64_t v345 = v64;
  uint64_t v346 = v63;
  LODWORD(v61) = v61 & 0xFF00FFFF | (((*(unsigned char *)(v68 + v78) ^ ((*(unsigned char *)(v68 + v78) ^ 0x37) >> 4) ^ ((*(unsigned char *)(v68 + v78) ^ 0x37) >> 1)) ^ 0x9C) << 16);
  uint64_t v79 = *((unsigned __int8 *)&STACK[0x1990] + a2 + 2) ^ 0x22;
  uint64_t v344 = v65;
  unsigned int v80 = v76 & 0xFFFF00FF | (((*(unsigned char *)(v65 + v79) ^ (16 * *(unsigned char *)(v65 + v79))) ^ 0x93) << 8);
  LODWORD(STACK[0x3D8]) = (v75 & 0xFFFFFF00 | ((((*((unsigned __int8 *)&STACK[0x1990] + a2 + 12) ^ 0x13)
                                               + *(unsigned __int8 *)(v64
                                                                    + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 12) ^ 0x42))
                                               - 73) ^ v57) << 24) | (*(unsigned char *)(v63 + (*((unsigned __int8 *)&STACK[0x1990] + a2 + 15) ^ 0x38)) + (*((unsigned char *)&STACK[0x1990] + a2 + 15) ^ 0xD4) - 68)) ^ 0x4C86028B;
  LODWORD(STACK[0x388]) = v80 ^ 0x6BEABF59;
  LODWORD(STACK[0x288]) = (v73 & 0xFF00FFFF | ((v70 ^ 0x6C ^ (v77
                                                                                              - ((2 * v77) & 0xE8)
                                                                                              + 116)) << 16)) ^ 0xEA041E2B;
  LODWORD(STACK[0x3B8]) = v61 ^ 0xE8E28C89;
  unint64_t v341 = *(unsigned char **)(a1 + 384);
  uint64_t v342 = *(unsigned __int8 **)(a1 + 392);
  STACK[0x3D0] = 14;
  HIDWORD(v352) = v62 ^ 0x4AA;
  uint64_t v81 = v65;
  LODWORD(v61) = *(unsigned __int8 *)(v65 + (v62 ^ 0xAA ^ v342[14] ^ 0x18u));
  STACK[0x2D8] = 4;
  HIDWORD(a12) = (v62 - 1152253904) & 0x44ADFE7C;
  uint64_t v82 = v342[4];
  LODWORD(STACK[0x3F8]) = (-((HIDWORD(a12) - 56) ^ (16 * v61)) - 2) ^ v61;
  LOBYTE(v61) = v82 ^ 0xB7;
  LOBYTE(v75) = *(unsigned char *)(v64 + (v82 ^ v57));
  STACK[0x3E0] = 15;
  int v83 = v342[15];
  unsigned __int8 v84 = v75 + v61 - 73;
  if ((v83 & 0x20) != 0) {
    int v85 = -32;
  }
  else {
    int v85 = 32;
  }
  uint64_t v86 = (v85 + v83);
  int v87 = *(unsigned __int8 *)(v346 + (v86 ^ 0xDD));
  STACK[0x3C8] = 6;
  int v356 = v87 + (v86 ^ 0x31);
  int v88 = *(unsigned __int8 *)(v65 + (v342[6] ^ 0x51));
  STACK[0x378] = 12;
  HIDWORD(v89) = v88 ^ (((32 * v88) ^ 0x3F) + ((16 * v88) ^ 0xFFFFFFE0) - 1) ^ 0x3F;
  LODWORD(v89) = BYTE4(v89) & 0xF8;
  STACK[0x260] = 0;
  unint64_t v90 = ((v89 >> 3) | ((unint64_t)(v84 ^ 0xE5u) << 13)) ^ 0x58F620A6;
  int v91 = (v90 >> 21) | (v90 << 11);
  int v355 = *(unsigned __int8 *)(v64 + (v342[12] ^ 0xF7) - 2 * ((v342[12] ^ 0xF7) & 0xAEu) + 174) - (v342[12] ^ 0xF7);
  uint64_t v92 = *v342;
  STACK[0x380] = 3;
  uint64_t v93 = v342[3];
  int v94 = *(unsigned __int8 *)(v64 + (v92 ^ 0xD8)) + (v92 ^ 0x76) - 2 * (v92 ^ 0x76);
  int v95 = *(unsigned __int8 *)(v346 + (v93 ^ 0x57));
  STACK[0x3B0] = 8;
  int v353 = (v93 ^ 0xFFFFFFBB) + v95;
  LOBYTE(v8_Block_object_dispose(&STACK[0x368], 8) = (v342[8] ^ 0xA7) + *(unsigned char *)(v64 + (v342[8] ^ 0xF6));
  char v96 = v88 - ((2 * v88 + 110) & 0x4E);
  STACK[0x2E0] = 7;
  LOBYTE(v93) = (v342[7] ^ 0xE9) + *(unsigned char *)(v346 + (v342[7] ^ 5));
  STACK[0x258] = 13;
  int v97 = *(unsigned __int8 *)(v68 + (v342[13] ^ 0x12));
  int v98 = v62;
  unsigned int v99 = v97 ^ ((((v97 ^ 0x37u) >> 3) & 4 ^ v97 & 0xA4 | ((v97 ^ 0x37u) >> 3) & 0xFFFFFFFB ^ (v97 ^ 0x37) & 0x5A) >> 1);
  LOBYTE(v97) = *(unsigned char *)(v68 + (v342[5] ^ 0x9CLL));
  int v100 = ((v97 ^ 0x37) >> 4) ^ ((v97 ^ 0x37) >> 1);
  int v101 = (v93 - 68) | ((v97 ^ 0xE6 ^ (v100 - ((2 * v100) & 0xE8) + 116)) << 16);
  STACK[0x228] = 9;
  int v102 = *(unsigned __int8 *)(v68 + (v342[9] ^ 0x76));
  unsigned int v103 = (v102 & 8 ^ 0xFFFFFFDE) + 2 * (v102 & 8);
  unsigned int v104 = (v102 ^ 0x37u) >> 3;
  BOOL v105 = ((v103 + 2) & v104) == 0;
  char v106 = v103 + 124;
  char v107 = 56 - v103;
  if (v105) {
    char v107 = v106;
  }
  int v108 = v102 ^ ((((v104 + v107 - 90) ^ (v102 ^ 0x37) & 0xF7) & 0xFE) >> 1);
  int v109 = *(unsigned __int8 *)(v68 + (v342[1] ^ 0xCFLL));
  unsigned int v110 = v109 & 0xFFFFFFBF ^ 0x34 ^ ((v109 | 0xFFFFFFBF) + 68);
  int v111 = v98;
  uint64_t v112 = *(void *)(v56 + 8 * (v98 ^ 0x758)) - 4;
  LODWORD(v352) = v99;
  int v113 = *(_DWORD *)(v112 + 4 * (v99 ^ 0x50));
  int v114 = v110 ^ (v110 >> 4) ^ (v110 >> 1);
  char v115 = *(unsigned char *)(v81 + (v342[10] ^ 0xFBLL));
  uint64_t v116 = *(void *)(v56 + 8 * (v98 ^ 0x730)) - 8;
  HIDWORD(v350) = (v115 ^ (16 * v115)) ^ 0xA7;
  int v117 = *(_DWORD *)(v116 + 4 * ((v115 ^ (16 * v115)) ^ 0x28u));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v117 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v117 ^ 0x95150000;
  LODWORD(v350) = v94 - 74;
  HIDWORD(v357) = v111;
  uint64_t v119 = *(void *)(v56 + 8 * (v111 ^ 0x77E)) - 4;
  int v120 = (v118 >> 16) ^ *(_DWORD *)(v119 + 4 * ((v94 - 74) ^ 0xF9u)) ^ (16 * (v113 ^ 0x5DE1E96F)
                                                                                         + 1346595302
                                                                                         - ((32 * (v113 ^ 0x5DE1E96F)) & 0xA086D3C0));
  int v121 = *(_DWORD *)(v116 + 4 * (LODWORD(STACK[0x3F8]) ^ 0x71u));
  int v122 = v113 ^ (v120 - 1442159438 - ((2 * v120) & 0x5414C964));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v121 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v121 ^ 0x95150000;
  HIDWORD(v349) = v101 ^ v91;
  unsigned int v123 = v101 ^ v91 ^ 0xDD03A24B;
  unsigned int v124 = (v101 ^ v91) ^ 0x78;
  uint64_t v125 = *(void *)(v56 + 8 * (v111 - 1738));
  unint64_t v351 = __PAIR64__(v108, v114);
  unsigned int v126 = *(_DWORD *)(v125 + 4 * v124) ^ v122;
  int v127 = *(_DWORD *)(v112 + 4 * (v114 ^ 0xBFu)) ^ 0x5DE1E96F;
  int v128 = (v118 >> 16) ^ (16 * v127 + 1346595302 - ((32 * v127) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * HIBYTE(v123));
  HIDWORD(v34_Block_object_dispose(&STACK[0x368], 8) = (*(unsigned char *)(v346 + (v342[11] ^ 0x12)) + (v342[11] ^ 0xFE) - 68);
  int v129 = *(_DWORD *)(v125 + 4 * (HIDWORD(v348) ^ 0xB9u)) ^ v127;
  int v130 = *(unsigned __int8 *)(v81 + (v342[2] ^ 0x26)) ^ 0x46;
  LODWORD(v349) = v130 ^ (16 * v130);
  int v131 = *(_DWORD *)(v116 + 4 * (v349 ^ 0xFBu));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v131 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v131 ^ 0x95150000;
  int v132 = v129 ^ (v128 - 1442159438 - ((2 * v128) & 0x5414C964));
  HIDWORD(v347) = (v96 - 34);
  int v133 = *(_DWORD *)(v112 + 4 * BYTE2(v123)) ^ 0x5DE1E96F;
  int v134 = (v118 >> 16) ^ *(_DWORD *)(v119 + 4 * (HIDWORD(v347) ^ 0x40u)) ^ (16 * v133
                                                                           + 1346595302
                                                                           - ((32 * v133) & 0xA086D3C0));
  LODWORD(v34_Block_object_dispose(&STACK[0x368], 8) = v356 - 68;
  unsigned int v135 = *(_DWORD *)(v125 + 4 * ((v356 - 68) ^ 0xEBu)) ^ v133 ^ (v134
                                                                                  - 1442159438
                                                                                  - ((2 * v134) & 0x5414C964));
  int v136 = *(_DWORD *)(v112 + 4 * (v108 ^ 0x4Bu)) ^ 0x5DE1E96F;
  int v137 = *(_DWORD *)(v116 + 4 * (BYTE1(v91) ^ 0x31u));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v137 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v137 ^ 0x95150000;
  LODWORD(v347) = v355 - 74;
  int v138 = (v118 >> 16) ^ *(_DWORD *)(v119 + 4 * ((v355 - 74) ^ 0xF7u)) ^ (16 * v136
                                                                                          + 1346595302
                                                                                          - ((32 * v136) & 0xA086D3C0));
  HIDWORD(a19) = v353 - 68;
  int v139 = *(_DWORD *)(v116 + 4 * (BYTE1(v135) ^ 0xF4u));
  unsigned int v140 = *(_DWORD *)(v125 + 4 * ((v353 - 68) ^ 0x33u)) ^ v136 ^ (v138
                                                                                  - 1442159438
                                                                                  - ((2 * v138) & 0x5414C964));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v139 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v139 ^ 0x95150000;
  int v141 = *(_DWORD *)(v112 + 4 * (BYTE2(v140) ^ 0xBBu)) ^ 0x5DE1E96F;
  unsigned __int8 v142 = BYTE1(v132) ^ 0xAD;
  unsigned int v143 = v141 ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v126) ^ 0xA)) ^ *(_DWORD *)(v125 + 4
                                                                                  * (v132 ^ 0xDBu)) ^ (16 * v141 + 1346595302 - ((32 * v141) & 0xA086D3C0)) ^ (v118 >> 16);
  int v144 = *(_DWORD *)(v112 + 4 * (BYTE2(v126) ^ 0xDu));
  int v145 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v140 ^ 0x22E) >> 8));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v145 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v145 ^ 0x95150000;
  int v146 = (16 * (v144 ^ 0x5DE1E96F) + 1346595302 - ((32 * (v144 ^ 0x5DE1E96F)) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * ((v132 ^ 0xF15ADDBu) >> 24)) ^ (v118 >> 16);
  unsigned int v147 = *(_DWORD *)(v125 + 4 * (v135 ^ 0x80u)) ^ v144 ^ (v146
                                                                           - 1442159438
                                                                           - ((2 * v146) & 0x5414C964));
  int v148 = *(_DWORD *)(v112 + 4 * (BYTE2(v132) ^ 0xD6u)) ^ 0x5DE1E96F;
  unsigned int v149 = (16 * v148 + 1346595302 - ((32 * v148) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v135) ^ 0x19));
  int v150 = *(_DWORD *)(v116 + 4 * (BYTE1(v126) ^ 0xFu));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v150 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v150 ^ 0x95150000;
  unsigned int v151 = *(_DWORD *)(v125 + 4 * (v140 ^ 0x2Eu)) ^ v148 ^ (v118 >> 16) ^ (v149
                                                                                          - 1442159438
                                                                                          - ((2 * v149) & 0x5414C964));
  int v152 = *(_DWORD *)(v112 + 4 * (BYTE2(v135) ^ 0x32u));
  int v153 = *(_DWORD *)(v116 + 4 * v142);
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v153 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v153 ^ 0x95150000;
  int v154 = (v118 >> 16) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v140) ^ 0xBD)) ^ (16 * (v152 ^ 0x5DE1E96F)
                                                                         + 1346595302
                                                                         - ((32 * (v152 ^ 0x5DE1E96F)) & 0xA086D3C0));
  int v155 = v152 ^ *(_DWORD *)(v125 + 4 * (v126 ^ 0xCFu)) ^ 0x2C283FAB ^ (v154
                                                                                        - 1442159438
                                                                                        - ((2 * v154) & 0x5414C964));
  unsigned int v156 = v155
       - ((2 * v155) & 0x5F186BF6)
       + 797718011
       - ((2 * (v155 - ((2 * v155) & 0x5F186BF6) + 797718011)) & 0x405CEBE2)
       + 539915761;
  int v157 = *(_DWORD *)(v112 + 4 * (BYTE2(v156) ^ 0xEDu));
  BYTE2(v149) = BYTE2(v151) ^ 0xEB;
  int v158 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v151 ^ 0xDFF9) >> 8));
  unsigned int v159 = (16 * (v157 ^ 0x5DE1E96F) + 1346595302 - ((32 * (v157 ^ 0x5DE1E96F)) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v143) ^ 0x3C)) ^ (((v158 ^ 0x95156EE0) >> (v143 & 0x10 ^ 0x10) >> (v143 & 0x10)) + ((v158 << 16) ^ 0x6EE00000));
  int v160 = v159 - 1442159438 - ((2 * v159) & 0x5414C964);
  LOWORD(v159) = v143 ^ 0xB092;
  unsigned int v161 = *(_DWORD *)(v125 + 4 * (v147 ^ 0xB6u)) ^ v157 ^ v160;
  int v162 = *(_DWORD *)(v112 + 4 * ((v143 ^ 0xD550B092) >> 16)) ^ 0x5DE1E96F;
  int v163 = *(_DWORD *)(v116 + 4 * (BYTE1(v156) ^ 0xE6u));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v163 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v163 ^ 0x95150000;
  int v164 = (16 * v162 + 1346595302 - ((32 * v162) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v147) ^ 0x16)) ^ (v118 >> 16);
  int v165 = *(_DWORD *)(v125 + 4 * (v151 ^ 0xF9u)) ^ v162;
  int v166 = *(_DWORD *)(v119 + 4 * (HIBYTE(v151) ^ 5));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v166 ^ 0x1E6;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v166 ^ 0x50436800;
  int v167 = v118 >> 10;
  int v168 = *(_DWORD *)(v116 + 4 * BYTE1(v159));
  unsigned int v169 = v165 ^ (v164 - 1442159438 - ((2 * v164) & 0x5414C964));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v168 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v168 ^ 0x95150000;
  int v170 = *(_DWORD *)(v112 + 4 * (BYTE2(v147) ^ 0xD4u)) ^ 0x5DE1E96F;
  unint64_t v171 = (unint64_t)(v167 ^ 0x25EB099Cu) << 10;
  int v172 = *(_DWORD *)(v116 + 4 * (BYTE1(v147) ^ 0x24u));
  int v173 = *(_DWORD *)(v125 + 4 * (v156 ^ 0xC2u)) ^ v170 ^ (v118 >> 16);
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v172 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v172 ^ 0x95150000;
  int v174 = *(_DWORD *)(v112 + 4 * BYTE2(v149)) ^ 0x5DE1E96F;
  int v175 = (v118 >> 16) ^ (16 * v174 + 1346595302 - ((32 * v174) & 0xA086D3C0)) ^ *(_DWORD *)(v119
                                                                                          + 4 * (HIBYTE(v156) ^ 0xC9));
  unsigned int v176 = *(_DWORD *)(v125 + 4 * (v159 ^ 0x33u)) ^ v174 ^ (v175
                                                                           - 1442159438
                                                                           - ((2 * v175) & 0x5414C964));
  int v177 = v173 ^ ((v171 ^ (16 * v170) ^ HIDWORD(v171))
               - 1442159438
               - 2 * ((v171 ^ (16 * v170) ^ HIDWORD(v171)) & 0x2A0A64BE ^ BYTE4(v171) & 0xC));
  int v178 = *(_DWORD *)(v112 + 4 * (BYTE2(v176) ^ 0x62u)) ^ 0x5DE1E96F;
  unsigned int v179 = (16 * v178 + 1346595302 - ((32 * v178) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v161) ^ 0x80));
  unsigned int v180 = v177 ^ 0xF1F7E4A6;
  int v181 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v177 ^ 0xE4A6) >> 8));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v181 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v181 ^ 0x95150000;
  unsigned int v182 = *(_DWORD *)(v125 + 4 * (v169 ^ 0x68u)) ^ v178 ^ (v118 >> 16) ^ (v179
                                                                                          - 1442159438
                                                                                          - ((2 * v179) & 0x5414C964));
  int v183 = *(_DWORD *)(v112 + 4 * (BYTE2(v161) ^ 0xBAu)) ^ 0x5DE1E96F;
  int v184 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v176 ^ 0x2957) >> 8));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v184 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v184 ^ 0x95150000;
  int v185 = (16 * v183 + 1346595302 - ((32 * v183) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v169) ^ 0xCE)) ^ (v118 >> 16);
  unsigned int v186 = *(_DWORD *)(v125 + 4 * (v177 ^ 0x15u)) ^ v183 ^ (v185
                                                                           - 1442159438
                                                                           - ((2 * v185) & 0x5414C964));
  int v187 = *(_DWORD *)(v112 + 4 * (BYTE2(v169) ^ 0x60u)) ^ 0x5DE1E96F;
  int v188 = *(_DWORD *)(v116 + 4 * (BYTE1(v161) ^ 0x72u));
  HIDWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v188 ^ 0x6EE0;
  LODWORD(v11_Block_object_dispose(&STACK[0x368], 8) = v188 ^ 0x95150000;
  int v189 = (16 * v187 + 1346595302 - ((32 * v187) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * HIBYTE(v180)) ^ (v118 >> 16);
  int v190 = *(_DWORD *)(v125 + 4 * (v176 ^ 0x57u)) ^ v187 ^ (v189
                                                                           - 1442159438
                                                                           - ((2 * v189) & 0x5414C964));
  BOOL v105 = (v169 & 0x1000) == 0;
  int v191 = BYTE1(v169) ^ 0xC;
  if (v105) {
    int v192 = 16;
  }
  else {
    int v192 = -16;
  }
  int v193 = *(_DWORD *)(v112 + 4 * BYTE2(v180)) ^ 0x5DE1E96F;
  unsigned int v194 = *(_DWORD *)(v116 + 4 * ((v191 + v192) ^ 0x83u));
  unsigned int v195 = *(_DWORD *)(v119 + 4 * (HIBYTE(v176) ^ 0xA1)) ^ HIWORD(v194) ^ (v194 << 16) ^ (16 * v193
                                                                                        + 1346595303
                                                                                        + ~((32 * v193) & 0xA086D3C0)) ^ 0x6EE09515;
  int v196 = *(_DWORD *)(v125 + 4 * (v161 ^ 0xCu)) ^ v193 ^ (v195 - 1442159438 - ((2 * v195) & 0x5414C964));
  int v197 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v190 ^ 0x8D48) >> 8));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v197 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v197 ^ 0x95150000;
  unsigned int v199 = v196 ^ 0xEFBC3B44;
  int v200 = *(_DWORD *)(v112 + 4 * ((v196 ^ 0xEFBC3B44) >> 16)) ^ 0x5DE1E96F;
  int v201 = (v198 >> 16) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v182) ^ 0xCC)) ^ (16 * v200
                                                                         + 1346595302
                                                                         - ((32 * v200) & 0xA086D3C0));
  int v202 = *(_DWORD *)(v125 + 4 * (v186 ^ 0xA9u)) ^ v200;
  int v203 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v196 ^ 0x3B44) >> 8));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v203 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v203 ^ 0x95150000;
  int v204 = v202 ^ (v201 - 1442159438 - ((2 * v201) & 0x5414C964));
  __int16 v205 = v182 ^ 0xD583;
  int v206 = *(_DWORD *)(v112 + 4 * (((v182 ^ 0x255FD583) >> 16) ^ 0xC3u)) ^ 0x5DE1E96F;
  int v207 = (v198 >> 16) ^ *(_DWORD *)(v119 + 4 * HIBYTE(v186)) ^ (16 * v206 + 1346595302 - ((32 * v206) & 0xA086D3C0));
  unsigned int v208 = *(_DWORD *)(v125 + 4 * (v190 ^ 0x48u)) ^ v206 ^ (v207
                                                                           - 1442159438
                                                                           - ((2 * v207) & 0x5414C964));
  int v209 = *(_DWORD *)(v112 + 4 * ((v186 ^ 0xE93411A9) >> 16)) ^ 0x5DE1E96F;
  int v210 = *(_DWORD *)(v116 + 4 * HIBYTE(v205));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v210 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v210 ^ 0x95150000;
  int v211 = (16 * v209 + 1346595303 + ~((32 * v209) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * ((v190 ^ 0x807D8D48) >> 24)) ^ (v198 >> 16);
  unsigned int v212 = *(_DWORD *)(v125 + 4 * (v196 ^ 0x77u)) ^ v209 ^ (v211
                                                                           - 1442159438
                                                                           - ((2 * v211) & 0x5414C964));
  int v213 = *(_DWORD *)(v112 + 4 * (BYTE2(v190) ^ 0xBEu)) ^ 0x5DE1E96F;
  int v214 = *(_DWORD *)(v116 + 4 * (BYTE1(v186) ^ 0x82u));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v214 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v214 ^ 0x95150000;
  int v215 = (v198 >> 16) ^ *(_DWORD *)(v119 + 4 * HIBYTE(v199)) ^ (16 * v213 + 1346595302 - ((32 * v213) & 0xA086D3C0));
  int v216 = *(_DWORD *)(v116 + 4 * (BYTE1(v212) ^ 0x89u));
  unsigned int v217 = *(_DWORD *)(v125 + 4 * v205) ^ v213 ^ (v215 - 1442159438 - ((2 * v215) & 0x5414C964));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v216 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v216 ^ 0x95150000;
  int v218 = *(_DWORD *)(v112 + 4 * ((v217 ^ 0x950DA39D) >> 16)) ^ 0x5DE1E96F;
  unsigned int v219 = (16 * v218 + 1346595302 - ((32 * v218) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * ((v204 ^ 0x11521BCAu) >> 24));
  int v220 = v219 - 1442159438 - 2 * (v219 & 0x2A0A64B3 ^ *(_DWORD *)(v119 + 4 * ((v204 ^ 0x11521BCAu) >> 24)) & 1);
  BYTE1(v219) = BYTE1(v208) ^ 0xD1;
  int v221 = v218 ^ *(_DWORD *)(v125 + 4 * (v208 ^ 0x88u)) ^ (v198 >> 16) ^ v220;
  int v222 = *(_DWORD *)(v112 + 4 * ((v204 ^ 0x11521BCAu) >> 16));
  int v223 = *(_DWORD *)(v116 + 4 * (BYTE1(v217) ^ 0x30u));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v223 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v223 ^ 0x95150000;
  int v224 = (16 * (v222 ^ 0x5DE1E96F) + 1346595302 - ((32 * (v222 ^ 0x5DE1E96F)) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v208) ^ 0xDF)) ^ (v198 >> 16);
  v212 ^= 0x7A851A70u;
  unsigned int v225 = *(_DWORD *)(v125 + 4 * (v212 ^ 0x33u)) ^ v222 ^ (v224
                                                                           - 1442159438
                                                                           - ((2 * v224) & 0x5414C964));
  int v226 = *(_DWORD *)(v112 + 4 * (BYTE2(v208) ^ 0xA7u)) ^ 0x5DE1E96F;
  int v227 = *(_DWORD *)(v116 + 4 * (BYTE1(v204) ^ 0x88u));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v227 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v227 ^ 0x95150000;
  int v228 = (16 * v226 + 1346595302 - ((32 * v226) & 0xA086D3C0)) ^ (v198 >> 16) ^ *(_DWORD *)(v119
                                                                                          + 4
                                                                                          * ((HIBYTE(v212) ^ -HIBYTE(v212) ^ ((HIBYTE(v212) ^ 0xFFFFFF16) + 234))
                                                                                           + 233));
  int v229 = *(_DWORD *)(v112 + 4 * BYTE2(v212));
  int v230 = *(_DWORD *)(v125 + 4 * (v217 ^ 0x9Du)) ^ v226 ^ (v228
                                                                           - 1442159438
                                                                           - ((2 * v228) & 0x5414C964));
  int v231 = *(_DWORD *)(v116 + 4 * BYTE1(v219));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v231 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v231 ^ 0x95150000;
  int v232 = (v198 >> 16) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v217) ^ 0x7C)) ^ (16 * (v229 ^ 0x5DE1E96F)
                                                                         + 1346595302
                                                                         - ((32 * (v229 ^ 0x5DE1E96F)) & 0xA086D3C0));
  int v233 = *(_DWORD *)(v125 + 4 * (v204 ^ 0xF9u)) ^ v229 ^ (v232
                                                                           - 1442159438
                                                                           - ((2 * v232) & 0x5414C964));
  int v234 = *(_DWORD *)(v112 + 4 * (BYTE2(v233) ^ 0x66u));
  int v235 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v230 ^ 0xDE69) >> 8));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v235 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v235 ^ 0x95150000;
  unsigned int v236 = (v221 ^ 0x71C9D6C4) - 2 * ((v221 ^ 0x71C9D6C4) & 0x284F693F ^ v221 & 0x10) - 1471190737;
  int v237 = (v198 >> 16) ^ (16 * (v234 ^ 0x5DE1E96F) + 1346595302 - ((32 * (v234 ^ 0x5DE1E96F)) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v236) ^ 0xC1));
  int v238 = *(_DWORD *)(v116 + 4 * (BYTE1(v233) ^ 0xD6u));
  unsigned int v239 = *(_DWORD *)(v125 + 4 * (v225 ^ 0xBCu)) ^ v234 ^ (v237
                                                                           - 1442159438
                                                                           - ((2 * v237) & 0x5414C964));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v238 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v238 ^ 0x95150000;
  int v240 = *(_DWORD *)(v112 + 4 * (BYTE2(v236) ^ 0x25u)) ^ 0x5DE1E96F;
  unsigned int v241 = v240 ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v225) ^ 0x80)) ^ *(_DWORD *)(v125
                                                                            + 4 * (v230 ^ 0x69u)) ^ ((v198 >> 16) - 1442159438 - ((2 * (v198 >> 16)) & 0x5414C964)) ^ (16 * v240 + 1346595302 - ((32 * v240) & 0xA086D3C0));
  int v242 = *(_DWORD *)(v112 + 4 * (BYTE2(v225) ^ 0x1Bu)) ^ 0x5DE1E96F;
  int v243 = *(_DWORD *)(v116 + 4 * (BYTE1(v236) ^ 2u));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v243 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v243 ^ 0x95150000;
  int v244 = (16 * v242 + 1346595302 - ((32 * v242) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * ((v230 ^ 0x5FEEDE69u) >> 24)) ^ (v198 >> 16);
  LOBYTE(v217) = HIBYTE(v233) & 0x90 ^ 0x86 ^ (~(2 * (HIBYTE(v233) & 0x6F ^ 0xD8)) + (HIBYTE(v233) & 0x6F ^ 0xD8));
  int v245 = *(_DWORD *)(v125
                   + 4
                   * ((((v233 ^ 0x20) + (v233 ^ 0xFFFFFFEC) + 1) ^ 0xFFFFFFFE)
                    + (v233 ^ 0x20))) ^ v242 ^ (v244 - 1442159438 - ((2 * v244) & 0x5414C964));
  int v246 = *(_DWORD *)(v112 + 4 * (BYTE2(v230) ^ 0x2Du)) ^ 0x5DE1E96F;
  int v247 = *(_DWORD *)(v116 + 4 * (BYTE1(v225) ^ 0x36u));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v247 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v247 ^ 0x95150000;
  int v248 = (v198 >> 16) ^ (16 * v246 + 1346595302 - ((32 * v246) & 0xA086D3C0)) ^ *(_DWORD *)(v119
                                                                                          + 4 * v217);
  unsigned int v249 = *(_DWORD *)(v125 + 4 * (v236 ^ 0x74u)) ^ v246 ^ (v248
                                                                           - 1442159438
                                                                           - ((2 * v248) & 0x5414C964));
  int v250 = *(_DWORD *)(v112 + 4 * ((v249 ^ 0x59A5F4B7) >> 16)) ^ 0x5DE1E96F;
  int v251 = *(_DWORD *)(v116 + 4 * ((unsigned __int16)(v245 ^ 0x872B) >> 8));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v251 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v251 ^ 0x95150000;
  int v252 = (16 * v250 + 1346595302 - ((32 * v250) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v239) ^ 0x8F)) ^ (v198 >> 16);
  int v253 = *(_DWORD *)(v125 + 4 * (v241 ^ 0xEEu)) ^ v250 ^ (v252
                                                                           - 1442159438
                                                                           - ((2 * v252) & 0x5414C964));
  int v254 = *(_DWORD *)(v112 + 4 * (BYTE2(v239) ^ 0xC4u)) ^ 0x5DE1E96F;
  int v255 = *(_DWORD *)(v116 + 4 * (BYTE1(v249) ^ 0x67u));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v255 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v255 ^ 0x95150000;
  int v256 = (v198 >> 16) - 1442159438 - ((2 * (v198 >> 16)) & 0x5414C964);
  int v257 = *(_DWORD *)(v116 + 4 * (BYTE1(v239) ^ 0x52u));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v257 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v257 ^ 0x95150000;
  unsigned int v358 = v254 ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v241) ^ 0xD6)) ^ *(_DWORD *)(v125
                                                                            + 4 * (v245 ^ 0x18u)) ^ (16 * v254 + 1346595302 - ((32 * v254) & 0xA086D3C0)) ^ v256;
  int v258 = *(_DWORD *)(v112 + 4 * (BYTE2(v241) ^ 0x56u)) ^ 0x5DE1E96F;
  int v259 = *(_DWORD *)(v119 + 4 * ((v245 ^ 0x911B872B) >> 24)) ^ *(_DWORD *)(v112 + 4 * (BYTE2(v241) ^ 0x56u)) ^ 0x30A09B11 ^ (v198 >> 16) ^ (16 * v258 + 1346595303 + ~((32 * v258) & 0xA086D3C0));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)(v125 + 4 * (v249 ^ 0xB7u)) ^ 0xB682C008;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = HIDWORD(v198);
  int v260 = (v198 >> 21) ^ __ROR4__(v259, 21);
  int v261 = *(_DWORD *)(v116 + 4 * (BYTE1(v241) ^ 0xE4u));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v261 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v261 ^ 0x95150000;
  int v262 = *(_DWORD *)(v112 + 4 * (BYTE2(v245) ^ 0xD8u)) ^ 0x5DE1E96F;
  int v263 = (v198 >> 16) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v249) ^ 0xB0)) ^ (16 * v262
                                                                         + 1346595302
                                                                         - ((32 * v262) & 0xA086D3C0));
  unsigned int v264 = *(_DWORD *)(v125 + 4 * (v239 ^ 0xC9u)) ^ v262 ^ (v263
                                                                           - 1442159438
                                                                           - ((2 * v263) & 0x5414C964));
  int v265 = *(_DWORD *)(v112 + 4 * (BYTE2(v253) ^ 0x74u)) ^ 0x5DE1E96F;
  int v266 = *(_DWORD *)(v116 + 4 * (BYTE1(v264) ^ 0x66u));
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v266 ^ 0x6EE0;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v266 ^ 0x95150000;
  int v267 = v358 ^ 0x177CD9D9;
  int v268 = *(_DWORD *)(v119 + 4 * ((v358 ^ 0x177CD9D9) >> 24)) ^ 0x6D41727E ^ v265 ^ (16 * v265
                                                                                    + 1346595302
                                                                                    - ((32 * v265) & 0xA086D3C0)) ^ (v198 >> 16);
  int v269 = (v268 & 0x200 ^ 0x3FDF3EF5) + 2 * (v268 & 0x200);
  HIDWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v260 ^ 0x549BF9D9;
  LODWORD(v19_Block_object_dispose(&STACK[0x368], 8) = v260 ^ 0x549BF9D9;
  int v270 = v198 >> 11;
  int v271 = *(_DWORD *)(v125 + 4 * ((v198 >> 11) ^ 0xEFu));
  BOOL v105 = ((v269 - 1071595253) & (v271 ^ 0xAA0A64B2)) == 0;
  int v272 = v269 - 293876404;
  int v273 = 1849314102 - v269;
  if (v105) {
    int v273 = v272;
  }
  unsigned int v274 = ((v271 ^ 0xB682C008) - 777718849 + v273) ^ v268 & 0xFFFFFDFF;
  int v275 = *(_DWORD *)(v112 + 4 * BYTE2(v267)) ^ 0x5DE1E96F;
  int v276 = *(_DWORD *)(v116 + 4 * (((unsigned __int16)(v253 ^ 0x3D47) >> 8) ^ 0x93u));
  unsigned int v277 = (16 * v275 + 1346595302 - ((32 * v275) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * ((v270 ^ 0x1EA133EFu) >> 24));
  HIDWORD(v27_Block_object_dispose(&STACK[0x368], 8) = v276 ^ 0x6EE0;
  LODWORD(v27_Block_object_dispose(&STACK[0x368], 8) = v276 ^ 0x95150000;
  unsigned int v279 = *(_DWORD *)(v125 + 4 * (v264 ^ 0xDu)) ^ v275 ^ (v278 >> 16) ^ (v277
                                                                                         - 1442159438
                                                                                         - ((2 * v277) & 0x5414C964));
  int v280 = *(_DWORD *)(v112 + 4 * (BYTE2(v270) ^ 0x62u)) ^ 0x5DE1E96F;
  int v281 = *(_DWORD *)(v116 + 4 * BYTE1(v267));
  HIDWORD(v27_Block_object_dispose(&STACK[0x368], 8) = v281 ^ 0x6EE0;
  LODWORD(v27_Block_object_dispose(&STACK[0x368], 8) = v281 ^ 0x95150000;
  int v282 = (16 * v280 + 1346595302 - ((32 * v280) & 0xA086D3C0)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v264) ^ 0x32)) ^ (v278 >> 16);
  int v283 = *(_DWORD *)(v125 + 4 * (v253 ^ 0x74u)) ^ v280 ^ (v282
                                                                           - 1442159438
                                                                           - ((2 * v282) & 0x5414C964));
  uint64_t v284 = (char *)*(&off_1F2C91B30 + (v111 ^ 0x7F2)) - 4;
  uint64_t v285 = (uint64_t)*(&off_1F2C91B30 + v111 - 1758);
  LOBYTE(v281) = v274 ^ 0x9F;
  unsigned int v286 = *(_DWORD *)(v285 + 4 * ((v274 ^ 0xF137909F) >> 16)) ^ 0x3C2D551C;
  unsigned int v287 = v286 ^ ((HIBYTE(v279) ^ 0x9FD52929) - 1071466683 + *(_DWORD *)&v284[4 * (HIBYTE(v279) ^ 0xB4)]) ^ (v286 >> 2) ^ (v286 >> 4);
  int v288 = (v287 & 0x1000000 ^ 0x7FBBCEEF) + 2 * (v287 & 0x1000000);
  uint64_t v289 = (uint64_t)*(&off_1F2C91B30 + (v111 ^ 0x727));
  int v290 = *(_DWORD *)(v289 + 4 * (v283 ^ 0x9Eu));
  BOOL v105 = ((v288 - 2143014639) & (v290 ^ 0xB0000000)) == 0;
  int v291 = *(_DWORD *)(v119 + 4 * ((v253 ^ 0xD4B73D47) >> 24));
  int v292 = *(_DWORD *)(v116 + 4 * (BYTE1(v270) ^ 0xA0u));
  int v293 = *(_DWORD *)(v112 + 4 * (BYTE2(v264) ^ 0x72u)) ^ 0x5DE1E96F;
  HIDWORD(v27_Block_object_dispose(&STACK[0x368], 8) = v292 ^ 0x6EE0;
  LODWORD(v27_Block_object_dispose(&STACK[0x368], 8) = v292 ^ 0x95150000;
  int v294 = (v278 >> 16) ^ v291 ^ (16 * v293 + 1346595302 - ((32 * v293) & 0xA086D3C0));
  int v295 = *(_DWORD *)(v125 + 4 * (v358 ^ 0xEAu)) ^ v293 ^ (v294
                                                                           - 1442159438
                                                                           - ((2 * v294) & 0x5414C964));
  int v296 = v279 ^ 0xBC37B;
  unsigned int v297 = *(_DWORD *)(v285 + 4 * (BYTE2(v295) ^ 0x99u)) ^ 0x3C2D551C;
  unsigned int v298 = (*(_DWORD *)&v284[4 * (((v274 ^ 0xF137909F) >> 24) ^ 0xB4)]
        + (((v274 ^ 0xF137909F) >> 24) ^ 0x9FD52929)
        - 1071466683) ^ ((v279 ^ 0x7B)
                       + 766150735
                       - ((2 * (v279 ^ 0x7B) + 2044928224) & 0x616123BE)) ^ v297 ^ (v297 >> 2) ^ *(_DWORD *)(v289 + 4 * (v279 ^ 0x79u)) ^ (v297 >> 4);
  int v299 = *(_DWORD *)&v284[4 * (((v295 ^ 0x6792B6A6u) >> 24) ^ 0xB4)];
  unint64_t v300 = (char *)*(&off_1F2C91B30 + v111 - 1864) - 4;
  unsigned __int8 v301 = v283 ^ 0x9C;
  int v302 = *(_DWORD *)&v300[4 * ((unsigned __int16)(v283 ^ 0x7C9C) >> 8)] ^ 0x4E89B31C;
  int v303 = v302 ^ (1515496080 * v302);
  unsigned int v304 = (v283 ^ 0x250E7C9Cu) >> 24;
  int v305 = *(_DWORD *)&v284[4 * (v304 ^ 0xB4)];
  LODWORD(v284) = *(_DWORD *)(v285 + 4 * (BYTE2(v283) ^ 5u));
  HIDWORD(v354) = v305;
  LODWORD(v357) = *(_DWORD *)(v285 + 4 * BYTE2(v296));
  LODWORD(v285) = *(_DWORD *)&v300[4 * BYTE1(v296)];
  int v306 = *(_DWORD *)&v300[4 * ((unsigned __int16)(v295 ^ 0xB6A6) >> 8)];
  int v307 = *(_DWORD *)&v300[4 * (BYTE1(v274) ^ 0x5E)];
  int v308 = *(_DWORD *)(v289 + 4 * (v274 ^ 0x9Du));
  LODWORD(v354) = *(_DWORD *)(v289 + 4 * (v295 ^ 0xA4u));
  unsigned int v309 = ((v298 ^ v303) - 368828925 - ((2 * (v298 ^ v303)) & 0xD4083C06)) ^ LODWORD(STACK[0x288]);
  uint64_t v310 = v309 ^ 0x5244C6B3;
  uint64_t v311 = (uint64_t)*(&off_1F2C91B30 + v111 - 1780);
  v341[5] = *(unsigned char *)(v311 + (BYTE2(v310) ^ 0x5ELL)) ^ BYTE2(v310) ^ 0x8A ^ ((BYTE2(v310) ^ 0x8A)
                                                                            + (~(2 * (BYTE2(v310) ^ 0x8A) - 18) | 0x2B)
                                                                            + 98) ^ 0xB9;
  LODWORD(v284) = v284 ^ 0x3C2D551C ^ ((((v295 ^ 0x6792B6A6u) >> 24) ^ 0x9FD52929) - 1071466683 + v299) ^ ((v284 ^ 0x3C2D551C) >> 2) ^ ((v284 ^ 0x3C2D551C) >> 4) ^ v285 ^ 0x4E89B31C ^ v308 ^ (1515496080 * (v285 ^ 0x4E89B31C)) ^ (v281 + 766150735 - ((2 * v281 + 2044928224) & 0x616123BE));
  uint64_t v312 = (v284 + 1810546521 - ((2 * v284) & 0xD7D57FC4) + 137) ^ LODWORD(STACK[0x388]);
  unsigned int v313 = v312 ^ 0x22A932A6;
  uint64_t v314 = (BYTE1(v313) | 0x88) ^ (v313 >> 8) & 0x88;
  id v315 = (char *)*(&off_1F2C91B30 + (v111 ^ 0x7D2)) - 8;
  v341[2] = (((unsigned __int16)(v312 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v312 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((v315[v314 ^ 0x14] ^ 0x3F) + ((2 * v315[v314 ^ 0x14]) | 0xDF) - 111);
  id v316 = (char *)*(&off_1F2C91B30 + (v111 ^ 0x7FC)) - 12;
  LODWORD(v314) = v316[HIBYTE(v309) ^ 0xEFLL];
  HIDWORD(v27_Block_object_dispose(&STACK[0x368], 8) = ~v314;
  LODWORD(v27_Block_object_dispose(&STACK[0x368], 8) = (v314 ^ 0x80) << 24;
  v341[STACK[0x2D8]] = (v278 >> 29) ^ 0x83;
  int v317 = v288 - 687996993;
  int v318 = -696935011 - v288;
  if (!v105) {
    int v317 = v318;
  }
  unsigned int v319 = v287 & 0xFEFFFFFF ^ (1515496080 * (v306 ^ 0x4E89B31C)) ^ ((v290 ^ (v301
                                                                          + 766150735
                                                                          - ((2 * v301 + 2044928224) & 0x616123BE)))
                                                                 - 1455017646
                                                                 + v317);
  uint64_t v320 = v306 ^ 0x4E89B31C ^ LODWORD(STACK[0x3B8]) ^ (v319 - 387806071 - ((2 * v319) & 0xD1C5199E) + 70);
  uint64_t v321 = v306 ^ 0x1Cu ^ LOBYTE(STACK[0x3B8]) ^ (v319 - 119 - ((2 * v319) & 0x9E) + 70) ^ 0x28;
  int v322 = v111;
  uint64_t v323 = (char *)*(&off_1F2C91B30 + (v111 ^ 0x7E1)) - 12;
  v341[11] = v323[v321] ^ 0xB6;
  LODWORD(v321) = v316[BYTE3(v312) ^ 0xF9];
  HIDWORD(v324) = ~v321;
  LODWORD(v324) = (v321 ^ 0x80) << 24;
  unint64_t v325 = STACK[0x260];
  v341[STACK[0x260]] = (v324 >> 29) ^ 0xFB;
  v341[1] = BYTE2(v313) ^ 0x61 ^ ((BYTE2(v313) ^ 0x61) - ((2 * (BYTE2(v313) ^ 0x61) - 18) & 0xD4) + 97) ^ 0xB8 ^ *(unsigned char *)(v311 + (BYTE2(v313) ^ 0xB5));
  unsigned int v326 = (v304 ^ 0x9FD52929) - 1071466683 + HIDWORD(v354);
  int v327 = v357 ^ 0x3C2D551C ^ ((v357 ^ 0x3C2D551C) >> 4) ^ ((v357 ^ 0x3C2D551C) >> 2);
  unsigned int v328 = (v327 & 0x80000 | ((((v327 & 0x80000u) >> 19) & 1) << 20)) ^ 0xF7ACBDB5;
  BOOL v105 = ((v328 + 139674187) & v326) == 0;
  uint64_t v329 = v328 + 2136439808;
  unsigned int v330 = 1857091434 - v328;
  if (v105) {
    unsigned int v330 = v329;
  }
  unsigned int v331 = v327 & 0xFFF7FFFF ^ (v326 - 1996765621 + v330) ^ (1515496080 * (v307 ^ 0x4E89B31C));
  int v332 = v354 ^ ((v295 ^ 0xA6) + 2096205936) ^ (v331 - ((2 * v331) & 0x6171EFBE) - 1330055201);
  unsigned int v333 = v307 ^ LODWORD(STACK[0x3D8]) ^ (v332 + 1283850891 - ((2 * v332) & 0x990C0576) + 48);
  v341[STACK[0x258]] = *(unsigned char *)(v311 + (BYTE2(v333) ^ 0x12) + ((v333 >> 15) & 0x1A8 ^ 0xFFFFFFDF) + 213) ^ BYTE2(v333) ^ ((BYTE2(v333) ^ 0x12) - ((2 * (BYTE2(v333) ^ 0x12) - 18) & 0xD4) + 97) ^ 0x94;
  int v334 = v316[HIBYTE(v333) ^ 0xB4];
  HIDWORD(v335) = ~v334;
  LODWORD(v335) = (v334 ^ 0x80) << 24;
  v341[STACK[0x378]] = (v335 >> 29) ^ 0x50;
  v341[STACK[0x228]] = ((v320 ^ 0xCFDDD967) >> 16) ^ 0x94 ^ ((((v320 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                                         - ((2
                                                                           * (((v320 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                                           - 18) & 0xD4)
                                                                         + 97) ^ *(unsigned char *)(v311
                                                                                          + (((v320 ^ 0xCFDDD967) >> 16) ^ 0x40)) ^ 0xC;
  unsigned int v336 = (((v333 ^ 0x11BC2133) >> 4) & 0xF0 | ((unsigned __int16)(v333 ^ 0x2133) >> 12)) ^ 0xE6;
  uint64_t v337 = (v336 >> 4) & 0xFFFFFF0F | (16 * (v336 & 0xF));
  v341[STACK[0x3D0]] = v315[v337 ^ 0xAE] ^ (v337 - 2 * (v337 & 0x3F) + 63) ^ 0x2B;
  v341[10] = (((unsigned __int16)(v320 ^ 0xD967) >> 8) - (((v320 ^ 0xCFDDD967) >> 7) & 0x7E) + 63) ^ 0xDB ^ v315[((unsigned __int16)(v320 ^ 0xD967) >> 8) ^ 0xA0];
  v341[STACK[0x3C8]] = (BYTE1(v310) + (~(v310 >> 7) | 0x81) + 64) ^ v315[BYTE1(v310) ^ 0x75] ^ 0x80;
  v341[STACK[0x380]] = v323[v312 ^ 0x95] ^ 0x1B;
  v341[STACK[0x2E0]] = v323[v309 ^ 0x7FLL] ^ 0x8A;
  v341[STACK[0x3E0]] = v323[v333 ^ 0x9CLL] ^ 0x25;
  int v338 = v316[BYTE3(v320) ^ 0x49];
  HIDWORD(v335) = ~v338;
  LODWORD(v335) = (v338 ^ 0x80) << 24;
  v341[STACK[0x3B0]] = (v335 >> 29) ^ 0x2E;
  uint64_t v339 = v325 - 1606927625 - 2 * ((v325 + 16) & 0x20383AEFu);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((232 * ((v339 ^ 0xA0383AE0) > 0x14F)) ^ v322)))(v320, v339, ~(v310 >> 7) | 0xFFFFFF81, v310, 219, 2 * ((v336 >> 4) | (16 * (v336 & 0xF)) & 0x3F), v329, v312, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, v341,
           v342,
           v343,
           v344,
           v345,
           v346,
           a19,
           v347,
           v348,
           v349,
           v350,
           v351,
           v352,
           v354,
           v357,
           2,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           11,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           5,
           1);
}

uint64_t sub_1D4A92070@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  unsigned int v66 = 235795823 * ((1707451106 - (v59 | 0x65C5A2E2) + (v59 | 0x9A3A5D1D)) ^ 0xE971444);
  v63[1] = 0x6AF2A8617E594F5;
  v63[2] = a58;
  *(_DWORD *)(v65 - 164) = v60 - v66 + 291;
  *(_DWORD *)(v65 - 200) = a1 ^ v66;
  v63[3] = a59;
  (*(void (**)(uint64_t))(v64 + 8 * (v60 ^ 0x8B7)))(v65 - 200);
  int v67 = *(_DWORD *)(v65 - 168);
  STACK[0x558] = v62;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, __n128))(v64 + 8 * ((1929 * (v67 == v61 + ((v60 - 1662945519) & 0x631E8CFB) - 1115)) ^ v60)))(440, 1420, 2591436230, 3768594526, STACK[0x420], 1703529726, 922, 9, (__n128)0);
}

uint64_t sub_1D4A9219C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v11 = v8 - a8 < ((a2 - v9 + 445) ^ 0x81166A61uLL);
  return (*(uint64_t (**)(void))(v10 + 8 * (((2 * v11) | (4 * v11)) ^ a2)))();
}

uint64_t sub_1D4A921D8(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((118 * ((a1 + a2 + v2 + 1563 + v2 + 1060 - 2126155127) > 7)) ^ v2)))();
}

uint64_t sub_1D4A92250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x288] = v72;
  return (*(uint64_t (**)(void))(v74 + 8 * ((a72 * (v73 == v75)) ^ (a5 - 215))))();
}

uint64_t sub_1D4A92280@<X0>(uint64_t a1@<X2>, char a2@<W5>, int a3@<W8>)
{
  int v8 = *(_DWORD *)(v7 - 220 + ((v5 + a3) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + a3)) = (HIBYTE(v8) ^ 0xDB) - ((a2 + v4 - 97) & (2 * (HIBYTE(v8) ^ 0xDB))) - 21;
  *(unsigned char *)(a1 + (v5 + a3 + 1)) = (BYTE2(v8) ^ 0xD1)
                                               - 2 * ((BYTE2(v8) ^ 0xD1) & 0xEF ^ BYTE2(v8) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v5 + a3 + 2)) = (BYTE1(v8) ^ 0x5B)
                                               - 2 * ((BYTE1(v8) ^ 0x5B) & 0xEF ^ BYTE1(v8) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v5 + a3 + 3)) = v8 ^ 0x25;
  unsigned int v9 = *(_DWORD *)(v7 - 128) + 292474036;
  BOOL v10 = v9 < v3;
  if (v5 + 1471744649 < v3 == v10) {
    BOOL v10 = v5 + 1471744649 < v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (v10 | (16 * v10) | v4)))();
}

uint64_t sub_1D4A92370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 != a7) * ((a6 ^ 0x742) - 1358)) ^ a6)))();
}

uint64_t sub_1D4A923B0@<X0>(int32x4_t *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int32x4_t a48,int8x16_t a49)
{
  int8x16x4_t v78 = vld4q_s8(v49);
  v53.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v53.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  uint8x16_t v54 = (uint8x16_t)veorq_s8(v78.val[0], v53);
  uint16x8_t v55 = vmovl_u8(*(uint8x8_t *)v54.i8);
  int8x16_t v56 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v55.i8);
  int8x16_t v57 = (int8x16_t)vmovl_high_u16(v55);
  uint16x8_t v58 = vmovl_high_u8(v54);
  int8x16_t v59 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v58.i8);
  int8x16_t v60 = (int8x16_t)vmovl_high_u16(v58);
  uint8x16_t v61 = (uint8x16_t)veorq_s8(v78.val[1], v53);
  uint16x8_t v62 = vmovl_high_u8(v61);
  uint16x8_t v63 = vmovl_u8(*(uint8x8_t *)v61.i8);
  uint8x16_t v64 = (uint8x16_t)veorq_s8(v78.val[2], v53);
  _Q21 = (int8x16_t)vmovl_high_u8(v64);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v64.i8);
  int8x16_t v67 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v72 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v78.val[0] = veorq_s8(v78.val[3], v53);
  v78.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v78.val[0]);
  v78.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v78.val[1]);
  v78.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v78.val[0].i8);
  v78.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v78.val[0]);
  v78.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v78.val[0].i8), 0x18uLL), v67), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v63.i8, 8uLL), v56));
  v78.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v78.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v63, 8uLL), v57));
  v78.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v78.val[1].i8), 0x18uLL), v72), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v62.i8, 8uLL), v59));
  v78.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v78.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v62, 8uLL), v60));
  int32x4_t v73 = (int32x4_t)veorq_s8(vandq_s8(v78.val[0], a49), (int8x16_t)(*(_OWORD *)&v56 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  int32x4_t v74 = (int32x4_t)veorq_s8(vandq_s8(v78.val[3], a49), (int8x16_t)(*(_OWORD *)&v57 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  int32x4_t v75 = (int32x4_t)veorq_s8(vandq_s8(v78.val[1], a49), (int8x16_t)(*(_OWORD *)&v59 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  int32x4_t v76 = (int32x4_t)veorq_s8(vandq_s8(v78.val[2], a49), (int8x16_t)(*(_OWORD *)&v60 & __PAIR128__(0xFFFFFF08FFFFFF08, 0xFFFFFF08FFFFFF08)));
  a1[2] = vaddq_s32(vsubq_s32((int32x4_t)v78.val[1], vaddq_s32(v75, v75)), a48);
  a1[3] = vaddq_s32(vsubq_s32((int32x4_t)v78.val[2], vaddq_s32(v76, v76)), a48);
  *a1 = vaddq_s32(vsubq_s32((int32x4_t)v78.val[0], vaddq_s32(v73, v73)), a48);
  a1[1] = vaddq_s32(vsubq_s32((int32x4_t)v78.val[3], vaddq_s32(v74, v74)), a48);
  return (*(uint64_t (**)(void))(v52
                              + 8
                              * (((8 * ((v51 + 351843407) < 0x10)) | (16
                                                                                  * ((v51 + 351843407) < 0x10))) ^ ((v50 ^ 0x4AA) + 148))))();
}

uint64_t sub_1D4A924EC()
{
  BOOL v6 = v1 < v4;
  if (v6 == v5 + v0 < v4) {
    BOOL v6 = v1 > v5 + v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 - 941) | 0x8F) ^ (60 * v6))))();
}

uint64_t sub_1D4A92538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x368], 8) = a13;
  *(void *)(v17 - 120) = v14;
  *(_DWORD *)(v17 - 136) = v16
                         - 108757529
                         * ((((v17 - 136) | 0x80490B75) - (v17 - 136) + ((v17 - 136) & 0x7FB6F488)) ^ 0x60D5695E)
                         + 994;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v16 ^ 0xA3B)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (((109 * ((v16 - 2062198034) & 0x7AEAA3FE ^ 0x1B0) + 608)
                                              * (v15 == 1236742231)) ^ v16)))(v18);
}

uint64_t sub_1D4A925F8(double a1, double a2, double a3, double a4, double a5, double a6, double a7, int8x16_t a8)
{
  uint64_t v12 = (const float *)&v11[56].i32[3];
  int8x16_t v13 = (int8x16_t)vld1q_dup_f32(v12);
  int v14 = (v9 - 319) | 0x122;
  v15.i64[0] = 0x8000000080000000;
  v15.i64[1] = 0x8000000080000000;
  a8.i64[0] = v11[57].i64[0];
  a8.i32[2] = v11[57].i32[2];
  int8x16_t v16 = vextq_s8(v13, a8, 0xCuLL);
  int8x16_t v17 = a8;
  v17.i32[3] = v11[57].i32[3];
  int32x4_t v18 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v17, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v16, v15)), 1uLL), (int8x16_t)vdupq_n_s32(0x7EB2DFADu));
  v19.i32[0] = *(_DWORD *)(v8 + 4 * (v11[57].i32[0] & 1));
  v19.i32[1] = *(_DWORD *)(v8 + 4 * (v11[57].i32[1] & 1));
  v19.i32[2] = *(_DWORD *)(v8 + 4 * (v11[57].i32[2] & 1));
  v19.i32[3] = *(_DWORD *)(v8 + 4 * (v17.i8[12] & 1));
  *(int8x16_t *)((char *)v11 + 4 * ((v14 + 120465017) & 0xF8D1D2FF ^ 0x7CLL)) = veorq_s8(veorq_s8(veorq_s8(*v11, v19), (int8x16_t)vdupq_n_s32(0xFB404419)), (int8x16_t)vaddq_s32(vsubq_s32(v18, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v18, v18), (int8x16_t)vdupq_n_s32(0xFACB7EB4))), vdupq_n_s32(0xFD65BF5A)));
  return (*(uint64_t (**)(void))(v10 + 8 * (v14 ^ 0x65)))();
}

uint64_t sub_1D4A92728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  LODWORD(STACK[0x4A4]) = 1899470963;
  LODWORD(STACK[0x554]) = 128;
  unsigned int v59 = 1178560073 * (((v56 | 0x8CBEB393) - v56 + (v56 & 0x73414C68)) ^ 0x362ACBF1);
  int8x16_t v60 = (void *)(v58 - 200);
  v60[4] = 0;
  v60[8] = v54;
  v60[9] = v54 + 0x139154EEB432B90;
  *(_DWORD *)(v58 - 160) = (v55 + 1002) ^ v59;
  *(_DWORD *)(v58 - 176) = 1243141148 - v59;
  v60[2] = v54 + 0x139154EEB432A80;
  v60[1] = a54;
  v60[6] = 0;
  v60[7] = a46;
  uint64_t v61 = (*(uint64_t (**)(uint64_t))(v57 + 8 * (v55 + 1361)))(v58 - 200);
  return (*(uint64_t (**)(uint64_t))(v57
                                            + 8
                                            * ((1894 * (*(_DWORD *)(v58 - 200) == (v55 ^ 0x1F5F6C58 ^ (v55 + 215)))) ^ v55)))(v61);
}

uint64_t sub_1D4A9283C()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0xCF6)))(1576);
  STACK[0x5F8] = v3;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((2 * (((v3 == 0) ^ ((v0 - 75) ^ v1)) & 1)) & 0xFB | (4 * (((v3 == 0) ^ ((v0 - 75) ^ v1)) & 1))) ^ v0)))();
}

uint64_t sub_1D4A92894(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void, void))(v2 + 8 * (v3 - 2087)))(a1, v1 & 0x20000000, (v3 ^ 0xBFBu) - 956);
}

uint64_t sub_1D4A928AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  *(_DWORD *)(v37 - 144) = (v34 - 1101) ^ (235795823 * ((v37 - 101333398 - 2 * ((v37 - 144) & 0xF9F5C6FA)) ^ 0x6D588FA3));
  *(void *)(v37 - 136) = v35;
  *(void *)(v37 - 12_Block_object_dispose(&STACK[0x368], 8) = v36;
  (*(void (**)(uint64_t))(v33 + 8 * (v34 ^ 0xFDC)))(v37 - 144);
  *(void *)(v37 - 144) = a24;
  *(void *)(v37 - 136) = v35;
  *(_DWORD *)(v37 - 112) = v34
                         - 582
                         + 1224239923
                         * ((2 * (((v37 - 144) ^ 0xA8FDC33E) & 0x7EE300AA) - ((v37 - 144) ^ 0xA8FDC33E) + 18677589) ^ 0x5B52C1BC);
  *(void *)(v37 - 12_Block_object_dispose(&STACK[0x368], 8) = v35;
  *(void *)(v37 - 120) = v36;
  *(void *)(v37 - 104) = a33;
  (*(void (**)(uint64_t))(v33 + 8 * (v34 ^ 0xE3C)))(v37 - 144);
  *(_DWORD *)(v37 - 112) = v34
                         - 582
                         + 1224239923
                         * ((((v37 - 144) | 0x595B079F) - (v37 - 144) + ((v37 - 144) & 0xA6A4F860)) ^ 0xABE8FA48);
  *(void *)(v37 - 144) = a24;
  *(void *)(v37 - 136) = a18;
  *(void *)(v37 - 12_Block_object_dispose(&STACK[0x368], 8) = v35;
  *(void *)(v37 - 120) = v36;
  *(void *)(v37 - 104) = v35;
  (*(void (**)(uint64_t))(v33 + 8 * (v34 ^ 0xE3C)))(v37 - 144);
  *(void *)(v37 - 136) = v35;
  *(void *)(v37 - 12_Block_object_dispose(&STACK[0x368], 8) = a20;
  *(_DWORD *)(v37 - 144) = (v34 + 426521281) ^ (235795823
                                              * ((((v37 - 144) | 0xEC38560C) - ((v37 - 144) & 0xEC38560C)) ^ 0x78951F55));
  (*(void (**)(uint64_t))(v33 + 8 * (v34 + 570)))(v37 - 144);
  *(_DWORD *)(v37 - 144) = (v34 - 1101) ^ (235795823
                                         * ((-2026376004 - ((v37 - 144) | 0x8737F4BC) + ((v37 - 144) | 0x78C80B43)) ^ 0xEC65421A));
  *(void *)(v37 - 136) = v35;
  *(void *)(v37 - 12_Block_object_dispose(&STACK[0x368], 8) = a25;
  (*(void (**)(uint64_t))(v33 + 8 * (v34 ^ 0xFDC)))(v37 - 144);
  *(void *)(v37 - 144) = v35;
  *(void *)(v37 - 136) = a25;
  *(_DWORD *)(v37 - 12_Block_object_dispose(&STACK[0x368], 8) = v34 + 1374699841 * ((v37 - 144) ^ 0x6DF41809) + 82;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (v34 ^ 0xE23)))(v37 - 144);
  return (*(uint64_t (**)(uint64_t))(v33
                                            + 8
                                            * (((((a23 == 0) ^ (v34 + 23)) & 1)
                                              * (((v34 - 61) | 0x54) ^ 0x6CA)) | (v34 + 66))))(v38);
}

uint64_t sub_1D4A92910(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((283 * (a3 ^ 0x36E) - 1344) ^ (a3 - 171)) * (v3 == a1)) ^ a3)))();
}

void cp2g1b9ro(uint64_t a1, uint64_t a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4A929C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v44 = v41 ^ 0x473;
  unint64_t v45 = STACK[0x570];
  unint64_t v46 = STACK[0x5F8];
  unint64_t v47 = STACK[0x380];
  STACK[0x3E8] = (unint64_t)&STACK[0x680] + STACK[0x380] + (v41 ^ 0x473) - 0x74CFFF0833D78B57;
  STACK[0x3F0] = a41 + v47 + (v41 ^ 0x473);
  STACK[0x288] = v42;
  STACK[0x3F8] = v46;
  int v48 = (v41 ^ 0x473) + 1033;
  if (v45) {
    BOOL v49 = v46 == 0;
  }
  else {
    BOOL v49 = 1;
  }
  int v50 = !v49;
  return (*(uint64_t (**)(void))(v43 + 8 * ((v50 * (v44 - 1100)) ^ v48)))();
}

uint64_t sub_1D4A92A68()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v1 + 1954)))();
  LODWORD(STACK[0x648]) = v0;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v0 == (((v1 - 272) | 0x41B) ^ 0x1F5F6FDC)) * (((v1 + 753) | 0x1A) - 364)) ^ v1)))(v3);
}

uint64_t sub_1D4A92AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,unsigned int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  int v60 = 628203409 * ((-671978737 - ((v59 - 168) | 0xD7F26B0F) + ((v59 - 168) | 0x280D94F0)) ^ 0xAA8598C3);
  *(_DWORD *)(v59 - 160) = v60 + v58 + 568;
  *(_DWORD *)(v59 - 156) = a16 - v60;
  *(void *)(v56 + 392) = a25;
  uint64_t v61 = (*(uint64_t (**)(uint64_t))(v57 + 8 * (v58 + 2200)))(v59 - 168);
  unsigned int v62 = (v58 - 1433233793) & 0x556D695E ^ 0x34 ^ a56 & 0x3F;
  *(&a47 + v62) = 107;
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v57 + 8 * ((1405 * (v62 > 0x37)) ^ v58)))(v61, -648545233, a38);
}

uint64_t sub_1D4A92BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v11 = (v8 + v9 + a3 - a4);
  *(void *)(a5 - 7 + v11) = *(void *)(v6 - 7 + v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void))(v5
                                                                             + 8
                                                                             * (int)(((a4 - (v7 & 0xFFFFFFF8) == -8)
                                                                                    * (a1 ^ 0x6F5)) ^ a1)))(a1, a2, (v11 - 8), v10 - (v7 & 0xFFFFFFF8), a4 - (v7 & 0xFFFFFFF8) + 16);
}

uint64_t sub_1D4A92C2C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (a2 ^ (15 * (v2 != 0x2A3F22C2)))))(a1, 834203508);
}

uint64_t sub_1D4A92C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(v14 + (a6 + v11)) = *(unsigned char *)(v8 + ((a6 + v11) & 0xFLL)) ^ *(unsigned char *)(v6
                                                                                                + (a6 + v11)) ^ (v12 + 34) ^ *(unsigned char *)(v9 + (((_BYTE)a6 + (_BYTE)v11) & 0xF)) ^ *(unsigned char *)(v7 + (((_BYTE)a6 + (_BYTE)v11) & 0xF)) ^ (97 * ((a6 + v11) & 0xF));
  return (*(uint64_t (**)(void))(v13 + 8 * ((1611 * (a6 - 1 == v10)) ^ (v12 - 1734))))();
}

uint64_t sub_1D4A92CF0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((887
                                * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v1) == v1
                                                                              + ((v3 - 1348858176) & 0x5065F1FD)
                                                                              - 444)) ^ v3)))();
}

uint64_t sub_1D4A92D50()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 658) ^ 0x2FA) + ((v2 - 658) | 0x24) - 370) * (v1 == v0)) ^ v2)))();
}

void sub_1D4A92D98()
{
  unint64_t v3 = STACK[0x548];
  int v4 = 1178560073 * ((2 * ((v2 - 200) & 0x698F3550) - (v2 - 200) - 1770992982) ^ 0x2CE4B2C8);
  *(_DWORD *)(v2 - 184) = -1882357475 - v4 + v0 + 8;
  *(_DWORD *)(v2 - 200) = 1184294775 - v4;
  *(void *)(v2 - 192) = v3;
  (*(void (**)(uint64_t))(v1 + 8 * ((int)v0 + 2273)))(v2 - 200);
  STACK[0x5E8] = *(void *)(v1 + 8 * v0);
  JUMPOUT(0x1D4A92E40);
}

uint64_t sub_1D4A92E54@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W6>, int a7@<W8>)
{
  int v17 = a1 ^ v16;
  int v18 = (v7 ^ v16) & (a1 ^ v16) | (v7 ^ 0x242EA431) & (v8 ^ v16);
  int v19 = a6 ^ v16;
  int v20 = *(_DWORD *)(v10 + 4 * (*(unsigned char *)(a2 + v15 + v12) - 72)) ^ v9;
  int v21 = v19
      + a7
      + v18
      + *(_DWORD *)(a3 + 4 * (v15 + v12))
      + v20
      + v16
      - (v13 & (2 * (v19 + a7 + v18 + *(_DWORD *)(a3 + 4 * (v15 + v12)) + v20)));
  unsigned int v22 = (((v21 ^ v16) << (*(unsigned char *)(a4 + v15 + v12) - 76)) | ((v21 ^ v16) >> (76 - *(unsigned char *)(a4 + v15 + v12)))) + v17;
  return (*(uint64_t (**)(void))(v11 + 8 * ((56 * (v15 + 1 != v14 + 32)) ^ a5)))(v22 + v16 - (v13 & (2 * v22)));
}

uint64_t sub_1D4A92F1C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v3 + v2) ^ 0x25D) * (v1 < 0x392B2605)) | (v3 + v2))))();
}

uint64_t sub_1D4A92F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * (((a13 + v16 - 220 + (unint64_t)(v13 + v14 - a5 + 105138578) < 0x10)
                                * (17 * (v14 ^ 0x34C) - 535)) ^ v14)))();
}

void sub_1D4A92FA8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  int v11 = LOBYTE(STACK[0x34C]) ^ 0xDD;
  if (v11 == 1)
  {
    unsigned int v17 = STACK[0x330];
    unsigned int v18 = STACK[0x32C];
    int v19 = LODWORD(STACK[0x330]) >> 5;
    LOBYTE(STACK[0x324]) = ((8 * LOBYTE(STACK[0x330])) ^ 0x20)
                         + a11
                         - ((2 * ((8 * LOBYTE(STACK[0x330])) ^ 0x20)) & 0xDF);
    char v16 = -42;
    LOBYTE(STACK[0x325]) = (v19 ^ 0x87) - ((2 * (v19 ^ 0x87)) & 0xD6) - 21;
    LOBYTE(STACK[0x326]) = ((v17 >> 13) ^ 8) - ((2 * ((v17 >> 13) ^ 8)) & 0xD6) - 21;
    char v13 = a2 ^ 0xA0;
    LOBYTE(STACK[0x327]) = ((v17 >> 21) ^ 0x54) - ((2 * ((v17 >> 21) ^ 0x54)) & 0xD6) - 21;
    HIDWORD(v20) = v18 ^ 5;
    LODWORD(v20) = v17 ^ 0xA0000000;
    LOBYTE(STACK[0x328]) = (v20 >> 29) - ((2 * (v20 >> 29)) & 0xD6) - 21;
    LOBYTE(STACK[0x329]) = ((v18 >> 5) ^ 0x31) - ((2 * ((v18 >> 5) ^ 0x31)) & 0xD6) - 21;
    LOBYTE(STACK[0x32A]) = ((v18 >> 13) ^ 0xA8) - ((2 * ((v18 >> 13) ^ 0xA8)) & 0xD6) - 21;
    unsigned int v15 = (v18 >> 21) ^ 0x1D;
  }
  else
  {
    if (v11 != 2) {
      goto LABEL_6;
    }
    unsigned int v12 = STACK[0x32C];
    unsigned int v15 = STACK[0x330];
    LOBYTE(STACK[0x324]) = ((LODWORD(STACK[0x32C]) >> (a2 - 42)) ^ 0x1D)
                         - ((2 * ((LODWORD(STACK[0x32C]) >> (a2 - 42)) ^ 0x1D)) & 0xD6)
                         - 21;
    LOBYTE(STACK[0x325]) = ((v12 >> 13) ^ 0xA8) + (~(2 * ((v12 >> 13) ^ 0xA8)) | 0x29) - 20;
    char v13 = a2 + 96;
    LOBYTE(STACK[0x326]) = ((v12 >> 5) ^ 0x31) + (~(2 * ((v12 >> 5) ^ 0x31)) | 0x29) - 20;
    HIDWORD(v14) = v12 ^ 5;
    LODWORD(v14) = v15 ^ 0xA0000000;
    LOBYTE(STACK[0x327]) = (v14 >> 29) - ((2 * (v14 >> 29)) & 0xD6) - 21;
    LOBYTE(STACK[0x328]) = ((v15 >> 21) ^ 0x54) - ((2 * ((v15 >> 21) ^ 0x54)) & 0xD6) - 21;
    LOBYTE(STACK[0x329]) = ((v15 >> 13) ^ 8) - ((2 * ((v15 >> 13) ^ 8)) & 0xD6) - 21;
    LOBYTE(STACK[0x32A]) = ((v15 >> 5) ^ 0x87) - ((2 * ((v15 >> 5) ^ 0x87)) & 0xD6) - 21;
    LOBYTE(v15) = (8 * v15) ^ 0x20;
    char v16 = -48;
  }
  LOBYTE(STACK[0x32B]) = v15 + v13 - 96 - (v16 & (2 * v15)) - 84;
LABEL_6:
  JUMPOUT(0x1D4A876A8);
}

uint64_t sub_1D4A931A8()
{
  BOOL v4 = v0 < 0xDFE65AF6;
  uint64_t v5 = (v2 + 153);
  unint64_t v6 = v1 - 0x16DF25238DD159A5 + v5;
  int v7 = v4 ^ (v6 < v5 + 3756415077);
  BOOL v8 = v6 < v0;
  if (!v7) {
    BOOL v4 = v8;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((1044 * v4) ^ v2)))();
}

uint64_t sub_1D4A93210()
{
  int v8 = ((v7 + 1172267476 - 2 * ((v7 - 144) & 0x45DF6264)) ^ 0x282B7A6D) * v0;
  *(void *)(v7 - 136) = v5;
  *(_DWORD *)(v7 - 12_Block_object_dispose(&STACK[0x368], 8) = v1 + v4 - v8;
  *(_DWORD *)(v7 - 144) = (v3 + 1214) ^ v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 ^ 0x804)))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((2 * (((v3 + 100) ^ (*(_DWORD *)(v7 - 140) == v6)) & 1)) & 0xFB | (4 * (((v3 + 100) ^ (*(_DWORD *)(v7 - 140) == v6)) & 1))) ^ (v3 + 835))))(v9);
}

uint64_t sub_1D4A93218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v28 - 112) = v24
                         + ((((v28 - 128) ^ 0xD80A7276 | 0x3A86F137)
                           - ((v28 - 128) ^ 0xD80A7276)
                           + (((v28 - 128) ^ 0xD80A7276) & 0xC5790EC8)) ^ 0x5818FB23)
                         * v27
                         + 395;
  *(void *)(v28 - 104) = v26;
  *(void *)(v28 - 120) = a24;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 + 951)))(v28 - 128);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((106
                                              * (((((v24 - 102) & 0x7F) + 124) ^ ((*(_DWORD *)(v28 - 128) - 1263233869) < 0xBEAB8916)) & 1)) ^ v24)))(v29);
}

uint64_t sub_1D4A932E0@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  *(_DWORD *)(v53 - 12_Block_object_dispose(&STACK[0x368], 8) = (a1 - 197) | 0x444;
  uint64_t v54 = *(void *)(v52 + 8 * (a1 - 184)) - 4;
  int v55 = *(unsigned __int8 *)(v54 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444770) ^ 0xD7));
  *(_DWORD *)(v53 - 192) = a2;
  uint64_t v56 = *v51 ^ 0xB1;
  uint64_t v57 = *(void *)(v52 + 8 * (a1 - 69)) - 4;
  uint64_t v58 = *(void *)(v52 + 8 * (a1 ^ 0xAB)) - 12;
  int v59 = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444765) ^ 0x49));
  int v60 = ((*(unsigned __int8 *)(v57 + v56) ^ 0xDF) << (((a1 + 59) | 0x44) - 61)) | ((v55 ^ 0x95) << 8);
  HIDWORD(v61) = ~v59;
  LODWORD(v61) = (v59 ^ 0xFFFFFFE7) << 24;
  LOBYTE(v56) = v61 >> 26;
  uint64_t v62 = *(void *)(v52 + 8 * (a1 ^ 0xB4)) - 8;
  int v63 = *(unsigned __int8 *)(v57 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444766) ^ 0xB8));
  int v64 = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444769) ^ 0x6BLL));
  HIDWORD(v61) = ~v64;
  LODWORD(v61) = (v64 ^ 0xFFFFFFE7) << 24;
  LOBYTE(v59) = *(unsigned char *)(v54 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444764) ^ 0x2ELL));
  int v65 = ((v61 >> 26) ^ 0x53) << 16;
  int v66 = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444771) ^ 0x47));
  HIDWORD(v61) = ~v66;
  LODWORD(v61) = (v66 ^ 0xFFFFFFE7) << 24;
  int v67 = v60 | (*(unsigned char *)(v62 + (*(unsigned __int8 *)(v50 - 0x7785963AF344476FLL) ^ 0xECLL)) - 101) ^ 9 | (((v61 >> 26) ^ 0x1E) << 16);
  int v68 = v65 | ((*(unsigned __int8 *)(v54 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444768) ^ 0x77)) ^ 0x5A) << 8);
  LODWORD(v5_Block_object_dispose(&STACK[0x368], 8) = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v50 - 0x7785963AF344476DLL) ^ 0xCBLL));
  HIDWORD(v61) = ~v58;
  LODWORD(v61) = (v58 ^ 0xFFFFFFE7) << 24;
  int v69 = *(unsigned __int8 *)(v62 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444763) ^ 0x36));
  LOBYTE(v65) = *(unsigned char *)(v62 + (*(unsigned __int8 *)(v50 - 0x7785963AF3444767) ^ 0xB5));
  int v70 = ((v56 ^ 0xFB) << 16) | ((v63 ^ 0x67) << 24) | ((v59 ^ 0x50) << 8);
  LODWORD(v54) = ((*(unsigned char *)(v62 + (*(unsigned __int8 *)(v50 - 0x7785963AF344476BLL) ^ 0xA9)) - 101) | ((*(unsigned __int8 *)(v54 + (*(unsigned __int8 *)(v50 - 0x7785963AF344476CLL) ^ 0x30)) ^ 0xA0) << 8)) & 0xFF00FFFF | (((v61 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v57 + (*(unsigned __int8 *)(v50 - 0x7785963AF344476ELL) ^ 0x35)) ^ 0x10) << 24);
  int v71 = v68 | ((*(unsigned __int8 *)(v57 + (*(unsigned __int8 *)(v50 - 0x7785963AF344476ALL) ^ 0xBFLL)) ^ 9) << 24);
  int v72 = v69 - 101;
  uint64_t v73 = *(void *)(v52 + 8 * (a1 ^ 0xC5)) - 8;
  uint64_t v74 = *(void *)(v52 + 8 * (a1 - 98)) - 4;
  int v75 = *(_DWORD *)(v74 + 4 * (v56 ^ 0x61u)) ^ *(_DWORD *)(v73
                                                                            + 4
                                                                            * ((v69 - 101) ^ 0xFDu));
  uint64_t v76 = *(void *)(v52 + 8 * (a1 ^ 0x7C));
  unsigned int v77 = ((v75 ^ 0xD50F15E2) - 2 * ((v75 ^ 0xD50F15E2) & 0x57AAE03F ^ v75 & 8) + 1470816311) ^ *(_DWORD *)(v76 + 4 * (v63 ^ 0xF2u));
  uint64_t v78 = *(void *)(v52 + 8 * (a1 - 126)) - 4;
  unsigned int v79 = *(_DWORD *)(v78 + 4 * (v59 ^ 0x68u)) ^ v67 ^ (v77 - ((2 * v77) & 0xF6830054) + 2067890218);
  LODWORD(v506) = v70 & 0xFFFFFF00 | v72 ^ 0x2A;
  unsigned int v80 = v71 & 0xFFFFFF00 | (v65 - 101) ^ 0xA8;
  unint64_t v505 = __PAIR64__(v67, v54);
  int v81 = v79 ^ v54;
  unsigned int v400 = v79;
  LODWORD(v54) = v79 ^ v54 ^ 0x4D;
  *(_DWORD *)(v53 - 184) = v81;
  *(_DWORD *)(v53 - 136) = v54 ^ v80;
  LODWORD(v57) = v54;
  unsigned __int8 v394 = v54;
  int v82 = v54 ^ v80 ^ (v506
                   - 2 * ((v70 & 0x78CE300 | (v72 ^ 0x2A) & 0xFD) ^ (v72 ^ 0x2A) & 0x14)
                   - 2020809751);
  int v437 = BYTE2(v82);
  int v83 = *(_DWORD *)(v74 + 4 * (BYTE2(v82) ^ 0x32u)) ^ *(_DWORD *)(v78 + 4 * (BYTE1(v82) ^ 0x19u));
  char v419 = BYTE2(v82);
  int v445 = v82;
  unsigned int v84 = ((v83 ^ 0xD2905607) - 2 * ((v83 ^ 0xD2905607) & 0x7CDEC3DF ^ v83 & 0x10) + 2094973903) ^ *(_DWORD *)(v73 + 4 * (v82 ^ 0xC0u));
  unsigned int v85 = (v82 ^ 0x3D7BCE40u) >> 24;
  *(_DWORD *)(v53 - 200) = v85;
  LODWORD(v54) = v79 ^ *(_DWORD *)(v76 + 4 * (v85 ^ 0x65)) ^ (v84 - ((2 * v84) & 0xAF55C06E) + 1470816311);
  HIDWORD(v504) = v80;
  int v526 = v54 ^ 0x90DA3F3;
  int v86 = v54;
  *(_DWORD *)(v53 - 16_Block_object_dispose(&STACK[0x368], 8) = v54;
  LODWORD(v54) = v54 ^ 0x90DA3F3 ^ (v80 - 2 * (v80 & 0x90DA3F7 ^ ((v65 - 101) ^ 0xA8) & 4) + 151888883);
  unsigned int v87 = v54 ^ v82 ^ 0x3D7BCE40;
  *(_DWORD *)(v53 - 140) = v54;
  int v512 = BYTE2(v87);
  int v455 = ((unsigned __int16)(v54 ^ v82 ^ 0xCE40) >> 8);
  unsigned int v88 = *(_DWORD *)(v74 + 4 * (BYTE2(v87) ^ 0x2Eu)) ^ *(_DWORD *)(v78 + 4 * (v455 ^ 0x9Bu)) ^ 0xD2905607;
  int v530 = (v54 ^ v82 ^ 0x40);
  unsigned int v89 = (v88 - ((2 * v88) & 0xF9BD879E) + 2094973903) ^ *(_DWORD *)(v73 + 4 * (v530 ^ 0xD2u));
  unsigned int v90 = v87 ^ 0xF2522EE3;
  *(_DWORD *)(v53 - 20_Block_object_dispose(&STACK[0x368], 8) = HIBYTE(v87);
  unsigned int v91 = (v89 - ((2 * v89) & 0xAF55C06E) + 1470816311) ^ *(_DWORD *)(v76 + 4 * (HIBYTE(v87) ^ 0x69));
  int v92 = v91 ^ v57 ^ 0x78C5B39B;
  int v479 = v91 ^ v57;
  int v93 = v92 ^ v54;
  int v484 = v92 ^ v54;
  int v94 = ((v92 ^ v54 ^ 0xE243BE71) - ((2 * (v92 ^ v54 ^ 0xE243BE71)) & 0xDEB1F54) - 2030727254) ^ v90;
  unsigned int v95 = v94 ^ 0x9547167F;
  int v491 = ((v94 ^ 0x9547167F) >> 16);
  HIDWORD(v506) = ((unsigned __int16)(v94 ^ 0x167F) >> 8);
  unsigned int v96 = *(_DWORD *)(v74 + 4 * (v491 ^ 0x89u)) ^ *(_DWORD *)(v78 + 4 * (HIDWORD(v506) ^ 0x3Au)) ^ 0xD2905607;
  int v496 = (((v92 ^ v54 ^ 0x71) - ((2 * (v92 ^ v54 ^ 0x71)) & 0x54) - 86) ^ v90);
  unsigned int v97 = (v96 - ((2 * v96) & 0xF9BD879E) + 2094973903) ^ *(_DWORD *)(v73 + 4 * (v496 ^ 0xE4u));
  unsigned int v508 = HIBYTE(v95);
  unsigned int v98 = (v97 - ((2 * v97) & 0xAF55C06E) + 1470816311) ^ *(_DWORD *)(v76 + 4 * (HIBYTE(v95) ^ 0x1D));
  unsigned int v463 = v91 ^ v86;
  unsigned int v522 = (v98 - ((2 * v98) & 0xE6627422) + 1932605969) ^ v91 ^ v86;
  *(_DWORD *)(v53 - 240) = v522 ^ 0x73313A11;
  unsigned int v528 = v522 ^ 0x73313A11 ^ v91 ^ v57;
  unsigned int v99 = ((v528 ^ 0xFE25CD6D) - ((2 * (v528 ^ 0xFE25CD6D)) & 0xDEB1F54) - 2030727254) ^ v90;
  *(_DWORD *)(v53 - 216) = BYTE1(v99);
  int v100 = *(_DWORD *)(v78 + 4 * (BYTE1(v99) ^ 0x6Fu));
  *(_DWORD *)(v53 - 224) = BYTE2(v99);
  int v101 = *(_DWORD *)(v74 + 4 * (BYTE2(v99) ^ 0xA8u)) ^ v100;
  *(_DWORD *)(v53 - 24_Block_object_dispose(&STACK[0x368], 8) = HIBYTE(v99);
  unsigned int v102 = ((v101 ^ 0xD2905607) - 2 * ((v101 ^ 0xD2905607) & 0x57AAE03F ^ v101 & 8) + 1470816311) ^ *(_DWORD *)(v76 + 4 * (HIBYTE(v99) ^ 0x85));
  int v518 = (((v528 ^ 0x6D) - ((2 * (v528 ^ 0x6D)) & 0x54) - 86) ^ v90);
  unsigned int v103 = (v102 - ((2 * v102) & 0xF9BD879E) + 2094973903) ^ *(_DWORD *)(v73 + 4 * (v518 ^ 0x25u));
  LODWORD(v54) = (v103 - ((2 * v103) & 0x84653C64) - 1036870094) ^ v92;
  unsigned int v520 = v528 ^ v93;
  unsigned int v392 = v54;
  unsigned int v411 = v54 ^ v528 ^ v93;
  LODWORD(v5_Block_object_dispose(&STACK[0x368], 8) = v411 ^ 0x2FDFEF05 ^ v99;
  *(_DWORD *)(v53 - 256) = v99;
  unsigned int v431 = (v58 ^ 0xDAE8E677) >> 24;
  int v420 = ((v58 ^ 0xDAE8E677) >> 16);
  int v104 = *(_DWORD *)(v74 + 4 * (v420 ^ 0x89u)) ^ *(_DWORD *)(v76 + 4 * (v431 ^ 0x1D));
  int v425 = ((unsigned __int16)(v58 ^ 0xE677) >> 8);
  unsigned int v105 = ((v104 ^ 0xFE7B361A) - 2 * ((v104 ^ 0xFE7B361A) & 0x7B41802B ^ v104 & 1) + 2067890218) ^ *(_DWORD *)(v78 + 4 * (v425 ^ 0x3Au));
  *(_DWORD *)(v53 - 176) = v103 ^ v522 ^ 0x73313A11;
  int v414 = v411 ^ 5 ^ v99;
  unsigned __int8 v430 = BYTE2(v54) ^ 0x16;
  int v106 = v103 ^ v522 ^ 0x73313A11 ^ *(_DWORD *)(v73 + 4 * (v414 ^ 0xECu)) ^ (v105
                                                                             + 2094973903
                                                                             + (~(2 * v105) | 0x6427861)
                                                                             + 1) ^ v54 ^ 0x7C166C11;
  int v107 = v103 ^ v522 ^ 0x73313A11 ^ *(_DWORD *)(v73 + 4 * (v414 ^ 0xECu)) ^ (v105
                                                                             + 2094973903
                                                                             + (~(2 * v105) | 0x6427861)
                                                                             + 1);
  int v501 = v107;
  LODWORD(v5_Block_object_dispose(&STACK[0x368], 8) = (v106 ^ v99) >> 24;
  *(_DWORD *)(v53 - 22_Block_object_dispose(&STACK[0x368], 8) = v58;
  int v493 = (v106 ^ v99);
  LODWORD(v5_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)(v76 + 4 * (v58 ^ 0x9B)) ^ *(_DWORD *)(v73 + 4 * (v493 ^ 0x31u)) ^ 0x2B7423F8;
  unsigned int v472 = ((v106 ^ v99) >> 8) ^ 0x86839A;
  int v475 = ((unsigned __int16)(v106 ^ v99) >> 8) ^ 0x9A;
  int v108 = (v58 - ((2 * v58) & 0xF6830054) + 2067890218) ^ *(_DWORD *)(v78
                                                                   + 4
                                                                   * (((unsigned __int16)(v106 ^ v99) >> 8) ^ 0xA0u));
  unsigned int v109 = v106 ^ v99 ^ 0x8FFC16CA;
  int v467 = ((v106 ^ v99) >> 16);
  int v110 = (v108 - ((2 * v108) & 0x53A3AC5A) - 1445865939) ^ *(_DWORD *)(v74 + 4 * (v467 ^ 0xAu));
  unsigned int v443 = (v110 - ((2 * v110) & 0xAA800EC6) - 717224093) ^ v107;
  unsigned __int8 v111 = (v110 - ((2 * v110) & 0xC6) + 99) ^ v107 ^ 0xC9;
  int v439 = v443 ^ 0x28C39DC9 ^ v106;
  unsigned int v482 = v106 ^ v411 ^ 0x2FDFEF05;
  int v112 = v106;
  int v459 = v106;
  *(_DWORD *)(v53 - 14_Block_object_dispose(&STACK[0x368], 8) = v482 ^ 0xC737CFE7;
  LODWORD(v54) = ((v439 ^ 0x5A137D54) - ((2 * (v439 ^ 0x5A137D54)) & 0x886042E0) + 1144004976) ^ v482 ^ 0xC737CFE7;
  *(_DWORD *)(v53 - 144) = v54;
  int v113 = v54 ^ 0x9DBE0BFA;
  int v114 = ((v54 ^ 0x1A21D3FA) - 2 * ((v54 ^ 0x9DBE0BFA) & 0xF ^ (v54 ^ 0x1A21D3FA) & 0x97F8C6F) + 159353952) ^ v109;
  int v524 = ((unsigned __int16)(((v54 ^ 0xD3FA)
                                             - 2 * ((v54 ^ 0xBFA) & 0xF ^ (v54 ^ 0xD3FA) & 0x8C6F)
                                             - 29600) ^ v109 ^ 0xB031) >> 8);
  int v115 = *(_DWORD *)(v78 + 4 * (v524 ^ 0x3Au));
  int v510 = (((v54 ^ 0xFA) - 2 * ((v54 ^ 0xFA) & 0xF ^ (v54 ^ 0xFA) & 0x6F) + 96) ^ v109);
  int v116 = *(_DWORD *)(v73 + 4 * (v510 ^ 0xAAu));
  int v117 = BYTE2(v114) ^ 0x9A;
  int v118 = ((v116 ^ v115 ^ 0x79F43E5) - 2 * ((v116 ^ v115 ^ 0x79F43E5) & 0x29D1D62F ^ (v116 ^ v115) & 2) - 1445865939) ^ *(_DWORD *)(v74 + 4 * (((v114 ^ 0x479AB031u) >> 16) ^ 0x89u));
  unsigned int v433 = (v114 ^ 0x479AB031u) >> 24;
  LODWORD(v57) = (v118 - ((2 * v118) & 0xAF55C06E) + 1470816311) ^ *(_DWORD *)(v76 + 4 * (v433 ^ 0x1D));
  unsigned int v119 = v57 ^ v112;
  LODWORD(v54) = ((v57 ^ v112 ^ 0xA6C48CD5) - ((2 * (v57 ^ v112 ^ 0xA6C48CD5)) & 0x12FF18C0) + 159353952) ^ v109;
  unsigned int v120 = BYTE3(v54);
  int v121 = ((unsigned __int16)(((v57 ^ v112 ^ 0x8CD5) - ((2 * (v57 ^ v112 ^ 0x8CD5)) & 0x18C0) - 29600) ^ v109) >> 8);
  int v122 = *(_DWORD *)(v76 + 4 * (BYTE3(v54) ^ 5)) ^ *(_DWORD *)(v78 + 4 * (BYTE1(v54) ^ 0x6Fu)) ^ 0x2CEB601D;
  int v487 = (((v57 ^ v112 ^ 0xD5) - ((2 * (v57 ^ v112 ^ 0xD5)) & 0xC0) + 96) ^ v109);
  unsigned int v123 = (v122 - ((2 * v122) & 0xF9BD879E) + 2094973903) ^ *(_DWORD *)(v73 + 4 * (v487 ^ 0x25u));
  unsigned int v124 = v123 - ((2 * v123) & 0x53A3AC5A);
  LOBYTE(v109) = v57 ^ v443 ^ 0xC9;
  int v125 = BYTE2(v54);
  unsigned int v126 = (v124 - 1445865939) ^ *(_DWORD *)(v74 + 4 * (BYTE2(v54) ^ 0xA8u)) ^ v57 ^ v443 ^ 0x28C39DC9;
  LODWORD(v54) = v113 ^ v126 ^ v54;
  *(_DWORD *)(v53 - 160) = v113 ^ v126;
  int v516 = BYTE1(v54);
  unsigned int v386 = BYTE3(v54);
  LODWORD(v5_Block_object_dispose(&STACK[0x368], 8) = v526 ^ ((v81 ^ 0xBAF72DE4) - ((2 * (v81 ^ 0xBAF72DE4)) & 0x121B47E6) + 151888883);
  int v127 = *(_DWORD *)(v78 + 4 * (BYTE1(v54) ^ 0x44u)) ^ *(_DWORD *)(v76 + 4 * (BYTE3(v54) ^ 0x47)) ^ 0x2CEB601D;
  int v398 = v54;
  unsigned int v128 = (v127 - ((2 * v127) & 0xF9BD879E) + 2094973903) ^ *(_DWORD *)(v73 + 4 * (v54 ^ 0xD5u));
  int v376 = BYTE2(v54);
  int v129 = (v128 - ((2 * v128) & 0x53A3AC5A) - 1445865939) ^ *(_DWORD *)(v74 + 4 * (BYTE2(v54) ^ 0xCBu));
  unsigned int v130 = (v129 - ((2 * v129) & 0xFBECD266) - 34182861) ^ v126;
  LODWORD(v504) = v130 ^ 0x7D01449A;
  int v380 = v126 ^ v119;
  HIDWORD(v503) = v126 ^ v119 ^ 0x5200ED29 ^ ((v130 ^ 0x7D01449A)
                                            + 1990337086
                                            + ((2 * ((v130 ^ 0x7D01449A) & 0x76A2223F ^ v130 & 2)) ^ 0xFFFFFFFB));
  LODWORD(v503) = v113 ^ v126 ^ 0x4018996 ^ HIDWORD(v503);
  HIDWORD(a44) = (v503 - ((2 * v503) & 0xFD785302) - 21223039) ^ v54;
  unsigned int v131 = v57 ^ v443 ^ 0x28C39DC9 ^ 0x1B9155BD;
  int v132 = (char *)*(&off_1F2C91B30 + a1 - 105) - 8;
  LODWORD(v54) = (BYTE2(v131) + 115737709 + ((2 * BYTE2(v131) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (BYTE2(v131) ^ 0x2D)];
  unsigned int v133 = ((v125 ^ 0x89) + 115737709 + ((2 * (v125 ^ 0x89) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (v125 ^ 0xA4)];
  uint64_t v134 = (uint64_t)*(&off_1F2C91B30 + a1 - 142);
  LODWORD(v57) = (v54 - ((2 * v54) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134
                                                                           + 4
                                                                           * (((unsigned __int16)(v57 ^ v443 ^ 0x9DC9) >> 8) ^ 0x47u));
  unsigned int v135 = (char *)*(&off_1F2C91B30 + a1 - 132) - 4;
  unsigned int v136 = (v133 - ((2 * v133) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * (v120 ^ 0xCC)];
  int v137 = (char *)*(&off_1F2C91B30 + (a1 ^ 0xE0)) - 4;
  int v138 = *(_DWORD *)&v137[4 * ((v113 ^ v119) ^ 0x53)];
  unsigned int v139 = 181304767 * v138 - ((362609534 * v138 + 1167171854) & 0xFE99652A);
  int v140 = ((v113 ^ v119) >> 16);
  LODWORD(v54) = *(_DWORD *)&v132[4 * (v140 ^ 0xAA)] ^ *(_DWORD *)&v135[4 * (((v113 ^ v119) >> 24) ^ 0x3E)] ^ ((v140 ^ 0x87) + 115737709 + ((2 * (((v140 ^ 0x87) + 44) & 0x43 ^ (v140 ^ 0x87 | 0x7FFFFFFC))) ^ 0xC1407)) ^ (v139 - 1575648484);
  int v141 = *(_DWORD *)&v137[4 * (v119 ^ 0x74)];
  unsigned int v142 = ((~(362609534 * v141 + 93430030) | 0xE631BB35) + 181304767 * v141 - 1347423507) ^ *(_DWORD *)(v134 + 4 * (BYTE1(v119) ^ 0x5Au));
  unsigned int v499 = v142 - ((2 * v142) & 0xFE99652A);
  unsigned int v527 = (BYTE2(v119) ^ 0x4C) + 115737709 + ((2 * (BYTE2(v119) ^ 0x4C) + 88) & 0x80 ^ 0xFFF3EBFF);
  unsigned int v477 = v136 - ((2 * v136) & 0x19CE44CA);
  int v469 = v54 - ((2 * v54) & 0x19CE44CA);
  unsigned int v507 = (v57 - ((2 * v57) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * HIBYTE(v131)] ^ (181304767
                                                                                             * *(_DWORD *)&v137[4 * (v109 ^ 0x7D)]
                                                                                             + 583585927);
  unsigned __int8 v383 = v58;
  unsigned int v143 = *(_DWORD *)&v132[4 * (((v58 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v58 ^ 0xE9B45E6C) >> 16) ^ 0xD8) + 115737709 + ((2 * (((v58 ^ 0xE9B45E6C) >> 16) ^ 0xD8) + 88) & 0x80 ^ 0xFFF3EBFF));
  unsigned int v144 = *(_DWORD *)(v53 - 140) ^ 0x31676F78;
  LODWORD(v57) = *(_DWORD *)&v132[4 * (BYTE2(v144) ^ 0x7B)] ^ ((BYTE2(v144) ^ 0x56)
                                                             + 115737709
                                                             + ((2 * (BYTE2(v144) ^ 0x56) + 88) & 0x80 ^ 0xFFF3EBFF));
  int v145 = (v57 - ((2 * v57) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * HIBYTE(v144)];
  LODWORD(v57) = *(_DWORD *)&v132[4 * (v512 ^ 0x34)] ^ ((v512 ^ 0x19)
                                                      + 115737709
                                                      + ((2 * (v512 ^ 0x19) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v54) = (v57 - ((2 * v57) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134 + 4 * (v455 ^ 5u));
  int v456 = v145 - ((2 * v145) & 0x19CE44CA);
  int v513 = v54 + 2135732885 + (~(2 * v54) | 0x1669AD5);
  LODWORD(v54) = *(_DWORD *)&v137[4 * (*(_DWORD *)(v53 - 168) ^ 0xDF)];
  unsigned int v146 = *(_DWORD *)(v53 - 168) ^ 0x5A18571F;
  LODWORD(v54) = *(_DWORD *)&v135[4 * HIBYTE(v146)] ^ ((BYTE2(v146) ^ 0xC1)
                                                     + 115737709
                                                     + ((2 * (BYTE2(v146) ^ 0xC1) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (BYTE2(v146) ^ 0xEC)] ^ (181304767 * v54 - ((362609534 * v54 + 1167171854) & 0xFE99652A) - 1575648484);
  int v453 = v54 - ((2 * v54) & 0x19CE44CA);
  LODWORD(v54) = *(_DWORD *)&v135[4 * ((v58 ^ 0xE9B45E6C) >> 24)] ^ (v143
                                                                                 - ((2 * v143) & 0xFE99652A)
                                                                                 + 2135732885);
  unsigned int v448 = BYTE1(v58) ^ 0xB4;
  int v450 = v54 - ((2 * v54) & 0x19CE44CA);
  LOWORD(v131) = v439 ^ 0x8EA4;
  LODWORD(v5_Block_object_dispose(&STACK[0x368], 8) = v439 ^ 0x35C48CD5;
  unsigned int v147 = *(_DWORD *)&v132[4 * (v117 ^ 0xDE)] ^ ((v117 ^ 0xF3)
                                              + 115737709
                                              + ((2 * (v117 ^ 0xF3) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v54) = *(_DWORD *)&v132[4 * (((v439 ^ 0x35C48CD5u) >> 16) ^ 0xFE)] ^ ((((v439 ^ 0x35C48CD5u) >> 16) ^ 0xD3)
                                                                                               + 115737709
                                                                                               + ((2
                                                                                                 * (((v439 ^ 0x35C48CD5u) >> 16) ^ 0xD3)
                                                                                                 + 88) & 0x80 ^ 0xFFF3EBFF));
  int v148 = *(_DWORD *)&v137[4 * (v113 ^ 0xC5)];
  LODWORD(v57) = (v147 - ((2 * v147) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * (v433 ^ 0x36)];
  unsigned int v149 = *(_DWORD *)&v132[4 * (BYTE2(v443) ^ 0xEF)] ^ ((BYTE2(v443) ^ 0xC2)
                                                     + 115737709
                                                     + ((2 * (BYTE2(v443) ^ 0xC2) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v73) = (v149 - ((2 * v149) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134
                                                                             + 4
                                                                             * (((unsigned __int16)(v443 ^ 0x9DC9) >> 8) ^ 0x8Bu));
  int v434 = v57 - ((2 * v57) & 0x19CE44CA);
  unsigned int v440 = HIBYTE(v443) ^ 0xC4;
  int v444 = v73 - ((2 * v73) & 0xFE99652A);
  LODWORD(v57) = *(_DWORD *)(v53 - 144) ^ 0xFF21D3FA;
  LODWORD(v57) = *(_DWORD *)(v134 + 4 * (BYTE1(v57) ^ 0x20u)) ^ ((BYTE2(v57) ^ 0xD7)
                                                                 + 115737709
                                                                 + ((2 * (BYTE2(v57) ^ 0xD7) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (BYTE2(v57) ^ 0xFA)] ^ ((~(362609534 * v148 + 93430030) | 0xE631BB35) + 181304767 * v148 - 1347423507);
  LODWORD(v54) = (v54 - ((2 * v54) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * BYTE3(v58)] ^ (181304767 * *(_DWORD *)&v137[4 * (v131 ^ 0x99)] + 583585927);
  unsigned int v404 = BYTE1(v131) ^ 0x14;
  unsigned int v373 = v111 ^ 0xA3;
  int v406 = v54 - ((2 * v54) & 0x19CE44CA);
  int v423 = v57 - ((2 * v57) & 0xFE99652A);
  LODWORD(v54) = BYTE1(v82) ^ 0x73;
  int v150 = *(_DWORD *)(v53 - 136);
  unsigned int v389 = BYTE1(v150) ^ 0xF5;
  unsigned int v409 = v400 ^ 0x2BEAE26B;
  LODWORD(v57) = ((v400 ^ 0x2BEAE26B) >> 16);
  LODWORD(v57) = *(_DWORD *)&v132[4 * (v57 ^ 0xEC)] ^ ((v57 ^ 0xC1)
                                                                   + 115737709
                                                                   + ((2
                                                                     * (((v57 ^ 0xC1) + 44) & 0x41 ^ (v57 ^ 0xC1 | 0x7FFFFFFE))) ^ 0xC1403)) ^ (181304767 * *(_DWORD *)&v137[4 * (v400 ^ 0x1E)] + 583585927);
  LODWORD(v57) = (v57 - ((2 * v57) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134 + 4 * (BYTE1(v400) ^ 8u));
  unsigned int v151 = *(_DWORD *)&v132[4 * (v437 ^ 0xAC)] ^ ((v437 ^ 0x81) + 115737709 + ((2 * v419 + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v5_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)&v137[4 * (v394 ^ 0x55)];
  int v438 = v57 - ((2 * v57) & 0xFE99652A);
  int v401 = BYTE2(v150);
  unsigned int v417 = (BYTE2(v150) ^ 0xA7) + 115737709 + ((2 * (BYTE2(v150) ^ 0xA7) + 88) & 0x80 ^ 0xFFF3EBFF);
  LODWORD(v54) = (v151 - ((2 * v151) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134 + 4 * v54) ^ (181304767 * *(_DWORD *)&v137[4 * (v445 ^ 0xB3)] + 583585927);
  int v446 = v54 - ((2 * v54) & 0xFE99652A);
  unsigned int v152 = *(_DWORD *)(v53 - 184);
  LODWORD(v54) = (181304767 * v58 - ((362609534 * v58 + 1167171854) & 0xFE99652A) - 1575648484) ^ ((BYTE2(v152) ^ 0xBA)
                                                                                                 + 115737709
                                                                                                 + ((2 * (BYTE2(v152) ^ 0xBA) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v135[4 * (HIBYTE(v152) ^ 0x2F)] ^ *(_DWORD *)&v132[4 * (BYTE2(v152) ^ 0x97)];
  int v395 = v54 - ((2 * v54) & 0x19CE44CA);
  LODWORD(v54) = *(_DWORD *)&v132[4 * (((v411 ^ 0x2FDFEF05) >> 16) ^ 0x1F)] ^ ((((v411 ^ 0x2FDFEF05) >> 16) ^ 0x32)
                                                                                              + 115737709
                                                                                              + ((2
                                                                                                * (((((v411 ^ 0x2FDFEF05) >> 16) ^ 0x32)
                                                                                                  + 44) & 0x41 ^ (((v411 ^ 0x2FDFEF05) >> 16) | 0x7FFFFFFE))) ^ 0xC1403));
  unsigned int v153 = *(_DWORD *)(v53 - 176);
  LODWORD(v57) = *(_DWORD *)&v132[4 * (BYTE2(v153) ^ 0x56)] ^ ((BYTE2(v153) ^ 0x7B)
                                                             + 115737709
                                                             + ((2
                                                               * (((BYTE2(v153) ^ 0x7B) + 44) & 0x41 ^ (HIWORD(v153) ^ 0xA0E5 | 0x7FFFFFFE))) ^ 0xC1403));
  int v154 = *(_DWORD *)&v137[4 * (v392 ^ 0xFB)];
  LODWORD(v54) = (v54 - ((2 * v54) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134
                                                                           + 4
                                                                           * (((unsigned __int16)(v411 ^ 0xEF05) >> 8) ^ 0xA6u)) ^ (181304767 * *(_DWORD *)&v137[4 * (v411 ^ 1)] + 583585927);
  LODWORD(v5_Block_object_dispose(&STACK[0x368], 8) = ((~(362609534 * v154 + 93430030) | 0xE631BB35) + 181304767 * v154 - 1347423507) ^ *(_DWORD *)(v134 + 4 * (BYTE1(v392) ^ 0xEFu));
  int v155 = HIBYTE(v411) ^ 0xBA;
  int v412 = v54 - ((2 * v54) & 0xFE99652A);
  HIDWORD(v374) = v58 - ((2 * v58) & 0xFE99652A);
  int v375 = v155;
  LODWORD(v57) = (v57 - ((2 * v57) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * (HIBYTE(v153) ^ 0xD9)] ^ (181304767 * *(_DWORD *)&v137[4 * (v153 ^ 0x79)] + 583585927);
  LODWORD(v5_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)&v132[4 * (v420 ^ 0x86)] ^ ((v420 ^ 0xAB)
                                                      + 115737709
                                                      + ((2 * (v420 ^ 0xAB) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v5_Block_object_dispose(&STACK[0x368], 8) = (v58 - ((2 * v58) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * v431];
  unsigned int v370 = v425 ^ 0xEE;
  unsigned int v366 = v414 ^ 0x4A;
  int v426 = v58 - ((2 * v58) & 0x19CE44CA);
  int v421 = v57 - ((2 * v57) & 0x19CE44CA);
  int v415 = v430;
  unsigned int v432 = (v430 ^ 0x65) + 115737709 + ((2 * (v430 ^ 0x65) + 88) & 0x80 ^ 0xFFF3EBFF);
  unsigned int v156 = *(_DWORD *)&v132[4 * (v376 ^ 0x8B)] ^ ((v376 ^ 0xA6)
                                              + 115737709
                                              + ((2 * (v376 ^ 0xA6) + 88) & 0x80 ^ 0xFFF3EBFF));
  int v377 = BYTE2(*(_DWORD *)(v53 - 160));
  unsigned int v428 = (v377 ^ 0x8F) + 115737709 + ((2 * (v377 ^ 0x8F) + 88) & 0x80 ^ 0xFFF3EBFF);
  LODWORD(v57) = v386 ^ 0x22;
  unsigned int v157 = *(_DWORD *)&v132[4 * (BYTE2(v126) ^ 0xE8)] ^ ((BYTE2(v126) ^ 0xC5)
                                                     + 115737709
                                                     + ((2 * (BYTE2(v126) ^ 0xC5) + 88) & 0x80 ^ 0xFFF3EBFF));
  unsigned int v369 = ((unsigned __int16)(v113 ^ v119) >> 8) ^ 0x8E;
  unsigned int v158 = (181304767 * *(_DWORD *)&v137[4 * (v126 ^ 0xCA)] + 583585927) ^ *(_DWORD *)&v135[4 * (HIBYTE(v126) ^ 0x8E)] ^ (v157 - ((2 * v157) & 0xFE99652A) + 2135732885);
  unsigned int v387 = v126 ^ v119 ^ 0x44039AAA;
  LODWORD(v5_Block_object_dispose(&STACK[0x368], 8) = (181304767 * *(_DWORD *)&v137[4 * (v380 ^ 0xDB)] + 583585927) ^ (((v380 ^ 0x44039AAAu) >> 16)
                                                                                                 + 115737709
                                                                                                 + ((2 * ((v380 ^ 0x44039AAAu) >> 16) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (((v380 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  unsigned int v367 = BYTE1(v126) ^ 0x16;
  unsigned int v372 = v158 - ((2 * v158) & 0x19CE44CA);
  LODWORD(v56) = (v58 - ((2 * v58) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134
                                                                           + 4
                                                                           * (((unsigned __int16)(v126 ^ v119) >> 8) ^ 0xC0u));
  unsigned int v159 = *(_DWORD *)&v135[4 * v57] ^ (181304767 * *(_DWORD *)&v137[4 * (v398 ^ 0xFE)] + 583585927) ^ (v156 - ((2 * v156) & 0xFE99652A) + 2135732885);
  int v399 = v56 - ((2 * v56) & 0xFE99652A);
  LODWORD(v57) = *(_DWORD *)&v137[4 * (v463 ^ 0xEC)];
  unsigned int v381 = v159 - ((2 * v159) & 0x19CE44CA);
  int v160 = 181304767 * v57 - ((362609534 * v57 + 1167171854) & 0xFE99652A);
  LODWORD(v57) = *(_DWORD *)&v132[4 * (v491 ^ 0x32)] ^ ((v491 ^ 0x1F)
                                                      + 115737709
                                                      + ((2 * (v491 ^ 0x1F) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v56) = *(_DWORD *)&v137[4 * (v479 ^ 0xE6)];
  unsigned int v161 = *(_DWORD *)&v135[4 * (HIBYTE(v463) ^ 0xCA)] ^ ((BYTE2(v463) ^ 0x2F)
                                                      + 115737709
                                                      + ((2 * (BYTE2(v463) ^ 0x2F) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (BYTE2(v463) ^ 2)] ^ (v160 - 1575648484);
  LODWORD(v54) = (v57 - ((2 * v57) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134 + 4 * (HIDWORD(v506) ^ 0x8Cu)) ^ (181304767 * *(_DWORD *)&v137[4 * (v496 ^ 0xD9)] + 583585927);
  LODWORD(v57) = *(_DWORD *)&v135[4 * ((v479 ^ 0x49A657C7u) >> 24)] ^ ((((v479 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                     + 115737709
                                                                     + ((2
                                                                       * (((v479 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                       + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (((v479 ^ 0x49A657C7u) >> 16) ^ 0x18)] ^ (181304767 * v56 - ((362609534 * v56 + 1167171854) & 0xFE99652A) - 1575648484);
  LODWORD(v56) = *(_DWORD *)&v132[4 * (((v484 ^ 0xDCBEA80E) >> 16) ^ 0x2D)] ^ (((v484 ^ 0xDCBEA80E) >> 16)
                                                                                              + 115737709
                                                                                              + ((2
                                                                                                * ((v484 ^ 0xDCBEA80E) >> 16)
                                                                                                + 88) & 0x80 ^ 0xFFF3EBFF));
  unsigned int v497 = v508 ^ 0xAA;
  HIDWORD(v506) = (v161 - ((2 * v161) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134 + 4 * (BYTE1(v463) ^ 0x2Eu));
  int v492 = v54 - ((2 * v54) & 0xFE99652A);
  unsigned int v464 = BYTE1(v479) ^ 0xB9;
  LODWORD(v54) = (v56 - ((2 * v56) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * ((v484 ^ 0xDCBEA80E) >> 24)] ^ (181304767 * *(_DWORD *)&v137[4 * (v484 ^ 0x9E)] + 583585927);
  unsigned int v364 = BYTE1(v484) ^ 0x28;
  int v485 = v57 - ((2 * v57) & 0x19CE44CA);
  int v480 = v54 - ((2 * v54) & 0x19CE44CA);
  unsigned int v162 = *(_DWORD *)&v132[4 * (v467 ^ 0xC1)] ^ ((v467 ^ 0xEC)
                                              + 115737709
                                              + ((2 * (v467 ^ 0xEC) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v57) = *(_DWORD *)&v137[4 * (*(_DWORD *)(v53 - 148) ^ 0xDE)];
  LODWORD(v54) = (v162 - ((2 * v162) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134
                                                                             + 4
                                                                             * ((v475 - ((2 * v472) & 0x166) + 179) ^ 0x54)) ^ (181304767 * *(_DWORD *)&v137[4 * (v493 ^ 0xE2)] + 583585927);
  int v163 = (181304767 * v57 - ((362609534 * v57 + 1167171854) & 0xFE99652A) - 1575648484) ^ *(_DWORD *)&v135[4 * (HIBYTE(v482) ^ 0x89)];
  int v494 = v54 - ((2 * v54) & 0xFE99652A);
  int v473 = v163 - ((2 * v163) & 0x19CE44CA);
  LODWORD(v54) = *(_DWORD *)&v132[4 * (((v459 ^ 0xEEA2BFA8) >> 16) ^ 0x86)] ^ ((((v459 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                              + 115737709
                                                                                              + ((2
                                                                                                * (((v459 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                                + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v54) = (181304767 * *(_DWORD *)&v137[4 * (v459 ^ 0x68)] + 583585927) ^ *(_DWORD *)(v134 + 4 * (BYTE1(v459) ^ 0x55u)) ^ (v54 - 1931009435 + (~(2 * v54) | 0xE631BB35) + 1);
  LODWORD(v57) = ((v501 ^ 0x231B9DB5u) >> 16);
  int v361 = v57 ^ 0xEC;
  int v509 = (v57 ^ 0xC1) + 115737709 + ((2 * (v57 ^ 0xC1) + 88) & 0x80 ^ 0xFFF3EBFF);
  HIDWORD(v363) = v54 - ((2 * v54) & 0xFE99652A);
  int v164 = BYTE2(v482);
  unsigned int v468 = (BYTE2(v482) ^ 0xAC) + 115737709 + ((2 * (BYTE2(v482) ^ 0xAC) + 88) & 0x80 ^ 0xFFF3EBFF);
  unsigned int v165 = v522 ^ 0xE293F505;
  int v166 = *(_DWORD *)&v137[4 * (v518 ^ 0x74)];
  int v167 = *(_DWORD *)&v137[4 * (v510 ^ 0xF0)];
  unsigned int v168 = *(_DWORD *)(v53 - 160);
  int v169 = *(_DWORD *)&v137[4 * (v522 ^ 0x3C)];
  int v483 = 181304767 * *(_DWORD *)&v137[4 * (v487 ^ 0x60)] + 583585927;
  int v523 = 181304767 * *(_DWORD *)&v137[4 * (v530 ^ 0xFB)] + 583585927;
  int v511 = 181304767 * *(_DWORD *)&v137[4 * (*(_DWORD *)(v53 - 140) ^ 0xB8)] + 583585927;
  int v519 = 181304767 * *(_DWORD *)&v137[4 * (v383 ^ 0xAC)] + 583585927;
  HIDWORD(v362) = 181304767 * v167 + 583585927;
  LODWORD(v363) = 181304767 * *(_DWORD *)&v137[4 * v373] + 583585927;
  int v531 = 181304767 * *(_DWORD *)&v137[4 * (*(_DWORD *)(v53 - 136) ^ 0x57)] + 583585927;
  int v384 = 181304767 * *(_DWORD *)&v137[4 * v366] + 583585927;
  int v488 = 181304767 * *(_DWORD *)&v137[4 * (v168 ^ 0x78)] + 583585927;
  HIDWORD(v365) = 181304767 * *(_DWORD *)&v137[4 * (v501 ^ 0x75)] + 583585927;
  LODWORD(v374) = 181304767 * v169 + 583585927;
  unsigned int v170 = (181304767 * v166 - ((362609534 * v166 + 1167171854) & 0xFE99652A) - 1575648484) ^ *(_DWORD *)&v135[4 * (*(_DWORD *)(v53 - 248) ^ 0x7B)];
  LODWORD(v54) = *(_DWORD *)&v132[4 * (BYTE2(v520) ^ 0x9E)] ^ ((BYTE2(v520) ^ 0xB3)
                                                             + 115737709
                                                             + ((2 * (BYTE2(v520) ^ 0xB3) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ (181304767 * *(_DWORD *)&v137[4 * (v520 ^ 0x33)] + 583585927);
  LODWORD(v54) = (v54 - ((2 * v54) & 0x19CE44CA) - 1931009435) ^ *(_DWORD *)(v134 + 4 * (BYTE1(v520) ^ 0x1Au));
  LODWORD(v5_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)&v132[4 * (BYTE2(v165) ^ 0x3C)] ^ ((BYTE2(v165) ^ 0x11)
                                                             + 115737709
                                                             + ((2 * (BYTE2(v165) ^ 0x11) + 88) & 0x80 ^ 0xFFF3EBFF));
  LODWORD(v57) = (181304767 * *(_DWORD *)&v137[4 * (v528 ^ 0x2A)] + 583585927) ^ ((BYTE2(v528) ^ 0x37)
                                                                                                 + 115737709
                                                                                                 + ((2 * (BYTE2(v528) ^ 0x37) + 88) & 0x80 ^ 0xFFF3EBFF)) ^ *(_DWORD *)&v132[4 * (BYTE2(v528) ^ 0x1A)];
  BYTE1(v152) = BYTE1(v528);
  LODWORD(v57) = (v57 - ((2 * v57) & 0xFE99652A) + 2135732885) ^ *(_DWORD *)&v135[4 * (HIBYTE(v528) ^ 0xF9)];
  *(_DWORD *)(v53 - 24_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)&v132[4 * (BYTE2(v119) ^ 0x61)];
  unsigned int v171 = v524 ^ 0x1A;
  int v525 = *(_DWORD *)&v132[4 * (v401 ^ 0x8A)];
  LODWORD(v73) = *(_DWORD *)(v53 - 224);
  int v416 = *(_DWORD *)&v132[4 * (v415 ^ 0x48)];
  HIDWORD(v360) = *(_DWORD *)&v132[4 * (v377 ^ 0xA2)];
  LODWORD(v362) = *(_DWORD *)&v132[4 * v361];
  int v460 = *(_DWORD *)&v132[4 * (v164 ^ 0x81)];
  *(_DWORD *)(v53 - 224) = *(_DWORD *)&v132[4 * (v73 ^ 0x1A)];
  int v172 = ((*(_DWORD *)(v53 - 256) >> 15) & 0x58 ^ 0x48) + (v73 ^ 0x4C64A1B);
  unsigned int v402 = v172 + 35633729 + ((2 * v172) & 0x80 ^ 0xFFF3EBFF);
  int v173 = v54 - ((2 * v54) & 0xFE99652A);
  LODWORD(v360) = *(_DWORD *)(v134 + 4 * (v121 ^ 0xB0u));
  int v462 = *(_DWORD *)(v134 + 4 * v369);
  *(_DWORD *)(v53 - 256) = *(_DWORD *)(v134 + 4 * (BYTE1(*(_DWORD *)(v53 - 140)) ^ 0x85u));
  int v378 = *(_DWORD *)(v134 + 4 * (BYTE1(*(_DWORD *)(v53 - 168)) ^ 0xBDu));
  int v529 = *(_DWORD *)(v134 + 4 * v448);
  HIDWORD(v36_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)(v134 + 4 * v171);
  HIDWORD(v359) = *(_DWORD *)(v134 + 4 * v404);
  *(_DWORD *)(v53 - 16_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)(v134 + 4 * v389);
  *(_DWORD *)(v53 - 184) = *(_DWORD *)(v134 + 4 * (BYTE1(*(_DWORD *)(v53 - 184)) ^ 0xD6u));
  int v449 = *(_DWORD *)(v134 + 4 * v370);
  int v390 = *(_DWORD *)(v134 + 4 * (BYTE1(*(_DWORD *)(v53 - 176)) ^ 0xD7u));
  LODWORD(v35_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)(v134 + 4 * (BYTE1(v168) ^ 0x76u));
  LODWORD(v54) = *(_DWORD *)(v134 + 4 * v367);
  HIDWORD(v357) = *(_DWORD *)(v134 + 4 * (v516 ^ 0xBEu));
  int v517 = *(_DWORD *)(v134 + 4 * v464);
  int v405 = *(_DWORD *)(v134 + 4 * v364);
  HIDWORD(v35_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)(v134 + 4 * (BYTE1(v501) ^ 0x77u));
  int v465 = *(_DWORD *)(v134 + 4 * (BYTE1(*(_DWORD *)(v53 - 148)) ^ 0xFEu));
  *(_DWORD *)(v53 - 216) = *(_DWORD *)(v134 + 4 * (*(_DWORD *)(v53 - 216) ^ 0x84u));
  LODWORD(v365) = *(_DWORD *)(v134 + 4 * (BYTE1(v152) ^ 0x2Eu));
  int v174 = *(_DWORD *)(v134 + 4 * (BYTE1(*(_DWORD *)(v53 - 240)) ^ 0xC8u));
  *(_DWORD *)(v53 - 160) = *(_DWORD *)&v135[4 * (HIBYTE(v119) ^ 0xB2)];
  unsigned int v478 = v477 - 1931009435;
  int v470 = v469 - 1931009435;
  LODWORD(v371) = v456 - 1931009435;
  LODWORD(v359) = v453 - 1931009435;
  LODWORD(v36_Block_object_dispose(&STACK[0x368], 8) = v450 - 1931009435;
  LODWORD(v357) = v434 - 1931009435;
  HIDWORD(a4) = v406 - 1931009435;
  *(_DWORD *)(v53 - 240) = v395 - 1931009435;
  int v454 = v426 - 1931009435;
  int v457 = v421 - 1931009435;
  unsigned int v175 = v372 - 1931009435;
  unsigned int v489 = v381 - 1931009435;
  int v435 = v485 - 1931009435;
  int v427 = v480 - 1931009435;
  int v451 = v473 - 1931009435;
  int v396 = v170 - ((2 * v170) & 0x19CE44CA) - 1931009435;
  int v382 = v57 - ((2 * v57) & 0x19CE44CA) - 1931009435;
  int v422 = *(_DWORD *)&v135[4 * (*(_DWORD *)(v53 - 208) ^ 7)];
  HIDWORD(v371) = *(_DWORD *)&v135[4 * v440];
  int v474 = *(_DWORD *)&v135[4 * (HIBYTE(*(_DWORD *)(v53 - 144)) ^ 0x88)];
  LODWORD(v57) = HIBYTE(v409);
  int v410 = *(_DWORD *)&v135[4 * (HIBYTE(*(_DWORD *)(v53 - 136)) ^ 0xB8)];
  *(_DWORD *)(v53 - 20_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)&v135[4 * v57];
  int v407 = *(_DWORD *)&v135[4 * (*(_DWORD *)(v53 - 200) ^ 0x4B)];
  LODWORD(a15) = *(_DWORD *)&v135[4 * v375];
  int v393 = *(_DWORD *)&v135[4 * (HIBYTE(v392) ^ 0xE8)];
  int v176 = v174 ^ (v58 - ((2 * v58) & 0x19CE44CA) - 1931009435);
  int v177 = *(_DWORD *)&v135[4 * (HIBYTE(v168) ^ 0xA6)];
  int v178 = *(_DWORD *)&v135[4 * HIBYTE(v387)];
  int v441 = *(_DWORD *)&v135[4 * v497];
  int v179 = *(_DWORD *)&v135[4 * ((v501 ^ 0x231B9DB5u) >> 24)];
  int v180 = *(_DWORD *)&v135[4 * (*(_DWORD *)(v53 - 228) ^ 0x38)];
  int v181 = *(_DWORD *)&v135[4 * ((v459 ^ 0xEEA2BFA8) >> 24)];
  *(_DWORD *)(v53 - 200) = *(_DWORD *)&v135[4 * (HIBYTE(v520) ^ 0x48)];
  int v388 = *(_DWORD *)&v135[4 * HIBYTE(v165)];
  *(_DWORD *)(v53 - 176) = v499 + 2135732885;
  *(_DWORD *)(v53 - 22_Block_object_dispose(&STACK[0x368], 8) = v438 + 2135732885;
  int v521 = v446 + 2135732885;
  int v182 = v412 + 2135732885;
  int v183 = v492 + 2135732885;
  int v184 = v494 + 2135732885;
  int v185 = v173 + 2135732885;
  unsigned int v186 = v176 - ((2 * v176) & 0xFE99652A) + 2135732885;
  int v187 = v507 ^ HIDWORD(v506) ^ 0x6285F181;
  int v188 = v175 ^ v54 ^ v187;
  uint64_t v189 = (uint64_t)*(&off_1F2C91B30 + a1 - 26);
  int v190 = (char *)*(&off_1F2C91B30 + (a1 ^ 0xDA)) - 12;
  uint64_t v191 = (uint64_t)*(&off_1F2C91B30 + (a1 & 0x3C8E4BA2));
  int v192 = (char *)*(&off_1F2C91B30 + (a1 ^ 0x65)) - 8;
  LODWORD(v54) = (v192[*(unsigned __int8 *)(v53 - 105) ^ 0xE4] ^ 0xD5) & 0xFF00FFFF | ((*(unsigned __int8 *)(v189 + (*(unsigned __int8 *)(v53 - 108) ^ 0x3ELL)) ^ (*(unsigned __int8 *)(v53 - 108) - ((2 * *(unsigned char *)(v53 - 108)) & 0x88) + 68) ^ 0xFFFFFFE1) << 24) | (((*(unsigned char *)(v191 + (*(unsigned __int8 *)(v53 - 107) ^ 0x27)) + 103) ^ 0x96) << 16);
  int v193 = ((*(unsigned __int8 *)(v189 + (*(unsigned __int8 *)(v53 - 104) ^ 0xD3)) ^ (*(unsigned __int8 *)(v53 - 104)
                                                                                    - ((2 * *(unsigned char *)(v53 - 104)) & 0x88)
                                                                                    + 68) ^ 0xE0) << 24) | ((v190[*(unsigned __int8 *)(v53 - 102) ^ 0xBELL] ^ 0x96) << 8);
  unsigned int v194 = (v192[*(unsigned __int8 *)(v53 - 109) ^ 0x41] ^ 0xE3) & 0xFF00FFFF | (((*(unsigned char *)(v191 + (*(unsigned __int8 *)(v53 - 111) ^ 0x40)) + 103) ^ 0x5A) << 16) | ((v190[*(unsigned __int8 *)(v53 - 110) ^ 0xBBLL] ^ 0x34) << 8) | ((*(unsigned __int8 *)(v189 + (*(unsigned __int8 *)(v53 - 112) ^ 0x1ELL)) ^ (*(unsigned __int8 *)(v53 - 112) - ((2 * *(unsigned char *)(v53 - 112)) & 0x88) + 68) ^ 0x84) << 24);
  v500 = v190;
  uint64_t v502 = v189;
  int v195 = v192[*(unsigned __int8 *)(v53 - 97) ^ 0x74] ^ 0x44 | (((*(unsigned char *)(v191 + (*(unsigned __int8 *)(v53 - 99) ^ 0xF3)) + 103) ^ 2) << 16) | ((v190[*(unsigned __int8 *)(v53 - 98) ^ 0x20] ^ 0xDE) << 8) | ((*(unsigned __int8 *)(v189 + (*(unsigned __int8 *)(v53 - 100) ^ 0xF3)) ^ (*(unsigned __int8 *)(v53 - 100) - ((2 * *(unsigned char *)(v53 - 100)) & 0x88) + 68) ^ 0x85) << 24);
  v495 = v192;
  uint64_t v498 = v191;
  int v196 = v54 | ((v190[*(unsigned __int8 *)(v53 - 106) ^ 9] ^ 0x31) << 8);
  unsigned int v197 = (v192[*(unsigned __int8 *)(v53 - 101) ^ 0xF2] ^ 0x6C | v193) & 0xFF00FFFF | (((*(unsigned char *)(v191 + (*(unsigned __int8 *)(v53 - 103) ^ 0xE9)) + 103) ^ 0x8A) << 16);
  if ((v188 & 0x80) != 0) {
    int v198 = -128;
  }
  else {
    int v198 = 128;
  }
  *(_DWORD *)(v53 - 136) = v195 ^ 0xF23C31B4;
  *(_DWORD *)(v53 - 140) = v194 ^ 0xAEACFA9;
  *(_DWORD *)(v53 - 144) = v196 ^ 0x896B34EE;
  *(_DWORD *)(v53 - 14_Block_object_dispose(&STACK[0x368], 8) = v197 ^ 0x4C48160;
  HIDWORD(v490) = v489 ^ HIDWORD(v357);
  LODWORD(v490) = v177 ^ v428 ^ v358 ^ HIDWORD(v360) ^ v488;
  HIDWORD(v486) = (v399 + 2135732885) ^ v178;
  LODWORD(v486) = v483 ^ v360 ^ v478;
  HIDWORD(v481) = v470 ^ v462;
  LODWORD(v481) = HIDWORD(a4) ^ HIDWORD(v359);
  HIDWORD(v476) = v357 ^ HIDWORD(v368) ^ HIDWORD(v362);
  LODWORD(v476) = (v444 + 2135732885) ^ HIDWORD(v371) ^ v363;
  HIDWORD(v471) = (v423 + 2135732885) ^ v474;
  LODWORD(v471) = HIDWORD(v358) ^ v179 ^ v509 ^ v362 ^ HIDWORD(v365);
  HIDWORD(v466) = v465 ^ v468 ^ v460 ^ v451;
  LODWORD(v466) = (HIDWORD(v363) + 2135732885) ^ v181;
  HIDWORD(v461) = v184 ^ v180;
  LODWORD(v461) = v457 ^ v390;
  HIDWORD(v45_Block_object_dispose(&STACK[0x368], 8) = v393 ^ v432 ^ v416 ^ (HIDWORD(v374) + 2135732885);
  LODWORD(v45_Block_object_dispose(&STACK[0x368], 8) = v182 ^ a15;
  HIDWORD(v452) = v384 ^ v449 ^ v454;
  LODWORD(v452) = v374 ^ v388 ^ v186;
  HIDWORD(v447) = v382 ^ v365;
  LODWORD(v447) = v185 ^ *(_DWORD *)(v53 - 200);
  unsigned int v199 = *(unsigned __int8 **)(v53 - 120);
  HIDWORD(v442) = *(_DWORD *)(v53 - 216) ^ v402 ^ *(_DWORD *)(v53 - 224) ^ v396;
  LODWORD(v442) = v183 ^ v441;
  HIDWORD(v436) = v517 ^ v435;
  LODWORD(v436) = v427 ^ v405;
  HIDWORD(v429) = v359 ^ v378;
  LODWORD(v429) = v371 ^ *(_DWORD *)(v53 - 256) ^ v511;
  HIDWORD(v424) = v519 ^ v529 ^ v368;
  LODWORD(v424) = v523 ^ v422 ^ (v513 + 1);
  HIDWORD(v41_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)(v53 - 240) ^ *(_DWORD *)(v53 - 184);
  LODWORD(v41_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)(v53 - 168) ^ v417 ^ v410 ^ v525 ^ v531;
  HIDWORD(v413) = v521 ^ v407;
  LODWORD(v413) = *(_DWORD *)(v53 - 228) ^ *(_DWORD *)(v53 - 208);
  HIDWORD(v40_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)(v53 - 192) + 16777393;
  LODWORD(v40_Block_object_dispose(&STACK[0x368], 8) = (v198 + (v188 ^ 0x2497E332)) ^ v187;
  HIDWORD(v403) = *(_DWORD *)(v53 - 160) ^ v527 ^ *(_DWORD *)(v53 - 248) ^ *(_DWORD *)(v53 - 176);
  int v200 = *(_DWORD *)(v53 - 128);
  LODWORD(v403) = v200 - 1063363686;
  HIDWORD(v397) = v200 ^ 0x4D2;
  LODWORD(v397) = v200 ^ 0x44D;
  HIDWORD(v391) = v200 ^ 0x4D3;
  LODWORD(v391) = v200 ^ 0x4FE;
  HIDWORD(v385) = v200 ^ 0x4FC;
  HIDWORD(v379) = v200 ^ 0x42A;
  LODWORD(v385) = -762293124;
  LODWORD(v379) = v200 ^ 0x45F;
  uint64_t v201 = (v200 - 1063363686) & 0x3F61A5DD ^ 0x5C0u;
  *(void *)(v53 - 192) = v201;
  unsigned __int8 v202 = *(unsigned char *)(v191 + (v199[v201] ^ 0xF3)) + 103;
  *(void *)(v53 - 160) = 1;
  int v203 = (v202 ^ 2) << 16;
  uint64_t v204 = v199[1] ^ 0x57;
  *(void *)(v53 - 16_Block_object_dispose(&STACK[0x368], 8) = 10;
  uint64_t v205 = v199[10] ^ 0xB6;
  int v206 = ((*(unsigned char *)(v191 + v204) + 103) ^ 0xF6) << 16;
  *(void *)(v53 - 200) = 4;
  LODWORD(v204) = v500[v205] ^ 0xBB;
  uint64_t v207 = v199[4];
  int v208 = *(unsigned __int8 *)(v502 + (v207 ^ 0x9A));
  *(void *)(v53 - 240) = 7;
  LODWORD(v207) = v208 ^ (v207 - ((2 * v207) & 0x88888888) + 68) ^ 0xFFFFFFCF;
  int v209 = v495[v199[7] ^ 0xD6];
  *(void *)(v53 - 224) = 2;
  int v210 = v209 ^ 0x86 | (v207 << 24);
  LODWORD(v207) = v500[v199[2]] ^ 0xA9;
  *(void *)(v53 - 184) = 3;
  LODWORD(v207) = v206 | (v207 << 8);
  int v211 = v495[v199[3] ^ 0x74];
  *(void *)(v53 - 176) = 12;
  LODWORD(v207) = v207 | v211 ^ 0x44;
  int v212 = *(unsigned __int8 *)(v502 + (v199[12] ^ 0x6ELL)) ^ (v199[12] - ((2 * v199[12]) & 0x88) + 68) ^ 0x51;
  *(void *)(v53 - 20_Block_object_dispose(&STACK[0x368], 8) = 0;
  int v213 = v207 | ((*(unsigned __int8 *)(v502 + (*v199 ^ 0x15)) ^ (*v199 - ((2 * *v199) & 0x88) + 68) ^ 0xAE) << 24);
  LODWORD(v207) = *(unsigned __int8 *)(v502 + (v199[8] ^ 0x46)) ^ (v199[8] - ((2 * v199[8]) & 0x88) + 68) ^ 0xFFFFFFE7;
  *(void *)(v53 - 216) = 14;
  *(_DWORD *)(v53 - 22_Block_object_dispose(&STACK[0x368], 8) = 274310079;
  LODWORD(v204) = (v204 << 8) | (v207 << 24);
  LODWORD(v207) = v500[v199[14] ^ 0xD5] ^ 0x21;
  *(void *)(v53 - 24_Block_object_dispose(&STACK[0x368], 8) = 5;
  int v214 = v203 | (v212 << 24) | (v207 << 8);
  LOBYTE(v207) = (*(unsigned char *)(v191 + (v199[5] ^ 0x9DLL)) + 103) ^ 0xF7;
  int v215 = v495[v199[11] ^ 0xC2] ^ 0x61 | v204;
  LOBYTE(v204) = *(unsigned char *)(v191 + (v199[9] ^ 0x3ELL));
  uint64_t v216 = v199[6] ^ 0xA4;
  *(void *)(v53 - 256) = 15;
  unsigned int v217 = v215 & 0xFF00FFFF | (((v204 + 103) ^ 0xDF) << 16);
  int v218 = v495[v199[15] ^ 0x47] ^ 0x44 | v214;
  unsigned int v515 = v210 & 0xFF00FFFF | (v207 << 16) | ((v500[v216] ^ 0x71) << 8);
  unsigned int v219 = (char *)*(&off_1F2C91B30 + SHIDWORD(v397)) - 8;
  LODWORD(v204) = *(_DWORD *)&v219[4 * (((unsigned __int16)(v515 ^ WORD2(v503)) >> 8) ^ 0x21)] ^ ((((unsigned __int16)(v515 ^ WORD2(v503)) >> 8) ^ 0x4C) + 1115978535 - ((2 * (((v515 ^ HIDWORD(v503)) >> 8) ^ 0xB71C4C)) & 0x4E));
  int v220 = (char *)*(&off_1F2C91B30 + *(_DWORD *)(v53 - 128) - 952) - 8;
  unsigned int v221 = v213 ^ v504 ^ 0x730032AA;
  LODWORD(v204) = (v204 + 365380211 - ((2 * v204) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4
                                                                                  * ((v213 ^ v504) ^ 0xAA)];
  unsigned int v222 = HIDWORD(a44) ^ v218;
  unsigned int v223 = *(_DWORD *)&v219[4 * (((unsigned __int16)(WORD2(a44) ^ v218) >> 8) ^ 0x25)] ^ ((((unsigned __int16)(WORD2(a44) ^ v218) >> 8) ^ 0x48) + 1115978535 - (((HIDWORD(a44) ^ v218) >> 7) & 0x4E));
  unsigned int v224 = v223 + 1403600629 - ((2 * v223) & 0xA7527DEA);
  int v225 = v204 + 1403600629 - ((2 * v204) & 0xA7527DEA);
  LODWORD(v204) = v217 ^ v503;
  int v226 = (char *)*(&off_1F2C91B30 + SHIDWORD(v391)) - 8;
  int v227 = *(_DWORD *)&v226[4 * (((v217 ^ v503) >> 16) ^ 0x68)];
  HIDWORD(v229) = v227 ^ 0xA9B;
  LODWORD(v229) = v227 ^ 0xDB440000;
  int v228 = v229 >> 12;
  int v230 = *(_DWORD *)&v226[4 * ((v213 ^ v504) >> 16)];
  HIDWORD(v229) = v230 ^ 0xA9B;
  LODWORD(v229) = v230 ^ 0xDB440000;
  int v231 = (char *)*(&off_1F2C91B30 + (int)v397) - 4;
  int v232 = *(_DWORD *)&v231[4 * (((v515 ^ HIDWORD(v503)) >> 24) ^ 0xB7)] ^ (v229 >> 12);
  int v233 = *(_DWORD *)&v226[4 * (BYTE2(v222) ^ 0x4C)];
  HIDWORD(v229) = v233 ^ 0xA9B;
  LODWORD(v229) = v233 ^ 0xDB440000;
  int v234 = v224 ^ v232;
  int v235 = *(_DWORD *)&v220[4 * ((v515 ^ BYTE4(v503)) ^ 0xFB)] ^ BYTE1(v204) ^ *(_DWORD *)&v219[4 * (BYTE1(v204) ^ 0x23)] ^ 0x5743391A ^ (v229 >> 12);
  LODWORD(v216) = *(_DWORD *)&v226[4 * (((v515 ^ HIDWORD(v503)) >> 16) ^ 0x1C)];
  HIDWORD(v229) = v216 ^ 0xA9B;
  LODWORD(v229) = v216 ^ 0xDB440000;
  LODWORD(v216) = *(_DWORD *)&v231[4 * (BYTE3(v204) ^ 0xF6)] ^ (BYTE1(v221) + 1115978535 - ((v221 >> 7) & 0x4E)) ^ *(_DWORD *)&v219[4 * (BYTE1(v221) ^ 0x6D)] ^ ((v229 >> 12) + 1403600629 - ((2 * (v229 >> 12)) & 0xA7527DEA));
  int v236 = v216 + 365380211 - ((2 * v216) & 0x2B8E84E6);
  int v237 = *(_DWORD *)&v231[4 * HIBYTE(v221)];
  LODWORD(v216) = HIDWORD(v490) ^ v228 ^ *(_DWORD *)&v231[4 * (HIBYTE(v222) ^ 0xA8)] ^ v225;
  unsigned int v238 = v490 ^ *(_DWORD *)&v220[4 * (v222 ^ 0xCE)] ^ v236;
  unsigned int v239 = HIDWORD(v486) ^ *(_DWORD *)&v220[4 * (v204 ^ 0x5F)] ^ (v234
                                                                               + 365380211
                                                                               - ((2 * v234) & 0x2B8E84E6));
  unsigned int v240 = v408 ^ v237 ^ (v235 + 1403600629 - ((2 * v235) & 0xA7527DEA));
  unsigned int v241 = v216 ^ 0xF9388C2F;
  LODWORD(v204) = *(_DWORD *)&v226[4 * ((v216 ^ 0xF9388C2F) >> 16)];
  HIDWORD(v229) = v204 ^ 0xA9B;
  LODWORD(v229) = v204 ^ 0xDB440000;
  int v242 = v229 >> 12;
  LODWORD(v204) = *(_DWORD *)&v226[4 * (BYTE2(v238) ^ 0xD3)];
  HIDWORD(v229) = v204 ^ 0xA9B;
  LODWORD(v229) = v204 ^ 0xDB440000;
  LODWORD(v204) = v229 >> 12;
  int v243 = *(_DWORD *)&v226[4 * (BYTE2(v239) ^ 0x66)];
  HIDWORD(v229) = v243 ^ 0xA9B;
  LODWORD(v229) = v243 ^ 0xDB440000;
  int v244 = (v229 >> 12) ^ *(_DWORD *)&v219[4 * (BYTE1(v240) ^ 5)] ^ ((BYTE1(v240) ^ 0x68)
                                                                 + 1115978535
                                                                 - ((2 * ((v240 >> 8) ^ 0x42BD68)) & 0x4E));
  int v245 = (v242 + 365380211 - ((2 * v242) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v239 ^ 0xB6)];
  int v246 = (v244 + 365380211 - ((2 * v244) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v216 ^ 0x61)];
  LODWORD(v216) = (((unsigned __int16)(v216 ^ 0x8C2F) >> 8)
                 + 1115978535
                 - (((v216 ^ 0xF9388C2F) >> 7) & 0x4E)) ^ 0xD678EAEF ^ *(_DWORD *)&v219[4 * (((unsigned __int16)(v216 ^ 0x8C2F) >> 8) ^ 0x6D)];
  unsigned int v247 = *(_DWORD *)&v231[4 * (HIBYTE(v239) ^ 0x43)] ^ 0xF1B3654B;
  int v248 = v216 + v247;
  LODWORD(v216) = v216 & v247;
  int v249 = *(_DWORD *)&v226[4 * (BYTE2(v240) ^ 0xBD)];
  HIDWORD(v229) = v249 ^ 0xA9B;
  LODWORD(v229) = v249 ^ 0xDB440000;
  int v250 = (v248 - 2 * v216) ^ (v229 >> 12);
  LODWORD(v204) = *(_DWORD *)&v231[4 * HIBYTE(v241)] ^ (v204 + 1403600629 - ((2 * v204) & 0xA7527DEA));
  LODWORD(v204) = (v204 + 365380211 - ((2 * v204) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v240 ^ 0xAB)];
  unsigned int v251 = *(_DWORD *)&v231[4 * (HIBYTE(v240) ^ 0x42)] ^ v507 ^ *(_DWORD *)&v219[4 * (BYTE1(v238) ^ 0x66)] ^ ((BYTE1(v238) ^ 0xB) + 1115978535 - ((2 * ((v238 >> 8) ^ 0x26D30B)) & 0x4E)) ^ (v245 + 1403600629 - ((2 * v245) & 0xA7527DEA));
  LOBYTE(v24_Block_object_dispose(&STACK[0x368], 8) = BYTE1(v239) ^ 0x54;
  unsigned int v252 = v486 ^ *(_DWORD *)&v219[4 * (BYTE1(v239) ^ 0x39)] ^ (v204 + 1115978535 - ((2 * v204) & 0x8508F64E));
  unsigned int v253 = HIDWORD(v481) ^ *(_DWORD *)&v231[4 * (HIBYTE(v238) ^ 0x26)] ^ (v246 + 1403600629 - ((2 * v246) & 0xA7527DEA));
  LODWORD(v204) = HIDWORD(v403) ^ *(_DWORD *)&v220[4 * (v238 ^ 0x98)] ^ (v250
                                                                                        + 365380212
                                                                                        + ~((2 * v250) & 0x2B8E84E6));
  int v254 = *(_DWORD *)&v226[4 * (BYTE2(v204) ^ 0x79)];
  HIDWORD(v229) = v254 ^ 0xA9B;
  LODWORD(v229) = v254 ^ 0xDB440000;
  BYTE1(v23_Block_object_dispose(&STACK[0x368], 8) = BYTE1(v253) ^ 0x68;
  int v255 = ((v229 >> 12) + 1403600629 - ((2 * (v229 >> 12)) & 0xA7527DEA)) ^ *(_DWORD *)&v231[4
                                                                                          * ((v253 ^ 0x2261685E) >> 24)];
  unsigned int v256 = ((BYTE1(v204) ^ 0xD0) + 1115978535 - ((v204 >> 7) & 0x4E)) ^ *(_DWORD *)&v219[4 * (BYTE1(v204) ^ 0xBD)];
  int v257 = (v256 + 365380211 - ((2 * v256) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v251 ^ 0x76)];
  int v258 = ((BYTE1(v252) ^ 0xEC) + 1115978535 - ((2 * ((v252 >> 8) ^ 0xE5FEC)) & 0x4E)) ^ *(_DWORD *)&v219[4 * (BYTE1(v252) ^ 0x81)];
  int v259 = *(_DWORD *)&v226[4 * (BYTE2(v252) ^ 0x5F)];
  HIDWORD(v229) = v259 ^ 0xA9B;
  LODWORD(v229) = v259 ^ 0xDB440000;
  int v260 = v229 >> 12;
  HIDWORD(v229) = *(_DWORD *)&v220[4 * (v253 ^ 0x5E)] ^ 0xFCD065FB;
  LODWORD(v229) = HIDWORD(v229);
  int v261 = (v229 >> 28) ^ __ROR4__(*(_DWORD *)&v231[4 * (BYTE3(v204) ^ 6)] ^ 0x7462B151 ^ (v258+ 1403600629- ((2 * v258) & 0xA7527DEA)), 28);
  unsigned int v262 = (v260 + 1403600629 - ((2 * v260) & 0xA7527DEA)) ^ *(_DWORD *)&v231[4 * (HIBYTE(v251) ^ 0xD2)];
  LODWORD(v204) = (v262 + 365380211 - ((2 * v262) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v204 ^ 0x4C)];
  int v263 = *(_DWORD *)&v226[4 * (BYTE2(v253) ^ 0x1B)];
  HIDWORD(v229) = v263 ^ 0xA9B;
  LODWORD(v229) = v263 ^ 0xDB440000;
  int v264 = v229 >> 12;
  int v265 = BYTE1(v251);
  int v266 = (BYTE1(v251) ^ 0xC0) + 1115978535 - ((v251 >> 7) & 0x4E);
  int v267 = *(_DWORD *)&v226[4 * (BYTE2(v251) ^ 0xCC)];
  HIDWORD(v229) = v267 ^ 0xA9B;
  LODWORD(v229) = v267 ^ 0xDB440000;
  LOBYTE(v267) = v252 ^ v248;
  int v268 = HIDWORD(a4) ^ HIDWORD(v359) ^ (v229 >> 12) ^ __ROR4__(v261 ^ 0x78071371, 4);
  unsigned int v269 = HIDWORD(v476) ^ *(_DWORD *)&v231[4 * (HIBYTE(v252) ^ 0xE)] ^ v264 ^ (v257
                                                                            + 1403600629
                                                                            - ((2 * v257) & 0xA7527DEA));
  int v270 = BYTE1(v238);
  unsigned int v271 = v476 ^ *(_DWORD *)&v219[4 * (BYTE1(v238) ^ 0x6D)] ^ (v204 + 1115978535 - ((2 * v204) & 0x8508F64E));
  unsigned int v272 = HIDWORD(v471) ^ v266 ^ *(_DWORD *)&v220[4 * (v267 ^ 0xCA)] ^ *(_DWORD *)&v219[4 * (v265 ^ 0xAD)] ^ (v255 + 365380211 - ((2 * v255) & 0x2B8E84E6));
  unsigned int v273 = v270 ^ 0x4552953C ^ v271;
  LODWORD(v204) = *(_DWORD *)&v226[4 * BYTE2(v273)];
  HIDWORD(v229) = v204 ^ 0xA9B;
  LODWORD(v229) = v204 ^ 0xDB440000;
  LODWORD(v204) = v229 >> 12;
  BYTE1(v252) = BYTE1(v268) ^ 0xE7;
  int v274 = *(_DWORD *)&v226[4 * ((v268 ^ 0x99FEE750) >> 16)];
  HIDWORD(v229) = v274 ^ 0xA9B;
  LODWORD(v229) = v274 ^ 0xDB440000;
  int v275 = (v229 >> 12) + 365380211 - ((2 * (v229 >> 12)) & 0x2B8E84E6);
  int v276 = *(_DWORD *)&v226[4 * (BYTE2(v272) ^ 2)];
  HIDWORD(v229) = v276 ^ 0xA9B;
  LODWORD(v229) = v276 ^ 0xDB440000;
  int v277 = (BYTE1(v273) + 1115978535 - ((v273 >> 7) & 0x4E)) ^ *(_DWORD *)&v220[4 * (v269 ^ 0x72)] ^ *(_DWORD *)&v219[4 * (BYTE1(v273) ^ 0x6D)] ^ v275;
  int v278 = *(_DWORD *)&v226[4 * (BYTE2(v269) ^ 0x3B)];
  int v279 = *(_DWORD *)&v231[4 * (HIBYTE(v269) ^ 0xA7)] ^ (v229 >> 12) ^ *(_DWORD *)&v220[4 * v273];
  HIDWORD(v229) = v278 ^ 0xA9B;
  LODWORD(v229) = v278 ^ 0xDB440000;
  int v280 = v471 ^ ((BYTE1(v272) ^ 0xD9) + 1115978535 - ((2 * ((v272 >> 8) ^ 0x9802D9)) & 0x4E)) ^ *(_DWORD *)&v220[4 * (v268 ^ 0x1E)] ^ *(_DWORD *)&v219[4 * (BYTE1(v272) ^ 0xB4)] ^ (v229 >> 12) ^ *(_DWORD *)&v231[4 * (HIBYTE(v271) ^ 0x61)];
  unsigned int v281 = HIDWORD(v466) ^ *(_DWORD *)&v231[4 * (HIBYTE(v272) ^ 0x98)] ^ (v277 + 1403600629 - ((2 * v277) & 0xA7527DEA));
  unsigned int v282 = v466 ^ ((BYTE1(v269) ^ 0x29) + 1115978535 - ((2 * ((v269 >> 8) ^ 0xA73B29)) & 0x4E)) ^ *(_DWORD *)&v220[4 * (v272 ^ 0x3D)] ^ *(_DWORD *)&v231[4 * ((v268 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)&v219[4 * (BYTE1(v269) ^ 0x44)] ^ v204;
  unsigned int v283 = HIDWORD(v461) ^ *(_DWORD *)&v219[4 * (BYTE1(v252) ^ 0x6D)] ^ ((v279 ^ 0x466E7C86)
                                                                     + 1115978535
                                                                     - 2
                                                                     * ((v279 ^ 0x466E7C86) & 0x42847B37 ^ v279 & 0x10));
  LODWORD(v201) = *(_DWORD *)&v226[4 * (BYTE2(v280) ^ 0x23)];
  HIDWORD(v229) = v201 ^ 0xA9B;
  LODWORD(v229) = v201 ^ 0xDB440000;
  LODWORD(v201) = v229 >> 12;
  LODWORD(v204) = *(_DWORD *)&v226[4 * (BYTE2(v282) ^ 0x86)];
  HIDWORD(v229) = v204 ^ 0xA9B;
  LODWORD(v229) = v204 ^ 0xDB440000;
  int v284 = BYTE1(v282) ^ 0x83;
  int v285 = v284 + 1115978535 - ((2 * ((v282 >> 8) ^ 0x938683)) & 0x4E);
  LODWORD(v204) = v280 ^ 0x235974D6;
  int v286 = *(_DWORD *)&v220[4 * ((v283 ^ BYTE1(v252)) ^ 0x41)] ^ (((unsigned __int16)(v280 ^ 0x74D6) >> 8)
                                                                               + 1115978535
                                                                               - (((v280 ^ 0x235974D6u) >> 7) & 0x4E)) ^ *(_DWORD *)&v219[4 * (((unsigned __int16)(v280 ^ 0x74D6) >> 8) ^ 0x6D)] ^ ((v229 >> 12) + 365380212 + ~((2 * (v229 >> 12)) & 0x2B8E84E6));
  LODWORD(v216) = *(_DWORD *)&v226[4 * (BYTE2(v283) ^ 0x81)];
  HIDWORD(v229) = v216 ^ 0xA9B;
  LODWORD(v229) = v216 ^ 0xDB440000;
  LODWORD(v216) = ((v229 >> 12) + 1403600629 - ((2 * (v229 >> 12)) & 0xA7527DEA)) ^ *(_DWORD *)&v231[4 * BYTE3(v204)];
  LODWORD(v216) = (v216 + 365380211 - ((2 * v216) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v282 ^ 0x83)];
  LODWORD(v201) = *(_DWORD *)&v220[4 * (v281 ^ 0xFC)] ^ (v201 + 365380211 - ((2 * v201) & 0x2B8E84E6)) ^ *(_DWORD *)&v219[4 * (BYTE1(v283) ^ 0xCD)] ^ ((BYTE1(v283) ^ 0xA0) + 1115978535 - 2 * ((BYTE1(v283) ^ 0xA0) & 0x3F ^ (v283 >> 8) & 0x18));
  unsigned int v287 = *(_DWORD *)&v226[4 * (BYTE2(v281) ^ 0xC6)];
  LODWORD(v229) = __ROR4__((v287 >> 12) ^ 0x2606962, 17) ^ 0xEE910136;
  HIDWORD(v229) = v229;
  LODWORD(v216) = v461 ^ *(_DWORD *)&v219[4 * (BYTE1(v281) ^ 0x75)] ^ (v216 + 1115978535 - ((2 * v216) & 0x8508F64E));
  unsigned int v288 = HIDWORD(v458) ^ *(_DWORD *)&v231[4 * (HIBYTE(v282) ^ 0x93)] ^ (v201 + 1403600629 - ((2 * v201) & 0xA7527DEA));
  int v289 = v182 ^ a15 ^ *(_DWORD *)&v231[4 * (HIBYTE(v281) ^ 0x5A)] ^ (v286 + 1403600629 - ((2 * v286) & 0xA7527DEA));
  unsigned int v290 = HIDWORD(v452) ^ v285 ^ *(_DWORD *)&v220[4 * v204] ^ *(_DWORD *)&v219[4 * (v284 ^ 0x6D)] ^ *(_DWORD *)&v231[4 * (HIBYTE(v283) ^ 0x68)] ^ ((v229 >> 15) + (v287 << 20));
  LODWORD(v201) = ((BYTE1(v216) ^ 0x9D) + 1115978535 - ((2 * ((v216 >> 8) ^ 0xC2489D)) & 0x4E)) ^ *(_DWORD *)&v219[4 * (BYTE1(v216) ^ 0xF0)];
  unsigned int v291 = *(_DWORD *)&v226[4 * (BYTE2(v288) ^ 0x8F)];
  LODWORD(v204) = *(_DWORD *)&v220[4 * (v290 ^ 0xC)] ^ (v291 << 20) ^ (v291 >> 12);
  int v292 = *(_DWORD *)&v226[4 * ((v289 ^ 0xCFB8D782) >> 16)];
  LODWORD(v201) = v204 ^ (v201 + 365380211 - ((2 * v201) & 0x2B8E84E6));
  HIDWORD(v229) = v292 ^ 0xA9B;
  LODWORD(v229) = v292 ^ 0xDB440000;
  LODWORD(v204) = ((v229 >> 12) + 365380211 - ((2 * (v229 >> 12)) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * ((v216 ^ BYTE1(v281)) ^ 0x3F)];
  int v293 = *(_DWORD *)&v226[4 * (BYTE2(v216) ^ 0x48)];
  HIDWORD(v229) = v293 ^ 0xA9B;
  LODWORD(v229) = v293 ^ 0xDB440000;
  int v294 = ((BYTE1(v290) ^ 0x1C) + 1115978535 - ((2 * ((v290 >> 8) ^ 0xC9551C)) & 0x4E)) ^ *(_DWORD *)&v220[4 * (v289 ^ 0xCC)] ^ *(_DWORD *)&v219[4 * (BYTE1(v290) ^ 0x71)] ^ ((v229 >> 12) + 365380211 - ((2 * (v229 >> 12)) & 0x2B8E84E6));
  int v295 = *(_DWORD *)&v226[4 * (BYTE2(v290) ^ 0x55)];
  HIDWORD(v229) = v295 ^ 0xA9B;
  LODWORD(v229) = v295 ^ 0xDB440000;
  LODWORD(v216) = v452 ^ (((unsigned __int16)(v289 ^ 0xD782) >> 8)
                        + 1115978535
                        - (((v289 ^ 0xCFB8D782) >> 7) & 0x4E)) ^ *(_DWORD *)&v220[4 * (v288 ^ 0x50)] ^ *(_DWORD *)&v219[4 * (((unsigned __int16)(v289 ^ 0xD782) >> 8) ^ 0x6D)] ^ (v229 >> 12) ^ *(_DWORD *)&v231[4 * (BYTE3(v216) ^ 0xC2)];
  unsigned int v296 = HIDWORD(v447) ^ *(_DWORD *)&v231[4 * (HIBYTE(v288) ^ 0xC7)] ^ (v294 + 1403600629 - ((2 * v294) & 0xA7527DEA));
  unsigned int v297 = v447 ^ *(_DWORD *)&v231[4 * ((v289 ^ 0xCFB8D782) >> 24)] ^ ((v201 ^ 0xA9BDB440)
                                                                   + 1403600629
                                                                   - 2 * ((v201 ^ 0xA9BDB440) & 0x53A93EFF ^ v201 & 0xA));
  unsigned int v298 = HIDWORD(v442) ^ ((BYTE1(v288) ^ 0xD9) + 1115978535 - ((2 * ((v288 >> 8) ^ 0xC78FD9)) & 0x4E)) ^ *(_DWORD *)&v231[4 * (HIBYTE(v290) ^ 0xC9)] ^ *(_DWORD *)&v219[4 * (BYTE1(v288) ^ 0xB4)] ^ (v204 + 1403600629 - ((2 * v204) & 0xA7527DEA));
  int v299 = *(_DWORD *)&v226[4 * (BYTE2(v296) ^ 0xE6)];
  HIDWORD(v229) = v299 ^ 0xA9B;
  LODWORD(v229) = v299 ^ 0xDB440000;
  int v300 = v229 >> 12;
  int v301 = *(_DWORD *)&v226[4 * (BYTE2(v297) ^ 0x1C)];
  HIDWORD(v229) = v301 ^ 0xA9B;
  LODWORD(v229) = v301 ^ 0xDB440000;
  unsigned int v302 = (((unsigned __int16)(v298 ^ 0xCCA2) >> 8) + 1115978535 - (((v298 ^ 0x33C8CCA2) >> 7) & 0x4E)) ^ *(_DWORD *)&v219[4 * (((unsigned __int16)(v298 ^ 0xCCA2) >> 8) ^ 0x6D)];
  LODWORD(v201) = (v229 >> 12) ^ *(_DWORD *)&v219[4 * (BYTE1(v296) ^ 0xD9)] ^ ((BYTE1(v296) ^ 0xB4)
                                                                             + 1115978535
                                                                             - ((2 * ((v296 >> 8) ^ 0x4FE6B4)) & 0x4E));
  LODWORD(v201) = (v201 + 365380211 - ((2 * v201) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v216 ^ 0x6C)];
  int v303 = (v302 + 365380211 - ((2 * v302) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v297 ^ 0x3A)];
  unsigned int v304 = *(_DWORD *)&v220[4 * (v298 ^ 0xA2)] ^ (((unsigned __int16)(v216 ^ 0x686C) >> 8)
                                                               + 1115978535
                                                               - (((v216 ^ 0x5F5D686C) >> 7) & 0x4E)) ^ *(_DWORD *)&v219[4 * (((unsigned __int16)(v216 ^ 0x686C) >> 8) ^ 0x6D)] ^ (v300 + 365380211 - ((2 * v300) & 0x2B8E84E6));
  HIDWORD(v229) = *(_DWORD *)&v220[4 * (v296 ^ 0x96)] ^ 0x15C74273;
  LODWORD(v229) = *(_DWORD *)&v220[4 * (v296 ^ 0x96)];
  HIDWORD(v229) = (v229 >> 29) ^ 0x6615DA09;
  LODWORD(v229) = HIDWORD(v229);
  int v305 = (v229 >> 3) + 1115978535 - ((2 * (v229 >> 3)) & 0x8508F64E);
  int v306 = *(_DWORD *)&v226[4 * ((v216 ^ 0x5F5D686C) >> 16)];
  HIDWORD(v229) = v306 ^ 0xA9B;
  LODWORD(v229) = v306 ^ 0xDB440000;
  int v307 = v229 >> 12;
  LODWORD(v204) = *(_DWORD *)&v226[4 * ((v298 ^ 0x33C8CCA2) >> 16)];
  HIDWORD(v229) = v204 ^ 0xA9B;
  LODWORD(v229) = v204 ^ 0xDB440000;
  unsigned int v308 = v442 ^ *(_DWORD *)&v231[4 * (HIBYTE(v298) ^ 0x17)] ^ (v201 + 1403600629 - ((2 * v201) & 0xA7527DEA));
  LODWORD(v201) = v305 ^ *(_DWORD *)&v219[4 * (BYTE1(v297) ^ 0xD1)] ^ (v229 >> 12);
  unsigned int v309 = *(_DWORD *)&v231[4 * (BYTE3(v216) ^ 0x7B)] ^ HIDWORD(v506) ^ (v201 + 1403600629 - ((2 * v201) & 0xA7527DEA));
  LODWORD(v201) = HIDWORD(v436) ^ *(_DWORD *)&v231[4 * (HIBYTE(v296) ^ 0x4F)] ^ v307;
  LODWORD(v216) = v436 ^ *(_DWORD *)&v231[4 * (HIBYTE(v297) ^ 0x1B)] ^ (v304 + 1403600629 - ((2 * v304) & 0xA7527DEA));
  LODWORD(v204) = *(_DWORD *)&v226[4 * (BYTE2(v216) ^ 0x7E)];
  HIDWORD(v229) = v204 ^ 0xA9B;
  LODWORD(v229) = v204 ^ 0xDB440000;
  int v310 = v229 >> 12;
  LODWORD(v204) = v201 ^ (v303 + 1403600629 - ((2 * v303) & 0xA7527DEA));
  LODWORD(v201) = *(_DWORD *)&v226[4 * (BYTE2(v204) ^ 1)];
  HIDWORD(v229) = v201 ^ 0xA9B;
  LODWORD(v229) = v201 ^ 0xDB440000;
  LODWORD(v201) = ((v229 >> 12) + 365380211 - ((2 * (v229 >> 12)) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v308 ^ 0xC6)];
  int v311 = ((BYTE1(v308) ^ 0x71) + 1115978535 - ((2 * ((v308 >> 8) ^ 0xF25B71)) & 0x4E)) ^ *(_DWORD *)&v219[4 * (BYTE1(v308) ^ 0x1C)];
  unsigned int v312 = (v311 + 1403600629 - ((2 * v311) & 0xA7527DEA)) ^ *(_DWORD *)&v231[4 * (BYTE3(v204) ^ 0x1F)];
  int v313 = *(_DWORD *)&v226[4 * (BYTE2(v308) ^ 0x5B)];
  HIDWORD(v229) = v313 ^ 0xA9B;
  LODWORD(v229) = v313 ^ 0xDB440000;
  int v314 = v229 >> 12;
  unsigned int v315 = BYTE1(v297) ^ 0x73F4E0AF ^ v309;
  int v316 = *(_DWORD *)&v226[4 * BYTE2(v315)];
  HIDWORD(v229) = v316 ^ 0xA9B;
  LODWORD(v229) = v316 ^ 0xDB440000;
  int v317 = v229 >> 12;
  HIDWORD(v229) = v310 ^ ((BYTE1(v204) ^ 0x81) + 1115978535 - ((2 * ((v204 >> 8) ^ 0x1F0181)) & 0x4E)) ^ 0xD678EAEF ^ *(_DWORD *)&v219[4 * (BYTE1(v204) ^ 0xEC)];
  LODWORD(v229) = HIDWORD(v229);
  LODWORD(v229) = (v229 >> 11) ^ __ROR4__(*(_DWORD *)&v231[4 * (HIBYTE(v308) ^ 0xF2)] ^ 0xF1B3654B, 11) ^ 0xD490839A;
  HIDWORD(v229) = v229;
  unsigned int v318 = HIDWORD(v429) ^ *(_DWORD *)&v220[4 * (v204 ^ 0xB8)] ^ ((BYTE1(v216) ^ 0xAA)
                                                                               + 1115978535
                                                                               - 2
                                                                               * (((v216 >> 8) ^ 0x967EAA) & 0x37 ^ (v216 >> 8) & 0x10)) ^ *(_DWORD *)&v231[4 * (HIBYTE(v309) ^ 0x57)] ^ *(_DWORD *)&v219[4 * (BYTE1(v216) ^ 0xC7)] ^ v314;
  LODWORD(v204) = v429 ^ (BYTE1(v315) + 1115978535 - ((v315 >> 7) & 0x4E)) ^ *(_DWORD *)&v231[4 * (BYTE3(v216) ^ 0x96)] ^ *(_DWORD *)&v219[4 * (BYTE1(v315) ^ 0x6D)] ^ (v201 + 1403600629 - ((2 * v201) & 0xA7527DEA));
  LODWORD(v201) = HIDWORD(v424) ^ *(_DWORD *)&v220[4 * (v216 ^ 0x88)] ^ v317 ^ (v312
                                                                                               + 365380211
                                                                                               - ((2 * v312) & 0x2B8E84E6));
  unsigned int v319 = v424 ^ *(_DWORD *)&v220[4 * (BYTE1(v297) ^ 0xAF ^ v309)] ^ ((v229 >> 21)
                                                                                    + 365380211
                                                                                    - ((2 * (v229 >> 21)) & 0x2B8E84E6));
  LODWORD(v216) = *(_DWORD *)&v226[4 * (BYTE2(v318) ^ 0x85)];
  BYTE2(v315) = BYTE2(v201) ^ 0x4A;
  HIDWORD(v229) = v216 ^ 0xA9B;
  LODWORD(v229) = v216 ^ 0xDB440000;
  LODWORD(v216) = v229 >> 12;
  unsigned int v320 = *(_DWORD *)&v219[4 * (BYTE1(v204) ^ 0x96)] ^ ((BYTE1(v204) ^ 0xFB)
                                                     + 1115978535
                                                     - ((2 * ((v204 >> 8) ^ 0x3EA2FB)) & 0x4E));
  int v321 = *(_DWORD *)&v226[4 * (BYTE2(v204) ^ 0xA2)];
  int v322 = (v320 + 365380211 - ((2 * v320) & 0x2B8E84E6)) ^ *(_DWORD *)&v220[4 * (v201 ^ 0x75)];
  HIDWORD(v229) = v321 ^ 0xA9B;
  LODWORD(v229) = v321 ^ 0xDB440000;
  int v323 = (((unsigned __int16)(v201 ^ 0xF075) >> 8)
        + 1115978535
        - (((v201 ^ 0xB54AF075) >> 7) & 0x4E)) ^ (v229 >> 12) ^ *(_DWORD *)&v219[4
                                                                                             * (((unsigned __int16)(v201 ^ 0xF075) >> 8) ^ 0x6D)];
  unsigned int v324 = (v323 + 1403600629 - ((2 * v323) & 0xA7527DEA)) ^ *(_DWORD *)&v231[4 * (HIBYTE(v319) ^ 0xED)];
  LODWORD(v201) = *(_DWORD *)&v231[4 * (BYTE3(v201) ^ 0x91)];
  int v325 = *(_DWORD *)&v231[4 * (BYTE3(v204) ^ 0x3E)];
  LODWORD(v231) = *(_DWORD *)&v231[4 * (HIBYTE(v318) ^ 0x81)];
  v319 ^= 0xC9AF1D8F;
  int v326 = *(_DWORD *)&v220[4 * v319];
  LODWORD(v204) = *(_DWORD *)&v220[4 * (v204 ^ 0x9A)];
  int v327 = *(_DWORD *)&v220[4 * (v318 ^ 0xE9)];
  LODWORD(v220) = BYTE1(v319);
  int v328 = (v319 >> 7) & 0x4E;
  unsigned int v329 = *(_DWORD *)&v226[4 * BYTE2(v319)];
  LODWORD(v226) = *(_DWORD *)&v226[4 * BYTE2(v315)];
  HIDWORD(v229) = v226 ^ 0xA9B;
  LODWORD(v229) = v226 ^ 0xDB440000;
  LODWORD(v226) = (v318 >> 8) ^ 0x8185BC;
  int v330 = BYTE1(v318) ^ 0xBC;
  int v331 = *(_DWORD *)&v219[4 * (v330 ^ 0x6D)];
  int v332 = v330 + 1115978535 - ((2 * v226) & 0x4E);
  LODWORD(v226) = HIDWORD(v418) ^ v204 ^ v216 ^ (v220 + 1115978535 - v328) ^ v201 ^ *(_DWORD *)&v219[4 * (v220 ^ 0x6D)];
  LODWORD(v220) = v418 ^ v332 ^ v325 ^ v331 ^ v326 ^ (v229 >> 12);
  unsigned int v333 = HIDWORD(v413) ^ v327 ^ (v324 + 365380211 - ((2 * v324) & 0x2B8E84E6));
  LODWORD(v231) = v413 ^ v231 ^ (v329 >> 12) ^ (v329 << 20) ^ (v322
                                                                           + 1403600629
                                                                           - ((2 * v322) & 0xA7527DEA));
  uint64_t v334 = (uint64_t)*(&off_1F2C91B30 + (int)v391);
  LODWORD(v216) = *(_DWORD *)(v334 + 4 * (BYTE1(v226) ^ 0xDu));
  LODWORD(v201) = *(_DWORD *)(v334 + 4 * (BYTE1(v231) ^ 0x97u));
  LODWORD(v204) = *(_DWORD *)(v334 + 4 * ((unsigned __int16)(v333 ^ 0x6F07) >> 8));
  int v335 = *(_DWORD *)(v334 + 4 * (BYTE1(v220) ^ 0xA9u));
  int v336 = *(_DWORD *)(v53 - 128);
  uint64_t v337 = (uint64_t)*(&off_1F2C91B30 + v336 - 1108);
  int v338 = (char *)*(&off_1F2C91B30 + SHIDWORD(v385)) - 8;
  uint64_t v339 = *(unsigned int *)&v338[4 * (HIBYTE(v333) ^ 0xEF)];
  int v340 = *(_DWORD *)&v338[4 * ((v220 >> 24) ^ 0x4B)];
  LODWORD(v201) = *(_DWORD *)(v337 + 4 * (v333 ^ 7u)) ^ v201 ^ 0x92720ADA;
  int v341 = *(_DWORD *)&v338[4 * ((v231 >> 24) ^ 0x34)];
  LODWORD(v33_Block_object_dispose(&STACK[0x368], 8) = *(_DWORD *)&v338[4 * ((v226 >> 24) ^ 0x77)];
  uint64_t v342 = (char *)*(&off_1F2C91B30 + v336 - 1005) - 4;
  int v343 = *(_DWORD *)&v342[4 * (BYTE2(v231) ^ 1)];
  int v344 = *(_DWORD *)&v342[4 * (BYTE2(v333) ^ 0x2A)];
  int v345 = *(_DWORD *)&v342[4 * (BYTE2(v220) ^ 0x4F)];
  LODWORD(v201) = v340 ^ (v201 - 2139054021 - ((2 * v201) & 0x1014076));
  int v346 = *(_DWORD *)(v337 + 4 * (v226 ^ 0x5Au));
  LODWORD(v220) = *(_DWORD *)(v337 + 4 * (v220 ^ 0x51u));
  LODWORD(v201) = *(_DWORD *)&v342[4 * (BYTE2(v226) ^ 0xE5)] ^ (v201 - 977050521 - ((2 * v201) & 0x8B86C8CE));
  int v347 = *(_DWORD *)(v337 + 4 * (v231 ^ 0x9Bu));
  uint64_t v348 = *(_DWORD *)(v53 - 148) ^ HIDWORD(v504) ^ (v201 - ((2 * v201) & 0xC8C07C4) - 2042231838);
  uint64_t v349 = (char *)*(&off_1F2C91B30 + v336 - 1047) - 4;
  *(unsigned char *)(*(void *)(v53 - 120) + _Block_object_dispose(&STACK[0x368], 8) = v349[BYTE3(v348) ^ 0xD7] ^ 0x7E;
  LODWORD(v201) = ((v343 ^ 0xAC8B4E59 ^ v204) - 2139054021 - ((2 * (v343 ^ 0xAC8B4E59 ^ v204)) & 0x1014076)) ^ v338;
  LODWORD(v201) = (v201 - 80076572 - ((2 * v201) & 0xF67441C8)) ^ v220;
  LODWORD(v201) = *(_DWORD *)(v53 - 144) ^ v505 ^ (v201 - ((2 * v201) & 0x17D36CD8) + 199865964);
  uint64_t v350 = (uint64_t)*(&off_1F2C91B30 + SHIDWORD(v379));
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 240)) = (*(unsigned char *)(v350 + (v201 ^ 0xC7))
                                                               + 109) ^ 0x5F;
  uint64_t v351 = (uint64_t)*(&off_1F2C91B30 + (int)v379);
  LODWORD(v204) = *(unsigned __int8 *)(v351 + (BYTE1(v201) ^ 0x13));
  HIDWORD(v229) = v204 ^ 0x24;
  LODWORD(v229) = v204 << 24;
  *(unsigned char *)(*(void *)(v53 - 120) + 6) = (v229 >> 30) ^ 0x40;
  LODWORD(v204) = ((v344 ^ v346 ^ 0x3EF94483)
                 - 2139054021
                 - 2 * ((v344 ^ v346 ^ 0x3EF94483) & 0x80A03F ^ (v344 ^ v346) & 4)) ^ v341;
  LODWORD(v204) = (v204 - ((2 * v204) & 0xD290547C) + 1766337086) ^ v335;
  int v352 = *(_DWORD *)(v53 - 140);
  LODWORD(v33_Block_object_dispose(&STACK[0x368], 8) = v352 ^ HIDWORD(v505) ^ (v204 - ((2 * v204) & 0x10D09A56) - 2006430421);
  LODWORD(v204) = *(unsigned __int8 *)(v351
                                     + ((unsigned __int16)(v352 ^ WORD2(v505) ^ (v204
                                                                                                - ((2 * v204) & 0x9A56)
                                                                                                + 19755)) >> 8));
  HIDWORD(v229) = v204 ^ 0x24;
  LODWORD(v229) = v204 << 24;
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 224)) = (v229 >> 30) ^ 0x7E;
  int v353 = (char *)*(&off_1F2C91B30 + v336 - 1038) - 4;
  *(unsigned char *)(*(void *)(v53 - 120) + 9) = v353[BYTE2(v348) ^ 0xFBLL] ^ 0xE6;
  LODWORD(v204) = ((v339 ^ v216 ^ 0xE9C88A05)
                 - 977050521
                 - 2 * ((v339 ^ v216 ^ 0xE9C88A05) & 0x45C36477 ^ (v339 ^ v216) & 0x10)) ^ v345;
  LODWORD(v204) = (v204 - 80076572 - ((2 * v204) & 0xF67441C8)) ^ v347;
  LODWORD(v204) = *(_DWORD *)(v53 - 136) ^ v506 ^ (v204 - ((2 * v204) & 0xE17D672A) + 1891546005);
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 192)) = v353[BYTE2(v204) ^ 0xB8] ^ 0x35;
  *(unsigned char *)(*(void *)(v53 - 120) + 11) = (*(unsigned char *)(v350 + (v348 ^ 0x1BLL)) + 109) ^ 0x7D;
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 248)) = v353[BYTE2(v201) ^ 3] ^ 0x4B;
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 200)) = v349[BYTE3(v201) ^ 0x6DLL] ^ 0x86;
  LODWORD(v201) = *(unsigned __int8 *)(v351 + (BYTE1(v348) ^ 0x92));
  HIDWORD(v229) = v201 ^ 0x24;
  LODWORD(v229) = v201 << 24;
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 168)) = (v229 >> 30) ^ 0xD2;
  uint64_t v354 = *(void *)(v53 - 208);
  *(unsigned char *)(*(void *)(v53 - 120) + v354) = v349[(v338 >> 24) ^ 0x53] ^ 0x6A;
  *(unsigned char *)(*(void *)(v53 - 120) + *(void *)(v53 - 184)) = (*(unsigned char *)(v350 + (v338 ^ 0x95))
                                                               + 109) ^ 0xAF;
  LOBYTE(v201) = *(unsigned char *)(v350 + (v204 ^ 0x64));
  uint64_t v355 = *(void *)(v53 - 120);
  *(unsigned char *)(v355 + *(void *)(v53 - 256)) = (v201 + 109) ^ 0x27;
  *(unsigned char *)(v355 + *(void *)(v53 - 176)) = v349[BYTE3(v204) ^ 0x6ELL] ^ 0xFC;
  LODWORD(v201) = *(unsigned __int8 *)(v351 + (BYTE1(v204) ^ 0x1FLL));
  HIDWORD(v229) = v201 ^ 0x24;
  LODWORD(v229) = v201 << 24;
  *(unsigned char *)(v355 + *(void *)(v53 - 216)) = (v229 >> 30) ^ 0x58;
  *(unsigned char *)(v355 + *(void *)(v53 - 160)) = v353[BYTE2(v338) ^ 0xC8] ^ 0x64;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, void, uint64_t))(a50 + 8 * ((3388 * (((v354 + 274310083 - 2 * ((v354 + 16) & *(_DWORD *)(v53 - 228))) ^ 0x1059A3B3u) < HIDWORD(v408))) ^ (v336 + 331))))(75, v351, v339, v348, 36, v353, 365380211, 2807201258, a3, a4, v357, v358, v359, v360, v362, v363, v365, v368, v371,
           v374,
           a15,
           a16,
           a17,
           v379,
           v385,
           v391,
           v397,
           v403,
           v408,
           v413,
           v418,
           v424,
           v429,
           v436,
           v442,
           v447,
           v452,
           v458,
           v461,
           v466,
           v471,
           v476,
           v481,
           v486,
           v490,
           v495,
           v498,
           v500,
           v502,
           a44,
           v503,
           v504,
           v505,
           v506,
           v507,
           a50);
}

uint64_t sub_1D4A97AF0@<X0>(int a1@<W8>)
{
  int v4 = a1 - 481;
  unsigned __int8 v5 = a1 - 96;
  *(_DWORD *)(v3 - 200) = a1 - 481 + 628203409 * ((v1 & 0x94278B86 | ~(v1 | 0x94278B86)) ^ 0xE950784A) - 231789424;
  (*(void (**)(uint64_t))(v2 + 8 * (a1 + 1223)))(v3 - 200);
  BOOL v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 1683)))(336) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v5 ^ v6) & 1) * (v4 - 394)) ^ v4)))();
}

uint64_t sub_1D4A97BB4(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 628203409 * (a1 ^ 0x82880C33);
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL);
  int v4 = v2 - 1740488377;
  BOOL v3 = v2 - 1740488377 < 0;
  int v5 = 1740488377 - v2;
  if (!v3) {
    int v5 = v4;
  }
  BOOL v6 = (v5 ^ (v1 + 2012201885)) - 2012202734 + ((2 * v5) & 0xEFDF8DDA) < 0x7FFFFFFF;
  return (*(uint64_t (**)(void))((char *)*(&off_1F2C91B30 + ((v1 - 665) ^ 0x2F))
                              + 8
                              * (((v6 ^ (v1 + 111)) & 1 | (8 * ((v6 ^ (v1 + 111)) & 1))) ^ (v1 - 665))
                              - 4))();
}

uint64_t sub_1D4A97C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x530] = 0;
  LODWORD(STACK[0x494]) = 2079419384;
  STACK[0x5C0] = 0;
  LODWORD(STACK[0x614]) = 2079419384;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 8 * (int)((((*(unsigned char *)(a63 - 0x6225D3E880D3092CLL) - **(unsigned char **)(v70 + 8 * (a70 ^ 0x1AA))) != 185) * (((((a70 ^ 0x15E) + 1890349754) & 0x8F538DFB) + 293) ^ 0x258)) | a70 ^ 0x15E)))(2955882367, 1073, 1228181076, 3066786037, 1106, 175, 1890349754, 2404617723);
}

uint64_t sub_1D4A97D74()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((455 * (((v1 == 0x73B3F2CB) ^ (v0 - 32)) & 1)) ^ v0)))();
}

uint64_t sub_1D4A97DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v28 - 112) = v24
                         + 1374699841 * ((((v28 - 128) | 0xC69197A2) - ((v28 - 128) & 0xC69197A2)) ^ 0xAB658FAB)
                         + 331;
  *(void *)(v28 - 12_Block_object_dispose(&STACK[0x368], 8) = a24;
  *(void *)(v28 - 120) = v27;
  (*(void (**)(uint64_t))(v25 + 8 * (v24 + 796)))(v28 - 128);
  *(void *)(v28 - 120) = a24;
  *(_DWORD *)(v28 - 112) = v24
                         + 1178560073 * (((~(v28 - 128) & 0xBE04A698) - (~(v28 - 128) | 0xBE04A699)) ^ 0x490DEFB)
                         + 245;
  *(void *)(v28 - 104) = v26;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 ^ 0xD3F)))(v28 - 128);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((25
                                              * (((121 * (v24 ^ 0xC2)) ^ (*(_DWORD *)(v28 - 128) > 0x4B4B6B4Bu)) & 1)) ^ v24)))(v29);
}

void sub_1D4A97F04()
{
}

uint64_t sub_1D4A97F20()
{
  *(void *)(v6 - 12_Block_object_dispose(&STACK[0x368], 8) = v4;
  *(void *)(v6 - 112) = v0;
  *(_DWORD *)(v6 - 120) = v5
                        + ((((v6 - 136) | 0x64467E2E) - (v6 - 136) + ((v6 - 136) & 0x9BB981D0)) ^ 0xDED2064C) * v3
                        + 1021;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v5 ^ 0xA37)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((*(_DWORD *)(v6 - 136) > v1) * (v5 - 698)) ^ v5)))(v7);
}

uint64_t sub_1D4A97FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, unsigned int a15)
{
  BOOL v19 = a15 > v18;
  if (v19 == v16 - 876582880 < -1175863809) {
    BOOL v19 = v16 - 876582880 < a13;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 8 * ((v19 * (v15 - 917)) ^ v15)))(a1, 0x30530205DD195846, 3709425734);
}

void sub_1D4A98050()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  if (*(void *)(v0 + 24)) {
    BOOL v2 = *(void *)(v0 + 8) == 0x38223619C320A2BLL;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  int v1 = *(_DWORD *)(v0 + 16) ^ (1755732067 * ((2 * (v0 & 0x47DE7202) - v0 - 1205760515) ^ 0x66E73026));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4A98180(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 32) = a4;
  return result;
}

void sub_1D4A98188(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a4 = v7;
  a5 = v6;
  a3 = v7;
  a6 = v8
     + 69
     + 1225351577 * ((2 * (&a3 & 0x418703F0) - &a3 - 1099367411) ^ 0x9DE2241B)
     + 803;
  (*(void (**)(uint64_t *))(a1 + 8 * ((v8 + 69) ^ 0x8E6)))(&a3);
  JUMPOUT(0x1D4A981F0);
}

uint64_t sub_1D4A98218()
{
  int v5 = 535753261 * ((1097295581 - ((v4 - 144) | 0x416766DD) + ((v4 - 144) | 0xBE989922)) ^ 0xB46C970D);
  *(void *)(v4 - 136) = v7;
  *(void *)(v4 - 120) = v3;
  *(_DWORD *)(v4 - 12_Block_object_dispose(&STACK[0x368], 8) = v0 - v5 - 424;
  *(_DWORD *)(v4 - 144) = (((v0 - 23) ^ 0xE0C66BF0) + v9) ^ v5;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 582)))(v4 - 144);
  *(_DWORD *)(v8 - 0x3BC303ACCBD26FD1) = v9;
  *(_DWORD *)(v1 + 64) = 526347143;
  return result;
}

uint64_t sub_1D4A98308(uint64_t a1, int a2, int a3, int a4, int a5)
{
  int v10 = a3 - 32;
  uint64_t v11 = v7 + v10 + (a2 ^ (v6 + 2159));
  long long v12 = *(_OWORD *)(v5 + v11 - 15);
  long long v13 = *(_OWORD *)(v5 + v11 - 31);
  uint64_t v14 = a1 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 + v10 != 32) * a5) ^ a4)))();
}

uint64_t sub_1D4A98310(int a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((62 * (*(_DWORD *)(a3 + 48 * (v6 + a1)) == v3 + v4 + ((v4 + 398) ^ 0xE1B179AD) - 148)) ^ v4)))();
}

uint64_t sub_1D4A98364@<X0>(int a1@<W1>, uint64_t a2@<X6>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return sub_1D4A8B64C(a17, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1D4A9836C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v2;
  unsigned int v6 = v3 - 535753261 * ((&v5 & 0xF4826C3B | ~(&v5 | 0xF4826C3B)) ^ 0x1899DEB) - 1396;
  uint64_t v7 = a1;
  uint64_t v8 = v2;
  return (*(uint64_t (**)(uint64_t *))(v1 + 8 * (v3 ^ 0xE46u)))(&v5);
}

void sub_1D4A983D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61)
{
  *(_DWORD *)(v61 - 136) = a58 ^ 0xAB8CE8B9;
  *(_DWORD *)(v61 - 14_Block_object_dispose(&STACK[0x368], 8) = a60 ^ 0x3D1F624D;
  *(_DWORD *)(v61 - 140) = a61 ^ 0xFC7E84D3;
  *(_DWORD *)(v61 - 144) = a59 ^ 0xF2B52970;
  JUMPOUT(0x1D4A95DB8);
}

uint64_t sub_1D4A98424@<X0>(int a1@<W2>, void *a2@<X4>, int a3@<W5>, int a4@<W7>, unsigned int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unint64_t v27 = (*(_DWORD *)(a19 + 4 * (a4 + 1 + a1)) ^ a5)
      + HIDWORD(v21)
      + v22 * (unint64_t)(*(_DWORD *)(*a2 + 4 * (a4 + 1 + a1)) ^ a5);
  *(_DWORD *)(a19 + 4 * (a4 + a1)) = v27 + a5 - ((v27 << (((v19 - 101) | 0xF0) + 17)) & v20);
  BOOL v29 = a4 + v24 > v25 || a4 + v24 < a3;
  return (*(uint64_t (**)(void))(v23 + 8 * ((v29 * v26) ^ v19)))();
}

uint64_t sub_1D4A9849C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, int a13, unsigned int a14)
{
  a12 = &STACK[0x4313E3591B4C279];
  a14 = 1410 - 460628867 * ((2 * (&a12 & 0x44AF77C8) - &a12 - 1152350160) ^ 0xF7C60A4D);
  uint64_t v16 = (*(uint64_t (**)(unint64_t **))(v15 + 18432))(&a12);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((27 * (a13 != v14)) ^ 0x2A4)))(v16);
}

void sub_1D4A98564()
{
}

uint64_t sub_1D4A9858C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a5 + (v9 + v6)) = *(void *)(v8 + (v9 + v6));
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v10 + 8 * (((a3 == 0) * v7) ^ a6)))(a1, a2, (a3 + 8));
}

uint64_t sub_1D4A985BC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v17 = (a1 - 950) | 0x80;
  int v18 = ((2 * ((v16 - 144) & 0x2A0F26A8) - (v16 - 144) - 705636015) ^ 0x6F64A133) * v9;
  *(_DWORD *)(v16 - 140) = a1 - v18 + 426;
  *(_DWORD *)(v16 - 136) = v10 + v18 + 316210499 + v17;
  *(void *)(v16 - 12_Block_object_dispose(&STACK[0x368], 8) = v14;
  *(void *)(v16 - 120) = v15;
  (*(void (**)(uint64_t))(v11 + 8 * (a1 ^ 0xAAE)))(v16 - 144);
  *(void *)(v16 - 144) = v12;
  *(void *)(v16 - 136) = a8;
  *(_DWORD *)(v16 - 12_Block_object_dispose(&STACK[0x368], 8) = (v17 + 767) ^ (628203409
                                        * ((((2 * (v16 - 144)) | 0x6174B83A) - (v16 - 144) + 1329964003) ^ 0x3232502E));
  (*(void (**)(uint64_t))(v11 + 8 * (v17 ^ 0x990)))(v16 - 144);
  *(void *)(v16 - 144) = a7;
  *(void *)(v16 - 136) = a8;
  *(void *)(v16 - 112) = v15;
  *(void *)(v16 - 104) = v12;
  *(_DWORD *)(v16 - 12_Block_object_dispose(&STACK[0x368], 8) = v17
                         + 1374699841 * (((~(v16 - 144) & 0xF8095E0E) - (~(v16 - 144) | 0xF8095E0F)) ^ 0x95FD4606)
                         + 185;
  *(void *)(v16 - 120) = a9;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v11 + 8 * (v17 ^ 0x98D)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v11
                                            + 8
                                            * (int)(((((v13 == 0) ^ v17) & 1)
                                                   * ((v17 + 999158654) & 0xC4720FC7 ^ 0x3D4)) ^ v17)))(v19);
}

uint64_t sub_1D4A98760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * (((6 * (v5 ^ (v5 + 1481) ^ 0x5B9) - 640)
                                                                                  * (v4 >= 0xD2EEDF4F)) | (v5 - 40560549))))(a1, a2, a3, a4, 40561189);
}

uint64_t sub_1D4A987BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,char a58)
{
  unsigned int v59 = HIDWORD(a23) - ((2 * HIDWORD(a23) - 1893048290) & 0xAE1A84BE) - 1633521042;
  uint64_t v60 = (2 * (a5 - 938)) ^ 0x31Eu;
  BOOL v62 = (((((_BYTE)v59 << (a58 ^ 0xCC)) & ((a5 + 86) ^ 0x7A) ^ 0x9E) + (v59 ^ 0x10) + 1) & 0xF) != ((3 * ((a5 - 938) ^ 0xB) - 1271) ^ v60)
     || ((v59 << (a58 ^ 0xCC)) & ((a5 - 938) ^ 0xFDFFFF7A) ^ 0xAC1A849E) + (v59 ^ 0x29F2BD10) == -16777393;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((1004 * v62) ^ ((int)a5 - 938))))(a1, a2, a3, a4, a5, a6, v60, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1D4A98888@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(unint64_t *)((char *)&STACK[0x2AC] + a2 + a1) = 0xEBEBEBEBEBEBEBEBLL;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1768 * (((2 * v3) ^ 0x23ALL) == (v2 & 0x38))) ^ v3)))();
}

uint64_t sub_1D4A988DC(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((457 * (a1 ^ 0x4A4) - 721418222) | 0xA130003) ^ (v3 - 771)) * (v1 - v2 == 96090376)) ^ a1)))();
}

uint64_t sub_1D4A98948()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((15 * ((v1 >> v0) & 1)) ^ v2)))();
}

uint64_t sub_1D4A9896C()
{
  *(void *)(v3 + (v1 | v5)) = v7;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 == 0) * v6) ^ v0)))();
}

uint64_t sub_1D4A98998(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v8 = v5 + 35659791;
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a4 ^ 0x303) - 1334) * (a3 - v4 - v6 + v8 < 0xF)) ^ a4)))();
}

uint64_t sub_1D4A98A14@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1473 * (a2 + 1 == v3 + 64)) | a1)))();
}

void sub_1D4A98ACC()
{
}

uint64_t sub_1D4A98B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v37 = v36 + v32;
  (*(void (**)(uint64_t))(v33 + 8 * (v37 + 1780)))(a32);
  int v38 = (*(uint64_t (**)(void))(v33 + 8 * (v37 + 1761)))();
  int v39 = v38 - 43663526 - ((v37 - 87327589) & (2 * v38));
  *uint64_t v35 = v39;
  unsigned int v40 = ((~v39 >> 30) - 43663526 - 4 * (v39 >= 0)) ^ v39;
  v35[1] = v34 + 1812433253 * v40 - ((-670100790 * v40 + 2) & ((v37 + 13) ^ 0xFACB7C92));
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * (v37 + 13)))(*(void *)(v33 + 8 * (v37 + 13)), 4251303770, 1812433253, v41, v42, v43, v44, v45, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_1D4A98C20@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v6 = v4 + a1;
  *(unsigned char *)(v2 + v6) = v3;
  return (*(uint64_t (**)(void))(v5 + 8 * (a2 ^ (2 * ((unint64_t)(v6 + 1) < 0x40)))))();
}

void sub_1D4A98C50()
{
}

uint64_t sub_1D4A98C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v45 = v41 + 1;
  *(unsigned char *)(a6 + (v45 - 1584496196)) = *(unsigned char *)(a41 + v44 - 1652740644)
                                                    + ~((v42 - 57) & (2 * *(unsigned char *)(a41 + v44 - 1652740644)))
                                                    - 20;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8 * ((4018 * ((a4 + v45 + 1) < 0x40)) ^ v42)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1D4A98C84(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (a3 ^ ((v6 + 1 != v5 + 60) << 6))))(v3);
}

uint64_t sub_1D4A98D34@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W6>, int a5@<W8>)
{
  uint64_t v12 = (unsigned int *)(v10 + 4 * v6);
  uint64_t v13 = v6 + 1;
  int v14 = *(_DWORD *)(v10 + 4 * v13);
  unsigned int v15 = ((a5 ^ 0x200) * v7) ^ (a3 - 670) ^ ((v14 & 0x7FFFFFFE | v5 & 0x80000000) >> 1);
  unsigned int *v12 = v12[397] ^ a4 ^ *(_DWORD *)(v8 + 4 * (v14 & 1)) ^ (v15 + a1 - (a2 & (2 * v15)));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v13 == 227) * v11) ^ a5)))();
}

void sub_1D4A98DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a3 + v3) = 1740488377;
}

void sub_1D4A98E40(int a1@<W8>)
{
  unsigned int v6 = ((2 * ((v1 & 0xBFFFFFFF ^ 0x5F501A07) & 0x1F501A27 ^ (v1 | 0xFFFFFFDF))) ^ 0x80000041)
     + (v1 & 0xBFFFFFFF ^ 0x5F501A07)
     + (v2 ^ 0x5F501BB0);
  uint64_t v7 = *(void *)(v4 - 0x2C138C8FAF40FC22);
  int v8 = a1 + *v3;
  *(unsigned char *)(v7 + (v8 + 526)) = (HIBYTE(v6) ^ 0x5F) - ((2 * (HIBYTE(v6) ^ 0x5F)) & 0xD6) - 21;
  *(unsigned char *)(v7 + (v8 + 527)) = (BYTE2(v6) ^ 0x50) - 2 * ((BYTE2(v6) ^ 0x50) & 0xEF ^ BYTE2(v6) & 4) - 21;
  *(unsigned char *)(v7 + (v8 + 528)) = (BYTE1(v6) ^ 0x1A) - 2 * ((BYTE1(v6) ^ 0x1A) & 0xEF ^ BYTE1(v6) & 4) - 21;
  *(unsigned char *)(v7 + (v8 + 529)) = v6 ^ 0xEC;
  uint64_t v9 = *(void *)(v4 - 0x2C138C8FAF40FC22);
  unsigned int v10 = v5 - ((2 * v5 - 966763500) & 0xA7400726) - 1227869795;
  unsigned int v11 = ((2 * (a1 + *v3 + 530)) & 0xF670DFF6) + ((a1 + *v3 + 530) ^ 0xFB386FFB) + 80187397;
  *(unsigned char *)(v9 + v11) = (HIBYTE(v10) ^ 0xD3) - ((2 * (HIBYTE(v10) ^ 0xD3)) & 0xD6) - 21;
  *(unsigned char *)(v9 + v11 + 1) = (BYTE2(v10) ^ 0xA0) - 2 * ((BYTE2(v10) ^ 0xA0) & 0xEF ^ BYTE2(v10) & 4) - 21;
  *(unsigned char *)(v9 + v11 + 2) = (BYTE1(v10) ^ 3)
                           - 2
                           * ((BYTE1(v10) ^ 3) & 0xEF ^ ((unsigned __int16)(v5 - ((2 * v5 + 23572) & 0x726) + 12701) >> 8) & 4)
                           - 21;
  *(unsigned char *)(v9 + v11 + 3) = (v5 - ((2 * v5 + 20) & 0x26) - 99) ^ 0x78;
  _DWORD *v3 = v12;
}

uint64_t sub_1D4A99008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v11 + a8) & v9 ^ v10) * (v12 < v13)) ^ v11)))();
}

void sub_1D4A99030(_DWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  *((unsigned char *)a1 + v6 + 4) = 100;
  *((unsigned char *)a1 + (v5 + v7) + 4) = 88;
  *a1 = v5 + 5;
  uint64_t v8 = a1 + 1;
  *((unsigned char *)v8 + (v7 + 1 + v5)) = 83;
  *((unsigned char *)v8 + ((v4 + a4 + 1755927158 - 431) ^ 0x4D179FD7u) + v5) = 62;
  *((unsigned char *)v8 + (v5 - 633261838)) = 76;
  *((unsigned char *)v8 + (v5 - 633261837)) = 15;
  JUMPOUT(0x1D4AA5494);
}

uint64_t sub_1D4A9905C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * ((19
                                * (a22 - a6 - v22 + (((a4 - 1676) | 0x120u) ^ 0xDD4291686CF0D7BCLL) >= ((a4 - 311) ^ 0x577uLL))) ^ a4)))();
}

uint64_t sub_1D4A990BC@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  BOOL v27 = v23 == a1 || a23 - v24 != (a2 ^ 0x2685B3F);
  return (*(uint64_t (**)(void))(v25 + 8 * ((v27 * (a2 - 1094)) ^ a2)))();
}

void sub_1D4A99100()
{
  _DWORD *v0 = -526372770;
}

uint64_t sub_1D4A9910C@<X0>(int a1@<W2>, int a2@<W4>, uint64_t a3@<X8>)
{
  BOOL v3 = (a2 & 0x40000000) == (((a1 + 453) | 0xA) ^ 0x43A);
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((2 * (((a1 - 38) ^ v3) & 1)) & 0xEF | (16
                                                                                        * (((a1 - 38) ^ v3) & 1))) ^ a1)))();
}

uint64_t sub_1D4A991C4(uint64_t a1, int a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a3 + v6) & v7 ^ a2) + v5 - 1 >= 0) * a4) ^ a3)))();
}

uint64_t sub_1D4A991CC@<X0>(uint64_t a1@<X1>, char a2@<W3>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(unsigned char *)(v5 + a1 + a3 - 1) = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v5 + a1) < 0x40) * v4) ^ a4)))();
}

uint64_t sub_1D4A991F8(unsigned int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((4014
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v2) == v2
                                                                               + 2 * (((a1 - 1892) | 0x128) ^ 0x1C3)
                                                                               - 254)) ^ a1)))();
}

uint64_t sub_1D4A99258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39
                                                              + 8
                                                              * ((((v40 + 70636353) > 7) * v38) ^ ((a38 + 749) | 0xD))))(0x36F545AA472A6C26, a2, 0x1952C41DDE3D9B5BLL);
}

uint64_t sub_1D4A992FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8
                                                             * (((((v7 < 0x20) ^ (a7 - 44)) & 1)
                                                               * (((a7 - 1099) | 0x2CD) - 749)) ^ a7)))(a1, a2, 0);
}

uint64_t sub_1D4A9933C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int *a34)
{
  if (v34 >= v35) {
    int v37 = *a34 + 1;
  }
  else {
    int v37 = v36;
  }
  *a34 = v37;
  return sub_1D4AAF810();
}

uint64_t sub_1D4A99348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  unsigned int v34 = v30 - 1048539666;
  unsigned int v35 = (_DWORD *)(a26 + 24 * v34);
  HIDWORD(a2_Block_object_dispose(&STACK[0x368], 8) = v35[4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((2682 * (((*v35 + (int)a1) & 0xFFFFFFFFFFFFFFDLL) == 0)) ^ v31)))(a1, a2, a3, a4, a5, a6, *(void *)(v32 + 24 * v34 + 16), a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_1D4A993FC(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v12 = v9 + v8;
  int v13 = v12 + v10;
  if ((v12 + v10) <= 0x40) {
    int v13 = a4;
  }
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((98 * (((3 * (((v7 - 1391) | 0x509) ^ 0x5D0)) ^ a7) - v12 >= a7 + a2 + a3 + v13 + 719)) ^ v7)))();
}

uint64_t sub_1D4A9945C@<X0>(uint64_t a1@<X1>, char a2@<W3>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(unsigned char *)(v5 + a1 + a3 - 1) = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v5 + a1) < 0x38) * a4) ^ v4)))();
}

uint64_t sub_1D4A9948C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2
                                                              + 8
                                                              * (((((v4 - 181) ^ 0x14B) - 1276) * (v3 == 2078035507)) ^ (v4 + 620))))(a1, a2, 2095721610);
}

uint64_t sub_1D4A994CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9
                                                     + 8
                                                     * (int)((((a5 + ((v8 + 2138173196) & 0xABEF2FB7) - 760) ^ 0x1E7)
                                                            * (v6 == v7)) ^ v8)))(3299963166, a6);
}

uint64_t sub_1D4A99520@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34,uint64_t a35,char a36,uint64_t a37,char a38)
{
  int v41 = &a38 + v38;
  uint64_t v57 = &a28 + v38;
  uint64_t v56 = &a30 + v38;
  int v55 = &a34 + v38;
  uint64_t v54 = &a36 + v38;
  uint64_t v53 = &a32 + v38;
  uint64_t v52 = &a24 + v38;
  int v51 = &a22 + v38;
  uint64_t v42 = *a1;
  uint64_t v43 = a1[5];
  uint64_t v62 = a1[4];
  int v44 = a3 - 51;
  *(void *)(v40 - 104) = *(void *)(*a1 - 0x3F8123127DDA1A5CLL);
  *(void *)(v40 - 12_Block_object_dispose(&STACK[0x368], 8) = &a38 + v38;
  *(void *)(v40 - 120) = v43;
  *(_DWORD *)(v40 - 112) = a3
                         - 51
                         + 1224239923 * (((v40 - 144) & 0x3BB37F04 | ~((v40 - 144) | 0x3BB37F04)) ^ 0x36FF7D2C);
  unsigned __int8 v58 = a3 + 96;
  int v45 = a3 ^ 0x7E0;
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = a4;
  uint64_t v60 = 8 * (a3 ^ 0xC41);
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 136) = v43;
  *(void *)(v40 - 12_Block_object_dispose(&STACK[0x368], 8) = v51;
  *(_DWORD *)(v40 - 144) = (a3 - 965) ^ (1225351577
                                       * ((2 * ((v40 - 144) & 0x7323D130) - (v40 - 144) + 215756489) ^ 0x2F46F6DF));
  *(void *)(v40 - 120) = v41;
  *(void *)(v40 - 112) = v42;
  (*(void (**)(uint64_t))(v39 + 8 * (a3 ^ 0xDB4)))(v40 - 144);
  *(void *)(v40 - 104) = v41;
  *(_DWORD *)(v40 - 112) = v44 + 1224239923 * ((v40 + 460286470 - 2 * ((v40 - 144) & 0x1B6F6A96)) ^ 0xE9DC9741);
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 12_Block_object_dispose(&STACK[0x368], 8) = v57;
  *(void *)(v40 - 120) = v43;
  uint64_t v59 = 8 * (a3 + 1087);
  (*(void (**)(uint64_t))(v39 + v59))(v40 - 144);
  *(void *)(v40 - 104) = v57;
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 12_Block_object_dispose(&STACK[0x368], 8) = v56;
  *(void *)(v40 - 120) = v43;
  *(_DWORD *)(v40 - 112) = v44 + 1224239923 * (((v40 - 144) & 0xFA6987D9 | ~((v40 - 144) | 0xFA6987D9)) ^ 0xF72585F1);
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 104) = v56;
  *(_DWORD *)(v40 - 112) = v44
                         + 1224239923
                         * ((((v40 - 144) | 0x89678349) - (v40 - 144) + ((v40 - 144) & 0x76987CB0)) ^ 0x7BD47E9E);
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 12_Block_object_dispose(&STACK[0x368], 8) = v55;
  *(void *)(v40 - 120) = v43;
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 104) = v55;
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 12_Block_object_dispose(&STACK[0x368], 8) = v54;
  *(void *)(v40 - 120) = v43;
  *(_DWORD *)(v40 - 112) = v44
                         + 1224239923
                         * ((((v40 - 144) | 0xA3105CC4) - (v40 - 144) + ((v40 - 144) & 0x5CEFA338)) ^ 0x51A3A113);
  (*(void (**)(uint64_t))(v39 + v59))(v40 - 144);
  *(void *)(v40 - 104) = v54;
  *(_DWORD *)(v40 - 112) = v44 + 1224239923 * (((v40 - 144) & 0x9B210A30 | ~((v40 - 144) | 0x9B210A30)) ^ 0x966D0818);
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 12_Block_object_dispose(&STACK[0x368], 8) = v53;
  *(void *)(v40 - 120) = v43;
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 104) = v53;
  *(_DWORD *)(v40 - 112) = v44 + 1224239923 * ((((v40 - 144) | 0x95C539CC) - ((v40 - 144) & 0x95C539CC)) ^ 0x6776C41B);
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 12_Block_object_dispose(&STACK[0x368], 8) = v52;
  *(void *)(v40 - 120) = v43;
  (*(void (**)(uint64_t))(v39 + v59))(v40 - 144);
  *(void *)(v40 - 144) = v42;
  *(void *)(v40 - 136) = v51;
  *(void *)(v40 - 104) = v52;
  *(void *)(v40 - 12_Block_object_dispose(&STACK[0x368], 8) = v51;
  *(void *)(v40 - 120) = v43;
  *(_DWORD *)(v40 - 112) = v44 + 1224239923 * (((v40 - 144) & 0x8BC4ED51 | ~((v40 - 144) | 0x8BC4ED51)) ^ 0x8688EF79);
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  uint64_t v47 = *(void *)(v42 - 0x3F8123127DDA1A64);
  *(_DWORD *)(v40 - 12_Block_object_dispose(&STACK[0x368], 8) = a3
                         + 1374699841
                         * ((-1520606683 - ((v40 - 144) | 0xA55D6225) + ((v40 - 144) | 0x5AA29DDA)) ^ 0x375685D3)
                         + 613;
  *(void *)(v40 - 144) = v47;
  *(void *)(v40 - 136) = a2;
  (*(void (**)(uint64_t))(v39 + 8 * (a3 ^ 0xC5E)))(v40 - 144);
  *(void *)(v40 - 136) = v62;
  *(_DWORD *)(v40 - 144) = a3 + 235795823 * ((v40 - 862440077 - 2 * ((v40 - 144) & 0xCC983603)) ^ 0x58357F5A) - 680;
  uint64_t v48 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (a3 + 1096)))(v40 - 144);
  BOOL v49 = *(_DWORD *)(v40 - 140) - 128426105 < (v45 ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v39 + 8
                                                  * ((2 * ((v58 ^ v49) & 1)) & 0xF7 | (8 * ((v58 ^ v49) & 1)) | a3)))(v48);
}

uint64_t sub_1D4A99A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v19 = a16 + v18;
  if (a16 + v18 < 0) {
    int v19 = -v19;
  }
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)((2001
                                                   * ((int)((v19 ^ (((v17 + 823657511) & 0xCEE7FBFE) + 2143157247))
                                                          + ((2 * v19) & 0xFF7BFF72)
                                                          - 402669824
                                                          + ((((v17 + 823657511) & 0xCEE7FBFE ^ 0x2E) + 126) ^ (v18 + 1037))) >= 0)) ^ (v17 + 823657511) & 0xCEE7FBFE)))(3699319000);
}

uint64_t sub_1D4A99AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(*(void *)(v8 + 96) + 156_Block_object_dispose(&STACK[0x368], 8) = 0;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((2187
                                * (*(_DWORD *)(v8 + 72) == (((v6 - 2004599620) | 0xA0861) ^ 0x7BED6BFC)
                                                         + ((v6 - 812) ^ (a6 - 162)))) ^ (v6 - 812))))();
}

uint64_t sub_1D4A99B5C@<X0>(unsigned int a1@<W0>, unsigned int a2@<W1>, char a3@<W3>, int a4@<W4>, uint64_t a5@<X5>, int a6@<W8>)
{
  *(unsigned char *)(a5 + (v6 + v9)) = *(unsigned char *)(v11 + (v7 + a4))
                                           + (a3 | ~(2 * *(unsigned char *)(v11 + (v7 + a4))))
                                           - 20;
  unsigned int v12 = v7 + 1 + v8;
  int v13 = (a2 < a1) ^ (v12 < a1);
  BOOL v14 = v12 < a2;
  if (v13) {
    BOOL v14 = a2 < a1;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (((4 * !v14) | (8 * !v14)) ^ a6)))();
}

void sub_1D4A99BD4(int a1@<W8>)
{
  BOOL v7 = *(_DWORD *)(*v4 + 4 * (a1 + v3)) == v2;
  *int v6 = (a1 - v7 + ((41 * (v5 ^ 0x156)) ^ (v3 + 1180))) * v1 - 674146141 * (a1 - v7) + 623588800;
}

uint64_t sub_1D4A99C64(int a1)
{
  BOOL v4 = (v2 + v1 + a1 - 2144135688 + a1 + 511) > 7;
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * v4) | (16 * v4)) ^ a1)))();
}

uint64_t sub_1D4A99CC8@<X0>(uint64_t a1@<X1>, char a2@<W3>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  unint64_t v6 = a4 + a1;
  *(unsigned char *)(v6 + a3 - 1) = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v6 < 0x38) * (((v4 - 1245) | 0x220) + 780)) ^ ((v4 - 1245) | 0x220))))();
}

uint64_t sub_1D4A99D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((54 * (a14 + v15 - (unint64_t)((v16 ^ v17 ^ 0xCF3A063E) + v14) < 0x10)) ^ v16)))();
}

uint64_t sub_1D4A99D48()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 273) ^ (v2 - 244)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1D4A99D70(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v1 == v2) ^ (3 * (a1 ^ 0xFA))) & 1) * ((a1 ^ 0x79) - 1000)) | a1)))();
}

uint64_t sub_1D4A99DAC(int a1, uint64_t a2, int a3, int a4, int a5)
{
  *(_DWORD *)(a2 + (v7 - a4)) = *(_DWORD *)(v5 + (v7 - a4));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 + a4 - 893 == v6) * a5) ^ a3)))();
}

uint64_t sub_1D4A99DDC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v2 + v5 + v4 + ((a1 - 282) | 0xA1u)) = *(unsigned char *)(a2 + v5 + v4 + ((a1 - 282) | 0xA1u));
  return (*(uint64_t (**)(void))(v6 + 8 * ((27 * (v5 - 1 == v3)) ^ a1)))();
}

uint64_t sub_1D4A99E1C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((((a1 + 1921752872) & 0x8D74672F ^ 0x765) * (v1 == v2)) ^ a1)))();
}

void sub_1D4A99E60()
{
}

uint64_t sub_1D4A99E70(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((((v2 + 1936343082) & 0x8C95BFFB) + 88) ^ 0x43C)
                                     * (*(_DWORD *)(v1 + 4 * v3) != a1)) ^ v2)))();
}

uint64_t sub_1D4A99EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * (int)((v23 - 1753) ^ (246 * ((a22 >> 29) & 1)))))(a1, 246, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1D4A99EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 + v12) = v14;
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((((v10 & 0xFFFFFFFFFFFFFFF8) == 8) * (((v11 - 1792806640) & 0x6ADC0DBA) - 1146)) ^ v11)))();
}

uint64_t sub_1D4A99F30()
{
  return (*(uint64_t (**)(void))(*(void *)(v1 + 8 * (v2 ^ 0x2F))
                              - 4
                              + 8
                              * (((((v0 - 1) < 0x7FFFFFFF) ^ (v2 + 8)) & 1 | (8 * ((((v0 - 1) < 0x7FFFFFFF) ^ (v2 + 8)) & 1))) ^ v2)))();
}

uint64_t sub_1D4A99F78(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8
                                                     * ((1306 * (((206 * (v2 ^ 0x791) + 1527) ^ 0x7B3) == 32)) ^ (206 * (v2 ^ 0x791)))))(a1, 1196459421);
}

uint64_t sub_1D4A9A000(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((23
                                * (((v3 + 53) ^ (a1 == ((v3 + 386) ^ (unint64_t)(v2 - 942)))) & 1)) ^ (v3 + 287))))();
}

void sub_1D4A9A044()
{
}

uint64_t sub_1D4A9A078@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 8) + (a4 + a5)) = (a3 ^ v7) >> v8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((4055 * ((a2 ^ 0xFFFFF86C) + a4 == (a2 ^ v6))) ^ a2)))();
}

uint64_t sub_1D4A9A0C4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((61 * (a2 + (a7 ^ 0xA53u) - 1019 + v7 - 1125 < 0xFFFFFFF0)) ^ a7)))();
}

uint64_t sub_1D4A9A100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067 * ((&a11 & 0xC1A12D46 | ~(&a11 | 0xC1A12D46)) ^ 0xE0986F62);
  a14 = &STACK[0x5E89E940DF8E90E9];
  a13 = (v17 + 13) ^ v19;
  a11 = &STACK[0x3F70C0CAD4126774];
  a12 = v18;
  a15 = v19 ^ 0x5203B642;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 + 1964)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)(((*(_DWORD *)(v18 - 0x2C138C8FAF40FC0ALL) == ((v17 - 851080612) & 0x32BA77BF ^ (v15 - 863)))
                                                   * (((v17 - 851080612) ^ 0xCD458F7F) - 239)) ^ v17)))(v20);
}

uint64_t sub_1D4A9A204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36
                                                                       + 8
                                                                       * ((486
                                                                         * (v37 >= 971 * (a36 & 0x4776F96 ^ 0x794u)
                                                                                 - 290456665)) ^ (v38 + 40561906))))(a1, a2, a3, 4251303770);
}

uint64_t sub_1D4A9A268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45,int a46,int a47)
{
  return (*(uint64_t (**)(void))(v47
                              + 8
                              * ((1011
                                * (((a11 - ((2 * a45) & 0x175931A0) - 111520934) ^ ((a47 ^ 0x5D7) + 1950) ^ 0x7516E0C5)
                                 - 1591616
                                 + ((2 * (a11 - ((2 * a45) & 0x175931A0) - 111520934)) & 0xFD74FFB8 ^ 0x155031A0) == 2124560028)) ^ a47)))();
}

uint64_t sub_1D4A9A334(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((961 * (((v5 == a1) ^ (((a5 + 25) & 0xC7) - 124)) & 1)) ^ a5)))();
}

uint64_t sub_1D4A9A384(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  *(void *)(a2 + (a4 - v6 + 679)) = *(void *)(a1 + (a4 - v6 + 679));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 + v6 - 652 == v7) * a5) ^ a3)))();
}

uint64_t sub_1D4A9A3B8()
{
  return 4294925273;
}

uint64_t sub_1D4A9A3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((2794 * (v6 + 1 == v8 + 24)) ^ a5)))(v5);
}

uint64_t sub_1D4A9A48C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((3050 * (v0 == (((v1 ^ 0x36B) + 1824) ^ 0x7D0))) ^ v1)))();
}

void sub_1D4A9A4C0()
{
}

void sub_1D4A9A4D8()
{
}

uint64_t sub_1D4A9A4E4(unsigned int a1, int a2, int8x8_t a3, uint64_t a4, int a5, uint64_t a6)
{
  *(int8x8_t *)(a6 + a1) = veor_s8(*(int8x8_t *)(v7 + a1), a3);
  return (*(uint64_t (**)(void, void))(v8 + 8 * (((a2 == 0) * v6) ^ a5)))(a1 - 8, (a2 + 8));
}

uint64_t sub_1D4A9A518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v15 = (a6 + v9);
  *(unsigned char *)(v13 + v15) ^= *(unsigned char *)(v11 + (v15 & 0xF)) ^ *(unsigned char *)(v10 + (v15 & 0xF)) ^ *(unsigned char *)(v12 + (v15 & 0xF)) ^ (5 * (v15 & 0xF)) ^ 0xEB;
  return (*(uint64_t (**)(void))(v14 + 8 * ((1932 * (a6 - 1 == v8)) ^ (a8 - 533))))();
}

void sub_1D4A9A578()
{
}

uint64_t sub_1D4A9A584()
{
  int v4 = ((v2 + 1547) ^ 0xA6E63665) + v1;
  BOOL v5 = v4 < -1901858982;
  BOOL v6 = v3 - 1494863711 < v4;
  if (v3 - 1494863711 < -1901858982 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((v6 * ((v2 ^ 0x5CF) - 1286)) ^ v2)))();
}

uint64_t sub_1D4A9A6DC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,char a37)
{
  if (a34 == 2) {
    return (*(uint64_t (**)(void))(v37 + 8
  }
                                      * ((82 * (LODWORD(STACK[0x348]) != ((a2 + 1567) ^ 0x4F9B0DAC))) ^ (a2 + 988))))();
  if (a34 == 1) {
    return (*(uint64_t (**)(void))(v37
  }
                                + 8 * ((116 * (LODWORD(STACK[0x348]) == ((a2 + 988) ^ 0x4F9B0FE9))) ^ (a2 + 1515))))();
  uint64_t v39 = a2 ^ 0x3D6u;
  unint64_t v40 = ((unint64_t)&a37 ^ 0x7FADF775ADFBECC0 ^ v39)
      + ((2 * (void)&a37) & 0xFF5BEEEB5BF7DE50)
      - 0x4809200420402A59;
  LOBYTE(STACK[0x347]) = (v40 + (a2 ^ 0xD6) + 88) * ((v40 + 48) ^ 0xBA);
  return (*(uint64_t (**)(void))(v37 + 8 * (int)v39))();
}

uint64_t sub_1D4A9A840@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W6>, int a4@<W7>, uint64_t a5@<X8>)
{
  return (*(uint64_t (**)(void))(a5 + 8 * (((v5 + (((v6 ^ a1) * a2) ^ a3) == 32) * a4) ^ v6)))();
}

uint64_t sub_1D4A9A8A0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((59 * (v2 != v1)) ^ v0)))();
}

uint64_t sub_1D4A9A8E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                                           + 8
                                           * ((((((((a4 - 42) | 0x205) - 1380670640) & 0x524B5FF4) - 919) ^ (((a4 - 42) | 0x205) - 51))
                                             * (v4 < 0x20)) ^ ((a4 - 42) | 0x205))))(0);
}

uint64_t sub_1D4A9A930@<X0>(int a1@<W8>)
{
  if (v1 == ((a1 + 1593310891) & 0xF34CFFEF ^ 0x4D1B94AE)) {
    int v3 = -526372775;
  }
  else {
    int v3 = v1;
  }
  return v3 ^ v2;
}

uint64_t sub_1D4A9A9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  return (*(uint64_t (**)(void))(v13 + 8 * ((((v11 - 285) ^ 0xB55) * (a11 < v12)) ^ v11)))();
}

uint64_t sub_1D4A9AA20(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((7 * (a8 + ((a7 + 274) ^ (a3 + 283) ^ ((a7 - 466) | 0x3C9u)) > 0xFFFFFFEF)) ^ a7)))();
}

uint64_t sub_1D4A9AA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (int)(((*(_DWORD *)(v13 + 72) == a3) * ((v10 ^ 0x210 ^ (a6 + 1478) ^ (v12 - 205)) + (v10 ^ 0x210) - 1321)) ^ v10 ^ 0x210)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1D4A9AAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8
                                   * (((((v7 == a5) ^ (v5 + 1)) & 1) * ((v5 - 486) ^ 0x3B4)) | v5)))();
}

uint64_t sub_1D4A9AAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a15 = v17 - 460628867 * (((&a13 | 0x8BDC4BD5) + (~&a13 | 0x7423B42A)) ^ 0xC74AC9A9) + 684;
  a13 = &STACK[0x4313E3591B4C281];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 ^ 0xBD6)))(&a13);
  BOOL v19 = a14 == v15 + v17 + v17 + 885 - 2337;
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * (((16 * v19) | (32 * v19)) ^ v17)))(v18);
}

void sub_1D4A9AB90(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x72E93EC0CCAF5742) = (*(_DWORD *)(a1 - 0x72E93EC0CCAF5742) ^ 0x43B50625)
                                         + 1135937061
                                         - ((2 * (*(_DWORD *)(a1 - 0x72E93EC0CCAF5742) ^ 0x43B50625) + 2) & 0x876A0C4A)
                                         + 1;
}

uint64_t sub_1D4A9ABD8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((((((((v2 - 520898750) & 0x1F0C47DF) - 1713) & (2 * (v3 + 3)))
                                                 + ((v3 + 3) & 0x7F ^ 0x7D7D6D7)) & 0x7D7D7FC) == 131585752)
                                              * ((v2 + 37) ^ 0xD1C)) ^ (v2 - 1523))))(a1);
}

uint64_t sub_1D4A9AC50@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  unint64_t v4 = ((57 * (v2 ^ 0x2ECu)) ^ (unint64_t)(a1 + 156)) + a2;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 - a2 + 1335000053 > 7) * (v2 ^ 0x2FF)) ^ v2)))();
}

uint64_t sub_1D4A9ACB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v15 = a3 + v14 + v13 - a7 + ((a8 + 979) ^ (v11 - 1315));
  *(void *)(v9 - 7 + v15) = *(void *)(v10 - 7 + v15);
  return (*(uint64_t (**)(void))(v8 + 8 * ((1724 * (a7 - (v12 & 0xFFFFFFF8) == -8)) ^ a8)))();
}

uint64_t sub_1D4A9AD10@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + v4 + ((v3 - 1693) | 0x190)) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((3818 * ((a1 & 0x38) == 8)) ^ v3)))();
}

uint64_t sub_1D4A9AD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 120) = v15
                         + 1374699841 * ((2 * ((v17 - 136) & 0xB04ADC0) - (v17 - 136) + 1962627641) ^ 0x190F4A30)
                         + 922;
  *(void *)(v17 - 136) = a14;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x368], 8) = v16;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0xB6B)))(v17 - 136);
  int v18 = 1759421093 * (((v17 - 136) & 0x61219070 | ~((v17 - 136) | 0x61219070)) ^ 0x2DA3DFDB);
  *(_DWORD *)(v17 - 120) = v15 - v18 + 249;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x368], 8) = a13;
  *(_DWORD *)(v17 - 136) = 427795158 - v18;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1436)))(v17 - 136);
  *(_DWORD *)(v17 - 120) = v15
                         + 1178560073
                         * ((((v17 - 136) | 0xECCF7CEC) - (v17 - 136) + ((v17 - 136) & 0x13308310)) ^ 0x565B048E)
                         + 836;
  *(void *)(v17 - 112) = a13;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x368], 8) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 1392)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v17 - 136) > (v15 ^ 0x71u) + 1263232858)
                                              * (((v15 - 828) | 0x40B) - 1059)) ^ (v15 - 743))))(v19);
}

uint64_t sub_1D4A9AD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(void))(v12 + 8 * (((a12 - 1875884972 < (v13 ^ 0xCE3u) + 2147481426) * (v13 ^ 0x45F)) ^ v13)))();
}

uint64_t sub_1D4A9AFF8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v0 & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v1) == v1)
                                * ((v2 - 199) ^ 0x63B)) ^ v2)))();
}

uint64_t sub_1D4A9B034@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((517 * (a2 == v4)) ^ (v3 + a1 + 780))))();
}

uint64_t sub_1D4A9B06C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, uint64_t a6@<X6>, int a7@<W8>)
{
  int v17 = (a5 - 210) ^ (v16 + 16) ^ a1;
  int v18 = (v9 ^ v16)
      + a7
      + *(_DWORD *)(a3 + 4 * (a6 + v13))
      + (((v7 ^ 0x242EA431 | v17) + v16 - (v14 & (2 * (v7 ^ 0x242EA431 | v17)))) ^ v8)
      + (*(_DWORD *)(v11 + 4 * (*(unsigned char *)(a2 + a6 + v13) - 72)) ^ v10);
  unsigned int v19 = (v18 + v16 - (v14 & (2 * v18))) ^ v16;
  unsigned int v20 = ((v19 << (*(unsigned char *)(a4 + a6 + v13) - 76)) | (v19 >> (76 - *(unsigned char *)(a4 + a6 + v13)))) + v17;
  return (*(uint64_t (**)(void))(v12 + 8 * ((391 * (a6 + 1 == v15 + 64)) ^ a5)))(v20 + v16 - (v14 & (2 * v20)));
}

uint64_t sub_1D4A9B13C@<X0>(int a1@<W5>, int a2@<W8>)
{
  *(unsigned char *)(v7 - 220 + (a2 + v2)) = *(unsigned char *)(v3 + v5 - 463788147)
                                                 + ~(((v4 + 84) ^ 0xFD) & (2 * *(unsigned char *)(v3 + v5 - 463788147)))
                                                 - 20;
  return (*(uint64_t (**)(void))(v6 + 8 * ((4049 * ((a1 + a2 + 1) > 0x3F)) ^ v4)))();
}

uint64_t sub_1D4A9B1A4@<X0>(int a1@<W8>)
{
  v7.i64[0] = 0xD6D6D6D6D6D6D6D6;
  v7.i64[1] = 0xD6D6D6D6D6D6D6D6;
  v8.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v8.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  *(int8x16_t *)(v4 + (a1 + v1)) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v7)), v8);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1557 * (((v2 + 1011635654) & 0xC3B3AB7F ^ 0x367) == ((v3 + 1) & 0x1FFFFFFF0))) ^ v2)))();
}

uint64_t sub_1D4A9B224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v30 = 77 * (v24 ^ 0x212);
  *(_DWORD *)(v29 - 144) = (v24 - 289) ^ (1225351577
                                        * (((((v29 - 144) | 0xB1DAADBC) ^ 0xFFFFFFFE) - (~(v29 - 144) | 0x4E255243)) ^ 0x6DBF8A55));
  *(void *)(v29 - 120) = a24;
  *(void *)(v29 - 112) = v25;
  *(void *)(v29 - 136) = a23;
  *(void *)(v29 - 12_Block_object_dispose(&STACK[0x368], 8) = a24;
  (*(void (**)(uint64_t))(v27 + 8 * (v24 + 1776)))(v29 - 144);
  *(void *)(v29 - 104) = a24;
  *(_DWORD *)(v29 - 112) = v24
                         + 1224239923 * ((((v29 - 144) | 0x8AC8CA03) + (~(v29 - 144) | 0x753735FC)) ^ 0x787B37D5)
                         + 625;
  *(void *)(v29 - 144) = v25;
  *(void *)(v29 - 136) = a17;
  *(void *)(v29 - 12_Block_object_dispose(&STACK[0x368], 8) = a24;
  *(void *)(v29 - 120) = a23;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v24 + 1763)))(v29 - 144);
  BOOL v32 = v28 + v26 + v30 - 233 + 2 >= (((v30 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((2 * v32) | (8 * v32) | (v30 + 974))))(v31);
}

uint64_t sub_1D4A9B350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v8
                                                                     + 8
                                                                     * (((((a6 - 1597) | 0x560) ^ 0x5AC)
                                                                       * ((v6 & 0x18) == 0)) ^ a6)))(a1, a2, (v7 - a2), (a6 - 801));
}

uint64_t sub_1D4A9B388@<X0>(unint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, uint64_t a4@<X8>)
{
  *(unsigned char *)(v6 - 220 + a4 + a2) = -21;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((118 * (a4 + 1 + a2 < ((133 * (v4 ^ 0xACu) - a3) ^ a1))) ^ (133 * (v4 ^ 0xAC)))))();
}

uint64_t sub_1D4A9B3D8@<X0>(unsigned int a1@<W0>, int a2@<W3>, int a3@<W4>, void *a4@<X6>, int a5@<W7>, unsigned int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unint64_t v36 = (*(_DWORD *)(a26 + 4 * (a2 + 1 + a3)) ^ v26)
      + HIDWORD(v27)
      + a1 * (unint64_t)(*(_DWORD *)(*a4 + 4 * (a2 + 1 + a3)) ^ v26);
  *(_DWORD *)(a26 + 4 * (a2 + a3)) = v36 + ((7 * (v35 ^ v31)) ^ (v26 + 323)) - (v28 & (2 * v36));
  if (a6 > v30 != a2 + v32 < v33) {
    BOOL v37 = a6 > v30;
  }
  else {
    BOOL v37 = a2 + v32 < a5;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * ((v37 * v34) ^ v35)))();
}

uint64_t sub_1D4A9B468()
{
  uint64_t v11 = &STACK[0x8DE5192BDC530E2];
  uint64_t v12 = v6;
  unsigned int v9 = (v2 + 600) ^ (1374699841 * (&v9 ^ 0x6DF41809));
  (*(void (**)(unsigned int *))(v1 + 8 * (v2 + 1931)))(&v9);
  uint64_t v11 = v6;
  unsigned int v9 = (v2 + 1085) ^ (1755732067 * (((&v9 | 0x68EC43F5) - (&v9 & 0x68EC43F5)) ^ 0xB62AFE2E));
  (*(void (**)(unsigned int *))(v1 + 8 * (v2 ^ 0x9B0)))(&v9);
  if (v12 == v0 + v2 + 958 - 1301) {
    int v4 = v7;
  }
  else {
    int v4 = (int)v12;
  }
  unsigned int v10 = v2 + ((&v9 & 0x85FB557C | ~(&v9 | 0x85FB557C)) ^ 0x70F0A4AC) * v3 + 1000;
  uint64_t v11 = v6;
  (*(void (**)(unsigned int *))(v1 + 8 * (v2 + 1950)))(&v9);
  unsigned int v10 = v2 + 958 + ((2 * (&v9 & 0x2037FE78) - &v9 + 1606943108) ^ 0x553C0FAB) * v3 + 42;
  uint64_t v11 = v8;
  (*(void (**)(unsigned int *))(v1 + 8 * (v2 + 1950)))(&v9);
  return v4 ^ v0;
}

void sub_1D4A9B624()
{
  if (v0 == 2082287839) {
    int v1 = 526347143;
  }
  else {
    int v1 = -526372769;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_1D4A9B688()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 + 210) | 0x140) + ((v2 - 1428) | 0x21) - 1969) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1D4A9B6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v15 + 8 * ((2819 * (a14 == (v14 ^ (v16 + 1060)) - 1155802003)) ^ v14)))();
}

uint64_t sub_1D4A9B710@<X0>(int a1@<W8>)
{
  unint64_t v4 = 1755732067 * ((v3 - 160 - 2 * ((v3 - 160) & 0x46E7E25FCDDF0095) + 0x46E7E25FCDDF0095) ^ 0x9B4C45601319BD4ELL);
  *(_DWORD *)(v3 - 120) = (a1 - 1689051565) ^ (1755732067
                                             * ((v3 - 160 - 2 * ((v3 - 160) & 0xCDDF0095) - 841023339) ^ 0x1319BD4E));
  *(_DWORD *)(v3 - 156) = (1755732067 * ((v3 - 160 - 2 * ((v3 - 160) & 0xCDDF0095) - 841023339) ^ 0x1319BD4E)) ^ (a1 - 1072502696) ^ 0x41;
  *(_DWORD *)(v3 - 152) = ((a1 - 1072502696) ^ 0x38)
                        + 1755732067 * ((v3 - 160 - 2 * ((v3 - 160) & 0xCDDF0095) - 841023339) ^ 0x1319BD4E);
  *(void *)(v3 - 136) = v4 + 1777359037;
  *(void *)(v3 - 12_Block_object_dispose(&STACK[0x368], 8) = v4 + v1;
  *(_DWORD *)(v3 - 14_Block_object_dispose(&STACK[0x368], 8) = 1755732067 * ((v3 - 160 - 2 * ((v3 - 160) & 0xCDDF0095) - 841023339) ^ 0x1319BD4E);
  *(_DWORD *)(v3 - 144) = a1
                        - 1072502696
                        - 1755732067 * ((v3 - 160 - 2 * ((v3 - 160) & 0xCDDF0095) - 841023339) ^ 0x1319BD4E);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 2282)))(v3 - 160);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 160)))(v5);
}

uint64_t sub_1D4A9B7D4(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 - a1 < (unint64_t)(a3 ^ (a2 + 1409)) - 1831442953)
                                * (((a3 - 887) | 0x45B) - 1137)) ^ a3)))();
}

uint64_t sub_1D4A9B81C@<X0>(int a1@<W2>, int a2@<W5>, uint64_t a3@<X8>)
{
  unsigned int v9 = v7 + v8 + a1;
  uint64_t v10 = v4 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = a3 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((4 * ((((v6 & 0xFFFFFFE0) == 32) ^ (v5 + a2 - 1)) & 1)) & 0xF7 | (8 * ((((v6 & 0xFFFFFFE0) == 32) ^ (v5 + a2 - 1)) & 1)) | (v5 + a2 + 1928))))();
}

void sub_1D4A9B8C8()
{
}

uint64_t sub_1D4A9B8D0(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((222 * (v1 + 1 != v3 + 44)) ^ a1)))();
}

uint64_t sub_1D4A9B98C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v3 ^ 0xFFFBCCB6) + 1970274266 + (v1 & 0xFFF7996C) - 1969998993 < v0 + 2147483309)
                                * (107 * ((v0 + 615) ^ 0x3B4) - 1269)) ^ (v0 + 615))))();
}

uint64_t sub_1D4A9BA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20,uint64_t a21,unsigned int a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29)
{
  unint64_t v34 = (*a29 ^ (v29 + ((v33 + 292) | 2) - 834))
      + a22 * (unint64_t)(*(_DWORD *)(*a23 + 4 * (v30 - 456288104)) ^ v29);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31
                                                                                                  + 8 * (v33 ^ (91 * (v32 <= a20)))))(v34 + 0x25362CBF80472F72 - ((2 * v34) & 0x4A6C597F008E5EE4), 0x25362CBF80472F72, 555533943, a4, a5, 40020363);
}

void sub_1D4A9BA3C()
{
}

void sub_1D4A9BA54()
{
}

uint64_t sub_1D4A9BA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21)
{
  a21 = (v21 - 59) ^ (1225351577
                    * ((2 * (&a17 & 0x486B7D40) - &a17 + 932479672) ^ 0x140E5AAE));
  a18 = a12;
  a19 = v24;
  a20 = v26;
  (*(void (**)(unsigned int *))(v25 + 8 * (v21 + 1939)))(&a17);
  a17 = (v21 + 601) ^ ((((&a17 | 0x5275727) + (~&a17 | 0xFAD8A8D8)) ^ 0x68D34F2F) * v23);
  a18 = v22;
  a19 = a12;
  (*(void (**)(unsigned int *))(v25 + 8 * (v21 ^ 0x9B4)))(&a17);
  a18 = a12;
  a17 = (v21 + 1086) ^ (1755732067
                      * (((&a17 | 0xA2C01B31) - &a17 + (&a17 & 0x5D3FE4C8)) ^ 0x7C06A6EA));
  uint64_t v27 = (*(uint64_t (**)(unsigned int *))(v25 + 8 * (v21 + 1937)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((a19 == 526347143) * (((v21 + 286) | 0x109) ^ 0x46A)) ^ v21)))(v27);
}

uint64_t sub_1D4A9BBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, unsigned int a19, unsigned int a20,unsigned int a21,int a22)
{
  unsigned int v24 = 460628867 * ((&a17 & 0x289C561E | ~(&a17 | 0x289C561E)) ^ 0x9BF52B9C);
  a21 = 1646191814 - v24;
  a19 = v24 + 551621528;
  a20 = v24 + v22 - 2024874199;
  a17 = &STACK[0x38223619C320A43];
  a18 = a13;
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v23 + 8 * (v22 ^ 0xCA7u)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8 * (((a22 == (v22 ^ 0x6F3) + 526346456) * ((v22 - 491) ^ 0x2AA)) ^ v22)))(v25);
}

uint64_t sub_1D4A9BCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,char a45)
{
  *(&a45 + v46) = *(unsigned char *)(v49 + (v45 + a5))
                - ((*(unsigned char *)(v49 + (v45 + a5)) << (((v50 - 94) | 1) - 28)) & a7)
                - 21;
  return (*(uint64_t (**)(void))(v48 + 8 * (((v46 == 63) * v47) ^ v50)))();
}

uint64_t sub_1D4A9BCF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((a5 + 234883343) | 0x800084C0) ^ (v5 + 1903))
                                     * ((unint64_t)(v6 - a1) < 0x20)) ^ a5)))();
}

uint64_t sub_1D4A9BD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(_DWORD *)(v25 - 112) = v20 + (((~(v25 - 128) & 0x98E6A2A) - (~(v25 - 128) | 0x98E6A2B)) ^ 0xB31A1249) * v24 - 309;
  *(void *)(v25 - 120) = a20;
  *(void *)(v25 - 104) = v22;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v20 + 247)))(v25 - 128);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((4062
                                              * (((v20 + 40) ^ (*(_DWORD *)(v25 - 128) > (v23 + 1))) & 1)) ^ v20)))(v26);
}

uint64_t sub_1D4A9BDD4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1498 * (v0 < ((v2 - 657) ^ 0x8DuLL))) ^ v2)))();
}

uint64_t sub_1D4A9BE00()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 758251909) ^ 0x7F76F865) + ((v2 - 758251909) & 0x7F76FF7F)) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_1D4A9BE54@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v3)) = *(unsigned char *)(v2 + (v7 + v3));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v7 - 1 == v4) * v5) ^ v6)))(0);
}

void sub_1D4A9BE84()
{
}

uint64_t sub_1D4A9BE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  *(unsigned char *)(v11 + (v14 + v12)) = *(unsigned char *)(a11 + (v14 + v12)) ^ (v17 - 125);
  return (*(uint64_t (**)(void))(v16 + 8 * (((v14 + 1 + v12 < (a10 ^ v15)) * v13) | v17)))();
}

uint64_t sub_1D4A9BED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((((v7 == a6) ^ (v8 - 70)) & 1)
                                     * ((v8 + 1081474687) & 0xBF89FFF3 ^ 0x30E)) ^ v8)))();
}

void sub_1D4A9BF30()
{
}

uint64_t sub_1D4A9BF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v24 = v21 + v20 + 111643486;
  int v25 = v24 + 1460;
  if ((v24 + 1460) <= 0x40) {
    int v25 = 64;
  }
  BOOL v26 = __CFADD__(v24 + a20 + 690, v22 + v25);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((v26 * ((a20 + 293) ^ 0x43B)) ^ (a20 - 477))))(1922694427);
}

uint64_t sub_1D4A9BFC0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v22 = ((v21 - 144) ^ 0x6DF41809) * v20;
  *(_DWORD *)(v21 - 144) = (v19 + 867) ^ v22;
  *(_DWORD *)(v21 - 12_Block_object_dispose(&STACK[0x368], 8) = a1 - v22;
  *(void *)(v21 - 136) = a18;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v19 ^ 0xAA1)))(v21 - 144);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((15 * (*(_DWORD *)(v21 - 140) == (((v19 ^ 0x2A5) + 1832) ^ 0x5F2AE6F))) ^ v19)))(v23);
}

uint64_t sub_1D4A9C050()
{
  *(_DWORD *)(v6 - 112) = v0 + ((((v6 - 128) | 0x5D71B4EB) + (~(v6 - 128) | 0xA28E4B14)) ^ 0xE7E5CC88) * v5 + 1081;
  *(void *)(v6 - 104) = v2;
  *(void *)(v6 - 120) = v3;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1637)))(v6 - 128);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((63 * (*(_DWORD *)(v6 - 128) > ((v0 + 686) ^ (v4 + 1076)) + (v0 ^ 0xF5u))) ^ v0)))(v7);
}

uint64_t sub_1D4A9C0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v27 = 1759421093 * ((2 * ((v26 - 128) & 0x68D4BEE0) - (v26 - 128) - 1758772961) ^ 0x2456F14B);
  *(_DWORD *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = v23 - 1109 - v27 + v25 - 771999233;
  *(_DWORD *)(v26 - 112) = v23 - v27 - 942;
  *(void *)(v26 - 120) = v22;
  (*(void (**)(uint64_t))(v20 + 8 * (v23 + 245)))(v26 - 128);
  *(void *)(v26 - 120) = a20;
  *(_DWORD *)(v26 - 112) = v23
                         - 1109
                         + (((((v26 - 128) ^ 0x10209C20 | 0x2ACF2346) ^ 0xFFFFFFFE)
                           - ((v26 - 128) ^ 0x20452046 | 0xD530DCB9)) ^ 0x750E3BFB)
                         * v24
                         + 754;
  *(void *)(v26 - 104) = v21;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v23 + 201)))(v26 - 128);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((2008
                                              * (*(_DWORD *)(v26 - 128) + ((v23 - 964) ^ 0xB4B491FD ^ (v23 - 1789)) < 0xFA79F799)) ^ (v23 - 1109))))(v28);
}

uint64_t sub_1D4A9C22C()
{
  BOOL v5 = v1 - 1930219689 > 410274944 || v1 - 1930219689 < (int)((v0 ^ 0x98744C44) + v3);
  return (*(uint64_t (**)(void))(v2 + 8 * ((v5 * (((v0 + 1360) | 0x42) + 10)) ^ v0)))();
}

uint64_t sub_1D4A9C280@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((a1 + a1 - 296 - 594) * (v2 == v1)) ^ a1)))(3299963166);
}

uint64_t sub_1D4A9C2B8()
{
  return v0();
}

uint64_t sub_1D4A9C2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44)
{
  int v46 = (2 * v44) ^ 0xD46;
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v45 + 8 * (v44 + 1015)))(16);
  uint64_t v48 = (uint64_t *)*(&off_1F2C91B30 + v44 - 1206);
  *uint64_t v48 = v47;
  (*(void (**)(void))(v45 + 8 * (v44 + 946)))();
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v45 + 8 * (v44 + 1015)))(8);
  uint64_t v50 = (uint64_t)*(&off_1F2C91B30 + (v44 ^ 0x524));
  *(void *)(v50 - 4) = v49;
  *(void *)uint64_t v49 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v51 = (uint64_t)*(&off_1F2C91B30 + v44 - 1136);
  *(_DWORD *)(v51 + 4) = 0;
  int v68 = *(&off_1F2C91B30 + v44 - 1261);
  _DWORD *v68 = 0;
  uint64_t v52 = (unsigned char *)*v48;
  uint64_t v53 = *(unsigned char **)(v50 - 4);
  v53[6] = 26;
  *uint64_t v52 = -77;
  v53[4] = -34;
  uint64_t v54 = *(&off_1F2C91B30 + (v44 ^ 0x5AB));
  v54[2] = 94;
  v54[9] = 113;
  *(unsigned char *)(v51 + 29) = 68;
  v54[14] = -87;
  v52[4] = 73;
  v54[4] = 0;
  *(unsigned char *)(v51 + 2_Block_object_dispose(&STACK[0x368], 8) = 83;
  *(unsigned char *)*(&off_1F2C91B30 + (v44 ^ 0x53C)) = -113;
  v52[1] = 80;
  *(unsigned char *)*(&off_1F2C91B30 + (v44 ^ 0x595)) = 88;
  v54[13] = 62;
  *(unsigned char *)*(&off_1F2C91B30 + (v44 ^ 0x536)) = 1;
  void v52[2] = -44;
  *(unsigned char *)*(&off_1F2C91B30 + (v44 ^ 0x580)) = 51;
  v53[2] = 80;
  v52[6] = -11;
  *(unsigned char *)*(&off_1F2C91B30 + (v44 ^ 0x541)) = 25;
  *(unsigned char *)*(&off_1F2C91B30 + v44 - 1255) = 39;
  v52[5] = -22;
  v52[3] = -15;
  v54[8] = 119;
  *(unsigned char *)(v51 + 14) = -52;
  v54[15] = -44;
  int v55 = *(&off_1F2C91B30 + v44 - 1140);
  *int v55 = -109;
  v52[13] = 99;
  uint64_t v56 = *(&off_1F2C91B30 + (v44 ^ 0x52A));
  *uint64_t v56 = 119;
  v53[7] = -80;
  *uint64_t v53 = -122;
  v52[8] = 34;
  v54[7] = -106;
  v52[11] = 54;
  *(unsigned char *)(v51 + 15) = 3;
  v53[5] = -5;
  v53[1] = 73;
  *(unsigned char *)(v51 + 16) = -36;
  *(unsigned char *)uint64_t v51 = 23;
  v53[3] = 59;
  uint64_t v57 = (unsigned char *)*v48;
  v57[10] = 45;
  v57[15] = -87;
  *uint64_t v54 = 53;
  v54[11] = -99;
  *(unsigned char *)(v51 + 25) = -92;
  v54[5] = -56;
  v54[10] = 49;
  *(unsigned char *)(v51 + 27) = 52;
  *(v54 - 4) = -32;
  unsigned __int8 v58 = v54 - 4;
  *(_WORD *)(v51 + 10) = -3774;
  *(unsigned char *)(v51 + 22) = -121;
  *(unsigned char *)(v51 + 20) = 77;
  *(unsigned char *)(v51 + 26) = 113;
  v57[9] = 31;
  v54[16] = 30;
  v54[6] = -31;
  *(unsigned char *)(v51 + _Block_object_dispose(&STACK[0x368], 8) = -85;
  v54[1] = -56;
  v58[2] = 120;
  *(unsigned char *)(v51 + 2) = 34;
  v54[12] = 28;
  v57[12] = -86;
  v58[3] = -29;
  v57[7] = -90;
  v57[14] = -33;
  *(unsigned char *)(v51 + 3) = -98;
  *(unsigned char *)(v51 + 21) = -105;
  v54[3] = 49;
  *(unsigned char *)(v51 + 24) = -119;
  *(unsigned char *)(v51 + 30) = 58;
  *(unsigned char *)(v51 + 12) = 73;
  *(unsigned char *)(v51 + 1) = -15;
  v58[1] = 89;
  uint64_t v59 = (2 * v44) ^ 0x6Au ^ *(unsigned char *)(v51 + 16);
  *(unsigned char *)(v51 + 19) = 120;
  *(unsigned char *)(v51 + 13) = 69;
  *(_WORD *)(v51 + 17) = -4168;
  *(unsigned char *)(v51 + 9) = -105;
  *(unsigned char *)(v51 + 23) = 79;
  uint64_t v60 = (uint64_t)*(&off_1F2C91B30 + (v44 ^ 0x54F));
  uint64_t v61 = (unsigned char *)*v48;
  LODWORD(v49) = *(unsigned __int8 *)(v60 + 797 + ((*(unsigned char *)(*v48 + 8) - 36) ^ 0x77));
  uint64_t v62 = *(unsigned __int8 **)(v50 - 4);
  unint64_t v63 = (((unint64_t)*(unsigned __int8 *)(v51 + 14) << 40) | ((unint64_t)(((*(unsigned char *)(v60 + 6 + v59) ^ 0x94) >> 6) | (4 * (*(unsigned char *)(v60 + 6 + v59) ^ 0x94))) << 32) | ((unint64_t)*(unsigned __int8 *)(v51 + 15) << 24) | (unsigned __int16)(v62[5] << 8) | (v54[15] ^ 0x11) & 0xFFFFFFFFFF00FFFFLL | ((unint64_t)(((((v49 >> 6) | (4 * v49)) ^ 0x7F) >> 2) | ((((v49 >> 6) | (4 * v49)) ^ 0x7F) << 6)) << 16)) ^ ((unint64_t)v62[1] << 48);
  int v69 = v55;
  LODWORD(v55) = *(unsigned __int8 *)(v60 + 797 + (((v54[13] ^ 0x11) - 36) ^ 0x77));
  unint64_t v64 = *(unsigned __int8 *)(*v48 + 2) | ((unint64_t)v62[2] << 8);
  HIDWORD(v65) = ~(v55 >> 6);
  LODWORD(v65) = v55 << 26;
  unint64_t v66 = (((unint64_t)v62[3] << 56) ^ (0xFF00000000000000 * v62[3]) ^ (v63
                                                                             - (v63 ^ ((unint64_t)v62[3] << 56))))
      + v63;
  LODWORD(a19) = ((2 * *(_DWORD *)(v51 + 4)) & 0xFF3F73F6) + (*(_DWORD *)(v51 + 4) ^ 0xFF9FB9FB);
  HIDWORD(a15) = a44;
  return (*(uint64_t (**)(void, unint64_t, uint64_t, void, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, unsigned char *, _DWORD *, uint64_t, uint64_t, unsigned char *, unsigned char *))(v45 + 8 * ((203 * ((((v46 ^ 0x4FA) + 707) ^ v46 ^ 0x131) == 0)) ^ v46)))(v46 ^ 0x4FAu, v66 - ((2 * v66) & 0x60E3DF325246AEB4), 1274, v46 ^ 0x131u, 305, 203, (((unint64_t)(v54[4] ^ 0x11111111u) << 56) | ((unint64_t)*(unsigned __int8 *)(*v48 + 3) << 48) | ((unint64_t)*(unsigned __int8 *)(v51 + 28) << 40) | ((unint64_t)*v56 << 24)) ^ ((((unint64_t)v61[13] << 16) ^ (-65536 * v61[13]) ^ (v64 - (v64 & 0xFFFFFFFFFF00FFFFLL | ((unint64_t)v61[13] << 16)))) + v64) ^ ((unint64_t)((v65 >> 26) ^ 0x1Fu) << 32) ^ 0x714744CB0F8A54FBLL, v66 - ((2 * v66) & 0x60E3DF325246AEB4) - 0x4F8E1066D6DCA8A6, a9, a10, a11, a12, a13, a14, a15, (a19 + 6309381), v60 + 541, a18, a19,
           a20,
           v60 + 797,
           a22,
           v60 + 278,
           a24,
           v62,
           a26,
           a27,
           *v48,
           v54 - 4,
           v68,
           v51,
           v60 + 6,
           v56,
           v69);
}

uint64_t sub_1D4A9CB94(uint64_t a1)
{
  uint64_t v8 = v4 + ((v5 + 153422200) & 0x53B0777E ^ (v2 + 1272));
  long long v9 = *(_OWORD *)(v1 + v8 - 15);
  long long v10 = *(_OWORD *)(v1 + v8 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1517 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v6 + v5 + 697))))();
}

uint64_t sub_1D4A9CC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * (v15 - 2021));
  uint64_t v22 = *v20;
  unsigned int v23 = a2 + 1929924193;
  *(unsigned char *)(*v20 + v23) = (v16 ^ 0xD3) - (v17 & (2 * (v16 ^ 0xD3))) - 21;
  *(unsigned char *)(v22 + v23 + 1) = (v19 ^ 0x5B) - 2 * ((v19 ^ 0x5B) & 0xEF) - 21;
  *(unsigned char *)(v22 + (a2 + 1929924195)) = -14;
  *(unsigned char *)(v22 + v23 + 3) = -77;
  return v21(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1D4A9CC20@<X0>(uint64_t a1@<X2>, int a2@<W5>, uint64_t a3@<X8>)
{
  *((unsigned char *)&STACK[0x2AC] + a3 + a1) = -21;
  return (*(uint64_t (**)(void))(v4 + 8 * ((4066 * ((unint64_t)(a3 + 1 + a1) < 0x40)) ^ (a2 + v3 + 1981))))();
}

void sub_1D4A9CC64()
{
}

void sub_1D4A9CC70(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned char *a26,uint64_t a27,uint64_t a28,unsigned char *a29,unsigned char *a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned char *a34,unsigned char *a35,unsigned char *a36,uint64_t a37,unsigned char *a38,unsigned char *a39,unsigned char *a40,unsigned char *a41,unsigned char *a42)
{
  uint64_t v45 = ((a8 ^ 0x2121AE809F3E1C16)
       - 0x37C9A25EDA4E362ELL
       - 2 * ((a8 ^ 0x2121AE809F3E1C16) & 0x48365DA125B1C9F2 ^ a8 & 0x20)) ^ v43;
  unint64_t v46 = v42 ^ (((a16 - 545948949) | (unint64_t)(a17 << 32))
             + 0x6F1561B1D4B0E6B1
             - ((2 * ((a16 - 545948949) | (unint64_t)(a17 << 32))) & 0xDE2AC363A961CD62));
  unint64_t v47 = v46 ^ 0xA173397C065C8DEALL;
  uint64_t v48 = v46 ^ 0x5E8CC683F9A37215;
  unint64_t v49 = ((v46 ^ 0x5E8CC683F9A37215)
       + 0x714744CB0F8A54FBLL
       - ((2 * (v46 ^ 0x5E8CC683F9A37215)) & 0xE28E89961F14A9F6)) ^ a7;
  uint64_t v50 = v49 ^ 0x629A61E2FE92CDE4;
  unint64_t v51 = v49 ^ 0x9D659E1D016D321BLL;
  uint64_t v52 = ((a4 - 1128) - 0x754484F8A3175885) ^ v45;
  unint64_t v53 = v52 ^ v50 & v47;
  unint64_t v54 = v51 & (v44 ^ 0xB67B972B776DAC61) ^ v48 ^ v53;
  *((void *)&v55 + 1) = v54 ^ 0xABEF87C8808CCB5;
  *(void *)&long long v55 = v54 ^ 0x8000000000000000;
  uint64_t v56 = v54 ^ __ROR8__(v54, 39) ^ (v55 >> 61);
  uint64_t v57 = (v45 ^ 0x754484F8A3175691) & v48;
  unint64_t v58 = a8 ^ 0x2121AE809F3E1C16 ^ v44 ^ 0xB67B972B776DAC61;
  unint64_t v59 = v57 ^ v58;
  uint64_t v60 = (v57 ^ v58) & 0x200000000;
  BOOL v61 = ((v53 ^ 0xF38BFF733C051F6) & v60) == 0;
  uint64_t v62 = v60 | 0x8B10BB0C5451753;
  if (!v61) {
    uint64_t v62 = 0x116217618A8A2EA6 - v62;
  }
  unint64_t v63 = (((v53 ^ 0xF38BFF733C051F6) + v62 - 0x8B10BB0C5451753) ^ (0x8B10BB0C5451753
                                                                    - ((v53 ^ 0xF38BFF733C051F6)
                                                                     + v62)) ^ ((v59 & 0xFFFFFFFDFFFFFFFFLL)
                                                                              - (((v53 ^ 0xF38BFF733C051F6)
                                                                                + v62
                                                                                - 0x8B10BB0C5451753) ^ v59 & 0xFFFFFFFDFFFFFFFFLL)))
      + (v59 & 0xFFFFFFFDFFFFFFFFLL);
  unint64_t v64 = v63 - ((2 * v63) & 0xDDB9BCFC1A5C2C1ALL) - 0x11232181F2D1E9F3;
  *((void *)&v65 + 1) = v64 ^ 0x6160D;
  *(void *)&long long v65 = v64 ^ 0xEEDCDE7E0D280000;
  uint64_t v66 = ((v65 >> 19) - ((2 * (v65 >> 19)) & 0xDDB9BCFC1A5C2C1ALL) - 0x11232181F2D1E9F3) ^ v64;
  uint64_t v67 = (v59 << 23) ^ (v59 >> 7) ^ ((v59 >> 41) | (v59 << 57)) ^ 0x1EC655AF97FB0312;
  unint64_t v68 = (v67 - ((2 * v67) & 0xA3943A782B78C952) - 0x2E35E2C3EA439B57) ^ v59;
  uint64_t v69 = v68 ^ 0x66F33ACB45F3A45BLL;
  unint64_t v70 = v68 ^ 0x66F33ACB45F3A45BLL ^ (v64 << 36) ^ (v66 & 0x88A7E47BC54E7E29 ^ ((v64 >> 28) ^ 0xEEDCDE7E0) & 0xBC54E7E29 | v66 & 0x77581B843AB181D6 ^ ((v64 >> 28) ^ 0xEEDCDE7E0) & 0x43AB181D6);
  unint64_t v71 = v52 & ~v58;
  uint64_t v72 = v50 ^ v58 & (v44 ^ 0x498468D48892539ELL);
  unint64_t v73 = v72 ^ v44 ^ 0xB67B972B776DAC61 ^ v71;
  unint64_t v74 = ((v73 >> 10) ^ (v73 >> 17) | (v73 << 54)) ^ 0xF5EC3F377C10F093;
  unint64_t v75 = v73 ^ 0x47A6B92649E5B850 ^ (v74 - ((2 * v74) & 0xEC72B624C4E1BF0ELL) - 0x9C6A4ED9D8F2079);
  unint64_t v76 = v75 & 0x4C1D4E44A4B3031DLL ^ ((v73 << 47) ^ 0xB3EB800000000000) & 0x4C1D000000000000 | v75 & 0xB3E2B1BB5B4CFCE2 ^ ((v73 << 47) ^ 0xB3EB800000000000) & 0xB3E2800000000000;
  uint64_t v77 = v76 - ((2 * v76) & 0x239597C75237C7E6) - 0x6E35341C56E41C0DLL;
  uint64_t v78 = v77 ^ ((v68 ^ 0x66F33ACB45F3A45BLL)
             - 2 * ((v68 ^ 0x66F33ACB45F3A45BLL) & 0x11CACBE3A91BE3F7 ^ v68 & 4)
             - 0x6E35341C56E41C0DLL);
  unint64_t v79 = v70 ^ 0xD2E160D000000000;
  *((void *)&v65 + 1) = ~v72;
  *(void *)&long long v65 = v72 ^ 0x92CFC162FD513142;
  unint64_t v80 = v72 ^ 0xED70C7C88D0DA858 ^ (0x7FBF06AA705C991BLL - ((v72 << 58) ^ 0xC00000000000000));
  uint64_t v81 = (v80 - ((2 * v80) & 0x228EA9061813359ALL) - 0x6EB8AB7CF3F66533) ^ (v65 >> 1) ^ ((v72 ^ 0x92CFC162FD513166) >> (v59 & 6 ^ 2) >> (v59 & 6 ^ 4)) ^ v56 ^ 0xE2E9BD66EF142B88;
  unint64_t v82 = (v77 ^ 0x6E35341C56E41C0CLL) & v69 ^ v81;
  unint64_t v83 = v82 ^ v77 ^ (((v70 ^ 0xD2E160D000000000) & ~v78)
                   - ((2 * ((v70 ^ 0xD2E160D000000000) & ~v78)) & 0x239597C75237C7E6)
                   - 0x6E35341C56E41C0DLL);
  uint64_t v84 = ((v83 >> 10) & 0x2000000000000 ^ 0x3E7FBFFFFABDFFEFLL) + 2 * ((v83 >> 10) & 0x2000000000000);
  BOOL v61 = ((v84 - 0x3E7FBFFFFABDFFEFLL) & (v83 ^ 0x28E000000000000)) == 0;
  unint64_t v85 = (v70 ^ 0x2D1E9F2FFFFFFFFFLL) & (v56 ^ 0x73AEE9E5E31DB145) ^ v78;
  unint64_t v86 = (v85 >> 41) ^ (v85 >> 7);
  unint64_t v87 = (v86 | (v85 << 57)) ^ (v85 << 23) ^ 0xF774B04353CE1CF4;
  uint64_t v88 = v87 - 2 * (v87 & 0x88E58A0589091FFLL ^ v86 & 3) + 0x88E58A0589091FCLL;
  uint64_t v89 = v84 - 0x301033906021A200;
  uint64_t v90 = 0x4CEF4C6F955A5DDELL - v84;
  if (!v61) {
    uint64_t v89 = v90;
  }
  unint64_t v91 = (v83 >> 10) & 0xFFFDFFFFFFFFFFFFLL ^ 0xA3E966F75234 ^ ((v83 ^ 0x28FA59BDD48D0B6) - 0xE6F8C6F9A9C5DEFLL + v89);
  uint64_t v92 = ((v91 >> 38) & 0x2A35FE4) + (v91 >> 39) - 2 * ((v91 >> 38) & 0x2A35FE4) + 0x61376A34D751AFF2;
  *((void *)&v93 + 1) = v83 ^ 0xD0B6;
  *(void *)&long long v93 = v83 ^ 0x28FA59BDD480000;
  uint64_t v94 = (((v92 << 39) ^ (v83 << 54)) & 0xFFFFFF8000000000 | ((v92 ^ (v91 << 25)) >> 25)) ^ (v93 >> 17);
  unint64_t v95 = (((v77 ^ 0x91CACBE3A91BE3F3) & ~v81)
       - ((2 * ((v77 ^ 0x91CACBE3A91BE3F3) & ~v81)) & 0x228EA9061813359ALL)
       - 0x6EB8AB7CF3F66533) ^ v56 ^ 0xE2E9BD66EF142B88;
  unint64_t v96 = v79 ^ v81 & (v56 ^ 0x8C51161A1CE24EBALL);
  unint64_t v97 = v95 ^ v96;
  unint64_t v98 = (8 * v97) ^ (v97 >> 39) ^ 0xBA3E0AB73A03F932 ^ ((*(unsigned char *)(a24
                                                                                     + ((((v95 ^ v96) >> 57) ^ 0x2B) & 0x70 ^ 0xFE)) ^ (((((v95 ^ v96) >> 57) ^ 0x2B) & 0x70 ^ 0xDE) + ((((v95 ^ v96) >> 57) ^ 0x2B) & 0x70 ^ 0x4B)) ^ 0xA1)
                                                                         - 122);
  unint64_t v99 = v97 ^ 0x8C6B424819C3ADCELL ^ (v98 - ((2 * v98) & 0xB659063DFD2C0630) - 0x24D37CE10169FCE8);
  unint64_t v100 = v99 + ((v97 << 25) ^ 0xADCEAB5DAC000000) - 2 * (v99 & ((v97 << 25) ^ 0xADCEAB5DAC000000));
  unint64_t v101 = v100 - 2 * (v100 & 0x605D66A68E2B3D3ELL ^ v99 & 0xC);
  unint64_t v102 = v88 ^ v85;
  unint64_t v103 = v85 ^ v96;
  *(void *)&long long v93 = __ROR8__(__ROR8__(v103 ^ 0x787EEEF1A7EE72F1, 16) ^ 0x1712D402E105A6CBLL, 48);
  unint64_t v104 = v103 ^ 0xAC7C0FF4012565E3 ^ ((v103 ^ 0xAC7C0FF4012565E3) >> 19) ^ ((unint64_t)v93 >> 28) ^ ((void)v93 << 36) ^ ((void)v93 << 45) ^ v102;
  *((void *)&v93 + 1) = v104 ^ 0xB9;
  *(void *)&long long v93 = v104 ^ 0x92B66458D910E400;
  unint64_t v105 = v101 - 0x1FA2995971D4C2CELL;
  unint64_t v106 = ((v101 - 0x1FA2995971D4C2CELL) ^ 0xE05D66A68E2B3D32) & ((((unint64_t)(v93 >> 9) ^ 0x284B28057C49B8D1) >> (v72 & 0x37 ^ 3) >> (v72 & 0x37 ^ 0x34)) ^ (((unint64_t)(v93 >> 9) ^ 0x284B28057C49B8D1) << 9) ^ 0x69AFF5076C8E5DAFLL);
  unint64_t v107 = v94 ^ 0x8557F9309BB51A6BLL;
  unint64_t v108 = v94 ^ 0x8557F9309BB51A6BLL ^ v102;
  unint64_t v109 = v108 ^ 0x92B66458D910E4B9 ^ v106;
  *((void *)&v93 + 1) = v109 ^ 0x118501E2B14;
  *(void *)&long long v93 = v109 ^ 0x26974A0000000000;
  uint64_t v110 = v109 ^ 0x9907ACCA01258C61 ^ (((v93 >> 41) ^ (v109 << 57) ^ 0x2800000000000000)
                                      - 2
                                      * (((v93 >> 41) ^ (v109 << 57) ^ 0x2800000000000000) & 0x3F90E7D2513BA77FLL ^ (v93 >> 41) & 0xA)
                                      - 0x406F182DAEC4588BLL);
  uint64_t v111 = v110 + ((v109 >> 7) ^ 0x4D2E9630A03C56) - 2 * (v110 & ((v109 >> 7) ^ 0x4D2E9630A03C56));
  unint64_t v112 = (v82 >> 1) ^ (v82 >> 6) ^ (v82 << 58) ^ 0xDE1FAE11AA0A9F1DLL;
  unint64_t v113 = (v112 - ((2 * v112) & 0x89F46C73BDEEE55CLL) - 0x3B05C9C621088D52) ^ v82;
  unint64_t v114 = (v113 ^ 0xABBF41A677A8B294) & 0xF47FF077890F9720 ^ (v82 << 63) | (v113 ^ 0xABBF41A677A8B294) & 0xB800F8876F068DFLL;
  uint64_t v115 = v105 ^ (v114 - 2 * (v114 & 0x605D66A68E2B3D3ALL ^ v113 & 8) - 0x1FA2995971D4C2CELL);
  unint64_t v116 = (v108 ^ 0x92B66458D910E4B9) & (v94 ^ 0x7AA806CF644AE594) ^ v115;
  unint64_t v117 = v116 ^ v94 ^ 0x8557F9309BB51A6BLL ^ (((v108 ^ 0x6D499BA726EF1B46) & (v104 ^ 0x92B66458D910E4B9))
                                            - ((2 * ((v108 ^ 0x6D499BA726EF1B46) & (v104 ^ 0x92B66458D910E4B9))) & 0x2FC61D140C1323A8)
                                            - 0x681CF175F9F66E2CLL);
  *((void *)&v93 + 1) = v117 ^ 0x2E2;
  *(void *)&long long v93 = v117 ^ 0xE493A2E256395800;
  uint64_t v118 = v117 ^ 0x97E30E8A060991D4 ^ ((v117 ^ 0x97E30E8A060991D4) >> 17) ^ (v93 >> 10) ^ ((v117 ^ 0x97E30E8A060991D4) << 47);
  unint64_t v119 = v107 & ~v115;
  unint64_t v120 = v104 ^ 0xF6AA3254B61578A9 ^ (((v105 ^ 0x1FA2995971D4C2CDLL) & v114)
                                      - ((2 * ((v105 ^ 0x1FA2995971D4C2CDLL) & v114)) & 0xC838AC18DE0B3820)
                                      + 0x641C560C6F059C10);
  unint64_t v121 = ((v120 ^ v119) - ((2 * (v120 ^ v119)) & 0xC0BACD4D1C567A64) - 0x1FA2995971D4C2CELL) ^ v105;
  *((void *)&v93 + 1) = v121 ^ 0x38FE43D2BCLL;
  *(void *)&long long v93 = v121 ^ 0x3278F80000000000;
  uint64_t v122 = v111 + (v118 ^ 0x16EB95D00604E32ELL) - 2 * (v111 & (v118 ^ 0x16EB95D00604E32ELL));
  unint64_t v123 = __ROR8__(v121, 61) ^ (v121 << 25) ^ __ROR8__((v93 >> 38) ^ (v121 >> 39 << 26) ^ 0xC258A8B62E885BC3, 26);
  *((void *)&v93 + 1) = v116 ^ 0x548B80C;
  *(void *)&long long v93 = v116 ^ 0x7955EAEC48000000;
  unint64_t v124 = ((v116 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (v93 >> 27);
  unint64_t v125 = (v116 >> 6) ^ (v116 >> 1) ^ (((v124 << 27) ^ (v116 << 63)) & 0xFFFFFFFFF8000000 | (v124 >> 37));
  unint64_t v126 = v123 ^ v125;
  unint64_t v127 = v123 ^ v125 ^ 0xC51AEF5B5CC303B1;
  unint64_t v128 = v122 & (v118 ^ 0xE9146A2FF9FB1CD1) ^ v127;
  unint64_t v129 = ((v128 >> 1) ^ (v128 >> 6) | (v128 << 63)) ^ (v128 << 58) ^ 0x82A267617DDD3C0DLL;
  uint64_t v130 = (v129 - ((2 * v129) & 0x54C8964B8DB93972) + 0x2A644B25C6DC9CB9) ^ v128;
  unint64_t v131 = v130 ^ 0xF9BE5516A6631883;
  unint64_t v132 = (v125 ^ 0x853759C940934A2BLL) + (v127 | v123 ^ 0xBFD2496DE3AFB665) + 1;
  unint64_t v133 = v120 ^ v109;
  uint64_t v134 = (v133 >> 19) ^ (v133 << 36) ^ (v133 << 45) ^ 0x2A792D60982B22B5;
  uint64_t v135 = (v133 >> 28) ^ 0x6E04C1591;
  unint64_t v136 = v133 ^ 0x3FB52542C9239311 ^ (v134 - ((2 * v134) & 0xA363C837B9102A36) + 0x51B1E41BDC88151BLL);
  unint64_t v137 = (v136 & 0x26452CB7C950B7B6 ^ v135 & 0x7C950B7B6 | v136 & 0xD9BAD34836AF4849 ^ v135 & 0x836AF4849) ^ v111;
  unint64_t v138 = v132 & 1;
  unint64_t v139 = (v132 & 0xFFFFFFFFFFFFFFFELL) - ((2 * v132) & 0x331D42070960C5CLL) + 0x198EA10384B062FLL;
  if ((v138 & v137) != 0) {
    uint64_t v140 = v137 - v138 - ((2 * (v137 - v138)) & 0x331D42070960C5ELL) + 0x198EA10384B062FLL;
  }
  else {
    uint64_t v140 = v137 ^ 0x198EA10384B062FLL ^ v138;
  }
  unint64_t v141 = v140 ^ v139;
  unint64_t v142 = (v126 ^ 0x3AE510A4A33CFC4ELL) & (v118 ^ 0x16EB95D00604E32ELL) ^ v123 ^ 0x402DB6921C50499ALL ^ v140 ^ v139;
  uint64_t v143 = ((8 * v142) ^ 0x12BB25DAC3BED128) & (v142 ^ 0x425764BB5877DA20) ^ __ROR8__(v142, 39) ^ (v142 ^ 0x1A00C0A7EAD23211 ^ (((v142 >> 61) ^ 0x5857A41CB2A5E872) - 8 * (v142 >> 63) - 60) | (8 * v142) ^ 0x12BB25DAC3BED128);
  uint64_t v144 = v131 & 0x1191A4446CA9EF9FLL ^ v130 & 0xC;
  unint64_t v145 = v131 - 2 * ((v130 ^ 0xF9BE5516A6631883) & 0x5191A4446CA9EFB7 ^ v130 & 0x24);
  unint64_t v146 = (v143 ^ 0xA7214BF0262D415ALL ^ (v131 - 2 * v144 + 0x5191A4446CA9EF93)) & 0x5652C9E8B5888E62;
  unint64_t v147 = ((v143 ^ 0xA7214BF0262D415ALL ^ (v145 - 0x2E6E5BBB9356106DLL)) & 0xA9AD36174A77719DLL | v146)
       + 0x240D351FA77E95BALL
       - 2
       * (((v143 ^ 0xA7214BF0262D415ALL ^ (v145 - 0x2E6E5BBB9356106DLL)) & 0x200D34170276119CLL | v146 & 0x240D351FA77E95BELL) ^ (v143 ^ 0xA7214BF0262D415ALL ^ (v145 - 0x2E6E5BBB9356106DLL)) & 4);
  uint64_t v148 = (v123 ^ 0x402DB6921C50499ALL) & ~v137 ^ v122;
  unint64_t v149 = ((v148 + (v148 ^ 0x8F38572C0C9BC202) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v148;
  unint64_t v150 = v149 - ((2 * v149) & 0x729D286835E63C08) + 0x394E94341AF31E04;
  uint64_t v151 = (v150 >> 7) ^ 0x729D286835E63CLL;
  uint64_t v152 = 0xBCCF0AB72AA4DB70 - (v150 & 0x10000000000000 | 0x5E67855B95526DB8);
  if ((v151 & v150 & 0x10000000000000) == 0) {
    uint64_t v152 = v150 & 0x10000000000000 | 0x5E67855B95526DB8;
  }
  unint64_t v153 = v128 ^ v118 ^ ((v137 & ~v122) - ((2 * (v137 & ~v122)) & 0x98F44CFE8405BE86) + 0x4C7A267F4202DF43);
  unint64_t v154 = (v153 & 0x1000000000 | (v153 << 47)) ^ v153 & 0xFFFFFFEFFFFFFFFFLL ^ ((v153 >> 10) ^ (v153 >> 17) | (v153 << 54));
  *((void *)&v155 + 1) = v154 ^ 0x2B65159936;
  *(void *)&long long v155 = v154 ^ 0xEA77FC000000000;
  unint64_t v156 = v150 & 0xFFEFFFFFFFFFFFFFLL ^ (v150 >> 41) ^ (v150 << 23) ^ (v150 << 57) ^ (v151 - 0x5E67855B95526DB8 + v152) ^ 0x2B43EDBB18EFB94ELL;
  uint64_t v157 = v154 ^ 0x2ED20AC9433035A2;
  uint64_t v158 = (v156 - ((2 * v156) & 0x40EAEA444C4B5928) + 0x207575222625AC94) ^ v154 ^ 0x2ED20AC9433035A2;
  uint64_t v159 = v147 ^ v158 & (__ROR8__((v155 >> 38) ^ 0xE2AAF8192B2B27F8, 26) ^ 0x353601C75541F9B5);
  unint64_t v160 = ((v159 ^ 0xB63631EB8C7E9501) + 0x6DC4FB0BD4FFFF45) ^ ((v159 ^ 0xDBF2CAE058816A45) + 1);
  unint64_t v161 = v160 - ((2 * v160) & 0xEC2F740F4C1AB590);
  uint64_t v162 = v159 ^ 0x521A8F180173CF72;
  uint64_t v163 = (v161 + 0x7617BA07A60D5AC8) ^ v159 ^ 0x521A8F180173CF72;
  unint64_t v164 = v163 - ((2 * v163 - 0x247609E856000178) & 0x879F368B0F9A6FDALL) + 0x319496515CCD3731;
  *((void *)&v155 + 1) = v164 ^ 0x2D;
  *(void *)&long long v155 = v164 ^ 0xC3CF9B4587CD37C0;
  uint64_t v165 = ((v163 << 63) | 0x61E7CDA2C3E69BF6) ^ (v164 >> 1) ^ (v155 >> 6);
  unint64_t v166 = (v165 - 0x3C3064BA7832C840 - ((2 * v165) & 0x879F368B0F9A6FDALL) + 45) ^ v164;
  unint64_t v167 = (((2 * v147) ^ 0xB7E595C0B102D48BLL) + (v147 ^ 0x240D351FA77E95BALL)) & (v154 ^ 0xEA77FEB65159936);
  unint64_t v168 = (v141 - ((2 * v141) & 0x3B90506AB511AB4ELL) - 0x6237D7CAA5772A59) ^ v148;
  unint64_t v169 = ((v168 ^ 0x9DC828355A88D5A7) << 45) ^ ((v168 ^ 0x9DC828355A88D5A7) << 36) ^ v156 ^ __ROR8__((((v168 ^ 0x9DC828355A88D5A7) >> 30) & 0x3FFFFFFFFFFFFFFFLL | ((unint64_t)(v168 >> 28) << 62)) ^ __ROR8__(v168 ^ 0xD33336B4E536012BLL ^ (((v168 >> 19) ^ 0x147D1FA158CLL) - ((2 * ((v168 >> 19) ^ 0x147D1FA158CLL)) & 0x32C892AC420CLL) - 0x26F2469BB6A9DEFALL), 2) ^ 0x26115EFD9A53B36ELL, 62);
  unint64_t v170 = (v147 ^ 0x240D351FA77E95BALL) & (v143 ^ 0x894F104BB57B5136) ^ v169 ^ 0xE87B635F1624B3E6;
  unint64_t v171 = v170 ^ v143 ^ 0xA7214BF0262D415ALL ^ (v167 - ((2 * v167) & 0xA3234888D953DF26) - 0x2E6E5BBB9356106DLL);
  *((void *)&v155 + 1) = v171 ^ 0x5BE354A5BB0B2;
  *(void *)&long long v155 = v171 ^ 0x6000000000000000;
  uint64_t v172 = v171 ^ __ROR8__(v171, 39) ^ (v155 >> 61);
  unint64_t v173 = ((v169 ^ 0x3D9656FDEA6A2FLL ^ -(uint64_t)(v169 ^ 0x3D9656FDEA6A2FLL) ^ ((v169 ^ 0xE87B635F1624B3E6)
                                                                              + 0x17B90AF614312637))
        + 0x17B90AF614312636) & (v143 ^ 0x76B0EFB44A84AEC9) ^ v158;
  unint64_t v174 = v173 ^ 0x2DB5B6AF87F64351 ^ ((v173 ^ 0x2DB5B6AF87F64351) >> 7) ^ ((v173 ^ 0x2DB5B6AF87F64351) << 23) ^ (((v173 ^ 0x2DB5B6AF87F64351) >> 41) | ((v173 ^ 0x2DB5B6AF87F64351) << 57));
  unint64_t v175 = (((v169 ^ 0xE87B635F1624B3E6) & ~v158)
        - ((2 * ((v169 ^ 0xE87B635F1624B3E6) & ~v158)) & 0x40EAEA444C4B5928)
        + 0x207575222625AC94) ^ v157;
  unint64_t v176 = (v175 - ((2 * v175) & 0xEC2F740F4C1AB590) + 0x7617BA07A60D5AC8) ^ v162;
  unint64_t v177 = v176 ^ (v176 << 54) ^ (v176 << 47) ^ (v176 >> 10) ^ (v176 >> 17);
  unint64_t v178 = v173 ^ __ROR8__(__ROR8__(v170, 61) ^ 0x500CB82D79BEE91BLL, 3);
  uint64_t v179 = ((v178 >> 19) ^ (v178 >> 28) | (v178 << 45)) ^ 0x21278C61855392E3;
  uint64_t v180 = v178 ^ (v178 << 36) ^ v174 ^ (v179 - ((2 * v179) & 0x2D2626BE2D921DE4) - 0x696CECA0E936F10ELL);
  unint64_t v181 = v180 ^ 0xB1BE34D9A28807CELL;
  unint64_t v182 = v177 ^ 0x6778BD04E09F7D8 ^ (v174 - ((2 * v174) & 0xB6BD1E879BFA87EALL) - 0x24A170BC3202BC0BLL);
  unint64_t v183 = (v180 ^ 0x4E41CB265D77F831) & (v172 ^ 0xA9109542E9BBBCELL) ^ v182;
  unint64_t v184 = v166 & (v172 ^ 0xF56EF6ABD1644431) ^ v180 ^ 0xB1BE34D9A28807CELL;
  *((void *)&v155 + 1) = v184 ^ v183 ^ 0x62F93;
  *(void *)&long long v155 = v184 ^ v183 ^ 0x69309AC4CA80000;
  uint64_t v185 = v184 ^ v183 ^ 0x5C7B20AFD8BCC8DBLL ^ (((v155 >> 19) ^ ((v184 ^ v183) << 36) ^ 0xCAE2F93000000000)
                                             - 2
                                             * (((v155 >> 19) ^ ((v184 ^ v183) << 36) ^ 0xCAE2F93000000000) & 0x5AE829039412E74FLL ^ (v155 >> 19) & 7)
                                             + 0x5AE829039412E748);
  uint64_t v186 = (v185 ^ -v185 ^ ((((v184 ^ v183) >> 28) ^ 0x69309AC4) - (v185 ^ ((v184 ^ v183) >> 28) ^ 0x69309AC4)))
       + (((v184 ^ v183) >> 28) ^ 0x69309AC4);
  unint64_t v187 = v186 - 0x37C9A25EDA4E362ELL - ((2 * v186) & 0x906CBB424B6393A4);
  LOBYTE(v179) = *(unsigned char *)(a33 + ((v186 - 46 - ((2 * v186) & 0xA4)) ^ 0x94));
  *a38 = BYTE1(v187) ^ 0xC9;
  a29[5] = ((v179 ^ 0x94) >> 6) | (4 * (v179 ^ 0x94));
  uint64_t v188 = ((v186 + 632408530 - ((2 * v186) & 0x4B6393A4u)) >> 12) & 0xF0 | ((v186
                                                                                          + 632408530
                                                                                          - ((2 * v186) & 0x4B6393A4u)) >> 20) & 0xF;
  *a39 = (*(unsigned char *)(a24 + (v188 ^ 0xE5)) ^ 0xA1)
       + (v188 ^ 0x50)
       + (v188 ^ 0xC5)
       - 2 * (((v188 ^ 0x50) + (v188 ^ 0xC5)) & (*(unsigned char *)(a24 + (v188 ^ 0xE5)) ^ 0xA1))
       - 122;
  unint64_t v189 = v172 ^ 0xF6A62F18D00586E4;
  uint64_t v190 = (v177 ^ 0x22D6FB6C7C0B4BD2) & v174;
  unint64_t v191 = v181 & ~v182;
  unint64_t v192 = (v166 - ((2 * v166) & 0xF86E4C99FD3C7A54) - 0x3C8D9B30161C2D6) ^ v189;
  unint64_t v193 = v192 ^ v190;
  unint64_t v194 = ((v192 ^ v190 ^ v191) - ((2 * (v192 ^ v190 ^ v191)) & 0xB6BD1E879BFA87EALL) - 0x24A170BC3202BC0BLL) ^ v177 ^ 0x6778BD04E09F7D8;
  unint64_t v195 = v194
       - ((2 * v194) & 0x9E2B77E5823BC0A6)
       + 0x4F15BBF2C11DE053
       - ((2 * (v194 - ((2 * v194) & 0x9E2B77E5823BC0A6) + 0x4F15BBF2C11DE053)) & 0xE81DE46818D9D39CLL)
       - 0xBF10DCBF3931632;
  unint64_t v196 = v183 ^ (v183 << 23) ^ ((v183 >> 7) ^ (v183 >> 41) | (v183 << 57));
  unint64_t v197 = (((v177 ^ 0xDD29049383F4B42DLL) & ~v192 ^ v184)
        - ((2 * ((v177 ^ 0xDD29049383F4B42DLL) & ~v192 ^ v184)) & 0xF86E4C99FD3C7A54)
        - 0x3C8D9B30161C2D6) ^ v189;
  *(void *)&long long v155 = __ROR8__((v197 >> 13) & 0x7000000000000 ^ __ROR8__(v197 ^ 0x1C378CE981CC1889 ^ (((8 * v197) ^ (v197 << 25) ^ 0xBF0681A6CFCC6AD0)- 2* (((8 * v197) ^ (v197 << 25) ^ 0xBF0681A6CFCC6AD0) & 0x7E3482BE0EB595D8 ^ (8 * v197) & 8)+ 0x7E3482BE0EB595D3), 16) ^ 0x59AF12027FFB7224, 48);
  uint64_t v198 = (v155 ^ -(uint64_t)v155 ^ (((v197 >> 39) ^ 0xC4061C) - (v155 ^ (v197 >> 39) ^ 0xC4061C)))
       + ((v197 >> 39) ^ 0xC4061C);
  unint64_t v199 = (v193 >> 1) ^ (v193 >> 6) ^ ((v193 << 58) ^ 0xB800000000000000) & 0xE7FFFFFFFFFFFFFFLL ^ (((v193 << 58) ^ 0xB800000000000000) & 0x1800000000000000 ^ v193 & 0x183B3BDBC4516A26 | v193 & 0xE7C4C4243BAE95D9 ^ (v193 << 63));
  LOBYTE(v181) = *(unsigned char *)(a33 + (((v186 + 632408530 - ((2 * v186) & 0x4B6393A4u)) >> 24) ^ 0x63)) ^ 0x94;
  *a40 = (v181 >> 6) | (4 * v181);
  LODWORD(v181) = *(unsigned __int8 *)(a22 + ((((v187 >> 31) & 0xB8) + (BYTE4(v187) ^ 0x7D)) ^ 0x77));
  DWORD1(v155) = (v181 >> 6) ^ 0x7F ^ -((v181 >> 6) ^ 0x7F) ^ (((v181 >> 6) | (8 * v181))
                                                                                         - 127);
  LODWORD(v155) = (DWORD1(v155) + 4 * v181) << 24;
  a29[1] = v198 ^ 0xAC;
  a30[6] = (BYTE6(v187) ^ 0x36) - 2 * ((BYTE6(v187) ^ 0x36) & 0x99 ^ BYTE6(v187) & 8) + 17;
  a29[4] = BYTE2(v198) ^ 0x24;
  *a41 = (unint64_t)v155 >> 26;
  a30[12] = (BYTE3(v198) ^ 0x72) - ((2 * (BYTE3(v198) ^ 0x72)) & 0x22) + 17;
  *(unsigned char *)(a32 + 29) = HIBYTE(v187) ^ 0xC8;
  a30[13] = (BYTE5(v187) ^ 0x5D) - 2 * ((BYTE5(v187) ^ 0x5D) & 0x13 ^ BYTE5(v187) & 2) + 17;
  a26[6] = (v198 ^ 0x12027FFB722459ACuLL) >> (((v186 + 632408530 - ((2 * v186) & 0x4B6393A4u)) >> 20) & 8) >> (~((v186 + 632408530 - ((2 * v186) & 0x4B6393A4u)) >> 20) & 8);
  LODWORD(v187) = *(unsigned __int8 *)(a22 + (((BYTE4(v198) ^ 0xFB) - 36) ^ 0x77));
  a26[4] = BYTE6(v198) ^ 2;
  *a29 = HIBYTE(v198) ^ 0x12;
  a26[2] = ((unsigned __int16)((v193 >> 1) ^ (v193 >> 6) ^ v193) >> 8) ^ 5;
  LODWORD(v183) = (((v193 >> 1) ^ (v193 >> 6) ^ v193) >> 16);
  *a42 = BYTE5(v198) ^ 0x7F;
  a29[2] = (v193 >> 1) ^ (v193 >> 6) ^ v193 ^ 0xDB;
  *a26 = ((((v187 >> 6) | (4 * v187)) ^ 0x7F) >> 2) | ((((v187 >> 6) | (4 * v187)) ^ 0x7F) << 6);
  LOBYTE(v187) = *(unsigned char *)(a18
                          + (((v183 ^ 0x76) + (v183 ^ 0xFFFFFFAA) + 1) ^ 0xFFFFFFFE)
                          + (v183 ^ 0x76));
  unint64_t v200 = v195 ^ (v195 << 47) ^ (v195 >> 10) ^ (v195 << 54);
  unint64_t v201 = v200 ^ (v195 >> 17);
  *a34 = (((v193 >> 1) ^ (v193 >> 6) ^ v193) >> 24) ^ 0x87;
  a29[3] = BYTE6(v199) ^ 0x5D;
  LOBYTE(v195) = (v187 ^ 0xF2 ^ (16 * v187) & 0x40) & 7 ^ 0x35 ^ ((unint64_t)((v187 ^ 0xF2 ^ (16 * v187) & 0x40) >> 3) << ((v198 ^ 0xAC) & (v198 ^ 0x50)) << ((v198 ^ 0xAC) & (v198 ^ 0x50) ^ 3));
  a29[11] = v201 ^ 0xC2;
  *(unsigned char *)(a32 + 2_Block_object_dispose(&STACK[0x368], 8) = BYTE5(v199) ^ 0x22;
  uint64_t v202 = (v201 >> 20) & 0xF0 | (~v201 >> 28);
  a29[13] = ((v195 >> 3) | (32 * v195)) ^ 0xA6;
  *a35 = BYTE2(v201) ^ 0x75;
  a30[8] = (HIBYTE(v199) ^ 0xA1) - 2 * ((HIBYTE(v199) ^ 0xA1) & 0x99 ^ HIBYTE(v199) & 8) + 17;
  a30[17] = (BYTE4(v199) ^ 0x3C) - ((2 * (BYTE4(v199) ^ 0x3C)) & 0x22) + 17;
  a30[11] = (BYTE1(v201) ^ 0xF4) - 2 * ((BYTE1(v201) ^ 0xF4) & 0x13 ^ BYTE1(v201) & 2) + 17;
  LOBYTE(v187) = *(unsigned char *)(a24 + (v202 ^ 0x7E));
  *(unsigned char *)a32 = BYTE6(v200) ^ 0x54;
  char v203 = v187 ^ ((v202 ^ 0x5E) + (v202 ^ 0xCB)) ^ 0xA1;
  *a36 = BYTE5(v201) ^ 0x8B;
  *(unsigned char *)(a32 + 15) = BYTE3(v196) ^ 0x79;
  a30[19] = v196 ^ 0x83;
  a26[5] = BYTE1(v196) ^ 0x3D;
  a29[8] = BYTE2(v196) ^ 3;
  a30[18] = v203 + (~(2 * v203 + 12) | 0xDD) - 104;
  a29[6] = BYTE4(v201) ^ 0x8F;
  a26[7] = HIBYTE(v200) ^ 0xF3;
  LOBYTE(v186) = *(unsigned char *)(a33 + (BYTE4(v196) ^ 0x19)) ^ 0x94;
  *(unsigned char *)(a32 + 14) = BYTE5(v196) ^ 0x49;
  a26[3] = HIBYTE(v196) ^ 0xBE;
  a26[1] = BYTE6(v196) ^ 0x75;
  *(unsigned char *)(a32 + 16) = (v186 >> 6) | (4 * v186);
  *(_DWORD *)(a32 + 4) = a20 + 6309382;
  JUMPOUT(0x1D4A9EEA0);
}

uint64_t sub_1D4A9EF10(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1734 * (v3 + 1 == v5 + 16)) ^ a3)))();
}

uint64_t sub_1D4A9EFE8@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a2 - v2 - 1452 >= ((a1 - 324) ^ 0x300uLL))
                                * (((a1 - 1124) | 0x84) ^ 0x8C)) | a1)))();
}

uint64_t sub_1D4A9F02C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((829 * (a7 + 1 == v8 + 80)) ^ a3)))();
}

uint64_t sub_1D4A9F0F8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((7 * (((v0 - 1112) | 0xCE) ^ 0x2FF)) ^ 0xFA) * ((v1 + v3) > 0x7FFFFFFD)) ^ v0)))();
}

uint64_t sub_1D4A9F14C(uint64_t a1, int a2, int8x16_t *a3, int8x16_t a4, int8x16_t a5)
{
  *(int8x16_t *)(v7 + (a1 & (v6 + 16))) = vaddq_s8(vsubq_s8(*a3, vandq_s8(vaddq_s8(*a3, *a3), a4)), a5);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 == 16) * a2) ^ v5)))();
}

void sub_1D4A9F158()
{
}

uint64_t sub_1D4A9F18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, unsigned int a19, int a20)
{
  unsigned int v22 = 1759421093 * (&a17 ^ 0xB37DB054);
  HIDWORD(a17) = v22 ^ 0x241A7128;
  a18 = v22 + 1424;
  a20 = v22 ^ 0x4479276D;
  LODWORD(a17) = v22 ^ 0x19C79A77;
  (*(void (**)(unint64_t **))(v21 + 17696))(&a17);
  a19 = 1410
      - 460628867
      * (((&a17 | 0x79CC505F) - &a17 + (&a17 & 0x8633AFA0)) ^ 0x355AD222);
  a17 = &STACK[0x4313E3591B4C289];
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v21 + 18432))(&a17);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((490 * (a18 == 526347143)) ^ v20)))(v23);
}

uint64_t sub_1D4A9F294()
{
  *(_DWORD *)(v6 - 120) = v5 + ((v6 - 1915282224 - 2 * ((v6 - 136) & 0x8DD71D58)) ^ 0x3743653A) * v0 + 723;
  *(void *)(v6 - 112) = v1;
  *(void *)(v6 - 12_Block_object_dispose(&STACK[0x368], 8) = v3;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v5 + 1279)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((*(_DWORD *)(v6 - 136) > v4) * ((v5 ^ 0xAA) + 1109)) ^ v5)))(v7);
}

void sub_1D4A9F328()
{
}

void sub_1D4A9F350()
{
}

uint64_t sub_1D4A9F3BC@<X0>(int a1@<W3>, int a2@<W4>, char a3@<W7>, int a4@<W8>)
{
  *(unsigned char *)(v5 + v6) = *(unsigned char *)(v8 + (v4 + a1))
                      - (a3 & (2 * *(unsigned char *)(v8 + (v4 + a1))))
                      - 21;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v6 == 63) * v7) ^ (a2 + a4 - 710))))();
}

uint64_t sub_1D4A9F404(uint64_t a1)
{
  void *v3 = a1;
  _DWORD *v7 = v1;
  uint64_t v12 = v8;
  unsigned int v11 = (v4 ^ 0x7FC)
      - 547
      + 535753261
      * (((v10 | 0x252138E8) - v10 + (v10 & 0xDADEC710)) ^ 0x2FD536C7)
      + 496;
  (*(void (**)(unsigned char *))(v5 + 8 * ((v4 ^ 0x7FC) + 899)))(v10);
  uint64_t v12 = v9;
  unsigned int v11 = (((v4 ^ 0x7FC) - 547) ^ 0x1D5)
      + 535753261 * ((992398163 - (v10 | 0x3B26CB53) + (v10 | 0xC4D934AC)) ^ 0xCE2D3A83)
      + 677;
  (*(void (**)(unsigned char *))(v5 + 8 * (((v4 ^ 0x7FC) - 547) ^ 0xBBA)))(v10);
  return v2 ^ 0x1F5F6B87u;
}

uint64_t sub_1D4A9F40C()
{
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x368], 8) = v0;
  *(void *)(v5 - 120) = v3;
  *(_DWORD *)(v5 - 136) = v2
                        - 108757529
                        * ((2 * (((v5 - 136) ^ 0x14BA10D1) & 0x6A3FC9C1) - ((v5 - 136) ^ 0x14BA10D1) - 1782565320) ^ 0x61E644C2)
                        + 1355;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0x9A2)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((v4 == ((52 * (v2 ^ 0x14F)) ^ 0x79B2A8CD)) * ((v2 ^ 0x2DE) - 104)) ^ v2)))(v6);
}

uint64_t sub_1D4A9F4CC(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, int a14)
{
  unsigned int v24 = v17 - 16;
  uint64_t v25 = v24 & 0xF;
  v27.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v27.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v20, a5).u64[0];
  int8x16_t v28 = vrev64q_s8(vmulq_s8(v27, a6));
  *(int8x16_t *)(a12 + v24) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + v25 - 15), *(int8x16_t *)(a12 + v24)), veorq_s8(*(int8x16_t *)(v25 + v14 - 13), *(int8x16_t *)(v25 + v16 - 11))), vextq_s8(v28, v28, 8uLL));
  return (*(uint64_t (**)(void))(v19 + 8 * (((v18 == 16) * (a14 + 1585)) ^ a11)))();
}

uint64_t sub_1D4A9F4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(_DWORD *)(a16 + 4 * v1_Block_object_dispose(&STACK[0x368], 8) = ((0xF41BD8C901F2D9AFLL >> (v19 + 6)) ^ v17)
                               + v16
                               - 2
                               * (((0xF41BD8C901F2D9AFLL >> (v19 + 6)) ^ v17) & 0x5C7F20DA ^ (0xF41BD8C901F2D9AFLL >> (v19 + 6)) & 2);
  return sub_1D4ABD964();
}

uint64_t sub_1D4A9F504(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19)
{
  unsigned int v21 = a2 + 2080349207 + a6;
  BOOL v22 = v21 < 0x97A476CC;
  BOOL v23 = v21 > a19;
  if (a19 < 0x97A476CC != v22) {
    BOOL v24 = v22;
  }
  else {
    BOOL v24 = v23;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((v24 * (a18 & 0x28708FEB ^ 0x690)) ^ (a5 + v20 + 500))))();
}

void sub_1D4A9F50C()
{
}

void sub_1D4A9F924(int a1@<W7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v14 = ((v11 + a2 - 883) ^ a11) + (a1 ^ v11);
  *(_DWORD *)(v13 - 132) = v14 + v11 - (v12 & (2 * v14));
  JUMPOUT(0x1D4A9F974);
}

uint64_t sub_1D4A9F9F8(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1016 * (a7 + 1 == v8 + 32)) ^ a1)))();
}

uint64_t sub_1D4A9FACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v5 + 88) ^ ((v6 | a5) == 0)) & 1) * (v5 - 659)) ^ v5)))();
}

uint64_t sub_1D4A9FB04(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v24 = v17 - 16 + ((a11 - 821) | 0x100u);
  uint64_t v25 = ((_BYTE)v17 - 16 + (_BYTE)a11 - 53) & 0xF;
  v27.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v27.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v20, a5).u64[0];
  int8x16_t v28 = vrev64q_s8(vmulq_s8(v27, a6));
  *(int8x16_t *)(a14 + v24) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v14 + (v24 & 0xF) - 15), *(int8x16_t *)(a12 + v24)), veorq_s8(*(int8x16_t *)(v15 + (v24 & 0xF) - 15), *(int8x16_t *)((v24 & 0xF) + v16 - 11))), vextq_s8(v28, v28, 8uLL));
  return (*(uint64_t (**)(void))(v19 + 8 * ((14 * (v18 != 16)) ^ a11)))();
}

uint64_t sub_1D4A9FB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 120) = v16 + 1178560073 * ((v18 - 136) ^ 0xBA947862) + 873;
  *(void *)(v18 - 112) = v17;
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x368], 8) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 1429)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 136) > (v14 + 1)) * (v16 - 803)) ^ v16)))(v19);
}

uint64_t sub_1D4A9FB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,unint64_t a30,int a31,int a32)
{
  LODWORD(STACK[0x278]) = v32;
  LODWORD(STACK[0x27C]) = a32;
  STACK[0x280] = a30;
  LODWORD(STACK[0x288]) = (((v36 + 306485138) | 0x40006709) ^ 0x4B67E95E) - a5 + a29;
  STACK[0x290] = a7 + (a5 - 2119813987);
  int v38 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48 * v37 + 8))(a16, a25);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35
                                                                       + 8
                                                                       * ((427
                                                                         * (v38
                                                                          + v34
                                                                          - ((v38 << (((v36 - 117) | 6) - 30)) & v33) == v34)) ^ v36)))(3689027270, 1048539665, a27, 605940025);
}

uint64_t sub_1D4A9FC5C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  return (*(uint64_t (**)(void))(v32 + 8 * ((424 * (a32 - 1048539665 < (a1 ^ 0x9Eu))) ^ a1)))();
}

uint64_t sub_1D4A9FCA4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v9 = a4 + v6 + v7 + v8 + 2083962163 - 354073257;
  unsigned int v10 = v4 + 865206012;
  int v11 = (v10 < 0x693F10BA) ^ (v9 < 0x693F10BA);
  BOOL v12 = v9 > v10;
  if (v11) {
    BOOL v12 = v9 < 0x693F10BA;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((228 * ((((a3 ^ 0x15) + 1) ^ v12) & 1)) ^ (a3 - 490))))();
}

uint64_t sub_1D4A9FD38(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((v2 == a1) ^ (-93 * (a2 ^ 0x98))) & 1) * (a2 - 366)) ^ a2)))();
}

uint64_t sub_1D4A9FD70()
{
  BOOL v4 = v1[1] == 0x9466003216229CDLL || (v1[7] | v1[4]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * ((v0 + 831) ^ 0x566 ^ ((v0 - 1071) | 0x264))) ^ v0)))();
}

uint64_t sub_1D4A9FDD4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,uint64_t a24,uint64_t a25,int a26)
{
  unsigned int v27 = a23 + ((11 * ((a4 + 2044) ^ 0x844)) ^ 0xC349F4C6);
  int v28 = ((a26 - 1244626668) < 0x1C4C5358) ^ (v27 < 0x1C4C5358);
  BOOL v29 = v27 < a26 - 1244626668;
  if (v28) {
    BOOL v29 = (a26 - 1244626668) < 0x1C4C5358;
  }
  return (*(uint64_t (**)(uint64_t))(v26 + 8
                                                  * ((v29 * ((((a4 + 2044) ^ 0x844) + 1536) ^ 0x60A)) ^ (a4 + 732))))(2801639823);
}

uint64_t sub_1D4A9FE9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,int a21)
{
  int v29 = v21 + 1;
  int v30 = &a21 + 6 * (v29 - 1883610289);
  v30[2] = v25;
  v30[3] = v23;
  *((void *)v30 + 2) = v22;
  v30[6] = a19;
  a21 = v29;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * ((52 * (*(_DWORD *)(v26 + 48 * v27 + 32) + v28 < a7 + ((a9 + 1223288481) & 0xB71619E7) - 417)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1D4A9FF24(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (a4 ^ (63 * ((unint64_t)(a2 - (a1 + v5)) > 0x1F)))))();
}

uint64_t sub_1D4A9FF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v10.i64[0] = 0xD6D6D6D6D6D6D6D6;
  v10.i64[1] = 0xD6D6D6D6D6D6D6D6;
  v11.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v11.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  int8x16_t v12 = vrev64q_s8(*(int8x16_t *)(v6 + (v8 - 951018787) - 15));
  int8x16_t v13 = vextq_s8(v12, v12, 8uLL);
  int8x16_t v14 = vrev64q_s8(*(int8x16_t *)(v6 + (v8 - 951018787) - 31));
  int8x16_t v15 = vextq_s8(v14, v14, 8uLL);
  uint64_t v16 = v5 + (v8 - 951018787);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v13, vandq_s8(vaddq_s8(v13, v13), v10)), v11));
  *(int8x16_t *)(v16 - 15) = vextq_s8(v17, v17, 8uLL);
  int8x16_t v18 = vrev64q_s8(vaddq_s8(vsubq_s8(v15, vandq_s8(vaddq_s8(v15, v15), v10)), v11));
  *(int8x16_t *)(v16 - 31) = vextq_s8(v18, v18, 8uLL);
  return (*(uint64_t (**)(void))(v9 + 8 * ((1951 * (((a5 - 712) ^ 0x5FD) == (v7 & 0xFFFFFFE0))) ^ (a5 - 1400))))();
}

uint64_t sub_1D4AA001C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8
                                   * ((587 * (*(_DWORD *)(v8 + 72) == (a6 ^ (a6 + 353) ^ (a3 + 682)))) ^ (a6 + v7))))();
}

uint64_t sub_1D4AA0060@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((8 * (a2 + 1 != v3 + 4)) | (16 * (a2 + 1 != v3 + 4)) | a1)))();
}

uint64_t sub_1D4AA0128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21)
{
  a19 = v23;
  a20 = v26;
  a21 = (v21 - 1111) ^ (1225351577 * (&a17 ^ 0x239AD816));
  a18 = a13;
  (*(void (**)(unsigned int *))(v24 + 8 * (v21 ^ 0xD9B)))(&a17);
  a18 = v22;
  a19 = a13;
  a17 = (v21 - 451) ^ (((-1001333016 - (&a17 | 0xC450DEE8) + (&a17 | 0x3BAF2117)) ^ 0x565B391E)
                     * v25);
  (*(void (**)(unsigned int *))(v24 + 8 * (v21 + 880)))(&a17);
  a17 = (v21 + 34) ^ (1755732067
                    * ((((&a17 | 0x3445A058) ^ 0xFFFFFFFE) - (~&a17 | 0xCBBA5FA7)) ^ 0x157CE27C));
  a18 = a13;
  uint64_t v27 = (*(uint64_t (**)(unsigned int *))(v24 + 8 * (v21 + 885)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * (((a19 == 526347143) * (v21 - 1156)) ^ v21)))(v27);
}

uint64_t sub_1D4AA0268()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((((((v1 ^ 0x68D) - 496) | 0x800) - 2010) * (v0 != 1513171449)) ^ v1 ^ 0x68D)))(2801639823);
}

uint64_t sub_1D4AA02B0@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  unsigned int v8 = a1 + v6 + a2;
  uint64_t v9 = a3 + v8;
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = v3 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7
                              + 8 * (int)((((v4 & 0xFFFFFFE0) == 32) * ((v5 + 1574607216) & 0xA22567BB ^ 0x95A)) ^ v5)))();
}

uint64_t sub_1D4AA0318@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((75 * ((v1 ^ (((((v1 - 11) | 0xA8) - 1427) ^ a1) < 8)) & 1)) ^ v1)))();
}

uint64_t sub_1D4AA0360()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((115
                                * (((v0 + 2130278087) & 0x810683F4 ^ 0x8060AFB8 ^ (489 * (v0 ^ 0x636))) + v1 < 0x7FFFFFFF)) ^ v0)))();
}

void sub_1D4AA03E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  *(_DWORD *)(a41 + 4 * v41) ^= a37;
  JUMPOUT(0x1D4AA0414);
}

void sub_1D4AA046C()
{
}

uint64_t sub_1D4AA0528@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((51 * (a1 != (v1 - v3 - 634) - 3742567335)) ^ v1)))();
}

uint64_t sub_1D4AA055C(uint64_t a1)
{
  return sub_1D4AA0564(a1, *v1);
}

void sub_1D4AA0564(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void, uint64_t, void))(v4 + 8 * (v2 ^ 0xCEB)))(*v6, a2, (v2 - 996280208 + *(_DWORD *)(v3 - 0x2C138C8FAF40FC1ALL)));
  void *v9 = v8;
  *(_DWORD *)(v3 - 0x2C138C8FAF40FC1ALL) = v7;
  _DWORD *v5 = v7;
  JUMPOUT(0x1D4AA05C0);
}

uint64_t sub_1D4AA05E0(int a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(v4 - 7 + (v6 + v7 + v8 - a1)) = *(void *)(a2 - 7 + (v6 + v7 + v8 - a1));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 - (v5 & 0xFFFFFFF8) == -8) * ((a4 - 1312) ^ 0x265)) ^ a4)))(a1 - (v5 & 0xFFFFFFF8) + 16);
}

void sub_1D4AA0638(_DWORD *a1@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(*(void *)(v3 + 24) - 0x3EA9131FAE910FB_Block_object_dispose(&STACK[0x368], 8) = v1;
  *(_DWORD *)(v4 - 0x237357D135FF68D5) = v2;
  *(_DWORD *)uint64_t v3 = *a1;
}

uint64_t sub_1D4AA06A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v19 - 112) = v17;
  *(_DWORD *)(v19 - 120) = v18
                         + ((7350338 - ((v19 - 136) | 0x702842) + ((v19 - 136) | 0xFF8FD7BD)) ^ 0x451BAFDF) * v14
                         + 1296;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x368], 8) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v18 + 1852)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((626
                                              * (*(_DWORD *)(v19 - 136) > v15 + ((v18 + 1944079523) & 0x8C1FB7F9) - 1616)) ^ v18)))(v20);
}

uint64_t sub_1D4AA0750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  if (a18 + 1434327783 < ((v19 - 1696149566) & 0x65192C7F ^ 0xD16F86FE) != (v18 + 1895466277) < 0xD16F86E0) {
    BOOL v21 = a18 + 1434327783 < ((v19 - 1696149566) & 0x65192C7F ^ 0xD16F86FE);
  }
  else {
    BOOL v21 = v18 + 1895466277 < (a18 + 1434327783);
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((57 * v21) ^ v19)))();
}

uint64_t sub_1D4AA07D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, unint64_t *a18, unint64_t *a19, unint64_t *a20,unsigned int a21)
{
  a18 = a12;
  a19 = &STACK[0x237357D135FF68FD];
  a21 = (v21 - 342) ^ (1225351577 * (&a17 ^ 0x239AD816));
  a20 = &STACK[0x3EA9131FAE910FE8];
  (*(void (**)(unsigned int *))(v22 + 8 * (v21 ^ 0xA98)))(&a17);
  a18 = &STACK[0x8DE5192BDC53192];
  a19 = a12;
  a17 = (v21 + 318) ^ (1374699841 * (&a17 ^ 0x6DF41809));
  (*(void (**)(unsigned int *))(v22 + 8 * (v21 ^ 0xA93)))(&a17);
  a18 = a12;
  a17 = (v21 + 803) ^ (1755732067
                     * ((2 * (&a17 & 0x22973738) - &a17 + 1567148230) ^ 0x83AE751D));
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v22 + 8 * (v21 + 1654)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (((a19 == 526347143) * ((186 * (v21 ^ 0x277)) ^ 0x3B6)) ^ v21)))(v23);
}

uint64_t sub_1D4AA0948()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((v0 | 0x190) + 500) ^ 0x571 ^ ((v0 | 0x190) + 714472037) & 0xD56A0655)
                                     * (*(_DWORD *)(v2 - 140) == *(_DWORD *)(v2 - 144))) ^ (v0 | 0x190))))();
}

uint64_t sub_1D4AA09A8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((*(_DWORD *)(v2 - 0x2C138C8FAF40FC0ALL) == 382 * ((v1 - 229) ^ 0xBE) + 526345233)
                                * (((v1 - 256) | 0x100) - 57)) ^ (v1 - 229))))();
}

uint64_t sub_1D4AA0A0C@<X0>(int a1@<W0>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(a2 + (v6 + v4)) = *(unsigned char *)(v3 + (v6 + v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 == a3) * ((a1 + v5) ^ 0x2E0)) ^ (a1 + v5 + 652))))();
}

uint64_t sub_1D4AA0A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v12 = v8 + v7 - 1643904854;
  if (v12 <= 0x40) {
    int v13 = 64;
  }
  else {
    int v13 = v12;
  }
  BOOL v14 = !__CFADD__(v12 - 1, v10 + v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((v14 * (((v9 + 154) | 0x93) ^ 0x169)) ^ v9)))(a1, a2, a3, a4, a5, a6, a7, 20);
}

uint64_t sub_1D4AA0AC4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((**(void **)(v2 + 8 * (v0 ^ 0x224)) == 0) * (((v0 - 166) | 0x198) - 614)) ^ v0)))();
}

void sub_1D4AA0B00()
{
}

uint64_t sub_1D4AA0B0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  *(void *)(v10 + (a7 + v9)) = *(void *)(a4 + (a7 + v9));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v11 == 0) * a3) ^ a8)))();
}

void sub_1D4AA0B3C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)a1 = 0;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x368], 8) = 0x3B6203503B620350;
  *(void *)(a1 + 16) = 0x1DC69A7A0D7973D3;
  *(_DWORD *)(a1 + 24) = 526347143;
  *(void *)(v2 - 0x4313E3591B4C269) = a1 + 0x2C138C8FAF40FC22;
  JUMPOUT(0x1D4AA0B9CLL);
}

uint64_t sub_1D4AA0BB0@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((((v1 + 1957099962) & 0x8B5903FF) + 413) | 2) + 92) * (a1 > 1)) ^ (v1 + 1957099962) & 0x8B5903FF)))();
}

uint64_t sub_1D4AA0CBC()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x2C138C8FAF40FC12)
     - ((2 * *(_DWORD *)(v1 - 0x2C138C8FAF40FC12) - 452126630) & 0x9679CA2E)
     + 1036218692;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((42
                                * (((2 * v3) & 0x1FF5FFF6 ^ 0x1671CA26)
                                 - 147328048
                                 + ((11 * ((v0 - 874678825) & 0x342285E0 ^ 0x4E7)) ^ v3 ^ 0x44C61DC1) != 120779723)) ^ v0)))();
}

uint64_t sub_1D4AA0D84@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(_DWORD *)(result + 4) = (((v4 - 425) | 0x1A4)
                           - (((*(_DWORD *)(*(void *)(v2 - 0x139154EEB4327E8) + 4 * v3) ^ 0xDC7F20D8) >> a2) & 1)
                           + 1003905518) ^ 0x3E24C1F3;
  return result;
}

void sub_1D4AA0DE4()
{
}

void sub_1D4AA0DEC()
{
}

uint64_t sub_1D4AA0DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v32 = 1759421093 * ((v31 - 1303624101 - 2 * ((v31 - 128) & 0xB24C46DB)) ^ 0x131F68F);
  *(_DWORD *)(v31 - 112) = v24 - v32 - 218;
  *(_DWORD *)(v31 - 12_Block_object_dispose(&STACK[0x368], 8) = v24 + 124 - v32 + v29 - 1026732878;
  *(void *)(v31 - 120) = v27;
  (*(void (**)(uint64_t))(v25 + 8 * (v24 + 969)))(v31 - 128);
  *(void *)(v31 - 120) = a24;
  *(_DWORD *)(v31 - 112) = v24
                         + 124
                         + ((-1552184628 - ((v31 - 128) | 0xA37B8ACC) + ((v31 - 128) | 0x5C847533)) ^ 0xE6100D51) * v30
                         + 245;
  *(void *)(v31 - 104) = v26;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 + 925)))(v31 - 128);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((25 * (*(_DWORD *)(v31 - 128) <= ((((v24 + 178) | 0x20) - 922) ^ v28))) ^ (v24 + 124))))(v33);
}

uint64_t sub_1D4AA0F10(int a1, uint64_t a2, int a3, int a4)
{
  unsigned int v9 = a4 + a1 + v6 + a3;
  v10.i64[0] = 0xD6D6D6D6D6D6D6D6;
  v10.i64[1] = 0xD6D6D6D6D6D6D6D6;
  v11.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v11.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  uint64_t v12 = v7 + v9;
  int8x16_t v13 = vrev64q_s8(*(int8x16_t *)(v12 - 15));
  int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
  int8x16_t v15 = vrev64q_s8(*(int8x16_t *)(v12 - 31));
  int8x16_t v16 = vextq_s8(v15, v15, 8uLL);
  uint64_t v17 = v4 + v9;
  int8x16_t v18 = vrev64q_s8(vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), v10)), v11));
  *(int8x16_t *)(v17 - 15) = vextq_s8(v18, v18, 8uLL);
  int8x16_t v19 = vrev64q_s8(vaddq_s8(vsubq_s8(v16, vandq_s8(vaddq_s8(v16, v16), v10)), v11));
  *(int8x16_t *)(v17 - 31) = vextq_s8(v19, v19, 8uLL);
  return (*(uint64_t (**)(void))(v8 + 8 * ((2239 * ((v5 & 0xFFFFFFE0) == 32)) ^ (a4 - 1612))))();
}

uint64_t sub_1D4AA0FB0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((3620
                                * (*(_DWORD *)(v2 + 4 * (v1 + v3 + 2)) == a1 + 3 * (v4 ^ 0x1B6) - 978)) ^ (v4 + 1348))))();
}

uint64_t sub_1D4AA1000()
{
  *(void *)(v2 - 1340507626 + v4 - 220 - 213 + 3 * (v0 ^ 0x94u)) = 0xEBEBEBEBEBEBEBEBLL;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2249 * ((v1 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v0)))();
}

uint64_t sub_1D4AA105C@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 - 220 + a2 - 1340507626) = -21;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2138 * ((unint64_t)(a2 - 1340507625) < 0x40)) ^ (a1 + v2 + 194))))();
}

void sub_1D4AA10A8()
{
}

uint64_t sub_1D4AA10F8@<X0>(unsigned int a1@<W0>, int a2@<W2>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W6>, unsigned int a6@<W8>)
{
  *(unsigned char *)(a3 + (v6 + 1 + v9)) = *(unsigned char *)(a4 + (v7 + a2));
  return (*(uint64_t (**)(void))(v11 + 8
                                    * (((((a6 ^ a1 ^ (unint64_t)(v8 + 1153)) & (v7 + 1)) == v10) * a5) ^ a6)))();
}

uint64_t sub_1D4AA1140()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 ^ (55
                                     * (((v1 << (((v0 + 114) & 0xFE) + 3)) & 0x9973CB8E ^ 0x10724184)
                                      + (v1 ^ 0x6686C705)
                                      - 1207977217 == 79274182)))))();
}

uint64_t sub_1D4AA11C0@<X0>(int a1@<W8>)
{
  int v6 = (v3 - 1343) | 0x389;
  *(_DWORD *)(*(void *)(v5 - 0x139154EEB4327E8) + 4 * (a1 + v6 + v2 + 789944443)) = *(_DWORD *)(*(void *)(v5 - 0x139154EEB4327E8) + 4 * (v2 + v1));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8 * ((1169 * ((v2 + v1 - 1) < 0x7FFFFFFF)) ^ v6)))(789944443, 0x7FFFFFFFLL);
}

uint64_t sub_1D4AA1244()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 + 285) | 0x100) - 837) * (v0 != 63)) ^ v1)))();
}

void sub_1D4AA1284()
{
}

uint64_t sub_1D4AA1344(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * (v3 ^ (227 * (v2 == 0)))))(a1, a2);
}

uint64_t sub_1D4AA1388@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v7 = ((a1 + 647) ^ (v4 + 904)) + v5;
  *(unsigned char *)(a2 + v7) = *(unsigned char *)(v2 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((1008 * (v5 - 1 != v3)) ^ (a1 + 1140))))();
}

uint64_t sub_1D4AA13C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,int a59)
{
  if (BYTE4(a39) == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8 * ((1894 * (a59 != 1335561202)) ^ ((int)a3 + 1004))))(a1, a18);
  }
  if (BYTE4(a39) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v59
  }
                                                       + 8
                                                       * (int)(((a59 != 1335561202) * ((a3 + 1318) ^ 0x53C)) ^ (a3 + 1318))))(a1, a18);
  a58 = ((((unint64_t)&a43 ^ 0xF85BDE3EFF737D8FLL) + ((2 * (void)&a43) & 0x10) + (a3 ^ 0x62) - 1) ^ 0xBA)
      * (((unint64_t)&a43 ^ 0xF85BDE3EFF737D8FLL) + ((2 * (void)&a43) & 0x10) + (a3 ^ 0x62) + 16);
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * (int)(a3 ^ 0x62)))(*(void *)(v59 + 8 * (int)(a3 ^ 0x62)), a18, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1D4AA1528(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned char *a21)
{
  int v24 = *(unsigned char **)(v23 + 96);
  v24[1167] = a21[19];
  v24[1166] = a21[18];
  v24[1165] = a21[17];
  v24[1164] = a21[16];
  v24[1163] = a21[15];
  v24[1162] = a21[14];
  v24[1161] = a21[13];
  v24[1160] = a21[12];
  v24[1159] = a21[11];
  v24[1158] = a21[10];
  v24[1157] = a21[9];
  v24[1156] = a21[8];
  v24[1155] = a21[7];
  v24[1154] = a21[6];
  v24[1153] = a21[5];
  v24[1152] = a21[4];
  v24[1151] = a21[3];
  v24[1150] = a21[2];
  v24[1149] = a21[1];
  v24[1148] = *a21;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v22
                                                     + 8
                                                     * (((*(_DWORD *)(v23 + 72) == ((5 * ((3 * (v21 ^ 0x3AD)) ^ 0x667)) ^ 0x396 ^ (a3 + 682)))
                                                       * ((5 * ((3 * (v21 ^ 0x3AD)) ^ 0x667)) ^ (a6 + 239) ^ (a6 + 504))) ^ (5 * ((3 * (v21 ^ 0x3AD)) ^ 0x667)))))(a5, a2);
}

uint64_t sub_1D4AA1648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7
                                                              + 8
                                                              * (int)((((a5 + ((v6 + 1854773856) & 0x9172630D) - 290) ^ (v6 + 2077752270) & 0xD66CFFBB)
                                                                     * (v5 == 63)) ^ v6)))(a1, a2, -182238939);
}

uint64_t sub_1D4AA16A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((467 * (((2 * a8) ^ 0x840E9A39) + v8 < 0xFFFFFFBF)) ^ a8)))(a1, a2, a3, a4, a5, a6, a7, 3768594595);
}

uint64_t sub_1D4AA16F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  return (*(uint64_t (**)(void))(v36 + 8 * (((v35 > 0xE4D5C49E) * ((a35 & 0x2445F67) + 500)) ^ 0x164)))();
}

uint64_t sub_1D4AA1748@<X0>(int a1@<W8>)
{
  int v10 = v5 + 1;
  BOOL v11 = v1 < v2;
  *(_DWORD *)(*v4 + 4 * (v10 + v6)) = *(_DWORD *)(*v4 + 4 * (a1 + v10));
  if (v11 == v10 + v7 < v2) {
    BOOL v11 = v10 + v7 < v1;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v11 * v8) ^ v3)))();
}

uint64_t sub_1D4AA1750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (v8 + 2 * (*(_DWORD *)(v9 + 48 * (v7 + a6)) != (((v8 - 485) | 0x118) ^ 0x47113800)))))();
}

uint64_t sub_1D4AA1798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 120) = a14;
  *(void *)(v18 - 104) = v17;
  *(_DWORD *)(v18 - 112) = v14 + ((2 * ((v18 - 128) & 0x571A4B78) - (v18 - 128) - 1461341051) ^ 0x1271CCE7) * v16 + 312;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 868)))(v18 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((88 * (*(_DWORD *)(v18 - 128) - 1263233869 >= ((v14 + 72) ^ 0xC5B96D0F))) ^ v14)))(v19);
}

uint64_t sub_1D4AA1838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((963 * ((a19 & 0xFFFFFFF0) == a8 + 56 * (v19 ^ (v20 - 5)) + 964)) ^ (v22 + v19 + 910))))();
}

uint64_t sub_1D4AA1880()
{
  BOOL v3 = v0 == ((v1 - 1285) ^ 0x6E832F571939B795);
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v3) | (16 * v3)) ^ v1)))();
}

uint64_t sub_1D4AA18BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 1759421093 * ((~((v19 - 128) | 0xA2768E83) + ((v19 - 128) & 0xA2768E83)) ^ 0xEEF4C128);
  *(_DWORD *)(v19 - 112) = v15 - v20 - 347;
  *(_DWORD *)(v19 - 12_Block_object_dispose(&STACK[0x368], 8) = v16 - v20 + ((v15 - 1334) ^ 0xDBEF611F);
  *(void *)(v19 - 120) = v18;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0xCC8)))(v19 - 128);
  *(void *)(v19 - 120) = a14;
  *(void *)(v19 - 104) = a13;
  *(_DWORD *)(v19 - 112) = v15 - 1334 + ((v19 - 128) ^ 0xBA947862) * v17 + 1574;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 796)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v19 - 128) > 0x4B4B6B4Bu)
                                              * ((v15 - 1334) ^ 0x655 ^ (v15 - 1334) ^ 0x30A ^ 0x568)) ^ (v15 - 1334))))(v21);
}

uint64_t sub_1D4AA19C4(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  BOOL v43 = a39 != a2 || v41 != a4 + ((v39 + 584779665) & 0xDD24F7FF) - 1003;
  return (*(uint64_t (**)(void))(v40 + 8 * ((308 * v43) ^ v39)))();
}

uint64_t sub_1D4AA1A14(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((v5 + 722) ^ 0xB1) - 679) * (a4 == 0)) ^ (v5 + 722))))();
}

void sub_1D4AA1A40()
{
}

void sub_1D4AA1B3C()
{
}

uint64_t sub_1D4AA1EE0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((291
                                * ((((*(unsigned __int8 *)(v2 + 1) - 134) << (((v3 ^ 8) - 66) ^ 0xBD)) & v0)
                                 + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v1) == v1)) ^ v3 ^ 8)))();
}

void sub_1D4AA1F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned char *a9)
{
  unsigned int v12 = v10 - ((2 * v10 + 732830558) & 0xA7400726) + 1769410882;
  *a9 = (HIBYTE(v12) ^ 0xD3) - ((v11 + 113) & (2 * (HIBYTE(v12) ^ 0xD3))) - 21;
  a9[1] = (BYTE2(v12) ^ 0xA0) - 2 * ((BYTE2(v12) ^ 0xA0) & 0xEF ^ BYTE2(v12) & 4) - 21;
  a9[2] = (BYTE1(v12) ^ 3) - 2 * ((BYTE1(v12) ^ 3) & 0xEF ^ BYTE1(v12) & 4) - 21;
  a9[3] = v12 ^ 0x78;
  uint64_t v13 = v9 - ((2 * v9) & 0x4B140C17DEC41458) + 0x258A060BEF620A2CLL;
  a9[4] = (HIBYTE(v13) ^ 0x25) - ((2 * (HIBYTE(v13) ^ 0x25)) & 0xD6) - 21;
  a9[5] = (BYTE6(v13) ^ 0x8A) + (~(2 * (BYTE6(v13) ^ 0x8A)) | 0x29) - 20;
  a9[6] = (BYTE5(v13) ^ 6) - ((2 * (BYTE5(v13) ^ 6)) & 0xD6) - 21;
  a9[7] = (BYTE4(v13) ^ 0xB) - 2 * ((BYTE4(v13) ^ 0xB) & 0xEF ^ BYTE4(v13) & 4) - 21;
  a9[8] = (((v9 - ((2 * v9) & 0xDEC41458) - 278787540) >> 24) ^ 0xEF)
        - ((2 * (((v9 - ((2 * v9) & 0xDEC41458) - 278787540) >> 24) ^ 0xEF)) & 0xD6)
        - 21;
  a9[9] = (BYTE2(v13) ^ 0x62) - 2 * ((BYTE2(v13) ^ 0x62) & 0xEF ^ BYTE2(v13) & 4) - 21;
  a9[10] = (BYTE1(v13) ^ 0xA) - ((2 * (BYTE1(v13) ^ 0xA)) & 0xD6) - 21;
  a9[11] = (v9 - ((2 * v9) & 0x58) + 44) ^ 0xC7;
  sub_1D4A89814();
}

uint64_t sub_1D4AA20D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  *(_DWORD *)(a28 + 4 * a6) = v28;
  int v31 = a6 + 1 + a4;
  BOOL v33 = v31 >= a7 || v31 <= a5;
  return (*(uint64_t (**)(void))(v30 + 8 * ((v33 * a8) ^ v29)))();
}

uint64_t sub_1D4AA2108()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v2 + 240) | 0x186) - 585) ^ ((v2 - 210) | 0x100)) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_1D4AA2140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((574 * (v6 + 1 == v10 + 32)) ^ v7)))(a1, a2, v8, a4, a5, a6, v8, v11);
}

uint64_t sub_1D4AA2210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31)
{
  int v39 = (v31 - 1584) ^ 0x442;
  int v38 = (v31 - 1584) | 0x652;
  uint64_t v33 = *(void *)(a19 + 8);
  unsigned int v34 = 628203409
      * ((((&a24 | 0x15ED8BC0) ^ 0xFFFFFFFE) - (~&a24 | 0xEA12743F)) ^ 0x689A780C);
  int v35 = -1178884666 - v34 + *(_DWORD *)(a19 + 4);
  a26 = v31 - v34 + 295;
  a27 = v35;
  a24 = a16;
  a25 = a14;
  a30 = v33;
  a31 = a15;
  a28 = a17;
  int v37 = v31;
  (*(void (**)(uint64_t *))(v32 + 8 * (v31 + 739)))(&a24);
  return (*(uint64_t (**)(uint64_t))(v32 + 8 * (((a29 == (v39 ^ 0x1F5F6FCD)) * (v38 - 1241)) ^ v37)))(2411756756);
}

uint64_t sub_1D4AA2354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v15 = v12 < v8;
  int v16 = v9 + 1;
  *(unsigned char *)(*v14 + (v16 + a8)) = -21;
  unsigned int v17 = v16 + v10 + ((v11 - 1538) | 0x228);
  int v18 = v15 ^ (v17 < v8);
  BOOL v19 = v17 < v12;
  if (!v18) {
    BOOL v15 = v19;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((8 * v15) | (16 * v15) | v11)))();
}

uint64_t sub_1D4AA23B8()
{
  BOOL v4 = v1[5] == 0x3BC303ACCBD26FD1 || (*v1 | v1[3]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * ((v0 ^ 0x75B) - 1029)) ^ v0)))();
}

uint64_t sub_1D4AA240C()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2687
                                * (*(_DWORD *)(v0 + 4 * (v2 + v4 - 1)) == ((v3 + 5 * (v1 ^ 0x37D) - 767) ^ v1 ^ 0x7A))) ^ v1)))();
}

uint64_t sub_1D4AA245C()
{
  int v3 = v1 + ((v2 - 243) | 0x124) - ((((v2 + 1082) ^ 0x3B7) + 1740100814) & (2 * v1 + 732830558)) + 1236466259;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((14 * (((2 * v3) & 0xE3FD3F5E ^ 0x63B51B40) + (v3 ^ 0xC225724F) - 4325517 == 1908186914)) ^ (v2 + 1082))))();
}

uint64_t sub_1D4AA24FC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * ((((a2 ^ 0x798) + 3978) * (v3 == v4)) ^ a2)))(a1, v2);
}

uint64_t sub_1D4AA2530(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((38 * (((**(unsigned char **)(a2 + 8) == 0) ^ 0xE5) & 1)) ^ 0x685u)))();
}

uint64_t sub_1D4AA2588@<X0>(uint64_t a1@<X8>)
{
  BOOL v14 = v13 > v6;
  uint64_t v15 = 4 * (v9 + v7);
  int v16 = v1 - 423212696 + (*(_DWORD *)(*(void *)(v12 - 0x139154EEB4327E8) + v15) ^ v8);
  *(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + v15) = v16 + v8 - (v11 & (2 * v16));
  int v17 = v9 + 1 + v3;
  LODWORD(v15) = v14 ^ (v17 < v4);
  BOOL v18 = v17 < v5;
  if (!v15) {
    BOOL v14 = v18;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (int)((248 * v14) ^ (v2 + 1715858056) & 0x99BA1577)))();
}

uint64_t sub_1D4AA2680(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((46
                                * (v2 - a1 >= (unint64_t)(v3 + (a2 ^ (v4 + 1741)) + 1364) - 1340)) ^ a2)))();
}

uint64_t sub_1D4AA26BC(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 ^ 0x486) - 862) * ((a2 + a1 - 2139086815) < 8)) ^ v2)))();
}

void sub_1D4AA272C()
{
}

uint64_t sub_1D4AA2750(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1860
                                * ((v4 & (2 * (*(unsigned __int8 *)(a2 + 5) - 242)))
                                 + ((*(unsigned __int8 *)(a2 + 5) - 242) ^ (((a3 - 1082151348) & 0xD7D6FF3D) - 1535063227)) == v5)) ^ a3)))();
}

uint64_t sub_1D4AA27AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8 * ((59 * (a8 + 1 != v11 + 20)) ^ a6)))(v9, a2, v8);
}

uint64_t sub_1D4AA2870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                       + 8
                                                                       * (int)(((a32 - 713989013 < (a3 - 21))
                                                                              * ((a3 + 23) ^ 0xF2)) ^ (a3 + 866))))(a1, a2, a3, a4);
}

uint64_t sub_1D4AA28C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v37 = (_DWORD *)(a27 + 24 * v31);
  *int v37 = v35;
  v37[1] = v32;
  *(void *)(v33 + 24 * v31 + 16) = a7;
  v37[4] = HIDWORD(a29);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((((*(_DWORD *)(a3 + 48 * v36 + 32) + 1541543622) < 0x80000003) * ((a9 + 1140) ^ 0x34C)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_1D4AA2938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((255 * (a14 == ((v14 + ((v15 - 1385) | 0x346) - 189) ^ ((v15 - 982) | 0x402)))) ^ v15)))();
}

void sub_1D4AA2980()
{
}

void sub_1D4AA2B54()
{
}

uint64_t sub_1D4AA2C50()
{
  unsigned int v4 = ((v3 + 829) ^ 0xADE96592 ^ (v3 + 904485718) & 0xCA16A5B5) + v1;
  BOOL v5 = v4 < 0xF2628EFA;
  BOOL v6 = v2 - 228421894 < v4;
  if (v2 > 0xD9D7105 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((67 * v6) | v3)))();
}

uint64_t sub_1D4AA2CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1D4AA2CE8(a1, a2, a3, a4, 0, a6, v7 & 0xFFFFFFE0, (v8 + v6));
}

uint64_t sub_1D4AA2CE8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7, int a8)
{
  uint64_t v13 = (a4 + v11 - a5);
  long long v14 = *(_OWORD *)(v10 + v13 - 15);
  long long v15 = *(_OWORD *)(v10 + v13 - 31);
  uint64_t v16 = v9 + v13;
  *(_OWORD *)(v16 - 15) = v14;
  *(_OWORD *)(v16 - 31) = v15;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a5 + (a8 | 2) - 674 == a7) * v12) ^ (a8 + 1004))))();
}

void sub_1D4AA2D34()
{
}

uint64_t sub_1D4AA2D68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)(*(void *)(a1 + 8) + v4) == (v2 & 0x47F01FB9) + 1006 + v3)
                                * ((v2 & 0x47F01FB9 ^ 0x7DA) - 1545)) ^ v2 & 0x47F01FB9)))();
}

uint64_t sub_1D4AA2DB0@<X0>(int a1@<W8>)
{
  if (v2 + a1 >= 0) {
    unsigned int v4 = v2 + a1;
  }
  else {
    unsigned int v4 = -(v2 + a1);
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 - 597969673) & 0x23A447F4) - 137) * (v4 > 0x82)) ^ v1)))();
}

uint64_t sub_1D4AA2DF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v11 = v10 + (a3 ^ a5) + *(unsigned __int8 *)(a2 + 9) - 432;
  BOOL v13 = (v8 & (2 * v11)) + (v11 ^ v9) == v9 && (v6 + v5 + 4) < 0xC9;
  return (*(uint64_t (**)(void))(v7 + 8 * ((2520 * v13) ^ a3)))();
}

uint64_t sub_1D4AA2E44(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v6 + 8 * (v7 + 1590)))(a1, 0);
  if (result == 16)
  {
    v3 += 7;
    goto LABEL_7;
  }
  if (result == 12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v4 ^ 0xA26)))(a1);
    int v10 = v3;
    goto LABEL_8;
  }
  if (result)
  {
    v3 += 6;
    goto LABEL_7;
  }
  void *v5 = a1;
  int v10 = -1049201532;
LABEL_8:
  *(_DWORD *)(v1 + 12) = v10 ^ v2;
  return result;
}

uint64_t sub_1D4AA2ECC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2687
                                * (*(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + 4 * (v2 + v4 - 1)) == ((v3 + 5 * ((v1 + 118) ^ 0x37D) - 767) ^ (v1 + 118) ^ 0x7A))) ^ (v1 + 118))))();
}

uint64_t sub_1D4AA2F3C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((861 * (((v1 - 899) & v0) == 0)) ^ (v1 - 791))))((v1 - 123));
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

void sub_1D4AA2FAC(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x139154EEB4327ECLL) = (((v3 + v2) * (v1 - 674146141)) ^ 0x77FDFFFB)
                                        - 272646466
                                        + ((2 * (v3 + v2) * (v1 - 674146141)) & 0xEFFBFFF6);
}

uint64_t sub_1D4AA3038(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a3 + a1 + (((v3 - 1090) | 0x44) ^ 0x9A148210) > 7) * (((v3 - 1617) | 1) ^ 0x2DB)) ^ v3)))();
}

uint64_t sub_1D4AA30BC(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  int v11 = *(uint64_t (**)(void))(v7 + 8 * (v8 - 2044));
  uint64_t v12 = *v10;
  unsigned int v13 = a3 + 8 + a2;
  *(unsigned char *)(*v10 + v13) = (v5 ^ HIBYTE(a5)) - (v6 & (2 * (v5 ^ HIBYTE(a5)))) - 21;
  *(unsigned char *)(v12 + v13 + 1) = (BYTE2(a5) ^ v9) - 2 * ((BYTE2(a5) ^ v9) & 0xEF ^ BYTE2(a5) & 4) - 21;
  *(unsigned char *)(v12 + v13 + 2) = (BYTE1(a5) ^ 3) - 2 * ((BYTE1(a5) ^ 3) & 0xEF ^ BYTE1(a5) & 4) - 21;
  *(unsigned char *)(v12 + v13 + 3) = a5 ^ 0x78;
  return v11();
}

uint64_t sub_1D4AA30CC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  a10 = (v14 + 435) ^ ((((&a10 ^ 0xED2B6ED0) & 0x4F44989 | ~(&a10 ^ 0xED2B6ED0 | 0x4F44989)) ^ 0x7BD4C0AF)
                     * v15);
  a11 = (uint64_t)&a7 + a1 + 4;
  a12 = a5;
  uint64_t v17 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v14 + 1766)))(&a10);
  return sub_1D4A9BA5C(v17, v18, v19, v20, v21, v22, v23, v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1D4AA3144@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v5 = a2 - 188;
  (*(void (**)(void, uint64_t, void))(v3 + 8 * (a2 + 1519)))(*v7, a1, ((a2 - 188) ^ 0xDBF12492) + v8);
  *(_DWORD *)(v4 - 200) = (v5 + 2138962848) ^ (535753261
                                             * ((1828448706 - ((v4 - 200) | 0x6CFBE9C2) + ((v4 - 200) | 0x9304163D)) ^ 0x99F01812));
  uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v5 ^ 0xB46)))(v4 - 200);
  *(_DWORD *)(v2 + 36) = v9;
  return result;
}

uint64_t sub_1D4AA3234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = v3 == ((v4 + 1988889500) & 0x8973F38C ^ 0x1F5F6803);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8 * ((v6 | (2 * v6)) ^ (v4 - 215))))(a1, a2, a3, 3768594526);
}

uint64_t sub_1D4AA3288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((104 * ((a8 + 1 + v9) < 0x30)) ^ v8)))();
}

void sub_1D4AA335C()
{
}

uint64_t sub_1D4AA3368()
{
  int v5 = *(unsigned __int8 *)(v0 + v3 - 0x7AC82A126901FFA0)
     - (*(unsigned __int8 *)(v1 + v3 - 0x7AC82A126901FFA0) ^ 0xEB);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((3095
                                * ((v5 ^ 0xF9FDE26) + ((940 * (v2 ^ 0x4A4)) ^ 0xF47DF758) + ((2 * v5) & 0x1F3FBC4C) == 69062182)) ^ v2)))();
}

uint64_t sub_1D4AA33FC()
{
  unsigned int v3 = LODWORD(STACK[0x58C]) + 1247770102;
  int v4 = ((v1 + 1288164705) < 0xC8B94159) ^ (v3 < (v0 ^ 0xC8B94088));
  BOOL v5 = v3 < v1 + 1288164705;
  if (v4) {
    BOOL v5 = (v1 + 1288164705) < 0xC8B94159;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v5 * ((v0 + 405) ^ 0x362)) ^ v0)))();
}

uint64_t sub_1D4AA3474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((234
                                * (((*(_DWORD *)(v9 + v10 * (uint64_t)a8 + 32) == a6) ^ (3 * (v8 ^ 0xA6))) & 1)) ^ v8)))();
}

uint64_t sub_1D4AA34B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  unsigned int v38 = v35 + v34 + 562855979;
  if (v38 <= 0x40) {
    int v39 = 64;
  }
  else {
    int v39 = v38;
  }
  BOOL v40 = !__CFADD__(v38 - 1, v36 + v39);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((((v33 ^ 6) - 1831) * v40) ^ v33)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

void sub_1D4AA3504(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v1 = 235795823 * (((a1 | 0x1A7DF74B) - (a1 | 0xE58208B4) - 444462924) ^ 0x8ED0BE12);
  int v2 = *(_DWORD *)(a1 + 40) ^ v1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  int v6 = *(_DWORD *)(a1 + 64) - v1;
  unsigned int v7 = 1374699841 * ((2 * (&v9 & 0x59A7A858) - &v9 + 643323809) ^ 0x4BAC4FA8);
  unsigned int v14 = ((*(_DWORD *)a1 ^ v1) - ((2 * (*(_DWORD *)a1 ^ v1) - 1169784626) & 0xE44E73D0) + 1330281039) ^ v7;
  uint64_t v15 = v3;
  int v16 = v6 - v7 - 2 * ((v6 + 51074400) & 0x23381E15 ^ v6 & 0x14) + 641954657;
  int v10 = v7 ^ (v2 + 1695027287);
  uint64_t v9 = v5;
  uint64_t v13 = v4;
  uint64_t v11 = v5;
  int v8 = (char *)*(&off_1F2C91B30 + v2 - 13) - 4;
  (*(void (**)(uint64_t *))&v8[8 * (v2 ^ 0x98B)])(&v9);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4AA36D4()
{
  int v4 = 628203409 * ((2 * ((v3 - 200) & 0x58898618) - (v3 - 200) + 662075876) ^ 0xA5FE75D7);
  *(void *)(v3 - 200) = STACK[0x650];
  *(_DWORD *)(v3 - 192) = v4 + (v1 ^ 0x332) - 497;
  *(_DWORD *)(v3 - 18_Block_object_dispose(&STACK[0x368], 8) = v0 - v4 - 813338398;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 ^ 0xFA3)))(v3 - 200);
  return ((uint64_t (*)(uint64_t))STACK[0x5E8])(v5);
}

uint64_t sub_1D4AA3778()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 + v0 - 268107771 < ((v2 - 1641) ^ 0xCCu)) * (v2 ^ 0x73D)) ^ v2)))();
}

uint64_t sub_1D4AA385C()
{
  return 4294925278;
}

uint64_t sub_1D4AA3864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  return (*(uint64_t (**)(void))(v36 + 8 * ((52 * (v38 >= (a36 & 0x68D46FD ^ 0x22906D22u))) ^ (v37 - 40560973))))();
}

void sub_1D4AA38B8()
{
}

uint64_t sub_1D4AA38E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7 = STACK[0x3F0];
  unint64_t v8 = STACK[0x290];
  STACK[0x3E0] = STACK[0x290] + 2353;
  STACK[0x3D8] = v7 + 49;
  STACK[0x3D0] = v8 + 2333;
  STACK[0x3C8] = v7 + 29;
  STACK[0x3B8] = v8 + 2313;
  STACK[0x3B0] = v7 + 9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8 * (v5 - 539)))(a1, 64052174, 3623878656, a4, a5, 3080894364);
}

uint64_t sub_1D4AA396C@<X0>(int a1@<W8>)
{
  BOOL v3 = (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ 0xE4A)))(a1 ^ 0x1F5F6FDB ^ (v1 - 1863) ^ 0x45Cu) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 * (((v1 - 1863) | 0x845) ^ 0x879)) ^ v1)))();
}

uint64_t sub_1D4AA39D4@<X0>(void *a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  *(unsigned char *)(*a1 + a4 + a5 + (a2 ^ 0x14Bu) - 14) = ((a3 ^ v7) >> v8) - ((2 * ((a3 ^ v7) >> v8)) & 0xD6) - 21;
  return (*(uint64_t (**)(void))(v5 + 8 * (a2 ^ (3096 * (a4 - 1 == v6)))))();
}

uint64_t sub_1D4AA3A34()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 + 236) | (32 * (STACK[0x5C0] != 0)))))();
}

uint64_t sub_1D4AA3A58@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((((v1 - 1185) | 0x10) - 194) * (v2 == 1559351648)) ^ (v1 - 1197))))();
}

void Fc3vhtJDvr(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4) {
    BOOL v5 = a5 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D4AA3B34()
{
  STACK[0x5E0] = STACK[0x380];
  return ((uint64_t (*)(void))STACK[0x3D0])();
}

uint64_t sub_1D4AA3B4C@<X0>(int a1@<W8>)
{
  int v9 = a1 - 1895;
  int v10 = v9 ^ 0x101;
  unint64_t v11 = STACK[0x460];
  int v12 = STACK[0x5A0];
  int v13 = ((LODWORD(STACK[0x5A0]) << (v9 ^ 0x42)) + 937577764) & 0x46703C02;
  unsigned int v14 = 1374699841 * ((~(v6 | 0x6602CE5C) + (v6 & 0x6602CE5C)) ^ 0xF40929AA);
  v1[4] = v4;
  unint64_t *v1 = v11;
  *(_DWORD *)(v8 - 192) = (v9 + 1695027129) ^ v14;
  *(_DWORD *)(v8 - 160) = (v3 - ((2 * v3 + 959456088) & 0xE44E73D0) + 247417748) ^ v14;
  v1[6] = v2;
  *(_DWORD *)(v8 - 144) = v12 - v14 - v13 + 2133410963;
  v1[2] = v5;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v7 + 8 * (v9 ^ 0x86D)))(v8 - 200);
  int v16 = *(_DWORD *)(v8 - 176);
  LODWORD(STACK[0x5D8]) = v16;
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8
                                            * ((1091 * (v16 == ((((v10 + 1270464011) & 0xB44645FA) + 19) ^ 0x1F5F6FDC))) ^ v10)))(v15);
}

uint64_t sub_1D4AA3C50@<X0>(unint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, unsigned int a7@<W6>, void *a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v42 = 4 * (a6 + 1 + a5);
  unint64_t v43 = (*(_DWORD *)(a29 + v42) ^ v29) + (a4 ^ HIDWORD(a1)) + a7 * (unint64_t)(*(_DWORD *)(*a8 + v42) ^ v29);
  unint64_t v44 = HIDWORD(v39)
      + v34 * (unint64_t)(*(_DWORD *)(*v37 + v42) ^ v29)
      + ((v43 + a2 - (((v41 + 294) ^ a9) & (2 * v43))) ^ v38);
  *(_DWORD *)(a29 + 4 * (a6 + a5)) = v44 + v29 - (v30 & (2 * v44));
  if (v36 > v33 != a6 + a3 < v31) {
    BOOL v45 = v36 > v33;
  }
  else {
    BOOL v45 = a6 + a3 < v40;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((!v45 * v32) ^ v41)))();
}

uint64_t sub_1D4AA3D08@<X0>(unsigned int a1@<W1>, int a2@<W2>, int a3@<W5>, int a4@<W6>, uint64_t a5@<X8>)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 + 223 * (v5 ^ a1) == 1134) * ((v5 + a2) & a3 ^ a4)) ^ v5)))();
}

uint64_t sub_1D4AA3D44(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((629 * (v4 + 1 == v6 + 64)) ^ a4)))();
}

void sub_1D4AA3E04()
{
}

uint64_t sub_1D4AA3E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * ((((v5 - 40559706) ^ 0x74B ^ (76 * (v5 ^ (v5 + 7))))
                                                                                  * (v4 <= 0xD2EEE1BE)) ^ (v5 - 40560549))))(a1, a2, a3, a4, 40561189);
}

uint64_t sub_1D4AA3E80@<X0>(int a1@<W1>, int a2@<W3>, unsigned int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(unsigned __int8 *)(v3 + (a1 + v4 - 1 - 1)) == (((a3 - 85) | 0xA7) + 44))
                                * a2) ^ a3)))();
}

uint64_t sub_1D4AA3EC8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9)
{
  BOOL v11 = a9 < 0x33CC802C;
  if (v11 == v9 - 783700472 < ((a1 - 1249014558) & 0x4A726DFAu) + 869040122) {
    BOOL v11 = v9 - 783700472 < a9;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (((4 * !v11) | (8 * !v11)) ^ a1)))();
}

uint64_t sub_1D4AA3F50@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  unsigned int v56 = *(_DWORD *)(&a39 + ((v54 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v54 + a2)) = ((v56 >> (v52 + 28)) ^ 0xDB)
                                            - ((2 * ((v56 >> (v52 + 28)) ^ 0xDB)) & 0xD6)
                                            - 21;
  *(unsigned char *)(a1 + (v54 + a2 + 1)) = (BYTE2(v56) ^ 0xD1)
                                                - 2 * ((BYTE2(v56) ^ 0xD1) & 0xEF ^ BYTE2(v56) & 4)
                                                - 21;
  *(unsigned char *)(a1 + (v54 + a2 + 2)) = (BYTE1(v56) ^ 0x5B)
                                                - 2 * ((BYTE1(v56) ^ 0x5B) & 0xEF ^ BYTE1(v56) & 4)
                                                - 21;
  *(unsigned char *)(a1 + (v54 + a2 + 3)) = v56 ^ 0x25;
  BOOL v57 = v54 - 1242569786 < (a51 + 1907131667);
  if (v54 - 1242569786 < v51 != a51 + 1907131667 < v51) {
    BOOL v57 = a51 + 1907131667 < v51;
  }
  return (*(uint64_t (**)(void))(v55 + 8 * ((v57 * v53) ^ v52)))();
}

uint64_t sub_1D4AA4044@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((12 * ((v1 - 14968390) & 0xE463CB ^ 0x13A)) ^ 0x55E)
                                * ((a1 - 1535022908) > 0x7FFFFFFE)) ^ v1)))();
}

uint64_t sub_1D4AA40A8(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v2 = 1374699841 * (a1 ^ 0x6DF41809);
  int v3 = *(_DWORD *)(a1 + 8) ^ v2;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)a1;
  unsigned int v8 = 1224239923 * ((((2 * &v10) | 0x912C61DA) - &v10 + 929681171) ^ 0x3A25CD3A);
  int v11 = ((*(_DWORD *)(a1 + 56) + v2) ^ 0x1AC2E1FE)
      - v8
      + ((2 * (*(_DWORD *)(a1 + 56) + v2)) & 0x73F5FFFE ^ 0x42703C02)
      + 2121256946;
  unsigned int v16 = v3 - 1695026343 + v8;
  uint64_t v13 = v4;
  uint64_t v14 = v6;
  uint64_t v10 = v7;
  uint64_t v12 = v5;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F2C91B30 + (v3 & 0x2F2A498))
                                                + 8 * (v3 ^ 0x650819EC)
                                                - 4))(&v10);
  *(_DWORD *)(a1 + 24) = v15;
  return result;
}

uint64_t sub_1D4AA4208(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

void sub_1D4AA4220(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  int v2 = (char *)*(&off_1F2C91B30 + (v1 ^ 0x51A)) - 4;
  uint64_t v3 = *(void *)&v2[8
                    * ((((*(uint64_t (**)(uint64_t))&v2[8 * v1 + 7256])(32) == 0) * (((v1 + 14) | 2) - 1410)) | v1)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4AA42C4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1995 * (v2 == v1 + v0 - 823 + ((v0 + 940159993) & 0xC7F64BFF) - 972)) ^ v0)))();
}

uint64_t sub_1D4AA4318@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 ^ 0x593) + 7) ^ 0x261) * (v2 == v1)) ^ a1)))();
}

void sub_1D4AA436C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

void sub_1D4AA43B8()
{
}

uint64_t sub_1D4AA43C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v53 = *(void *)(v49 + 24);
  *(int8x16_t *)(v52 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v49 + 16) - 0x6D40EE9100C99969), (int8x16_t)xmmword_1D54D34D0);
  if (v50) {
    BOOL v54 = v53 == 0x7785963AF3444772;
  }
  else {
    BOOL v54 = 1;
  }
  int v55 = v54;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * (int)((46 * v55) ^ a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1D4AA4434@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((23 * (*v1 == ((a1 - 873407617) & 0x340F1FAD ^ 0x30D))) | a1)))();
}

uint64_t sub_1D4AA4480@<X0>(int a1@<W1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a2 - 494) ^ (a2 - 492)) * (v2 == a1)) ^ a2)))();
}

uint64_t sub_1D4AA44B0()
{
  BOOL v10 = v3 > 0x694BF961;
  uint64_t v11 = (v6 - 1845490069);
  *(unsigned char *)(v8 + v11) = *(unsigned char *)(*(void *)(v7 + 8 * (v1 & 0x2371D17D)) + (v11 & 0xF) - 4) ^ *(unsigned char *)(v0 + v11) ^ (23 * ((v6 + 107) & 0xF)) ^ *(unsigned char *)(*(void *)(v7 + 8 * (v1 ^ 0x6EA)) + (v11 & 0xF) - 8) ^ *(unsigned char *)(*(void *)(v7 + 8 * (v1 - 1638)) + (v11 & 0xF) - 3);
  LODWORD(v11) = v1 - 321 + v6 + 682889084;
  int v12 = v10 ^ (v11 < v2);
  BOOL v13 = v11 < v4;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v10 * v5) ^ v1)))();
}

uint64_t sub_1D4AA4574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  unint64_t v41 = STACK[0x290] + 2048;
  LODWORD(STACK[0x5D0]) = 2;
  STACK[0x600] = 0;
  LODWORD(STACK[0x5A4]) = 0;
  LODWORD(STACK[0x4EC]) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (((((a8 - 1890) & v39) == 0) * (((a8 - 655651177) & 0x27146E5F) - 1092)) ^ a8)))(a1, a2, a3, a4, a5, v41, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_1D4AA45D4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 - 1846183468) & 0x6E0A85FB ^ (41 * (v0 > 1)))))();
}

uint64_t sub_1D4AA46F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(v5 - 220 + a2 + a1) = 0xEBEBEBEBEBEBEBEBLL;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v3 & 0x38) == 8) * (((v2 - 585474134) & 0x22E5A1C6) - 232)) ^ v2)))();
}

uint64_t sub_1D4AA474C(uint64_t a1, uint64_t a2)
{
  _DWORD *v4 = v4[623];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8 * ((455 * (v3 != 328438041)) ^ v2 ^ 0x63)))(a1, a2, 4251303770);
}

void sub_1D4AA479C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D4AA4804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8
                                                                                * (((4
                                                                                   * (((v5 == 0) ^ (79 * (v6 ^ 0x14) + 1)) & 1)) & 0xF7 | (8 * (((v5 == 0) ^ (79 * (v6 ^ 0x14) + 1)) & 1))) ^ v6)))(a1, a2, a3, a4, a5);
}

uint64_t sub_1D4AA484C()
{
  return sub_1D4AA486C(((v1 + v0 - 291) & 0x1FFFFFFF0) + 1922694427);
}

uint64_t sub_1D4AA486C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X7>, unsigned int a3@<W8>)
{
  *(int8x16_t *)(a1 + (v3 + v6 + v4)) = vaddq_s8(vsubq_s8(*(int8x16_t *)(a2 + v4), vandq_s8(vaddq_s8(*(int8x16_t *)(a2 + v4), *(int8x16_t *)(a2 + v4)), v8)), v9);
  return (*(uint64_t (**)(void))(v7 + 8 * (int)((399 * ((a3 ^ 0x436) + v4 == v5)) ^ a3)))();
}

void sub_1D4AA48C0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D4AA4940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (int)(((((v8 + 161746698) ^ 0x9A4113B) + ((v8 + 161746698) & 0xF65BEE7F) - 2311) * (v7 == v9)) ^ v8)))(a1, a2, a3, a4, a5, a6, a7, v10);
}

uint64_t sub_1D4AA4988()
{
  unint64_t v3 = STACK[0x258];
  unint64_t v4 = STACK[0x530];
  STACK[0x470] = *(void *)(v2 + 8 * (v1 - 1077));
  STACK[0x5E0] = v0 + 112;
  STACK[0x528] = v4;
  if (v4) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  return (*(uint64_t (**)(void))(v2 + 8 * ((496 * v6) ^ (4 * (v1 ^ 0x564)))))();
}

void sub_1D4AA49C4()
{
}

uint64_t sub_1D4AA49CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  unsigned int v16 = v14 + 1363 + (a13 ^ v13) - ((v14 ^ 0xD7986966) & (2 * (a13 ^ v13))) - 338940397;
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((63 * (((2 * v16) & 0xBF57FFBE ^ 0x97106BA8) + (v16 ^ 0xB467CA2B) - 34946 != 1605072733)) ^ v14)))();
}

uint64_t sub_1D4AA4A54(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8 * (((a6 + 3370 + v7 + ((a6 + 2698) ^ a2)) * (v8 == a5)) ^ (a6 + 2698))))(0);
}

uint64_t sub_1D4AA4A88(uint64_t a1)
{
  LODWORD(STACK[0x5D8]) = v2 + 97;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (((v3 != 0) * ((((v1 + 1049) ^ 0x6E7) - 75) ^ (v1 + 446))) ^ (v1 + 634))))(a1, v3);
}

void sub_1D4AA4A98(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D4AA4AFC@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * (((((v4 + a1 == 1) ^ (a3 + 105 + v3)) & 1) * a2) ^ (a3 + 105))))();
}

uint64_t sub_1D4AA4B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v10 = (a6 + 170801340) & 0xF5D1C5DF;
  int v11 = (v10 - 566770496) & 0x21C83EFE;
  void *v7 = a1;
  *uint64_t v6 = v16 ^ 0x1F5F6B1A ^ v10;
  unsigned int v12 = (v11 + 490337891) & 0xE2C607EF;
  uint64_t v19 = v14;
  unsigned int v18 = v11 + (v17 ^ 0xAF40E2F) * v8 + 227;
  (*(void (**)(unsigned char *))(v9 + 8 * (v11 ^ 0xCA9)))(v17);
  uint64_t v19 = v15;
  unsigned int v18 = v12 + ((((2 * v17) | 0xC2DB3190) - v17 + 512911160) ^ 0xEB9996E7) * v8 + 656;
  (*(void (**)(unsigned char *))(v9 + 8 * (int)(v12 ^ 0xA5A)))(v17);
  return 0;
}

uint64_t sub_1D4AA4C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * ((((v6 ^ 0x4D9) - 931)
                                                                                           * (v8 == 0)) ^ (v6 - 1766))))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1D4AA4CB0()
{
  int v7 = v4 + 4;
  int v8 = *(_DWORD *)(v3 + ((v7 - 109046529) & 0xFFFFFFFC));
  *(unsigned char *)(v2 + (v7 - 109046529)) = v8 ^ v5;
  *(unsigned char *)(v2 + (v7 - 109046528)) = (BYTE1(v8) ^ 0x5B)
                                                  + ~(2 * ((BYTE1(v8) ^ 0x5B) & 0xEF ^ BYTE1(v8) & ((v1 - 110) ^ 0x5F)))
                                                  - 20;
  *(unsigned char *)(v2 + (v7 - 109046527)) = (BYTE2(v8) ^ 0xD1)
                                                  - 2 * ((BYTE2(v8) ^ 0xD1) & 0xEF ^ BYTE2(v8) & 4)
                                                  - 21;
  *(unsigned char *)(v2 + (v7 - 109046526)) = (HIBYTE(v8) ^ 0xDB)
                                                  - 2 * ((HIBYTE(v8) ^ 0xDB) & 0xEF ^ HIBYTE(v8) & 4)
                                                  - 21;
  unsigned int v9 = *v0 - 1041676548;
  BOOL v10 = v9 < 0x118452EE;
  BOOL v11 = v7 + 184838129 < v9;
  if ((v7 + 184838129) < 0x118452EE != v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((7 * v11) ^ v1)))();
}

uint64_t sub_1D4AA4CC8()
{
  BOOL v3 = **(_DWORD **)(v2 + 8 * (v0 - 1459)) == ((v0 + 256) ^ 0x6CA);
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((2 * ((((v0 + 412) ^ v3) & 1) == 0)) & 0xDF | (32
                                                                               * (((v0 - 100) ^ ~v3) & 1))) ^ v0)))();
}

void sub_1D4AA4D24(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (3804331 * ((2 * (a1 & 0x520CC9FF) - a1 - 1376569856) ^ 0xD32613F6));
  uint64_t v2 = (char *)*(&off_1F2C91B30 + (v1 ^ 0x6B7)) - 4;
  uint64_t v3 = *(void *)a1;
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * (v1 ^ 0xEC7)])((char *)*(&off_1F2C91B30 + (v1 ^ 0x68C)) - 8, sub_1D4ABA8E0);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D4AA4DF8@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  unsigned int v6 = (((a1 + 46) | 0x4F8) + 474759170) & 0xE3B3BAD7;
  int v7 = v3 + v2;
  int v8 = (v6 ^ 0xD3) + v3;
  *(_DWORD *)(*(void *)(v4 - 0x139154EEB4327E8) + 4 * v7) = v5;
  *(_DWORD *)(v4 - 0x139154EEB4327ECLL) = v8;
  int v9 = v8 + v2;
  if (v8 + v2 < 0) {
    int v9 = -v9;
  }
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)((2275
                                     * ((int)(v2 + (v9 ^ 0xEFFFFFBD) + 2008923900 + ((v9 << (v6 + 47)) & 0xDFFFFF7A) - 1) > (int)(((v6 + 15) ^ 0x162) - 388))) ^ (v6 + 15))))();
}

uint64_t sub_1D4AA4EE0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v3 | (4 * (v0 == ((v3 + 114) ^ (v1 - 1096)) + ((v3 + 114) | 0x440))))))();
}

uint64_t sub_1D4AA4F28@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  int v10 = v2 - 1453877244;
  uint64_t v11 = 4 * (v5 + v3);
  int v12 = (*(_DWORD *)(*(void *)(v8 - 0x139154EEB4327E8) + v11) ^ v4)
      - (*(_DWORD *)(*(void *)(a2 - 0x139154EEB4327E8) + v11) ^ v4);
  *(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + v11) = v4
                                                           + 379 * ((v9 - 1012) ^ 0x112)
                                                           + v12
                                                           - (v7 & (2 * v12))
                                                           - 1137;
  BOOL v14 = v5 + 763157959 > 693606403 || v5 + 763157959 < v10;
  return (*(uint64_t (**)(void))(v6 + 8 * ((11 * v14) ^ (v9 - 1012))))();
}

uint64_t sub_1D4AA504C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unint64_t *a16)
{
  unsigned int v20 = v18 + 565;
  a14 = (v20 + 210) ^ (1374699841
                     * ((&a14 - 762734092 - 2 * (&a14 & 0xD28999F4)) ^ 0xBF7D81FD));
  a15 = &STACK[0x8DE5192BDC53186];
  a16 = a11;
  (*(void (**)(unsigned int *))(v17 + 8 * (v20 + 1541)))(&a14);
  a14 = (v20 + 210) ^ (1374699841
                     * ((&a14 + 2125390926 - 2 * (&a14 & 0x7EAEE44E)) ^ 0x135AFC47));
  a15 = &STACK[0x8DE5192BDC5318A];
  a16 = a11;
  (*(void (**)(unsigned int *))(v17 + 8 * (v20 ^ 0xA3F)))(&a14);
  a14 = (v20 + 695) ^ (1755732067
                     * ((791046139 - (&a14 | 0x2F2667FB) + (&a14 | 0xD0D99804)) ^ 0xE1F25DF));
  a15 = a11;
  uint64_t v21 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v20 + 1546)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((468
                                              * (((37 * (((v20 + 37) | 0x18) ^ (v19 + 32))) ^ (a16 == v16)) & 1)) ^ v20)))(v21);
}

uint64_t sub_1D4AA51E8()
{
  int v6 = *(_DWORD *)(v3 + 52);
  unsigned int v7 = 3804331 * ((v2 - 590727306 - 2 * (v2 & 0xDCCA3776)) ^ 0xA21F1280);
  uint64_t v8 = (void *)(v5 - 200);
  void v8[4] = v1;
  void v8[5] = v3 + 0x7785963AF3444796;
  _DWORD v8[2] = &STACK[0x1980];
  int v9 = LODWORD(STACK[0x29C]) ^ v7;
  *(_DWORD *)(v5 - 176) = v7 + 756357858 + v6;
  int v10 = LODWORD(STACK[0x2EC]) - v7 + (((v0 - 47) | 0x448) ^ 0x3E2AFAF0);
  *(_DWORD *)(v5 - 200) = (v0 - 50) ^ v7;
  *(_DWORD *)(v5 - 196) = v10;
  *(_DWORD *)(v5 - 192) = v9;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 + 2291)))(v5 - 200);
  int v12 = *(_DWORD *)(v5 - 188);
  LODWORD(STACK[0x5D8]) = v12;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((1122 * (v12 == 526347143)) ^ v0)))(v11);
}

uint64_t sub_1D4AA52E8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v9 = v4 - 32;
  uint64_t v10 = v7 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((v5 ^ a4 ^ (v6 == 32)) & 1) == 0) | (4 * (((v5 ^ a4 ^ (v6 == 32)) & 1) == 0))) ^ (v5 - 208))))();
}

uint64_t sub_1D4AA52F4(uint64_t a1, uint64_t a2)
{
  qword_1EA710740 = 1226760413 * ((qword_1EA70FB08 - qword_1EA710740) ^ (unint64_t)&v7 ^ 0x5B705F9A26A579D8);
  qword_1EA70FB08 = qword_1EA710740;
  int v2 = *(_DWORD *)(a2 + 4);
  uint64_t v3 = (char *)*(&off_1F2C91B30
               + ((-35 * ((2 * qword_1EA710740) ^ 0xD8)) ^ byte_1D54C8060[byte_1D54D31A0[(-35 * ((2 * qword_1EA710740) ^ 0xD8))] ^ 0xD9])
               - 18)
     - 4;
  if (v2 == 2079419387)
  {
    BOOL v5 = **(unsigned __int8 **)(a2 + 8) == 85;
    __asm { BRAA            X1, X17 }
  }
  if (v2 == 2079419394)
  {
    int v4 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X3, X17 }
  }
  return 4294925278;
}

uint64_t sub_1D4AA54A0@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v3 + 4 * (v7 + v5)) = *(_DWORD *)(*v4 + 4 * (v7 + v5));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v7 - 1 == v1) * v6) ^ v2)))();
}

uint64_t sub_1D4AA54D8@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 + ((v7 + (v2 - 314) + 1129) & (v3 + v6))) = *(unsigned char *)(v5 + a2 + a1);
  return (*(uint64_t (**)(void))(v8 + 8 * ((255 * ((v6 + v3 + 1) > 0x3F)) ^ v2)))();
}

uint64_t sub_1D4AA552C(int a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5, uint64_t a6)
{
  *(void *)(a6 + a3) = *(void *)(v8 + a3);
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 == 0) * v7) ^ a1)))();
}

void sub_1D4AA555C()
{
}

uint64_t sub_1D4AA5564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (int)((((v8 - 2361766) & 0xFBFFDBDF ^ (a6 + 312)) * (v6 == v7)) ^ v8)))();
}

uint64_t sub_1D4AA559C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  a11 = (uint64_t)&a7 + a1 + 4;
  a12 = a6;
  a10 = (v14 - 736) ^ (((2 * (&a10 & 0x7F331FB0) - &a10 - 2134056888) ^ 0xED38F841) * v16);
  uint64_t v17 = (*(uint64_t (**)(unsigned int *))(v15 + 8 * (v14 + 595)))(&a10);
  return sub_1D4AA0128(v17, v18, v19, v20, v21, v22, v23, v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

void sub_1D4AA5614()
{
}

uint64_t sub_1D4AA5634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 147 * (v14 ^ 0x1BF);
  int v21 = 1759421093 * ((v19 - 136) ^ 0xB37DB054);
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x368], 8) = v17;
  *(_DWORD *)(v19 - 120) = v14 - v21 + 709;
  *(_DWORD *)(v19 - 136) = v18 - v21 - 808948690 + v20;
  (*(void (**)(uint64_t))(v16 + 8 * (v14 + 1896)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = v20
                         + 1178560073 * ((((v19 - 136) | 0xC9275412) - ((v19 - 136) & 0xC9275412)) ^ 0x73B32C70)
                         + 115;
  *(void *)(v19 - 112) = a13;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x368], 8) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v20 ^ 0xEA1)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((((v20 - 82) ^ (*(_DWORD *)(v19 - 136) > v15)) & 1)
                                              * (v20 - 1582)) ^ v20)))(v22);
}

uint64_t sub_1D4AA5754()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((v0 - 1036076337) & 0x3DC143FE ^ ((v0 + 400) | 0xAD) ^ 0x59A)
                                * (LODWORD(STACK[0x3F8]) == 911095922)) | v0)))();
}

uint64_t sub_1D4AA57BC@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X8>)
{
  *(unsigned char *)(v9 - 220 + (((v6 ^ (a2 + 37)) + 4294967236) & (a4 + v4))) = *(unsigned char *)(v5 + v8 - 659037434)
                                                                                       - ((2
                                                                                         * *(unsigned char *)(v5 + v8 - 659037434)) & 0xD6)
                                                                                       - 21;
  return (*(uint64_t (**)(void))(v7 + 8 * ((28 * ((a3 + a4 + 29) < 0x40)) ^ (a1 + v6 + 1130))))();
}

uint64_t sub_1D4AA5838()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 != v1) * ((v2 ^ 0xBC1) - 949)) ^ v2)))();
}

void sub_1D4AA586C()
{
}

uint64_t sub_1D4AA5910()
{
  int v4 = 628203409
     * ((((v3 - 200) ^ 0x5792EF4A | 0x460CE2BD) - ((v3 - 200) ^ 0x5792EF4A) + (((v3 - 200) ^ 0x5792EF4A) & 0xB9F31D42)) ^ 0x931601C4);
  uint64_t v5 = (void *)(v3 - 200);
  v5[3] = STACK[0x3A8];
  *(_DWORD *)(v3 - 184) = v0 - v4 + 1065;
  *(_DWORD *)(v3 - 180) = v1 - v4 + ((v0 - 1088584759) & 0x40E27D5B) - 1178885781;
  unint64_t v6 = STACK[0x398];
  v5[5] = STACK[0x3E8];
  v5[6] = v6;
  unint64_t v7 = STACK[0x390];
  void *v5 = STACK[0x3A0];
  v5[1] = v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1509)))(v3 - 200);
  return (*(uint64_t (**)(uint64_t, __n128))(v2 + 8 * ((1143 * (*(_DWORD *)(v3 - 168) == 526347143)) ^ v0)))(v8, (__n128)0);
}

uint64_t sub_1D4AA5A20@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((775 * (a2 == (((a1 ^ (a1 - 162)) + 812) ^ (v4 - 62)))) ^ (v3 + a1 + 1019))))();
}

uint64_t sub_1D4AA5A60()
{
  STACK[0x558] = v0;
  return sub_1D4AA3A34();
}

void sub_1D4AA5A80()
{
}

void sub_1D4AA5A8C()
{
}

void sub_1D4AA5DC0(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL) == 1740488377
    || *(_DWORD *)(*(void *)(a1 + 16) - 0x139154EEB4327ECLL) == 1740488377;
  int v1 = *(_DWORD *)a1 - 1225351577 * ((-1557536513 - (a1 | 0xA329E0FF) + (a1 | 0x5CD61F00)) ^ 0x7F4CC716);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1D4AA5EE0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24) = v3;
  unsigned int v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) + 136128528) & 0xD7986BE8) + 1876609532;
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((220
                                             * (((2 * v4) & 0xBF57FFBE ^ 0x97106BA8) + (v4 ^ 0xB467CA2B) - 34946 != 1605072733)) ^ 0x655u)))(0);
}

void sub_1D4AA5F74()
{
}

uint64_t sub_1D4AA5F80()
{
  if (v0 >= 0xBB815AB1) {
    int v2 = *v1 + 1;
  }
  else {
    int v2 = 369238551;
  }
  int *v1 = v2;
  return sub_1D4AB09C0((__n128)0);
}

void sub_1D4AA5F94()
{
}

uint64_t sub_1D4AA5FA0@<X0>(void *a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  *(void *)(*a1 - 0x3F70C0CAD4126774) = v6 + v5 + 8;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((*v4 == v3 + 17 * (a2 ^ 0x329) - 187) * ((17 * (a2 ^ 0x329)) ^ 0xBF)) | (17 * (a2 ^ 0x329)))))();
}

uint64_t sub_1D4AA6010@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * (((((v1 == 0) ^ (a1 - 30)) & 1) * ((a1 - 577) ^ 0x152)) ^ a1)))();
}

uint64_t sub_1D4AA6048@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v20 = 7 * (a1 ^ 0x341);
  *(void *)(v19 - 104) = a17;
  *(void *)(v19 - 144) = a15;
  *(void *)(v19 - 136) = a7;
  *(_DWORD *)(v19 - 112) = a1 + 1224239923 * ((v19 - 1376293115 - 2 * ((v19 - 144) & 0xADF76F95)) ^ 0x5F449242) + 290;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x368], 8) = a17;
  *(void *)(v19 - 120) = a16;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (a1 ^ 0xB94)))(v19 - 144);
  BOOL v22 = v18 + a13 + 2 >= (((v20 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((2 * v22) | (8 * v22) | (v20 + 974))))(v21);
}

uint64_t sub_1D4AA6120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * (((a23 == 2029314997) * (((v23 - 1632357708) & 0x614BCF5B) - 1599)) ^ v23)))();
}

uint64_t sub_1D4AA6178()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((253
                                * (((2 * (v2 - (v3 & 0x6908D056) - 192649173)) & 0xF35EDB6C ^ 0xE108D044)
                                 + ((v2 - (v3 & 0x6908D056) - 192649173) ^ 0x8D2B059D)
                                 + ((v1 + 951469696) & 0xC749B7DF)
                                 - 206
                                 - 1090522531 != 951018786)) ^ v1)))();
}

uint64_t sub_1D4AA6210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, int a19, int a20,int a21,int a22)
{
  if (v25 >= 0xC32F6DA) {
    int v26 = -1247212205;
  }
  else {
    int v26 = 1646191814;
  }
  int v27 = 460628867 * ((&a17 + 663701623 - 2 * ((unint64_t)&a17 & 0x278F4877)) ^ 0x6B19CA0A);
  a21 = v26 - v27;
  a19 = v27 - 173818905;
  a20 = v27 + v22 - 2024873976;
  a17 = &STACK[0x38223619C320A43];
  a18 = a13;
  uint64_t v28 = (*(uint64_t (**)(unint64_t **))(v24 + 8 * (v22 ^ 0xB86u)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * (((a22 == v23) * ((v22 ^ 0x281) - 263)) ^ v22)))(v28);
}

uint64_t sub_1D4AA62F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v39 = (*(uint64_t (**)(uint64_t, void))(v37 + 8 * (v36 + 1521)))(a11, 0);
  unsigned int v40 = *(_DWORD *)(v38 - 208) - 43663526 - ((2 * *(_DWORD *)(v38 - 208)) & 0xFACB7EB4);
  *(_DWORD *)(v38 - 220) = *(_DWORD *)(v38 - 200) - 43663526 - ((2 * *(_DWORD *)(v38 - 200)) & 0xFACB7EB4);
  *(_DWORD *)(v38 - 216) = v40;
  int v41 = (*(uint64_t (**)(uint64_t))(v37 + 8 * (v36 ^ 0xBB3)))(v39);
  *(_DWORD *)(v38 - 212) = v41 - 43663526 - ((v36 ^ 0xFACB7DFD) & (2 * v41));
  uint64_t v42 = (*(uint64_t (**)(void))(v37 + 8 * (v36 + 1457)))();
  *(_DWORD *)(v38 - 224) = v42 - 43663526 - ((2 * v42) & 0xFACB7EB4);
  return sub_1D4AA63E4(v42, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1D4AA63E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t v50 = 4 * (v48 - 394386889);
  unsigned int v51 = (v42
       + (~*(_DWORD *)(v46 + 4 * (v48 - 394386890)) >> 30)
       - 4 * (*(_DWORD *)(v46 + 4 * (v48 - 394386890)) >= 0)) ^ *(_DWORD *)(v46
                                                                                          + 4
                                                                                          * (v48 - 394386890));
  int v52 = (*(_DWORD *)(a41 + 4 * v47) ^ v42)
      + v47
      + ((v42 + 1664525 * v51 - ((3329050 * v51) & v43)) ^ *(_DWORD *)(v46 + v50));
  *(_DWORD *)(v46 + v50) = v52 + v42 - (v43 & (2 * v52));
  uint64_t v53 = 235795823
      * ((((v49 - 144) | 0x68728E509914D92ELL) - ((v49 - 144) & 0x68728E509914D92ELL)) ^ 0x60C234AE0DB99077);
  int v54 = v53 ^ (v45 - 1713289457);
  *(_DWORD *)(v49 - 136) = v54 ^ 0x6E;
  *(void *)(v49 - 12_Block_object_dispose(&STACK[0x368], 8) = (v48 + 185503750) ^ (unint64_t)v53;
  *(_DWORD *)(v49 - 144) = v54 ^ 0x79;
  *(_DWORD *)(v49 - 140) = v45 - 1713289457 - v53;
  *(_DWORD *)(v49 - 120) = 2064071201 - v53 + v45;
  *(_DWORD *)(v49 - 116) = v53 + 1;
  *(void *)(v49 - 112) = v53 + 579890638;
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(v44 + 8 * (v45 ^ (v41 - 1874))))(v49 - 144);
  return (*(uint64_t (**)(uint64_t))(v44 + 8 * *(int *)(v49 - 104)))(v55);
}

uint64_t sub_1D4AA6538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  *int v42 = 1.9087e37;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v41 + 8 * (v40 ^ 0x8BAu)))(a40);
  __n128 v44 = (__n128)vld1q_dup_f32(v42);
  v45.n128_u64[0] = 0x8000000080000000;
  v45.n128_u64[1] = 0x8000000080000000;
  return sub_1D4AA6624(v43, v44, (__n128)vdupq_n_s32(0x7FFFFFFEu), (__n128)vdupq_n_s32(0x7EB2DFADu), (__n128)vdupq_n_s32(0xFACB7EB4), (__n128)vdupq_n_s32(0xFD65BF5A), v45, (__n128)vdupq_n_s32(0xFB404419));
}

uint64_t sub_1D4AA6624(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, int32x4_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8)
{
  a8.i32[0] = *(_DWORD *)(v13 + ((4 * v8) | 4));
  a8.i32[1] = *(_DWORD *)(v13 + ((4 * v8) | 8));
  a8.i32[2] = *(_DWORD *)(v13 + ((4 * v8) | 0xC));
  int8x16_t v14 = vextq_s8(a1, a8, 0xCuLL);
  int8x16_t v15 = a8;
  v15.i32[3] = *(_DWORD *)(v13 + 4 * (v10 + v8));
  int32x4_t v16 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v15, a2), vandq_s8(v14, a6)), 1uLL), a3);
  v17.i32[0] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v13 + ((4 * v8) | 4)) & 1));
  v17.i32[1] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v13 + ((4 * v8) | 8)) & 1));
  v17.i32[2] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v13 + ((4 * v8) | 0xC)) & 1));
  v17.i32[3] = *(_DWORD *)(v11 + 4 * (v15.i8[12] & 1));
  *(int8x16_t *)(v13 + 4 * v_Block_object_dispose(&STACK[0x368], 8) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v13 + 4 * v8 + 1588), v17), a7), (int8x16_t)vaddq_s32(vsubq_s32(v16, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v16, v16), a4)), a5));
  return (*(uint64_t (**)(void))(v12 + 8 * (v9 | (2 * (v8 != 220)))))();
}

uint64_t sub_1D4AA66E8@<X0>(_DWORD *a1@<X8>)
{
  int v4 = (v3 ^ 0x17F) + *a1 - 239122608;
  int v5 = (v1 - 239121589 < -646116860) ^ (v4 < -646116860);
  BOOL v6 = v1 - 239121589 > v4;
  if (v5) {
    BOOL v6 = v1 - 239121589 < -646116860;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((37 * !v6) ^ v3)))();
}

uint64_t sub_1D4AA6754@<X0>(int a1@<W4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  if ((*(_DWORD *)(v38 + 1428) | 4) == 0x26469CD4) {
    return (*(uint64_t (**)(void))(v40 + 8 * ((1348 * (*(_DWORD *)(a2 + 476) == 5 * a38 + 2115177350)) ^ (a1 - 390))))();
  }
  STACK[0x5E0] = STACK[0x288];
  return v39();
}

uint64_t sub_1D4AA6848()
{
  unsigned int v4 = 6 * (v0 ^ 0xC35E9C40);
  unsigned int v9 = (v3 + v0 + 1428) ^ (1755732067
                         * (((&v9 | 0x7744F355) - (&v9 & 0x7744F355)) ^ 0xA9824E8E));
  uint64_t v11 = v6;
  (*(void (**)(unsigned int *))(v2 + 8 * (int)(v0 ^ 0xC35E94DE)))(&v9);
  unsigned int v10 = v3
      + v0
      + 535753261 * ((((2 * &v9) | 0xA365A42A) - &v9 + 776809963) ^ 0xDB46DC3A)
      + 1343;
  uint64_t v11 = v6;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 + v0 + 2293)))(&v9);
  uint64_t v11 = v8;
  unsigned int v10 = v4 + 535753261 * ((&v9 & 0x5FB4813F | ~(&v9 | 0x5FB4813F)) ^ 0xAABF70EF) + 617;
  (*(void (**)(unsigned int *))(v2 + 8 * (int)(v4 ^ 0xA23)))(&v9);
  return v7 ^ v1;
}

void sub_1D4AA69C0()
{
}

uint64_t sub_1D4AA6A38()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(void *)(v0 - 0x2C138C8FAF40FC22) == 0)
                                * (((v2 - 196) | 0xC4) ^ ((v2 - 204) | 0x880) ^ 0x843)) ^ (v2 + 1303))))();
}

uint64_t sub_1D4AA6AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  return (*(uint64_t (**)(void))(v15
                              + 8 * (((a14 != ((v14 + 1846686950) & 0x91EDCFEF) + 526345280) * (v14 - 622)) ^ v14)))();
}

void sub_1D4AA6AFC(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 24) - 1225351577 * ((2 * (a1 & 0x2B9C6F1D) - a1 + 1415811298) ^ 0x77F948F4);
  if (*(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL) - 1740488377 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL) - 1740488377;
  }
  else {
    unsigned int v3 = 1740488377 - *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL);
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x139154EEB4327ECLL) - 1740488377 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0x139154EEB4327ECLL) - 1740488377;
  }
  else {
    unsigned int v4 = 1740488377 - *(_DWORD *)(v2 - 0x139154EEB4327ECLL);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  v7[1] = (460628867 * ((1088039055 - (v7 | 0x40DA288F) + (v7 | 0xBF25D770)) ^ 0xF3B3550D)) ^ (v1 - 241);
  int v5 = (char *)*(&off_1F2C91B30 + (v1 ^ 0x59D)) - 4;
  (*(void (**)(_DWORD *))&v5[8 * v1 + 8272])(v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1D4AA6C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                               + 8
                                                                               * (int)(((((a7 + 2145469929) & 0x801EBFEB)
                                                                                       - 972)
                                                                                      * ((v8 >> 3) & 1)) ^ a7)))(a1, a2, a3, a4, (v7 - a4));
}

void sub_1D4AA6CD4()
{
}

void sub_1D4AA6CE0()
{
}

uint64_t sub_1D4AA6CF4@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v7 + (v2 ^ v5) + v3 + v6) = *(unsigned char *)(a2 + (v2 ^ v5) + v3 + v6)
                                       - ((2 * *(unsigned char *)(a2 + (v2 ^ v5) + v3 + v6)) & 0xD6)
                                       - 21;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v3 - 1 == a1) * v4) ^ v2)))();
}

uint64_t sub_1D4AA6D3C@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v3 - 0x139154EEB4327E8) + 4 * (v5 - 746716027)) = *(_DWORD *)(*(void *)(v4 - 0x139154EEB4327E8)
                                                                                          + 4 * (v5 - 746716027));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v5 - 1 == v1) * ((v2 + 1347) ^ 0x714)) ^ v2)))();
}

uint64_t sub_1D4AA6DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((6 * (a5 ^ 0x45D)) ^ 0x243) * (v5 == v7)) ^ (a5 - 1079))))();
}

uint64_t sub_1D4AA6DD8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v2 - 243) | 0x82) ^ 0x6EE) * ((v0 - 562684889) < 0x7FFFFFFF)) ^ v2)))();
}

uint64_t sub_1D4AA6E40(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v3 < ((a3 - 731) | 0x128u) - 905) * ((a3 - 731) ^ (v4 + 1710) ^ (v4 + 1129))) ^ a3)))();
}

void sub_1D4AA6E80(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  STACK[0x488] = a1;
  LODWORD(STACK[0x5B0]) = a6;
  JUMPOUT(0x1D4A8BE90);
}

uint64_t sub_1D4AA6EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v12 = v8 + 1;
  *(unsigned char *)(a5 + (v12 + v10)) = ((2 * v9) ^ 0xDE)
                                             + *(unsigned char *)(a1 + a8 - 1922694427)
                                             - ((2 * *(unsigned char *)(a1 + a8 - 1922694427)) & 0xD6)
                                             - 95;
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((1273 * ((v10 + v12 + 1) < 0x40)) ^ v9)))(a1 + 1);
}

void sub_1D4AA6EAC()
{
  STACK[0x370] = v0;
  JUMPOUT(0x1D4A83580);
}

uint64_t sub_1D4AA6EBC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, int a3@<W7>, int a4@<W8>)
{
  *(_OWORD *)(a2 + ((((a4 + a3) & v8) + a1) & (v4 + 16))) = *v6;
  return (*(uint64_t (**)(void))(v7 + 8 * ((422 * (v5 == 16)) ^ a4)))();
}

uint64_t sub_1D4AA6EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  if ((v8 - 2029314978) > 0x1B || ((1 << (v8 + 94)) & 0x8002809) == 0) {
    JUMPOUT(0x1D4A9A964);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11
                                                                                                  + 8 * ((v10 + 1380254246) | (4 * ((a8 & 0xFFFFFFFFFFFFFFFLL) == ((71 * ((v9 + 2) ^ 0x5244FF29) + 68513792) & 0xFBEA8FFF ^ 0x8ELL))))))(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1D4AA6F68()
{
  *(void *)(v0 + 312) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1081));
  JUMPOUT(0x1D4AA9AFCLL);
}

uint64_t sub_1D4AA6F8C(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((*(_DWORD *)(v5 - 140) * (a2 == a3)) ^ (v4 - 24))))();
}

uint64_t sub_1D4AA6FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL v39 = (((_BYTE)a11 + 10) & 0xF) != 0 || a11 == 307381622;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((53 * ((v39 ^ (a7 + 108)) & 1)) ^ ((int)a7 + 109))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1D4AA700C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v12 = 628203409 * ((v11 - 152) ^ 0x82880C33);
  *(void *)(v11 - 112) = v7;
  *(void *)(v11 - 104) = a5;
  *(_DWORD *)(v11 - 136) = v10 - v12 + 1607;
  *(_DWORD *)(v11 - 132) = v8 - v12 + (v10 ^ a1) - 626484705;
  *(void *)(v11 - 152) = a6;
  *(void *)(v11 - 144) = a4;
  *(void *)(v11 - 12_Block_object_dispose(&STACK[0x368], 8) = a7;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(v9 + 8 * (v10 | 0x803)))(v11 - 152);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (int)(((*(_DWORD *)(v11 - 120) == 526347143)
                                                   * (((v10 + 1085784807) & 0xBF483DE5) + 312)) ^ v10)))(v13);
}

uint64_t sub_1D4AA70E4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((976
                                * (((v0 + ((v2 - 433290558) & 0x19D37F7C) - 820) & (2
                                                                                  * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1D4AA7138@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xB8E));
  return v3(v1);
}

uint64_t sub_1D4AA716C(unint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  unint64_t v32 = (a8 ^ HIDWORD(a1)) + HIDWORD(v31) + (*(_DWORD *)(a29 + a16) ^ v29);
  *(_DWORD *)(a29 + 4 * a1_Block_object_dispose(&STACK[0x368], 8) = v32 + v29 - (a2 & (2 * v32));
  *(_DWORD *)(a29 + a16) = (v32 >> (((a7 + 39) & 0xFDu) + 4)) | v29;
  BOOL v34 = a24 - 1548596488 > 1055175262 || a24 - 1548596488 < a23;
  return (*(uint64_t (**)(void))(v30 + 8 * (a7 ^ (15 * v34))))();
}

uint64_t sub_1D4AA7220@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  BOOL v4 = *(_DWORD *)(a1 + 48 * v3 + 36) + 1541543622 < (a2 ^ 0x8000008D);
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v4) | (32 * v4)) ^ a2)))();
}

uint64_t sub_1D4AA7278(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v5
                                                                                        + 8
                                                                                        * (((((v4 - 278457099) & 0x1098E6CF)
                                                                                           - 148)
                                                                                          * (v2 != v3)) ^ v4)))(a1, a2, 2431, 120779723, 4174187572, LODWORD(STACK[0x3F8]));
}

uint64_t sub_1D4AA72CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v40 = *(void *)(a1 + 24);
  *(int8x16_t *)(v39 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(a1 + 40) - 0xC8F409392290867), (int8x16_t)xmmword_1D54D34E0);
  if (v38) {
    BOOL v41 = v40 == 0x7785963AF3444772;
  }
  else {
    BOOL v41 = 1;
  }
  char v42 = v41;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (int)(((((a7 + 14) ^ v42) & 1) * (a7 - 497)) ^ a7)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1D4AA734C()
{
  int v3 = v1 - ((v1 << (((v0 - 26) | 0x41) ^ 0x7C)) & (((v0 + 175) | 0x508) ^ 0x9FC9C81)) - 2063708730;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((55
                                * (((2 * v3) & 0xFDD749DE ^ 0x9D4098C) + (v3 ^ 0xFA15E929) - 1390642336 != 738730063)) ^ v0)))();
}

uint64_t sub_1D4AA73F4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((v0 + 683) | (41
                                             * (((((v0 + 683) ^ 0x28E) + v0 + 711 - 429418260) ^ (2 * v1) & 0xFEFFBFBE)
                                              + (v1 ^ 0xCCC2D14)
                                              - 23251968 != 2115834847)))))();
}

uint64_t sub_1D4AA7468(int a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v10 = (a3 + a1 + a2);
  unint64_t v11 = v10 + ((a5 - 2125) | 0x55Cu) + v8 - 1374;
  uint64_t v12 = (((a5 - 1104) | 0x55) ^ 0x45A) & v10;
  uint64_t v13 = v12 - v10;
  unint64_t v14 = v6 + v13;
  ++v12;
  unint64_t v15 = v6 + v12;
  unint64_t v16 = v5 + v13;
  unint64_t v17 = v5 + v12;
  unint64_t v18 = v7 + v13;
  unint64_t v19 = v7 + v12;
  BOOL v21 = v15 > v8 && v14 < v11;
  if (v17 > v8 && v16 < v11) {
    BOOL v21 = 1;
  }
  int v24 = v19 > v8 && v18 < v11 || v21;
  return (*(uint64_t (**)(void))(v9 + 8 * ((62 * (v24 ^ 1)) ^ a5)))();
}

void sub_1D4AA7504()
{
}

void sub_1D4AA7574(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 1178560073 * (a1 ^ 0xBA947862);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D4AA7640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * (((((33 * (a7 ^ 0x540) - 1006) | 0x246) ^ 0x273)
                                                                                 * (v8 < 0x10)) ^ a7)))(a1, a2, a3, a4, 0);
}

uint64_t sub_1D4AA7680@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v5 = *(_DWORD *)(v2 + v3 * (uint64_t)a1 + 36) - 961679680;
  BOOL v7 = v5 > -2123019490 && v5 < SLODWORD(STACK[0x3B8]);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 * (((a2 - 869056283) & 0x33CCBFBF) + 403)) ^ a2)))();
}

uint64_t sub_1D4AA76F0(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  a1.n128_u16[0] = -5141;
  a1.n128_u8[2] = -21;
  a1.n128_u8[3] = -21;
  a1.n128_u8[4] = -21;
  a1.n128_u8[5] = -21;
  a1.n128_u8[6] = -21;
  a1.n128_u8[7] = -21;
  return sub_1D4AA7728(2906, a3, a4, a5, a6, a3, a1);
}

uint64_t sub_1D4AA7728@<X0>(int a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)(v7 + a3 + a2 + v4) = a4;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 + v4 == v5) * a1) ^ v6)))();
}

uint64_t sub_1D4AA7754@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, __n128 a9@<Q0>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v68 = a8 + 406;
  uint64_t v71 = v68 ^ 0x2C9u;
  uint64_t v69 = (char *)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78AE7;
  *(_DWORD *)uint64_t v69 = 421729911;
  *((void *)v69 + 1) = 0;
  *((_DWORD *)v69 + 4) = 243037779;
  *((_DWORD *)v69 + 6) = 2079419384;
  *((void *)v69 + 4) = 0;
  *((_DWORD *)v69 + 10) = 2079419384;
  *((void *)v69 + 6) = 0;
  v64[14] = (char *)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78AB7;
  *((_DWORD *)v69 + 14) = 2079419384;
  v64[26] = (char *)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78AAFLL;
  *((void *)v69 + _Block_object_dispose(&STACK[0x368], 8) = 0;
  void *v64 = (char *)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78AA7;
  v64[1] = (char *)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78ABFLL;
  *((_DWORD *)v69 + 1_Block_object_dispose(&STACK[0x368], 8) = 2079419384;
  *((void *)v69 + 10) = 0;
  STACK[0x430] = (unint64_t)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78A9FLL;
  v64[18] = (char *)&STACK[0x680] + v66 + v71 - 0x74CFFF0833D78A97;
  v69[88] = 57;
  *(_DWORD *)uint64_t v65 = 421729911;
  *(__n128 *)(v65 + 4) = a9;
  *(_DWORD *)(v65 + 2_Block_object_dispose(&STACK[0x368], 8) = 633261842;
  STACK[0x2E0] = v65 + 28;
  *(_DWORD *)(v65 + 232) = 633261842;
  STACK[0x2D8] = v65 + 232;
  *(_DWORD *)(v65 + 20) = 0;
  *(_DWORD *)(v65 + 24) = 2079419384;
  *(__n128 *)(v65 + 436) = a9;
  *(__n128 *)(v65 + 452) = a9;
  *(void *)(v65 + 46_Block_object_dispose(&STACK[0x368], 8) = 0;
  *(void *)(v65 + 112_Block_object_dispose(&STACK[0x368], 8) = 0xEBEBEBEBEBEBEBEBLL;
  *(void *)(v65 + 1136) = 0xEBEBEBEBEBEBEBEBLL;
  *(void *)(v65 + 1144) = 3958107115;
  *(void *)(v65 + 1152) = 0;
  *(void *)(v65 + 1160) = 0;
  *(__n128 *)(v65 + 116_Block_object_dispose(&STACK[0x368], 8) = a9;
  *(__n128 *)(v65 + 1184) = a9;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8 * v68))(v69, a1, a2, a3, a4, a5, a6, a7, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_1D4AA78A4@<X0>(uint64_t a1@<X8>)
{
  int v6 = STACK[0x36C];
  uint64_t v7 = (LODWORD(STACK[0x36C]) + 874);
  int v8 = *(unsigned __int8 *)(v1 + (v2 + v3)) ^ 0xEB;
  int v9 = ((*(unsigned __int8 *)(v1 + (v2 + v3 + 1)) ^ 0xEB) << (LODWORD(STACK[0x36C]) + 23)) | v8 | ((*(unsigned __int8 *)(v1 + (v2 + v3 + 2)) ^ 0xEB) << 16) | ((*(unsigned __int8 *)(v1 + (v2 + v3 + 3)) ^ 0xEB) << 24);
  *(_DWORD *)(a1 + ((v2 + v3) & 0xFFFFFFFC)) = v9 + v5 - 2 * (v9 & (v5 + 8) ^ v8 & 8);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((903 * ((v2 + 4 + v3) < 0x40)) ^ v6)))(v7);
}

uint64_t sub_1D4AA794C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((LODWORD(STACK[0x3D0]) == 1) * (v0 ^ 0x61E)) ^ v0)))();
}

uint64_t sub_1D4AA79A8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  BOOL v8 = a6 == v6 + ((a1 - 591) ^ 0xBD5) - 2202;
  return (*(uint64_t (**)(void))(v7 + 8 * (((2 * v8) | (32 * v8)) ^ a1)))();
}

uint64_t sub_1D4AA79E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * ((1023
                                                                                           * ((v6 ^ 0x92561DA8) + v5 > 0x37)) ^ (v6 + 419))))(a1, a2, -1839851021, a4, a5, 235);
}

uint64_t sub_1D4AA7A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, uint64_t a11, int a12, unsigned int a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * (((((v14 + ((v13 + 126679689) ^ 0x78CF8A2) - 893) ^ a13) > a10)
                                * (((v13 + 126679689) & 0x10576) - 285)) ^ (v13 + 1795))))();
}

uint64_t sub_1D4AA7A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * (int)((((v7 + 982736462) & 0xC56C9FFF ^ ((v7 ^ 0x6D2) + 80)) * (v6 == a6)) | v7)))();
}

uint64_t sub_1D4AA7AD8(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = **(unsigned __int8 **)(a2 + 8) + (((v4 - 225) | 0x320) ^ 0xFFFFFCE2);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1558 * ((v2 & (2 * v6)) + (v6 ^ v3) == v3)) ^ v4)))();
}

uint64_t sub_1D4AA7B64@<X0>(int a1@<W1>, int a2@<W2>, char a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(v4 + (a2 + a4)) = *(unsigned char *)(v5 + (a2 + a4))
                                           - ((*(unsigned char *)(v5 + (a2 + a4)) << ((a1 + 41) ^ a3)) & v7)
                                           - 21;
  return (*(uint64_t (**)(void))(v8 + 8 * ((15 * (a2 - 1 == v6)) ^ a1)))();
}

uint64_t sub_1D4AA7BAC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((*(void *)(v4 + 24) == 0x5A178A95705CCB00) * ((a4 + 20) ^ 0x68)) ^ a4)))();
}

uint64_t sub_1D4AA7BE8@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v6)) = *(unsigned char *)(v5 + (a2 + v6));
  return (*(uint64_t (**)(void))(v7 + 8 * ((595 * ((((v4 + a3 - 175) | 1) ^ 0xFFFFFDFE) + a2 == a4)) ^ (v4 + a3 - 370))))();
}

uint64_t sub_1D4AA7C30(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, int a8)
{
  *(_DWORD *)(v13 + 4 * v10) = *(_DWORD *)(v13 + 4 * (v10 + ((v8 - 539) | a6)) + a7) ^ a2 ^ *(_DWORD *)(a4 + 4 * (*(_DWORD *)(v13 + 4 * (v10 + 1)) & 1)) ^ ((v11 ^ ((*(_DWORD *)(v13 + 4 * (v10 + 1)) & 0x7FFFFFFE | v9 & 0x80000000) >> 1)) + a1 - (v12 & (2 * (v11 ^ ((*(_DWORD *)(v13 + 4 * (v10 + 1)) & 0x7FFFFFFE | v9 & 0x80000000) >> 1)))));
  return (*(uint64_t (**)(void))(v14 + 8 * (((v10 == 226) * a8) ^ v8)))();
}

uint64_t sub_1D4AA7CA0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  BOOL v7 = a5 < 0xD5567D2B;
  if (v7 == v5 + 1656520720 < ((a1 - 1011) ^ 0xD5567D79)) {
    BOOL v7 = v5 + 1656520720 < a5;
  }
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((54 * v7) ^ a1)))(2276956497);
}

uint64_t sub_1D4AA7D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v49 = 4 * (v46 - 394386889);
  int v50 = *(_DWORD *)(v45 + 4 * (v46 - 394386890));
  unsigned int v51 = (v40 + (~v50 >> 30) - 4 * (v50 >= 0)) ^ v50;
  int v52 = ((v40 + 1566083941 * v51 - ((-1162799414 * v51) & v41)) ^ *(_DWORD *)(v45 + v49)) - v46;
  *(_DWORD *)(v45 + v49) = v52 - ((2 * v52 + 788773778) & v41) + 350723363;
  *(void *)(v48 - 12_Block_object_dispose(&STACK[0x368], 8) = (v46 - 850140057) ^ v47;
  *(void *)(v48 - 112) = a40;
  int v53 = v47 ^ (v44 - 2028129122);
  *(_DWORD *)(v48 - 140) = v44 - 2028129122 - v47;
  *(_DWORD *)(v48 - 136) = v53 ^ 0x6B;
  *(_DWORD *)(v48 - 120) = 2064071201 - v47 + v44;
  *(_DWORD *)(v48 - 116) = v47 + 1;
  *(_DWORD *)(v48 - 144) = v53 ^ 0xEB;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (v44 ^ v42)))(v48 - 144);
  return (*(uint64_t (**)(uint64_t))(v43 + 8 * *(int *)(v48 - 104)))(v54);
}

void sub_1D4AA7E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 *a9)
{
  int v12 = ((*a9 ^ 0xEB) << 24) | ((a9[1] ^ (v9 + 88)) << 16) | ((a9[2] ^ 0xEB) << 8) | a9[3] ^ 0xEB;
  *(_DWORD *)(*(void *)(v10 + 8) - 0x8DE5192BDC53166) = v12 + v11 - ((2 * v12) & 0x3EBED70E);
  JUMPOUT(0x1D4AA7E88);
}

uint64_t sub_1D4AA7EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  v66[25] = *(void *)(v69 + 8 * v64);
  v66[54] = v68;
  v66[55] = v65;
  unint64_t v70 = v66[38];
  uint64_t v71 = (char *)&a9 + v70 - 0x74CFFF0833D7800CLL;
  v66[56] = v71;
  v66[38] = v70 + 320;
  int v72 = *(_DWORD *)(v68 - 0x72E93EC0CCAF573ALL);
  LODWORD(STACK[0x53C]) = v72;
  int v73 = *(_DWORD *)(v68 - 0x72E93EC0CCAF5736);
  LODWORD(STACK[0x458]) = v73;
  int v74 = *(_DWORD *)(v68 - 0x72E93EC0CCAF5732);
  LODWORD(STACK[0x504]) = v74;
  int v75 = *(_DWORD *)(v68 - 0x72E93EC0CCAF572ELL);
  LODWORD(STACK[0x5D4]) = v75;
  int v76 = *(unsigned __int8 *)(v68 - 0x72E93EC0CCAF5722) ^ 0xDD;
  if (v76 == 2)
  {
    LODWORD(STACK[0x588]) = *(_DWORD *)(v68 - 0x72E93EC0CCAF572ALL);
    LODWORD(STACK[0x45C]) = 351843406;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((((((((a8 - 1098) | 0x264) + 660) | 0x82) ^ 0xEB074E39) + 351843406 > 0x3F) * (((((a8 - 1098) | 0x264) - 1755476443) & 0x68A26F7F) + 193)) ^ ((a8 - 1098) | 0x264))))(a1, 64052174, 3623878656, a4, a5, 3080894364, a7, 3687930830);
  }
  else if (v76 == 1)
  {
    LODWORD(STACK[0x45C]) = v67;
    BOOL v78 = v65 >= a64 + v70 || (unint64_t)v71 >= v65 + 64;
    return (*(uint64_t (**)(void))(v69 + 8 * ((((LODWORD(STACK[0x36C]) - 170) ^ (a8 - 874)) * v78) ^ (a8 - 550))))();
  }
  else
  {
    unsigned int v80 = (*(_DWORD *)(v68 - 0x72E93EC0CCAF573ALL) ^ 0xDBD15BCE) + (v72 ^ 0xDBD15BCE);
    *(_DWORD *)(v68 - 0x72E93EC0CCAF573ALL) = v80 - 607036466 - ((2 * v80) & 0xB7A2B79C);
    unsigned int v81 = (*(_DWORD *)(v68 - 0x72E93EC0CCAF5736) ^ 0xDBD15BCE) + (v73 ^ 0xDBD15BCE);
    *(_DWORD *)(v68 - 0x72E93EC0CCAF5736) = v81 - 607036466 - ((2 * v81) & 0xB7A2B79C);
    unsigned int v82 = (*(_DWORD *)(v68 - 0x72E93EC0CCAF5732) ^ 0xDBD15BCE) + (v74 ^ 0xDBD15BCE);
    *(_DWORD *)(v68 - 0x72E93EC0CCAF5732) = v82 - 607036466 - ((2 * v82) & 0xB7A2B79C);
    unsigned int v83 = (*(_DWORD *)(v68 - 0x72E93EC0CCAF572ELL) ^ 0xDBD15BCE) + (v75 ^ 0xDBD15BCE);
    *(_DWORD *)(v68 - 0x72E93EC0CCAF572ELL) = v83 - 607036466 - ((2 * v83) & 0xB7A2B79C);
    STACK[0x5E0] = v70;
    return ((uint64_t (*)(void))STACK[0x578])();
  }
}

uint64_t sub_1D4AA7ED0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1305
                                * ((((111 * ((v3 - 1175134469) & 0x460B27FE ^ 0x7FC)) ^ (v0 + 420)) & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v1) == v1)) ^ v3)))();
}

uint64_t sub_1D4AA7F3C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((v4 == ((v5 + 1129) | v2) + v1) * ((v5 + 282) ^ v3)) ^ v5)))();
}

uint64_t sub_1D4AA7F6C(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0xC21FEC2B) - (a1 & 0xC21FEC2B)) ^ 0x4097E018);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  unsigned int v3 = v1 + *(_DWORD *)(a1 + 12) - 1045653964;
  int v4 = (*(_DWORD *)(*(void *)a1 - 0x72E93EC0CCAF573ELL) ^ 0xAA8110E4) + v3;
  int v5 = v4 - ((2 * v4) & 0x550221C8) - 1434382108;
  *(_DWORD *)(*(void *)a1 - 0x72E93EC0CCAF573ELL) = v5;
  return (*(uint64_t (**)(void))((char *)*(&off_1F2C91B30 + (v2 ^ 0x2F2))
                              + 8 * ((1549 * ((v5 ^ 0xAA8110E4) < v3)) ^ v2)
                              - 4))();
}

uint64_t sub_1D4AA8034@<X0>(uint64_t a1@<X8>)
{
  unsigned int v5 = ((5 * (v3 ^ 0x3EB)) ^ 0x99FC9934) - (v2 + ((16729514 - v4) & 0xF9F4F0));
  unsigned int v6 = 1755732067 * ((v8 & 0xBE94D469 | ~(v8 | 0xBE94D469)) ^ 0x9FAD964D);
  uint64_t v9 = v1;
  v8[0] = v5 ^ v6;
  v8[1] = (v3 + 525) ^ v6;
  return (*(uint64_t (**)(_DWORD *))(a1 + 8 * (v3 ^ 0xBBEu)))(v8);
}

void sub_1D4AA80F8(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

void sub_1D4AA816C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v15 - 112) = v14
                         + 1374699841
                         * ((((v15 - 128) | 0x729EA90D) - (v15 - 128) + ((v15 - 128) & 0x8D6156F0)) ^ 0x1F6AB104)
                         + 245;
  *(void *)(v15 - 12_Block_object_dispose(&STACK[0x368], 8) = v13;
  *(void *)(v15 - 120) = a12;
  (*(void (**)(uint64_t))(v12 + 8 * (v14 + 710)))(v15 - 128);
  JUMPOUT(0x1D4AA81CCLL);
}

uint64_t sub_1D4AA8208@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((62 * (v1 != 2079419384)) ^ 0x187u)))();
}

uint64_t sub_1D4AA8260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  a13 = 108757529 * (((&a12 | 0x956C4C34) - (&a12 & 0x956C4C34)) ^ 0x75F02E1F) - 504207030;
  uint64_t v15 = (*(uint64_t (**)(int *))(v14 + 17848))(&a12);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((1696 * (a12 == v13)) ^ 0x2BFu)))(v15);
}

uint64_t sub_1D4AA82E0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 ^ 0xF43 ^ (2 * a2) ^ 0x17D4) * (v2 == v3)) ^ a2)))();
}

void sub_1D4AA8318(_DWORD *a1@<X8>)
{
  if (v1 == (((v3 + 984) | 0x2A0) ^ (v5 + 492))) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v6;
  }
  *(void *)(v2 - 0x5A178A95705CCB00) = v7;
  _DWORD *v4 = *a1;
}

void sub_1D4AA838C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v10 = (a8 + 959469427) & 0xC6CFA87E;
  *(_DWORD *)(v9 - 120) = (v10 ^ 0xFFFFF786) & v8;
  *(_DWORD *)(v9 - 12_Block_object_dispose(&STACK[0x368], 8) = v10 ^ 0x98A;
  JUMPOUT(0x1D4AA8404);
}

void sub_1D4AA84D0()
{
}

uint64_t sub_1D4AA84E0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((v2 != ((((a1 + 898029169) & 0xCA7927F6) + 1164) ^ 0x68768C10))
                                     * (((a1 + 898029169) & 0xCA7927F6 ^ 0x2B8) - 166)) ^ (a1 + 898029169) & 0xCA7927F6)))();
}

uint64_t sub_1D4AA8530(uint64_t a1, int a2)
{
  *(void *)(a1 - 7 + (v5 + v3 - v6)) = *(void *)(v2 - 7 + (v5 + v3 - v6));
  return (*(uint64_t (**)(void))(v7 + 8 * ((1639 * ((a2 ^ 0x3A1) + v6 == (v4 & 0xFFFFFFF8))) ^ a2)))();
}

uint64_t sub_1D4AA8584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v2;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  unsigned int v6 = v3 - 535753261 * ((((2 * &v5) | 0xA212D9CC) - &v5 + 787911450) ^ 0xDBFD62C9) - 173;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0x90D)))(&v5);
}

uint64_t sub_1D4AA85EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((4033 * ((((v18 - 912) ^ 0xFFFFFBA8) & (v19 - 2079419381)) - a18 == -2079419385)) ^ v18)))();
}

uint64_t sub_1D4AA8634@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v10 = 3804331 * (((&a3 | 0xCAC897F1) - (&a3 & 0xCAC897F1)) ^ 0xB41DB207);
  a7 = v10 + 2131745423;
  a3 = v10 + 483381762;
  a4 = v10 + v9 + 259;
  a5 = a1;
  a6 = v7;
  uint64_t v11 = (*(uint64_t (**)(unsigned int *))(v8 + 8 * (v9 + 2018)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * (((*(_DWORD *)(v7 - 0x2C138C8FAF40FC0ALL) == ((v9 + 313) | 0x121)
                                                                                         + 526346274)
                                              * ((v9 + 1511) ^ 0x6D6)) | v9)))(v11);
}

uint64_t sub_1D4AA8708@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((2275 * ((int)(v1 + (v4 ^ 0xFFFFFE7C) + v3 - 1) > (v2 ^ 0x162) - 388)) ^ v2)))();
}

uint64_t sub_1D4AA8748()
{
  unsigned int v8 = v0
     + 535753261
     * ((2 * ((v7 ^ 0x7401F681) & 0x44CCC51) - (v7 ^ 0x7401F681) + 2075341740) ^ 0x546CB02)
     + 450;
  uint64_t v9 = v5;
  (*(void (**)(unsigned char *))(v2 + 8 * (v0 ^ 0xB88)))(v7);
  uint64_t v9 = v6;
  unsigned int v8 = v0
     + 327
     + 535753261 * ((((2 * v7) | 0xAEBB6136) - v7 + 681725797) ^ 0xDDA9BEB4)
     + 123;
  (*(void (**)(unsigned char *))(v2 + 8 * (v0 + 1400)))(v7);
  return v3 ^ v1;
}

uint64_t sub_1D4AA8858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_1D4A9FACC(a1, a2, a3, a4, a5);
}

uint64_t sub_1D4AA8888()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 != v1) * ((889 * (v2 ^ 0x367)) ^ 0x602)) ^ v2)))();
}

uint64_t sub_1D4AA88BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((LODWORD(STACK[0x3D8]) == 642161856) ^ (5
                                                                                           * (((v8 ^ 0xEE) + 30) ^ 0x8F))) & 1)
                                * a8) ^ ((v8 ^ 0x3EE) - 994))))();
}

uint64_t sub_1D4AA8918@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  unint64_t v6 = ((((v3 + 629508289) & 0xDA7A73C6) + 219) ^ 0xB5300F3E5A02ED7BLL) + 0x4ACFF0C1A5FD1620;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v5 + 8 * ((387 * (*(unsigned __int8 *)(a3 + 236 + v6) != *(unsigned __int8 *)(v4 + 32 + v6))) ^ (v3 - 99))))(629508388, 3665458118, 53, a1, a2, 78, 0xB5300F3E5A02ED7BLL);
}

uint64_t sub_1D4AA89B8@<X0>(uint64_t a1@<X8>)
{
  BOOL v9 = v4 > v6;
  *(unsigned char *)(a1 + (v7 - 1364770032)) = *(unsigned char *)(v1 + (v7 - 1364770032));
  if (v9 == v7 - 224974760 < v3) {
    BOOL v9 = v7 - 224974760 < v5;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v9 * (v2 ^ 0x46F)) ^ v2)))();
}

void sub_1D4AA8A24()
{
}

uint64_t sub_1D4AA8A2C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((4 * (((v4 == a4) ^ (v5 - 42 - 57 * (v5 ^ 0x82) + 1)) & 1)) & 0xEF | (16 * (((v4 == a4) ^ (v5 - 42 - 57 * (v5 ^ 0x82) + 1)) & 1))) ^ v5)))();
}

void sub_1D4AA8A7C()
{
}

uint64_t sub_1D4AA8B50(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v12 = a8 - 32 + (a4 ^ (v10 + 181));
  long long v13 = *(_OWORD *)(v9 + v12 - 15);
  long long v14 = *(_OWORD *)(v9 + v12 - 31);
  uint64_t v15 = a1 + v12;
  *(_OWORD *)(v15 - 15) = v13;
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v11 + 8 * (((a6 == 32) * a7) ^ (v8 + a5 + 136))))();
}

void sub_1D4AA8B5C()
{
}

uint64_t sub_1D4AA8BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  int v21 = 84 * (v20 ^ 0x4C0);
  a16 = v21 + 1224239923 * ((&a14 & 0xD2B4AA2E | ~(&a14 | 0xD2B4AA2E)) ^ 0xDFF8A806) + 1333;
  a17 = v17;
  a15 = a12;
  uint64_t v22 = (*(uint64_t (**)(int *))(v19 + 8 * (v21 + 2121)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a14 == v18) * ((v21 + 1682148978) ^ 0x6443881E)) | v21)))(v22);
}

uint64_t sub_1D4AA8C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8 * ((246 * (a3 + 1 != v6 + 16)) ^ v4)))(a1, a2, v3);
}

uint64_t sub_1D4AA8D34()
{
  int v2 = STACK[0x420] - 1062;
  LODWORD(STACK[0x644]) = v0;
  return (*(uint64_t (**)(void))(v1 + 8 * v2))();
}

uint64_t sub_1D4AA8D54(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  v5.n128_u64[0] = (a5 + 10) & 0xF;
  v5.n128_u64[1] = (a5 + 9) & 0xF;
  v6.n128_u64[0] = (a5 + 8) & 0xF;
  v6.n128_u64[1] = (a5 + 7) & 0xF;
  v7.n128_u64[0] = (a5 + 6) & 0xF;
  v7.n128_u64[1] = (a5 + 5) & 0xF;
  v8.n128_u64[0] = 0x505050505050505;
  v8.n128_u64[1] = 0x505050505050505;
  v9.n128_u64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v9.n128_u64[1] = 0xEBEBEBEBEBEBEBEBLL;
  return sub_1D4AA8E34(a1, v5, v6, v7, (__n128)xmmword_1D54D34B0, v8, v9);
}

uint64_t sub_1D4AA8E34(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13, int a14, uint64_t a15)
{
  uint64_t v27 = (a11 + v15 - a14);
  uint64_t v28 = ((_BYTE)a11 + (_BYTE)v15 - (_BYTE)a14) & 0xF;
  uint64_t v29 = v20;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v23, a5).u64[0];
  int8x16_t v31 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a15 + v27), *(int8x16_t *)(v17 + (v27 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v16 + (v27 & 0xF) - 15), *(int8x16_t *)(v18 + (v27 & 0xF) - 15))));
  int8x16_t v32 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v31, v31, 8uLL), a7), vmulq_s8(v30, a6)));
  *(int8x16_t *)(a15 + v27) = vextq_s8(v32, v32, 8uLL);
  return (*(uint64_t (**)(void))(v22 + 8 * (((a14 + v19 - 1402 == a12) * v21) ^ a13)))();
}

uint64_t sub_1D4AA8EC0()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v2 ^ 0x7B2) - 200) * (v1 == v3)) ^ v2)))((v2 ^ 0x7B2u) - v0);
}

uint64_t sub_1D4AA8EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((v9 < 0x20) ^ (a7 - v8 - 71)) & 1) * ((a7 ^ 0x6EE) - 216)) ^ a7)))();
}

uint64_t sub_1D4AA8F30(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, void *a8)
{
  int v16 = 4 * (v13 ^ 0xB3);
  unint64_t v17 = a1 + v9 + (*(_DWORD *)(v14 + 4 * v15) ^ v10) + v12 * (unint64_t)(*(_DWORD *)(*a8 + 4 * a3) ^ v10);
  *(_DWORD *)(v14 + 4 * v15) = v17 + v10 - (((v16 - 1720529057) & 0x668D2B77 ^ v11) & (2 * v17));
  uint64_t v18 = (HIDWORD(v17) ^ 0x77BDF5BFF3DF7DEFLL) + ((v17 >> 31) & 0x1E7BEFBDELL) - 0x2031602441C1000ALL;
  int v19 = a3 + 1 + a4;
  BOOL v21 = v19 < 146244272 && v19 >= a5;
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (v16 ^ (218 * v21))))(v18);
}

uint64_t sub_1D4AA8FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * ((((int)a2 <= ((v6 + 1161) ^ 0x7D0))
                                                                                           * (((v6 - 775) | 0x722) - 1734)) ^ v6)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1D4AA9064@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v6 = *(_DWORD *)((char *)&STACK[0x2EC] + ((v4 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v4 + a2)) = v6 ^ 0x25;
  *(unsigned char *)(a1 + (v4 + a2 + 2)) = (BYTE2(v6) ^ 0xD1)
                                               - 2 * ((BYTE2(v6) ^ 0xD1) & 0xEF ^ BYTE2(v6) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v4 + a2 + 1)) = ((v6 >> ((v3 + 36) ^ 0x37)) ^ 0x5B)
                                               + ~(2
                                                 * (((v6 >> ((v3 + 36) ^ 0x37)) ^ 0x5B) & 0xEF ^ (v6 >> ((v3 + 36) ^ 0x37)) & 4))
                                               - 20;
  *(unsigned char *)(a1 + (v4 + a2 + 3)) = (HIBYTE(v6) ^ 0xDB)
                                               - 2 * ((HIBYTE(v6) ^ 0xDB) & 0xEF ^ HIBYTE(v6) & 4)
                                               - 21;
  unsigned int v7 = LODWORD(STACK[0x348]) + 1641695213;
  BOOL v8 = v7 < v2;
  BOOL v9 = v4 - 1652714610 < v7;
  if (v4 - 1652714610 < v2 != v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((3185 * v9) ^ v3)))();
}

void sub_1D4AA9180()
{
}

uint64_t sub_1D4AA9194(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((((v5 + 464) ^ a1) + 2763) ^ (v5 + 1476)) * (a5 == 31)) ^ (v5 + 464))))();
}

uint64_t sub_1D4AA91CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  *(unsigned char *)(v7 + (a3 - 1999839575)) = *(unsigned char *)(v6 + (a3 - 1999839575)) ^ 0xEB;
  return (*(uint64_t (**)(void))(v8 + 8 * ((26 * (a3 - 1 == (a5 ^ 0x50A) + v5)) ^ a5)))();
}

uint64_t sub_1D4AA9218()
{
  unsigned int v3 = (((v1 ^ 0x7B8) + 1974492790) & 0x8A4F9E7B) - 455275657;
  int v4 = (v0 + 1980700392 < (v1 ^ 0x7B8u) - 455276439) ^ (v3 < 0xE4DD0FD2);
  BOOL v5 = v3 < v0 + 1980700392;
  if (v4) {
    BOOL v5 = v0 + 1980700392 < (v1 ^ 0x7B8u) - 455276439;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((4082 * v5) ^ v1 ^ 0x7B8)))();
}

uint64_t sub_1D4AA922C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x5F4]) = v66;
  STACK[0x578] = *(void *)(v69 + 8 * v64);
  STACK[0x660] = v68;
  STACK[0x668] = v65;
  unint64_t v70 = STACK[0x5E0];
  uint64_t v71 = (char *)&a9 + STACK[0x5E0] - 0x74CFFF0833D7800CLL;
  STACK[0x670] = (unint64_t)v71;
  STACK[0x5E0] = v70 + 320;
  int v72 = *(_DWORD *)(v68 - 0x72E93EC0CCAF573ALL);
  LODWORD(STACK[0x53C]) = v72;
  int v73 = *(_DWORD *)(v68 - 0x72E93EC0CCAF5736);
  LODWORD(STACK[0x458]) = v73;
  int v74 = *(_DWORD *)(v68 - 0x72E93EC0CCAF5732);
  LODWORD(STACK[0x504]) = v74;
  int v75 = *(_DWORD *)(v68 - 0x72E93EC0CCAF572ELL);
  LODWORD(STACK[0x5D4]) = v75;
  int v76 = *(unsigned __int8 *)(v68 - 0x72E93EC0CCAF5722) ^ 0xDD;
  if (v76 == 2)
  {
    LODWORD(STACK[0x588]) = *(_DWORD *)(v68 - 0x72E93EC0CCAF572ALL);
    LODWORD(STACK[0x45C]) = 351843406;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((((((((a8 - 1098) | 0x264) + 660) | 0x82) ^ 0xEB074E39) + 351843406 > 0x3F) * (((((a8 - 1098) | 0x264) - 1755476443) & 0x68A26F7F) + 193)) ^ ((a8 - 1098) | 0x264))))(a1, 64052174, 3623878656, 3768594526, 2772, 3080894364, a7, 3687930830);
  }
  else if (v76 == 1)
  {
    LODWORD(STACK[0x45C]) = v67;
    BOOL v78 = v65 >= a64 + v70 || (unint64_t)v71 >= v65 + 64;
    return (*(uint64_t (**)(void))(v69 + 8 * ((((LODWORD(STACK[0x36C]) - 170) ^ (a8 - 874)) * v78) ^ (a8 - 550))))();
  }
  else
  {
    unsigned int v80 = (*(_DWORD *)(v68 - 0x72E93EC0CCAF573ALL) ^ 0xDBD15BCE) + (v72 ^ 0xDBD15BCE);
    *(_DWORD *)(v68 - 0x72E93EC0CCAF573ALL) = v80 - 607036466 - ((2 * v80) & 0xB7A2B79C);
    unsigned int v81 = (*(_DWORD *)(v68 - 0x72E93EC0CCAF5736) ^ 0xDBD15BCE) + (v73 ^ 0xDBD15BCE);
    *(_DWORD *)(v68 - 0x72E93EC0CCAF5736) = v81 - 607036466 - ((2 * v81) & 0xB7A2B79C);
    unsigned int v82 = (*(_DWORD *)(v68 - 0x72E93EC0CCAF5732) ^ 0xDBD15BCE) + (v74 ^ 0xDBD15BCE);
    *(_DWORD *)(v68 - 0x72E93EC0CCAF5732) = v82 - 607036466 - ((2 * v82) & 0xB7A2B79C);
    unsigned int v83 = (*(_DWORD *)(v68 - 0x72E93EC0CCAF572ELL) ^ 0xDBD15BCE) + (v75 ^ 0xDBD15BCE);
    *(_DWORD *)(v68 - 0x72E93EC0CCAF572ELL) = v83 - 607036466 - ((2 * v83) & 0xB7A2B79C);
    STACK[0x5E0] = v70;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x578])(a1, a2, a3, 3768594526, 2772);
  }
}

uint64_t sub_1D4AA924C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v29 = 33 * (v23 ^ 0x216);
  *(void *)(v28 - 12_Block_object_dispose(&STACK[0x368], 8) = v24;
  *(void *)(v28 - 120) = a23;
  *(void *)(v28 - 104) = v24;
  *(_DWORD *)(v28 - 112) = v23
                         + 1224239923
                         * ((578311764 - ((v28 - 144) | 0x22785654) + ((v28 - 144) | 0xDD87A9AB)) ^ 0x2F34547C)
                         + 625;
  *(void *)(v28 - 144) = v26;
  *(void *)(v28 - 136) = a16;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v23 + 1763)))(v28 - 144);
  BOOL v31 = v27 + a19 + 2 >= (((v29 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((2 * v31) | (8 * v31) | (v29 + 974))))(v30);
}

uint64_t sub_1D4AA9320@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v11 = a1 + 76;
  int v12 = (a1 - 251) | 0x148;
  unsigned int v13 = 1755732067 * ((2 * (&a4 & 0x17931B20) - &a4 + 1751966942) ^ 0xB6AA5905);
  a8 = v13 ^ 0x51685D72;
  a7 = &STACK[0x5E89E940DF8E90E1];
  a4 = &STACK[0x3F70C0CAD412677C];
  a5 = v10;
  a6 = (a1 + 133) ^ v13;
  uint64_t v14 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * ((a1 + 76) ^ 0x858)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v10 - 0x2C138C8FAF40FC0ALL) == v8) * (v12 + 1472)) ^ v11)))(v14);
}

void sub_1D4AA9410()
{
  int v1 = *v0;
  STACK[0x388] = STACK[0x2D8];
  STACK[0x3E8] = *v1;
  JUMPOUT(0x1D4A8264CLL);
}

uint64_t sub_1D4AA9460(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 == ((((v6 - 290) | a5) ^ 4) & a6)) * (((v6 + a3) & a4) + 1458)) ^ v6)))();
}

void sub_1D4AA94D8()
{
}

uint64_t sub_1D4AA94EC@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  int v6 = (__n128 *)(v4 + v3);
  v6[73] = a2;
  v6[74] = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 == 224) * v2) ^ a1)))();
}

uint64_t sub_1D4AA9518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((395 * (v7 + 1 == v9 + 16)) ^ a7)))();
}

uint64_t sub_1D4AA95F0@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6)
{
  a5 = a1;
  a6 = a2;
  a3 = (v9 + 352) ^ (((2 * (&a3 & 0x17BD33B0) - &a3 + 1749208137) ^ 0x5B6D440) * v7);
  uint64_t v10 = (*(uint64_t (**)(unsigned int *))(v8 + 8 * (v9 + 1683)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (((a4 == v6 + ((v9 - 590) | 0xA4) - 165) * (v9 - 531)) ^ v9)))(v10);
}

uint64_t sub_1D4AA9688(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((38 * ((((unint64_t)(v3 - v2) < 0x20) ^ a2 ^ 0xE5) & 1)) ^ a2)))();
}

void sub_1D4AA96C0()
{
}

uint64_t sub_1D4AA96C8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1023
                                * ((*(_DWORD *)(v2 - 0x2C138C8FAF40FC0ELL) & 1) == ((((v0 - 112831296) & 0x6B9A7DE)
                                                                                   - 1220645360) & 0x8C192D9)
                                                                                 - 712)) ^ (v0 - 112831296) & 0x6B9A7DEu)))();
}

uint64_t sub_1D4AA9734(unsigned int a1, int a2)
{
  *(_DWORD *)(*v4 + 4 * (v6 + v7)) = v3;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 + v2 < a1) * a2) ^ v5)))();
}

uint64_t sub_1D4AA9764(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((58 * (a3 + v6 + ((a5 - 744) ^ 0x400u) - 2129374244 < 8)) ^ a5)))();
}

void sub_1D4AA97B4()
{
}

uint64_t sub_1D4AA9890(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v5 + a4 + 411627247) & 0x444C97FE) - 1935) * (v4 == a3)) ^ a4)))();
}

uint64_t sub_1D4AA98D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((23 * (((v12 - 1) ^ (a10 == v10)) & 1)) | v12)))();
}

uint64_t sub_1D4AA991C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W6>, int a4@<W8>)
{
  return sub_1D4A9A078(a1, (a3 - 1449810409) & 0x566A5FDF, *(_DWORD *)(*v5 + 4 * (a2 - 1196461360 + ((a3 - 1449810409) & 0x566A5FDF))), v4, a4);
}

uint64_t sub_1D4AA995C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((645 * ((((((a3 - 205547255) & 0xAF6AE5D1) - v4 - 134) ^ 0x3B1) & v3) == 0)) ^ a3)))();
}

uint64_t sub_1D4AA99A8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((STACK[0x420] ^ 0x43B) * (v1 < v0)) ^ (STACK[0x420] - 687))))();
}

uint64_t sub_1D4AA99E0()
{
  STACK[0x3F8] = v0;
  BOOL v7 = *v1 != ((STACK[0x420] - 89) ^ 0xE9)
    || LODWORD(STACK[0x640]) != 2033916900
    || v2 != ((STACK[0x420] - 557) ^ (v4 - 479));
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((112 * v7) ^ (STACK[0x420] - 37))))();
}

void sub_1D4AA9AD8()
{
  *(void *)(v0 + 312) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1111));
  JUMPOUT(0x1D4AA9AF4);
}

void sub_1D4AA9BA8(_DWORD *a1)
{
  unsigned int v1 = 235795823 * ((a1 - 1876425126 - 2 * (a1 & 0x9028065A)) ^ 0x4854F03);
  unsigned int v2 = a1[9] + v1;
  int v3 = *a1 ^ v1;
  BOOL v5 = (v3 & 0x30000000) == 0x20000000 || (v3 & 0x3F000000) == 0x1000000;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D4AA9C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W4>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((((a4 - 1335000053) < 0x38)
                                                                         * (((v4 + a3 - 703) | 0x20B) ^ 0x97B)) ^ (v4 + a3))))(a1, a2, 727785867, -1335000053);
}

uint64_t sub_1D4AA9F9C(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((58 * ((a4 + 1 + v4) < 0x40)) ^ a1)))();
}

void sub_1D4AAA084()
{
}

uint64_t sub_1D4AAA08C@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((a3 == v5 + v4 + a2 + 1287 - 1592) * ((a2 ^ (a2 + 1478)) + 1668)) ^ (v4 + a2 + 793))))(a1);
}

uint64_t sub_1D4AAA0D8()
{
  BOOL v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 + 115)))(v0 ^ (v1 - 703) ^ (v2 - 1355)) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * (((v2 - 2190) | 0x282) - 616)) ^ v2)))();
}

uint64_t sub_1D4AAA12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  unsigned int v24 = v21 + ((a20 + 690) ^ 0x6A794A1);
  if (v24 <= 0x40) {
    unsigned int v24 = 64;
  }
  BOOL v25 = -v20 - 111644946 - v22 + v24 < 0xF;
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((v25 | (4 * v25)) ^ a20)))(1922694427);
}

uint64_t sub_1D4AAA19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((1174
                                                                         * (v3 - 648545234 < ((v5 + 1243) ^ 0x4D3u))) ^ (v5 + 532))))(a1, a2, a3, 235);
}

uint64_t sub_1D4AAA1DC@<X0>(int a1@<W8>)
{
  uint64_t v8 = *(unsigned int **)(v6 + 8 * (a1 - 1594));
  uint64_t v9 = *v8;
  uint64_t v10 = *(void *)(v6 + 8 * (a1 - 1584));
  uint64_t v11 = *(unsigned char **)(v10 - 4);
  v21[0] = *v11 - 97;
  v21[1] = v11[1] - 97;
  void v21[2] = v11[2] - 97;
  v21[3] = v11[3] - 97;
  v21[4] = v11[4] - 97;
  void v21[5] = v11[5] - 97;
  v21[6] = v11[6] - 97;
  v21[7] = v11[7] - 97;
  v21[8] = v11[8] - 97;
  v21[9] = v11[9] - 97;
  v21[10] = v11[10] - 97;
  v21[11] = v11[11] - 97;
  v21[12] = v11[12] - 97;
  v21[13] = v11[13] - 97;
  v21[14] = v11[14] - 97;
  v21[15] = v11[15] - 97;
  v21[16] = v11[16] - 97;
  v21[17] = v11[17] - 97;
  v21[18] = v11[18] - 97;
  v21[19] = v11[19] - 97;
  v21[20] = v11[20] - 97;
  v21[21] = v11[21] - 97;
  int v12 = *(unsigned char **)(v10 - 4);
  v21[22] = v12[22] - 97;
  v21[23] = v12[23] - 97;
  v21[24] = v12[24] - 97;
  v21[25] = v12[25] - 97;
  v21[26] = v12[26] - 97;
  v21[27] = v12[27] - 97;
  v21[28] = v12[28] - 97;
  v21[29] = v12[29] - 97;
  int v13 = (*(uint64_t (**)(uint64_t, unsigned char *, _DWORD *))(v5 + 8 * (a1 ^ 0xE26)))(v9, v21, v2);
  int v14 = ((2 * v13) & 0x76BB7FFE) + (v13 ^ 0x3B5DBFFF);
  if (v14 != 995999743)
  {
    if (v14 == 996000845)
    {
      uint64_t v15 = *v8;
      int v16 = *(unsigned char **)(*(void *)(v6 + 8 * (v4 - 1641)) - 4);
      v22[0] = *v16 - 42;
      v22[1] = v16[1] - 42;
      void v22[2] = v16[2] - 42;
      v22[3] = v16[3] - 42;
      v22[4] = v16[4] - 42;
      v22[5] = v16[5] - 42;
      v22[6] = v16[6] - 42;
      v22[7] = v16[7] - 42;
      v22[8] = v16[8] - 42;
      v22[9] = v16[9] - 42;
      v22[10] = v16[10] - 42;
      v22[11] = v16[11] - 42;
      v22[12] = v16[12] - 42;
      v22[13] = v16[13] - 42;
      v22[14] = v16[14] - 42;
      v22[15] = v16[15] - 42;
      v22[16] = v16[16] - 42;
      v22[17] = v16[17] - 42;
      v22[18] = v16[18] - 42;
      v22[19] = v16[19] - 42;
      int v17 = (*(uint64_t (**)(uint64_t, unsigned char *, _DWORD *))(v5 + 8 * (v4 + 546)))(v15, v22, v2);
      unsigned int v18 = (v17 ^ 0xBF7CFFF7) + 2078257152 + ((2 * v17) & 0x7EF9FFEE);
    }
    else
    {
      unsigned int v18 = v14 - 69640;
    }
    __asm { BRAA            X8, X17 }
  }
  *(_DWORD *)(v7 + 344) |= ((v4 - 100) | 0x100) - 1884;
  *(_DWORD *)(v7 + 44) = 651598691;
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, _DWORD *))(v5 + 8 * (v4 + 602)))(*v2, v7 + 332, v7 + 336, v7 + 340, v3);
  uint64_t v20 = *(void *)(v1 + 8);
  *(_DWORD *)(*(void *)(v1 + 24) - 0x8FD385F8C7F991DLL) = *v2;
  *(_DWORD *)(v20 - 0x6577379738C18B7ALL) = *v3;
  *(_DWORD *)(v1 + 20) = 526347143;
  return result;
}

uint64_t sub_1D4AAA57C@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v8 = (void *)(v6 - 0x139154EEB4327E8);
  int v9 = a1 - 1064;
  int v10 = a1 - 233;
  BOOL v11 = v2 + 2121757806 < 850974128;
  unsigned int v12 = ((2 * (*(_DWORD *)(*v8 + 4 * (a2 + 876699970)) ^ v4)) << (v3 ^ 0x1F)) | ((*(_DWORD *)(*v8
                                                                                              + 4 * (a2 + 876699969)) ^ v4) >> v3);
  *(_DWORD *)(*v8 + 4 * (v9 - 243)) = v12 + v4 - (v5 & (2 * v12));
  if (v2 + 2121757806 < 850974128) {
    BOOL v11 = v2 + 2121757806 > -1296509519;
  }
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (v11 ^ v10 ^ 1)))(850974128);
}

uint64_t sub_1D4AAA654@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, char a10)
{
  a10 = (-103 * (((&a9 | 0x57) - (&a9 | 0xA8) - 88) ^ 0x41)) ^ 0x1E;
  a9 = 1225351577 * (((&a9 | 0xE6B29457) - (&a9 | 0x194D6BA8) + 424504232) ^ 0xC5284C41)
     + a1
     - 1140;
  (*(void (**)(unsigned int *))(v10 + 8 * (a1 ^ 0xC6F)))(&a9);
  return sub_1D4AA4CC8();
}

uint64_t sub_1D4AAA6D0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v1 + 15) ^ (a1 == v1 + 2079418617)) & 1 | (2 * (((v1 + 15) ^ (a1 == v1 + 2079418617)) & 1)) | v1)))(4294925278);
}

uint64_t sub_1D4AAA718@<X0>(int a1@<W8>)
{
  unint64_t v4 = v1 + v2;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((153 * (((v4 - v1 + 1062117730 < 8) ^ ((a1 ^ 0xFD) + 35)) & 1)) ^ a1)))();
}

uint64_t sub_1D4AAA778@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((127 * (v1 != 2079419384)) ^ 0x82Bu)))();
}

uint64_t sub_1D4AAA7A4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((593
                                * ((v4 & (2 * (*(unsigned __int8 *)(a2 + 1) - 146)))
                                 + (a3 ^ (v5 + 339) ^ (*(unsigned __int8 *)(a2 + 1) - 146)) == v5)) ^ a3)))();
}

uint64_t sub_1D4AAA7E4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((71 * (v3 + v0 - 1 < (v2 ^ 0x1F6u) + 2147482005)) ^ v2)))();
}

uint64_t sub_1D4AAA830()
{
  int v7 = (v1 - 2034) | 0x440;
  LODWORD(STACK[0x454]) = v0 + 1;
  uint64_t v8 = (*(uint64_t (**)(unint64_t, void))(v5 + 8 * (v1 + 301)))(STACK[0x3C8], 0);
  unsigned int v9 = v3[4] + (v7 ^ 0xFD65BB01) - (v2 & (2 * v3[4]));
  v3[1] = v3[6] - 43663526 - (v2 & (2 * v3[6]));
  _OWORD v3[2] = v9;
  int v10 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v1 + 237)))(v8);
  v3[3] = v10 - 43663526 - (v2 & (2 * v10));
  int v11 = (*(uint64_t (**)(void))(v5 + 8 * (v1 ^ 0xF7)))();
  _DWORD *v3 = v11 - 43663526 - (v2 & (2 * v11));
  unsigned int v12 = ((~*v4 >> 30) - 43663526 - 4 * (*v4 >= 0)) ^ *v4;
  unsigned int v13 = (*v3 ^ 0xFD65BF5A) + ((1664525 * v12 - 43663526 - ((3329050 * v12) & 0xFACB7EB4)) ^ v4[1]);
  v4[1] = v13 - 43663526 - ((2 * v13) & 0xFACB7EB4);
  unint64_t v14 = STACK[0x418];
  int v15 = STACK[0x418] + v7 - 1501686959;
  int v16 = (v7 + 1779911073) ^ STACK[0x418];
  unint64_t v17 = STACK[0x418] ^ 0xE1B0F20;
  *(_DWORD *)(v6 - 172) = v16;
  *(_DWORD *)(v6 - 16_Block_object_dispose(&STACK[0x368], 8) = v16 ^ 0x26;
  uint64_t v18 = v6 - 200;
  *(void *)(v18 + _Block_object_dispose(&STACK[0x368], 8) = v14 + 236654366;
  *(void *)(v18 + 16) = v17;
  *(_DWORD *)(v6 - 160) = (v7 + 1779911073) & 0x7B17DFA7 ^ v14;
  *(_DWORD *)(v6 - 200) = v15;
  *(_DWORD *)(v6 - 176) = -(int)v14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v7 ^ 0xCE1)))(v6 - 200);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v6 - 164)))(v19);
}

uint64_t sub_1D4AAAA24(uint64_t a1, int a2, uint64_t a3, int a4)
{
  BOOL v7 = v4 > 0x55769099;
  int v8 = a2 - 482811338 + ((a4 + 510) | 0x411);
  int v9 = v7 ^ (v8 < -1433833626);
  BOOL v10 = v8 < v6;
  if (!v9) {
    BOOL v7 = v10;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((!v7 * ((a4 - 1649627591) & 0x625351DE ^ 0x184)) | a4)))();
}

uint64_t sub_1D4AAAABC(uint64_t a1)
{
  uint64_t v8 = (v5 + v3 - 268108378 + v2 - v4);
  *(void *)(a1 - 7 + v_Block_object_dispose(&STACK[0x368], 8) = *(void *)(v6 - 7 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * ((1953 * (v4 - (v1 & 0xFFFFFFF8) == -8)) ^ v5)))();
}

uint64_t sub_1D4AAAB18(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (int)((STACK[0x420] + 523) ^ (8 * (v2 > (STACK[0x420] ^ 0x63A ^ (v3 + 3) ^ (STACK[0x420] - 506)))))))(a1, a2, 4251303770, 4294966180);
}

void sub_1D4AAAB5C()
{
  *(_DWORD *)(v3 - 200) = (v0 + 2138962264) ^ (535753261 * ((v1 - 249598343 - 2 * (v1 & 0xF11F6E79)) ^ 0xFBEB6056));
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 1278)))(v3 - 200);
  LODWORD(STACK[0x2C8]) = LODWORD(STACK[0x2C8]) + ((v0 + 692205703) & 0xD6BDC372) - 65;
  unsigned int v4 = 3804331 * (((v1 | 0xF79F13EF) - v1 + (v1 & 0x860EC10)) ^ 0x894A3619);
  uint64_t v5 = v3 - 200;
  *(void *)(v5 + _Block_object_dispose(&STACK[0x368], 8) = STACK[0x268];
  *(_DWORD *)(v3 - 184) = v4 + v0 + 642;
  *(unsigned char *)uint64_t v5 = v4 ^ 0x61;
  *(void *)(v5 + 24) = STACK[0x270];
  (*(void (**)(uint64_t))(v2 + 8 * (v0 ^ 0xCA8)))(v3 - 200);
  LODWORD(STACK[0x5D8]) = *(_DWORD *)(v3 - 180);
  LODWORD(STACK[0x2CC]) = -2011050828;
  JUMPOUT(0x1D4AAAC84);
}

uint64_t sub_1D4AAACB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int8x16_t *a16)
{
  uint64_t v19 = (int8x16_t *)((char *)&STACK[0x680] + STACK[0x380] - 0x74CFFF0833D7874CLL);
  *uint64_t v19 = veorq_s8(*a16, (int8x16_t)xmmword_1D54D34A0);
  unint64_t v20 = (v16 ^ 0x4F6u) + STACK[0x628] - 929;
  STACK[0x630] = v18;
  STACK[0x638] = v18;
  STACK[0x628] = v20;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t))(v17 + 8 * (v16 ^ (8 * (v19 == (int8x16_t *)v18)))))(a1, a2, a3, a4, &STACK[0x4B0], a6);
}

void sub_1D4AAAD2C()
{
}

uint64_t sub_1D4AAAD34(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((a1 + v2 + ((519 * (v1 ^ 0x13E)) ^ 0x8E01645F) > 7) * ((v1 - 81) ^ 0xE9)) ^ v1)))();
}

uint64_t sub_1D4AAAD94(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v10 = v7 + v6;
  int v11 = v10 + a1;
  if ((v10 + a1) <= 0x40) {
    int v11 = a2;
  }
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((83 * (((v8 - 579) ^ 0x6040F93 ^ (a6 + v8 - 1328) & 0xFFFFFF7F) - v10 < a3 + v11)) ^ v8)))();
}

uint64_t sub_1D4AAADEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))(v68 + 4280))(a1, a2, a3, a4, a5, 3452455880, 2147483652, 1883609044, &a68, a10);
}

uint64_t sub_1D4AAAF2C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (int)((948 * (v1 - a1 >= 25 * (v3 ^ 0x1D9) + (v3 ^ 0xFFFFFFFFFFFFFEDFLL))) ^ v3)))(v2);
}

uint64_t sub_1D4AAAF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 >= ((a5 + 1213) ^ 0x561u)) * (89 * (a5 ^ 0x83) - 588)) | a5)))();
}

uint64_t sub_1D4AAAFB8@<X0>(int a1@<W2>, int a2@<W5>, int a3@<W6>, unsigned int a4@<W7>, int a5@<W8>)
{
  int v13 = v11 + a5 - 1896;
  BOOL v14 = v7 < v8;
  *(unsigned char *)(v10 + (v5 + 1)) = *(unsigned char *)(v9 + (a2 + v13 + 1115));
  unsigned int v15 = a3 + v13 + 1116;
  int v16 = v14 ^ (v15 < a4);
  BOOL v17 = v15 < v7;
  if (!v16) {
    BOOL v14 = v17;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v14 * a1) ^ v6)))();
}

void sub_1D4AAAFC8(uint64_t a1)
{
  int v1 = 1759421093 * (((a1 | 0x9EBEB665) - a1 + (a1 & 0x6141499A)) ^ 0x2DC30631);
  int v2 = *(_DWORD *)(a1 + 16) + v1;
  __asm { BRAA            X14, X17 }
}

void sub_1D4AAB0B4(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D4AAB0FC()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((6 * (v2 ^ 0x26C)) ^ (v4 + 506)) + v3 >= ((v2 - 1770859631) & 0x698D2F6D ^ v0))
                                * v1) ^ v2)))();
}

void sub_1D4AAB154()
{
}

uint64_t sub_1D4AAB2C0@<X0>(uint64_t a1@<X2>, char a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v3 + a1) = a2;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((((unint64_t)(v3 + 1 + a1) < 0x38) * ((v4 ^ 0x2E1) - 1283)) ^ v4 ^ 0x2E1)))();
}

uint64_t sub_1D4AAB2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,unsigned int a25,uint64_t a26)
{
  unsigned int v31 = 1178560073
      * ((-1996209345 - (&a22 | 0x8904433F) + (&a22 | 0x76FBBCC0)) ^ 0xCC6FC4A2);
  a24 = a17;
  a25 = (v29 + 667) ^ v31;
  a23 = v31 + 762105055 * a15 + 296806364;
  (*(void (**)(int *))(v30 + 8 * (v29 + 1221)))(&a22);
  a25 = v29
      + 1224239923 * ((&a22 - 1409295590 - 2 * (&a22 & 0xABFFDB1A)) ^ 0x594C26CD)
      + 394;
  a24 = a17;
  a26 = v28;
  (*(void (**)(int *))(v30 + 8 * (v29 + 1182)))(&a22);
  unsigned int v32 = 1178560073 * (&a22 ^ 0xBA947862);
  a24 = a17;
  a25 = (v29 + 667) ^ v32;
  a23 = v32 + 762105055 * v27 + 296806364;
  (*(void (**)(int *))(v30 + 8 * (v29 ^ 0xD4B)))(&a22);
  a26 = v26;
  a23 = v32 + v29 + 671;
  a25 = ((a16 ^ 0xFE7AFBF3) + 1806562910 + (((v29 - 189) ^ 0xFCF5F470) & (2 * a16))) ^ v32;
  a24 = a17;
  uint64_t v33 = (*(uint64_t (**)(int *))(v30 + 8 * (v29 + 1211)))(&a22);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * ((14 * (a22 == 526347143)) ^ v29)))(v33);
}

uint64_t *sub_1D4AAB4C0@<X0>(uint64_t *result@<X0>, int a2@<W1>, int a3@<W3>, _DWORD *a4@<X8>)
{
  uint64_t v8 = result[6];
  uint64_t v10 = *result;
  uint64_t v9 = result[1];
  *a4 = v7;
  *(_DWORD *)(v10 - 0x2CF2CD9EB99DE98FLL) = v5;
  *(_DWORD *)(v8 - 0x2DEB3A05C2E48BBDLL) = a3;
  *(void *)(v9 - 0x6C482493D26EC5EDLL) = v4 + (a2 + v6 - 40395189);
  *((_DWORD *)result + _Block_object_dispose(&STACK[0x368], 8) = 526347143;
  return result;
}

uint64_t sub_1D4AAB530@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 == (a2 ^ 0x183 ^ (a1 + 536))) * ((a2 + 1017) ^ 0x7E0)) ^ a2)))();
}

uint64_t sub_1D4AAB57C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 8_Block_object_dispose(&STACK[0x368], 8) = 57;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

void sub_1D4AAB59C(uint64_t a1)
{
  int v1 = 1178560073 * ((-2 - ((a1 | 0xAE85A791) + (~a1 | 0x517A586E))) ^ 0xEBEE200C);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D4AAB640@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 4) = (a2 << ((-81 * (v3 ^ 0x12)) ^ 8)) - v4 + v2 - 939069215;
  return result;
}

uint64_t sub_1D4AAB67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (a18 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v26
  }
                                                       + 8
                                                       * (a5
                                                        + v27
                                                        + 4
                                                        * (*(_DWORD *)(v28 - 128) != (v27 ^ (v27 + 975)) + 1335560129)
                                                        + 142)))(727785867, a10);
  if (a18 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v26
  }
                                                       + 8
                                                       * ((((*(_DWORD *)(v28 - 128) == 1335561202) ^ (a5 + v27 - 34)) & 1 | (8 * (((*(_DWORD *)(v28 - 128) == 1335561202) ^ (a5 + v27 - 34)) & 1))) ^ (a5 + v27 + 734))))(727785867, a10);
  uint64_t v30 = (a5 + v27 - 758);
  unint64_t v31 = ((unint64_t)&a26 ^ 0xFFA9ED2EEF39FBFELL)
      + 0x26D73FFBF8DF5E02
      + ((v30 - 0xAC25A2218C08BDLL) & (2 * (void)&a26));
  *(unsigned char *)(v28 - 129) = (v31 ^ 0xBA) * (v31 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26
                                                     + 8
                                                     * (int)(v30 | (16
                                                                  * (((a5 + v27 + 1810873360) & 0xBF7161FF ^ 0x2B6121B3) != 91)))))(727785867, a10);
}

uint64_t sub_1D4AAB7FC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((102
                                     * (((v1 - 1740490020 + 31 * ((v3 - 1098917362) & 0x418026FB ^ 0x69Cu))
                                       * (v2 - 1740488377)) >> 31)) ^ v3)))();
}

uint64_t sub_1D4AAB85C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v0 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v1) == v1)
                                * ((164 * (v2 ^ 0xF0)) ^ 0x2C5)) ^ v2)))();
}

uint64_t sub_1D4AAB8A0@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v1 + (v2 + v6)) = *(unsigned char *)(*v1 + (v6 + v3));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 == v4) * v5) ^ a1)))();
}

uint64_t sub_1D4AAB8D4(int8x16_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v11 = (a5 - 32 + a4);
  int8x16_t v12 = *(int8x16_t *)(v8 + v11 - 15);
  int8x16_t v13 = *(int8x16_t *)(v8 + v11 - 31);
  uint64_t v14 = v9 + v11;
  *(int8x16_t *)(v14 - 15) = veorq_s8(v12, a1);
  *(int8x16_t *)(v14 - 31) = veorq_s8(v13, a1);
  return (*(uint64_t (**)(void))(v10 + 8 * (((a6 == 32) * a8) | a7)))();
}

uint64_t sub_1D4AAB8E0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v9 = ((327 * (a2 ^ (v3 + 2015))) ^ (v6 + 394)) + v7;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(v5 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * (((4 * (v7 - 1 != a3)) | (16 * (v7 - 1 != a3))) ^ (v4 + a2 + 1059))))();
}

void sub_1D4AAB930()
{
}

void sub_1D4AAB938()
{
}

uint64_t sub_1D4AAB9D0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,_DWORD *a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v37 = 4 * (v34 - 895093445);
  unsigned int v38 = -1195886157 * ((*(_DWORD *)(*a30 + (*a31 & 0x389B1DA8)) ^ (a33 + v37)) & 0x7FFFFFFF);
  int v39 = (v38 >> (((a1 + 66) | 0x22) ^ 0xEA)) ^ v38;
  *(_DWORD *)(a34 + v37) ^= *(_DWORD *)(a33 + v37) ^ *((_DWORD *)*(&off_1F2C91B30 + a1 - 1821)
                                                     + ((-1195886157 * v39) >> 24)) ^ *((_DWORD *)*(&off_1F2C91B30 + a1 - 1760) + ((-1195886157 * v39) >> 24)) ^ *((_DWORD *)*(&off_1F2C91B30 + (a1 ^ 0x793)) + ((-1195886157 * v39) >> 24) - 3) ^ (968032256 * v39) ^ (-1195886157 * v39) ^ (-1109235783 * ((-1195886157 * v39) >> 24));
  return (*(uint64_t (**)(void))(v35
                              + 8
                              * ((1022 * (v36 - 40560652 + ((((a1 - 1726) | 0x522) + 38273574) | 0x22E205) != 255053857)) ^ ((a1 - 1726) | 0x522))))();
}

uint64_t sub_1D4AABB18@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  int v7 = v4 + a1 + (a2 ^ 0x481) + (v6 ^ v3);
  unsigned int v8 = ((2 * v7) & 0x9FFFEFB6) + (v7 ^ 0x4FFFF7DB) + 1200541264;
  unsigned int v9 = v5 + 1546437339;
  int v10 = (v9 < 0x978EC62B) ^ (v8 < a2 - 1752251919);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < a2 - 1752251919;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((126 * !v11) ^ a2)))();
}

uint64_t sub_1D4AABBB8()
{
  (*(void (**)(void))(v2 + 8 * (v0 + 1175)))();
  return (*(uint64_t (**)(void))(v2 + 8 * ((41 * (*(void *)(v1 + 264) != 0)) ^ (v0 + 1028))))();
}

uint64_t sub_1D4AABC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9, int a10, int a11, uint64_t a12, int a13, int a14, uint64_t a15)
{
  int v17 = 1374699841 * ((2 * ((v16 - 128) & 0x66A9F4B8) - (v16 - 128) + 425069377) ^ 0x74A21348);
  *(_DWORD *)(v16 - 12_Block_object_dispose(&STACK[0x368], 8) = a14 - v17 + 532;
  *(_DWORD *)(v16 - 124) = v17
                         + ((32 * a11) ^ 0xD97FFEEF)
                         + (((a14 + 1255505694) & 0xB52A83D7 ^ 0xB2FFFE40) & (a11 << 6))
                         + 668887927;
  *(void *)(v16 - 120) = a15;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (a14 ^ 0x984)))(v16 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8 * ((1584 * ((*a9 - 1740488378) < 0x7FFFFFFF)) ^ a14)))(v18);
}

void sub_1D4AABD04()
{
}

uint64_t sub_1D4AABD70()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 8) + v0 - 0x29C8F60D6DDB212DLL)
     - *(unsigned __int8 *)(v5 + v0 - 0x29C8F60D6DDB212DLL);
  uint64_t v7 = v0 + ((v4 + 1308952383) & 0xB1FAF27F) - 62;
  BOOL v9 = (v6 ^ 0x79F7F8BF) - 268935170 + ((2 * v6) & 0xF3EFF17E) == 1777359037 && v7 != v2 + 16;
  return (*(uint64_t (**)(void))(v3 + 8 * (v9 | (2 * v9) | v4)))();
}

uint64_t sub_1D4AABE08@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  BOOL v14 = v11 > 0x2BB5E68B;
  *(_DWORD *)(a9 + 4 * (v9 + a1 + 121 * (v10 ^ 0x419))) = *(_DWORD *)(*(void *)(v12 - 0x139154EEB4327E8)
                                                                      + 4 * (v9 + a1 + 121 * (v10 ^ 0x419)));
  if (v14 == v9 - 38910491 < -733341324) {
    BOOL v14 = v9 - 38910491 < (int)(v11 + 1414142324);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8 * ((2 * !v14) | (4 * !v14) | (v10 - 418))))(4256056805, 3561625972);
}

uint64_t sub_1D4AABF48@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(_DWORD *)(a1 + 4 * (v4 + v3 + 1990)) == v1 + v2 - 1682 - 307)
                                * (v2 ^ 0x2A1)) ^ (v2 - 1682))))();
}

uint64_t sub_1D4AABF90()
{
  int v5 = v3 + 190 + *(unsigned __int8 *)(v2 + 6) - 445;
  return (*(uint64_t (**)(void))(v4 + 8 * ((794 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v3)))();
}

uint64_t sub_1D4AABFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  unint64_t v61 = STACK[0x448];
  int v62 = *(unsigned __int8 *)(STACK[0x448] - 0x72E93EC0CCAF5722) ^ 0xDD;
  if (v62 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * (((*(_DWORD *)(v61 - 0x72E93EC0CCAF5726) != 1335561202) * (a8 - 1110)) ^ (a8 + 752))))(a1, a2, 37, a4, a5, 3080894364, a7, 3687930830);
  }
  if (v62 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * (int)((110 * (*(_DWORD *)(v61 - 0x72E93EC0CCAF5726) != STACK[0x420] + 1335560087)) ^ (STACK[0x420] - 204))))(a1, a2, a3, a4, a5, 3080894364, a7, 3687930830);
  }
  unsigned int v64 = (a8 + 1094997820) & 0xBEBBA6E9;
  uint64_t v65 = v64 + 474 - 1024;
  STACK[0x440] = v65;
  *(unsigned char *)(v61 - 0x72E93EC0CCAF5782 + v65) = (a60 ^ 0xBA) * (a60 + 17);
  return (*(uint64_t (**)(void))(v60 + 8 * (int)(((STACK[0x440] == 0) * a5) ^ v64)))();
}

uint64_t sub_1D4AAC174@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v12 = 4 * (v9 + v7);
  int v13 = v2 - 423212695 + (*(_DWORD *)(*(void *)(a2 - 0x139154EEB4327E8) + v12) ^ 0x2380DF27);
  *(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + v12) = v13 + v8 - ((v11 + v5 + 795 - 1543) & (2 * v13));
  int v14 = v9 + 1 + v3;
  BOOL v16 = v14 <= v4 && v14 >= v6;
  return (*(uint64_t (**)(void))(v10 + 8 * ((25 * v16) ^ v5)))();
}

void sub_1D4AAC24C(uint64_t a1)
{
  int v1 = 1178560073 * ((-2 - ((a1 | 0x5A50E64C) + (~a1 | 0xA5AF19B3))) ^ 0x1F3B61D1);
  int v2 = *(_DWORD *)(a1 + 40) ^ v1;
  if (*(void *)(a1 + 48) | *(void *)(a1 + 64)) {
    BOOL v3 = *(_DWORD *)(a1 + 24) + v1 == 1243141020;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = v3;
  __asm { BRAA            X8, X17 }
}

void sub_1D4AAC3B8()
{
}

uint64_t sub_1D4AAC414()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((2810 * (*(void *)off_1F2C91FA0 == 0)) ^ v0)))();
}

uint64_t sub_1D4AAC44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v18 - 136) = v15;
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x368], 8) = v13;
  *(_DWORD *)(v18 - 144) = (v16 - 1582) ^ (1225351577
                                         * ((((2 * ((v18 - 144) ^ 0x34E6FF81)) | 0xB1E44DAA)
                                           - ((v18 - 144) ^ 0x34E6FF81)
                                           + 655218987) ^ 0xCF8E0142));
  *(void *)(v18 - 120) = v13;
  *(void *)(v18 - 112) = v14;
  (*(void (**)(uint64_t))(v17 + 8 * (v16 + 483)))(v18 - 144);
  int v19 = 1374699841
      * ((~((v18 - 144) ^ 0xCE91F438 | 0xE3331AF3) + (((v18 - 144) ^ 0xCE91F438) & 0xE3331AF3)) ^ 0xBFA9093D);
  *(_DWORD *)(v18 - 144) = (v16 - 377) ^ v19;
  *(_DWORD *)(v18 - 12_Block_object_dispose(&STACK[0x368], 8) = -128426105 - v19 + v12;
  *(void *)(v18 - 136) = a12;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v16 ^ 0xFFD)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((*(_DWORD *)(v18 - 140) == ((2 * v16) ^ 0x5F2A85C))
                                              * ((v16 - 636) ^ 0x4F6)) ^ v16)))(v20);
}

uint64_t sub_1D4AAC580()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((125 * (v0 < (v1 ^ 0x37A) + 933 + (((v1 ^ 0x37A) + 352) | 0x48u) - 1689)) ^ v1 ^ 0x37A)))();
}

uint64_t sub_1D4AAC5C4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 & 0x1F ^ 0x18) != ((v1 + 344) ^ 0x433)) * ((v1 - 48) ^ 0x29D)) ^ v1)))();
}

uint64_t sub_1D4AAC608(uint64_t a1, int a2, int8x16_t *a3, int8x16_t a4, int8x16_t a5)
{
  *(int8x16_t *)(v7 + (v6 + 16)) = vaddq_s8(vaddq_s8(*a3, a5), vmvnq_s8(vandq_s8(vaddq_s8(*a3, *a3), a4)));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 == 16) * a2) ^ v5)))();
}

void sub_1D4AAC614()
{
  *(void *)(v0 + 312) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1078));
  JUMPOUT(0x1D4AA9AFCLL);
}

uint64_t sub_1D4AAC640(char a1, int8x16_t a2, int8x8_t a3, int8x8_t a4, uint64_t a5, char a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v69 = (a8 + v68 - 8);
  v71.val[0].i64[0] = ((_BYTE)a8 + (_BYTE)v68 - 8) & 0xF;
  v71.val[0].i64[1] = ((_BYTE)a8 + v67 - 8) & 0xF;
  v71.val[1].i64[0] = ((_BYTE)a8 + v66 - 8) & 0xF;
  v71.val[1].i64[1] = ((_BYTE)a8 + v62 - 8) & 0xF;
  v71.val[2].i64[0] = ((_BYTE)a8 + v65 - 8) & 0xF;
  v71.val[2].i64[1] = ((_BYTE)a8 + v64 - 8) & 0xF;
  v71.val[3].i64[0] = ((_BYTE)a8 + a6 - 8) & 0xF;
  v71.val[3].i64[1] = ((_BYTE)a8 + a1 - 8) & 0xF;
  *(int8x8_t *)(a7 + v69) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a7 + v69), *(int8x8_t *)(v60 + (v69 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v59 + (v69 & 0xF) - 7), *(int8x8_t *)(v61 + (v69 & 0xF) - 7)))), a4), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v71, a2), a3)));
  return (*(uint64_t (**)(void))(a59 + 8 * (((a8 != v63 + 8) | (4 * (a8 != v63 + 8))) ^ a11)))();
}

void sub_1D4AAC668(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 4) ^ (1755732067 * (((a1 | 0x83D72B3C) - (a1 & 0x83D72B3C)) ^ 0x5D1196E7));
  uint64_t v2 = *(void *)(a1 + 8);
  v4[0] = v1 + 628203409 * (((v4 | 0xF56E3C19) + (~v4 | 0xA91C3E6)) ^ 0x77E6302B) - 459;
  uint64_t v5 = v2;
  BOOL v3 = (char *)*(&off_1F2C91B30 + v1 - 1155) - 4;
  (*(void (**)(_DWORD *))&v3[8 * (v1 ^ 0xC34)])(v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4AAC7A8()
{
  int v5 = v4 + v0 + 1058;
  void *v1 = v5 ^ v9 ^ 0x7B1CE49Du;
  uint64_t v12 = v7;
  unsigned int v11 = 535753261 * (((v10 | 0x7AAA3359) + (~v10 | 0x8555CCA6)) ^ 0x705E3D77)
      - 1682147803
      + v5;
  (*(void (**)(unsigned char *))(v3 + 8 * (v5 ^ v4)))(v10);
  unsigned int v11 = v5
      - 1682147803
      + 535753261 * ((v10 - 1904952353 - 2 * ((unint64_t)v10 & 0x8E74BBDF)) ^ 0x8480B5F0);
  uint64_t v12 = v8;
  (*(void (**)(unsigned char *))(v3 + 8 * (v5 - 1682146853)))(v10);
  return v2 ^ 0x1F5F6B87u;
}

void sub_1D4AAC8D0()
{
}

void sub_1D4AAC8D8()
{
}

uint64_t sub_1D4AAC96C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18)
{
  *a4 = 0;
  *a5 = 0;
  a18 = 108757529 * ((&a17 & 0xA7DA3C6 | ~(&a17 | 0xA7DA3C6)) ^ 0x151E3E12) - 504207030;
  uint64_t v19 = (*(uint64_t (**)(int *))(v18 + 17848))(&a17);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1504 * (a17 == 526347143)) ^ 0x29Au)))(v19);
}

uint64_t sub_1D4AACA74@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1988
                                * (*(unsigned __int8 *)(v1 + (a1 & 0x703370FD ^ 0x840E947F) + v2) == ((-33 * (a1 & 0xFD ^ 0x7D)) ^ 0x30))) ^ a1 & 0x703370FDu)))();
}

void sub_1D4AACAD8()
{
  *(void *)(v0 + 312) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1108));
  JUMPOUT(0x1D4AA9AFCLL);
}

uint64_t sub_1D4AACAFC@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v6 = *(_DWORD *)((char *)&STACK[0x2EC] + ((v4 + v2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v4 + v2)) = ((v3 - 31) ^ HIBYTE(v6) ^ 0xE4)
                                           - ((2 * ((v3 - 31) ^ HIBYTE(v6) ^ 0xE4)) & 0xD6)
                                           - 21;
  *(unsigned char *)(a1 + (v4 + v2 + 1)) = (BYTE2(v6) ^ 0xD1)
                                               - 2 * ((BYTE2(v6) ^ 0xD1) & 0xEF ^ BYTE2(v6) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v4 + v2 + 2)) = (BYTE1(v6) ^ 0x5B)
                                               - 2 * ((BYTE1(v6) ^ 0x5B) & 0xEF ^ BYTE1(v6) & 4)
                                               - 21;
  *(unsigned char *)(a1 + (v4 + v2 + 3)) = v6 ^ 0x25;
  unsigned int v7 = LODWORD(STACK[0x348]) - 1742330787;
  BOOL v8 = v7 < a2;
  BOOL v9 = v4 - 1119382050 < v7;
  if (v4 - 1119382050 < a2 != v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((207 * v9) ^ v3)))();
}

uint64_t sub_1D4AACBF0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  int v17 = a1 + 1290;
  int v18 = 1224239923
      * ((857809693 - ((v16 - 144) ^ 0xE6269F18 | 0x3321231D) + ((v16 - 144) ^ 0xE6269F18 | 0xCCDEDCE2)) ^ 0xD84BBE2D);
  *(void *)(v16 - 136) = &a13 + v13;
  *(_DWORD *)(v16 - 144) = v18 ^ 0x432AA48E;
  *(_DWORD *)(v16 - 12_Block_object_dispose(&STACK[0x368], 8) = v18 + v17 + 238;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v17 ^ 0xF84)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((((v17 ^ 0x4D9) - 931) * (v15 == 0)) ^ (v17 - 1766))))(v19);
}

uint64_t sub_1D4AACCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v12 = (a5 - 2124560029);
  *(unsigned char *)(v11 + v12) ^= *(unsigned char *)(v8 + (v12 & 0xF)) ^ *(unsigned char *)((v12 & 0xF) + v7 + 2) ^ *(unsigned char *)((v12 & 0xF) + v9 + 4) ^ (119 * (v12 & 0xF));
  return (*(uint64_t (**)(void))(v10 + 8 * ((26 * (a5 - 1 != v6)) ^ (a6 - 1855))))();
}

uint64_t sub_1D4AACD2C()
{
  *(void *)(v1 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v2 == v4) ^ v3) & 1 | (8 * (((v2 == v4) ^ v3) & 1))) ^ v0)))();
}

uint64_t sub_1D4AACD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,uint64_t a22,uint64_t a23)
{
  a21 = (v24 - 410) ^ ((&a21 ^ 0x6DF41809) * v23);
  a22 = (uint64_t)&a20 + v25 + 4;
  a23 = a18;
  uint64_t v27 = (*(uint64_t (**)(unsigned int *))(v26 + 8 * (v24 ^ 0xDABu)))(&a21);
  return sub_1D4A8462C(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1D4AACDB4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

void sub_1D4AACDCC(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((2 * (a1 & 0x5E99CC2A) - a1 - 1587137579) ^ 0xAB923DFA);
  uint64_t v2 = *(void *)a1;
  if (*(_DWORD *)(*(void *)a1 - 0x139154EEB4327ECLL) - 1740488377 >= 0) {
    unsigned int v4 = *(_DWORD *)(*(void *)a1 - 0x139154EEB4327ECLL) - 1740488377;
  }
  else {
    unsigned int v4 = 1740488377 - *(_DWORD *)(*(void *)a1 - 0x139154EEB4327ECLL);
  }
  uint64_t v3 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v3 - 0x139154EEB4327ECLL) - 1740488377 >= 0) {
    unsigned int v5 = *(_DWORD *)(v3 - 0x139154EEB4327ECLL) - 1740488377;
  }
  else {
    unsigned int v5 = 1740488377 - *(_DWORD *)(v3 - 0x139154EEB4327ECLL);
  }
  v8[1] = (460628867 * (((v8 | 0xE042447A) - (v8 & 0xE042447A)) ^ 0xACD4C607)) ^ (v1 + 735);
  uint64_t v9 = v2;
  uint64_t v6 = (char *)*(&off_1F2C91B30 + v1 - 157) - 4;
  (*(void (**)(_DWORD *))&v6[8 * v1 + 16080])(v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1D4AACF80(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 + a1 - 876701046) < 0x7FFFFFFF) * (a1 - 77)) ^ a1)))();
}

uint64_t sub_1D4AACFD8@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 3 + (v5 + v3)) = *(_DWORD *)(v2 - 3 + (v5 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * ((3419 * (a1 - 365 == v4)) ^ (a1 + 947))))();
}

uint64_t sub_1D4AAD020()
{
  return sub_1D4AAD03C();
}

uint64_t sub_1D4AAD03C@<X0>(int a1@<W0>, char a2@<W7>, uint64_t a3@<X8>)
{
  int v10 = (*(unsigned __int8 *)(v4 + a3) ^ v7) - (*(unsigned char *)(v3 + a3) + ((v5 + 4) | a2) + 46 + 66);
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v6 & (2 * v10)) + (v10 ^ v8) == v8) * a1) ^ v5)))();
}

uint64_t sub_1D4AAD08C()
{
  (*(void (**)(void))(v2 + 8 * (v1 ^ 0xCA9)))();
  return (*(uint64_t (**)(void))(v2 + 8 * ((13 * (*(void *)(v0 + 328) != 0)) | (v1 - 1019))))();
}

uint64_t sub_1D4AAD0C8@<X0>(void *a1@<X1>, int a2@<W6>, int a3@<W7>, uint64_t a4@<X8>)
{
  *(_DWORD *)(*a1 + 4 * (v5 + v4)) = v7;
  return (*(uint64_t (**)(void))(a4 + 8 * (((v9 == ((v8 + 147) ^ a2) + v6) * a3) ^ (v8 + 205))))();
}

uint64_t sub_1D4AAD118()
{
  BOOL v4 = v3 + v2 + 2 >= (((v1 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(void))(v0 + 8 * ((2 * v4) | (8 * v4) | (v1 + 974))))();
}

uint64_t sub_1D4AAD168()
{
  _DWORD *v2 = v1;
  int v4 = v1 - ((2 * v1) & 0x5212CBB8) + (((v0 - 2182) | 0x19) ^ 0x290965C5);
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((39
                                * (((v4 << ((v0 - 30) ^ 0x69)) & 0x6EEE4FBC ^ 0x42024BB8) + (v4 ^ 0x5E7E4202) - 4458120 == 1999839574)) ^ v0)))();
}

void sub_1D4AAD204()
{
  uint64_t v4 = 4 * (v1 - 2105948263);
  unsigned int v5 = -1195886157
     * ((*(_DWORD *)(*(void *)STACK[0x3F8] + (*(int *)STACK[0x3F0] & 0xFFFFFFFF80941F5CLL)) ^ (v2 + v4)) & 0x7FFFFFFF);
  int v6 = v5 ^ HIWORD(v5);
  uint64_t v7 = 4 * ((-1195886157 * v6) >> (((v0 - 99) & 0xEF) + 42));
  *(_DWORD *)(v3 + v4) ^= *(_DWORD *)(v2 + v4) ^ *(_DWORD *)((char *)*(&off_1F2C91B30 + (v0 ^ 0x259)) + v7 - 4) ^ *(_DWORD *)((char *)*(&off_1F2C91B30 + (v0 ^ 0x271)) + v7 - 8) ^ *(_DWORD *)((char *)*(&off_1F2C91B30 + (v0 ^ 0x24C)) + v7 - 12) ^ (968032256 * v6) ^ (-1195886157 * v6) ^ (-2081955537 * ((-1195886157 * v6) >> (((v0 - 99) & 0xEF) + 42)));
  JUMPOUT(0x1D4A81A68);
}

uint64_t sub_1D4AAD304@<X0>(uint64_t a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v9 = 15 * (a2 ^ 0x496u);
  *(_OWORD *)(v4 + ((((v9 - 1123) | 0x481u) + v7) & (v3 + v6))) = *a3;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((88 * (((v9 ^ 0x1FFFFFB73) & ((a1 ^ 0x499) + v5)) != 16)) | v9)))();
}

uint64_t sub_1D4AAD390@<X0>(char a1@<W2>, char a2@<W3>, int a3@<W4>, int a4@<W5>, uint64_t a5@<X8>)
{
  uint64_t v14 = (v7 + a3);
  *(unsigned char *)(v13 + v14) = *(unsigned char *)(v9 + v14) ^ *(unsigned char *)(v5 + (v14 & 0xF)) ^ *(unsigned char *)(a5 + (v14 & 0xF)) ^ *(unsigned char *)((v14 & 0xF) + v6 + 2) ^ ((v14 & 0xF) * (((v8 + a1) & a2) + 0x80)) ^ v10;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v7 - 1 == v11) * a4) ^ v8)))();
}

uint64_t sub_1D4AAD3F4(int a1, int a2, int a3)
{
  int v4 = (a1 - 1047737427) & 0x3E7335DE;
  unsigned int v5 = a2 - 1522488795 + (v4 ^ 0x5EA) - 369;
  if (v5 <= 0x40) {
    unsigned int v5 = 64;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((57 * (a3 + v5 > ((v4 - 1177) ^ (a2 - 1522488795)))) ^ v4)))();
}

void sub_1D4AAD46C(uint64_t a1)
{
  int v1 = 1178560073 * ((-2 - ((a1 | 0x20C3A6CC) + (~a1 | 0xDF3C5933))) ^ 0x65A82151);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D4AAD508(unint64_t a1)
{
  *(void *)(v2 + 304) = v3 + ((v1 - 574) | 0x288u) - 1096;
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8 * (v1 ^ (19 * (v4 > a1))));
  *(void *)(v2 + 96) = a1;
  return v6();
}

uint64_t sub_1D4AAD5D0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, void))(v7 + 8 * ((1632 * (v8 - 1 == a7)) ^ v9)))(a1, (a2 + 1));
}

void sub_1D4AAD64C()
{
}

uint64_t sub_1D4AAD868@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  v7.i64[0] = 0xECECECECECECECECLL;
  v7.i64[1] = 0xECECECECECECECECLL;
  *(int8x16_t *)(a1 + v2 + 16 + 100 * (a2 ^ 0x5C6u)) = vaddq_s8(vaddq_s8(*v4, v7), vmvnq_s8(vandq_s8(vaddq_s8(*v4, *v4), v6)));
  return (*(uint64_t (**)(void))(v5 + 8 * ((709 * (v3 == 16)) ^ a2)))();
}

uint64_t sub_1D4AAD874(int8x16_t *a1, double a2, double a3, double a4, double a5, int8x16_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  *a1 = vaddq_s8(vaddq_s8(*(int8x16_t *)(v15 + (v11 + v14)), a7), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(v15 + (v11 + v14)), *(int8x16_t *)(v15 + (v11 + v14))), a6)));
  return (*(uint64_t (**)(void))(v13 + 8 * (a10 ^ (a11 + v12 + 1842))))();
}

void sub_1D4AAD8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  int v7 = *(unsigned __int8 *)(v6 - 124) ^ 0xDD;
  if (v7 == 1)
  {
    char v8 = (a6 - 96) & 0xF9;
    unsigned int v14 = *(_DWORD *)(v6 - 156);
    unsigned int v13 = *(_DWORD *)(v6 - 152);
    *(unsigned char *)(v6 - 164) = (((_BYTE)v13 << (v8 + 90)) ^ 0x20) - ((2 * (((_BYTE)v13 << (v8 + 90)) ^ 0x20)) & 0xD0) - 21;
    char v12 = -42;
    *(unsigned char *)(v6 - 163) = ((v13 >> 5) ^ 0x87) - ((2 * ((v13 >> 5) ^ 0x87)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 162) = ((v13 >> 13) ^ 8) - 2 * (((v13 >> 13) ^ 8) & 0xEF ^ (v13 >> 13) & 4) - 21;
    *(unsigned char *)(v6 - 161) = ((v13 >> 21) ^ 0x54) - ((2 * ((v13 >> 21) ^ 0x54)) & 0xD6) - 21;
    HIDWORD(v15) = v14 ^ 5;
    LODWORD(v15) = v13 ^ 0xA0000000;
    *(unsigned char *)(v6 - 160) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 159) = ((v14 >> 5) ^ 0x31) - ((2 * ((v14 >> 5) ^ 0x31)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 15_Block_object_dispose(&STACK[0x368], 8) = ((v14 >> 13) ^ 0xA8) + (~(2 * ((v14 >> 13) ^ 0xA8)) | 0x29) - 20;
    unsigned int v11 = (v14 >> 21) ^ 0x1D;
  }
  else
  {
    if (v7 != 2) {
      goto LABEL_6;
    }
    char v8 = a5 + a6 - 87;
    unsigned int v11 = *(_DWORD *)(v6 - 156);
    unsigned int v9 = *(_DWORD *)(v6 - 152);
    *(unsigned char *)(v6 - 164) = v8 + ((v11 >> 21) ^ 0x1D) - ((2 * ((v11 >> 21) ^ 0x1D)) & 0xD6) + 66;
    *(unsigned char *)(v6 - 163) = ((v11 >> 13) ^ 0xA8) - 2 * (((v11 >> 13) ^ 0xA8) & 0xEF ^ (v11 >> 13) & 4) - 21;
    *(unsigned char *)(v6 - 162) = ((v11 >> 5) ^ 0x31) - ((2 * ((v11 >> 5) ^ 0x31)) & 0xD6) - 21;
    HIDWORD(v10) = v11 ^ 5;
    LODWORD(v10) = v9 ^ 0xA0000000;
    *(unsigned char *)(v6 - 161) = (v10 >> 29) - ((2 * (v10 >> 29)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 160) = ((v9 >> 21) ^ 0x54) - ((2 * ((v9 >> 21) ^ 0x54)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 159) = ((v9 >> 13) ^ 8) + (~(2 * ((v9 >> 13) ^ 8)) | 0x29) - 20;
    *(unsigned char *)(v6 - 15_Block_object_dispose(&STACK[0x368], 8) = ((v9 >> 5) ^ 0x87) - ((2 * ((v9 >> 5) ^ 0x87)) & 0xD6) - 21;
    LOBYTE(v11) = (8 * v9) ^ 0x20;
    char v12 = -48;
  }
  *(unsigned char *)(v6 - 157) = v11 - (((_BYTE)v11 << ((a6 + v8 + 87) ^ 0xE)) & v12) - 21;
LABEL_6:
  JUMPOUT(0x1D4A829DCLL);
}

uint64_t sub_1D4AADAFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(*a1 - 0x3F70C0CAD4126774) = 0;
  return (*(uint64_t (**)(void))(a2 + 8 * (((*v3 == v2 + v4 - 187) * (v4 ^ 0xBF)) | v4)))();
}

uint64_t sub_1D4AADB48@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W8>)
{
  BOOL v11 = v5 < a1;
  *(unsigned char *)(v10 - 220 + (a5 - 1398064152)) = a3
                                                          - 115
                                                          + *(unsigned char *)(v8 + (v7 + a4))
                                                          + (~(2 * *(unsigned char *)(v8 + (v7 + a4))) | 0x29)
                                                          - 66;
  unsigned int v12 = v7 + 1 + a2;
  int v13 = v11 ^ (v12 < a1);
  BOOL v14 = v12 < v5;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((!v11 * v6) | a3)))();
}

uint64_t sub_1D4AADBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * (((a23 == 2029314865) * (v23 ^ 0x7F6)) ^ v23)))();
}

uint64_t sub_1D4AADC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((LODWORD(STACK[0x3C4]) ^ 0xA04) * (v5 == v7)) ^ (a5 - 1079))))();
}

uint64_t sub_1D4AADC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((((v8 - 288) | 0x5B) - 1011) * (*(_DWORD *)(v9 + v10 * (uint64_t)a8 + 36) == a6)) ^ v8)))();
}

uint64_t sub_1D4AADCF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7
                                                     + 8
                                                     * (((a5 + v6 + 1234 + ((v6 - 67538113) & 0x2F67ADFF) - 2139)
                                                       * (v5 == 63)) ^ v6)))(a1, -1335000053);
}

void sub_1D4AADD44(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D4AADD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((((((v5 + 190) | 0x100) ^ 0x1B2)
                                                                          + ((v5 - 1481316027) & 0x584B1698))
                                                                         * (v3 == 63)) ^ (v5 + 1764))))(a1, a2, a3, 235);
}

uint64_t sub_1D4AADDE4()
{
  BOOL v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 + 1903)))(v0 ^ v1) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * ((((v2 - 347) ^ 0x7F1) - 909) ^ ((v2 - 347) | 0x410))) ^ v2)))();
}

uint64_t sub_1D4AADE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v10 = *((_DWORD *)&STACK[0x2AC] + ((v8 + v5) >> (v7 ^ (a5 - 127) ^ (a5 + 2))) + 18);
  *(unsigned char *)(a2 + (v8 + v5)) = (HIBYTE(v10) ^ 0xDB) - ((2 * (HIBYTE(v10) ^ 0xDB)) & 0xD6) - 21;
  *(unsigned char *)(a2 + (v8 + v5 + 1)) = (BYTE2(v10) ^ 0xD1)
                                               - 2 * ((BYTE2(v10) ^ 0xD1) & 0xEF ^ BYTE2(v10) & 4)
                                               - 21;
  *(unsigned char *)(a2 + (v8 + v5 + 2)) = (BYTE1(v10) ^ 0x5B)
                                               - 2 * ((BYTE1(v10) ^ 0x5B) & 0xEF ^ BYTE1(v10) & 4)
                                               - 21;
  *(unsigned char *)(a2 + (v8 + v5 + 3)) = v10 ^ 0x25;
  unsigned int v11 = LODWORD(STACK[0x308]) + 61646556;
  BOOL v12 = v11 < v6;
  BOOL v13 = v8 + 992862982 < v11;
  if (v8 + 992862982 < v6 != v12) {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * (v7 | (32 * !v13))))();
}

void sub_1D4AADF30(_DWORD *a1@<X8>)
{
  *a1 = v1 + 84;
  JUMPOUT(0x1D4AA8348);
}

uint64_t sub_1D4AADF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(_DWORD *)(a16 + 4 * (v19 - 2035262287)) = v16;
  int v21 = v17 - 903 + v19 - 386756716;
  BOOL v23 = v21 > -498977092 && v21 < v18;
  return (*(uint64_t (**)(void))(v20 + 8 * ((21 * v23) | v17)))();
}

void sub_1D4AADF94()
{
}

void sub_1D4AADFC8(uint64_t a1)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  int v2 = *(_DWORD *)(a1 + 44) - 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  int v30 = *(_DWORD *)(a1 + 16) + 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  int v3 = *(_DWORD *)(a1 + 36);
  unint64_t v17 = 1755732067
      * (((a1 | 0xDEEEE61CC66703ELL) - (a1 | 0xF211119E33998FC1) - 0xDEEEE61CC66703FLL) ^ 0xD045495E12A0CDE5);
  int v4 = v3 + 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  unsigned int v5 = 1178560073 * ((1588112264 - (&v36 | 0x5EA8AB88) + (&v36 | 0xA1575477)) ^ 0x1BC32C15);
  uint64_t v25 = &STACK[0x72E93EC0CCAF5A6E];
  uint64_t v37 = &STACK[0x72E93EC0CCAF5A6E];
  int v38 = v2 - v5 - 1882357527;
  unsigned int v36 = 1184294775 - v5;
  unsigned int v6 = (char *)*(&off_1F2C91B30 + (v2 ^ 0xA7)) - 4;
  (*(void (**)(unsigned int *))&v6[8 * (v2 ^ 0x8DB)])(&v36);
  int v7 = v30;
  int v16 = v4 - 461360650;
  int v15 = v4 - 1852862698;
  int v12 = v4 + 1614707568;
  int v11 = v4 - 918853615;
  v9[1] = (char *)&v9[-132764623] + 2;
  v9[0] = (char *)&v9[-132764709] + 5;
  uint64_t v19 = (v2 - 1952158165) ^ 0x6Bu;
  int v20 = v2 ^ 0x33E;
  int v14 = v2 ^ 0x17;
  int v13 = (v2 - 1952158165) & 0x745B97FF;
  int v18 = 289 * (v13 ^ 0x66D);
  int v10 = v2 ^ 0xD4;
  uint64_t v27 = v2 ^ 0xD4u;
  int v28 = v2;
  int32x4_t v23 = vdupq_n_s32(0x1F5F6B87u);
  int32x4_t v24 = vdupq_n_s32(0x3EBED70Eu);
  int32x4_t v22 = vdupq_n_s32(0x1F5F6B8Fu);
  uint64_t v21 = a1;
  uint64_t v29 = *(void *)a1;
  uint64_t v26 = *(void *)&v6[8 * v2];
  unsigned int v8 = v7 - ((2 * v7 + 2042427806) & 0xA7400726) - 1870757790;
  char v31 = ((v8 >> (v2 - 39)) ^ 0xD3) - ((((v8 >> (v2 - 39)) ^ 0xFFFFFFD3) << ((v2 + 43) ^ 0x6B)) & 0xD6) - 21;
  char v32 = (BYTE2(v8) ^ 0xA0) - 2 * ((BYTE2(v8) ^ 0xA0) & 0xEF ^ BYTE2(v8) & 4) - 21;
  char v33 = (BYTE1(v8) ^ 3) - 2 * ((BYTE1(v8) ^ 3) & 0xEF ^ BYTE1(v8) & 4) - 21;
  char v34 = (v7 - ((2 * v7 - 98) & 0x26) + 98) ^ 0x78;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D4AAE280@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24
                                                              + 8
                                                              * ((3210
                                                                * (*(_DWORD *)(a21
                                                                             + 4 * (v23 + a1 + ((v22 - 826) | 0x487u))) == ((v22 - 1318100615) & 0x4E909EF7 ^ (v21 + 851)))) ^ (v22 + 113))))(316, 2147482380, 509);
}

uint64_t sub_1D4AAE314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 120) = v16 + 1374699841 * ((v17 - 136) ^ 0x6DF41809) + 366;
  *(void *)(v17 - 136) = v14;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x368], 8) = a14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0xD47)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((a11 < (v16 ^ 0x5AD)) ^ v16)))(v18);
}

uint64_t sub_1D4AAE398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((59 * ((a5 + 1 + v7) > 0x27)) ^ v6)))(v5);
}

void sub_1D4AAE460(int a1@<W8>)
{
  *(void *)(v5 - 0xAA58417147CEA7FLL) = *v2;
  *(_DWORD *)(v6 - 0x234F284A02F7E69BLL) = a1;
  *(void *)(v9 - 0x2C138C8FAF40FC1ALL) = 0x3B6203503B620350;
  void *v2 = 0;
  _DWORD *v4 = 226063315;
  unsigned int v3 = ((2 * (*(_DWORD *)(v9 - 0x2C138C8FAF40FC0ELL) & 0xFFFFFFFE ^ 0xCA875928)) | 0x44367150)
     - (*(_DWORD *)(v9 - 0x2C138C8FAF40FC0ELL) & 0xFFFFFFFE ^ 0xCA875928)
     - 572209320;
  *(_DWORD *)(v9 - 0x2C138C8FAF40FC0ELL) = ((v3 & ((v1 + 1566) ^ 0x2CA500F1) ^ 0xCA50017)
                                          + (v3 ^ 0xE35A39A8)
                                          - ((v3 ^ 0xE35A39A8) & 0x2CA508B6)) ^ 0x2763509E;
  *(_DWORD *)(v8 + 2_Block_object_dispose(&STACK[0x368], 8) = *v7;
}

uint64_t sub_1D4AAE5AC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((2 * (*(void *)(v0 + 128) == 0)) | (8 * (*(void *)(v0 + 128) == 0))) ^ (v1 + 423))))();
}

uint64_t sub_1D4AAE5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,long long a44)
{
  *(long long *)((char *)&a44 + 4) = (__int128)vaddq_s8(vsubq_s8(*(int8x16_t *)(v49 + (v45 + a5)), vandq_s8(vaddq_s8(*(int8x16_t *)(v49 + (v45 + a5)), *(int8x16_t *)(v49 + (v45 + a5))), v51)), v50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((((((v44 - 7) | a8) ^ v46) == 16) * v47) ^ (v44 + 426))))(a1, a2, a3, (char *)&a44 + 4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1D4AAE630()
{
  unsigned int v3 = (unsigned int *)STACK[0x2D0];
  (*(void (**)(void, unint64_t *, uint64_t))(v2 + 8 * (v1 + 692)))(*(unsigned int *)STACK[0x2D0], &STACK[0x438], 2048);
  BOOL v4 = (*(uint64_t (**)(void, unint64_t *, void, uint64_t))(v2 + 8 * (v1 + 782)))(*v3, &STACK[0x560], (LODWORD(STACK[0x4DC]) + v0), 1) == (v1 ^ 0x1AC) - 1115;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (v1 - 569)) ^ v1)))();
}

uint64_t sub_1D4AAE6C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned int *a5)
{
  STACK[0x530] = 0x9F2D4B9C0625FB43;
  uint64_t v9 = *a5;
  unint64_t v10 = 1178560073 * ((v8 - 0x21741D930661398ALL - 2 * ((v8 - 144) & 0xDE8BE26CF99EC706)) ^ 0xC577B284430ABF64);
  *(_DWORD *)(v8 - 12_Block_object_dispose(&STACK[0x368], 8) = v5 - 1473496235 + v10;
  *(void *)(v8 - 136) = v10 + v7;
  *(_DWORD *)(v8 - 10_Block_object_dispose(&STACK[0x368], 8) = v10 + v5 + 1980802588;
  *(_DWORD *)(v8 - 104) = ((v5 - 1473496235) ^ 0x5D) - v10;
  *(_DWORD *)(v8 - 112) = (v5 - 1473496246) ^ v10;
  *(_DWORD *)(v8 - 140) = v10;
  *(void *)(v8 - 120) = v9 + v10;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v5 ^ (a3 - 1842))))(v8 - 144);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v8 - 144)))(v11);
}

void sub_1D4AAE7C4()
{
}

uint64_t sub_1D4AAE8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  if ((a13 - 474666373) < 0xFCD840F2 != v13 - 711973896 < (v15 - 52938070)) {
    BOOL v16 = (a13 - 474666373) < 0xFCD840F2;
  }
  else {
    BOOL v16 = v13 - 711973896 < (a13 - 474666373);
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((204 * v16) ^ v15)))();
}

void sub_1D4AAE964()
{
}

uint64_t sub_1D4AAE970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  BOOL v24 = a18 - v21 == (v19 ^ 0x267) + 40392874 && v18 != ((v20 + v19 - 1190) ^ 0xAF569717);
  return (*(uint64_t (**)(void))(v22 + 8 * ((14 * v24) ^ v19)))();
}

uint64_t sub_1D4AAE9CC(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25)
{
  HIDWORD(a21) = HIDWORD(a20) + 604952958;
  v26.n128_u64[0] = 0xD6D6D6D6D6D6D6D6;
  v26.n128_u64[1] = 0xD6D6D6D6D6D6D6D6;
  v27.n128_u64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v27.n128_u64[1] = 0xEBEBEBEBEBEBEBEBLL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (int)((((163 * (a21 ^ 0x46) - 2000) ^ a21 ^ 0x80C) * (a17 < HIDWORD(a16))) | a21)))(2801639823, 2365043103, 1929924193, 1517301994, a25, 2959569291, 11, 2777665302, a1, a2, a3, a4, v26, v27, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21);
}

uint64_t sub_1D4AAEA7C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5
                                           + 8
                                           * ((((v3 & 0x18) == (((a2 - 1497) | 0x410) ^ 0x45B))
                                             * (((a2 - 1408) | 0x413) ^ 0x43B)) ^ (a2 - 1294))))((v2 - v4));
}

uint64_t sub_1D4AAEACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((54 * (v9 + v6 + 63 < ((a5 + (v7 ^ (a6 + 265)) + 1457) ^ (v9 + 945)) + v6)) ^ v7)))();
}

uint64_t sub_1D4AAEB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((*(_DWORD *)(v10 + (v11 + a7 + ((v8 - 443017874) & 0x1A67EF81)) * (uint64_t)a8) != 613075069)
                                * v9) ^ (v8 + 1018))))();
}

uint64_t sub_1D4AAEB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v44 = STACK[0x420] - 923;
  *(_DWORD *)(v41 + 52) = a40
                        + ((((LODWORD(STACK[0x644]) ^ v43) + (v40 ^ v43)) % 0x2710) ^ 0xF5DF5FB7)
                        + ((2 * (((LODWORD(STACK[0x644]) ^ v43) + (v40 ^ v43)) % 0x2710)) & 0x3F6E)
                        + 774436026;
  int v45 = STACK[0x64C];
  LODWORD(STACK[0x46C]) = STACK[0x64C];
  return (*(uint64_t (**)(void))(v42 + 8 * ((1839 * (v45 == v43)) ^ v44)))();
}

uint64_t sub_1D4AAEBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v7
                                                                      + 8
                                                                      * (int)(((((v5 + 2038974714) & 0x8677B6DF) - 747)
                                                                             * (v4 == v6)) | v5)))((v3 - v6), a2, a3, 3768594526);
}

uint64_t sub_1D4AAEBFC()
{
  uint64_t v5 = v0 + ((v1 - 155) | v3) - 1748;
  BOOL v7 = v2 == 15 || v5 == (((v1 - 1047) | 0x20u) ^ 0x4ACFF0C1A5FD164CLL);
  return (*(uint64_t (**)(void))(v4 + 8 * ((106 * v7) ^ v1)))();
}

uint64_t sub_1D4AAEC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(void *)(*(void *)(a16 + 96) + 504) = v18 + 1;
  *(_DWORD *)(*(void *)(a16 + 96) + 496) = a18 - 1;
  int v21 = 1178560073 * ((((v20 - 160) | 0xA18E8F2E) - ((v20 - 160) & 0xA18E8F2E)) ^ 0x1B1AF74C);
  *(_DWORD *)(v20 - 144) = -1882357464 - v21;
  STACK[0x318] = (unint64_t)&STACK[0x72E93EC0CCAF5A2E];
  *(_DWORD *)(v20 - 160) = 1184294775 - v21;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 18208))(v20 - 160);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((16
                                              * (a18
                                               - 1196230952
                                               + ((2 * LODWORD(STACK[0x2F0])) & 0x5E ^ 0x48)
                                               + (STACK[0x2F0] & 0x3F ^ 0xCB5B9CCB) > 0xFFFFFFBF)) ^ 0x6CCu)))(v22);
}

void sub_1D4AAEE5C()
{
}

uint64_t sub_1D4AAEE68@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((480 * (*(_DWORD *)(*v3 + 4 * a1) == v2)) ^ v4)))();
}

uint64_t sub_1D4AAEE98@<X0>(int a1@<W8>)
{
  unsigned int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xAAB));
  return v3(v1);
}

uint64_t sub_1D4AAEECC(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  *(unsigned char *)(a1 + (v6 + a5)) = *(unsigned char *)(v7 + (v6 + a5));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 - 995 + v6 - 121 == a4) * a3) ^ (v5 - 790))))();
}

uint64_t sub_1D4AAEF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  HIDWORD(a22) = 2119813987;
  unsigned int v35 = 628203409 * (((&a24 | 0x621A779) + (~&a24 | 0xF9DE5886)) ^ 0x84A9AB4B);
  a25 = a14;
  a24 = a16;
  LODWORD(a26) = v30 - v35 + 1452;
  HIDWORD(a26) = -1178884666 - v35 + HIDWORD(a23);
  a29 = a21;
  a27 = a17;
  a30 = a15;
  uint64_t v36 = (*(uint64_t (**)(uint64_t *))(v31 + 8 * (v30 ^ 0x8A8)))(&a24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (((a28 == 526347143) * (((v30 - 409) | 0x640) + 313)) ^ v30)))(v36, v33, 2079419387, &off_1F2C91B30, v32, 2291026155, 2514269652, v34, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_1D4AAF010(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v14 = v11 < v9;
  if (v14 == v10 + 1 > v12) {
    BOOL v14 = v9 + v10 + (v8 ^ a2) - 724 < v11;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((v14 * a8) ^ v8)))();
}

uint64_t sub_1D4AAF080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v21 = 628203409 * ((((v20 - 160) | 0x96D41AAA) - ((v20 - 160) & 0x96D41AAA)) ^ 0x145C1699);
  int v25 = (v18 - a6) ^ (a5 - 627);
  STACK[0x310] = a14;
  *(_DWORD *)(v20 - 152) = v21 + v18 + 588;
  *(_DWORD *)(v20 - 14_Block_object_dispose(&STACK[0x368], 8) = a18 - v21 - 1033765421;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v18 ^ 0x8D4)))(v20 - 160);
  uint64_t v23 = STACK[0x2F0] & 0x3F;
  *((unsigned char *)&STACK[0x2AC] + (v23 ^ 0x24)) = 107;
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((847 * ((v23 ^ 0x24) > v25 - 872)) ^ v18)))(v22);
}

uint64_t sub_1D4AAF18C@<X0>(uint64_t a1@<X1>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (v5 + v4)) = *(unsigned char *)(a1 + (v5 + v4));
  return (*(uint64_t (**)(void))(v6 + 8 * ((174 * (v5 - 1 == ((a2 + 1986596179) & 0x8996F7FD) + a3)) ^ (a2 + 256))))();
}

void sub_1D4AAF1DC(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 48) - 0x38223619C320A2BLL) = a1;
  JUMPOUT(0x1D4AAF1F4);
}

uint64_t sub_1D4AAF200()
{
  *(void *)(v2 - 112) = v5;
  *(_DWORD *)(v2 - 116) = (v1 + 773) ^ (460628867 * ((v2 - 120) ^ 0x4C96827D));
  (*(void (**)(uint64_t))(v0 + 8 * (v1 | 0x800)))(v2 - 120);
  *(_DWORD *)(v2 - 116) = (v1 + 773) ^ (460628867
                                      * ((2 * ((v2 - 120) & 0x41CCCE60) - (v2 - 120) + 1043542430) ^ 0x72A5B3E3));
  *(void *)(v2 - 112) = v6;
  (*(void (**)(uint64_t))(v0 + 8 * (v1 | 0x800)))(v2 - 120);
  *(_DWORD *)(v2 - 104) = v1
                        + 1374699841
                        * ((1834202156 - ((v2 - 120) ^ 0xF8ADEB70 | 0x6D53B42C) + ((v2 - 120) ^ 0xF8ADEB70 | 0x92AC4BD3)) ^ 0x7F5B8AA)
                        + 1547;
  *(void *)(v2 - 120) = v4;
  *(void *)(v2 - 112) = v6;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 2012)))(v2 - 120);
}

uint64_t sub_1D4AAF38C@<X0>(uint64_t a1@<X2>, char a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v5 + a1) = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v5 + 1 + a1) < 0x38) * v3) ^ v4)))();
}

uint64_t sub_1D4AAF3B8()
{
  if (v0 >= 0) {
    unsigned int v4 = v0;
  }
  else {
    unsigned int v4 = -v0;
  }
  if (v1 < 0) {
    int v1 = -v1;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 + 386) ^ 0x625 ^ (577 * (v2 ^ 0x302))) * (v4 > v1)) ^ v2)))();
}

uint64_t sub_1D4AAF404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v11 = *(unsigned __int8 *)(v8 + v9 - 0x161D90635E9B0BE2) - *(unsigned __int8 *)(v6 + v9 - 0x161D90635E9B0BE2);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((1843
                                              * (((2 * v11) & 0xFFFFDFCE) + (v11 ^ (v5 + 358)) == a5
                                                                                                + ((v7 - 1466855688) | 0x534A410C)
                                                                                                + 358
                                                                                                + v5)) ^ v7)))(4294925278);
}

uint64_t sub_1D4AAF480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * ((23
                                                                        * (v8 < ((a8 - 1539) ^ 0xFFFFFDF6) + a8 - 1003)) ^ a8)))(a1, a2, a3, 0);
}

uint64_t sub_1D4AAF4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, unsigned int a20,uint64_t a21)
{
  unsigned int v25 = 1178560073 * ((((2 * &a17) | 0x572E13FC) - &a17 + 1416164866) ^ 0x1103719C);
  a18 = v25 + 762105055 * v23 + 296806364;
  a20 = v25 ^ 0x6EE;
  a19 = a16;
  (*(void (**)(int *))(v24 + 18624))(&a17);
  unsigned int v26 = 1178560073 * (((~&a17 & 0x8CEF827A) - (~&a17 | 0x8CEF827B)) ^ 0x367BFA19);
  a21 = v21;
  a20 = ((v22 ^ 0x6FEAF773) - 96601378 + ((2 * v22) & 0xDFD5EEE6)) ^ v26;
  a19 = a16;
  a18 = v26 + 1778;
  uint64_t v27 = (*(uint64_t (**)(int *))(v24 + 18544))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1999 * (a17 == 526347143)) ^ 0x34Fu)))(v27);
}

void sub_1D4AAF614()
{
}

uint64_t sub_1D4AAF620@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  int v14 = v5 ^ 0x1F0;
  uint64_t v15 = 4 * (v10 + v8);
  int v16 = v3 + v11 + (*(_DWORD *)(*(void *)(a3 - 0x139154EEB4327E8) + v15) ^ v12);
  *(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + v15) = v16 + v12 - (((v14 + 1314) ^ (v9 + 1591)) & (2 * v16));
  int v17 = v10 + 1 + v4;
  BOOL v19 = v17 > v6 || v17 < v7;
  return (*(uint64_t (**)(void))(v13 + 8 * ((61 * v19) ^ (v14 - 112))))();
}

uint64_t sub_1D4AAF6E8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a2 - 1060526740) & 0x3F365DDB ^ (a2 + 843)) * (v2 < 0x20)) ^ a2)))();
}

void sub_1D4AAF730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,_DWORD *a41)
{
  *a41 ^= a40;
  JUMPOUT(0x1D4AABAC8);
}

void sub_1D4AAF760()
{
}

uint64_t sub_1D4AAF810@<X0>(unsigned int a1@<W5>, int a2@<W6>, char a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_DWORD *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  unint64_t v46 = &a41 + ((509 * (v41 ^ 0x77C)) ^ 0xA47649B1) + a2;
  unsigned int v47 = -1195886157 * ((v46 ^ *(_DWORD *)(*v44 + (*a33 & ((v41 ^ 0x268) - 794100478)))) & 0x7FFFFFFF);
  unint64_t v48 = -1195886157 * (v47 ^ HIWORD(v47));
  char v49 = *((unsigned char *)*(&off_1F2C91B30 + (int)(v41 & 0x9B782001)) + (v48 >> 24) - 4);
  char v50 = *((unsigned char *)*(&off_1F2C91B30 + v41 - 1805) + (v48 >> 24) - 4) ^ *((unsigned char *)*(&off_1F2C91B30 + (v41 ^ 0x7CA))
                                                                       + (v48 >> 24));
  LOBYTE(v4_Block_object_dispose(&STACK[0x368], 8) = v48 ^ (-71 * BYTE3(v48));
  *unint64_t v46 = v49 ^ ((v42 ^ a1) >> a3) ^ v50 ^ v48;
  return (*(uint64_t (**)(void))(v43
                              + 8
                              * ((249
                                * (a2
                                 - (((v49 ^ ((v42 ^ a1) >> a3) ^ v50) ^ v48) != 0) == v45)) ^ v41)))();
}

uint64_t sub_1D4AAF914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v17 - 136) = v16
                         - 108757529 * ((((v17 - 136) | 0x22306975) + (~(v17 - 136) | 0xDDCF968A)) ^ 0xC2AC0B5F)
                         + 696;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x368], 8) = a13;
  *(void *)(v17 - 120) = v15;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 ^ 0xB0D)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((((v16 - 150) ^ 0x7F2 ^ ((v16 - 929) | 0x30B)) * (v13 == 291589261)) ^ v16)))(v18);
}

void sub_1D4AAF9C0()
{
}

void sub_1D4AAF9CC()
{
}

uint64_t sub_1D4AAFB0C@<X0>(int a1@<W8>)
{
  BOOL v5 = *(_DWORD *)(v2 + 48) - a1 == ((25 * (v1 ^ 0x366)) ^ 0x31E9C197)
    || (*(void *)(v2 + 32) | *(void *)(v2 + 56)) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((53 * (((v1 + 1) ^ v5) & 1)) ^ v1)))();
}

uint64_t sub_1D4AAFB74()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((13 * (*(void *)(v0 + 328) != 0)) | (v1 - 1019))))();
}

uint64_t sub_1D4AAFB9C@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W5>, int a4@<W6>, uint64_t a5@<X8>)
{
  *(unsigned char *)(a5 + (a1 + a3)) = *(unsigned char *)(v5 + (a1 + a3));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 - 1 == a2) * a4) ^ (v6 - 596))))();
}

uint64_t sub_1D4AAFBCC@<X0>(int a1@<W2>, int a2@<W8>)
{
  int v8 = STACK[0x58C];
  int v9 = (_DWORD *)STACK[0x3F0];
  unint64_t v10 = STACK[0x3F0] + 24 * v3;
  *(_DWORD *)(v10 + _Block_object_dispose(&STACK[0x368], 8) = v6;
  *(_DWORD *)(v10 + 12) = v5;
  *(void *)(v10 + 16) = STACK[0x3E8];
  *(_DWORD *)(v10 + 24) = v8;
  _DWORD *v9 = ((223 * (a2 ^ 0x294)) ^ 0x45A) + v2;
  BOOL v12 = v4 - 432991479 > -1594331289 && v4 - 432991479 < SLODWORD(STACK[0x3B0]);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a2 - 256) ^ a1) * v12) ^ a2)))();
}

void sub_1D4AAFC4C()
{
}

uint64_t sub_1D4AAFDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  unsigned int v23 = a20 ^ (v21 - 366) ^ (v20 + 696998381) & 0xD6749FFE;
  int v24 = v23 - ((((v20 - 1938) | 0x15C) - 677877140) & (2 * v23)) - 338938380;
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((102
                                * (((2 * v24) & 0xBF57FFBE ^ 0x97106BA8) + (v24 ^ 0xB467CA2B) - 34946 != 1605072733)) ^ v20)))();
}

uint64_t sub_1D4AAFE64@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((57
                                * ((v3 - 1740488377) * (v1 - 1740488377) > (int)((((v2 ^ 0x352) + 3) | 0x42) ^ 0xFFFFFE1D))) ^ v2 ^ 0x352)))();
}

void sub_1D4AAFEB4()
{
}

uint64_t sub_1D4AAFEC0()
{
  int v5 = 1759421093 * ((-1804449043 - ((v4 - 136) | 0x94724AED) + ((v4 - 136) | 0x6B8DB512)) ^ 0xD8F00546);
  *(_DWORD *)(v4 - 136) = v0 - v5 - 1613957347;
  *(_DWORD *)(v4 - 120) = v3 - v5 + 249;
  *(void *)(v4 - 12_Block_object_dispose(&STACK[0x368], 8) = v2;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v3 + 1436)))(v4 - 136);
  return sub_1D4AAFF40(v6);
}

uint64_t sub_1D4AAFF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x368], 8) = a14;
  *(void *)(v17 - 112) = v14;
  *(_DWORD *)(v17 - 120) = v16
                         + 1178560073
                         * ((-721431218 - ((v17 - 136) | 0xD4FFD54E) + ((v17 - 136) | 0x2B002AB1)) ^ 0x919452D3)
                         + 836;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0xB70)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((187 * (*(_DWORD *)(v17 - 136) > ((v16 + 556) ^ 0x4B4B6EE7u))) ^ (v16 + 1012))))(v18);
}

uint64_t sub_1D4AAFFF8()
{
  return 4294925278;
}

uint64_t sub_1D4AB0000@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 24_Block_object_dispose(&STACK[0x368], 8) = 104 - a1;
  int v3 = (uint64_t (*)(void))STACK[0x470];
  *(void *)(v1 + 304) = v2 - 112;
  return v3();
}

uint64_t sub_1D4AB0020()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v1 + 1175)))();
  LODWORD(STACK[0x46C]) = v0;
  return (*(uint64_t (**)(uint64_t, __n128))(v3
                                                    + 8
                                                    * (((((v1 - 564425967) & 0x21A477F7) - 781) * v2) ^ (v1 - 531))))(v4, (__n128)0);
}

uint64_t sub_1D4AB0088()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((v0 == ((v1 - 806) ^ 0xDA7533D8) + v2) * ((223 * (v1 ^ 0x784)) ^ 0x45F)) ^ v1)))();
}

uint64_t sub_1D4AB00D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8 * ((254 * (v7 + v6 + ((v8 + 1812807680) & 0x93F2BFDB) - 1605109252 + 458 < ((v8 + 1002504572) & 0xC43EFBD6) - 458)) ^ v8)))(v5, a2, a3, a4, a5, 2689894562, 42);
}

uint64_t sub_1D4AB0150()
{
  LODWORD(STACK[0x2EC]) = STACK[0x5A0];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 - 1667755605 < ((((v0 - 993588153) & 0x3B38EDAD) - 1045826070) & 0x3E5609CBu) - 64)
                                * ((((v0 - 993588153) & 0x3B38EDAD) - 35476425) & 0x21D537E ^ 0x55)) ^ (v0 - 993588153) & 0x3B38EDAD)))();
}

void sub_1D4AB017C(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (uint64_t)*(&off_1F2C91B30
                + (*((unsigned char *)off_1F2C91DA8
                                    + (*((unsigned __int8 *)off_1F2C91CB0
                                       + (-35 * (dword_1EA7106C0 ^ 0xD8 ^ qword_1EA70FB08))) ^ 0x4Du)
                                    - 4) ^ (-35 * (dword_1EA7106C0 ^ 0xD8 ^ qword_1EA70FB08)))
                - 56);
  uint64_t v4 = *(void *)(v3 - 4);
  uint64_t v5 = (uint64_t *)*(&off_1F2C91B30
                  + (*((unsigned char *)off_1F2C91D00
                                      + (*((unsigned __int8 *)off_1F2C91B68
                                         + (-35 * ((qword_1EA70FB08 + v4) ^ 0xD8))) ^ 0x50u)
                                      - 8) ^ (-35 * ((qword_1EA70FB08 + v4) ^ 0xD8)))
                  - 23);
  uint64_t v6 = 1226760413 * ((*v5 - v4 - (void)&v8) ^ 0x5B705F9A26A579D8);
  *(void *)(v3 - 4) = v6;
  uint64_t *v5 = v6;
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  LODWORD(v6) = 1178560073
              * ((&v10 - 1556789680 - 2 * ((unint64_t)&v10 & 0xA3354650)) ^ 0x19A13E32);
  int v10 = 1184294775 - v6;
  int v11 = &STACK[0x72E93EC0CCAF59F6];
  int v12 = -1882357464 - v6;
  LODWORD(v5) = 1226760413 * ((*(_DWORD *)v5 + *(_DWORD *)(v3 - 4)) ^ 0x26A579D8);
  int v7 = (char *)*(&off_1F2C91B30
               + ((-35 * (dword_1EA7106C0 ^ 0xD8 ^ qword_1EA70FB08)) ^ byte_1D54D2EA0[byte_1D54CE450[(-35 * (dword_1EA7106C0 ^ 0xD8 ^ qword_1EA70FB08))] ^ 0x83])
               - 10)
     - 4;
  (*(void (**)(int *))&v7[8
                                   * (*((unsigned char *)off_1F2C92068
                                                       + (*((unsigned __int8 *)off_1F2C91D50 + v5 - 12) ^ 0x83u)
                                                       - 4) ^ v5)
                                   + 16912])(&v10);
  __asm { BRAA            X9, X17 }
}

void sub_1D4AB0468()
{
}

uint64_t sub_1D4AB0470@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2 = a2;
  *(_DWORD *)(result + 16) = -526372686;
  return result;
}

uint64_t sub_1D4AB0484()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v3 + v2 - 469) * (v1 > 0x392B2874)) | (v3 + v2))))();
}

void sub_1D4AB04BC()
{
}

void sub_1D4AB0508()
{
}

void sub_1D4AB052C()
{
}

void sub_1D4AB0544()
{
}

void sub_1D4AB0554()
{
}

uint64_t sub_1D4AB0584@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a2 + 8 == v4 + a1 + v2 - 1018 - 505) * (v2 + 477)) ^ v2)))();
}

uint64_t sub_1D4AB05BC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((906
                                * ((v1 ^ 0x78F4E3B1) == ((((a1 + 520225033) | 0xC0110986) - 1981103704) ^ (v3 + a1 - 280))
                                                      + v2)) ^ a1)))();
}

void sub_1D4AB0624()
{
}

uint64_t sub_1D4AB062C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 16) != 0x66408E1D617AE0CDLL)
                                * ((16 * (v0 ^ 0x3EF)) ^ 0x452 ^ (31 * (v0 ^ 0x3EF)))) ^ v0)))();
}

void sub_1D4AB067C()
{
}

uint64_t sub_1D4AB07EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((((a6 + 201361807) ^ 0xC00926A) + v6 + ((a6 + 201361807) | 0x82000412))
                                     * (v7 == a4)) ^ a6)))();
}

uint64_t sub_1D4AB083C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(a11 + v13) = v15;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * (((((((((v12 - 485575916) & 0x1CF149FEu) - 7) ^ 0xFFFFFFFFFFFFFE0FLL) & v11) == 8) ^ (((v12 + 20) & 0xFE) - 93)) & 1 | (8 * ((((((((v12 - 485575916) & 0x1CF149FEu) - 7) ^ 0xFFFFFFFFFFFFFE0FLL) & v11) == 8) ^ (((v12 + 20) & 0xFE) - 93)) & 1))) ^ (((v12 - 485575916) & 0x1CF149FE) - 7))))();
}

uint64_t sub_1D4AB08AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((178
                                * (((v17 - 2079419384 + ((v16 + 75) | 0x24) - 1187) & ((2 * (v16 ^ 0x664)) ^ 0xFFFFFB5A))
                                 - a16 == -2079419384)) ^ v16)))();
}

void sub_1D4AB090C()
{
}

uint64_t sub_1D4AB09C0@<X0>(unsigned int a1@<W5>, uint64_t a2@<X6>, int a3@<W7>, char a4@<W8>)
{
  uint64_t v8 = (unsigned char *)(a2 + a3 + (v4 ^ 0x53C) - 471 + 2 * (v4 ^ 0x53Cu) - 1603217352);
  unsigned int v9 = -1195886157
     * ((v8 ^ *(_DWORD *)(*(void *)STACK[0x3F8] + (*(int *)STACK[0x3F0] & 0xFFFFFFFFACAFF0C4))) & 0x7FFFFFFF);
  unint64_t v10 = -1195886157 * (v9 ^ HIWORD(v9));
  char v11 = *(unsigned char *)(*(void *)(v6 + 8 * (v4 ^ 0x732)) + (v10 >> 24) - 12) ^ ((v5 ^ a1) >> a4) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v4 - 1808)) + (v10 >> 24) - 9) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v4 - 1762)) + (v10 >> 24) - 7) ^ v10 ^ (127 * BYTE3(v10));
  unsigned char *v8 = v11;
  BOOL v12 = a3 - (v11 != 0) != 1603216217;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v12 | (16 * v12)) ^ v4)))();
}

uint64_t sub_1D4AB0AB8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v1 + 976737560) & 0xC5C82B73 ^ 0xFFFFFC75) + v1 + 19) * (v0 == v2)) ^ v1)))();
}

void sub_1D4AB0B04(_DWORD *a1@<X8>)
{
  *a1 = v1;
}

uint64_t sub_1D4AB0B24(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v10 = 4 * (v5 - 1857521158);
  int v11 = *(_DWORD *)(v7 + 4 * (v5 - 1857521159));
  unsigned int v12 = (a4 + (~v11 >> 30) - 4 * (v11 >= 0)) ^ v11;
  int v13 = ((a4 + 1566083941 * v12 - ((-1162799414 * v12) & 0xFACB7EB4)) ^ *(_DWORD *)(v7 + v10)) - v5;
  *(_DWORD *)(v7 + v10) = v13 - ((2 * v13 - 579924980) & 0xFACB7EB4) + 1813857632;
  unint64_t v14 = 235795823
      * ((0x905CB3DC21C34473 - ((v9 - 144) | 0x905CB3DC21C34473) + ((v9 - 144) | 0x6FA34C23DE3CBB8CLL)) ^ 0x6713F6DD4A91F2D5);
  *(void *)(v9 - 112) = v14 + 3538870095u;
  int v15 = v14 ^ (v8 - 1320021819);
  *(_DWORD *)(v9 - 140) = v8 - 1320021819 - v14;
  *(_DWORD *)(v9 - 136) = v15 ^ 0x71;
  *(void *)(v9 - 12_Block_object_dispose(&STACK[0x368], 8) = (v5 + 1681348938) ^ v14;
  *(_DWORD *)(v9 - 120) = 2064071201 - v14 + v8;
  *(_DWORD *)(v9 - 116) = v14 + 1;
  *(_DWORD *)(v9 - 144) = v15 ^ 0x15;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v8 ^ (a5 - 1874))))(v9 - 144);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v9 - 104)))(v16);
}

uint64_t sub_1D4AB0C9C@<X0>(uint64_t a1@<X1>, int a2@<W4>, int a3@<W5>, unsigned int a4@<W8>)
{
  uint64_t v6 = a4;
  uint64_t v7 = a1 + a4;
  if ((unint64_t)(v7 + 1) > 0x38) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 56;
  }
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((55
                                * (v8 - v6 + 182238939 >= (unint64_t)((v4 - a3 - 2112) ^ (a2 + 37))
                                                        - 95)) ^ v4)))();
}

uint64_t sub_1D4AB0D04@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v3 = a2 ^ 0x4D6;
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t, void))(v2 + 8 * (a2 ^ 0xEAD)))(*(unsigned int *)STACK[0x2D0], a1, LODWORD(STACK[0x5A4]));
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)((((v3 + 1859146495) & 0x912FAA72 ^ 0x197)
                                                   * (LODWORD(STACK[0x46C]) != 526347143)) ^ v3)))(v4);
}

uint64_t sub_1D4AB0D80@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + ((v2 - 674) ^ (unint64_t)(v4 + 2)) + a2) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(a2 + v4) < 0x40) * v3) ^ (v2 + 34))))();
}

uint64_t sub_1D4AB0DBC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 1169) ^ 0x28) + ((v2 - 1169) | 0x162) + 465) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1D4AB0DF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v1 ^ ((2 * ((unint64_t)(v2 - a1) < 0x20)) | (32
                                                                                   * ((unint64_t)(v2 - a1) < 0x20))))))();
}

uint64_t sub_1D4AB0E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * (((v3 + 1 != v6 + 48) | (4 * (v3 + 1 != v6 + 48))) ^ a3)))(a1, a2, v4);
}

uint64_t sub_1D4AB0F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v27 = v24 + 1;
  unsigned int v28 = (*v23 + v20) * (*(_DWORD *)(a16 + 4 * (v27 - 1993168621)) ^ 0xDC7F20D8);
  int v29 = 1755732067 * ((v26 - 128) ^ 0xDEC6BDDB);
  *(_DWORD *)(v26 - 112) = (v27 - 252680244) ^ v29;
  *(_DWORD *)(v26 - 10_Block_object_dispose(&STACK[0x368], 8) = (v28 ^ 0xE69095D7) - v29 + ((2 * v28) & 0xCD212BAE) + v22;
  *(void *)(v26 - 104) = a14;
  *(void *)(v26 - 120) = a13;
  *(_DWORD *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = v25 - v29 - 31;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (int)(v25 + 1275)))(v26 - 128);
  BOOL v32 = v27 + v16 > v17 || v27 + v16 < v19;
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((v32 * v21) ^ v25)))(v30);
}

uint64_t sub_1D4AB0F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v27 - 112) = v24 + 1224239923 * ((v27 + 580362952 - 2 * ((v27 - 144) & 0x2297A358)) ^ 0xD0245E8F) + 923;
  *(void *)(v27 - 12_Block_object_dispose(&STACK[0x368], 8) = a24;
  *(void *)(v27 - 120) = a23;
  *(void *)(v27 - 104) = a24;
  *(void *)(v27 - 144) = a22;
  *(void *)(v27 - 136) = a11;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 ^ 0x813)))(v27 - 144);
  BOOL v29 = v26 + a20 + 2 >= (((v24 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((2 * v29) | (8 * v29) | (v24 + 974))))(v28);
}

uint64_t sub_1D4AB0FE4()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((46 * ((v2 - 351843405) > 0x13)) ^ v1)))(v0);
}

void sub_1D4AB1020()
{
}

uint64_t sub_1D4AB1088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((119
                                * (a13
                                 + a1
                                 - (unint64_t)(((a6 + v14 - 1457) ^ v16 ^ ((v14 + 1745353557) | 0x93D3D209)) + v13) > 0xF)) ^ v14)))();
}

void sub_1D4AB10E4()
{
  LODWORD(STACK[0x454]) = 0;
  JUMPOUT(0x1D4A875B8);
}

uint64_t sub_1D4AB10EC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 480) ^ 0xF09 ^ (15 * (v2 ^ 0x185))) * (v1 == a1)) ^ v2)))();
}

uint64_t sub_1D4AB11B8(uint64_t a1, int a2, int a3, int a4, int a5)
{
  int v11 = a5 ^ 0x45;
  int v12 = (a5 ^ 0x45) + 345;
  unsigned int v13 = ((a5 ^ 0x45) + 1171330873) & 0xBA2EEFEF;
  uint64_t v14 = (a3 + a2 + a4) + v10;
  uint64_t v15 = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a4) & 0xF;
  unint64_t v16 = v15 + v7 - v14;
  unint64_t v17 = (v15 | v8) - v14;
  unint64_t v18 = (v15 | v6) - v14;
  BOOL v22 = (unint64_t)(v5 - v10) > 0xF && v16 > 0xF && v17 >= (v12 ^ v13 ^ 0x620uLL) && v18 > 0xF;
  return (*(uint64_t (**)(void))(v9 + 8 * ((89 * v22) ^ v11)))();
}

uint64_t sub_1D4AB1248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17)
{
  a17 = v20
      - 108757529 * ((2 * (&a13 & 0x4A6220) - &a13 + 2142608861) ^ 0x9F29FFF6)
      + v18
      + 1780;
  a14 = v17;
  a15 = a10;
  a16 = 0x5A178A95705CCB00;
  (*(void (**)(char *))(v19 + 8 * (v20 + v18 + 2334)))(&a13);
  return sub_1D4AA6848();
}

uint64_t sub_1D4AB12C8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((134 * (v2 + v0 + v1 - 2129374204 >= ((v1 - 1805) | 0x1C0) - 440)) ^ v1)))();
}

uint64_t sub_1D4AB1328(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v7 + v3) = *(void *)(v6 + v3);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v4 == 0) * a3) ^ v5)))();
}

uint64_t sub_1D4AB1358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((28 * ((((v8 & 0x18) == ((a7 - 1361) ^ 0x151)) ^ (a7 - 1)) & 1)) | a7)))();
}

uint64_t sub_1D4AB139C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v5 & 0x18) == ((a5 + 806) ^ 0x5E4)) * ((a5 - 82) ^ 0x31F)) ^ a5)))();
}

void sub_1D4AB13D8(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_1D4AB1460()
{
}

uint64_t sub_1D4AB1594@<X0>(int a1@<W4>, int a2@<W5>, char a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  unsigned int v12 = v5 + 16;
  uint64_t v13 = v12 - 16;
  unsigned int v14 = (v13 >> 4) - (v7 & (v13 >> 3)) + a1;
  v10[12] = (a2 ^ HIBYTE(v14)) - (((a2 ^ HIBYTE(v14)) << ((a5 + 65) ^ 0x9D)) & v8) - 21;
  v10[13] = (BYTE2(v14) ^ a3) - 2 * ((BYTE2(v14) ^ a3) & 0xEF ^ BYTE2(v14) & 4) - 21;
  v10[14] = (BYTE1(v14) ^ 3) - 2 * ((BYTE1(v14) ^ 3) & 0xEF ^ BYTE1(v14) & 4) - 21;
  v10[15] = v14 ^ 0x78;
  uint64_t v15 = (unsigned char *)(v6 + v13);
  unsigned char *v15 = *v10 ^ v9 ^ *(unsigned char *)(v6 + v13);
  *(unsigned char *)(v6 + (v13 | 1)) ^= v10[1] ^ v9;
  *(unsigned char *)(v6 + (v13 | 2)) ^= v10[2] ^ v9;
  *(unsigned char *)(v6 + (v13 | 3)) ^= v10[3] ^ v9;
  v15[4] ^= v10[4] ^ v9;
  v15[5] ^= v10[5] ^ v9;
  v15[6] ^= v10[6] ^ v9;
  v15[7] ^= v10[7] ^ v9;
  v15[8] ^= v10[8] ^ v9;
  v15[9] ^= v10[9] ^ v9;
  v15[10] ^= v10[10] ^ v9;
  v15[11] ^= v10[11] ^ v9;
  v15[12] ^= v10[12] ^ v9;
  v15[13] ^= v10[13] ^ v9;
  v15[14] ^= v10[14] ^ v9;
  v15[15] = v10[15] ^ v9 ^ *(unsigned char *)(v6 + v13 + 15);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v12 < 0x150) * a4) ^ (a5 + 647))))();
}

void sub_1D4AB159C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v5 = LOBYTE(STACK[0x30C]) ^ 0xDD;
  if (v5 == 1)
  {
    unsigned int v10 = STACK[0x2F0];
    unsigned int v11 = STACK[0x2EC];
    LOBYTE(STACK[0x2E4]) = ((8 * LOBYTE(STACK[0x2F0])) ^ 0x20) - ((2 * ((8 * LOBYTE(STACK[0x2F0])) ^ 0x20)) & 0xDF) - 21;
    LOBYTE(STACK[0x2E5]) = ((v10 >> 5) ^ 0x87) - ((2 * ((v10 >> 5) ^ 0x87)) & 0xD6) - 21;
    LOBYTE(STACK[0x2E6]) = ((v10 >> 13) ^ 8) - 2 * (((v10 >> 13) ^ 8) & 0xEF ^ (v10 >> 13) & 4) - 21;
    LOBYTE(STACK[0x2E7]) = ((v10 >> 21) ^ 0x54) - ((2 * ((v10 >> 21) ^ 0x54)) & 0xD6) - 21;
    HIDWORD(v12) = v11 ^ 5;
    LODWORD(v12) = v10 ^ 0xA0000000;
    LOBYTE(STACK[0x2E8]) = (v12 >> 29) - ((2 * (v12 >> 29)) & 0xD6) - 21;
    LOBYTE(STACK[0x2E9]) = ((v11 >> 5) ^ 0x31) - 2 * (((v11 >> 5) ^ 0x31) & 0xEF ^ (v11 >> 5) & 4) - 21;
    LOBYTE(STACK[0x2EA]) = ((v11 >> 13) ^ 0xA8) - ((2 * ((v11 >> 13) ^ 0xA8)) & 0xD6) - 21;
    int v9 = ((v11 >> 21) ^ 0x1D) - ((2 * ((v11 >> 21) ^ 0x1D)) & 0xFD6) - 21;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_6;
    }
    unsigned int v6 = STACK[0x2EC];
    unsigned int v7 = STACK[0x2F0];
    LOBYTE(STACK[0x2E4]) = ((LODWORD(STACK[0x2EC]) >> 21) ^ 0x1D)
                         - ((((LODWORD(STACK[0x2EC]) >> 21) ^ 0x1D) << ((a5 - 124) ^ 0x8C)) & 0xD6)
                         - 21;
    LOBYTE(STACK[0x2E5]) = ((v6 >> 13) ^ 0xA8) - 2 * (((v6 >> 13) ^ 0xA8) & 0xEF ^ (v6 >> 13) & 4) - 21;
    LOBYTE(STACK[0x2E6]) = ((v6 >> 5) ^ 0x31) - 2 * (((v6 >> 5) ^ 0x31) & 0xEF ^ (v6 >> 5) & 4) - 21;
    HIDWORD(v_Block_object_dispose(&STACK[0x368], 8) = v6 ^ 5;
    LODWORD(v_Block_object_dispose(&STACK[0x368], 8) = v7 ^ 0xA0000000;
    LOBYTE(STACK[0x2E7]) = (v8 >> 29) - ((2 * (v8 >> 29)) & 0xD6) - 21;
    LOBYTE(STACK[0x2E8]) = ((v7 >> 21) ^ 0x54) - ((2 * ((v7 >> 21) ^ 0x54)) & 0xD6) - 21;
    LOBYTE(STACK[0x2E9]) = ((v7 >> 13) ^ 8) - 2 * (((v7 >> 13) ^ 8) & 0xEF ^ (v7 >> 13) & 4) - 21;
    LOBYTE(STACK[0x2EA]) = ((v7 >> 5) ^ 0x87) - ((2 * ((v7 >> 5) ^ 0x87)) & 0xD6) - 21;
    LOBYTE(v9) = ((8 * v7) ^ 0x20) + (~(2 * ((8 * v7) ^ 0x20)) | 0x2F) - 20;
  }
  LOBYTE(STACK[0x2EB]) = v9;
LABEL_6:
  JUMPOUT(0x1D4AB17F0);
}

void sub_1D4AB1860()
{
}

uint64_t sub_1D4AB186C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((((7 * ((v5 - 1821215007) & 0x6C8D85BF ^ 0x422)) ^ 0x79A)
                                                                         * (v3 == 313536509)) ^ v5)))(a1, a2, a3, 527506298);
}

uint64_t sub_1D4AB18CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v16 = 218 * (a4 ^ (a4 - 3));
  (*(void (**)(uint64_t))(v13 + 8 * (a4 ^ (a4 - 1789))))(a12);
  int v17 = (*(uint64_t (**)(void))(v13 + 8 * (v12 + 1761)))();
  signed int v18 = v17 - 43663526 - ((v16 ^ 0xFACB7B42) & (2 * v17));
  signed int *v15 = v18;
  unsigned int v19 = 1812433253 * (((~v18 >> 30) - 43663526 - 4 * (v18 >= 0)) ^ v18);
  v15[1] = v14 + v19 - (((v19 + 1) << ((v16 ^ 0xBF) - 72)) & 0xFACB7EB4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8 * (v16 ^ 0x3F3)))(1812433253, 1727);
}

uint64_t sub_1D4AB19B0(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((58
                                * (((a4 - (v4 & 3) + (((v5 ^ 0xAE4) - 354) ^ (a1 + 18))) & 0xFFFFFFFC) <= a4 + (v5 ^ 0x944 ^ (a1 + 1)))) ^ v5 ^ 0xAE4)))();
}

uint64_t sub_1D4AB1A10@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  LODWORD(STACK[0x5D8]) = v2 + 10;
  unint64_t v4 = STACK[0x4F0];
  BOOL v5 = LODWORD(STACK[0x5B4]) == 0;
  STACK[0x4C8] = LODWORD(STACK[0x5B4]);
  return (*(uint64_t (**)(uint64_t, unint64_t))(v3
                                                              + 8
                                                              * ((245
                                                                * ((((((189 * (a2 ^ 0x32A)) ^ 0x340) + 936) ^ v5) & 1) == 0)) ^ (189 * (a2 ^ 0x32A)))))(a1, v4);
}

uint64_t sub_1D4AB1A70@<X0>(int a1@<W8>)
{
  STACK[0x5E0] += (a1 - 1349366137) & 0x506DB55B ^ 0xFFFFFFFFFFFFFBABLL;
  return (*(uint64_t (**)(void))(v1 + 8 * (a1 ^ 0x395u)))();
}

uint64_t sub_1D4AB1AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, uint64_t a15, unsigned int a16, int a17, unsigned int a18, int a19)
{
  unsigned int v22 = (&a14 ^ 0x4C96827D) * v21;
  a18 = 1646191814 - v22;
  a14 = &STACK[0x38223619C320A3B];
  a15 = a12;
  a16 = v22 + 1978921826;
  a17 = v22 + v20 - 2024873251;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v20 | 0x853)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8 * ((1597 * (a19 == ((v20 + 133466) | 0x64418518) - 1155802003)) ^ v20)))(v23);
}

void sub_1D4AB1B78()
{
}

uint64_t sub_1D4AB1BC0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(v5 + v3) = v2;
  *(_DWORD *)(v8 - 12_Block_object_dispose(&STACK[0x368], 8) = v4 - 816 + ((((v8 - 144) | 0xF444FDE1) + (~(v8 - 144) | 0xBBB021E)) ^ 0x99B0E5E9) * v7 + 1587;
  *(void *)(v8 - 144) = a2;
  *(void *)(v8 - 136) = v5;
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((v4 - 816) ^ 0x80C)))(v8 - 144);
}

uint64_t sub_1D4AB1BCC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1133
                                * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v1) == v1 + ((v2 - 427) | 0xE4) - 245)) ^ v2)))();
}

void sub_1D4AB1C14()
{
}

uint64_t sub_1D4AB1C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  a16 = 1410 - 460628867 * ((&a14 & 0x9E53D03D | ~(&a14 | 0x9E53D03D)) ^ 0x2D3AADBF);
  a14 = &STACK[0x4313E3591B4C281];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v17 + 18432))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((26 * (a15 != v16)) ^ 0x4C2u)))(v18);
}

uint64_t sub_1D4AB1D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = 243 * (v25 ^ 0x4A);
  int v31 = 1374699841 * (((((v29 - 144) | 0x58FAFE1E) ^ 0xFFFFFFFE) - (~(v29 - 144) | 0xA70501E1)) ^ 0xCAF119E8);
  *(_DWORD *)(v29 - 144) = (v30 + 716) ^ v31;
  *(_DWORD *)(v29 - 12_Block_object_dispose(&STACK[0x368], 8) = v26 - 128426107 + v30 - 728 - v31;
  *(void *)(v29 - 136) = a25;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v30 + 1546)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (((*(_DWORD *)(v29 - 140) == v28)
                                              * (((v30 - 713) | 0x201) + ((v30 - 697) | 0x340) - 1386)) ^ v30)))(v32);
}

uint64_t sub_1D4AB1DE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  unint64_t v9 = v6 + a2;
  *(unsigned char *)(v9 + a6 - 1) = a4;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 < 0x40) * ((v7 - 1739) ^ 0xF70)) ^ (v7 + 105))))();
}

void sub_1D4AB1E20(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (235795823 * ((-127693918 - (a1 | 0xF8638BA2) + (a1 | 0x79C745D)) ^ 0x93313D04));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D4AB1EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, unsigned int a14, unsigned int a15, unsigned int a16, int a17)
{
  unsigned int v21 = (((&a12 | 0xFB74E5AA) - (&a12 & 0xFB74E5AA)) ^ 0xB7E267D7) * v20;
  a15 = v21 + v19 - 2024873426;
  a16 = 1646191814 - v21;
  a12 = &STACK[0x38223619C320A2B];
  a13 = a11;
  a14 = v21 - 776588175;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v19 + 1956)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8 * (((a17 == v17) * (((v19 - 1857739738) & 0x6EBADF97) + 472)) ^ v19)))(v22);
}

uint64_t sub_1D4AB1FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((28 * (((((32 * v8) ^ 0x8E40) - 1304) & *(_DWORD *)(v9 + v10 * (uint64_t)a8 + 40)) == 0)) ^ (v8 - 305))))();
}

uint64_t sub_1D4AB1FF8(int a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(a3 + v6) = *(void *)(v5 + v6);
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 == 0) * v4) ^ a4)))((a1 + 8));
}

uint64_t sub_1D4AB2028@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((a1 - 606) | 0x259) ^ 0x581) * ((v3 + v1 + 1) < 0x7FFFFFFF)) ^ a1)))();
}

uint64_t sub_1D4AB2068(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((a4 + a7 - 16 < ((a5 + 715) ^ 0xFFFFF839)) * ((a5 - 1049) ^ 0xEA)) ^ (a5 - 1049))))();
}

uint64_t sub_1D4AB20A8(uint64_t a1, uint64_t a2)
{
  *(unint64_t *)((char *)&STACK[0x2AC] + v4 + a2) = 0xEBEBEBEBEBEBEBEBLL;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v3 & 0xFFFFFFFFFFFFFFF8) == 8) * (((v2 - 11) | 0x802) - 1918)) ^ v2)))();
}

uint64_t sub_1D4AB20F4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1306 * (v4 + 8 == (((a3 ^ 0x60F) + 1527) ^ 0x7B3))) ^ a3 ^ 0x60F)))();
}

uint64_t sub_1D4AB2138()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((46 * ((((v0 + 552401841) ^ ((v2 & 0xFFFFFFFFFFFFFFFuLL) - 1 < 2)) & 1) == 0)) ^ (v0 + 552400495))))();
}

uint64_t sub_1D4AB2180(int a1)
{
  int v7 = (a1 + 627) | 0x58;
  BOOL v8 = v3 < v4;
  unsigned int v9 = v6 + v1 + 1899;
  int v10 = v8 ^ (v9 < ((v7 - 27) | v2) + v6);
  BOOL v11 = v9 < v3;
  if (!v10) {
    BOOL v8 = v11;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (v7 ^ (4 * v8))))();
}

uint64_t sub_1D4AB25E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  int v61 = STACK[0x51C];
  LODWORD(STACK[0x51C]) += 64;
  unsigned int v62 = ((((a60 - 1106) | 0x20) + 157) ^ 0xB8C53D5A) + v61;
  unsigned int v63 = LODWORD(STACK[0x65C]) - 1311258711;
  BOOL v64 = v62 < 0x20A5C093;
  BOOL v65 = v62 > v63;
  if (v63 < 0x20A5C093 != v64) {
    BOOL v65 = v64;
  }
  return (*(uint64_t (**)(uint64_t, unint64_t *))(v60 + 8 * (((2 * !v65) | (16 * !v65)) ^ a60)))(a1, &STACK[0x4B0]);
}

uint64_t sub_1D4AB25F0(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a3 - 1014) ^ 0x685 ^ (39 * (a3 ^ 0x477))) * (v3 == a2)) ^ a3)))();
}

void sub_1D4AB262C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1224239923 * ((a1 & 0x9A8552A9 | ~(a1 | 0x9A8552A9)) ^ 0x97C95081);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4AB2708@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 46_Block_object_dispose(&STACK[0x368], 8) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 1936))(0);
}

void sub_1D4AB2764()
{
}

uint64_t sub_1D4AB277C@<X0>(int a1@<W5>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  unint64_t v5 = a2 - 0x14BC258F8 + (a1 + v2 - 213);
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((49 * (v5 - v4 + (v2 - 2) + 1340507415 > 7)) ^ v2)))();
}

void sub_1D4AB27E4(uint64_t a1@<X8>, int a2, uint64_t a3, unsigned int a4)
{
  unsigned int v8 = 108757529 * ((1436736608 - (&a2 | 0x55A2DC60) + (&a2 | 0xAA5D239F)) ^ 0x4AC141B4);
  a3 = v4;
  a2 = v8 + v6 + 574;
  a4 = (v5 - ((((v6 + 617585131) & 0x5B30677F ^ 0xCD00BE2F) + v7) & 0xF4DA0A2A) + 1626169920) ^ v8;
  (*(void (**)(int *))(a1 + 8 * (v6 + 1495)))(&a2);
  JUMPOUT(0x1D4AA80D0);
}

uint64_t sub_1D4AB28A0@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x810u));
  return v3(v1);
}

uint64_t sub_1D4AB28D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,int a24,int a25)
{
  BOOL v30 = a23 - v27 == 40394603 && a25 == (v25 ^ (a3 - 421));
  return (*(uint64_t (**)(void))(v28 + 8 * ((1394 * v30) ^ v26)))();
}

uint64_t sub_1D4AB2914(_DWORD *a1)
{
  unsigned int v1 = 1178560073 * ((2 * (a1 & 0x7B1A53C3) - a1 - 2065322948) ^ 0x3E71D45E);
  return (*(uint64_t (**)(void))((char *)*(&off_1F2C91B30 + (int)((a1[1] + v1) ^ 0x82C))
                              + 8
                              * (int)(((((*a1 - v1) ^ 0x1F5F6B87) - 1 > 0x62) * ((a1[1] + v1) ^ 0x8D1)) ^ (a1[1] + v1))
                              - 4))();
}

void sub_1D4AB29A4()
{
}

uint64_t sub_1D4AB2A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 < a5 - 2181) * ((25 * (a5 ^ 0x8F3)) ^ 0x878)) ^ a5)))(0);
}

uint64_t sub_1D4AB2A50@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W8>)
{
  *(unsigned char *)(v12 + (a2 - 834203508)) = *(unsigned char *)(v3 + (a2 - 834203508)) ^ *(unsigned char *)(v5 + ((a2 - 834203508) & 0xFLL)) ^ *(unsigned char *)(v6 + (((_BYTE)a2 - 116) & 0xF)) ^ *(unsigned char *)(v4 + (((_BYTE)a2 - 116) & 0xF)) ^ (((a2 - 116) & 0xF) * (((v8 + 111) | 0xC6) + 114)) ^ 0xEB;
  BOOL v13 = v9 > a3;
  unsigned int v14 = a2 - 749581000;
  uint64_t v15 = (a2 + 1);
  int v16 = v13 ^ (v14 < v7 + 871);
  BOOL v17 = v14 < v10;
  if (!v16) {
    BOOL v13 = v17;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8 * ((415 * v13) ^ v8)))(a1, v15);
}

void sub_1D4AB2AF0()
{
}

uint64_t sub_1D4AB2AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((47
                                * ((((241 * (v3 ^ 0x2CD)) ^ (*(_DWORD *)(*(void *)(a1 + 8) + v4) == v2)) & 1) == 0)) ^ v3)))();
}

uint64_t sub_1D4AB2B40(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  int v2 = 460628867 * (((a1 | 0x167EA26) - a1 + (a1 & 0xFE9815D9)) ^ 0x4DF1685B);
  int v3 = *(_DWORD *)(a1 + 20) - v2;
  int v4 = *(_DWORD *)(a1 + 16) - v2;
  uint64_t v6 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  int v7 = -1226319291 * (*(_DWORD *)(a1 + 24) + v2) + 204585635;
  unsigned int v8 = 1755732067
     * (((&v10 | 0x8E52AAAD) - &v10 + (&v10 & 0x71AD5550)) ^ 0x50941776);
  v3 += 2024873235;
  int v10 = (v7 ^ 0x35FBCF7F) + v8 + ((2 * v7) & 0x6BF79EFE) - 880935265;
  int v12 = v8 ^ (v3 + 963);
  uint64_t v13 = v5;
  unsigned int v14 = (432548285 * v4 - ((865096570 * v4 - 616685616) & 0xCF7BC996) - 715328333) ^ v8;
  uint64_t v11 = v6;
  uint64_t result = (*(uint64_t (**)(int *))((char *)*(&off_1F2C91B30 + v3) + 8 * v3 + 17780))(&v10);
  *(_DWORD *)(a1 + 2_Block_object_dispose(&STACK[0x368], 8) = v15;
  return result;
}

uint64_t sub_1D4AB2CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(a2
                                                    + 8
                                                    * ((239
                                                      * (((v2 + 1) ^ (v3 == ((v2 + 1873452923) & 0x90555F7D ^ 0x4463564B))) & 1)) ^ v2)))(a1, v2 ^ 0x8AEu);
}

uint64_t sub_1D4AB2D6C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1F2C91FF0
                                            - 4
                                            + 8 * ((2022 * (*(_DWORD *)(a2 + 4) == 2079419397)) ^ 0x120u)))(4294925278);
}

uint64_t sub_1D4AB2DB0@<X0>(unint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v6 + a2) = v5;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 + 1 + a2 < (v4 ^ a1)) * v7) ^ v3)))();
}

uint64_t sub_1D4AB2DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  return (*(uint64_t (**)(void))(v22 + 8 * ((2002 * (a20 == v20 + (v21 ^ 0x152) + 903 - 1107)) ^ v21)))();
}

uint64_t sub_1D4AB2E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((62 * (a6 + 1 != v8 + 32)) ^ v6)))();
}

void sub_1D4AB2EE4()
{
  if (v0 == 1720235092) {
    int v1 = 526347143;
  }
  else {
    int v1 = -526372769;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

uint64_t sub_1D4AB2F48(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((LODWORD(STACK[0x42C]) + 1 + a2 == 1) ^ (v3 + 58 + v4)) & 1) * a3) ^ (v3 + 58))))();
}

uint64_t sub_1D4AB2FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                                        + 8
                                                                                        * ((((v6 & 8) == v7 - 505)
                                                                                          * (v7 + 509)) ^ v7)))(a1, a2, a3, a4, a5, (v5 - a5));
}

uint64_t sub_1D4AB2FE4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v20 = a1 ^ 0x2F6;
  *(_DWORD *)(v19 - 112) = a1
                         + 1224239923 * (((~(v19 - 144) & 0xB476FB88) - (~(v19 - 144) | 0xB476FB89)) ^ 0x46C5065E)
                         + 625;
  *(void *)(v19 - 104) = a17;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x368], 8) = a17;
  *(void *)(v19 - 120) = a16;
  *(void *)(v19 - 144) = a15;
  *(void *)(v19 - 136) = a5;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (a1 ^ 0xAE5)))(v19 - 144);
  BOOL v22 = v18 + a13 + 2 >= (((v20 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((2 * v22) | (8 * v22) | (v20 + 974))))(v21);
}

void sub_1D4AB30B4(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 - 108757529 * ((-2 - ((a1 | 0x1E625E8E) + (~a1 | 0xE19DA171))) ^ 0x101C35A);
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL);
  uint64_t v6 = *(void *)(a1 + 8);
  unsigned int v5 = (460628867 * ((((v4 | 0xC87E0ECA) ^ 0xFFFFFFFE) - (~v4 | 0x3781F135)) ^ 0x7B177348)) ^ (v1 - 312);
  int v3 = (char *)*(&off_1F2C91B30 + (v1 ^ 0x5D4)) - 4;
  (*(void (**)(unsigned char *))&v3[8 * v1 + 7704])(v4);
  __asm { BRAA            X8, X17 }
}

void sub_1D4AB3210(_DWORD *a1)
{
  *((unsigned char *)a1 + ((v3 + v2) ^ 0x46662D4Cu) + v1 + 4) = 15;
  *a1 = v1;
  JUMPOUT(0x1D4AB3238);
}

uint64_t sub_1D4AB3244()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((v0 + 1859146495) & 0x912FAA72 ^ 0x197) * (LODWORD(STACK[0x46C]) != v2)) ^ v0)))();
}

void sub_1D4AB3288()
{
}

void sub_1D4AB3290()
{
}

uint64_t sub_1D4AB3308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(unsigned char *)(a5 + v23) = *(unsigned char *)(a8 + (v22 + v28))
                       - ((2 * *(unsigned char *)(a8 + (v22 + v28))) & 0xD6)
                       - 21;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (((v23 == 63) * ((v24 + v25) & v26 ^ v27)) ^ v24)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1D4AB335C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((v8 == a4) ^ a8) & 1) * ((a8 ^ 0xCB) - 407)) ^ a8)))();
}

void sub_1D4AB338C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  if (v20 < 0x599833B1 != a17 - 419547434 < ((56 * v19) ^ 0x59983B71u)) {
    BOOL v18 = a17 - 419547434 < ((56 * v19) ^ 0x59983B71u);
  }
  else {
    BOOL v18 = a17 - 419547434 > v20;
  }
  __asm { BRAA            X11, X17 }
}

void sub_1D4AB3570()
{
}

void sub_1D4AB3594()
{
}

uint64_t sub_1D4AB36C0(int a1, int a2, uint64_t a3, int a4)
{
  uint64_t v11 = (a1 + v8 + v7 + a4 - a2 + 320);
  *(int8x8_t *)(v5 - 7 + v11) = veor_s8(*(int8x8_t *)(v4 - 7 + v11), (int8x8_t)0xEBEBEBEBEBEBEBEBLL);
  return (*(uint64_t (**)(void, void, void))(v10 + 8 * ((55 * (a2 - (v6 & 0xFFFFFFF8) == -8)) ^ a4)))((a1 + v8 + v7 + a4 - a2 + 312), a2 - (v6 & 0xFFFFFFF8) + 16, v9 - (v6 & 0xFFFFFFF8));
}

void sub_1D4AB3724()
{
}

uint64_t sub_1D4AB3730(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 24);
  return 0;
}

void sub_1D4AB3748()
{
}

void sub_1D4AB3764(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 40) == 0x2C138C8FAF40FC22
    || *(void *)(a1 + 16) == 0xAA58417147CEA7FLL
    || *(void *)a1 == 0x234F284A02F7E69BLL;
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((((2 * a1) | 0xD63BF148) - a1 - 1797126308) ^ 0x61E9F68B);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1D4AB3918@<X0>(int a1@<W8>)
{
  uint64_t v4 = *(void *)(v8 + 16);
  uint64_t v5 = *(void *)(v8 + 40);
  *(void *)(v3 - 204) = 0xEBEBEBEBEBEBEBEBLL;
  *(void *)(v3 - 196) = 0xEBEBEBEBEBEBEBEBLL;
  int v6 = 235795823 * ((((v3 - 168) | 0xEB9F054C) - ((v3 - 168) & 0xEB9F054C)) ^ 0x7F324C15);
  v1[54] = v3 + 0xC8F40939229079BLL;
  v1[51] = v3 - 188;
  v1[52] = v5;
  v1[49] = v4;
  *(_DWORD *)(v3 - 160) = v6 + 307381638;
  *(_DWORD *)(v3 - 132) = (a1 + 1977) ^ v6;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x8B9)))(v3 - 168);
  *(_DWORD *)(v8 + 12) = *(_DWORD *)(v3 - 136);
  return result;
}

void sub_1D4AB3A14()
{
}

uint64_t sub_1D4AB3A20(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((138 * (v3 + v2 - 2004297694 >= (((a2 ^ 0x2C8) + 657) ^ 0x56Au))) ^ a2)))();
}

void sub_1D4AB3A74()
{
}

uint64_t sub_1D4AB3A80(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v4 & (2 * (*(unsigned __int8 *)(a2 + 3) - 137)))
                                 + ((*(unsigned __int8 *)(a2 + 3) - 137) ^ v5) == v5 + a3 - 431)
                                * (((a3 - 161) | 0x41) ^ 0x821)) ^ a3)))();
}

uint64_t sub_1D4AB3AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,int a22,unsigned int a23,int a24)
{
  unsigned int v26 = 1759421093 * ((&a21 + 2130158787 - 2 * (&a21 & 0x7EF7A4C3)) ^ 0xCD8A1497);
  a24 = v26 ^ 0x4479276D;
  HIDWORD(a21) = v26 ^ 0x241A7128;
  a22 = v26 + v24 + 1072;
  LODWORD(a21) = v26 ^ 0x19C79A77;
  (*(void (**)(unint64_t **))(v25 + 8 * (v24 + 1860)))(&a21);
  a23 = v24
      - 460628867 * ((((2 * &a21) | 0x5259E7E8) - &a21 + 1456671756) ^ 0xE5BA7189)
      + 1058;
  a21 = &STACK[0x4313E3591B4C2A1];
  uint64_t v27 = (*(uint64_t (**)(unint64_t **))(v25 + 8 * (v24 + 1952)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8 * ((225 * (a22 == ((v24 + 755) ^ 0xA32A8012) + 2083841862)) ^ v24)))(v27);
}

uint64_t sub_1D4AB3C14(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((*(_DWORD *)(*v10 + 4 * v11) ^ v8) <= (*(_DWORD *)(*v9 + 4 * v11) ^ v8))
                                * ((a3 + 1836 + a5) & a6 ^ a7)) ^ (a3 + 1836))))();
}

uint64_t sub_1D4AB3C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unsigned int a42)
{
  uint64_t v47 = v46 + a6 + ((a42 - 235741058) & 0xE0D1ABD) - 16;
  int v48 = ((*(unsigned __int8 *)(a4 + v47) ^ 0xEB) << 24) | ((*(unsigned __int8 *)(v46 + a6 + a4 + 1) ^ 0xEB) << 16) | ((*(unsigned __int8 *)(v46 + a6 + a4 + 2) ^ 0xEB) << 8) | *(unsigned __int8 *)(v46 + a6 + a4 + 3) ^ 0xEB;
  *(_DWORD *)(v44 + (v47 & 0xFFFFFFFFFFFFFFFCLL)) = v48 + v43 - (v42 & (2 * v48));
  return (*(uint64_t (**)(void))(v45
                              + 8
                              * (((unint64_t)(a6 + 4 + v46) < 0x40) | (8
                                                                            * ((unint64_t)(a6 + 4 + v46) < 0x40)) | a42)))();
}

uint64_t sub_1D4AB3CFC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((*(void *)(v1 + 24) == 0x335EB1051722DFECLL) ^ v0)))();
}

uint64_t sub_1D4AB3D30@<X0>(int a1@<W8>)
{
  if (v1) {
    int v5 = v4;
  }
  else {
    int v5 = v2;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((v5 == ((a1 + 363) ^ (v4 - 726))) * (a1 + 2485)) ^ (a1 + 363))))();
}

uint64_t sub_1D4AB3D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(a2 + 8 * ((172 * (v2 != 0)) ^ v3)))(a1, 70 * (v3 ^ 0x738u));
}

uint64_t sub_1D4AB3D80()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v2 - 1205 + ((v2 + 36831514) & 0xFDCDFEEB) - 797) * (v0 == v1)) ^ v2)))();
}

void sub_1D4AB3DD4()
{
}

uint64_t sub_1D4AB3E74(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v7 = (((a3 + 122954322) | 0x90028B38) ^ (v6 - 403)) + *(unsigned __int8 *)(a2 + 2);
  return (*(uint64_t (**)(void))(v3 + 8 * ((1588 * ((v4 & (2 * v7)) + (v7 ^ v5) == v5)) ^ a3)))();
}

uint64_t sub_1D4AB3ECC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  BOOL v12 = v3 < v6;
  *(unsigned char *)(v11 - 220 + (v8 ^ 0x654u) + a2 + a3) = *(unsigned char *)(v10 + (v4 + v9))
                                                  - ((2 * *(unsigned char *)(v10 + (v4 + v9))) & 0xD6)
                                                  - 21;
  unsigned int v13 = v4 + 1 + a1;
  int v14 = v12 ^ (v13 < v6);
  BOOL v15 = v13 < v3;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v12 * v5) ^ v8)))();
}

uint64_t sub_1D4AB3F40(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((((a6 + 438) ^ a1) + 2763) ^ (a6 + 1450)) * (a5 == 31)) ^ (a6 + 438))))();
}

uint64_t sub_1D4AB3F98(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((*(void *)(v4 + 24) != 0x6F16120776D4F6DCLL) * (a4 ^ 0x7F0)) ^ a4)))();
}

void sub_1D4AB3FCC()
{
}

uint64_t sub_1D4AB4038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((*(_DWORD *)(v9 + (a7 + v10 + 1921) * (uint64_t)a8 + 40) & 8) != 153 * (v8 ^ 0x700)
                                                                                                 - 459)
                                * (((v8 - 1771) | 0x443) - 1085)) ^ v8)))();
}

uint64_t sub_1D4AB408C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1064
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 8) - 1)))
                                 + ((*(unsigned __int8 *)(a2 + 8) - 1) ^ v6) == ((a3 - 1084772848) & 0xD7FEFF79) + a4)) ^ a3)))();
}

uint64_t sub_1D4AB40E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  if (a23 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23
  }
                                                                + 8
                                                                * (a6
                                                                 + a5
                                                                 + 32 * (LODWORD(STACK[0x308]) == 1335561202)
                                                                 + 101)))(a1, a13, 2079419384);
  if (a23 != 1) {
    JUMPOUT(0x1D4AB4250);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23
                                                                       + 8
                                                                       * (((LODWORD(STACK[0x308]) != 1335561202)
                                                                         * (a6 + a5 + 917)) ^ (a6 + a5 + 133))))(a1, a2, 2079419384, a13);
}

uint64_t sub_1D4AB4280()
{
  uint64_t v4 = *(void *)(v6 + 32);
  *(_DWORD *)(v3 - 112) = v0 + 1374699841 * ((v3 - 128) ^ 0x6DF41809) + 776;
  *(void *)(v3 - 12_Block_object_dispose(&STACK[0x368], 8) = v2;
  *(void *)(v3 - 120) = v4;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1241)))(v3 - 128);
}

uint64_t sub_1D4AB4318(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1506 * (a6 + 1 == v7 + 64)) ^ a1)))();
}

uint64_t sub_1D4AB43E4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((3620
                                * (*(_DWORD *)(a15 + 4 * (v15 + v16 + 2)) == a1
                                                                                           + 3 * (v17 ^ 0x1B6)
                                                                                           - 978)) ^ (v17 + 1348))))();
}

uint64_t sub_1D4AB4438@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(a11 + 4 * (a3 + v11 + 1331)) = a2;
  int v17 = v11 + 1 + v13;
  BOOL v19 = v17 > (v12 ^ 0x325 ^ (v14 + 502)) || v17 < v15;
  return (*(uint64_t (**)(void))(v16 + 8 * ((v19 * a1) ^ v12)))();
}

void sub_1D4AB4480()
{
}

void sub_1D4AB4494()
{
}

uint64_t sub_1D4AB449C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((2136 * (v5 == v7 + (a5 ^ 0x473) - 40)) ^ (a5 - 1037))))();
}

uint64_t sub_1D4AB44D8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v5
                                                             + 8
                                                             * ((7
                                                               * (v2 + v1 + ((v4 - 529427615) & 0x1F8E66BF) - 792584090 < 8)) ^ v4)))(a1, v3, v4 - 588);
}

uint64_t sub_1D4AB4540()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((v2 == v1) ^ (3 * (v0 ^ 0xEF))) & 1) * (v0 ^ 0x410)) ^ v0)))();
}

void sub_1D4AB4580()
{
  *(_DWORD *)(v0 - 0x2C138C8FAF40FC0ALL) = -526372770;
  JUMPOUT(0x1D4AB45B0);
}

void sub_1D4AB45EC()
{
  *(void *)(v0 + 312) = *(void *)(v1 + 8 * (int)(STACK[0x420] - 1091));
  JUMPOUT(0x1D4AA9AFCLL);
}

uint64_t sub_1D4AB4618(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(void *)(a2 + (v9 + v8)) = *(void *)(a1 + (v9 + v8));
  return (*(uint64_t (**)(void))(v11 + 8 * (((a3 == 0) * a8) ^ v10)))();
}

void sub_1D4AB4648()
{
}

uint64_t sub_1D4AB46B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13
                                                                       + 8
                                                                       * (int)(((a13 - 713989013 < (a3 - 21))
                                                                              * ((a3 + 23) ^ 0xF2)) ^ (a3 + 866))))(a1, a2, a3, a4);
}

uint64_t sub_1D4AB4718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((63 * (v6 - 1062117730 < ((v8 + 226) | 0x618u) - 1793)) ^ (v8 + 789))))(a1, a2, 21, a4, a5, a6, 3506);
}

uint64_t sub_1D4AB4774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((242 * (v5 + a5 + (v7 ^ 0x46Au) + 47 >= v5 + a5)) ^ v7)))();
}

void sub_1D4AB47B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v7 = *(unsigned __int8 *)(v6 - 124) ^ 0xDD;
  if (v7 == 1)
  {
    char v8 = a5 + v5 + 15;
    unsigned int v14 = *(_DWORD *)(v6 - 156);
    unsigned int v13 = *(_DWORD *)(v6 - 152);
    *(unsigned char *)(v6 - 164) = ((8 * v13) ^ 0x20) + (v8 ^ 0x59) - ((2 * ((8 * v13) ^ 0x20)) & 0xDF);
    char v12 = -42;
    *(unsigned char *)(v6 - 163) = ((v13 >> 5) ^ 0x87) - ((2 * ((v13 >> 5) ^ 0x87)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 162) = ((v13 >> 13) ^ 8) - 2 * (((v13 >> 13) ^ 8) & 0xEF ^ (v13 >> 13) & 4) - 21;
    *(unsigned char *)(v6 - 161) = ((v13 >> 21) ^ 0x54) - ((2 * ((v13 >> 21) ^ 0x54)) & 0xD6) - 21;
    HIDWORD(v15) = v14 ^ 5;
    LODWORD(v15) = v13 ^ 0xA0000000;
    *(unsigned char *)(v6 - 160) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 159) = ((v14 >> 5) ^ 0x31) - ((2 * ((v14 >> 5) ^ 0x31)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 15_Block_object_dispose(&STACK[0x368], 8) = ((v14 >> 13) ^ 0xA8) - 2 * (((v14 >> 13) ^ 0xA8) & 0xEF ^ (v14 >> 13) & 4) - 21;
    unsigned int v11 = (v14 >> 21) ^ 0x1D;
  }
  else
  {
    if (v7 != 2) {
      goto LABEL_6;
    }
    char v8 = 62 * (v5 ^ (v5 + 1));
    unsigned int v11 = *(_DWORD *)(v6 - 156);
    unsigned int v9 = *(_DWORD *)(v6 - 152);
    *(unsigned char *)(v6 - 164) = ((v11 >> 21) ^ 0x1D) - ((2 * ((v11 >> 21) ^ 0x1D)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 163) = ((v11 >> 13) ^ 0xA8) - 2 * (((v11 >> 13) ^ 0xA8) & (v8 ^ 0xDD) ^ (v11 >> 13) & 4) - 21;
    *(unsigned char *)(v6 - 162) = ((v11 >> 5) ^ 0x31) - 2 * (((v11 >> 5) ^ 0x31) & 0xEF ^ (v11 >> 5) & 4) - 21;
    HIDWORD(v10) = v11 ^ 5;
    LODWORD(v10) = v9 ^ 0xA0000000;
    *(unsigned char *)(v6 - 161) = (v10 >> 29) - ((2 * (v10 >> 29)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 160) = ((v9 >> 21) ^ 0x54) - ((2 * ((v9 >> 21) ^ 0x54)) & 0xD6) - 21;
    *(unsigned char *)(v6 - 159) = ((v9 >> 13) ^ 8) - 2 * (((v9 >> 13) ^ 8) & 0xEF ^ (v9 >> 13) & 4) - 21;
    *(unsigned char *)(v6 - 15_Block_object_dispose(&STACK[0x368], 8) = ((v9 >> 5) ^ 0x87) - ((2 * ((v9 >> 5) ^ 0x87)) & 0xD6) - 21;
    LOBYTE(v11) = (8 * v9) ^ 0x20;
    char v12 = -48;
  }
  *(unsigned char *)(v6 - 157) = v11 - (((_BYTE)v11 << ((v8 ^ (v5 + 78)) + 78)) & v12) - 21;
LABEL_6:
  JUMPOUT(0x1D4A86ED8);
}

uint64_t sub_1D4AB49F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,_DWORD *a41)
{
  uint64_t v45 = (*(uint64_t (**)(uint64_t, void))(v42 + 8 * (v41 ^ 0xF3E)))(a30, 0);
  unsigned int v46 = a41[4] - 43663526 - ((2 * a41[4]) & 0xFACB7EB4);
  a41[1] = a41[6] - 43663526 - ((v41 - 87328592) & (2 * a41[6]));
  a41[2] = v46;
  int v47 = (*(uint64_t (**)(uint64_t))(v42 + 8 * (v41 ^ 0xEFE)))(v45);
  a41[3] = v47 - 43663526 - ((2 * v47) & 0xFACB7EB4);
  int v48 = (*(uint64_t (**)(void))(v42 + 8 * (v41 + 758)))();
  *a41 = v48 - 43663526 - ((2 * v48) & 0xFACB7EB4);
  uint64_t v55 = (v44 - 144) | 0x1AA4E40F087B15E7;
  unsigned int v49 = ((~*v43 >> 30) - 43663526 - 4 * (*v43 >= 0)) ^ *v43;
  unsigned int v50 = (*a41 ^ 0xFD65BF5A) + ((1664525 * v49 - 43663526 - ((3329050 * v49) & 0xFACB7EB4)) ^ v43[1]);
  v43[1] = v50 - 43663526 - ((2 * v50) & 0xFACB7EB4);
  unint64_t v51 = 1374699841 * ((0xE55B1BF0F784EA18 - ((v44 - 144) | 0xE55B1BF0F784EA18) + v55) ^ 0x14A87A03658F0DEELL);
  int v52 = (v41 + 298736337) ^ v51;
  *(_DWORD *)(v44 - 120) = -1374699841 * ((-142284264 - ((v44 - 144) | 0xF784EA18) + v55) ^ 0x658F0DEE);
  *(_DWORD *)(v44 - 116) = v52;
  *(_DWORD *)(v44 - 112) = (v41 + 298736337) & 0x3FCEF196 ^ v51;
  *(_DWORD *)(v44 - 104) = v52 ^ 0x1B;
  *(void *)(v44 - 136) = v51 + 959129093;
  *(void *)(v44 - 12_Block_object_dispose(&STACK[0x368], 8) = v51 ^ 0x392B2607;
  *(_DWORD *)(v44 - 144) = v51 + v41 - 1501687384;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(v42 + 8 * (v41 + 694)))(v44 - 144);
  return (*(uint64_t (**)(uint64_t))(v42 + 8 * *(int *)(v44 - 108)))(v53);
}

uint64_t sub_1D4AB4CE0(char a1, char a2, char a3, int a4, int a5, int8x16_t a6, int8x8_t a7, int8x8_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v59 = (a5 + a4 - 8);
  v61.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)a4 - 8) & 0xF;
  v61.val[0].i64[1] = ((_BYTE)a5 + v56 - 8) & 0xF;
  v61.val[1].i64[0] = ((_BYTE)a5 + v55 - 8) & 0xF;
  v61.val[1].i64[1] = ((_BYTE)a5 + v54 - 8) & 0xF;
  v61.val[2].i64[0] = ((_BYTE)a5 + v52 - 8 + (v57 ^ 0xE)) & 0xF;
  v61.val[2].i64[1] = ((_BYTE)a5 + a3 - 8) & 0xF;
  v61.val[3].i64[0] = ((_BYTE)a5 + a2 - 8) & 0xF;
  v61.val[3].i64[1] = ((_BYTE)a5 + a1 - 8) & 0xF;
  *(int8x8_t *)(*(void *)(v58 - 136) + v59) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(*(void *)(v58 - 120) + v59), *(int8x8_t *)(v50 + (v59 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v51 + (v59 & 0xF) - 7), *(int8x8_t *)(v49 + (v59 & 0xF) - 7)))), a8), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v61, a6), a7)));
  return (*(uint64_t (**)(void))(a49 + 8 * ((191 * (a5 != v53 + 8)) ^ *(_DWORD *)(v58 - 128))))();
}

void sub_1D4AB4D08(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 - 0x6F16120776D4F6DCLL) = 1;
  JUMPOUT(0x1D4AC11F0);
}

uint64_t sub_1D4AB4D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v68 = *(unsigned __int8 *)(v66 - 0x72E93EC0CCAF5722) ^ 0xDD;
  if (v68 == 1)
  {
    unsigned int v76 = *(_DWORD *)(v66 - 0x72E93EC0CCAF573ELL);
    *(unsigned char *)(v66 - 0x72E93EC0CCAF574ALL) = ((8 * v76) ^ 0x20) - ((2 * ((8 * v76) ^ 0x20)) & 0xDF) - 21;
    int v71 = a8 + 113;
    char v75 = -42;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF5749) = ((a8 + 113) ^ (v76 >> 5) ^ 0x4B)
                                           - ((2 * ((a8 + 113) ^ (v76 >> 5) ^ 0x4B)) & 0xD6)
                                           - 21;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF574_Block_object_dispose(&STACK[0x368], 8) = ((v76 >> 13) ^ 8) - 2 * (((v76 >> 13) ^ 8) & 0xEF ^ (v76 >> 13) & 4) - 21;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF5747) = ((v76 >> 21) ^ 0x54) - ((2 * ((v76 >> 21) ^ 0x54)) & 0xD6) - 21;
    unsigned int v77 = *(_DWORD *)(v66 - 0x72E93EC0CCAF5742);
    HIDWORD(v7_Block_object_dispose(&STACK[0x368], 8) = v77 ^ 5;
    LODWORD(v7_Block_object_dispose(&STACK[0x368], 8) = v76 ^ 0xA0000000;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF5746) = (v78 >> 29) - ((2 * (v78 >> 29)) & 0xD6) - 21;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF5745) = ((v77 >> 5) ^ 0x31) - ((2 * ((v77 >> 5) ^ 0x31)) & 0xD6) - 21;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF5744) = ((v77 >> 13) ^ 0xA8)
                                           - 2 * (((v77 >> 13) ^ 0xA8) & 0xEF ^ (v77 >> 13) & 4)
                                           - 21;
    int v74 = (v77 >> 21) ^ 0x1D;
  }
  else
  {
    int v69 = a8;
    if (v68 != 2) {
      goto LABEL_6;
    }
    unsigned int v70 = *(_DWORD *)(v66 - 0x72E93EC0CCAF5742);
    int v71 = a8 ^ 0x97;
    unsigned int v72 = *(_DWORD *)(v66 - 0x72E93EC0CCAF573ELL);
    HIDWORD(v73) = v70 ^ 5;
    LODWORD(v73) = v72 ^ 0xA0000000;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF574ALL) = ((v70 >> 21) ^ 0x1D) - ((2 * ((v70 >> 21) ^ 0x1D)) & 0xD6) - 21;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF5749) = ((v70 >> 13) ^ 0xA8)
                                           - ((((v70 >> 13) ^ 0xFFFFFFA8) << ((a8 ^ 0x97) + 53)) & 0xD6)
                                           - 21;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF574_Block_object_dispose(&STACK[0x368], 8) = ((v70 >> 5) ^ 0x31) + (~(2 * ((v70 >> 5) ^ 0x31)) | 0x29) - 20;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF5747) = (v73 >> 29) + (~(2 * (v73 >> 29)) | 0x29) - 20;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF5746) = ((v72 >> 21) ^ 0x54) - ((2 * ((v72 >> 21) ^ 0x54)) & 0xD6) - 21;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF5745) = ((v72 >> 13) ^ 8) - ((2 * ((v72 >> 13) ^ 8)) & 0xD6) - 21;
    LOBYTE(v74) = (8 * v72) ^ 0x20;
    char v75 = -48;
    *(unsigned char *)(v66 - 0x72E93EC0CCAF5744) = ((v72 >> 5) ^ 0x87) - ((2 * ((v72 >> 5) ^ 0x87)) & 0xD6) - 21;
  }
  int v69 = v71 ^ 0x97;
  *(unsigned char *)(v66 - 0x72E93EC0CCAF5743) = v74 - (((_BYTE)v74 << (v71 ^ 0xCD)) & v75) - 21;
LABEL_6:
  v64[25] = *(void *)(v67 + 8 * (v69 - 1103));
  v64[54] = v66;
  v64[55] = v66 - 0x72E93EC0CCAF5782;
  unint64_t v79 = v64[38];
  unsigned int v80 = (char *)&a9 + v79 - 0x74CFFF0833D7800CLL;
  v64[56] = v80;
  v64[38] = v79 + 320;
  int v81 = *(_DWORD *)(v66 - 0x72E93EC0CCAF573ALL);
  LODWORD(STACK[0x53C]) = v81;
  int v82 = *(_DWORD *)(v66 - 0x72E93EC0CCAF5736);
  LODWORD(STACK[0x458]) = v82;
  int v83 = *(_DWORD *)(v66 - 0x72E93EC0CCAF5732);
  LODWORD(STACK[0x504]) = v83;
  int v84 = *(_DWORD *)(v66 - 0x72E93EC0CCAF572ELL);
  LODWORD(STACK[0x5D4]) = v84;
  int v85 = *(unsigned __int8 *)(v66 - 0x72E93EC0CCAF5722) ^ 0xDD;
  if (v85 == 2)
  {
    LODWORD(STACK[0x588]) = *(_DWORD *)(v66 - 0x72E93EC0CCAF572ALL);
    LODWORD(STACK[0x45C]) = 351843406;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8 * ((((((((a8 - 1098) | 0x264) + 660) | 0x82) ^ 0xEB074E39) + 351843406 > 0x3F) * (((((a8 - 1098) | 0x264) - 1755476443) & 0x68A26F7F) + 193)) ^ ((a8 - 1098) | 0x264))))(a1, 64052174, 3623878656, a4, a5, 3080894364, a7, 3687930830);
  }
  else if (v85 == 1)
  {
    LODWORD(STACK[0x45C]) = v65;
    BOOL v87 = v66 - 0x72E93EC0CCAF5782 >= a64 + v79 || (unint64_t)v80 >= v66 - 0x72E93EC0CCAF5742;
    return (*(uint64_t (**)(void))(v67 + 8 * ((((LODWORD(STACK[0x36C]) - 170) ^ (a8 - 874)) * v87) ^ (a8 - 550))))();
  }
  else
  {
    unsigned int v89 = (*(_DWORD *)(v66 - 0x72E93EC0CCAF573ALL) ^ 0xDBD15BCE) + (v81 ^ 0xDBD15BCE);
    *(_DWORD *)(v66 - 0x72E93EC0CCAF573ALL) = v89 - 607036466 - ((2 * v89) & 0xB7A2B79C);
    unsigned int v90 = (*(_DWORD *)(v66 - 0x72E93EC0CCAF5736) ^ 0xDBD15BCE) + (v82 ^ 0xDBD15BCE);
    *(_DWORD *)(v66 - 0x72E93EC0CCAF5736) = v90 - 607036466 - ((2 * v90) & 0xB7A2B79C);
    unsigned int v91 = (*(_DWORD *)(v66 - 0x72E93EC0CCAF5732) ^ 0xDBD15BCE) + (v83 ^ 0xDBD15BCE);
    *(_DWORD *)(v66 - 0x72E93EC0CCAF5732) = v91 - 607036466 - ((2 * v91) & 0xB7A2B79C);
    unsigned int v92 = (*(_DWORD *)(v66 - 0x72E93EC0CCAF572ELL) ^ 0xDBD15BCE) + (v84 ^ 0xDBD15BCE);
    *(_DWORD *)(v66 - 0x72E93EC0CCAF572ELL) = v92 - 607036466 - ((2 * v92) & 0xB7A2B79C);
    STACK[0x5E0] = v79;
    return ((uint64_t (*)(void))STACK[0x578])();
  }
}

uint64_t sub_1D4AB50A4()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xD05)))(32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (((((v1 ^ v2) & 1) == 0) * (((v1 - 440172045) & 0x1A3C7B96) - 369)) | v1)))();
}

uint64_t sub_1D4AB5104(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * ((171
                                                      * (((v1 + 1415439841) & 0x2BA21D7F ^ 0xC49DF98F)
                                                       + *(_DWORD *)(v3 - 0x2C138C8FAF40FC16) == 0)) ^ (v1 + 1181))))(a1, *(void *)(v3 - 0x2C138C8FAF40FC22));
}

uint64_t sub_1D4AB517C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((464 * (*(void *)(v0 + 192) == 0)) ^ (v1 + 127))))();
}

uint64_t sub_1D4AB51A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((4 * (a4 + 1 == v6 + 24)) | ((a4 + 1 == v6 + 24) << 9)) ^ v4)))();
}

uint64_t sub_1D4AB5268@<X0>(int a1@<W3>, _DWORD *a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  *a28 = a40 + 405273881;
  int v42 = (a3 + 393907497) ^ a11;
  *(void *)(v41 - 12_Block_object_dispose(&STACK[0x368], 8) = (*a2 + 662845971) ^ a11;
  *(void *)(v41 - 136) = a9;
  *(_DWORD *)(v41 - 144) = a11 + a3 - 1542247033;
  *(_DWORD *)(v41 - 120) = -(int)a11;
  *(_DWORD *)(v41 - 116) = v42;
  *(_DWORD *)(v41 - 112) = (a3 + 393907533) ^ a11;
  *(_DWORD *)(v41 - 104) = v42 ^ 0x7F;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (a3 ^ (a1 - 1926))))(v41 - 144);
  return (*(uint64_t (**)(uint64_t))(v40 + 8 * *(int *)(v41 - 108)))(v43);
}

uint64_t sub_1D4AB5324()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((53
                                * (((((v0 - 1909) | 0x810) ^ 0xED7FFFFA) & (2 * v1) ^ 0xED53F0C2)
                                 + (v1 ^ (v0 + 1210365022) & 0xB7DB47FF ^ 0x9560476)
                                 - 1054758 != 1991238593)) ^ v0)))();
}

void sub_1D4AB53A8()
{
}

uint64_t sub_1D4AB53B4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((3829
                                * ((int)((v3 ^ 0xFDF2DECF) + 1073590720 + (v0 & 0xFBE5BD9E) - 1039175824) > (int)(v1 - 1611))) ^ v1)))();
}

void sub_1D4AB5450()
{
}

void sub_1D4AB54D0()
{
  uint64_t v3 = 7 * (v8 ^ 0x400013E3u);
  int v4 = *v2;
  if (((unint64_t)*v2 & 3) == (v3 ^ 0x77E))
  {
    uint64_t v5 = (uint64_t)*(&off_1F2C91B30 + (v8 ^ 0x40001246u));
    uint64_t v7 = *(void *)(v5 - 4);
    uint64_t v6 = (void *)(v5 - 4);
    if (!v7)
    {
      *uint64_t v6 = v4;
      *(_DWORD *)*(&off_1F2C91B30 + (int)(v3 ^ 0x73D)) = 255;
      *v4 |= ~v4[*v4 & 0x3ELL] << 16;
      v4[4] |= ~v4[v4[4] & 0x3ELL] << ((14 * (v8 ^ 0xE3)) ^ 0xEC);
      v4[8] |= ~v4[v4[8] & 0x3ELL] << 16;
      v4[12] |= ~v4[v4[12] & 0x3ELL] << 16;
      v4[16] |= ~v4[v4[16] & 0x3ELL] << 16;
      v4[20] |= ~v4[v4[20] & 0x3ELL] << 16;
      v4[24] |= ~v4[v4[24] & 0x3ELL] << 16;
      v4[28] |= ~v4[v4[28] & 0x3ELL] << 16;
      v4[32] |= ~v4[v4[32] & 0x3ELL] << 16;
      v4[36] |= ~v4[v4[36] & 0x3ELL] << 16;
      v4[40] |= ~v4[v4[40] & 0x3ELL] << 16;
      v4[44] |= ~v4[v4[44] & 0x3ELL] << 16;
      v4[48] |= ~v4[v4[48] & 0x3ELL] << 16;
      v4[52] |= ~v4[v4[52] & 0x3ELL] << 16;
      v4[56] |= ~v4[v4[56] & 0x3ELL] << 16;
      v4[60] |= ~v4[v4[60] & 0x3ELL] << 16;
      (*(void (**)(void *, void, uint64_t))(v0 + 8 * (int)(v3 ^ 0xFB6)))(v10, 0, 1024);
      v10[128] = v10;
      __asm { BRAA            X12, X17 }
    }
  }
  _DWORD *v9 = -526372808;
}

uint64_t sub_1D4AB57EC@<X0>(uint64_t a1@<X0>, char a2@<W2>, int a3@<W4>, int a4@<W8>)
{
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(v8 + (v4 + v7))
                      + (a2 | ~(2 * *(unsigned char *)(v8 + (v4 + v7))))
                      - 20;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v5 == 63) | (a3 + a4 + 426))))();
}

uint64_t sub_1D4AB5830(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  *(void *)(a9 + v10 + ((v11 - 910) | a3)) = v13;
  return (*(uint64_t (**)(void))(v12 + 8 * ((((v9 & 0x38) == 8) * a7) | v11)))();
}

uint64_t sub_1D4AB5874()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((54 * (v3 + 1 == v2 + 32)) ^ v0)))();
}

uint64_t sub_1D4AB5940@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((231 * (((v2 == (a2 ^ 0x2A)) ^ (a2 - 112)) & 1)) ^ (a2 + 1628))))(a1, -1839851021);
}

void sub_1D4AB5988(int a1@<W8>)
{
  int v3 = a1 + 2136730618;
  if (*v2 + 406995271 < 0) {
    int v3 = 383330680 - a1;
  }
  _DWORD *v2 = v1 + 624 + *v2 - 1260031956 + v3;
  JUMPOUT(0x1D4AB5A24);
}

void jfkdDAjba3jd(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _DWORD *a6)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = (unint64_t *)*(&off_1F2C91B30
                           + ((-35 * ((qword_1EA70FB08 - dword_1EA70FB28) ^ 0xD8)) ^ byte_1D54D33A0[byte_1D54CE750[(-35 * ((qword_1EA70FB08 - dword_1EA70FB28) ^ 0xD8))] ^ 0x50])
                           - 58);
  int v7 = *(&off_1F2C91B30
       + (*((unsigned char *)off_1F2C91DA8
                           + (*((unsigned __int8 *)off_1F2C91CB0
                              + (-35 * (*v6 ^ qword_1EA70FB08 ^ 0xD8))) ^ 0xF1u)
                           - 4) ^ (-35 * (*v6 ^ qword_1EA70FB08 ^ 0xD8)))
       - 137);
  unint64_t v8 = (*v7 - *v6) ^ (unint64_t)&v10;
  *uint64_t v6 = (1226760413 * v8) ^ 0x5B705F9A26A579D8;
  void *v7 = 1226760413 * (v8 ^ 0x5B705F9A26A579D8);
  *a5 = 0;
  *a6 = 0;
  v11[1] = 108757529
         * (((v11 | 0x51085D1D) - v11 + (v11 & 0xAEF7A2E0)) ^ 0xB1943F36)
         - 504207030;
  LOBYTE(v7) = -35 * (*(_DWORD *)v6 ^ 0xD8 ^ *(_DWORD *)v7);
  char v9 = (char *)*(&off_1F2C91B30
               + ((-35 * ((qword_1EA70FB08 + dword_1EA70FB28) ^ 0xD8)) ^ byte_1D54D33A0[byte_1D54CE750[(-35 * ((qword_1EA70FB08 + dword_1EA70FB28) ^ 0xD8))] ^ 0x8B])
               - 79)
     - 4;
  (*(void (**)(_DWORD *))&v9[8
                                      * (*((unsigned char *)off_1F2C91FA8
                                                          + (*((unsigned __int8 *)off_1F2C91D80 + v7
                                                                                                - 4) ^ 0xCAu)) ^ v7)
                                      + 17528])(v11);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4AB5CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  HIDWORD(a22) = 2119813987;
  int v32 = *(_DWORD *)(a19 + 4);
  unsigned int v33 = 628203409 * ((((2 * &a24) | 0x924221B8) - &a24 - 1226903772) ^ 0xCBA91CEF);
  a29 = *(void *)(a19 + 8);
  a30 = a15;
  a27 = a17;
  a25 = a14;
  a24 = a16;
  LODWORD(a26) = v30 - v33 + 1452;
  HIDWORD(a26) = -1178884666 - v33 + v32;
  uint64_t v37 = (*(uint64_t (**)(uint64_t *))(v31 + 8 * (v30 + 1896)))(&a24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * ((1038 * (a28 == ((6 * (v30 ^ 0xBC)) ^ 0x1F5F6DDD))) ^ v30)))(v37, a2, 2079419387, &off_1F2C91B30, a5, 2291026155, 2514269652, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_1D4AB5DC4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((224
                                * (*(_DWORD *)(v3 + 72) == ((((((a2 - 388) | 0x48) - 1161860464) & 0xCDCEDCEF)
                                                           - 211605790) ^ (((a2 - 388) | 0x48) - 912266621) & 0x366017DF))) ^ ((a2 - 388) | 0x48))))();
}

void sub_1D4AB5E4C()
{
}

uint64_t sub_1D4AB5E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v11 = v7 + 1931542505 > 1237111672 || v7 + 1931542505 < (int)(((v8 + 227) ^ 0xC9BCD56F) + a7);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void))(v9 + 8 * ((113 * v11) ^ v8));
  return v12(113, v12);
}

void sub_1D4AB5EC0()
{
}

void sub_1D4AB5ECC(_DWORD *a1@<X8>)
{
  unsigned int v4 = 642903839 * (v1[1] - v2)
     - ((((v3 - 255974710) & 0xF41DFEF ^ 0x5D031656) + 1285807678 * (v1[1] - v2)) & 0xA7400726)
     - 2111730705;
  unsigned char *v5 = (HIBYTE(v4) ^ 0xD3) - ((2 * (HIBYTE(v4) ^ 0xD3)) & 0xD6) - 21;
  v5[1] = (BYTE2(v4) ^ 0xA0) - 2 * ((BYTE2(v4) ^ 0xA0) & 0xEF ^ BYTE2(v4) & 4) - 21;
  v5[2] = (BYTE1(v4) ^ 3) - 2 * ((BYTE1(v4) ^ 3) & 0xEF ^ BYTE1(v4) & 4) - 21;
  v5[3] = v4 ^ 0x78;
  _DWORD *v1 = *a1;
}

void sub_1D4AB5FD4()
{
}

uint64_t sub_1D4AB6068()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1825 * (*(_DWORD *)(v2 - 0x2C138C8FAF40FC0ALL) == (v1 ^ 0x1F5F6E13))) ^ (v1 - 565))))();
}

uint64_t sub_1D4AB60BC()
{
  return sub_1D4AB60C4();
}

uint64_t sub_1D4AB60C4@<X0>(int a1@<W0>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v9 = (a1 - v5);
  int8x8_t v10 = vrev64_s8(*(int8x8_t *)(a3 + v9 - 7));
  *(int8x8_t *)(v4 + v9) = vrev64_s8(vadd_s8(vsub_s8(v10, vand_s8(vadd_s8(v10, v10), v8)), v7));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 + 280 + v5 == 1723) * a2) ^ (v3 - 351))))();
}

uint64_t sub_1D4AB6118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned int a34,uint64_t a35,unsigned int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unsigned int a41)
{
  int v211 = v44 + 1127;
  uint64_t v45 = v41 ^ 0x4E6EA4B1FD49BE9CLL;
  uint64_t v46 = ((v41 ^ 0x4E6EA4B1FD49BE9CLL)
       + a1
       - ((((v44 - 741572466) & 0x2C337FBA) + 0x6DEA8B548E54D634) & (2 * (v41 ^ 0x4E6EA4B1FD49BE9CLL)))) ^ v43;
  uint64_t v47 = __ROR8__(__ROR8__(a2 ^ a35, 12) ^ 0xA9F5355D327AAF0FLL, 52);
  uint64_t v48 = v47 ^ 0x322397601515A6F7;
  unint64_t v49 = ((v47 ^ 0x322397601515A6F7)
       + 0x45E632E50038A633
       - (((v44 + 328685096) & 0xEC68A9FB ^ 0x8BCC65CA00714D94) & (2 * (v47 ^ 0x322397601515A6F7)))) ^ a8;
  uint64_t v50 = a6 ^ v45;
  uint64_t v51 = v46 ^ 0x68040451F630332FLL;
  unint64_t v52 = (v49 ^ 0xE4C1C31231B4037DLL) & (v47 ^ 0xCDDC689FEAEA5908) ^ v46 ^ 0x68040451F630332FLL;
  unint64_t v53 = v50 ^ 0x6AC0C59F7B0C8054 ^ (((v46 ^ 0x97FBFBAE09CFCCD0) & (v47 ^ 0x322397601515A6F7))
                                    - ((2 * ((v46 ^ 0x97FBFBAE09CFCCD0) & (v47 ^ 0x322397601515A6F7))) & 0x554B35EE11DE2616)
                                    + 0x2AA59AF708EF130BLL);
  unint64_t v54 = v49 ^ 0xE4C1C31231B4037DLL ^ (v50 ^ 0x40655F6873E3935FLL) & (a6 ^ 0xBF9AA0978C1C6CA0);
  *((void *)&v55 + 1) = a6 ^ 0x935F;
  *(void *)&long long v55 = a6 ^ 0x40655F6873E30000;
  unint64_t v56 = (v49 ^ 0x1B3E3CEDCE4BFC82) & (a6 ^ 0x40655F6873E3935FLL) ^ v48 ^ v52;
  unint64_t v57 = v51 & (v50 ^ 0xBF9AA0978C1C6CA0);
  unint64_t v58 = __ROR8__(__ROR8__(v52, 38) ^ __ROR8__(v53, 38) ^ 0xB8AB4977971512F1, 26);
  char v59 = *(unsigned char *)(a37 + ((((v56 >> 61) ^ 4) + 241) ^ 0x78));
  char v60 = 4 * (v59 ^ 0xDD) - ((8 * (v59 ^ 0xDD)) & 0x48) - 89;
  LOBYTE(v49) = (v59 ^ 0xDD) - ((2 * (v59 ^ 0xDD)) & 0x4E) - 89;
  char v61 = v59 ^ 0xE5;
  char v62 = v61 + (v49 ^ v60 ^ 0xC7) + 1;
  char v63 = v62 & 0x40;
  unint64_t v64 = v57 ^ __ROR8__((v55 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v54;
  unsigned __int8 v65 = (v60 ^ 0x58) + 1;
  if ((v62 & 0x40 & v65) != 0) {
    char v66 = v65 - v63 - 2 * ((v65 - v63) & 0x44 ^ v65 & 4);
  }
  else {
    char v66 = v63 + v65 - ((2 * (v63 + v65)) & 0x87);
  }
  char v67 = (v66 - 61) ^ ((v62 & 0xBF) - 2 * (v62 & 3) - 61);
  *((void *)&v68 + 1) = ~v54;
  *(void *)&long long v68 = v54 ^ 0x92CFC162FD513142;
  unsigned __int8 v69 = ((v67 - ((2 * v67) & 0x4E) - 89) ^ v60) + v61;
  unint64_t v70 = __ROR8__(v54, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v68 + 1) = v54 ^ 0x42044AB189873991 ^ ((v68 >> 1)
                                                      - ((2 * (v68 >> 1)) & 0xA19717A6E9AC11A4)
                                                      - 0x2F34742C8B29F72ELL);
  *(void *)&long long v68 = *((void *)&v68 + 1) ^ (v54 << 58) ^ 0xC00000000000000;
  uint64_t v71 = v68 >> 51;
  uint64_t v72 = v56 ^ (v56 >> 39) ^ (8 * v56) ^ (((v69 >> 1) | (v69 << 7)) | (v56 << 25));
  unint64_t v73 = v72 ^ 0xD43F06E17EB89ED3;
  uint64_t v74 = v71 + (v70 ^ 0x8F8AC7F1FBA51795);
  unint64_t v75 = (v53 << 23) ^ 0xFBA827E079000000;
  unint64_t v76 = (((v58 << 45) ^ (v58 << 36)) & 0xFFFFFFF000000000 | (v58 >> 28)) ^ (v58 >> 19) ^ 0xD0A2B87327B31AB3;
  unint64_t v77 = (v76 - ((2 * v76) & 0x8305A4D3D1683378) - 0x3E7D2D96174BE644) ^ v58;
  unint64_t v78 = v53 ^ (v53 >> 41) ^ (v53 >> 7) ^ (((v53 << 57) ^ 0xE400000000000000)
                                        - ((2 * ((v53 << 57) ^ 0xE400000000000000)) & 0x4444444444444444)
                                        - 0x5C6FE7C7F9E70CFCLL);
  unint64_t v79 = (v78 & 0x10000000000000 ^ 0xFFB3BB3EEAFFBEDFLL) + 2 * (v78 & 0x10000000000000);
  unint64_t v80 = v79 + 0x1DFEFFD57FECFDA3;
  unint64_t v81 = v78 & 0xFFEFFFFFFFFFFFFFLL;
  unint64_t v82 = v79 + 0x4C44C115004121;
  uint64_t v83 = __ROR8__(v74 - 2 * (v71 & (v70 ^ 0x8F8AC7F1FBA51795)), 13);
  unint64_t v84 = v64 ^ (v64 >> 10) ^ (v64 << 47) ^ ((v64 >> 17) | (v64 << 54));
  unint64_t v85 = 0x1D66765355EC7B61 - v79;
  if ((v82 & v75) == 0) {
    unint64_t v85 = v80;
  }
  uint64_t v86 = (v75 - 0x1DB2BB146AECBC82 + v85) ^ v81;
  unint64_t v87 = ((v86 ^ 0x15C74D80B8AC30E4)
       - ((2 * (v86 ^ 0x15C74D80B8AC30E4)) & 0xCBDE9155A21EAE28)
       - 0x1A10B7552EF0A8ECLL) ^ v84;
  uint64_t v88 = __ROR8__(__ROR8__(v87 ^ 0xD2877A94626538ADLL, 23) ^ 0x6C4FE5A873E441B7, 41);
  unint64_t v89 = v73 ^ (v83 - 0xD99D31F221CB5C2 - ((2 * v83) & 0xE4CC59C1BBC6947CLL));
  unint64_t v90 = v77 ^ v86;
  unint64_t v91 = v88 & (v84 ^ 0x1CAE3FE19723B7B4) ^ v89;
  unint64_t v92 = (v90 ^ 0x1E399C70490A254BLL | ~v88)
      + ((v88 - 0xA1431F3657CA6DLL - ((2 * v88) & 0xFEBD79C193506B26)) ^ v90 ^ 0xE167209080A210D8)
      + 1;
  unint64_t v93 = (((v89 ^ 0xBEE74353B47A99EDLL) & (v72 ^ 0xD9A6D5FE5CA42B12))
       - 0xA1431F3657CA6DLL
       - ((2 * ((v89 ^ 0xBEE74353B47A99EDLL) & (v72 ^ 0xD9A6D5FE5CA42B12))) & 0xFEBD79C193506B26)) ^ v90 ^ 0xE167209080A210D8;
  unint64_t v94 = v87 ^ (v90 ^ 0xE1C6638FB6F5DAB4) & (v72 ^ 0x26592A01A35BD4EDLL);
  unint64_t v95 = ((v93 ^ (v89 ^ 0x4118BCAC4B856612) & (v84 ^ 0xE351C01E68DC484BLL))
       - 0xD99D31F221CB5C2
       - ((2 * (v93 ^ (v89 ^ 0x4118BCAC4B856612) & (v84 ^ 0xE351C01E68DC484BLL))) & 0xE4CC59C1BBC6947CLL)) ^ v73;
  *((void *)&v97 + 1) = v94 ^ v93 ^ 0x8F67ABC;
  *(void *)&long long v97 = v94 ^ v93 ^ 0xAAC28740B0000000;
  uint64_t v96 = v97 >> 28;
  unint64_t v98 = v92 ^ __ROR8__(((v91 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v84 ^ 0xE1DE6585B59498FDLL, 27) ^ (((v91 ^ 0xBEE74353B47A99EDLL) << 37)- (((v91 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)- 0x7643747485F20715), 37);
  *(void *)&long long v97 = __ROR8__(v94 ^ v93, 19);
  unint64_t v99 = (v96 ^ v97 ^ 0xCF57955850E8171ELL)
      - ((2 * (v96 ^ v97 ^ 0xCF57955850E8171ELL)) & 0xA184542F2B57D4FALL)
      - 0x2F3DD5E86A541583;
  unint64_t v100 = (v91 ^ 0xD1A234CC1D2559D7) << 58;
  unint64_t v101 = v100 & (v91 ^ 0xD000000000000000);
  unint64_t v102 = v100 | v91 ^ 0xD1A234CC1D2559D7;
  *((void *)&v97 + 1) = v95 ^ 0x1747C156E755AED6;
  *(void *)&long long v97 = v95 ^ 0x4000000000000000;
  uint64_t v103 = v95 ^ __ROR8__(v95, 39) ^ (v97 >> 61);
  unint64_t v104 = v103 ^ 0x9D988BC1E3DFF3D6;
  uint64_t v105 = v103 & 0x7C09B5691D153F3ALL;
  uint64_t v106 = ((v94 >> 7) ^ (v94 >> 41) | (v94 << 57)) ^ (v94 << 23) ^ 0x132524DD953EE58ELL;
  unint64_t v107 = v106 - ((2 * v106) & 0xF8F7BE14138061D6) - 0x38420F5F63FCF15;
  unint64_t v108 = v107 ^ v94;
  unint64_t v109 = v99 ^ v93 ^ v107;
  unint64_t v110 = v98 ^ (v98 << 47) ^ (v98 >> 10) ^ (v98 >> 17) ^ (v98 << 54);
  uint64_t v111 = (v108 & 0x100000000 ^ 0x2AD3E7CFFF3EF9DFLL) + 2 * (v108 & 0x100000000);
  uint64_t v112 = v111 - 0x812C3868026A0C0;
  unint64_t v113 = v108 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v114 = ((v91 ^ 0xD1A234CC1D2559D7) >> 6) ^ (v91 >> 1) ^ v102 ^ ((v101 ^ ((v91 ^ 0xD1A234CC1D2559D7) << 63))
                                                                  + 0x6711E1CAA824D282
                                                                  - ((2 * v101) & 0xCFFFFFFFFFFFFFFFLL)) ^ v103 ^ 0x9D988BC1E3DFF3D6;
  uint64_t v115 = v111 - 0x2AD3E7CFFF3EF9DFLL;
  uint64_t v116 = 0x4D950C197E5752FELL - v111;
  if (((v110 ^ 0xBEE8B63400000000) & v115) == 0) {
    uint64_t v116 = v112;
  }
  unint64_t v117 = ((v110 ^ 0xBEE8B6349A795903) - 0x22C124497F18591FLL + v116) ^ v113;
  *((void *)&v119 + 1) = v109 ^ 0x11CCECA30;
  *(void *)&long long v119 = v109 ^ 0x1AFDC61000000000;
  uint64_t v118 = v119 >> 33;
  *(void *)&long long v119 = __ROR8__((v114 ^ 0x68D11A660E92ACEBLL) & (v103 ^ 0x57695F4B404DEABLL), 33);
  unint64_t v120 = (v117 ^ 0x9F0294B9CE6CA50ELL) & (v109 ^ 0x1AFDC6111CCECA30);
  char v121 = v117 & 1;
  char v122 = !(v117 & 1);
  unint64_t v123 = (v109 ^ 0xE50239EEE33135CFLL) & (v103 ^ 0xFA896A0B4BFB2154);
  *(void *)&long long v119 = __ROR8__(v118 ^ v119 ^ 0xCF4F457632C10184, 31);
  uint64_t v124 = (v117 ^ 0x60FD6B4631935AF1) & (v110 ^ 0x411749CB6586A6FCLL);
  unint64_t v125 = v117 ^ (v123 - ((2 * v123) & 0x6274659444610932) - 0x4EC5CD35DDCF7B67);
  uint64_t v126 = v124 ^ v114 ^ 0x68D11A660E92ACEBLL;
  unint64_t v127 = v126 ^ v110 ^ (v120 - ((2 * v120) & 0x4C26BF3C3398AC02) - 0x59ECA061E633A9FFLL);
  unint64_t v128 = v119 ^ v104 ^ (((v110 ^ 0xBEE8B6349A795903) & (v114 ^ 0x972EE599F16D5314))
                      + 0x6711E1CAA824D282
                      - ((2 * ((v110 ^ 0xBEE8B6349A795903) & (v114 ^ 0x972EE599F16D5314))) & 0xCE23C3955049A504));
  unint64_t v129 = (v126 ^ 0x7955EAEC4D48B80CuLL) >> v122 >> v121;
  unint64_t v130 = v128 ^ 0x871114BB6A66FF53 ^ (((v128 >> 61) ^ (v128 >> 39) ^ 0xAFF5F4)
                                      - ((2 * ((v128 >> 61) ^ (v128 >> 39) ^ 0xAFF5F4)) & 0x1774E06)
                                      - 0x2F141075F54458FDLL);
  uint64_t v131 = (((v128 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v128 << 25) ^ 0x62C1BAB0A0000000) ^ (v130
                                                                                                  - (v130 ^ (v128 << 25) ^ 0x62C1BAB0A0000000)))
        + v130) ^ (8 * v128);
  unint64_t v132 = ((v125 >> 41) | (v125 << 57)) ^ (v125 >> 7) ^ (((v125 << 23) ^ 0x4A21DEFABE000000)
                                                      - ((2 * ((v125 << 23) ^ 0x4A21DEFABE000000)) & 0x9559B1C3CD000000)
                                                      + 0x4AACD8E1E6BA0EB1);
  unint64_t v133 = (v127 >> 10) ^ (v127 << 47) ^ (v127 >> 17) ^ (v127 << 54) ^ 0x8A9BD714D25588B3;
  unint64_t v134 = (v133 - ((2 * v133) & 0x83A23A27D67829BCLL) + 0x41D11D13EB3C14DELL) ^ v127;
  uint64_t v135 = v134 ^ 0x4FC158D138B9D0EALL;
  unint64_t v136 = ((v125 ^ (unint64_t)v119) << 36) ^ ((v125 ^ (unint64_t)v119) << 45) ^ ((v125 ^ (unint64_t)v119) >> 19) ^ ((v125 ^ (unint64_t)v119) >> 28) ^ 0x533CF3A597622EDBLL;
  unint64_t v137 = v132 ^ v125 ^ v134;
  uint64_t v138 = v132 ^ v119 ^ (v136 - ((2 * v136) & 0x6AE355A8EE1F7574) - 0x4A8E552B88F04546);
  *(void *)&long long v119 = __ROR8__(v126, 6);
  unint64_t v139 = ((((v126 << 63) | 0x31E557ABB13522E0) ^ v119 ^ v129)
        - ((2 * (((v126 << 63) | 0x31E557ABB13522E0) ^ v119 ^ v129)) & 0xF8820D0A2651458ELL)
        + 0x7C4106851328A2C7) ^ v126;
  uint64_t v140 = v139 ^ 0x514EC695E601ACBLL;
  unint64_t v141 = ((v139 ^ 0x514EC695E601ACBLL)
        + 0x73FA207FFBDF81CBLL
        - 2 * ((v139 ^ 0x514EC695E601ACBLL) & 0x73FA207FFBDF81DBLL ^ v139 & 0x10)) ^ v131 ^ 0xCC2DF9F4FD35434BLL;
  uint64_t v142 = (v131 ^ 0x40282674F9153D7FLL) & v140;
  unint64_t v143 = (v137 ^ 0xBD33281B542F8C4) & (v134 ^ 0xB03EA72EC7462F15) ^ v141;
  unint64_t v144 = (v142 - ((v142 + 0x475DBA021522B0E9 - ((2 * v142) & 0x8EBB74042A4561D2)) ^ v138 ^ 0x6C7FE15A7740F0F3)) ^ ((v138 ^ 0xD4DDA4A79D9DBFE5) + 1);
  unint64_t v145 = ((v144 + 0x475DBA021522B0E9 - ((2 * v144) & 0x8EBB74042A4561D2)) ^ v138 ^ 0x6C7FE15A7740F0F3) + v142;
  unint64_t v146 = ((v135 & ~v141) + 0x73FA207FFBDF81CBLL - ((2 * (v135 & ~v141)) & 0xE7F440FFF7BF0396)) ^ v131 ^ 0xCC2DF9F4FD35434BLL ^ v145;
  unint64_t v147 = (((2 * v137) ^ 0xE8599AFC957A0E77) + (v137 ^ 0xBD33281B542F8C4)) & (v138 ^ 0x2B225B586262401ALL);
  unint64_t v148 = (((v131 ^ 0xBFD7D98B06EAC280) & (v138 ^ 0xD4DDA4A79D9DBFE5))
        - ((2 * ((v131 ^ 0xBFD7D98B06EAC280) & (v138 ^ 0xD4DDA4A79D9DBFE5))) & 0xACC280CF1BF29E7ELL)
        - 0x299EBF987206B0C1) ^ v137;
  unint64_t v149 = v145 ^ v148;
  unint64_t v150 = v145 ^ v148 ^ 0xDDB272E638BBB7FBLL;
  unint64_t v151 = v143 ^ v135 ^ v147;
  *((void *)&v119 + 1) = v146 ^ 0x1877DA25;
  *(void *)&long long v119 = v146 ^ 0x425764BB40000000;
  uint64_t v152 = v119 >> 30;
  *((void *)&v119 + 1) = v145 ^ v148 ^ 0x34271;
  *(void *)&long long v119 = v145 ^ v148 ^ 0x4A44D503CE500000;
  uint64_t v153 = (v146 << 25) ^ 0x76B0EFB44A000000;
  unint64_t v154 = v143 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v143 & 0x2011531CB0A0EE4 | (v143 << 58));
  unint64_t v155 = v152 ^ (v146 >> 61 << 34) ^ 0x84F57132E3442245;
  uint64_t v156 = (v148 >> 41) ^ 0x56BAED;
  uint64_t v157 = (v119 >> 19) ^ (v150 << 36) ^ (v150 >> 28) ^ 0x6E8F58A97F6A7E5FLL;
  unint64_t v158 = v149 ^ 0x9749311A880D77FBLL ^ (v157 - ((2 * v157) & 0xBA1BC8328CBC6B14) - 0x22F21BE6B9A1CA76);
  unint64_t v159 = ((((v143 >> 1) ^ 0xB6B068EB09448B05) & 0x350CC7CF779F8E66)
        - (((v143 >> 1) ^ 0xB6B068EB09448B05) & 0x110C01C6259F0C62)
        + (((v143 >> 1) ^ 0xB6B068EB09448B05) & 0x110C01C6259F0C62 ^ 0x994D21C6A5BF7CFALL)) ^ ((v143 >> 1) ^ 0xB6B068EB09448B05) & 0x350CCFCF779F8E66;
  unint64_t v160 = (v159 & 0x782C7ECD9544116ELL ^ 0x702C18C901400105)
       + (v159 ^ 0x8C41660494A474FALL)
       - ((v159 ^ 0x8C41660494A474FALL) & 0x782C7ECD9544116ELL);
  uint64_t v161 = __ROR8__(v155, 34);
  unint64_t v162 = v154 ^ (v143 << 63);
  *((void *)&v119 + 1) = v148 ^ 6;
  *(void *)&long long v119 = v148 ^ 0xAD75DA35CBDF8A00;
  uint64_t v163 = v148 ^ 0xBC619E1ED96B4EF8 ^ ((v119 >> 7) - ((2 * (v119 >> 7)) & 0x22288856256989FCLL) + 0x1114442B12B4C4FELL);
  unint64_t v164 = (v161 ^ (v146 >> 39) ^ 0x84AEC9) + v153;
  uint64_t v165 = v161 & v153;
  uint64_t v166 = v163 & v156;
  uint64_t v167 = v163 + v156;
  unint64_t v168 = v164 - 2 * v165;
  uint64_t v169 = v160 ^ 0x55153FD8C4D13047 ^ (v162 + 0x383506D7608E2928 - ((2 * v154) & 0x706A0DAEC11C5250));
  BOOL v170 = v105 == 0x7809200909112110;
  uint64_t v171 = v169 ^ 0x47CAF9289F71D6D7;
  if (v170) {
    uint64_t v171 = v160 ^ 0x55153FD8C4D13047;
  }
  uint64_t v172 = v168 ^ (8 * v146);
  BOOL v170 = ((v160 ^ 0x6D20390FA45F196FLL) & v162) == 0;
  uint64_t v173 = ((v162 + (v160 ^ 0x92DFC6F05BA0E690) + 1) ^ 0xCCEFFC6AD7FFF7BBLL)
       + 0x733CD3BDEFED9F80
       + ((2 * (v162 + (v160 ^ 0x92DFC6F05BA0E690) + 1)) & 0x99DFF8D5AFFFEF76);
  uint64_t v174 = v167 - 2 * v166;
  if (v170) {
    uint64_t v173 = v169 + 2 * ((v171 ^ 0x383506D7608E2928) & v154) + 0x402CD028C7ED973BLL;
  }
  unint64_t v175 = v174 ^ (v148 << 23);
  unint64_t v176 = v151 ^ (v151 >> 10) ^ (v151 >> 17) ^ (v151 << 47) ^ (v151 << 54);
  *((void *)&v177 + 1) = v173 + 0x1FD32FD7381268C5;
  *(void *)&long long v177 = v173 - 0x402CD028C7ED973BLL;
  unint64_t v178 = v172 ^ 0xAA6A2D4BA2838D66;
  uint64_t v179 = __ROR8__(__ROR8__(v175, 57) ^ __ROR8__(v158, 57) ^ 0xC0E96C8E7C86706, 7);
  unint64_t v180 = v172 ^ 0xAA6A2D4BA2838D66 ^ (v143 >> 6) ^ __ROR8__(__ROR8__(v143, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v177 >> 61), 3);
  uint64_t v181 = (v180 ^ 0x3CBE485844A65555) & (v176 ^ 0x5156C560131506D7);
  v180 ^= 0xC341B7A7BB59AAAALL;
  uint64_t v182 = v180 & (v172 ^ 0x5595D2B45D7C7299);
  unint64_t v183 = v180 ^ (v175 ^ 0x1AE5EFC503000000) & (v176 ^ 0xAEA93A9FECEAF928);
  unint64_t v184 = v181 ^ v178;
  *((void *)&v177 + 1) = v179 ^ 0x16FDF2E892CF90CELL;
  *(void *)&long long v177 = v179;
  uint64_t v185 = v182 ^ v179 ^ 0x16FDF2E892CF90CELL;
  unint64_t v186 = (__ROR8__((v177 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v178 ^ v175 ^ v176;
  unint64_t v187 = v185 ^ v186;
  unint64_t v188 = ((v183 ^ *((void *)&v177 + 1) & (v175 ^ v176 ^ 0xB44CD55AEFEAF928))
        - ((2 * (v183 ^ *((void *)&v177 + 1) & (v175 ^ v176 ^ 0xB44CD55AEFEAF928))) & 0x9BBB93EE54B0DA4ALL)
        - 0x32223608D5A792DBLL) ^ v176;
  *((void *)&v177 + 1) = v185 ^ v186 ^ 0x3D2C8;
  *(void *)&long long v177 = v185 ^ v186 ^ 0x428F09E60B600000;
  uint64_t v189 = v184 ^ v185 ^ ((v184 ^ v185) >> 39) ^ (8 * (v184 ^ v185)) ^ ((v184 ^ v185) << 25) ^ ((v184 ^ v185) >> 61);
  uint64_t v190 = (v177 >> 19) ^ ((v185 ^ v186 ^ 0x4BB32AA5101506D7) << 36) ^ ((v185 ^ v186 ^ 0x4BB32AA5101506D7) >> 28);
  unint64_t v191 = __ROR8__(__ROR8__(v183 ^ 0x616B258C5FF13C26, 27) ^ 0x61D86C4195FBD0F1, 37);
  unint64_t v192 = ((v190 ^ 0xB76D41F000000000)
        - 2 * ((v190 ^ 0xB76D41F000000000) & 0x74781FCC96C26637 ^ v190 & 0x20)
        - 0xB87E033693D99E9) ^ v187;
  unint64_t v193 = v183 ^ 0x6DC4FB0BD4FFFF44 ^ ((v183 ^ 0x6DC4FB0BD4FFFF44) >> 1) ^ (v191 << 58);
  *((void *)&v177 + 1) = v186 ^ 0xA97E34586;
  *(void *)&long long v177 = v186 ^ 0x5E94DC0000000000 ^ (((v186 << 57) ^ 0xC00000000000000)
                                                  - ((2 * ((v186 << 57) ^ 0xC00000000000000)) & 0x7000000000000000)
                                                  + 0x3892425BD80FC899);
  uint64_t v194 = ((v189 ^ 0xABCF8FE7C463E5DLL) + v193 - 2 * ((v189 ^ 0xABCF8FE7C463E5DLL) & v193)) ^ ((v191 >> 6) | (v191 << 63));
  uint64_t v195 = __ROR8__(__ROR8__(v186, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0x94CBAE2F68E2AC31 ^ (v177 >> 42), 22);
  unint64_t v196 = v188 ^ (v188 >> 10) ^ (((v188 << 54) ^ (v188 << 47)) & 0xFFFF800000000000 | (v188 >> 17));
  unint64_t v197 = v195 & 0xDD74CA3F78583B7ELL;
  BOOL v170 = v74 == 0;
  unint64_t v198 = v195 ^ 0xDD74CA3F78583B7ELL;
  if (v170) {
    unint64_t v198 = 0x228B35C087A7C481;
  }
  unint64_t v199 = v198 & v195;
  uint64_t v200 = v196 ^ 0x4F0BCA737D365059;
  unint64_t v201 = v197 ^ __ROR8__(v186, 41) ^ v199 ^ 0x8F373AC9F8A47866;
  uint64_t v202 = (v196 ^ 0x8FC6482193C1023) & ~v194;
  unint64_t v203 = v192 ^ v201;
  unint64_t v204 = v201 & (v196 ^ 0xF7039B7DE6C3EFDCLL);
  unint64_t v205 = (v201 + 0x47F7AEF1640A407ALL - ((2 * v201) & 0x8FEF5DE2C81480F4)) ^ v200 ^ (v203 ^ 0x4908E9D5F19C7F11) & (v189 ^ 0xABCF8FE7C463E5DLL);
  unint64_t v206 = ((v203 ^ 0xB6F7162A0E6380EELL ^ v194 & (v189 ^ 0xF543070183B9C1A2) ^ v202)
        - ((2 * (v203 ^ 0xB6F7162A0E6380EELL ^ v194 & (v189 ^ 0xF543070183B9C1A2) ^ v202)) & 0xF480E6E2F65ABC4)
        - 0x785BF8C8E84D2A1ELL) ^ v189;
  unint64_t v207 = v204 ^ v194 ^ ((v204 ^ v194) << 58) ^ (((v204 ^ v194) >> 1) ^ ((v204 ^ v194) >> 6) | ((unint64_t)~(v204 ^ v194) << 63));
  BOOL v209 = a41 - 124221670 < a34;
  if (a36 > 0xCA59219A != a41 - 124221670 < 0x35A6DE65) {
    BOOL v209 = a36 > 0xCA59219A;
  }
  unint64_t v208 = v205 ^ 0xB69E2DF9126D03CLL ^ (((v205 << 57) ^ 0xAE00000000000000)
                                     - ((2 * ((v205 << 57) ^ 0xAE00000000000000)) & 0x9999999999999999)
                                     + 0x4C5DD3E58E0DF86BLL);
  return (*(uint64_t (**)(void, unint64_t, BOOL, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (v211 ^ (11 * v209))))(a41, v206 ^ (8 * v206) ^ (v206 << 25) ^ (v206 >> 39) ^ (v206 >> 61) ^ 0x567B5442A21D20F7, a36 > 0xCA59219A, 84455, a5, (v205 << 23) ^ (v205 >> 7) ^ (v208 | (v205 >> 41) ^ 0x239A18) ^ v208 & ((v205 >> 41) ^ 0x239A18), 0xB6F7162A0E6380EELL, v207, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_1D4AB79CC()
{
  LODWORD(STACK[0x46C]) = v1;
  STACK[0x5E0] = STACK[0x3F8];
  LODWORD(STACK[0x5D8]) = v1;
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((v1 == v4 + (v2 ^ 0x419) + 1049 - 1115) * ((v2 ^ 0x419) + 1990)) | v2 ^ 0x419)))();
}

void sub_1D4AB79E8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) - 1224239923 * ((-2 - ((a1 | 0xAACC30C4) + (~a1 | 0x5533CF3B))) ^ 0xA78032EC);
  __asm { BRAA            X11, X17 }
}

void sub_1D4AB7B14()
{
  _DWORD *v0 = -526372686;
}

uint64_t sub_1D4AB7B2C()
{
  *(_DWORD *)(v5 - 12_Block_object_dispose(&STACK[0x368], 8) = v3
                        - 13
                        - 108757529 * ((~((v5 - 128) | 0x19E09044) + ((v5 - 128) & 0x19E09044)) ^ 0x6830D90)
                        + 1420;
  *(void *)(v5 - 120) = v1;
  *(void *)(v5 - 112) = v2;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v3 + 2002)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * ((55
                                              * (v4 != ((v3 + 66624253) & 0xFC076BFF ^ 0x4783552B)
                                                     + ((v3 - 831359275) & 0x318D8FF9))) ^ (v3 - 13))))(v6);
}

uint64_t sub_1D4AB7BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v28 - 144) = (v24 - 1823) ^ (1225351577
                                         * ((((v28 - 144) | 0xE5A66361) + (~(v28 - 144) | 0x1A599C9E)) ^ 0xC63CBB76));
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 12_Block_object_dispose(&STACK[0x368], 8) = a24;
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  (*(void (**)(uint64_t))(v26 + 8 * (v24 ^ 0x10E)))(v28 - 144);
  *(_DWORD *)(v28 - 144) = (v24 - 1823) ^ (1225351577
                                         * ((((v28 - 144) | 0x57292175) - ((v28 - 144) & 0x57292175)) ^ 0x74B3F963));
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 12_Block_object_dispose(&STACK[0x368], 8) = a24;
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  (*(void (**)(uint64_t))(v26 + 8 * (v24 ^ 0x10E)))(v28 - 144);
  *(_DWORD *)(v28 - 144) = (v24 - 1823) ^ (1225351577
                                         * ((2 * ((v28 - 144) & 0x216F9478) - (v28 - 144) - 560960635) ^ 0xFD0AB393));
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 12_Block_object_dispose(&STACK[0x368], 8) = a24;
  (*(void (**)(uint64_t))(v26 + 8 * (v24 + 242)))(v28 - 144);
  int v29 = 1374699841 * ((((v28 - 144) | 0x951DA954) - (v28 - 144) + ((v28 - 144) & 0x6AE256A8)) ^ 0xF8E9B15D);
  *(void *)(v28 - 136) = v27;
  *(_DWORD *)(v28 - 12_Block_object_dispose(&STACK[0x368], 8) = -128426107 - v29 + v25 + 1;
  *(_DWORD *)(v28 - 144) = (v24 - 618) ^ v29;
  (*(void (**)(uint64_t))(v26 + 8 * (v24 + 212)))(v28 - 144);
  BOOL v30 = *(_DWORD *)(v28 - 140) != (((v24 - 1035) | 0x27A) ^ 0x5F2A01E);
  int v31 = 1374699841 * ((~((v28 - 144) | 0x16B4FC58) + ((v28 - 144) & 0x16B4FC58)) ^ 0x84BF1BAE);
  *(_DWORD *)(v28 - 12_Block_object_dispose(&STACK[0x368], 8) = -128426107 - v31 + v25;
  *(_DWORD *)(v28 - 144) = (v24 - 618) ^ v31;
  *(void *)(v28 - 136) = v27;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v24 + 212)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((v30 * ((39 * (v24 ^ 0x814)) ^ 0x430)) ^ v24)))(v32);
}

void sub_1D4AB7E60()
{
}

void sub_1D4AB7E6C()
{
}

uint64_t sub_1D4AB7FFC@<X0>(unint64_t a1@<X0>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, int a13, unsigned int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  unint64_t v23 = (v18 ^ HIDWORD(a1) ^ (v21 - 1196160365) & 0x474BF6BF) + HIDWORD(v20) + (*(_DWORD *)(a18 + a6) ^ a2);
  *(_DWORD *)(a18 + 4 * a9) = v23 + a2 - (v19 & (2 * v23));
  *(_DWORD *)(a18 + a6) = (v23 >> ((v21 + 7) & 0x7F ^ 0x1Fu)) | a2;
  BOOL v24 = a15 + 858137072 < a13;
  if (a14 > a12 != a15 + 858137072 < -763079883) {
    BOOL v24 = a14 > a12;
  }
  return (*(uint64_t (**)(void))(v22 + 8 * (v21 ^ (121 * v24))))();
}

void sub_1D4AB80DC()
{
}

uint64_t sub_1D4AB8164()
{
  void *v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_1D4AB8188()
{
  *(void *)(v5 - 120) = v3;
  *(_DWORD *)(v5 - 112) = v4
                        + ((((v5 - 128) | 0x2274F5C9) - (v5 - 128) + ((v5 - 128) & 0xDD8B0A30)) ^ 0x98E08DAB) * v2
                        - 7;
  *(void *)(v5 - 104) = v1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 + 549)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((*(_DWORD *)(v5 - 128) > 0x4B4B6B4Bu) * ((v4 ^ 0x347) - 1395)) ^ v4)))(v6);
}

void sub_1D4AB8220()
{
}

void sub_1D4AB8290(int a1@<W8>)
{
  int v7 = ((v6 - 1956630864 - 2 * ((v6 - 144) & 0x8B602F40)) ^ 0x31F45722) * v1;
  *(_DWORD *)(v6 - 116) = v7 + v2 + ((a1 - 822) ^ 0xFA4A7D23);
  *(void *)(v6 - 136) = v4;
  *(void *)(v6 - 12_Block_object_dispose(&STACK[0x368], 8) = v5;
  *(_DWORD *)(v6 - 144) = v7 + a1 - 299;
  (*(void (**)(uint64_t))(v3 + 8 * (a1 ^ 0xAB1)))(v6 - 144);
  JUMPOUT(0x1D4A98638);
}

void sub_1D4AB830C()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1D4AB8338);
}

uint64_t sub_1D4AB83E8@<X0>(uint64_t a1@<X1>, int a2@<W5>, uint64_t a3@<X8>)
{
  *((unsigned char *)&STACK[0x2AC] + a3 + a1) = -21;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1635 * ((unint64_t)(a3 + 1 + a1) < 0x38)) ^ (a2 + v3 + 100))))();
}

uint64_t sub_1D4AB8428()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x6DE ^ (35 * LODWORD(STACK[0x3C8])))))();
}

uint64_t sub_1D4AB848C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                + 8
                                                                                * (int)((15
                                                                                       * ((STACK[0x420]
                                                                                         - 60) & 1)) ^ (STACK[0x420] - 517))))(a1, 1092, 4143027690, a4, 235);
}

uint64_t sub_1D4AB84EC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((662
                                * ((((*(unsigned __int8 *)(v3 + 3) - 134) << ((v2 + 63) ^ 0x35)) & v0)
                                 + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1D4AB8530(double a1)
{
  *(double *)(v5 + v3) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 0) * v2) ^ v1)))();
}

uint64_t sub_1D4AB8558()
{
  unsigned int v5 = ((v2 + 350787328) & 0xEB176B3E ^ 0xFFFFFCC7) + *(unsigned __int8 *)(v3 + 5);
  return (*(uint64_t (**)(void))(v4 + 8 * ((985 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)))();
}

void sub_1D4AB85AC()
{
}

uint64_t sub_1D4AB85B8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((239 * (((v3 ^ v2) & 0x1F ^ 0x15) == ((v0 - 369455875) & 0x160577FA ^ (v0 + 1272)))) ^ v0)))();
}

void sub_1D4AB8634()
{
}

uint64_t sub_1D4AB863C()
{
  STACK[0x420] = v0;
  uint64_t v4 = v3 - 200;
  *(unsigned char *)uint64_t v4 = (-85 * ((2 * ((v3 + 56) & 0x38) - (v3 + 56) - 57) ^ 0x31)) ^ 0x60;
  STACK[0x268] = (unint64_t)&STACK[0x6577379738C1903E];
  *(void *)(v4 + _Block_object_dispose(&STACK[0x368], 8) = &STACK[0x6577379738C1903E];
  STACK[0x270] = (unint64_t)&STACK[0x8FD385F8C7F9DC5];
  *(void *)(v4 + 24) = &STACK[0x8FD385F8C7F9DC5];
  *(_DWORD *)(v3 - 184) = 3804331 * ((2 * ((v3 - 200) & 0x59AF7138) - (v3 - 200) - 1504670009) ^ 0xD885AB31) + v1 + 1367;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 + 1901)))(v3 - 200);
  int v6 = *(_DWORD *)(v3 - 180);
  LODWORD(STACK[0x5D8]) = v6;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((200 * (v6 != (((v1 - 76585356) & 0x4909CBF ^ 0x4AF) << 6) + 526346631)) ^ v1)))(v5);
}

uint64_t sub_1D4AB8744@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  unsigned int v5 = v4 + 221792570;
  BOOL v6 = v5 < v2 + 654302954;
  int v7 = (v3 > 0xD9001C4E) ^ v6;
  BOOL v8 = v3 + 654304177 < v5;
  if (!v7) {
    BOOL v6 = v8;
  }
  if (v6) {
    int v9 = a2;
  }
  else {
    int v9 = a2 + 1;
  }
  *(_DWORD *)(result + 12) = v9;
  return result;
}

uint64_t sub_1D4AB87A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6
                                                              + 8
                                                              * ((53
                                                                * (((11 * (v5 ^ 0x509)) ^ 0x1671C9F5 ^ -(v2 + 2 * (((v5 - 1240) ^ 0x9679CA56) & v4)) & 0x1FF5FFF6)
                                                                 + ((v3 - (((v5 - 1240) ^ 0x9679CA56) & v4) - 817137378) ^ 0x44C61AEC)
                                                                 - 147328048 == 120779723)) ^ v5)))(a1, a2, 2431);
}

uint64_t sub_1D4AB8848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  unint64_t v53 = *(void *)(v51 + 152);
  *(void *)(v51 + 4_Block_object_dispose(&STACK[0x368], 8) = *(void *)(v52 + 8 * (int)(STACK[0x420] - 1044));
  STACK[0x448] = v53;
  STACK[0x4F8] = STACK[0x3E8];
  uint64_t v54 = *(_DWORD *)(v53 - 0x72E93EC0CCAF573ELL) & ((a51 & 0xAE1C2AD5) + 42);
  *(unsigned char *)(v53 - 0x72E93EC0CCAF5782 + (v54 ^ 0x24)) = 107;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52
                                                                                                  + 8 * (int)((((v54 ^ 0x24) > 0x37) * ((a51 & 0xAE1C2AD5) + 1079)) ^ a51 & 0xAE1C2AD5)))(a1, a2, a3, 3768594526, 2772, a6, 1052694286);
}

uint64_t sub_1D4AB8864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49)
{
  return (*(uint64_t (**)(void))(v49
                              + 8
                              * (int)((((STACK[0x420] ^ 0x732F790) != 120779739) * ((a49 ^ 0x450) + 21)) | (STACK[0x420] + 51))))();
}

uint64_t sub_1D4AB88D4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (612 * (v1 == v3)))))();
}

uint64_t sub_1D4AB88F8@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 - 220 + a2 - 1340507626) = -21;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1249 * ((unint64_t)(a2 - 1340507625) < 0x38)) ^ (a1 + v2 + 566))))();
}

uint64_t sub_1D4AB8940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned __int8 a19)
{
  int v22 = -v20;
  unsigned int v23 = v20 + v19 - 1900652504;
  if (v23 <= 0x40) {
    int v24 = 64;
  }
  else {
    int v24 = v23;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21
                                                              + 8
                                                              * ((((((v22 + 1900652504 - v19 + v24) < 0xF) ^ a19) & 1)
                                                                * ((a13 - 423) ^ 0x409)) ^ a13)))(a1, a2, 4294966082);
}

void sub_1D4AB89C4()
{
}

uint64_t sub_1D4AB89D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((v7 < ((v8 - 1383389014) & 0x5274D36Bu) - 330) * ((a6 + v8 + 305) ^ (a6 + 1625))) ^ v8)))();
}

void sub_1D4AB8A20()
{
}

uint64_t sub_1D4AB8A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = *(void *)(v4 - 0x2C138C8FAF40FC22);
  int v8 = ((*(unsigned __int8 *)(v7 + (v3 - 226063315)) ^ 0xEB) << 24) | (((((v6 + 61) | 0x61) - 27) ^ v6 ^ 0x76 ^ *(unsigned char *)(v7 + (v3 - 226063314))) << 16) | ((*(unsigned __int8 *)(v7 + (v3 - 226063313)) ^ 0xEB) << 8) | *(unsigned __int8 *)(v7 + (v3 - 226063312)) ^ 0xEB;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((28
                                * (((v8 + v2 - ((2 * v8) & 0x3EBED70E)) & 0xFFFFFF ^ 0x5F6B87)
                                 - (*(_DWORD *)(a1 + 32) ^ v5) == -1359518954)) ^ v6)))();
}

uint64_t sub_1D4AB8B04@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((v3 + ((v3 + 974699756) & 0xC5E742FF ^ 0xFFFFFE78) + 458)
                                     * ((a1 ^ 0xF4BF7EA) + v1 - v2 == -2038141898)) | v3)))();
}

void sub_1D4AB8B68(int a1@<W8>)
{
  _DWORD *v2 = 2103820122;
  (*(void (**)(uint64_t))(v3 + 8 * (((a1 - 1694) | 0x2F) ^ 0x89D)))(v1);
  JUMPOUT(0x1D4AB8BB8);
}

uint64_t sub_1D4AB8CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = v4 ^ 0xC3A;
  int v7 = ((v4 ^ 0xC3A) - 2081) | 0x119;
  uint64_t v8 = v3;
  uint64_t v9 = a3 + v3;
  if ((unint64_t)(v9 + 1) > 0x38) {
    uint64_t v10 = v9 + 1;
  }
  else {
    uint64_t v10 = 56;
  }
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v10 - v8 + 1839851021 < (unint64_t)((v6 - 925474920) & 0x37299CE6) - 1240)
                                * (v7 ^ 0x1A5)) ^ v6)))();
}

uint64_t sub_1D4AB8D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  a19 = v19 - 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((464 * (((*(&a19 + 6 * (v19 - 1883610289) + 2) + (int)a6) & ((v20 ^ (v21 + 447)) + 0xFFFFFFF20ECF457)) == 2)) ^ v20)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1D4AB8E14()
{
  _DWORD *v4 = v4[623];
  *(_DWORD *)(v7 - 144) = v6 + v0 - v5 - 1542247033;
  *(void *)(v7 - 136) = v2;
  *(void *)(v7 - 12_Block_object_dispose(&STACK[0x368], 8) = (v1 - 1185548168) ^ v6;
  *(_DWORD *)(v7 - 104) = (v0 - v5 + 479320129) ^ v6;
  *(_DWORD *)(v7 - 116) = (v0 - v5 + 479320049) ^ v6;
  *(_DWORD *)(v7 - 112) = (v0 - v5 + 479320254) ^ v6;
  *(_DWORD *)(v7 - 120) = -(int)v6;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 1697)))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v7 - 108)))(v8);
}

uint64_t sub_1D4AB8EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 120) = v16
                         + 1178560073 * ((2 * ((v17 - 136) & 0x25D80F90) - (v17 - 136) - 634916753) ^ 0x60B3880D)
                         + 848;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x368], 8) = a14;
  *(void *)(v17 - 112) = v15;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 ^ 0xB84)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v17 - 136) > 0x4B4B6B4Cu) * ((v16 + 12) ^ 0x424)) ^ v16)))(v18);
}

uint64_t sub_1D4AB8F64@<X0>(int a1@<W5>, int a2@<W7>, int a3@<W8>)
{
  int v6 = *(_DWORD *)(v4 + v3 * (uint64_t)a2 + 36);
  BOOL v7 = v6 != a1;
  if (v6 - 911463694 <= -2072803504 || v6 - 911463694 >= SLODWORD(STACK[0x3F8])) {
    BOOL v7 = 0;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((1006 * (((a3 - 96) ^ v7) & 1)) ^ a3)))();
}

uint64_t sub_1D4AB8FD8@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((v2 != (((a2 - 1062) | 0x641) ^ (a1 + 669)))
                                     * ((a2 - 2660607) & 0xDF3B9FFF ^ (v3 + 2))) ^ a2)))();
}

uint64_t sub_1D4AB9030(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1798 * ((v4 & 0x18) == v3 + (a3 ^ (v5 + 1620)) - 893)) ^ a3)))();
}

uint64_t sub_1D4AB906C(uint64_t result)
{
  uint64_t v1 = 1178560073 * ((2 * (result & 0x64AC438940A5398ALL) - result + 0x1B53BC76BF5AC675) ^ 0xAFEC9E05CEBE17);
  uint64_t v2 = *(void *)(result + 8);
  unint64_t v3 = v2 - v1;
  uint64_t v4 = *(void *)(result + 24);
  BOOL v5 = v4 == v2;
  BOOL v6 = v4 - v1 > v3;
  if ((*(_DWORD *)(result + 4) - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17))) {
    BOOL v7 = v6;
  }
  else {
    BOOL v7 = v5;
  }
  if (v7) {
    int v8 = *(_DWORD *)(result + 16) - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17);
  }
  else {
    int v8 = *(_DWORD *)(result + 32) ^ (1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17));
  }
  *(_DWORD *)uint64_t result = v8 ^ (*(_DWORD *)(result + 40)
                          + 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17));
  return result;
}

void sub_1D4AB9118()
{
  STACK[0x4D0] = v0;
  STACK[0x590] = v2;
  STACK[0x470] = *(void *)(v3 + 8 * v1);
  JUMPOUT(0x1D4AB91C8);
}

uint64_t sub_1D4AB91F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, void, uint64_t))(v5
                                                            + 8
                                                            * (((v3 != v4 - 1905) * (((v4 - 1868) | 0x388) - 698)) ^ v4)))((v4 - 1868) | 0x388u, ((v4 - 1868) | 0x388u) - 698, a3);
}

void sub_1D4AB9254(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((2 * (a1 & 0x878F6F35) - a1 + 2020643018) ^ 0xC2E4E8A8));
  __asm { BRAA            X8, X17 }
}

void sub_1D4AB933C()
{
}

void sub_1D4AB9344(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4AB9388@<X0>(unint64_t a1@<X0>, int a2@<W1>, unint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X7>, unsigned int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  BOOL v41 = a8 > v30;
  int v42 = a6 + a5;
  int v43 = a6 + 1;
  uint64_t v44 = 4 * (v43 + a5);
  unint64_t v45 = (*(_DWORD *)(a28 + v44) ^ (v28 + ((v33 + v31) & v32) - 1783)) + (a7 ^ HIDWORD(a1));
  unint64_t v46 = HIDWORD(v39)
      + v34 * (unint64_t)(*(_DWORD *)(*v37 + v44) ^ v28)
      + ((v45 + a4 - (v29 & (2 * v45))) ^ a3);
  *(_DWORD *)(a28 + 4 * v42) = v46 + v28 - (a2 & (2 * v46));
  if (v41 == v43 + v40 < v36) {
    BOOL v41 = v43 + v40 < v38;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((14 * v41) ^ v33)))();
}

uint64_t sub_1D4AB9438()
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  unint64_t v0 = (uint64_t *)*(&off_1F2C91B30
                  + ((-35 * ((qword_1EA70FB08 + dword_1EA70FB18) ^ 0xD8)) ^ byte_1D54C8060[byte_1D54D31A0[(-35 * ((qword_1EA70FB08 + dword_1EA70FB18) ^ 0xD8))] ^ 0xCA])
                  + 78);
  unsigned __int8 v1 = -35 * (*v0 ^ qword_1EA70FB08 ^ 0xD8);
  BOOL v11 = (char *)off_1F2C91D80 - 4;
  unint64_t v2 = off_1F2C91FA8;
  int v3 = (uint64_t *)*(&off_1F2C91B30
                  + (*((unsigned char *)off_1F2C91FA8 + (*((unsigned __int8 *)off_1F2C91D80 + v1 - 4) ^ 0xD6u)) ^ v1)
                  - 11);
  uint64_t v4 = 1226760413 * ((*v0 - (void)&v12 + *v3) ^ 0x5B705F9A26A579D8);
  uint64_t *v0 = v4;
  uint64_t *v3 = v4;
  LOBYTE(v4) = -35 * (*(_DWORD *)v0 ^ 0xD8 ^ v4);
  uint64_t v10 = (unsigned __int8 *)off_1F2C91CB0;
  uint64_t v5 = (char *)off_1F2C91DA8 - 4;
  uint64_t v13 = (char *)*(&off_1F2C91B30
                + (*((unsigned char *)off_1F2C91DA8
                                    + (*((unsigned __int8 *)off_1F2C91CB0 + v4) ^ 0x4Du)
                                    - 4) ^ v4)
                - 156)
      - 4;
  unsigned int v14 = 724 - 1759421093 * (((&v13 | 0x62E542B1) - (&v13 & 0x62E542B1)) ^ 0xD198F2E5);
  LOBYTE(v4) = -35 * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xD8);
  BOOL v6 = (char *)*(&off_1F2C91B30
               + ((-35 * ((qword_1EA70FB08 - dword_1EA70FB18) ^ 0xD8)) ^ byte_1D54D33A0[byte_1D54CE750[(-35 * ((qword_1EA70FB08 - dword_1EA70FB18) ^ 0xD8))] ^ 0x8B])
               - 79)
     - 4;
  (*(void (**)(char **))&v6[8
                                     * (*((unsigned char *)off_1F2C91C90
                                                         + (*((unsigned __int8 *)off_1F2C91DC8 + v4
                                                                                               - 12) ^ 0xA9u)
                                                         - 4) ^ v4)
                                     + 16744])(&v13);
  unsigned int v14 = 724 - 1759421093 * ((((2 * &v13) | 0xD19EEED6) - &v13 - 1758426987) ^ 0xDBB2C73F);
  unsigned __int8 v7 = -35 * ((*(_DWORD *)v3 - *(_DWORD *)v0) ^ 0xD8);
  uint64_t v13 = (char *)*(&off_1F2C91B30
                + (*((unsigned char *)off_1F2C91D28 + (*((unsigned __int8 *)off_1F2C91F90 + v7 - 12) ^ 0x3Bu)) ^ v7)
                - 92);
  (*(void (**)(char **))&v6[8
                                     * ((-35 * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xD8)) ^ v2[v11[(-35 * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xD8))] ^ 0xD9])
                                     + 16712])(&v13);
  unsigned int v8 = 1225351577
     * (((&v13 ^ 0x9D172845 | 0xE551A89D)
       - (&v13 ^ 0x9D172845)
       + ((&v13 ^ 0x9D172845) & 0x1AAE5760)) ^ 0x5BDC58CE);
  LODWORD(v13) = v8 + 264;
  BYTE4(v13) = v8 ^ 0x1D;
  return (*(uint64_t (**)(char **))&v6[8
                                               * ((-35 * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xD8)) ^ v5[v10[(-35 * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xD8))] ^ 0x92])
                                               + 17192])(&v13);
}

uint64_t sub_1D4AB9808(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 < 0x20) ^ (a2 + 5)) & 1) * (((a2 - 155) | 0x280) ^ 0x39C)) ^ (a2 + 521))))();
}

uint64_t sub_1D4AB98F8@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  BOOL v9 = v6 - (v3 & 0xFFFFFFF8) == -8;
  uint64_t v10 = v5 + v4 - v6 - 34946 + ((v7 - 54) ^ (a1 + 897));
  *(void *)(a2 - 7 + v10) = *(void *)(v2 - 7 + v10);
  int v11 = v9;
  return (*(uint64_t (**)(void))(v8 + 8 * ((84 * v11) ^ v7)))();
}

void zxcm2Qme0x(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4AB99D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,char a43)
{
  int v46 = (v44 & 0xFFFFFFFC) != ((v43 - 1705) ^ 0x2A8E9CB0 ^ (136 * (v43 ^ 0x6B7)));
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v45
                                                                               + 8 * (((32 * v46) | (v46 << 6)) ^ v43)))(&a43, a2, a3, a4, 14040);
}

uint64_t sub_1D4AB9A3C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((a5 + (v7 ^ 0x166) - 19) ^ (a5 - 392) ^ (34 * (v7 ^ 0x166)))
                                * (v5 + a4 + 63 >= (v5 + a4))) ^ v7)))();
}

uint64_t sub_1D4AB9A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(_DWORD *)(v20 - 136) = (v19 - 1980) ^ (1225351577
                                         * ((((v20 - 136) | 0x65CF04B9) - ((v20 - 136) & 0x65CF04B9)) ^ 0x4655DCAF));
  *(void *)(v20 - 12_Block_object_dispose(&STACK[0x368], 8) = a15;
  *(void *)(v20 - 120) = v15;
  *(void *)(v20 - 112) = v15;
  *(void *)(v20 - 104) = a12;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v19 + 85)))(v20 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((107
                                              * (((v18
                                                 + ((v19 + 1875882750) ^ ((v16 - 1741097738) >> 1))
                                                 + ((v16 - 1741097738) & 0xDF9F7754)
                                                 + 2) & a11) != 0)) ^ v19)))(v21);
}

uint64_t sub_1D4AB9B70()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((v0 + ((v2 + 1349) | 0x66) - 1895) & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                      + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v1) == v1)
                                     * ((v2 + 1253902659) & 0xB542F5F5 ^ 0x49A)) ^ v2)))();
}

void sub_1D4AB9BD4(uint64_t a1)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 4) ^ (460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86));
  uint64_t v4 = *(void *)(a1 + 8);
  v3[0] = v1 + 628203409 * (((v3 | 0xF7CBF79) + (~v3 | 0xF0834086)) ^ 0x8DF4B34B) - 196;
  int v2 = (char *)*(&off_1F2C91B30 + (v1 ^ 0x48C)) - 4;
  (*(void (**)(_DWORD *))&v2[8 * (v1 ^ 0xD3B)])(v3);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4AB9D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D4AB9D78(a1, 203, a3, a4, a5, 2425293427, 555619558, 61);
}

uint64_t sub_1D4AB9D78@<X0>(unint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v1 + 3 >= a1) * v3) ^ v2)))();
}

uint64_t sub_1D4AB9DDC()
{
  BOOL v4 = v1 + 438245227 < (int)(v2 + 631256213);
  if (v1 + 438245227 < -1516227435 != v2 > ((v0 - 258914749) & 0xF6EBBEF ^ (v0 - 1423236698) & 0x54D4DD72 ^ 0x5A5FC690u)) {
    BOOL v4 = v2 > ((v0 - 258914749) & 0xF6EBBEF ^ (v0 - 1423236698) & 0x54D4DD72 ^ 0x5A5FC690u);
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((361 * v4) ^ v0)))();
}

uint64_t sub_1D4AB9E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x46C]) = v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, __n128))(v7
                                                                                                 + 8
                                                                                                 * (((((v5 - 564425967) & 0x21A477F7) - 781) * v6) ^ (v5 - 531))))(a1, a2, a3, a4, STACK[0x420], (__n128)0);
}

uint64_t sub_1D4AB9EC8(int *a1)
{
  unsigned int v2 = a1[1] - 108757529 * (a1 ^ 0xE09C622B);
  uint64_t result = (*(uint64_t (**)(void, void (*)()))((char *)*(&off_1F2C91B30 + (int)(v2 + 504207182))
                                                         + 8 * (int)(v2 ^ 0xE1F261A2)
                                                         - 4))(*(&off_1F2C91B30 + (int)(v2 + 504207190)), sub_1D4A85A4C);
  int v4 = *(_DWORD *)*(&off_1F2C91B30 + (int)(v2 ^ 0xE1F269EF));
  if (result) {
    int v4 = -526372551;
  }
  *a1 = v4;
  return result;
}

void sub_1D4AB9F80(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1755732067 * (((a1 | 0xFD508F6) - a1 + (a1 & 0xF02AF709)) ^ 0xD113B52D);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1D4ABA07C(uint64_t a1, int a2, char a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v4 == 15) ^ (v3 + a3)) & 1) * ((v3 + 809) ^ a2)) ^ v3)))();
}

uint64_t sub_1D4ABA0AC@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X7>, int a7@<W8>)
{
  BOOL v12 = a3 < v9;
  *(unsigned char *)(a5 + (v7 + a1)) = *(unsigned char *)(a6 + (v8 + v10))
                                           - ((a7 - 111) & (2 * *(unsigned char *)(a6 + (v8 + v10))))
                                           - 21;
  unsigned int v13 = v8 + 1 + a2;
  int v14 = v12 ^ (v13 < v9);
  BOOL v15 = v13 < a3;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v12 * a4) ^ a7)))();
}

void sub_1D4ABA110()
{
}

void sub_1D4ABA130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v15 = 535753261 * (((((v14 - 144) | 0x615B03DC) ^ 0xFFFFFFFE) - (~(v14 - 144) | 0x9EA4FC23)) ^ 0x9450F20C);
  *(_DWORD *)(v14 - 144) = ((v13 ^ 0xC8975CE0) + v10) ^ v15;
  *(_DWORD *)(v14 - 12_Block_object_dispose(&STACK[0x368], 8) = (v13 ^ 0x346) - v15 + 368;
  *(void *)(v14 - 120) = v12;
  *(void *)(v14 - 136) = a10;
  (*(void (**)(uint64_t))(v11 + 8 * ((v13 ^ 0x346) + 1374)))(v14 - 144);
  JUMPOUT(0x1D4ABA1B8);
}

void sub_1D4ABA210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v27 = 1224239923 * ((v26 - 144) ^ 0xF2B3FDD7);
  *(_DWORD *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = v27 + v24 + 1093;
  *(_DWORD *)(v26 - 144) = v27 ^ 0x4329A48E;
  *(void *)(v26 - 136) = a21;
  uint64_t v28 = v21;
  (*(void (**)(uint64_t))(v23 + 8 * (v24 ^ 0xCFD)))(v26 - 144);
  *(void *)(v26 - 104) = v28;
  *(_DWORD *)(v26 - 112) = v24
                         + 1224239923 * ((2 * ((v26 - 144) & 0x53DB0AB8) - (v26 - 144) + 740619589) ^ 0xDE970892)
                         + 107;
  *(void *)(v26 - 12_Block_object_dispose(&STACK[0x368], 8) = v28;
  *(void *)(v26 - 120) = v25;
  *(void *)(v26 - 144) = v22;
  *(void *)(v26 - 136) = a21;
  (*(void (**)(uint64_t))(v23 + 8 * (v24 ^ 0xCE3)))(v26 - 144);
  JUMPOUT(0x1D4ABA2DCLL);
}

uint64_t sub_1D4ABA370()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 + 340) ^ 0x335) * ((v0 ^ v3) < 0x201)) ^ v1)))();
}

uint64_t sub_1D4ABA3AC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((51 * (v6 + 1 != v5 + 44)) ^ a4)))();
}

uint64_t sub_1D4ABA468@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((77 * (*(_DWORD *)(a1 + 1424) != ((14 * (((v1 - 66) | 0x42) ^ 0x4DF)) ^ 0x6F0565B8))) ^ (v1 + 688))))();
}

uint64_t sub_1D4ABA4BC(uint64_t a1, int a2, uint64_t a3, int a4, int a5)
{
  *(void *)(a3 + (a4 - v7)) = *(void *)(a1 + (a4 - v7));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 + v5 - 1223 == v6) * a5) ^ a2)))();
}

void sub_1D4ABA4EC()
{
}

uint64_t sub_1D4ABA4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * (int)(((((v14 - 207) ^ 0xFFFFF4E4) + (v14 ^ 0xCE3))
                                     * ((a13 ^ 0xFFFF2B3E) + 1741152204 + ((2 * a13) & 0xFFFE567C) - 1741097740 < 0x7FFFFFFE)) ^ v14)))();
}

uint64_t sub_1D4ABA570()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((5 * ((v0 + 1594018598) & 0xA0FD365F ^ 0x484)) ^ 0x476)
                                     * (4 * v1 - v2 == 804362340)) ^ v0)))();
}

uint64_t sub_1D4ABA5D0()
{
  int v5 = *(unsigned __int8 *)(v1 + v3 - 0x16DF25246DB7B20ALL)
     - (*(unsigned char *)(v2 + v3 - 0x16DF25246DB7B20ALL) - 93);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1477
                                * (((2 * v5) & 0xFF6FABDC) + ((v0 - 153) ^ 0xFFB7D04D ^ (v0 + 458) ^ v5) == -4729362)) ^ v0)))();
}

uint64_t sub_1D4ABA5D8@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  int v6 = v4 + v3;
  int v7 = v4 + 1;
  *(_DWORD *)(*(void *)(v2 - 0x139154EEB4327E8) + 4 * (v6 + (v5 ^ 0x356))) = a1;
  *(_DWORD *)(v2 - 0x139154EEB4327ECLL) = v7;
  int v8 = v3 + v7;
  int v9 = v8 + 208;
  if (v8 + 208 < 0) {
    int v9 = -208 - v8;
  }
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((((int)(((468 * (v5 ^ 0x384)) ^ v9 ^ 0x67BFFD13)
                                       + ((2 * v9) & 0xCF7FFD76)
                                       - 1740636287
                                       + ((468 * (v5 ^ 0x384)) ^ 0x26B)) >= 0)
                                * (((468 * (v5 ^ 0x384)) ^ 0x3F) + 2126)) ^ (468 * (v5 ^ 0x384)))))();
}

void sub_1D4ABA6C4()
{
}

uint64_t sub_1D4ABA6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  return (*(uint64_t (**)(void))(v18 + 8 * (a16 ^ (115 * (v16 - v17 != -23974521)))))();
}

void sub_1D4ABA744()
{
}

uint64_t sub_1D4ABA8E0()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v0 = *(&off_1F2C91B30
       + (*((unsigned char *)off_1F2C91D00
                           + (*((unsigned __int8 *)off_1F2C91B68
                              + (-35 * ((qword_1EA70FB08 + dword_1EA7106D0) ^ 0xD8))) ^ 0x50u)
                           - 8) ^ (-35 * ((qword_1EA70FB08 + dword_1EA7106D0) ^ 0xD8)))
       - 11);
  uint64_t v1 = *(&off_1F2C91B30
       + ((-35 * ((qword_1EA70FB08 - *v0) ^ 0xD8)) ^ *((unsigned char *)off_1F2C91D00
                                                                      + (*((unsigned __int8 *)off_1F2C91B68
                                                                         + (-35
                                                                                           * ((qword_1EA70FB08 - *v0) ^ 0xD8))) ^ 0x8Bu)
                                                                      - 8))
       - 141);
  unint64_t v2 = (unint64_t)&v4[*v0 + *v1];
  void *v0 = 1226760413 * v2 + 0x5B705F9A26A579D8;
  void *v1 = 1226760413 * (v2 ^ 0x5B705F9A26A579D8);
  unsigned int v6 = 724 - 1759421093 * ((2 * (&v5 & 0x1AB9A500) - &v5 + 1699109631) ^ 0xD63BEAAB);
  uint64_t v5 = (uint64_t)*(&off_1F2C91B30
                + (*((unsigned char *)off_1F2C91DA8
                                    + (*((unsigned __int8 *)off_1F2C91CB0
                                       + (-35 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xD8))) ^ 0x83u)
                                    - 4) ^ (-35 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xD8)))
                - 97);
  LOBYTE(v0) = -35 * (*(_DWORD *)v0 ^ 0xD8 ^ *(_DWORD *)v1);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F2C91B30
                                                        + ((-35
                                                                           * ((qword_1EA70FB08 + dword_1EA7106D0) ^ 0xD8)) ^ byte_1D54D33A0[byte_1D54CE750[(-35 * ((qword_1EA70FB08 + dword_1EA7106D0) ^ 0xD8))] ^ 0x68])
                                                        - 83)
                                              + 8
                                              * (*((unsigned char *)off_1F2C91FA8
                                                                                + (*((unsigned __int8 *)off_1F2C91D80
                                                                                   + v0
                                                                                   - 4) ^ 0xD6u)) ^ v0)
                                              + 17260))(&v5);
}

void sub_1D4ABAB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(_DWORD *)(v11 - 144) = v9;
  *(void *)(v11 - 120) = v8 - 7;
  *(void *)(v11 - 136) = v10 - 7;
  *(_DWORD *)(v11 - 152) = ((a8 ^ 0xBF) - 850) & v9;
  *(_DWORD *)(v11 - 12_Block_object_dispose(&STACK[0x368], 8) = a8 ^ 0xBF;
  JUMPOUT(0x1D4ABAB98);
}

uint64_t sub_1D4ABAC80(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8 * (v2 - 1071)))(a1, 64052174, 3623878656);
}

uint64_t sub_1D4ABACA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x3E8]) = a8;
  STACK[0x678] = 0x3EE74012A7EFF0CDLL;
  uint64_t v13 = *(_DWORD **)(v9 + 8 * (v8 ^ 0x4EB));
  STACK[0x3E0] = (unint64_t)v13;
  LODWORD(STACK[0x454]) = *v13 - 405273880;
  unint64_t v14 = 1178560073
      * ((0xBBE588A578E2CAB9 - ((v12 - 200) | 0xBBE588A578E2CAB9) + STACK[0x348]) ^ 0x5FE627B23D894D24);
  *(void *)(v10 + 24) = **(unsigned int **)(v9 + 8 * (v8 ^ 0x40F)) + v14;
  *(_DWORD *)(v12 - 164) = v14 + v8 + 2021362662;
  *(_DWORD *)(v12 - 160) = ((v8 + 1739640891) ^ 0x46) - v14;
  *(_DWORD *)(v12 - 196) = v14;
  *(_DWORD *)(v12 - 184) = v8 + 1739640891 + v14;
  *(_DWORD *)(v12 - 16_Block_object_dispose(&STACK[0x368], 8) = (v8 + 1739640932) ^ v14;
  *(void *)(v10 + _Block_object_dispose(&STACK[0x368], 8) = v14 + 369238551;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v11 + 8 * (v8 ^ 0xC8D)))(v12 - 200);
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * *(int *)(v12 - 200)))(v15);
}

uint64_t sub_1D4ABADD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                + 8
                                                                                * ((105
                                                                                  * (a7
                                                                                   - a8
                                                                                   + (unint64_t)((v9 ^ 0x261u) - 543)
                                                                                   - 1988 < 0x20)) ^ v9)))(a1, a2, a3, a4, a4);
}

uint64_t sub_1D4ABAE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(void *)(*(void *)(v8 + 96) + 1544) = *(void *)(v10 + 8);
  *(_DWORD *)(*(void *)(v8 + 96) + 1536) = *(_DWORD *)(v10 + 4);
  return a8 ^ 0x1F5F6B87u;
}

uint64_t sub_1D4ABAE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(uint64_t))
{
  int v31 = 628203409 * ((-420577316 - ((v30 - 160) | 0xE6EE7FDC) + ((v30 - 160) | 0x19118023)) ^ 0x9B998C10);
  *(_DWORD *)(v30 - 152) = v31 + v28 + 555;
  *(_DWORD *)(v30 - 14_Block_object_dispose(&STACK[0x368], 8) = 1045653968 - v31;
  *(void *)(v30 - 160) = a27;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v28 ^ 0x8F5)))(v30 - 160);
  return a28(v32);
}

uint64_t sub_1D4ABAF04()
{
  int v5 = v0 + 687;
  _DWORD *v2 = v2[623];
  int v6 = v0 + 2034273099;
  unint64_t v7 = 1374699841
     * (((STACK[0x410] | 0x4104592BF121FA86) - (STACK[0x410] & 0x4104592BF121FA86)) ^ 0x77A7198581F9C4EELL);
  *(_DWORD *)(v4 - 160) = (v5 + 2034272327) ^ v7;
  *(_DWORD *)(v4 - 172) = v6 ^ v7;
  *(_DWORD *)(v4 - 16_Block_object_dispose(&STACK[0x368], 8) = v6 & 0x795C8CBE ^ v7;
  *(_DWORD *)(v4 - 176) = -(int)v7;
  *(_DWORD *)(v4 - 200) = v7 + v5 - 1501686959;
  uint64_t v8 = v4 - 200;
  *(void *)(v8 + _Block_object_dispose(&STACK[0x368], 8) = v7 + 2418848457u;
  *(void *)(v8 + 16) = (v1 + 312900194) ^ v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v5 + 1119)))(v4 - 200);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 164)))(v9);
}

uint64_t sub_1D4ABAFF4@<X0>(int a1@<W8>)
{
  int v7 = (v4 ^ v2 ^ (v2 + ((v5 + 2) ^ (2 * a1)) - (v5 & (2 * ((v5 + 2) ^ (2 * a1)))) + 896)) > v1;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v7 << 6) | (v7 << 9)) ^ v6)))();
}

uint64_t sub_1D4ABB034(uint64_t a1)
{
  int v1 = 1374699841 * ((((2 * a1) | 0x4FD35BAC) - a1 + 1477857834) ^ 0xCA1DB5DF);
  int v2 = *(_DWORD *)a1 ^ v1;
  int v3 = *(_DWORD *)(a1 + 16) + v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x139154EEB4327ECLL);
  unsigned int v6 = v4 - 1740488377;
  BOOL v5 = v4 - 1740488377 < 0;
  unsigned int v7 = 1740488377 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F2C91B30 + (v2 ^ 0x53D))
                              + 8
                              * (int)(((v3 >> 5 >= v7) * ((v2 + 1073006665) & 0xC00B37BB ^ 0x5A5)) ^ v2)
                              - 4))();
}

void sub_1D4ABB108()
{
}

void sub_1D4ABB110()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  int v1 = *(_DWORD *)(v0 + 24) - 1225351577 * ((-2 - ((v0 | 0x64CFEAB8) + (~v0 | 0x9B301547))) ^ 0xB8AACD51);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1D4ABB288@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

_DWORD *sub_1D4ABB2A0(_DWORD *result)
{
  *uint64_t result = ((v2 + 334) ^ 0x9696D05C) - v1;
  return result;
}

uint64_t sub_1D4ABB2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  unsigned int v24 = v22 - 1643904854;
  if (v24 <= 0x40) {
    unsigned int v24 = 64;
  }
  BOOL v25 = 1643904854 - v20 - v21 + v24 > 0xE;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23
                                                                                + 8
                                                                                * (a20 ^ (v25 | (2 * v25)))))(713989072, a2, a3, a4, 3188084410);
}

void sub_1D4ABB360()
{
}

uint64_t sub_1D4ABB4A8(uint64_t a1, int a2)
{
  BOOL v6 = v4 - 1658727362 > ((a2 - 167) ^ 0x1D307948) || v4 - 1658727362 < v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((3461 * v6) ^ a2)))();
}

uint64_t sub_1D4ABB4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v55
                                                     + 8
                                                     * ((57
                                                       * (a14
                                                        + ((a55 << (((a38 ^ 0x45) + 3) ^ 0x59)) & 0x2C ^ 8)
                                                        + (a55 & 0x3F ^ 0xDE737FF2) < 0xFFFFFFC0)) ^ (a38 + 1280))))(a1, -648545233);
}

uint64_t sub_1D4ABB5A8(uint64_t a1)
{
  unsigned int v6 = *(unsigned __int8 *)(v1 + (v5 + 1));
  return (*(uint64_t (**)(uint64_t, void, void, void))(v2 + 8 * ((115 * (v6 >> 7)) ^ v4)))(a1, (v3 - 2079419382), (v4 + 1328486338) & 0xB0D0E75F, ((v6 << ((v4 - 62) & 0x5F ^ 0x5E)) & 0x1FA) + (v6 ^ 0x7BF9FBFD) - 561157);
}

void sub_1D4ABB61C()
{
  LODWORD(STACK[0x5D8]) = v0 + 379;
  JUMPOUT(0x1D4AB35CCLL);
}

void sub_1D4ABB638()
{
}

uint64_t sub_1D4ABB640()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((59 * ((v2 + v1 - 1605107679) > 7)) ^ 0x1C4)))();
}

void sub_1D4ABB6B8()
{
}

uint64_t sub_1D4ABB734()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((548
                                * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v1) == v1 + v3 - 444)) ^ v4)))();
}

uint64_t sub_1D4ABB77C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v0 & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                      + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v1) == v1)
                                     * (((164 * (v3 ^ 0xFB) + 1647003275) & 0x9DD4B7FC) + 1063)) ^ v3)))();
}

uint64_t sub_1D4ABB7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((162 * (v7 + 1 == v9 + 4)) ^ a7)))();
}

uint64_t sub_1D4ABB8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v7
                                                    + 8
                                                    * ((486 * ((v5 & 0x18) == (a5 ^ 0x68C ^ ((a5 - 708) | 0x40)))) ^ a5)))(a1, (v6 - a1));
}

uint64_t sub_1D4ABB910()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v0 - 1667755605 < ((v1 - 76) | 0x10Au) - 776)
                                     * ((v1 + 414469553) & 0xE74BB32A ^ 0x3D1)) ^ v1)))();
}

uint64_t sub_1D4ABB96C(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((62 * (v3 - a1 - 4 >= (((a2 - 681) | 0x2A5) ^ 0x79FuLL))) ^ a2)))();
}

uint64_t sub_1D4ABB9B8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(unsigned char *)(*v14 + (v12 + a8)) = *(unsigned char *)(*v14 + (v11 + a1));
  return (*(uint64_t (**)(void))(v13 + 8 * (((v8 != 1513171450) * (v9 ^ 0x82A)) ^ v10)))();
}

uint64_t sub_1D4ABBA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  v7.n128_u64[0] = (v5 + 7) & 0xF;
  v7.n128_u64[1] = (v5 + 6) & 0xF;
  v8.n128_u64[0] = (v5 + 5) & 0xF;
  v8.n128_u64[1] = (v5 + 4) & 0xF;
  v9.n128_u64[0] = (v5 + 3) & 0xF;
  v9.n128_u64[1] = (v5 + 2) & 0xF;
  v10.n128_u64[0] = (v5 + 1) & 0xF;
  v10.n128_u64[1] = v5 & 0xF;
  v11.n128_u64[0] = (v5 - 1) & 0xF;
  v11.n128_u64[1] = (v5 + 14) & 0xF;
  v12.n128_u64[0] = (v5 + 13) & 0xF;
  v12.n128_u64[1] = (v5 + 12) & 0xF;
  v13.n128_u64[0] = (v5 + 11) & 0xF;
  v13.n128_u64[1] = (v5 + 10) & 0xF;
  return sub_1D4ABBB10(a1, a2, a3, a4, v6 & 0xFFFFFFF0, a5, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1D4ABBB10(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, int a16)
{
  uint64_t v29 = (v20 + v19 - a15);
  uint64_t v30 = ((_BYTE)v20 + (_BYTE)v19 - (_BYTE)a15) & 0xF;
  uint64_t v31 = v22;
  v32.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v26).u64[0];
  v32.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v26).u64[0];
  int8x16_t v33 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v21 + v29), *(int8x16_t *)(v17 + (v29 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v18 + (v29 & 0xF) - 15), *(int8x16_t *)(v16 + (v29 & 0xF) - 15))));
  int8x16_t v34 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v33, v33, 8uLL), v28), vmulq_s8(v32, v27)));
  *(int8x16_t *)(v23 + v29) = vextq_s8(v34, v34, 8uLL);
  return (*(uint64_t (**)(void))(v25 + 8 * (((a15 + a16 - 2141 == a13) * v24) ^ a14)))();
}

uint64_t sub_1D4ABBB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, int a15, int a16, int a17, int a18)
{
  int v22 = ((&a13 - 1886733488 - 2 * ((unint64_t)&a13 & 0x8F8ABB50)) ^ 0xC31C392D) * v21;
  a13 = &STACK[0x38223619C320A33];
  a14 = a12;
  a15 = v22 - 1646113260;
  a16 = v22 + v20 - 2024874694;
  a17 = 1646191814 - v22;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v20 ^ 0xEB0)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((a18 == v18 + ((v20 - 545) | 0x210) - 1594)
                                              * ((v20 + 845365652) & 0xAF6 ^ 0xCB1)) ^ v20)))(v23);
}

uint64_t sub_1D4ABBCE0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v2 + 64);
  BOOL v5 = LODWORD(STACK[0x5B4]) == 0;
  *(void *)(v2 + 24) = LODWORD(STACK[0x5B4]);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8
                                                          * ((245 * (((((v1 ^ 0x340) + 936) ^ v5) & 1) == 0)) ^ v1)))(a1, v4);
}

uint64_t sub_1D4ABBD24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  unsigned int v16 = (a14 ^ 0x1F5F6B87) - ((2 * (a14 ^ 0x1F5F6B87)) & 0xD7986BE8) - 338938380;
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((198
                                * (((2 * v16) & 0xBF57FFBE ^ 0x97106BA8) + ((v14 - 1960) ^ 0xB467CAB6 ^ v16) - 34946 != 1605072733)) ^ v14)))();
}

uint64_t sub_1D4ABBDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10)
{
  uint64_t v13 = *(void *)(v11 + 72);
  *(_DWORD *)(v10 - 0x9466003216229CDLL) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * (((v13 == 0x139154EEB4327F0) * ((a9 - 2106731237) & 0x7D922FEE ^ 0x2E1)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10);
}

uint64_t sub_1D4ABBE78@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  __n128 v9 = (unsigned int *)(v8 + 4 * v5);
  uint64_t v10 = (a5 ^ 0xF4Fu) + v5 - 1858;
  unsigned int *v9 = v9[397] ^ a4 ^ *((_DWORD *)&STACK[0x530] + (*(_DWORD *)(v8 + 4 * v10) & 1)) ^ ((a3 ^ ((*(_DWORD *)(v8 + 4 * v10) & 0x7FFFFFFE | v6 & 0x80000000) >> 1))
                                                                                       + a1
                                                                                       - (a2 & (2
                                                                                              * (a3 ^ ((*(_DWORD *)(v8 + 4 * v10) & 0x7FFFFFFE | v6 & 0x80000000) >> 1)))));
  return (*(uint64_t (**)(void))(v7 + 8 * ((126 * (v10 == 227)) ^ a5)))();
}

uint64_t sub_1D4ABBEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  LODWORD(STACK[0x648]) = a16;
  return (*(uint64_t (**)(void))(v18 + 8 * ((41 * (*(void *)(v17 + 264) != 0)) ^ (v16 + 1028))))();
}

uint64_t sub_1D4ABBF34@<X0>(uint64_t a1@<X0>, unsigned int a2@<W4>, uint64_t a3@<X8>, uint8x8_t a4@<D0>)
{
  a4.i32[0] = *(_DWORD *)(a3 + a2 + 1);
  return sub_1D4ABBF64(a1, 0, a3 - 3, (v4 + 1454707284), 2840260541, 231, COERCE_DOUBLE(vmovn_s16((int16x8_t)vmovl_u8(a4))));
}

uint64_t sub_1D4ABBF64(float a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, int a7)
{
  *(float *)(a4 + (v10 + v7 - a3)) = a1;
  return (*(uint64_t (**)(void))(v11 + 8 * (((a3 + (a5 & a6) - 893 == v9) * a7) ^ v8)))();
}

uint64_t sub_1D4ABBF98()
{
  uint64_t v5 = v2 ^ 5u;
  *(void *)(v4 - 220 + v0 + 1) = 0xEBEBEBEBEBEBEBEBLL;
  BOOL v6 = ((v5 - 146) & v1) - v5 != -194;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((v6 | (4 * v6)) ^ v5)))();
}

uint64_t sub_1D4ABBFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  int v16 = (v14 + v10) & v11;
  *(_DWORD *)(*v9 + 4 * ((v16 ^ (v6 + 769)) + v7)) = a5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6
                                                                                + 8
                                                                                * (((v15 == ((v16 + 1129) | v12) + v8)
                                                                                  * ((v16 + 282) ^ v13)) ^ v16)))(a1, a2, a3, a4, 3699319000);
}

void sub_1D4ABC04C()
{
}

void sub_1D4ABC0B8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((((2 * a1) | 0xD7F3130A) - a1 + 335967867) ^ 0x516DF1E7));
  __asm { BRAA            X14, X17 }
}

void sub_1D4ABC1EC()
{
  _DWORD *v0 = -526372770;
  JUMPOUT(0x1D4ABC1F8);
}

uint64_t sub_1D4ABC270@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((224 * (((a1 == 99788384) ^ ((v1 ^ 0x1E) - 79)) & 1)) ^ v1)))();
}

uint64_t sub_1D4ABC2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v32 - 144) = (v26 - 613) ^ (1225351577
                                        * ((~((v32 - 144) | 0xC591A078) + ((v32 - 144) & 0xC591A078)) ^ 0x19F48791));
  *(void *)(v32 - 136) = v31;
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x368], 8) = v25;
  *(void *)(v32 - 120) = v25;
  *(void *)(v32 - 112) = v27;
  (*(void (**)(uint64_t))(v29 + 8 * (v26 ^ 0xA54)))(v32 - 144);
  int v33 = ((-42916828 - ((v32 - 144) | 0xFD712424) + ((v32 - 144) | 0x28EDBDB)) ^ 0x6F7AC3D2) * v30;
  *(_DWORD *)(v32 - 12_Block_object_dispose(&STACK[0x368], 8) = -128426107 - v33 + v28 + 2;
  *(_DWORD *)(v32 - 144) = (v26 + 592) ^ v33;
  *(void *)(v32 - 136) = a25;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v26 + 1422)))(v32 - 144);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * ((53 * (*(_DWORD *)(v32 - 140) == ((v26 - 622) ^ 0x779) + 99786434)) ^ v26)))(v34);
}

void sub_1D4ABC3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,unsigned __int8 a26,int a27,int a28,unsigned __int8 a29,int a30,unsigned __int8 a31,int a32,int a33,int a34,unsigned __int8 a35,int a36,int a37,char a38)
{
  LODWORD(STACK[0x388]) = (a26 | ((a33 ^ 0xC) << 24) | ((a31 ^ 0xEF) << 8) | ((a35 ^ 0x92) << 16)) ^ 0xF36A6C82;
  LODWORD(STACK[0x288]) = a32 ^ 0xED856A80;
  LODWORD(STACK[0x3B8]) = (a30 | (a34 << 8) | ((a36 ^ 0x32) << 16) | (a28 << ((a38 - 86) ^ 0x73))) ^ 0xC13CA670;
  LODWORD(STACK[0x3D8]) = ((((a37 ^ 0xFB) << 16) + ((a27 ^ 0x1A) << 24)) | a29 | ((LODWORD(STACK[0x3F8]) ^ v38) << 8)) ^ 0x5F17AB2A;
  JUMPOUT(0x1D4A9005CLL);
}

void sub_1D4ABC4C8(uint64_t a1)
{
  (*(uint64_t (**)(void))(v1 + 18712))();
  (*(void (**)(uint64_t))(v1 + 18320))(a1);
  JUMPOUT(0x1D4A8ED7CLL);
}

uint64_t sub_1D4ABC514(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37)
{
  return (*(uint64_t (**)(void))(v37
                              + 8
                              * ((108 * ((a2 ^ (a37 + a4 < ((a2 - 61) | 0x51Cu) - 1315)) & 1)) ^ (a2 + 2020))))();
}

uint64_t sub_1D4ABC564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  *(_DWORD *)(v9 + 1424) = 1862623872;
  *(_DWORD *)(v9 + 142_Block_object_dispose(&STACK[0x368], 8) = 642161856;
  *(void *)(v9 + 1432) = v7;
  *(void *)(v9 + 1440) = v7;
  *(_DWORD *)(v9 + 144_Block_object_dispose(&STACK[0x368], 8) = v8;
  *(__n128 *)(v9 + 1452) = a6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * v6))(a1, a2, a3, a4, a5, 986143838, 3308821536, 48);
}

void sub_1D4ABC5CC()
{
}

uint64_t sub_1D4ABC5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  int v27 = (a24 ^ v26) - ((2 * (a24 ^ v26)) & 0x52C224C2) + 694227553;
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((v25 - 1058) ^ (27
                                               * (((2 * v27) & 0xFF99BDD6 ^ 0x528024C2) + (v27 ^ 0x56ADCC8A) - 671092747 == 1473040096)))))();
}

uint64_t sub_1D4ABC67C()
{
  uint64_t v7 = (unint64_t *)((char *)&STACK[0x680] + STACK[0x380] + ((v0 - 0x74CFFF0833D78750) ^ v1));
  STACK[0x5B8] = v3;
  void *v7 = 0x1414141414141414;
  v7[1] = 0xEBEBEBEBEDEBEBF9;
  unsigned int v8 = 235795823 * ((v4 - 1540817753 - 2 * (v4 & 0xA428FCA7)) ^ 0x3085B5FE);
  *(_DWORD *)(v6 - 196) = v8 + 1069469611;
  *(_DWORD *)(v6 - 192) = v2 - v8 + 1064655296;
  (*(void (**)(uint64_t))(v5 + 8 * (v2 ^ 0xDE3)))(v6 - 200);
  LODWORD(STACK[0x42C]) = 2079419720;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v2 + 922)))(336);
  STACK[0x608] = v9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8 * (((v9 == 0) * ((v2 - 280) ^ 0x71F ^ ((v2 - 1391) | 0x34A))) ^ v2)))(v9, v10, v11, v12, v13, v14, v15, v16);
}

uint64_t sub_1D4ABC79C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((*(_DWORD *)(v1 - 140) + 512) | 0x14) ^ 0x450)
                                * (*(_DWORD *)(v1 - 128) == *(_DWORD *)(v1 - 136))) ^ *(_DWORD *)(v1 - 140))))();
}

uint64_t sub_1D4ABC7DC()
{
  unsigned int v5 = (((v4 ^ v3) >> 4) & 0x77D3D7E ^ 0x50D26) + (((v4 ^ v3) >> 5) ^ 0xCFBD796C) - 100285477;
  int v6 = (v1 > 0x3A3B9D65) ^ (v5 < 0xC5C4629A);
  BOOL v7 = v5 < v1 - 976985446;
  if (v6) {
    BOOL v7 = v1 > 0x3A3B9D65;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((29 * ((v7 ^ (v2 - 64)) & 1)) ^ (v2 - 1069))))();
}

uint64_t sub_1D4ABC874()
{
  *(void *)(v3 + v0 - 0x72E93EC13A593D8FLL) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v1 & 0x38) == 8) * (((v2 - 1066) | 0x3C0) ^ 0x250)) ^ v2)))();
}

uint64_t sub_1D4ABCB9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = ((v2 + 426) ^ 0x6F3) - a1;
  int8x16_t v5 = vrev64q_s8(*(int8x16_t *)(v1 + v4 - 15));
  int8x16_t v6 = vextq_s8(v5, v5, 8uLL);
  int8x16_t v7 = vrev64q_s8(*(int8x16_t *)(v1 + v4 - 31));
  int8x16_t v8 = vextq_s8(v7, v7, 8uLL);
  uint64_t v9 = STACK[0x2A0] + v4;
  v10.i64[0] = 0xD6D6D6D6D6D6D6D6;
  v10.i64[1] = 0xD6D6D6D6D6D6D6D6;
  v11.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v11.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  int8x16_t v12 = vrev64q_s8(vaddq_s8(vsubq_s8(v6, vandq_s8(vaddq_s8(v6, v6), v10)), v11));
  *(int8x16_t *)(v9 - 15) = vextq_s8(v12, v12, 8uLL);
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v10)), v11));
  *(int8x16_t *)(v9 - 31) = vextq_s8(v13, v13, 8uLL);
  return (*(uint64_t (**)(void))(v3 + 8 * ((776 * (a1 == 96)) ^ v2)))();
}

uint64_t sub_1D4ABCC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  unsigned int v52 = 460628867 * (((v48 ^ 0xA9C2C30A | 0x56112CF5) + (v48 ^ 0x520004D1 | 0xA9EED30A)) ^ 0xB75445A7);
  v49[7] = 0;
  v49[3] = STACK[0x3F0];
  v49[4] = a47;
  v49[5] = a45;
  void *v49 = 0;
  v49[1] = a17;
  *(_DWORD *)(v51 - 152) = v52 + 837403461;
  *(_DWORD *)(v51 - 184) = v52 + v47 + 1178;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(v50 + 8 * (v47 ^ 0xAD6)))(v51 - 200);
  int v54 = *(_DWORD *)(v51 - 136);
  LODWORD(STACK[0x64C]) = v54;
  return (*(uint64_t (**)(uint64_t))(v50
                                            + 8
                                            * (int)(((v54 == 526347143) * ((v47 + 1048545733) & 0xC18074CC ^ 0x1A3)) ^ v47)))(v53);
}

uint64_t sub_1D4ABCD28@<X0>(int a1@<W2>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((22
                                * (((a2 - 80) ^ (a18 == ((a2 + 1505616080) & 0xA6421F4E ^ (a1 - 949)))) & 1)) ^ a2)))();
}

uint64_t sub_1D4ABCD88()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1006 * (*(_DWORD *)(*v0 + 4 * v1) == 61 * (v2 ^ 0xBD) - 595648479)) ^ v2)))();
}

void sub_1D4ABCDD4(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x139154EEB4327E8) + 4 * (v5 + v3)) = v1
                                                                       - ((v4 + v2 - 1474) & (2 * v1 + 1445887144))
                                                                       + 127295276;
  sub_1D4A82760(a1);
}

void sub_1D4ABCE20()
{
}

uint64_t sub_1D4ABCE94()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((21
                                * (LODWORD(STACK[0x4DC]) - 2079419384 + v0 + 1261 - 3576 < ((v0 - 113908911) & 0x6CA1FFF ^ 0xFFFFF3A4))) ^ v0)))();
}

void sub_1D4ABCEF0(uint64_t a1)
{
  *(_DWORD *)(*(void *)(a1 + 24) - 0x5E89E940DF8E90DDLL) = v3;
  _DWORD *v1 = v2;
  JUMPOUT(0x1D4AB7B20);
}

void sub_1D4ABCF14()
{
}

void sub_1D4ABCF68(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v9 = (a1 + 4076257) & 0xFFC1CFFB;
  unsigned int v10 = 3804331
      * (((&a3 | 0x9B934809) - &a3 + (&a3 & 0x646CB7F0)) ^ 0xE5466DFF);
  a7 = v10 + 1594874511;
  a5 = 0x1244BACB8843828DLL;
  a6 = v7;
  a3 = v10 + 483381750;
  a4 = v10 + v9 - 1252;
  (*(void (**)(unsigned int *))(v8 + 8 * (int)(v9 + 507)))(&a3);
  sub_1D4A89814();
}

uint64_t sub_1D4ABD00C(uint64_t result)
{
  unint64_t v1 = 235795823 * ((~result & 0x2A1D36B9A93A3D3 | result & 0xFD5E2C94656C5C2CLL) ^ 0xA1169950E3EEA8ALL);
  int v2 = *(_DWORD *)(result + 4) + v1;
  unint64_t v3 = *(void *)(result + 16) ^ v1;
  int v4 = *(_DWORD *)(result + 28) - v1;
  int v5 = *(_DWORD *)(result + 8) ^ v1;
  unint64_t v6 = *(void *)(result + 32) - v1;
  int v7 = *(_DWORD *)result ^ v1;
  BOOL v8 = v6 == v3;
  BOOL v9 = v6 > v3;
  if (v4) {
    BOOL v8 = v9;
  }
  if (v8) {
    int v7 = v2;
  }
  *(_DWORD *)(result + 40) = v5 ^ v7;
  return result;
}

uint64_t sub_1D4ABD0A0(uint64_t a1)
{
  int v1 = 535753261 * (((a1 | 0xB4CC401E) - a1 + (a1 & 0x4B33BFE1)) ^ 0xBE384E31);
  int v2 = *(_DWORD *)(a1 + 8) ^ v1;
  int v3 = *(_DWORD *)(a1 + 24) - v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 16) - 0x139154EEB4327ECLL);
  unsigned int v6 = v4 - 1740488377;
  BOOL v5 = v4 - 1740488377 < 0;
  unsigned int v7 = 1740488377 - v4;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F2C91B30 + (v2 ^ 0x5A8))
                              + 8 * ((((v3 - 2078035507) < 4 * (unint64_t)v8) * (v2 - 1151)) ^ v2)
                              - 4))();
}

void sub_1D4ABD16C()
{
}

uint64_t sub_1D4ABD3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1293 * (v8 + 1 == v7 + 40)) | a6)))();
}

uint64_t sub_1D4ABD474(unsigned int a1, int a2, int a3)
{
  int v8 = v4 + v3;
  unsigned int v9 = v8 + v5 + (v6 ^ 0x682);
  if (v9 <= 0x40) {
    unsigned int v9 = a1;
  }
  BOOL v10 = a3 - v8 + ((v6 - 1057675771) & 0x3F0ADFA7u) - 1799 < a2 + v9;
  return (*(uint64_t (**)(void))(v7 + 8 * ((4 * v10) | (32 * v10) | v6)))();
}

uint64_t sub_1D4ABD4D8()
{
  **(_DWORD **)(v0 - 0x139154EEB4327E_Block_object_dispose(&STACK[0x368], 8) = (v1 + 1070242422) ^ ((v2 + 242) | 0x58) ^ 0xE3B5B2F2;
  return sub_1D4ABD524();
}

void sub_1D4ABD524(int a1@<W8>)
{
  *(_DWORD *)(v1 - 0x139154EEB4327ECLL) = a1;
}

uint64_t sub_1D4ABD53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((100 * (((a5 + 5) ^ (v5 < 34 * (a5 ^ 0x73E) - 240)) & 1)) ^ a5)))();
}

void sub_1D4ABD594(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X13, X17 }
}

void sub_1D4ABD6B4()
{
}

uint64_t sub_1D4ABD6C0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1247 * ((v0 & 0x18) == ((((2 * (v1 ^ 0x3E6)) ^ 0x2BE) - 717) ^ 0xEB))) ^ (2 * (v1 ^ 0x3E6)))))();
}

void sub_1D4ABD708()
{
}

uint64_t sub_1D4ABD7A8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((**(void **)(v2 + 8 * (v1 - 1441)) == 0)
                                * ((v1 - 1720221590) & 0x66887BEF ^ 0x2C3)) ^ v1)))();
}

uint64_t sub_1D4ABD7F0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((2 * (*v0 - 42)) & 0x1F3FBC4C) + ((*v0 - 42) ^ 0xF9FDE26) != 262135334)
                                * (((4 * v1) ^ 0x264) - 436)) | v1)))();
}

uint64_t sub_1D4ABD850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v17 - 120) = a13;
  *(void *)(v17 - 112) = v15;
  *(_DWORD *)(v17 - 12_Block_object_dispose(&STACK[0x368], 8) = v16
                         - 108757529 * ((~((v17 - 128) | 0xEB80D2B3) + ((v17 - 128) & 0xEB80D2B3)) ^ 0xF4E34F67)
                         - 34;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v16 + 561)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * (((((4 * v16) ^ 0x1EF8) + 2303) * (v14 == 1032864085)) ^ v16)))(v18);
}

void sub_1D4ABD8EC()
{
}

uint64_t sub_1D4ABD964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unsigned int a7)
{
  BOOL v11 = v7 > a7;
  int v12 = (((v10 ^ 0x8E8) - 41) ^ 0xF1EDA465) + v9;
  int v13 = v11 ^ (v12 < -941457851);
  BOOL v14 = v12 < a6;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((69 * v11) ^ v10)))();
}

uint64_t sub_1D4ABDA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void, unint64_t))(v15
                                                             + 8
                                                             * ((464
                                                               * (*(_DWORD *)(*(void *)(a13 - 0x139154EEB4327E8)
                                                                            + 4
                                                                            * (int)(((((v14 - 1991) | 0xD0) + 1287268514) & 0xB345DEB5)
                                                                                  - 2097)) == v13)) ^ ((v14 - 1991) | 0xD0))))(0, 0xF41BD8C901F2D9AFLL);
}

uint64_t sub_1D4ABDB20@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2044 * (**(unsigned char **)(a1 + 8) == 0)) ^ a2)))();
}

uint64_t sub_1D4ABDB50@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((26 * ((v1 ^ (a1 - 1136177055) & 0x43B8AD7F ^ 0x449u) > 7)) ^ (a1 - 461))))();
}

void sub_1D4ABDBA0(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v8 = 3804331 * (((&a3 | 0x7E312B95) + (~&a3 | 0x81CED46A)) ^ 0xE40E62);
  a7 = v8 + 1608052035;
  a5 = 0x1244BACB8843828DLL;
  a3 = v8 + 483381750;
  a4 = v8 + a1 - 975;
  (*(void (**)(unsigned int *))(v7 + 8 * (a1 + 784)))(&a3);
  JUMPOUT(0x1D4AB459CLL);
}

void sub_1D4ABDC2C()
{
}

uint64_t sub_1D4ABDCAC(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((147
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((((a1 + 813542800) & 0xCF824BFD) + 199) ^ (v2 + 372) ^ (*(unsigned __int8 *)(v3 + 4)
                                                                                          - 247)) == v2)) ^ a1)))();
}

uint64_t sub_1D4ABDD04@<X0>(int a1@<W7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  BOOL v16 = v14 != 842511415 || a13 != ((a2 - 765291577) & 0x2D9D6FFC) + a1;
  return (*(uint64_t (**)(void))(v13 + 8 * ((783 * v16) ^ a2)))();
}

uint64_t sub_1D4ABDD58(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1079 * (a7 + 1 == v8 + 48)) ^ a1)))();
}

uint64_t sub_1D4ABDE34()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 601)))(200) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((((4 * (v1 ^ 0x601) + 430011435) & 0xE65E8BD4 ^ 0x2D7) * v2) | v1)))();
}

uint64_t sub_1D4ABDE94@<X0>(unsigned int a1@<W3>, uint64_t a2@<X5>, int a3@<W8>)
{
  *(_OWORD *)(a2 + v3 + 16 + ((a3 - 238590926) & 0xE389F33 ^ a1)) = *v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1855 * (v4 == 16)) ^ a3)))();
}

uint64_t sub_1D4ABDEA0()
{
  unsigned int v4 = v3 + 2063939649;
  BOOL v5 = v4 < 0x9F1FA921;
  BOOL v6 = v2 - 1625315039 < v4;
  if (v5 != v2 > ((v1 + 1654) ^ 0x60E05ED5u)) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((!v7 * ((2 * (v1 ^ 0x35D)) ^ 0x5C8)) ^ v1)))();
}

uint64_t sub_1D4ABDF1C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((127 * (v2 ^ 0x5ED)) ^ 0xFFFFF9D1) + ((v2 - 1508) | 0x85C)) * (v1 == 0x1000000)) ^ v2)))();
}

uint64_t sub_1D4ABDF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(void *)(v10 + (v7 | a3)) = v12;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v9 == 0) * a7) | v8)))();
}

uint64_t sub_1D4ABDF90@<X0>(int a1@<W3>, _DWORD *a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  return sub_1D4AB5268(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           0);
}

uint64_t sub_1D4ABDF98()
{
  unint64_t v8 = STACK[0x460];
  int v9 = STACK[0x5A0];
  int v10 = (LODWORD(STACK[0x5A0]) + 1542530706) & ((v0 + 1049) ^ 0x79A3A56C) ^ STACK[0x5A0] & 1;
  unsigned int v11 = 628203409 * ((1196629578 - (v3 | 0x47531E4A) + (v3 | 0xB8ACE1B5)) ^ 0x3A24ED86);
  v5[6] = v2;
  v5[3] = v8;
  v5[4] = v4 + 0x7785963AF3444776;
  v5[1] = v4 + 0xC8F40939229087BLL;
  *(_DWORD *)(v7 - 180) = v9 - v11 - 2 * v10 - 711669816;
  *(_DWORD *)(v7 - 200) = v0 - v11 + 368400111;
  *(_DWORD *)(v7 - 184) = -628203409 * ((1196629578 - (v3 | 0x47531E4A) + (v3 | 0xB8ACE1B5)) ^ 0x3A24ED86)
                        + 1968709551 * v1
                        + 889627541;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v0 ^ 0x955)))(v7 - 200);
  int v13 = *(_DWORD *)(v7 - 160);
  LODWORD(STACK[0x5D8]) = v13;
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((268 * (v13 == 526347143)) ^ v0)))(v12);
}

uint64_t sub_1D4ABE0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15)
{
  int v21 = 1759421093 * ((((v20 - 136) | 0x9D3CC2A1) - (v20 - 136) + ((v20 - 136) & 0x62C33D58)) ^ 0x2E4172F5);
  *(_DWORD *)(v20 - 136) = 427795158 - v21;
  *(void *)(v20 - 12_Block_object_dispose(&STACK[0x368], 8) = v15;
  *(_DWORD *)(v20 - 120) = a13 - v21 - 472;
  (*(void (**)(uint64_t))(v17 + 8 * (a13 ^ 0xF4D)))(v20 - 136);
  *(_DWORD *)(v20 - 120) = a13
                         + 1374699841 * ((((v20 - 136) | 0x312B6D0F) - ((v20 - 136) & 0x312B6D0F)) ^ 0x5CDF7506)
                         + 201;
  *(void *)(v20 - 136) = a15;
  *(void *)(v20 - 12_Block_object_dispose(&STACK[0x368], 8) = v19;
  (*(void (**)(uint64_t))(v17 + 8 * (a13 + 666)))(v20 - 136);
  *(void *)(v20 - 12_Block_object_dispose(&STACK[0x368], 8) = a15;
  *(void *)(v20 - 112) = v15;
  *(_DWORD *)(v20 - 120) = a13 + ((v20 + 1698837839 - 2 * ((v20 - 136) & 0x654235D7)) ^ 0xDFD64DB5) * v18 + 115;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (a13 ^ 0xEA1)))(v20 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((35 * (*(_DWORD *)(v20 - 136) <= ((v16 + a13 - 906 + 242) ^ a13 ^ 0x21Eu))) ^ a13)))(v22);
}

uint64_t sub_1D4ABE238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((35 * (((((a6 + v6 - 269 - 13) | 0x108) - 254) ^ v7) < 8)) ^ v8)))();
}

uint64_t sub_1D4ABE274(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((((v4 + 1688025046) & 0x9B62C76F ^ 0x71FF7C2F) + v4 - 1912566507)
                                     * ((a4 + a3 - 1605107679) > 7)) ^ v4)))();
}

uint64_t sub_1D4ABE2F0@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 7 + (v3 + v5 - v6 + 679)) = *(void *)(a2 - 7 + (v3 + v5 - v6 + 679));
  return (*(uint64_t (**)(void))(v7 + 8 * ((220 * ((a1 ^ 0x7D5) + v6 - 652 == (v4 & 0xFFFFFFF8))) ^ a1)))();
}

void Mib5yocT(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2) {
    BOOL v8 = a3 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v12 = v8 || a6 == 0 || a7 == 0 || a8 == 0;
  __asm { BRAA            X9, X17 }
}

void sub_1D4ABE3F0()
{
}

uint64_t sub_1D4ABE3F8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((a3 - 402) ^ (v3 + 1781) ^ (v3 + 2502) ^ (a3 - 363)) * ((v4 & 0x18) == 0)) ^ (a3 - 402))))();
}

void sub_1D4ABE434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24)
{
  int v28 = 535753261 * ((((v27 - 144) ^ 0x80BC1318 | 0x67434C63) + ((v27 - 144) ^ 0x26000443 | 0x98BCB39C)) ^ 0xAC481975);
  *(_DWORD *)(v27 - 136) = (v24 - 431) ^ v28;
  *(_DWORD *)(v27 - 120) = a23 + v28 + (((v24 - 159) | 0x88) ^ 0x49F28DA6);
  *(void *)(v27 - 144) = a24;
  *(void *)(v27 - 12_Block_object_dispose(&STACK[0x368], 8) = v26;
  (*(void (**)(uint64_t))(v25 + 8 * (v24 + 595)))(v27 - 144);
  JUMPOUT(0x1D4A982A8);
}

uint64_t sub_1D4ABE4DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(*(void *)(v8 - 0x139154EEB4327E8) + 4 * (v6 + v4)) = a4;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((2 * ((v5 ^ (v6 + v4 - 1 >= 0)) & 1)) & 0xF7 | (8
                                                                                                 * ((v5 ^ (v6 + v4 - 1 >= 0)) & 1))) ^ v5)))();
}

void sub_1D4ABE530()
{
  int v3 = 27 * (v0 ^ 0x241);
  *(_DWORD *)(v1 - 12_Block_object_dispose(&STACK[0x368], 8) = v2;
  *(_DWORD *)(v1 - 140) = v3 - 17;
  *(_DWORD *)(v1 - 136) = (v3 - 602) & v2;
  JUMPOUT(0x1D4ABE5A4);
}

uint64_t sub_1D4ABE674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1403 * (v5 + 1 == v7 + 24)) ^ a5)))();
}

uint64_t sub_1D4ABE734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8 * (int)(((((a8 - 1866) | 0x4CC) + ((a8 - 1652) ^ 0xFFFFFB46)) * (v8 == a5)) ^ a8)))();
}

void sub_1D4ABE76C()
{
}

uint64_t sub_1D4ABE77C()
{
  STACK[0x3E8] = STACK[0x618];
  LODWORD(STACK[0x58C]) = 2119813987;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v0 - 758665818) & 0x2D3853FE ^ (v2 - 726)) == 526347143)
                                * (((v0 - 758665818) & 0x2D3853FE) + 2122)) ^ (v0 - 758665818) & 0x2D3853FE)))();
}

uint64_t sub_1D4ABE7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  BOOL v25 = a23 - *(_DWORD *)(a19 + 4) == 40394603;
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * (((4 * ((v25 ^ (-111 * ((v23 - 28) ^ 0x94))) & 1)) & 0xDF | (32 * ((v25 ^ (145 * ((v23 - 28) ^ 0x194))) & 1))) ^ (v23 - 28))))();
}

uint64_t sub_1D4ABE820@<X0>(int a1@<W3>, int a2@<W5>, uint64_t a3@<X6>, int a4@<W7>, int a5@<W8>)
{
  *(unsigned char *)(v7 + v6) = *(unsigned char *)(a3 + (v5 + a1))
                      + (v8 | ~(2 * *(unsigned char *)(a3 + (v5 + a1))))
                      - 20;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v6 != 63) * a4) ^ (a2 + a5 + 1905))))();
}

uint64_t sub_1D4ABE868@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v8 = v3 - 1;
  *(void *)(v6 + 232) = v8;
  *(unsigned char *)(a1 + v_Block_object_dispose(&STACK[0x368], 8) = ((v2 + 71) ^ v5) * (v2 + 88);
  return (*(uint64_t (**)(void))(v7 + 8 * ((127 * (*(void *)(v6 + 232) == ((a2 + 314) ^ v4))) ^ a2)))();
}

uint64_t sub_1D4ABE8B4(uint64_t a1)
{
  BOOL v3 = (unint64_t)*(&off_1F2C91B30 + v1 - 531) - a1 - 8 < 0x20;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2
                                                                       + 8
                                                                       * (((4 * (((v1 + 113) ^ v3) & 1)) & 0xF7 | (8 * (((v1 + 113) ^ v3) & 1))) ^ (v1 + 107))))(335, 1307, 1692, 1150);
}

uint64_t sub_1D4ABEA58()
{
  LODWORD(STACK[0x46C]) = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((*(_DWORD *)(STACK[0x2C0] + 360) - 1667755606) > 0xFFFFFFFD)
                                * ((v0 ^ 0x2D7) - 1054)) ^ v0)))();
}

void sub_1D4ABEA98()
{
}

void sub_1D4ABEAA0()
{
}

void sub_1D4ABEAAC()
{
}

uint64_t sub_1D4ABEAB8@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_DWORD *a22)
{
  int v24 = v22 + 751;
  int v25 = v22 + 102;
  *a22 = -595648296;
  BOOL v27 = (v24 ^ 0x1B1C63B7) <= -1692638009 || a2 - 1692638010 >= -1692638009;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 8 * ((483 * v27) ^ v25)))(a1, 4280012798, 2717645785);
}

void sub_1D4ABEB38(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1D4ABEC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v71 = STACK[0x258];
  *(void *)(v71 + 1560) = **(void **)(v70 + 144);
  *(_DWORD *)(v71 + 1552) = *(_DWORD *)STACK[0x430];
  *(void *)(*(void *)(a70 + 96) + 48_Block_object_dispose(&STACK[0x368], 8) = *(void *)(a70 + 8);
  *(_DWORD *)(*(void *)(a70 + 96) + 480) = *(_DWORD *)a70;
  return sub_1D4ABED30(440, 1420, 2591436230, a4, a5, 1703529726, 922, 9);
}

uint64_t sub_1D4ABED30@<X0>(uint64_t a1@<X8>)
{
  unsigned char *v1 = ((v3 - 118) ^ (v2 + a1) ^ v5) * (v4 + a1);
  return (*(uint64_t (**)(void))(v6 + 8 * ((a1 != 103) | v3)))();
}

void sub_1D4ABED68()
{
}

void sub_1D4ABED74()
{
}

void sub_1D4ABEE34()
{
}

uint64_t sub_1D4ABEFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v11 = v8 - 1599991131;
  if (v11 <= 0x40) {
    unsigned int v11 = 64;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((15 * (-v7 - v9 + ((a7 + 92) ^ 0x7B3) + v11 < 0xF)) ^ 0x694u)))();
}

void sub_1D4ABF03C()
{
}

uint64_t sub_1D4ABF044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((30 * ((a5 + 1 + v7) < 0x50)) ^ v6)))(a6);
}

uint64_t sub_1D4ABF11C(__n128 a1)
{
  *(__n128 *)(v4 + v3) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 == 1500) * v2) | v1)))();
}

uint64_t sub_1D4ABF140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, unsigned int a14, unint64_t *a15, uint64_t a16)
{
  a14 = (v16 - 651) ^ (1374699841
                     * ((((&a14 | 0x21ACE69C) ^ 0xFFFFFFFE) - (~&a14 | 0xDE531963)) ^ 0xB3A7016A));
  a15 = &STACK[0x8DE5192BDC5317A];
  a16 = a10;
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v16 + 680)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((105 * (a12 == v16 - v18 + 1543555348)) ^ v16)))(v19);
}

uint64_t sub_1D4ABF1F4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 + 478039571) & 0x2381B37F) + 2659) ^ v1 ^ 0x490) * ((v0 & 0x18) == 0)) ^ v1)))();
}

uint64_t sub_1D4ABF23C()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x2C138C8FAF40FC12) + 1869566316;
  unsigned int v4 = *(_DWORD *)(v1 - 0x2C138C8FAF40FC16) + 1099350511;
  BOOL v5 = v4 < ((v2 - 316052341) & 0x12D695D5 ^ 0x7CE8C0ABu);
  BOOL v6 = v3 < v4;
  if (v3 < 0x7CE8C53F != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((!v6 * (((v2 - 786570552) & 0x2EE21FBF) - 1359)) ^ v2)))();
}

uint64_t sub_1D4ABF300()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1915
                                * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ (v1 + v2 + 575 - 820)) == v1)) ^ v2)))();
}

uint64_t sub_1D4ABF340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v16 = (a3 - 1345024179) & 0x502B6A3F;
  BOOL v17 = v14 - 2139372479 < (a14 - 2097314243);
  if ((a14 - 2097314243) < 0x9C209CB4 != v14 - 2139372479 < (v16 - 1675584378)) {
    BOOL v17 = (a14 - 2097314243) < 0x9C209CB4;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15
                                                                                                  + 8 * (int)((88 * !v17) ^ a3)))(2619382964, 2155594817, a3, a4, v16, a6, a7);
}

uint64_t sub_1D4ABF3C8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                                           + 8
                                           * ((((v10 - v8 - 3370) ^ (a2 + 2453) ^ (v10 - 858)) * (v9 == a7)) ^ v10)))(0);
}

uint64_t sub_1D4ABF400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(a11 - 0x3F8123127DDA1A54) = ((v17 + 718963722) & 0xD52575DF) - v14 + 1331213053;
  int v20 = 1224239923 * (((v19 - 136) & 0x8278F9B6 | ~((v19 - 136) | 0x8278F9B6)) ^ 0x8F34FB9E);
  *(_DWORD *)(v19 - 120) = v20 + v17 + 232;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x368], 8) = v15;
  *(_DWORD *)(v19 - 136) = v20 ^ 0x4329A48E;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 + 374)))(v19 - 136);
  int v21 = 1759421093 * ((2 * ((v19 - 136) & 0x4FEBF750) - (v19 - 136) - 1340864343) ^ 0x369B8FD);
  *(_DWORD *)(v19 - 136) = 2147481426
                         - v21
                         + ((32 * v18) ^ 0x997FA6F5)
                         + (((v17 - 588869495) & 0x23196DAE ^ 0x32FF4840) & (v18 << 6))
                         + 1166;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x368], 8) = v15;
  *(_DWORD *)(v19 - 120) = v17 - v21 - 763;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 ^ 0xE68)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = v17 + 1374699841 * ((v19 - 136) ^ 0x6DF41809) - 90;
  *(void *)(v19 - 136) = a14;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x368], 8) = &STACK[0x139154EEB432820];
  (*(void (**)(uint64_t))(v16 + 8 * (v17 + 375)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = v17
                         + 1178560073
                         * ((((v19 - 136) ^ 0xFBA47593 | 0x3D05B776)
                           - ((v19 - 136) ^ 0xFBA47593)
                           + (((v19 - 136) ^ 0xFBA47593) & 0xC2FA4889)) ^ 0x7C35BA87)
                         - 176;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x368], 8) = a14;
  *(void *)(v19 - 112) = v15;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 ^ 0xF84)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((187 * (*(_DWORD *)(v19 - 136) > 0x4B4B6B4Bu)) ^ v17)))(v22);
}

uint64_t sub_1D4ABF660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((((v7 + 1287) | 0x42) - 1274) ^ 0x2E9) * (v6 == a6)) ^ v7)))();
}

uint64_t sub_1D4ABF694@<X0>(int a1@<W6>, int a2@<W7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((22
                                * (*(_DWORD *)(v5
                                             + (((a1 + ((v4 - 354) | 0x132) + 730) ^ (v4 - 469)) + v3) * (uint64_t)a2
                                             + 36) == a3)) ^ v4)))();
}

void sub_1D4ABF6F4()
{
}

uint64_t sub_1D4ABF700@<X0>(unint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, void *a4@<X3>, int a5@<W6>, int a6@<W7>, unsigned int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v36 = 4 * (v27 + 1 + a5);
  unint64_t v37 = (*(_DWORD *)(a21 + v36) ^ a7)
      + ((v29 + v22) & v26 ^ (unint64_t)(a3 + 398) ^ HIDWORD(a1))
      + v25 * (unint64_t)(*(_DWORD *)(*a4 + v36) ^ a7);
  unint64_t v38 = HIDWORD(v24)
      + v33 * (unint64_t)(*(_DWORD *)(*v30 + v36) ^ a7)
      + ((v37 + v32 - (v34 & (2 * v37))) ^ v31);
  *(_DWORD *)(a21 + 4 * (v27 + a5)) = v38 + a7 - (a2 & (2 * v38));
  BOOL v40 = v27 + v35 > v23 || v27 + v35 < a6;
  return (*(uint64_t (**)(void))(v28 + 8 * ((v40 * v21) ^ v29)))();
}

uint64_t sub_1D4ABF7A4@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X6>, int a5@<W8>)
{
  BOOL v11 = v6 < v7;
  *((unsigned char *)&STACK[0x2AC] + (a5 - 186224683)) = *(unsigned char *)(a4 + (v5 + a3))
                                                             - (((v9 + 66) ^ 0xC8) & (2
                                                                                    * *(unsigned char *)(a4
                                                                                               + (v5 + a3))))
                                                             - 21;
  unsigned int v12 = v5 + 1 + a2;
  int v13 = v11 ^ (v12 < a1);
  BOOL v14 = v12 < v6;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((v11 * v8) ^ v9)))();
}

void sub_1D4ABF81C()
{
}

void sub_1D4ABF844()
{
}

void sub_1D4ABF858(char a1@<W8>)
{
  LODWORD(STACK[0x3B0]) = 0;
  STACK[0x3B8] = 0;
  STACK[0x2A0] = v1 + 2304;
  LODWORD(STACK[0x4A4]) = 1899471243;
  unint64_t v2 = STACK[0x3F8];
  unint64_t v3 = (unint64_t)&STACK[0x680] + STACK[0x3F8] - 0x74CFFF0833D77D0CLL;
  STACK[0x288] = STACK[0x3F8] + 4144;
  STACK[0x5E0] = v2 + 4144;
  *(void *)unint64_t v3 = 0x6370646600;
  *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x368], 8) = 1;
  STACK[0x228] = v3;
  STACK[0x3C8] = v3 + 1712 + ((((v3 + 1712) << (23 * ((a1 - 42) ^ 0x38u) - 42)) + 16) & 0x20) + 16;
  STACK[0x3D8] = v3 + 9;
  JUMPOUT(0x1D4AC395CLL);
}

uint64_t sub_1D4ABF874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t *a18, uint64_t a19, unsigned int a20,unsigned int a21,unsigned int a22,int a23)
{
  if (a11 >= 0xC32F6DA) {
    int v26 = -1247212205;
  }
  else {
    int v26 = 1646191814;
  }
  unsigned int v27 = 460628867
      * ((((&a18 | 0x2AEB2E12) ^ 0xFFFFFFFE) - (~&a18 | 0xD514D1ED)) ^ 0x99825390);
  a18 = &STACK[0x38223619C320A4B];
  a19 = a17;
  a20 = v27 - 1383056289;
  a21 = v27 + v25 - 2024873871;
  a22 = v26 - v27;
  uint64_t v28 = (*(uint64_t (**)(unint64_t **))(v24 + 8 * (v25 ^ 0xBEF)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((91 * ((((73 * (v25 ^ 0x303)) ^ 0x415 ^ (a23 == v23)) & 1) == 0)) ^ v25)))(v28);
}

uint64_t sub_1D4ABF97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(void *)(v11 + a1) = v13;
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * (((v9 == a1) * a8) ^ v8)))(a1 + v10);
}

uint64_t sub_1D4ABF9A0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 + 842689019) & 0x55E ^ 0x2BA) * (v3 < v1)) ^ v0)))();
}

uint64_t sub_1D4ABFA28()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((197 * ((v2 + 1987) ^ 0x86B)) ^ 0x2AA) * ((v1 - 584892315) > 0xFFFFFFFD)) ^ (v2 + 1987))))();
}

void sub_1D4ABFA70(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((a1 + 2125213654 - 2 * (a1 & 0x7EAC2FD6)) ^ 0x135837DF);
  unsigned int v3 = *(unint64_t **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unint64_t **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(v2 - 0x3F8123127DDA1A5CLL);
  unsigned int v12 = v1 + 1224239923 * ((&v8 & 0x62925DD | ~(&v8 | 0x62925DD)) ^ 0xB6527F5) + 840;
  uint64_t v13 = v6;
  uint64_t v10 = &STACK[0x139154EEB432810];
  uint64_t v11 = v5;
  uint64_t v8 = v2;
  uint64_t v9 = v4;
  unsigned int v7 = (char *)*(&off_1F2C91B30 + v1 - 162) - 4;
  (*(void (**)(uint64_t *))&v7[8 * v1 + 15824])(&v8);
  uint64_t v8 = *(void *)(v2 - 0x3F8123127DDA1A64);
  uint64_t v9 = &STACK[0x139154EEB432820];
  LODWORD(v10) = v1
               + 1374699841
               * (((&v8 | 0x7984BEEA) - &v8 + (&v8 & 0x867B4110)) ^ 0x1470A6E3)
               + 1504;
  (*(void (**)(uint64_t *))&v7[8 * v1 + 15752])(&v8);
  LODWORD(v_Block_object_dispose(&STACK[0x368], 8) = v1 + 235795823 * (&v8 ^ 0x94AD4959) + 211;
  uint64_t v9 = v3;
  (*(void (**)(uint64_t *))&v7[8 * (v1 ^ 0x9C7)])(&v8);
  __asm { BRAA            X8, X17 }
}

void sub_1D4ABFC94(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned char *a25,uint64_t a26,uint64_t a27,int a28,unsigned char *a29,_DWORD *a30,unsigned char *a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  a29[3] = (HIBYTE(v38) ^ 0x6E) - ((2 * HIBYTE(v38)) & 0x22) + 17;
  a25[9] = BYTE5(v40) ^ 0x86;
  a25[15] = BYTE1(v38) ^ 0x9E;
  a31[8] = v38 ^ 0x58;
  a29[9] = (BYTE2(v38) ^ 0x82) - ((2 * BYTE2(v38)) & 0x22) + 17;
  a31[26] = (v40 >> (((a33 - 97) & 0x6Du) - 5)) ^ 0x20;
  char v42 = (v39 ^ 0x54) - ((2 * (v39 ^ 0x54) + 122) & 0x46) - 96;
  if ((v39 ^ 0x95F7E5604D7E4854) < 0x8134422366A90F03) {
    char v42 = a2;
  }
  char v43 = v42 ^ 0xA3;
  if ((v39 ^ 0x95F7E5604D7E4854) >= 0x8134422366A90F03) {
    char v44 = 3;
  }
  else {
    char v44 = 0;
  }
  char v45 = *(unsigned char *)(a37 + 531 + (BYTE6(v40) ^ 0xDLL));
  a25[7] = HIBYTE(v40) ^ 0x5C;
  a31[27] = BYTE1(v39) ^ 0x48;
  a29[10] = 7 * (v45 ^ 0x9C) - ((14 * (v45 ^ 0x9C)) & 0x22) + 17;
  a25[10] = v43 + v44;
  HIDWORD(v46) = *(unsigned __int8 *)(a37 + (((BYTE2(v39) ^ 0x7E) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  LODWORD(v46) = (HIDWORD(v46) << 26) ^ (HIDWORD(v46) << 24);
  a31[10] = BYTE4(v39) ^ 0x60;
  a29[14] = (BYTE3(v39) ^ 0x4D) - ((2 * (BYTE3(v39) ^ 0x4D)) & 0x22) + 17;
  a29[20] = (v46 >> 25) ^ 0xD;
  a29[4] = (BYTE6(v39) ^ 0xF7) - ((2 * (BYTE6(v39) ^ 0xF7)) & 0x22) + 17;
  a29[16] = (BYTE5(v39) ^ 0xE5) - 2 * ((BYTE5(v39) ^ 0xE5) & 0x13 ^ BYTE5(v39) & 2) + 17;
  unsigned int v47 = *(unsigned __int8 *)(a37 + (((HIBYTE(v39) ^ 0x95) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a31[20] = a8 ^ 0x42;
  HIDWORD(v46) = v47;
  LODWORD(v46) = (v47 << 26) ^ (v47 << 24);
  a29[15] = (v46 >> 25) ^ 0xD;
  unsigned int v48 = *(unsigned __int8 *)(a23 + (((a8 >> 1) & 0x80 | ((unsigned __int16)a8 >> 9)) ^ 0xE1));
  a31[17] = BYTE3(a8) ^ 0x48;
  a25[14] = BYTE4(a8) ^ 0xCC;
  *a29 = BYTE5(a8) - ((2 * BYTE5(a8)) & 0x22) - 111;
  a31[21] = HIBYTE(a8) ^ 0x1F;
  a31[13] = BYTE2(a8) ^ 0x50;
  a31[3] = (v48 ^ 0x8A ^ (v48 >> 2) & 0x17) + 32;
  a25[12] = BYTE6(a8) ^ 6;
  char v49 = *(unsigned char *)(a37 + 531 + (v41 ^ 0x35) + 2 * (v41 & 0xD5 ^ 0x15) - 4 * (v41 & 0xD5 ^ 0x15) + 213) ^ 0x9C;
  a31[11] = BYTE2(v41) ^ 0xB6;
  a29[5] = 7 * v49 - ((14 * v49) & 0x22) + 17;
  a29[2] = (BYTE3(v41) ^ 0xE4) - ((2 * BYTE3(v41)) & 0x22) + 17;
  a31[25] = BYTE1(v41) ^ 0x76;
  unsigned int v50 = *(unsigned __int8 *)(a23 + (((v41 >> 25) & 0x80 | (v41 >> 33) & 0x7F) ^ 0xB1));
  a31[22] = BYTE5(v41) ^ 0xD3;
  a31[18] = HIBYTE(v41) ^ 0x50;
  a31[2] = BYTE1(a6) ^ 0x56;
  a29[1] = a6 ^ 0x41;
  a31[30] = BYTE3(v37) ^ 0x5F;
  a31[9] = BYTE2(a6) ^ 0xBE;
  a31[19] = (v50 ^ 0x8A ^ (v50 >> 2) & 0x17) + 32;
  a29[7] = (BYTE6(v41) ^ 0x2B) - 2 * ((BYTE6(v41) ^ 0x2B) & 0x15 ^ BYTE6(v41) & 4) + 17;
  unsigned int v51 = *(unsigned __int8 *)(a37 + (((BYTE4(v37) ^ 0xF6) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a31[24] = BYTE6(v37) ^ 0x81;
  a31[12] = BYTE5(v37) ^ 0xFD;
  HIDWORD(v46) = v51;
  LODWORD(v46) = (v51 << 26) ^ (v51 << 24);
  a31[1] = HIBYTE(v37) ^ 0x9D;
  a31[23] = (v46 >> 25) ^ 0x1C;
  *a30 = a28 + 306190594;
  JUMPOUT(0x1D4AC0100);
}

uint64_t sub_1D4AC013C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                                        + 8
                                                                                        * (a7 | (2
                                                                                               * (((((a7 - 1614763173) & 0x603F5555)
                                                                                                  + ((a7 - 333) ^ 0xFFFFF9E4)) & v8) == 0)))))(a1, a2, a3, a4, a5, (a4 - a5));
}

void sub_1D4AC0180()
{
}

uint64_t sub_1D4AC020C(uint64_t a1, int a2)
{
  unsigned int v5 = v4 + 590859807 + 3 * ((a2 - 1383119094) & 0x5270BABF ^ 0xA48);
  BOOL v6 = v5 < 0xA191A0DF;
  BOOL v7 = v5 > v2 + 1810140961;
  if ((v2 + 1810140961) < 0xA191A0DF != v6) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((4 * !v7) | (8 * !v7) | a2)))();
}

uint64_t sub_1D4AC029C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W8>)
{
  *(unsigned char *)(v10 + (v6 + a3) + 20) = *(unsigned char *)(a4 + (v6 + a3));
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((((v5 + a2) & v8 ^ v7) + v6 != ((v5 + a2) & v8 ^ v9 ^ a5))
                                * (((v5 + a2) & v8 ^ a1) + 21)) | (((v5 + a2) & v8) + 51))))();
}

void sub_1D4AC02F0()
{
}

void sub_1D4AC03B8()
{
}

uint64_t sub_1D4AC03D0(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((a1 - 682) ^ 0xFFFFFB06) + a1 + 457)
                                     * ((v2 + v1 - 2041540022) > 7)) ^ a1)))();
}

uint64_t sub_1D4AC0420(uint64_t a1, int a2)
{
  int v5 = (v4 ^ 0x11C) + 11;
  BOOL v7 = v2 + 1670546569 > (v5 ^ 0x777) + 1263549681 || v2 + 1670546569 < a2 - 883932350;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((14 * v7) ^ v5)))(0x578C959BB21E7DE5);
}

void sub_1D4AC0510()
{
}

void sub_1D4AC058C()
{
}

uint64_t sub_1D4AC059C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2001 * (v0 - 1 + (((v1 ^ 0x2E) + 126) ^ (v3 + 1037)) >= 0)) ^ v1)))();
}

uint64_t sub_1D4AC05DC@<X0>(void *a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  return sub_1D4AA39D4(a1, a2 ^ 0x159u, *(_DWORD *)(*v4 + 4 * (v5 - 960758)), v3, a3);
}

uint64_t sub_1D4AC060C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, uint64_t a4@<X8>)
{
  *(_OWORD *)(v6 + ((v7 + v8) & (v5 + a2))) = *(_OWORD *)(a4 + a2);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 != a2) * a3) | v4)))();
}

uint64_t sub_1D4AC0640@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((v1 == ((v2 + 21268638) & 0xFEBB778E) - 902) * (((v2 - 777) | 0x80) ^ 0xF)) ^ v2)))();
}

void sub_1D4AC0684(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D4AC076C()
{
  int v6 = v0 + 40560953;
  _DWORD *v3 = v3[623];
  int v7 = v0 + 1009202654;
  unint64_t v8 = 235795823 * ((v5 - 0x6817BA5DA66F558BLL - 2 * ((v5 - 144) & 0x97E845A25990AB05)) ^ 0x9F58FF5CCD3DE25CLL);
  *(void *)(v5 - 112) = (v4 + 1) + v8;
  int v9 = (235795823 * ((v5 + 1502653045 - 2 * ((v5 - 144) & 0x5990AB05)) ^ 0xCD3DE25C)) ^ v7;
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x368], 8) = v8 ^ 3;
  *(_DWORD *)(v5 - 136) = v9 ^ 0x76;
  *(_DWORD *)(v5 - 144) = v9 ^ 0x1F;
  *(_DWORD *)(v5 - 140) = v7 - 235795823 * ((v5 + 1502653045 - 2 * ((v5 - 144) & 0x5990AB05)) ^ 0xCD3DE25C);
  *(_DWORD *)(v5 - 120) = 2064071201 - 235795823 * ((v5 + 1502653045 - 2 * ((v5 - 144) & 0x5990AB05)) ^ 0xCD3DE25C) + v6;
  *(_DWORD *)(v5 - 116) = 235795823 * ((v5 + 1502653045 - 2 * ((v5 - 144) & 0x5990AB05)) ^ 0xCD3DE25C) + 1;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v6 ^ v1)))(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v5 - 104)))(v10);
}

uint64_t sub_1D4AC0844(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, _DWORD *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v23 = 1759421093 * ((((v22 - 136) | 0x6448A0A3) - (v22 - 136) + ((v22 - 136) & 0x9BB75F58)) ^ 0xD73510F7);
  *(void *)(v22 - 12_Block_object_dispose(&STACK[0x368], 8) = a20;
  *(_DWORD *)(v22 - 120) = v21 - v23 + 67;
  *(_DWORD *)(v22 - 136) = ((((5 * (v21 ^ 0x226)) ^ 0x99842DF7) + a2) & 0xFFFFFFF0) - v23 + 1735915903;
  *(_DWORD *)(v22 - 132) = v23 + a2 - a14 + 259271423;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v21 + 1711)))(v22 - 136);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((*a15 == 526347143) * ((v21 + 1566) ^ 0x825)) ^ v21)))(v24);
}

uint64_t sub_1D4AC093C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v5
                                                                                        + 8
                                                                                        * (int)((((((v3 + 1952552461) ^ 0x74619DA0)
                                                                                                 + 709) ^ (v3 + 1952552461) & 0x8B9E667C)
                                                                                               * (v2 == v4)) ^ v3)))(a1, a2, 2431, 120779723, 4174187572, LODWORD(STACK[0x3F8]));
}

uint64_t sub_1D4AC099C()
{
  (*(void (**)(void))(v2 + 8 * (v1 + 1175)))();
  return (*(uint64_t (**)(void))(v2 + 8 * ((464 * (*(void *)(v0 + 192) == 0)) ^ (v1 + 127))))();
}

uint64_t sub_1D4AC09D4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((25
                                * (v2
                                 - 1862623872
                                 + ((v1 - 200) ^ (v0 + LODWORD(STACK[0x3D0]) - 642161856)) < 3)) ^ v1)))();
}

uint64_t sub_1D4AC0A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v8
                                                    + 8
                                                    * ((244
                                                      * ((v5 & 0x18) == ((a5 - 450063291) & 0x1AD367AF ^ 0xFFFFFAF9)
                                                                      + (a5 ^ 0x118))) ^ a5)))(a1, (v6 - v7));
}

void sub_1D4AC0ABC(_DWORD *a1)
{
  unsigned int v1 = *a1 + 108757529 * ((2 * (a1 & 0x5EAB9BD4) - a1 - 1588304853) ^ 0x41C80600);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1D4AC0B8C(double a1)
{
  double *v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_1D4AC0BB0@<X0>(int a1@<W7>, int a2@<W8>)
{
  unint64_t v8 = STACK[0x3F0];
  *(_DWORD *)(v8 + 392) = a2;
  *(_DWORD *)(v8 + 396) = STACK[0x4E8];
  *(void *)(v8 + 400) = STACK[0x618];
  *(_DWORD *)(v8 + 40_Block_object_dispose(&STACK[0x368], 8) = 421729911 - v3 + LODWORD(STACK[0x58C]);
  *(void *)(v8 + 416) = STACK[0x3E8] + (v3 - 2119813987);
  int v9 = (*(uint64_t (**)(unint64_t, unint64_t))(v5 + v6 * (uint64_t)a1 + 8))(STACK[0x388], STACK[0x260]);
  int v10 = v9 + ((v4 + 458) ^ 0x1F5F6DA1 ^ v2) - ((2 * v9) & 0x3EBED70E) == 526347143;
  return (*(uint64_t (**)(__n128))(v7 + 8 * ((32 * v10) | (v10 << 6) | v4)))((__n128)0);
}

uint64_t sub_1D4AC0C84(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x368], 8) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1D4AC0C9C@<X0>(uint64_t a1@<X8>, int a2, int a3)
{
  *(_DWORD *)(a1 - 0x66408E1D617AE0CDLL) = a3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((*(void *)(v4 + 24) == 0x335EB1051722DFECLL) ^ (v3 - 345))))();
}

uint64_t sub_1D4AC0CEC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 - 1447213568) & 0x5642B7FF) + 2559) * (v2 == 0)) ^ v0)))();
}

uint64_t sub_1D4AC0D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15)
{
  a15 = 108757529
      * (((&a14 | 0x7488BE6A) - &a14 + (&a14 & 0x8B774190)) ^ 0x9414DC41)
      - 504207030;
  uint64_t v17 = (*(uint64_t (**)(int *))(v16 + 17848))(&a14);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((3270 * (a14 == v15)) ^ 0x4D8u)))(v17);
}

void sub_1D4AC0DAC(uint64_t a1, int a2)
{
  _DWORD *v2 = a2;
  JUMPOUT(0x1D4AAF350);
}

void sub_1D4AC0DB4(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(void *)(a1 + 24)) {
    BOOL v2 = *(_DWORD *)(a1 + 20) - v1 == 996279120;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4AC0E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((217 * (a10 + 4 >= a10)) ^ v10)))(a1);
}

uint64_t sub_1D4AC0F00()
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((308
                                              * (((((v0 - 1219966478) & 0x8B737DF) + 584779665) & 0xDD24F7FF) != 1004)) ^ (v0 - 1219966478) & 0x8B737DF)))(3689027270);
}

uint64_t sub_1D4AC0FBC(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((108 * ((a2 ^ (v5 + a4 < ((a2 - 61) | 0x51Cu) - 1315)) & 1)) ^ (a2 + 2020))))();
}

uint64_t sub_1D4AC1008(_DWORD *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  unsigned int v2 = 1755732067
     * ((2 * ((a1 ^ 0xFDCA5AD1) & 0x4699B354) - (a1 ^ 0xFDCA5AD1) - 1184478037) ^ 0x9A6AABA1);
  unsigned int v3 = a1[8] - v2;
  int v4 = a1[2] ^ v2;
  unsigned int v9 = v3
     + 628203409 * (((&v9 | 0x3341E245) + (~&v9 | 0xCCBE1DBA)) ^ 0xB1C9EE77)
     - 1404134225;
  int v5 = (char *)*(&off_1F2C91B30 + (int)(v3 ^ 0x45E092C3)) - 4;
  uint64_t result = (*(uint64_t (**)(unsigned int *))&v5[8 * (v3 - 1172343097)])(&v9);
  if (v4 > 600925319)
  {
    if (v4 == 886137991)
    {
      unsigned int v7 = 3;
    }
    else
    {
      if (v4 != 600925320) {
        goto LABEL_11;
      }
      unsigned int v7 = 1;
    }
LABEL_10:
    uint64_t v8 = *(void *)&v5[8
                      * ((((*(uint64_t (**)(void))&v5[8 * (v3 ^ 0x45E09B56)])((*((_DWORD *)*(&off_1F2C91B30 + (int)(v3 - 1172345315)) + 6 * v7 + 4) - 2079419384)) != 0)
                        * ((v3 - 1172343208) ^ 0x8F7)) | (v3 - 1172343368))];
    __asm { BRAA            X8, X17 }
  }
  if (v4 == 600925316)
  {
    unsigned int v7 = 0;
    goto LABEL_10;
  }
  if (v4 == 600925319)
  {
    unsigned int v7 = 2;
    goto LABEL_10;
  }
LABEL_11:
  a1[13] = -526372805;
  return result;
}

uint64_t sub_1D4AC1268(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((76 * (((v8 + a6 - 642) ^ (v8 + 1329) ^ (a4 - 1778)) + v6 >= v6 + a4)) ^ a6)))();
}

uint64_t sub_1D4AC12AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v10 = *(_DWORD *)STACK[0x3F0] != ((v6 - 165) ^ LODWORD(STACK[0x3E0])) || v7 != a6 + ((v6 - 309) | 0x182) - 899;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v10 << 7) | (v10 << 8)) ^ (v6 - 165))))();
}

uint64_t sub_1D4AC1308(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((49 * (v5 - v3 + 4 >= (((a3 ^ 0x4BDu) + 1600) ^ 0x885uLL))) ^ a3)))();
}

uint64_t sub_1D4AC1348@<X0>(int a1@<W4>, int a2@<W7>, int a3@<W8>)
{
  if ((a3 - 2029314978) <= 0x1B && ((1 << (a3 + 94)) & 0x8002809) != 0) {
    return sub_1D4AC13B4();
  }
  else {
    return (*(uint64_t (**)(void))(v5
  }
                                + 8
                                * ((28 * (((((32 * a1) ^ 0x8E40) - 1304) & *(_DWORD *)(v3 + v4 * (uint64_t)a2 + 40)) == 0)) ^ (a1 - 305))))();
}

uint64_t sub_1D4AC13B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((((*(_DWORD *)(v9 + v10 * (uint64_t)a8 + 40) & 1) == 0) ^ (13 * (v8 ^ 0x50))) & 1)
                                * (42 * (v8 ^ 0x457) - 379)) ^ (v8 - 819))))();
}

uint64_t sub_1D4AC1408()
{
  return sub_1D4AC1410();
}

uint64_t sub_1D4AC1410@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W6>, int a4@<W8>, int8x16_t a5@<Q2>, int8x16_t a6@<Q3>)
{
  int8x16_t v11 = *(int8x16_t *)(v9 + (v6 + a1 + v8));
  *(int8x16_t *)(v7 + v_Block_object_dispose(&STACK[0x368], 8) = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), a6)), a5);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 == 48) * a3) ^ (a2 + a4 + 1005))))();
}

void sub_1D4AC1458()
{
}

uint64_t sub_1D4AC1560()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((495 * (v1 + 1 != v3 + 48)) ^ v0)))();
}

uint64_t sub_1D4AC1634@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((a1 ^ (a1 + 109)) + ((a1 + 1444861428) & 0x2152E77A) + 382) * (a2 == v4)) ^ (v3 + a1 + 130))))();
}

uint64_t sub_1D4AC179C(uint64_t a1)
{
  return sub_1D4AC17D0(a1, v1 - 7, a1 - 7);
}

uint64_t sub_1D4AC17D0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7, int a8)
{
  *(void *)(a3 + (v9 + v8 - v10)) = *(void *)(a2 + (v9 + v8 - v10));
  return (*(uint64_t (**)(void))(v11 + 8 * (((a7 + v10 == a4) * a8) ^ a5)))();
}

uint64_t sub_1D4AC1800(uint64_t a1, ...)
{
  va_start(va, a1);
  BOOL v5 = (*(uint64_t (**)(void, char *, void, uint64_t))(v3 + 8 * (v4 + 555)))(**(unsigned int **)(v2 + 8 * (v4 - 1695)), va, ((v1 - 1735911792) & 0xFFFFF000 ^ 0x7B7A1BDA) + ((2 * (v1 - 1735911792)) & 0xF6F42000) - 2071600090, 1) == ((v4 + 68402722) & 0xFBEC3BD7) - 212;
  return (*(uint64_t (**)(void))(v3 + 8 * ((472 * v5) ^ v4)))();
}

void sub_1D4AC189C()
{
}

uint64_t sub_1D4AC18B0()
{
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8 * (v1 ^ 0x900u));
  LODWORD(STACK[0x3F8]) = v0;
  BOOL v4 = v3() == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (((v1 + 1102) ^ 0x10B) - 1243)) ^ v1)))();
}

uint64_t sub_1D4AC18FC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 + v0 + ((9 * ((v2 - 1785) ^ 0x133)) ^ 0xA0540456) < 8) * (v2 - 2085)) ^ (v2 - 1785))))();
}

uint64_t sub_1D4AC1970()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v0 ^ 0xEB) - 607) * (v2 == 842511415)) ^ v0)))();
}

void sub_1D4AC19B4()
{
}

uint64_t sub_1D4AC1A1C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((30
                                * (((a1 - 2079419384) ^ 0x77B56DBEF3D7F1ACLL)
                                 - 0x77B56DBE70FF5A26
                                 + ((2 * (a1 - 2079419384)) & 0x1E7AFE358) == 2195232646)) ^ 0x166u)))();
}

uint64_t sub_1D4AC1AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30
                                                                                                  + 8 * ((1742 * ((((v29 ^ 0x58C) + 908) | 0x40) + (((v29 ^ 0x58C) + 1074036850) | 0x12407E29) == 1380254595)) ^ v29 ^ 0x58C)))(a1, a2, a3, a4, a5, a6, a29);
}

uint64_t sub_1D4AC1B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if ((v5 - 2029314978) <= 0x1B && ((1 << (v5 + 94)) & 0x8002809) != 0) {
    __asm { BRAA            X10, X17 }
  }
  return a5 ^ 0xE0A03059;
}

uint64_t sub_1D4AC1BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(void *)(v24 - 12_Block_object_dispose(&STACK[0x368], 8) = a20;
  *(void *)(v24 - 120) = v23;
  *(_DWORD *)(v24 - 112) = v20
                         + 1374699841 * ((2 * ((v24 - 128) & 0x66A5C608) - (v24 - 128) + 425343479) ^ 0x74AE21FE)
                         + 840;
  (*(void (**)(uint64_t))(v21 + 8 * (v20 + 1305)))(v24 - 128);
  *(void *)(v24 - 120) = a20;
  *(void *)(v24 - 104) = v22;
  *(_DWORD *)(v24 - 112) = v20 + 1178560073 * ((v24 - 43717527 - 2 * ((v24 - 128) & 0xFD64ECE9)) ^ 0x47F0948B) + 754;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v20 ^ 0xB22)))(v24 - 128);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (int)((((*(_DWORD *)(v24 - 128) - 1263233868) < 0xFA79F799)
                                                   * ((v20 + 4316065) & 0xFFBE24EF ^ ((v20 - 722) | 0x2A) ^ 0x291)) ^ v20)))(v25);
}

uint64_t sub_1D4AC1CF8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F2C91FF0 + 8 * ((225 * (*(_DWORD *)(a2 + 4) != 2079419385)) ^ 0x163u) - 4))();
}

uint64_t sub_1D4AC1D34(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v11 = a8 + v10 + ((a2 - 259) ^ 0xC76AB084);
  BOOL v12 = v11 < 0x4D9C5A13;
  BOOL v13 = v11 > v8 + 401557589;
  if ((v8 + 401557589) < 0x4D9C5A13 != v12) {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v13 * ((a2 - 1587) ^ 0x2EB)) ^ a2)))();
}

uint64_t sub_1D4AC1DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(unsigned char *)(v12 + (a6 - 2115834848)) = *(unsigned char *)(v9 + ((a6 - 2115834848) & 0xFLL)) ^ *(unsigned char *)(v7 + (a6 - 2115834848)) ^ *(unsigned char *)(v10 + (((_BYTE)a6 + 32) & 0xF)) ^ *(unsigned char *)((((_BYTE)a6 + 32) & 0xF) + v11 + 4) ^ (41 * ((a6 + 32) & 0xF));
  int v14 = ((a7 + 313) ^ 0xFFFFFA71) + a6 == v8;
  return (*(uint64_t (**)(void))(v13 + 8 * (((32 * v14) | (v14 << 6)) ^ (a7 + 602))))();
}

uint64_t sub_1D4AC1E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  unsigned int v22 = 1178560073 * (&a13 ^ 0xBA947862);
  a17 = v17;
  a14 = v22 + v21 + 167;
  a16 = v22 ^ ((v18 ^ 0xFF29FF53) + 1795093246 + ((2 * v18) & 0xFE53FEA6));
  a15 = a12;
  uint64_t v23 = (*(uint64_t (**)(int *))(v20 + 8 * (v21 + 707)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((a13 == v19) * (((v21 - 1567712108) & 0x1FF6) - 682)) ^ v21)))(v23);
}

uint64_t sub_1D4AC1ED0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int8x16_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  int8x16x4_t v60 = vld4q_s8(a4);
  uint8x16_t v45 = (uint8x16_t)veorq_s8(v60.val[0], v43);
  uint16x8_t v46 = vmovl_u8(*(uint8x8_t *)v45.i8);
  uint16x8_t v47 = vmovl_high_u8(v45);
  uint8x16_t v48 = (uint8x16_t)veorq_s8(v60.val[1], v43);
  _Q17 = vmovl_u8(*(uint8x8_t *)v48.i8);
  _Q16 = vmovl_high_u8(v48);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint8x16_t v57 = (uint8x16_t)veorq_s8(v60.val[2], v43);
  uint16x8_t v58 = vmovl_high_u8(v57);
  v60.val[0] = veorq_s8(v60.val[3], v43);
  v60.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v60.val[0]);
  v60.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v60.val[1]);
  v60.val[3] = vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(vmovl_u8(*(uint8x8_t *)v57.i8), 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v46), 0x18uLL)), (int8x16_t)vmovl_high_u16(vmovl_u8(*(uint8x8_t *)v60.val[0].i8)));
  v60.val[1] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v58.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v47.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.val[1].i8));
  v60.val[2] = vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v58, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v47), 0x18uLL)), v60.val[2]);
  void v41[2] = vaddq_s32(vsubq_s32((int32x4_t)v60.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v60.val[1], (int32x4_t)v60.val[1]), a29)), v44);
  v41[3] = vaddq_s32(vsubq_s32((int32x4_t)v60.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v60.val[2], (int32x4_t)v60.val[2]), a29)), v44);
  v41[1] = vaddq_s32(vsubq_s32((int32x4_t)v60.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v60.val[3], (int32x4_t)v60.val[3]), a29)), v44);
  return sub_1D4A8B5BC(a1, a2, a3, (uint64_t)a4, a41 - 1220, a6, v42 + 16);
}

void sub_1D4AC1FE4()
{
}

uint64_t sub_1D4AC1FEC(_DWORD *a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  signed int v1 = (*a1 ^ (535753261
             * ((1711628207 - (a1 | 0x66055FAF) + (a1 | 0x99FAA050)) ^ 0x930EAE7F)))
     - 2138963338;
  uint64_t v2 = *(void *)((char *)*(&off_1F2C91B30 + v1) - 4);
  unsigned int v5 = (3804331 * (&v4 ^ 0x7ED525F6)) ^ ((*a1 ^ (535753261
                                                             * ((1711628207
                                                               - (a1 | 0x66055FAF)
                                                               + (a1 | 0x99FAA050)) ^ 0x930EAE7F)))
                                                     - 2138961777);
  uint64_t v4 = v2;
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F2C91B30 + v1 + 130) + 8 * v1 + 18316))(&v4);
}

uint64_t sub_1D4AC20E4(uint64_t result)
{
  unint64_t v1 = 1755732067 * ((2 * (result & 0x155053FA18C8728CLL) - result + 0x6AAFAC05E7378D73) ^ 0xB7040B3A39F130A8);
  uint64_t v2 = *(void *)(result + 24);
  uint64_t v3 = *(void *)(result + 32);
  unint64_t v4 = v2 - v1;
  BOOL v5 = v2 != v3;
  BOOL v6 = v4 >= v3 - v1;
  if (((*(_DWORD *)(result + 12) ^ (1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8))) & 1) == 0) {
    BOOL v6 = v5;
  }
  if (v6) {
    int v7 = *(_DWORD *)(result + 16) + 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8);
  }
  else {
    int v7 = *(_DWORD *)(result + 8) - 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8);
  }
  *(_DWORD *)uint64_t result = *(_DWORD *)(result + 4) ^ (1755732067
                                               * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8)) ^ v7;
  return result;
}

uint64_t sub_1D4AC2184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, int a15)
{
  unsigned int v19 = 1178560073 * ((2 * (&a12 & 0x1E6864C8) - &a12 - 510158029) ^ 0x5B03E351);
  a13 = v19 + 762105055 * v15 + v18 + 296806021;
  a15 = (v18 + 1431) ^ v19;
  a14 = a11;
  uint64_t v20 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 ^ 0x84F)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((11 * (a12 == v16)) ^ v18)))(v20);
}

uint64_t sub_1D4AC223C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((v6 + 701361915) & 0xD63217FD ^ 0x3B5) + (v6 ^ 0x2A8)) * (v5 == a5)) ^ v6)))();
}

void sub_1D4AC2284()
{
}

uint64_t sub_1D4AC2290@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D4AC22F0(a4 - 0x139154EEB4327E8, a1 - 0x139154EEB4327E8, 3435, 0x97E1CBFDFEF9D1FCLL, 0x1FDF3A3F8, 0x6DFFBF9FD5EEEFB0, 950);
}

uint64_t sub_1D4AC22F0(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v20 = v18 > v12;
  uint64_t v21 = 4 * (v15 + v13);
  int v22 = v16 + v7 + (v11 ^ a3) + (*(_DWORD *)(*a1 + v21) ^ v17) - 2186;
  *(_DWORD *)(*a2 + v21) = v22 + v17 - (v14 & (2 * v22));
  LODWORD(v21) = v15 + 1 + v9;
  int v23 = v20 ^ ((int)v21 < v8);
  BOOL v24 = (int)v21 < v10;
  if (!v23) {
    BOOL v20 = v24;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((!v20 * a7) ^ v11)))();
}

uint64_t sub_1D4AC23AC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W7>, int a7@<W8>)
{
  int v17 = (a6 ^ v15)
      + (a5 ^ 0x35 ^ (a7 + 222))
      + (((v8 ^ a1) + v15 - (v13 & (2 * (v8 ^ a1)))) ^ v7)
      + *(_DWORD *)(a3 + 4 * (v16 + v12))
      + (*(_DWORD *)(v10 + 4 * (*(unsigned char *)(a2 + v16 + v12) - 72)) ^ v9);
  unsigned int v18 = (v17 + v15 - (v13 & (2 * v17))) ^ v15;
  int v19 = ((v18 << (*(unsigned char *)(a4 + v16 + v12) - 76)) | (v18 >> (76 - *(unsigned char *)(a4 + v16 + v12)))) + (a1 ^ v15);
  return (*(uint64_t (**)(void))(v11 + 8 * ((2250 * (v16 + 1 == v14 + 48)) ^ a5)))(v19 + v15 - (v13 & (2 * v19)));
}

uint64_t sub_1D4AC2478(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v8 = (unsigned __int8 *)(a4 + a3 + v7);
  int v9 = *v8 ^ 0xEB;
  LODWORD(v_Block_object_dispose(&STACK[0x368], 8) = (((8 * a2) ^ 0xA0 ^ v8[2] ^ 0xFB) << 16) | ((v8[3] ^ 0xEB) << 24) | v9 | ((v8[1] ^ 0xEB) << 8);
  *(_DWORD *)(v5 + ((a3 + v7) & 0xFFFFFFFFFFFFFFFCLL)) = v8 + v4 - 2 * (v8 & (v4 + 8) ^ v9 & 8);
  return (*(uint64_t (**)(void))(v6 + 8 * ((55 * ((unint64_t)(a3 + 4 + v7) > 0x3F)) ^ a2)))();
}

uint64_t sub_1D4AC2514(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v5
                                                    + 8
                                                    * (((((v4 < 0x20) ^ ((a4 ^ 0x9D) - 58)) & 1)
                                                      * ((((a4 ^ 0x39D) - 1071) | 0x10E) - 719)) ^ a4 ^ 0x39D)))(a1, 0);
}

uint64_t sub_1D4AC2558(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (1755732067 * ((a1 & 0xECFD530 | ~(a1 | 0xECFD530)) ^ 0x2FF69714));
  return (*(uint64_t (**)(void))((char *)*(&off_1F2C91B30 + v1 - 1276)
                              + 8 * (((*(void *)(a1 + 8) == 0x2C138C8FAF40FC22) * (v1 - 1381)) ^ v1)
                              - 4))();
}

void sub_1D4AC25E8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16)
     - 460628867 * (((a1 ^ 0x68759CF4 | 0x87CE5E15) - ((a1 ^ 0x68759CF4) & 0x87CE5E15)) ^ 0xA32D409C);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D4AC2728()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((23
                                * (*(_DWORD *)(v4 + 48 * (((v1 + ((v0 - 974) | 0x18) - 280) ^ 0x12DB406F) + v3) + 36) != v3)) ^ v0)))();
}

void sub_1D4AC277C()
{
  int v2 = LODWORD(STACK[0x3C4]) ^ 0x8F4;
  *(_DWORD *)(v1 - 200) = (v2 + 2138963294) ^ (535753261
                                             * ((v1 + 1931614134 - 2 * ((v1 - 200) & 0x7322187E)) ^ 0x79D61651));
  (*(void (**)(uint64_t))(v0 + 8 * (v2 | 0x904)))(v1 - 200);
  uint64_t v3 = v1 - 200;
  *(unsigned char *)uint64_t v3 = (-85 * ((v1 + 56) ^ 0xF6)) ^ 0x61;
  *(void *)(v3 + 24) = STACK[0x270];
  *(void *)(v3 + _Block_object_dispose(&STACK[0x368], 8) = STACK[0x268];
  *(_DWORD *)(v1 - 184) = 3804331 * ((v1 - 200) ^ 0x7ED525F6) + v2 + 1672;
  (*(void (**)(uint64_t))(v0 + 8 * (v2 ^ 0x8A2)))(v1 - 200);
  LODWORD(STACK[0x2EC]) = 604952942;
  JUMPOUT(0x1D4AC2874);
}

uint64_t sub_1D4AC28B0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1317
                                * ((((*(unsigned __int8 *)(v3 + 8) - 11) << (((v2 ^ 0xF7) + 51) ^ (-102 * (v2 ^ 0xF7)))) & v0)
                                 + ((*(unsigned __int8 *)(v3 + 8) - 11) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1D4AC2900@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v4
                                   - a2
                                   - 0x72E93EC0CCAF5782
                                   + (unint64_t)(v3 + v2 - 1522488795) < 0x10) ^ (a1 + 67)) & 1)
                                * ((37 * ((a1 + 889) ^ 0x81B)) ^ 0x143)) ^ (a1 + 889))))();
}

uint64_t sub_1D4AC297C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 763562213) & 0x7FC7FFAF) + ((v2 + 268438946) | 0x4244E929) + 1534460541)
                                * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1D4AC29E0()
{
  BOOL v5 = v0 != 659196916 && LODWORD(STACK[0x58C]) - v2 == ((v1 - 475) ^ 0x2685CE8);
  return (*(uint64_t (**)(void))(v3 + 8 * (((4 * v5) | (32 * v5)) ^ v1)))();
}

uint64_t sub_1D4AC2A28()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1149 * (v1 + v3 + (v0 ^ 0x6F6u) < ((v0 - 36) ^ v2))) ^ v0)))();
}

uint64_t sub_1D4AC2A64(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,unsigned int a45)
{
  unsigned int v50 = a3 ^ ((*v48 & 0x7FFFFFFE | v48[623] & 0x80000000) >> 1);
  v48[623] = v48[396] ^ a7 ^ (v50 + a1 - (a2 & (2 * v50))) ^ *(_DWORD *)(v46
                                                                       + 4
                                                                       * (*v48 & (v49
                                                                                + (v45 ^ (a4 - 245))
                                                                                - 536)));
  return (*(uint64_t (**)(void))(v47 + 8 * ((1183 * (a45 > 0x26F)) ^ v45)))();
}

uint64_t sub_1D4AC2AD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v12 = v8 + v9 + v10 - a3 + ((a6 - 657) | 0x20u);
  *(void *)(a1 - 7 + v12) = *(void *)(v6 - 7 + v12);
  return (*(uint64_t (**)(void))(v11 + 8 * ((2888 * (a3 - (v7 & 0xFFFFFFF8) == -8)) ^ a6)))();
}

uint64_t sub_1D4AC2B34()
{
  return sub_1D4AC2B58();
}

uint64_t sub_1D4AC2B58(uint64_t a1)
{
  int v5 = (v1 - 334) | 0x403;
  void *v9 = a1;
  _DWORD *v8 = v2;
  int v6 = 306 * (v5 ^ 0x450);
  unsigned int v13 = v5 + 535753261 * ((((2 * v12) | 0x432E8A82) - v12 + 1583921855) ^ 0xAB634B6E) + 236;
  uint64_t v14 = v11;
  (*(void (**)(unsigned char *))(v4 + 8 * (v5 ^ 0xCA6)))(v12);
  unsigned int v13 = v6
      + 535753261
      * (((v12 | 0x27EC23AD) - v12 + (v12 & 0xD813DC50)) ^ 0x2D182D82)
      + 425;
  uint64_t v14 = v10;
  (*(void (**)(unsigned char *))(v4 + 8 * (v6 ^ 0xB63)))(v12);
  return v3 ^ 0x1F5F6B87u;
}

uint64_t sub_1D4AC2C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  return (*(uint64_t (**)(uint64_t))(v33
                                            + 8
                                            * ((15
                                              * (a15
                                               + ((LODWORD(STACK[0x330]) << (a33 - 62)) & (a20 - 675) ^ 0x48)
                                               + (STACK[0x330] & 0x3F ^ 0xF9586ECB) < 0xFFFFFFC0)) ^ (a33 + 660))))(a30);
}

void sub_1D4AC2D40()
{
}

void sub_1D4AC2D4C()
{
  unint64_t v3 = STACK[0x568] + 0x72E93EC0CCAF5802;
  STACK[0x548] = v3;
  int v4 = 1178560073 * ((2 * ((v2 - 200) & 0x17E8E200) - (v2 - 200) - 401138177) ^ 0x5283659D);
  *(void *)(v2 - 192) = v3;
  *(_DWORD *)(v2 - 200) = 1184294775 - v4;
  *(_DWORD *)(v2 - 184) = -1882357475 - v4 + v0 + 9;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 2274)))(v2 - 200);
  STACK[0x5E8] = *(void *)(v1 + 8 * v0);
  JUMPOUT(0x1D4AA9B04);
}

uint64_t sub_1D4AC2E3C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v0 - 194504509) & 0xB97E45F ^ 0x403) * (*(_DWORD *)(v1 + 1424) != 1862623872)) ^ v0)))();
}

uint64_t sub_1D4AC2E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v10 = *((_DWORD *)&STACK[0x2AC] + ((v8 + v5) >> (((v7 + 93) | 0x29) ^ (a5 + 2))) + 18);
  *(unsigned char *)(a4 + (v8 + v5)) = v10 ^ 0x25;
  *(unsigned char *)(a4 + (v8 + v5 + 2)) = (BYTE2(v10) ^ 0xD1)
                                               - 2 * ((BYTE2(v10) ^ 0xD1) & 0xEF ^ BYTE2(v10) & 4)
                                               - 21;
  *(unsigned char *)(a4 + (v8 + v5 + 1)) = (BYTE1(v10) ^ 0x5B)
                                               + ~(2 * ((BYTE1(v10) ^ 0x5B) & 0xEF ^ BYTE1(v10) & 4))
                                               - 20;
  *(unsigned char *)(a4 + (v8 + v5 + 3)) = (HIBYTE(v10) ^ 0xDB)
                                               - 2 * ((HIBYTE(v10) ^ 0xDB) & 0xEF ^ HIBYTE(v10) & 4)
                                               - 21;
  unsigned int v11 = LODWORD(STACK[0x308]) - 528123428;
  BOOL v12 = v11 < v6;
  BOOL v13 = v8 + 267399623 < v11;
  if (v8 + 267399623 < v6 != v12) {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((947 * v13) ^ v7)))();
}

void sub_1D4AC2FA0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 1759421093 * ((a1 - 1364022623 - 2 * (a1 & 0xAEB2AAA1)) ^ 0x1DCF1AF5);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D4AC3064()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*(unsigned char *)(v2 + 1) == 4) * ((431 - v3) ^ (v0 - 1040))) | 0x1AF)))();
}

uint64_t sub_1D4AC3098()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1292 * ((v0 ^ 0x78F4E3B1) == ((v1 - v3 - 516) ^ 0x994D7A61) + v2)) ^ v1)))();
}

uint64_t sub_1D4AC30E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8
                                            * ((1605
                                              * (v6 == ((((v5 ^ 0x68) - a5 - 92) ^ (13 * (v5 ^ 0x68))) ^ 0xE1))) ^ v5)))(4294925278);
}

uint64_t sub_1D4AC3130(double a1)
{
  *(double *)(v3 + v4) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 != v4) | (4 * (v2 != v4))) ^ v1)))();
}

uint64_t sub_1D4AC3154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(unsigned char *)(*v21 + (v18 + a8)) = 107;
  unsigned int v22 = v18 + 257544317 + v19 - 986;
  int v23 = ((a18 + 1169893921) < 0x69CA038F) ^ (v22 < 0x69CA038F);
  BOOL v24 = v22 < a18 + 1169893921;
  if (v23) {
    BOOL v24 = (a18 + 1169893921) < 0x69CA038F;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((8 * v24) | (16 * v24) | v19)))();
}

uint64_t sub_1D4AC31CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  uint64_t v21 = (v18 - 690);
  BOOL v22 = ((a18 - 2079419384) ^ 0x3B41DFFBF33EF45DLL)
      + (v21 ^ 0xC4BE2004A29DC5CBLL)
      + (((unint64_t)(a18 - 2079419384) << ((v18 + 78) ^ 0xA7u)) & 0x1E67DE8BALL) == v20;
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((16 * v22) | (32 * v22)) ^ v18)))(v21);
}

void sub_1D4AC327C(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((((2 * a1) | 0x97E9331C) - a1 + 873162354) ^ 0xA6008187));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D4AC3358()
{
  int v3 = *(_DWORD *)(v1 + 56);
  *(_DWORD *)(v1 + 56) = v3 + 1;
  uint64_t v4 = *(uint64_t (**)(void))(v2 + 8
                                * ((1517 * ((LODWORD(STACK[0x3C4]) ^ 0xD9296C2E) + v3 < 0xFFFFFFFA)) ^ (v0 - 1049)));
  LODWORD(STACK[0x2EC]) = 604952942;
  return v4();
}

uint64_t sub_1D4AC33B0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v8 = 4 * (v4 - 537492075);
  int v9 = *(_DWORD *)(v5 + 4 * (v4 - 537492076));
  unsigned int v10 = (a3 + (~v9 >> 30) - 4 * (v9 >= 0)) ^ v9;
  int v11 = ((a3 + 1566083941 * v10 - ((-1162799414 * v10) & 0xFACB7EB4)) ^ *(_DWORD *)(v5 + v8)) - v4;
  *(_DWORD *)(v5 + v_Block_object_dispose(&STACK[0x368], 8) = v11 - ((2 * v11 + 1074984150) & 0xFACB7EB4) + 493828549;
  unint64_t v12 = 1374699841
      * ((0x8D0CAE00BE507B8ELL - (STACK[0x408] | 0x8D0CAE00BE507B8ELL) + STACK[0x400]) ^ 0x640140C937A88B27);
  *(_DWORD *)(v7 - 160) = (v3 + 231121441) ^ v12;
  uint64_t v13 = v7 - 200;
  *(void *)(v13 + _Block_object_dispose(&STACK[0x368], 8) = v12 + 1952423676;
  *(void *)(v13 + 16) = (v4 + 1414931602) ^ v12;
  *(_DWORD *)(v7 - 172) = (v3 + 231121332) ^ v12;
  *(_DWORD *)(v7 - 16_Block_object_dispose(&STACK[0x368], 8) = (v3 + 231121333) ^ v12;
  *(_DWORD *)(v7 - 200) = v12 + v3 - 1501686959;
  *(_DWORD *)(v7 - 176) = -(int)v12;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v3 + 1119)))(v7 - 200);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v7 - 164)))(v14);
}

void sub_1D4AC351C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 1755732067 * ((a1 & 0xB853BF30 | ~(a1 | 0xB853BF30)) ^ 0x996AFD14);
  uint64_t v2 = (char *)*(&off_1F2C91B30 + (v1 ^ 0x21D)) - 4;
  uint64_t v3 = *(void *)a1;
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * (v1 ^ 0xA6D)])((char *)*(&off_1F2C91B30 + (v1 ^ 0x226)) - 8, sub_1D4ABA8E0);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D4AC35F0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0xDE7FFE73)
                       + 805074912
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0xE6);
  return 0;
}

void sub_1D4AC3628()
{
}

uint64_t sub_1D4AC3648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v29 = v23 - 298;
  *(void *)(v28 - 12_Block_object_dispose(&STACK[0x368], 8) = v24;
  *(void *)(v28 - 120) = a23;
  *(void *)(v28 - 144) = v26;
  *(void *)(v28 - 136) = a15;
  *(_DWORD *)(v28 - 112) = v23
                         + 1224239923
                         * ((1915206197 - ((v28 - 144) | 0x7227BA35) + ((v28 - 144) | 0x8DD845CA)) ^ 0x7F6BB81D)
                         + 625;
  *(void *)(v28 - 104) = v24;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v23 ^ 0xAE5)))(v28 - 144);
  BOOL v31 = v27 + a19 + 2 >= (((v29 + 362) | 0x104) ^ 0x7FFFFCAAu);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((2 * v31) | (8 * v31) | (v29 + 974))))(v30);
}

uint64_t sub_1D4AC3718@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W6>, uint64_t a7@<X8>)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((*(unsigned __int8 *)(a7 + v8) == ((a1 ^ (2 * (a6 & v7)) ^ ((a6 & v7 ^ a2) * a3)) ^ a4))
                                * a5) ^ a6 & v7)))();
}

uint64_t sub_1D4AC3758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  return (*(uint64_t (**)(void))(v16 + 8 * ((299 * (a15 == 12 * (v15 ^ 0x22C) + 526346027)) ^ v15)))();
}

uint64_t sub_1D4AC379C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  *(_DWORD *)(STACK[0x2C0] + 360) = 1667755606;
  uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))(v58 + 8 * (v53 ^ 0xD65u)))(v55, 2, &STACK[0x5D0], STACK[0x438], (v54 - 2079419384), a6, &STACK[0x600], &STACK[0x5A4]);
  int v62 = ((2 * v60) & 0xEFF6F1FC) + (v60 ^ 0xF7FB78FE);
  if (v62 == 133921025)
  {
    LODWORD(STACK[0x46C]) = -526372673;
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v58
                                                                                  + 8
                                                                                  * (int)(((STACK[0x600] == 0)
                                                                                         * ((((STACK[0x420] - 597) | 0x400)
                                                                                           - 822) ^ 0x2BA)) ^ (STACK[0x420] + 483))))(v60, STACK[0x600], v61, 3768594526);
  }
  else
  {
    unint64_t v63 = STACK[0x420];
    if (v62 == -134514434)
    {
      STACK[0x3B8] = STACK[0x600];
      LODWORD(STACK[0x3B0]) = STACK[0x5A4];
      JUMPOUT(0x1D4AC3878);
    }
    int v65 = 1178560073 * ((v56 & 0x4ABC1A0D | ~(v56 | 0x4ABC1A0D)) ^ 0xFD79D90);
    *(void *)(v57 + _Block_object_dispose(&STACK[0x368], 8) = a53;
    *(_DWORD *)(v59 - 200) = v65 + v62 - ((2 * v62 + 269028868) & 0x3EBED70E) + 660861577;
    *(_DWORD *)(v59 - 196) = v63 - v65 + 1113;
    int v66 = v63;
    uint64_t v67 = (*(uint64_t (**)(uint64_t))(v58 + 8 * ((int)v63 + 1192)))(v59 - 200);
    return (*(uint64_t (**)(uint64_t))(v58
                                              + 8
                                              * (((STACK[0x600] == 0) * ((((v66 - 597) | 0x400) - 822) ^ 0x2BA)) ^ (v66 + 483))))(v67);
  }
}

uint64_t sub_1D4AC3ADC()
{
  uint64_t v3 = (*(uint64_t (**)(unint64_t))(v2 + 8 * (v1 ^ 0xCA9)))(STACK[0x258]);
  LODWORD(STACK[0x46C]) = v0;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((STACK[0x600] == 0) * ((((v1 - 597) | 0x400) - 822) ^ 0x2BA)) ^ (v1 + 483))))(v3);
}

void sub_1D4AC3B58()
{
}

void sub_1D4AC3B70()
{
}

void sub_1D4AC3BD8()
{
}

uint64_t sub_1D4AC3D34(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F2C91FF0 + 8 * ((1941 * (*(_DWORD *)(a2 + 4) == 2079419385)) ^ 0x267u) - 4))();
}

void sub_1D4AC3D70()
{
}

uint64_t sub_1D4AC3DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, unsigned int a20,uint64_t a21)
{
  unsigned int v26 = 1178560073 * ((&a17 & 0x443E359C | ~(&a17 | 0x443E359C)) ^ 0x155B201);
  a19 = a13;
  a20 = v26 ^ 0x6EE;
  a18 = v26 + 762105055 * v22 + 296806364;
  (*(void (**)(int *))(v23 + 18624))(&a17);
  unsigned int v27 = 1178560073 * (((&a17 | 0xFEB9F472) - (&a17 & 0xFEB9F472)) ^ 0x442D8C10);
  a19 = a13;
  a20 = v27 ^ 0x6EE;
  a18 = v27 + 762105055 * v25 + 296806364;
  (*(void (**)(int *))(v23 + 18624))(&a17);
  unsigned int v28 = 1178560073 * ((1638435589 - (&a17 | 0x61A88B05) + (&a17 | 0x9E5774FA)) ^ 0x24C30C98);
  a20 = (((2 * v21) & 0xFEF1FDAE) - 357567622 + (v21 ^ 0x7F78FED7)) ^ v28;
  a21 = v24;
  a19 = a13;
  a18 = v28 + 1778;
  uint64_t v29 = (*(uint64_t (**)(int *))(v23 + 18544))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((805 * (a17 == 526347143)) ^ 0x45Cu)))(v29);
}

unsigned char *sub_1D4AC3F8C(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D4AC4078(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v21 = a3 + 71;
  int v15 = 628203409 * ((~((v14 - 120) | 0xCC5631E2) + ((v14 - 120) & 0xCC5631E2)) ^ 0xB121C22E);
  int v16 = a3 ^ (a6 + 4);
  *(void *)(v14 - 120) = a10;
  *(_DWORD *)(v14 - 112) = v15 + a3 + 590;
  *(_DWORD *)(v14 - 10_Block_object_dispose(&STACK[0x368], 8) = a13 - v15 + 623924053;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (a3 ^ 0x8D6)))(v14 - 120);
  uint64_t v18 = *(_DWORD *)(v14 - 152) & 0x3F;
  *(unsigned char *)(v14 - 220 + (v18 ^ 0x24)) = 107;
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((((v18 ^ 0x24) > (v16 ^ 0xFBDBD338)) * (v21 ^ 0x51B)) ^ a3)))(v17);
}

void significantTimeDidChangeNotification(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v4 = a2;
  uint64_t v5 = (void *)MEMORY[0x1D9452090]();
  unint64_t v6 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    int v7 = HMFGetLogIdentifier();
    int v8 = 138543618;
    uint64_t v9 = v7;
    __int16 v10 = 2112;
    uint64_t v11 = a3;
    _os_log_impl(&dword_1D49D5000, v6, OS_LOG_TYPE_INFO, "%{public}@System time changed %@", (uint8_t *)&v8, 0x16u);
  }
  [v4 _handleSignificantTimeChange];
}

void sub_1D4AC68D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4AC9300(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4AC9384(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4AC93F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4ACA484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4ACEE04(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D4AD1188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_1D4AD57A4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4AD5834(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4AD58AC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4AD5944(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4AD59F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4AD5AAC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4AD5B44(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4AD5C44(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4AD98B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ____shouldFilterHandle_block_invoke()
{
  _DWORD v8[2] = *MEMORY[0x1E4F143B8];
  int v0 = (void *)MEMORY[0x1E4F1CAD0];
  id v1 = objc_alloc(MEMORY[0x1E4F6ABD0]);
  uint64_t v2 = (void *)[v1 initWithUnprefixedURI:*MEMORY[0x1E4F6AC00]];
  v8[0] = v2;
  id v3 = objc_alloc(MEMORY[0x1E4F6ABD0]);
  id v4 = (void *)[v3 initWithUnprefixedURI:*MEMORY[0x1E4F6AC08]];
  v8[1] = v4;
  uint64_t v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:2];
  uint64_t v6 = [v0 setWithArray:v5];
  int v7 = (void *)__shouldFilterHandle_blacklistedURIs;
  __shouldFilterHandle_blacklistedURIs = v6;
}

void __HMDShortcutActionInitializeWithSerializedShortcut(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v4)
  {
    objc_storeStrong(v3 + 3, a2);
    if (WorkflowKitLibraryCore())
    {
      uint64_t v18 = 0;
      uint64_t v19 = &v18;
      uint64_t v20 = 0x2050000000;
      uint64_t v5 = (void *)getWFHomeWorkflowClass_softClass;
      uint64_t v21 = getWFHomeWorkflowClass_softClass;
      if (!getWFHomeWorkflowClass_softClass)
      {
        uint64_t v13 = MEMORY[0x1E4F143A8];
        uint64_t v14 = 3221225472;
        int v15 = __getWFHomeWorkflowClass_block_invoke;
        int v16 = &unk_1E6A159D0;
        uint64_t v17 = &v18;
        __getWFHomeWorkflowClass_block_invoke((uint64_t)&v13);
        uint64_t v5 = (void *)v19[3];
      }
      uint64_t v6 = v5;
      _Block_object_dispose(&v18, 8);
      uint64_t v7 = [[v6 alloc] initWithData:v4];
      id v8 = v3[4];
      v3[4] = (id)v7;

      uint64_t v18 = 0;
      uint64_t v19 = &v18;
      uint64_t v20 = 0x2050000000;
      uint64_t v9 = (void *)getWFHomeWorkflowControllerClass_softClass;
      uint64_t v21 = getWFHomeWorkflowControllerClass_softClass;
      if (!getWFHomeWorkflowControllerClass_softClass)
      {
        uint64_t v13 = MEMORY[0x1E4F143A8];
        uint64_t v14 = 3221225472;
        int v15 = __getWFHomeWorkflowControllerClass_block_invoke;
        int v16 = &unk_1E6A159D0;
        uint64_t v17 = &v18;
        __getWFHomeWorkflowControllerClass_block_invoke((uint64_t)&v13);
        uint64_t v9 = (void *)v19[3];
      }
      __int16 v10 = v9;
      _Block_object_dispose(&v18, 8);
      uint64_t v11 = [[v10 alloc] initWithWorkflow:v3[4]];
      id v12 = v3[5];
      v3[5] = (id)v11;
    }
  }
}

void sub_1D4AE48CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t WorkflowKitLibraryCore()
{
  if (!WorkflowKitLibraryCore_frameworkLibrary) {
    WorkflowKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  return WorkflowKitLibraryCore_frameworkLibrary;
}

Class __getWFHomeWorkflowClass_block_invoke(uint64_t a1)
{
  WorkflowKitLibrary();
  Class result = objc_getClass("WFHomeWorkflow");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFHomeWorkflowClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__getWFHomeWorkflowControllerClass_block_invoke(v3);
  }
  return result;
}

void __getWFHomeWorkflowControllerClass_block_invoke(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFHomeWorkflowController");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFHomeWorkflowControllerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    WorkflowKitLibrary();
  }
}

void WorkflowKitLibrary()
{
  if (!WorkflowKitLibraryCore())
  {
    int v0 = (void *)abort_report_np();
    free(v0);
  }
}

uint64_t __WorkflowKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  WorkflowKitLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1D4AE8238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4AEDD78(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4AEDFAC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDResetConfigPostCleanupStepsToString(uint64_t a1)
{
  if (!a1)
  {
    uint64_t v2 = @"Unknown";
    goto LABEL_15;
  }
  __int16 v1 = a1;
  if (a1 == -1)
  {
    uint64_t v2 = @"everything";
    goto LABEL_15;
  }
  uint64_t v3 = [MEMORY[0x1E4F1CA48] array];
  id v4 = v3;
  if ((v1 & 2) != 0)
  {
    [v3 addObject:@"working store"];
    if ((v1 & 4) == 0)
    {
LABEL_7:
      if ((v1 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
  }
  else if ((v1 & 4) == 0)
  {
    goto LABEL_7;
  }
  [v4 addObject:@"cloud store"];
  if ((v1 & 8) == 0)
  {
LABEL_8:
    if ((v1 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  [v4 addObject:@"local store"];
  if ((v1 & 0x10) == 0)
  {
LABEL_9:
    if ((v1 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  [v4 addObject:@"shared cloud store"];
  if ((v1 & 0x20) == 0)
  {
LABEL_10:
    if ((v1 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  [v4 addObject:@"HH1 keyed archive"];
  if ((v1 & 0x40) == 0)
  {
LABEL_11:
    if ((v1 & 0x80) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    [v4 addObject:@"everything except demo mode"];
    if ((v1 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_23:
  [v4 addObject:@"HH1 SQL store"];
  if ((v1 & 0x80) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v1 & 0x100) != 0) {
LABEL_13:
  }
    [v4 addObject:@"client store"];
LABEL_14:
  uint64_t v2 = [v4 componentsJoinedByString:@", "];

LABEL_15:
  return v2;
}

void sub_1D4AFD918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4AFDC1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4AFE570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
}

void sub_1D4AFEB30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
}

void sub_1D4AFEC48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4AFF8E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4AFFBE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4AFFEE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B114BC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B11548(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B115D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B11650(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B12594(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B18DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t __Block_byref_object_copy__4697(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4698(uint64_t a1)
{
}

id arrayToString(void *a1, void *a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [MEMORY[0x1E4F28E78] string];
  uint64_t v6 = [NSString stringWithFormat:@"\n %@ [", v4];
  [v5 appendString:v6];

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v7 = v3;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v19;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v19 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = NSString;
        uint64_t v13 = [*(id *)(*((void *)&v18 + 1) + 8 * i) descriptionWithIndent:v4];
        uint64_t v14 = [v12 stringWithFormat:@" %@", v13];
        [v5 appendString:v14];
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v9);
  }

  int v15 = [NSString stringWithFormat:@"\n %@ ]", v4];
  [v5 appendString:v15];

  int v16 = (void *)[v5 copy];
  return v16;
}

BOOL checkForParseResult(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13 = &a10;
  if (!a9) {
    return 0;
  }
  int v10 = 0;
  while (a1 - 1 != v10)
  {
    uint64_t v11 = v13++;
    ++v10;
    if (!*v11) {
      return v10 >= a1;
    }
  }
  return 1;
}

void sub_1D4B2E41C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B2ED90(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B2F024(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B2F1E0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B2F268(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B2F7C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B3365C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

void __languageChanged()
{
  id v0 = +[HMDMainDriver driver];
  [v0 localeChanged];
}

void sub_1D4B387A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B44AE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1D4B44EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1D4B46CC0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDRemoteLoginAccountTypeAsString(uint64_t a1)
{
  if (a1)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDRemoteLoginAccountType %tu", a1);
    uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v2 = @"HMDRemoteLoginAccountTypeITunes";
  }
  return v2;
}

void sub_1D4B4A8E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8992(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8993(uint64_t a1)
{
}

uint64_t HMDRemoteEventRouterProtoConnectResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        id v17 = objc_alloc_init(MEMORY[0x1E4F69F80]);
        [a1 addCachedEvents:v17];
        if (!PBReaderPlaceMark() || (HMEProtoEventInfoReadFrom() & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_1D4B4EDDC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B4EE5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B4F0A0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B4F19C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B51144(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B51624(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B550C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B594AC(_Unwind_Exception *a1)
{
}

void sub_1D4B59568(_Unwind_Exception *a1)
{
}

void sub_1D4B595F8(_Unwind_Exception *a1)
{
}

void sub_1D4B596B4(_Unwind_Exception *a1)
{
}

void sub_1D4B5A11C(_Unwind_Exception *a1)
{
}

void sub_1D4B5C73C(_Unwind_Exception *a1)
{
}

void sub_1D4B5C7C8(_Unwind_Exception *a1)
{
}

void sub_1D4B5C854(_Unwind_Exception *a1)
{
}

void sub_1D4B5C8D0(_Unwind_Exception *a1)
{
}

void sub_1D4B5C954(_Unwind_Exception *a1)
{
}

void sub_1D4B5CA04(_Unwind_Exception *a1)
{
}

void sub_1D4B5CD50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B5DBF8(_Unwind_Exception *a1)
{
}

void sub_1D4B5E0DC(_Unwind_Exception *a1)
{
}

void sub_1D4B5E5DC(_Unwind_Exception *a1)
{
}

void sub_1D4B5E6C8(_Unwind_Exception *a1)
{
}

void sub_1D4B5EA20(_Unwind_Exception *a1)
{
}

void sub_1D4B5F384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B5FA54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,id location)
{
}

void sub_1D4B5FF30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B60270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B60FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B6150C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B616FC(_Unwind_Exception *a1)
{
}

void sub_1D4B617A0(_Unwind_Exception *a1)
{
}

void sub_1D4B619D8(_Unwind_Exception *a1)
{
}

void sub_1D4B61A7C(_Unwind_Exception *a1)
{
}

void sub_1D4B61B20(_Unwind_Exception *a1)
{
}

void sub_1D4B61C7C(_Unwind_Exception *a1)
{
}

void sub_1D4B62048(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11)
{
  objc_destroyWeak(v11);
  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v13 - 112));
  _Unwind_Resume(a1);
}

void sub_1D4B62728(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B62A14(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B62E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v13 - 112));
  _Unwind_Resume(a1);
}

void sub_1D4B63514(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B63DB8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B64248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11)
{
  objc_destroyWeak(v13);
  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  _Unwind_Resume(a1);
}

void sub_1D4B64298()
{
}

void sub_1D4B649AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B64E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  objc_destroyWeak(v40);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose(&a40, 8);
  _Block_object_dispose((const void *)(v41 - 200), 8);
  _Block_object_dispose((const void *)(v41 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10691(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10692(uint64_t a1)
{
}

void sub_1D4B653C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B66170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,id a38)
{
}

void sub_1D4B6652C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B666B4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B66B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B66DE8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1D4B67064(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B67464(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1D4B676E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B67C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B67F04(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B684D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1D4B689F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B68EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B69374(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void __transactionHomeSettingsUpdated(void *a1, void *a2, void *a3)
{
  id v18 = a1;
  id v5 = a2;
  id v6 = a3;
  id v7 = [v6 transactionResult];
  char v8 = [v5 setProperties];
  if ([v8 containsObject:@"automaticSoftwareUpdateEnabled"])
  {
    int v9 = [v18 isAutomaticSoftwareUpdateEnabled];
    unint64_t v10 = [v5 automaticSoftwareUpdateEnabled];
    int v11 = [v10 BOOLValue];

    if (v9 != v11)
    {
      unint64_t v12 = [v5 automaticSoftwareUpdateEnabled];
      objc_msgSend(v18, "setAutomaticSoftwareUpdateEnabled:", objc_msgSend(v12, "BOOLValue"));

      [v7 markChanged];
    }
  }
  else
  {
  }
  uint64_t v13 = [v5 setProperties];
  if ([v13 containsObject:@"automaticThirdPartyAccessorySoftwareUpdateEnabled"])
  {
    int v14 = [v18 isAutomaticThirdPartyAccessorySoftwareUpdateEnabled];
    int v15 = [v5 automaticThirdPartyAccessorySoftwareUpdateEnabled];
    int v16 = [v15 BOOLValue];

    if (v14 != v16)
    {
      id v17 = [v5 automaticThirdPartyAccessorySoftwareUpdateEnabled];
      objc_msgSend(v18, "setAutomaticThirdPartyAccessorySoftwareUpdateEnabled:", objc_msgSend(v17, "BOOLValue"));

      [v7 markChanged];
    }
  }
  else
  {
  }
  [v6 respondWithPayload:0];
}

void __transactionHomeMediaSettingsUpdated(void *a1, void *a2, void *a3)
{
  id v23 = a1;
  id v5 = a2;
  id v6 = a3;
  id v7 = [v6 transactionResult];
  char v8 = [v5 setProperties];
  if ([v8 containsObject:@"minimumMediaUserPrivilege"])
  {
    uint64_t v9 = [v23 minimumMediaUserPrivilege];
    unint64_t v10 = [v5 minimumMediaUserPrivilege];
    uint64_t v11 = [v10 unsignedIntegerValue];

    if (v9 != v11)
    {
      unint64_t v12 = [v5 minimumMediaUserPrivilege];
      objc_msgSend(v23, "setMinimumMediaUserPrivilege:", objc_msgSend(v12, "unsignedIntegerValue"));

      [v7 markChanged];
    }
  }
  else
  {
  }
  uint64_t v13 = [v5 setProperties];
  if ([v13 containsObject:@"mediaPeerToPeerEnabled"])
  {
    int v14 = [v23 isMediaPeerToPeerEnabled];
    int v15 = [v5 mediaPeerToPeerEnabled];
    int v16 = [v15 BOOLValue];

    if (v14 != v16)
    {
      id v17 = [v5 mediaPeerToPeerEnabled];
      objc_msgSend(v23, "setMediaPeerToPeerEnabled:", objc_msgSend(v17, "BOOLValue"));

      [v7 markChanged];
    }
  }
  else
  {
  }
  id v18 = [v5 setProperties];
  if ([v18 containsObject:@"mediaPassword"])
  {
    long long v19 = [v23 mediaPassword];
    long long v20 = [v5 mediaPassword];
    char v21 = HMFEqualObjects();

    if ((v21 & 1) == 0)
    {
      int v22 = [v5 mediaPassword];
      [v23 setMediaPassword:v22];

      [v7 markChanged];
    }
  }
  else
  {
  }
  [v6 respondWithPayload:0];
}

void sub_1D4B6F4E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
}

void __updateAccountHandleForCurrentUser(void *a1, void *a2)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = [v4 primaryHandle];
  if (v5)
  {
    id v6 = [v3 currentUser];
    id v7 = [v6 accountHandle];
    if (v6)
    {
      if ((HMFEqualObjects() & 1) == 0)
      {
        char v8 = (void *)[v6 newModelWithChangeType:2];
        [v8 setAccountHandle:v5];
        uint64_t v9 = +[HMDAccountHandleFormatter defaultFormatter];
        unint64_t v10 = [v9 stringForObjectValue:v5];

        [v8 setUserID:v10];
        uint64_t v11 = [v3 backingStore];
        unint64_t v12 = +[HMDBackingStoreTransactionOptions defaultXPCOptions];
        uint64_t v13 = [v11 transaction:@"HMDAppleAccountManagerAccountUpdatedNotification" options:v12];

        [v13 add:v8 withMessage:0];
        v22[0] = MEMORY[0x1E4F143A8];
        v22[1] = 3221225472;
        void v22[2] = ____updateAccountHandleForCurrentUser_block_invoke;
        v22[3] = &unk_1E6A197F0;
        id v23 = v3;
        [v13 run:v22];
      }
    }
    else
    {
      id v18 = (void *)MEMORY[0x1D9452090]();
      id v19 = v3;
      long long v20 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        char v21 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        int v25 = v21;
        _os_log_impl(&dword_1D49D5000, v20, OS_LOG_TYPE_ERROR, "%{public}@Home does not currently have a user account. Not attempting to update handle.", buf, 0xCu);
      }
    }
  }
  else
  {
    int v14 = (void *)MEMORY[0x1D9452090]();
    id v15 = v3;
    int v16 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      id v17 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      int v25 = v17;
      _os_log_impl(&dword_1D49D5000, v16, OS_LOG_TYPE_INFO, "%{public}@Cannot update home current user account handle because primary handle cannot be determined", buf, 0xCu);
    }
  }
}

void ____updateAccountHandleForCurrentUser_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    id v4 = (void *)MEMORY[0x1D9452090]();
    id v5 = *(id *)(a1 + 32);
    id v6 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      id v7 = HMFGetLogIdentifier();
      int v8 = 138543362;
      uint64_t v9 = v7;
      _os_log_impl(&dword_1D49D5000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to change account handle for current user", (uint8_t *)&v8, 0xCu);
    }
  }
}

void sub_1D4B71078(_Unwind_Exception *a1)
{
}

void sub_1D4B713C0(_Unwind_Exception *a1)
{
}

void sub_1D4B72BB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
}

void sub_1D4B73244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B74A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
}

void sub_1D4B7CF18(_Unwind_Exception *a1)
{
}

void sub_1D4B8031C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B82024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __decodeAndVerifyCurrentUser(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = [v4 uuidForKey:@"kUserUUIDKey"];
  if (v5)
  {
    id v6 = [v3 currentUser];
    id v7 = [v6 uuid];
    char v8 = objc_msgSend(v7, "hmf_isEqualToUUID:", v5);

    if (v8)
    {
      id v9 = v6;
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x1D9452090]();
      id v12 = v3;
      uint64_t v13 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        int v14 = HMFGetLogIdentifier();
        int v17 = 138543618;
        id v18 = v14;
        __int16 v19 = 2112;
        long long v20 = v5;
        _os_log_impl(&dword_1D49D5000, v13, OS_LOG_TYPE_ERROR, "%{public}@Specified user identifier does not match current user: %@", (uint8_t *)&v17, 0x16u);
      }
      id v15 = [MEMORY[0x1E4F28C58] hmErrorWithCode:48];
      [v4 respondWithError:v15];

      id v9 = 0;
    }
  }
  else
  {
    uint64_t v10 = [MEMORY[0x1E4F28C58] hmErrorWithCode:27];
    [v4 respondWithError:v10];

    id v9 = 0;
  }

  return v9;
}

void sub_1D4B84458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B84C9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B85330(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_1D4B85D68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B884EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location)
{
  objc_destroyWeak(v33);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B88828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B89DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
}

id HMDSecureAccessErrorCodeForMessage(void *a1, uint64_t a2)
{
  id v3 = a1;
  if ([v3 isEntitledForSPIAccess])
  {
    uint64_t v4 = 2003;
  }
  else
  {
    int v5 = [v3 isInternal];
    if (a2 == 1) {
      int v6 = 1;
    }
    else {
      int v6 = v5;
    }
    if (v6) {
      uint64_t v4 = 2003;
    }
    else {
      uint64_t v4 = 10;
    }
  }
  id v7 = (void *)MEMORY[0x1E4F28C58];
  if (+[HMDDeviceCapabilities supportsDeviceLock]) {
    uint64_t v8 = 82;
  }
  else {
    uint64_t v8 = v4;
  }
  id v9 = [v7 hmErrorWithCode:v8];

  return v9;
}

void sub_1D4B8ADD8(_Unwind_Exception *a1)
{
}

void sub_1D4B8B0C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B8B3DC(_Unwind_Exception *a1)
{
}

void sub_1D4B8CC38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,id location)
{
  objc_destroyWeak(v54);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B8DE9C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1D4B8E330(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 48));
  objc_destroyWeak((id *)(v3 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4B8F2A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location)
{
  objc_destroyWeak(v33);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B8F740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B8FD8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_1D4B90D58(_Unwind_Exception *a1)
{
}

void sub_1D4B91024(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D4B91500(_Unwind_Exception *a1)
{
}

void sub_1D4B919A8(_Unwind_Exception *a1)
{
}

void sub_1D4B92418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B94738(_Unwind_Exception *a1)
{
}

void sub_1D4B95D84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,id location)
{
  objc_destroyWeak(v54);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B96788(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_1D4B96A38(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B96FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location)
{
  objc_destroyWeak(v39);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B98920(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x250]);
  _Unwind_Resume(a1);
}

void sub_1D4B9CAF4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 176));
  _Unwind_Resume(a1);
}

void sub_1D4B9CF08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B9CFEC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4B9D5DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4B9F474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,id location,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a67, 8);
  _Unwind_Resume(a1);
}

void ____authenticateAcceptedOutgoingInvitation_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  uint64_t v8 = WeakRetained;
  if (WeakRetained)
  {
    id v9 = [WeakRetained workQueue];
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = ____authenticateAcceptedOutgoingInvitation_block_invoke_2;
    block[3] = &unk_1E6A09840;
    id v13 = v6;
    id v10 = v8;
    uint64_t v11 = *(void *)(a1 + 40);
    id v14 = v10;
    uint64_t v15 = v11;
    uint64_t v19 = *(void *)(a1 + 56);
    id v16 = v5;
    id v17 = *(id *)(a1 + 48);
    id v18 = *(id *)(a1 + 32);
    dispatch_async(v9, block);
  }
  else
  {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

uint64_t ____authenticateAcceptedOutgoingInvitation_block_invoke_4303(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  uint64_t v3 = (void *)MEMORY[0x1D9452090]();
  id v4 = *(id *)(a1 + 32);
  id v5 = HMFGetOSLogHandle();
  id v6 = v5;
  if (v2)
  {
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      goto LABEL_7;
    }
    id v7 = HMFGetLogIdentifier();
    int v12 = 138543362;
    id v13 = v7;
    uint64_t v8 = "%{public}@Failed to authenticate invitation";
    id v9 = v6;
    os_log_type_t v10 = OS_LOG_TYPE_ERROR;
  }
  else
  {
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_7;
    }
    id v7 = HMFGetLogIdentifier();
    int v12 = 138543362;
    id v13 = v7;
    uint64_t v8 = "%{public}@Authenticated invitation after resolving";
    id v9 = v6;
    os_log_type_t v10 = OS_LOG_TYPE_DEFAULT;
  }
  _os_log_impl(&dword_1D49D5000, v9, v10, v8, (uint8_t *)&v12, 0xCu);

LABEL_7:
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
  }
  return result;
}

void ____authenticateAcceptedOutgoingInvitation_block_invoke_2(uint64_t a1)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = (void *)MEMORY[0x1D9452090]();
    id v3 = *(id *)(a1 + 40);
    id v4 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id v5 = HMFGetLogIdentifier();
      id v6 = [*(id *)(a1 + 48) shortDescription];
      id v7 = *(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40);
      int v24 = 138543874;
      int v25 = v5;
      __int16 v26 = 2112;
      uint64_t v27 = v6;
      __int16 v28 = 2112;
      uint64_t v29 = v7;
      _os_log_impl(&dword_1D49D5000, v4, OS_LOG_TYPE_ERROR, "%{public}@Failed to resolve handle, %@, with error: %@", (uint8_t *)&v24, 0x20u);
    }
    uint64_t v8 = *(void *)(*(void *)(a1 + 80) + 8);
    uint64_t v10 = *(void *)(v8 + 40);
    id v9 = (id *)(v8 + 40);
    if (!v10) {
      objc_storeStrong(v9, *(id *)(a1 + 32));
    }
  }
  else
  {
    char v11 = [*(id *)(a1 + 56) isEqual:*(void *)(a1 + 64)];
    int v12 = (void *)MEMORY[0x1D9452090]();
    id v13 = *(id *)(a1 + 40);
    uint64_t v14 = HMFGetOSLogHandle();
    uint64_t v15 = v14;
    if (v11)
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        id v16 = HMFGetLogIdentifier();
        id v17 = [*(id *)(a1 + 48) shortDescription];
        int v24 = 138543618;
        int v25 = v16;
        __int16 v26 = 2112;
        uint64_t v27 = v17;
        _os_log_impl(&dword_1D49D5000, v15, OS_LOG_TYPE_INFO, "%{public}@Authenticated handle: %@", (uint8_t *)&v24, 0x16u);
      }
    }
    else
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        id v18 = HMFGetLogIdentifier();
        uint64_t v19 = [*(id *)(a1 + 64) shortDescription];
        long long v20 = [*(id *)(a1 + 56) shortDescription];
        int v24 = 138543874;
        int v25 = v18;
        __int16 v26 = 2112;
        uint64_t v27 = v19;
        __int16 v28 = 2112;
        uint64_t v29 = v20;
        _os_log_impl(&dword_1D49D5000, v15, OS_LOG_TYPE_ERROR, "%{public}@Invitation response received from account, %@, expected: %@", (uint8_t *)&v24, 0x20u);
      }
      if (!*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40))
      {
        uint64_t v21 = [MEMORY[0x1E4F28C58] hmErrorWithCode:55];
        uint64_t v22 = *(void *)(*(void *)(a1 + 80) + 8);
        id v23 = *(void **)(v22 + 40);
        *(void *)(v22 + 40) = v21;
      }
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 72));
}

void sub_1D4BA0FC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,id a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,id location)
{
  objc_destroyWeak(v45);
  objc_destroyWeak(&location);
  objc_destroyWeak(a13);
  objc_destroyWeak(&a38);
  _Unwind_Resume(a1);
}

void sub_1D4BA1D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4BA321C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4BA60E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  objc_destroyWeak(v28);
  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4BA6B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  _Unwind_Resume(a1);
}

void sub_1D4BAA9B0(_Unwind_Exception *a1)
{
}

void sub_1D4BAAB48(_Unwind_Exception *a1)
{
}

void sub_1D4BADC3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4BAF8A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 168));
  _Unwind_Resume(a1);
}

void sub_1D4BB0448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4BB48E8(_Unwind_Exception *a1)
{
}

void sub_1D4BB5700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a67, 8);
  _Unwind_Resume(a1);
}

void sub_1D4BB5A50(_Unwind_Exception *a1)
{
}

void sub_1D4BB646C(_Unwind_Exception *a1)
{
}

void sub_1D4BB6948(_Unwind_Exception *a1)
{
}

void sub_1D4BB6D68(_Unwind_Exception *a1)
{
}

void sub_1D4BB6F48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4BB7A18(_Unwind_Exception *a1)
{
}

void sub_1D4BB7D3C(_Unwind_Exception *a1)
{
}

void __handleAccessoryReachabilityRegistration(void *a1, void *a2, int a3)
{
  uint64_t v126 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  if (![v6 isRemote] || (objc_msgSend(v6, "isSecureRemote") & 1) != 0)
  {
    uint64_t v7 = [v6 stringForKey:@"kHomeUUID"];
    uint64_t v8 = [v5 uuid];
    id v9 = [v8 UUIDString];
    unint64_t v92 = (void (**)(void, void, void))v7;
    LOBYTE(v7) = [(id)v7 isEqualToString:v9];

    if (v7)
    {
      unint64_t v93 = 0;
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1D9452090]();
      id v11 = v5;
      int v12 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        id v13 = HMFGetLogIdentifier();
        [v11 uuid];
        v15 = id v14 = v6;
        id v16 = [v15 UUIDString];
        *(_DWORD *)long long buf = 138543874;
        char v121 = v13;
        __int16 v122 = 2112;
        id v123 = v92;
        __int16 v124 = 2112;
        unint64_t v125 = v16;
        _os_log_impl(&dword_1D49D5000, v12, OS_LOG_TYPE_INFO, "%{public}@Home does not match, received: %@, current: %@", buf, 0x20u);

        id v6 = v14;
      }

      unint64_t v93 = [MEMORY[0x1E4F28C58] errorWithDomain:*MEMORY[0x1E4F2D140] code:2 userInfo:0];
    }
    id v17 = [v6 responseHandler];

    if (v17)
    {
      id v18 = [v6 responseHandler];
      ((void (**)(void, void *, void))v18)[2](v18, v93, 0);
    }
    uint64_t v19 = (void *)MEMORY[0x1D9452090]();
    id v20 = v5;
    uint64_t v21 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      uint64_t v22 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      char v121 = v22;
      __int16 v122 = 2112;
      id v123 = v20;
      _os_log_impl(&dword_1D49D5000, v21, OS_LOG_TYPE_INFO, "%{public}@Registering for remote reachability for home: %@", buf, 0x16u);
    }
    id v23 = [v6 remoteSourceID];
    uint64_t v24 = +[HMDDevice deviceWithDestination:v23];
    int v25 = (void *)v24;
    if (a3)
    {
      unint64_t v90 = v23;
      unint64_t v91 = (void *)v24;
      id v88 = v6;
      id v89 = v5;
      __int16 v26 = [v6 messagePayload];
      objc_msgSend(v26, "hmf_arrayForKey:", @"kAccessoriesListKey");
      id v27 = (id)objc_claimAutoreleasedReturnValue();

      if (!v27)
      {
        __int16 v28 = (void *)MEMORY[0x1E4F1CA48];
        uint64_t v29 = [v20 accessories];
        uint64_t v30 = objc_msgSend(v28, "arrayWithCapacity:", objc_msgSend(v29, "count"));

        long long v111 = 0u;
        long long v112 = 0u;
        long long v109 = 0u;
        long long v110 = 0u;
        BOOL v31 = [v20 accessories];
        int v32 = (void *)[v31 copy];

        uint64_t v33 = [v32 countByEnumeratingWithState:&v109 objects:v119 count:16];
        if (v33)
        {
          uint64_t v34 = v33;
          uint64_t v35 = *(void *)v110;
          do
          {
            for (uint64_t i = 0; i != v34; ++i)
            {
              if (*(void *)v110 != v35) {
                objc_enumerationMutation(v32);
              }
              uint64_t v37 = [*(id *)(*((void *)&v109 + 1) + 8 * i) uuid];
              int v38 = [v37 UUIDString];
              [v30 addObject:v38];
            }
            uint64_t v34 = [v32 countByEnumeratingWithState:&v109 objects:v119 count:16];
          }
          while (v34);
        }

        id v27 = v30;
        uint64_t v39 = (void *)MEMORY[0x1D9452090]();
        id v40 = v20;
        uint64_t v41 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
        {
          uint64_t v42 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543618;
          char v121 = v42;
          __int16 v122 = 2112;
          id v123 = v27;
          _os_log_impl(&dword_1D49D5000, v41, OS_LOG_TYPE_INFO, "%{public}@Registering for reachability notification for all accessories: %@", buf, 0x16u);
        }
      }
      unint64_t v94 = [v20 homeManager];
      long long v97 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v27, "count"));
      long long v105 = 0u;
      long long v106 = 0u;
      long long v107 = 0u;
      long long v108 = 0u;
      id obj = v27;
      uint64_t v100 = [obj countByEnumeratingWithState:&v105 objects:v118 count:16];
      if (v100)
      {
        uint64_t v99 = *(void *)v106;
        id v96 = v20;
        do
        {
          for (uint64_t j = 0; j != v100; ++j)
          {
            if (*(void *)v106 != v99) {
              objc_enumerationMutation(obj);
            }
            int32x4_t v44 = (void *)[objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:*(void *)(*((void *)&v105 + 1) + 8 * j)];
            if (v44)
            {
              long long v103 = 0u;
              long long v104 = 0u;
              long long v101 = 0u;
              long long v102 = 0u;
              int v45 = [v20 accessories];
              uint64_t v46 = (void *)[v45 copy];

              uint64_t v47 = [v46 countByEnumeratingWithState:&v101 objects:v117 count:16];
              if (v47)
              {
                uint64_t v48 = v47;
                uint64_t v49 = *(void *)v102;
                while (2)
                {
                  for (uint64_t k = 0; k != v48; ++k)
                  {
                    if (*(void *)v102 != v49) {
                      objc_enumerationMutation(v46);
                    }
                    unsigned int v51 = *(void **)(*((void *)&v101 + 1) + 8 * k);
                    unsigned int v52 = [v51 uuid];
                    int v53 = [v52 isEqual:v44];

                    if (v53)
                    {
                      if ([v51 isReachable])
                      {
                        BOOL v54 = 1;
                      }
                      else
                      {
                        uint64_t v55 = [v94 residentMesh];
                        int v56 = [v55 deviceForAccessory:v51 residentOrder:1 reachableResidents:0];
                        BOOL v54 = v56 != 0;
                      }
                      uint64_t v57 = (void *)MEMORY[0x1D9452090]();
                      id v58 = v20;
                      uint64_t v59 = HMFGetOSLogHandle();
                      if (os_log_type_enabled(v59, OS_LOG_TYPE_INFO))
                      {
                        uint64_t v60 = HMFGetLogIdentifier();
                        [v51 uuid];
                        v62 = BOOL v61 = v54;
                        [v62 UUIDString];
                        unint64_t v63 = v95 = v57;
                        *(_DWORD *)long long buf = 138543874;
                        char v121 = v60;
                        __int16 v122 = 2112;
                        id v123 = v63;
                        __int16 v124 = 1024;
                        LODWORD(v125) = v61;
                        _os_log_impl(&dword_1D49D5000, v59, OS_LOG_TYPE_INFO, "%{public}@Updating reachability for accessory: %@ to: %d", buf, 0x1Cu);

                        BOOL v54 = v61;
                        uint64_t v57 = v95;
                      }
                      unint64_t v64 = [v51 uuid];
                      int v65 = [v64 UUIDString];
                      uint64_t v115 = v65;
                      int v66 = [NSNumber numberWithBool:v54];
                      uint64_t v116 = v66;
                      uint64_t v67 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v116 forKeys:&v115 count:1];
                      [v97 addObject:v67];

                      id v20 = v96;
                      goto LABEL_45;
                    }
                  }
                  uint64_t v48 = [v46 countByEnumeratingWithState:&v101 objects:v117 count:16];
                  if (v48) {
                    continue;
                  }
                  break;
                }
              }
LABEL_45:
            }
          }
          uint64_t v100 = [obj countByEnumeratingWithState:&v105 objects:v118 count:16];
        }
        while (v100);
      }

      id v5 = v89;
      id v23 = v90;
      if (v90 && v91)
      {
        long long v68 = (void *)MEMORY[0x1D9452090]([v20 _registerDeviceForReachabilityNotification:v91 accessoryList:obj]);
        id v69 = v20;
        uint64_t v70 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v70, OS_LOG_TYPE_INFO))
        {
          unint64_t v71 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543618;
          char v121 = v71;
          __int16 v122 = 2112;
          id v123 = v90;
          _os_log_impl(&dword_1D49D5000, v70, OS_LOG_TYPE_INFO, "%{public}@Sending current reachability to destination:%@", buf, 0x16u);
        }
        v113[0] = @"kAccessoriesListKey";
        uint64_t v72 = (void *)[v97 copy];
        v113[1] = @"kHomeUUID";
        v114[0] = v72;
        unint64_t v73 = [v69 uuid];
        uint64_t v74 = [v73 UUIDString];
        v114[1] = v74;
        unint64_t v75 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v114 forKeys:v113 count:2];

        unint64_t v76 = +[HMDRemoteMessage messageWithName:@"kRemoteReachabilityChangedNotificationKey" identifier:0 messagePayload:v75];
        unint64_t v77 = [v94 messageDispatcher];
        unint64_t v78 = [v69 uuid];
        unint64_t v79 = [v91 remoteDestinationString];
        unint64_t v80 = [v69 workQueue];
        [v77 sendSecureMessage:v76 target:v78 userID:0 destination:v79 responseQueue:v80 responseHandler:0];

        id v23 = v90;
      }

      id v6 = v88;
      int v25 = v91;
    }
    else
    {
      [v20 _deregisterDeviceForReachabilityNotification:v24];
    }

    unint64_t v81 = v92;
    goto LABEL_56;
  }
  unint64_t v82 = (void *)MEMORY[0x1D9452090]();
  id v83 = v5;
  unint64_t v84 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v84, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v85 = HMFGetLogIdentifier();
    *(_DWORD *)long long buf = 138543618;
    char v121 = v85;
    __int16 v122 = 2112;
    id v123 = v6;
    _os_log_impl(&dword_1D49D5000, v84, OS_LOG_TYPE_DEFAULT, "%{public}@Message not supported: %@", buf, 0x16u);
  }
  uint64_t v86 = [v6 responseHandler];

  if (v86)
  {
    uint64_t v87 = [MEMORY[0x1E4F28C58] hmErrorWithCode:17];
    unint64_t v81 = [v6 responseHandler];
    unint64_t v93 = (void *)v87;
    v81[2](v81, v87, 0);
LABEL_56:
  }
}

void sub_1D4BBBA30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4BBD914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id location)
{
}

void sub_1D4BBDA40(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4BBF844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_1D4BC003C(_Unwind_Exception *a1)
{
}

void sub_1D4BC0B98(_Unwind_Exception *a1)
{
}

void sub_1D4BC1BD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x290]);
  _Unwind_Resume(a1);
}

void sub_1D4BC2200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4BC2564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ____disassociateAccessoryIfSupported_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id __createAccessoryBrowserAddAccessoryCompletionHandler(id val, void *a2, void *a3, void *a4, void *a5)
{
  objc_initWeak(&location, val);
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  void v19[2] = ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke;
  v19[3] = &unk_1E6A07640;
  id v20 = v9;
  id v21 = v11;
  id v22 = v12;
  id v13 = v12;
  id v14 = v11;
  id v15 = v9;
  objc_copyWeak(&v24, &location);
  id v23 = v10;
  id v16 = v10;
  id v17 = _Block_copy(v19);

  objc_destroyWeak(&v24);
  objc_destroyWeak(&location);
  return v17;
}

void ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke(id *a1, void *a2, void *a3, uint64_t a4, unsigned int a5, unsigned int a6, void *a7, void *a8)
{
  uint64_t v91 = *MEMORY[0x1E4F143B8];
  id v12 = a2;
  id v70 = a3;
  id v13 = a7;
  id v68 = a8;
  id v14 = [a1[4] accessoryUUID];

  if (v70 && !v14) {
    [a1[4] setAccessoryUUID:v70];
  }
  [a1[5] pairedToServer:v12 certificationStatus:a4 addedViaWAC:a5 legacyWAC:a6];
  objc_msgSend(a1[5], "setAuthenticationMethod:", objc_msgSend(v12, "authMethod"));
  id v15 = objc_alloc(MEMORY[0x1E4F653F0]);
  id v16 = [NSString stringWithFormat:@"%s(), %s:%ld", "HMDAccessoryBrowserAddAccessoryCompletionHandler __createAccessoryBrowserAddAccessoryCompletionHandler(HMDHome *__weak, HMSetupAccessoryDescription *__strong, HMDUnpairedHAPAccessoryConfiguration *__strong, HMDAccessoryPairingEvent *__strong, HMFMessage *__strong)_block_invoke", "/Library/Caches/com.apple.xbs/Sources/HomeKit_executables_legacy/Sources/homed/Home/HMDHome.m", 11264];
  id v17 = [a1[6] activity];
  id v80 = (id)[v15 initWithName:v16 parent:v17];

  id WeakRetained = objc_loadWeakRetained(a1 + 8);
  uint64_t v19 = WeakRetained;
  if (!v13 && WeakRetained)
  {
    id v20 = [WeakRetained workQueue];
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke_4289;
    block[3] = &unk_1E6A07618;
    id v72 = v80;
    id v73 = v19;
    id v74 = a1[4];
    id v75 = a1[7];
    id v76 = a1[5];
    id v77 = v12;
    uint64_t v79 = a4;
    id v78 = a1[6];
    dispatch_async(v20, block);

    id v21 = 0;
    id v22 = v72;
    goto LABEL_37;
  }
  if (!WeakRetained)
  {
    uint64_t v23 = [MEMORY[0x1E4F28C58] hmErrorWithCode:2];

    id v13 = (id)v23;
  }
  id v22 = [a1[5] vendorDetailsForReporting];
  id v24 = v13;
  id v21 = v24;
  int v25 = v24;
  if (v19)
  {
    int v25 = v24;
    if ([v24 code] == 2010)
    {
      __int16 v26 = [v19 threadNetworkID];

      if (v26) {
        uint64_t v27 = 2009;
      }
      else {
        uint64_t v27 = 2010;
      }
      int v25 = [MEMORY[0x1E4F28C58] hmPrivateErrorWithCode:v27];
    }
  }
  __int16 v28 = (void *)MEMORY[0x1D9452090]();
  id v29 = v19;
  HMFGetOSLogHandle();
  uint64_t v30 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
  {
    BOOL v31 = HMFGetLogIdentifier();
    *(_DWORD *)long long buf = 138544386;
    unint64_t v82 = v31;
    __int16 v83 = 2112;
    id v84 = v70;
    __int16 v85 = 2112;
    uint64_t v86 = v21;
    __int16 v87 = 2112;
    id v88 = v25;
    __int16 v89 = 2112;
    id v90 = v68;
    _os_log_impl(&dword_1D49D5000, v30, OS_LOG_TYPE_INFO, "%{public}@Add accessory completion handler for accessory uuid %@ error %@ mapped error %@ context %@", buf, 0x34u);
  }
  if ([a1[5] isMatterAccessory] && objc_msgSend(a1[5], "isAddOperation"))
  {
    if (!v68)
    {
      context = (void *)MEMORY[0x1D9452090]();
      id v32 = v29;
      HMFGetOSLogHandle();
      uint64_t v33 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
      {
        uint64_t v34 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        unint64_t v82 = v34;
        _os_log_impl(&dword_1D49D5000, v33, OS_LOG_TYPE_ERROR, "%{public}@Matter pairing end context is nil", buf, 0xCu);
      }
    }
    if (![v68 isCancelled])
    {
      notifyMatterMetricPairingEnded(v29, v68);
      goto LABEL_29;
    }
    id v35 = v29;
    id v62 = v68;
    contexta = (void *)MEMORY[0x1D9452090]();
    id v36 = v35;
    uint64_t v37 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
    {
      int v38 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      unint64_t v82 = v38;
      __int16 v83 = 2112;
      id v84 = v62;
      _os_log_impl(&dword_1D49D5000, v37, OS_LOG_TYPE_INFO, "%{public}@Notifying matter metric pairing cancelled %@", buf, 0x16u);
    }
    contextb = [MEMORY[0x1E4F1CA60] dictionary];
    [contextb setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:@"HMDMatterAccessoryPairingSubmitKey"];
    uint64_t v39 = [v62 error];
    [contextb setObject:v39 forKeyedSubscript:@"HMDMatterAccessoryPairingFailureErrorKey"];

    id v40 = [v62 sourceErrorDomain];
    [contextb setObject:v40 forKeyedSubscript:@"HMDMatterAccessoryPairingSourceErrorDomain"];

    uint64_t v41 = [MEMORY[0x1E4F28EB8] defaultCenter];
    uint64_t v42 = (void *)[contextb copy];
    [v41 postNotificationName:@"HMDMatterAccessoryUpdatePairingMetricNotification" object:0 userInfo:v42];
  }
  else
  {
    id v36 = [v29 logEventSubmitter];
    [v36 submitLogEvent:a1[5] error:v25];
  }

LABEL_29:
  int8x16_t v43 = (void *)MEMORY[0x1D9452090]();
  id v44 = v29;
  HMFGetOSLogHandle();
  int v45 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v45, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v46 = HMFGetLogIdentifier();
    id v47 = a1[4];
    *(_DWORD *)long long buf = 138543874;
    unint64_t v82 = v46;
    __int16 v83 = 2112;
    id v84 = v47;
    __int16 v85 = 2112;
    uint64_t v86 = v25;
    _os_log_impl(&dword_1D49D5000, v45, OS_LOG_TYPE_DEBUG, "%{public}@Failed to add accessory %@ with error: %@", buf, 0x20u);
  }
  id v48 = v80;
  [v12 category];

  [v22 model];
  [v22 manufacturer];

  [v22 firmwareVersion];
  [a1[5] linkType];
  id v49 = (id)HAPLinkTypeDescription();
  id v50 = (id)HMFBooleanToString();
  id v51 = (id)HMFBooleanToString();
  id v52 = (id)[NSNumber numberWithInteger:a4];
  [v25 domain];

  [v25 code];
  [a1[5] isThreadAccessory];
  id v53 = (id)HMFBooleanToString();
  [a1[5] accessorySupportsWoL];
  id v54 = (id)HMFBooleanToString();

  uint64_t v55 = [a1[6] responseHandler];

  if (v55)
  {
    int v56 = [a1[6] responseHandler];
    ((void (**)(void, void *, void))v56)[2](v56, v25, 0);
  }
  if (v19)
  {
    [v44 _removePendingAccessoryAdd:a1[4]];
    uint64_t v57 = [v44 accessoryBrowser];
    [v57 removePairingInformationForAccessoryServer:v12];

    id v58 = [a1[7] networkCredential];
    uint64_t v59 = [v58 clientIdentifier];

    if (v59)
    {
      uint64_t v60 = [a1[7] networkCredential];
      BOOL v61 = [v60 clientIdentifier];
      [v44 _removeClientConfigurationWithIdentifier:v61];
    }
  }

LABEL_37:
  __HMFActivityScopeLeave();
}

void sub_1D4BC937C(_Unwind_Exception *a1)
{
}

void ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke_4289(uint64_t a1)
{
  [*(id *)(a1 + 32) begin];
  id v2 = *(id *)(a1 + 32);
  [*(id *)(a1 + 40) _accessoryPairingDidComplete:*(void *)(a1 + 48) configuration:*(void *)(a1 + 56) pairingEvent:*(void *)(a1 + 64) accessoryServer:*(void *)(a1 + 72) certificationStatus:*(void *)(a1 + 88) requestMessage:*(void *)(a1 + 80)];
  __HMFActivityScopeLeave();
}

void sub_1D4BC9424(_Unwind_Exception *a1)
{
}

void sub_1D4BC9AA8(_Unwind_Exception *a1)
{
}

id HMDHomeCreateAddAccessoryProgressHandler(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  objc_initWeak(&location, v5);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __HMDHomeCreateAddAccessoryProgressHandler_block_invoke;
  aBlock[3] = &unk_1E6A06B80;
  id v14 = v5;
  id v8 = v5;
  objc_copyWeak(&v17, &location);
  id v15 = v6;
  id v16 = v7;
  id v9 = v7;
  id v10 = v6;
  id v11 = _Block_copy(aBlock);

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);
  return v11;
}

void sub_1D4BC9F98(_Unwind_Exception *a1)
{
}

void __HMDHomeCreateAddAccessoryProgressHandler_block_invoke(id *a1, uint64_t a2, void *a3)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = (void *)MEMORY[0x1D9452090]();
  id v7 = a1[4];
  id v8 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    id v9 = HMFGetLogIdentifier();
    id v10 = HMSetupAccessoryProgressAsString();
    *(_DWORD *)long long buf = 138543618;
    id v77 = v9;
    __int16 v78 = 2112;
    uint64_t v79 = v10;
    _os_log_impl(&dword_1D49D5000, v8, OS_LOG_TYPE_INFO, "%{public}@Progress Handler called with progress: %@", buf, 0x16u);
  }
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  if (WeakRetained)
  {
    id v12 = [v5 accessoryUUID];
    uint64_t v73 = a2;
    if (v12
      || ([a1[5] addRequestIdentifier],
          id v13 = objc_claimAutoreleasedReturnValue(),
          v13,
          v13))
    {
      unint64_t v71 = a1;
      id v14 = (void *)MEMORY[0x1D9452090]();
      id v69 = WeakRetained;
      id v15 = WeakRetained;
      id v16 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        id v17 = HMFGetLogIdentifier();
        id v18 = HMSetupAccessoryProgressAsString();
        *(_DWORD *)long long buf = 138543618;
        id v77 = v17;
        __int16 v78 = 2112;
        uint64_t v79 = v18;
        _os_log_impl(&dword_1D49D5000, v16, OS_LOG_TYPE_INFO, "%{public}@Posting accessory pairing state progress notification to %@", buf, 0x16u);

        a2 = v73;
      }

      uint64_t v19 = [MEMORY[0x1E4F28EB8] defaultCenter];
      v74[0] = @"HMDSetupAccessoryProgressStateKey";
      id v20 = [NSNumber numberWithInteger:a2];
      v75[0] = v20;
      v74[1] = @"HMDAccessoryProgressStateNotificationKey";
      id v21 = HMSetupAccessoryProgressAsString();
      v75[1] = v21;
      v74[2] = @"HMDAccessoryProgressStateTimeNotificationKey";
      id v22 = [MEMORY[0x1E4F1C9C8] date];
      v75[2] = v22;
      v74[3] = @"HMDAccessoryProgressStateforAccessoryKey";
      if (v12)
      {
        [v12 UUIDString];
      }
      else
      {
        id v16 = [v71[5] addRequestIdentifier];
        [v16 UUIDString];
      uint64_t v23 = };
      v75[3] = v23;
      id v24 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v75 forKeys:v74 count:4];
      [v19 postNotificationName:@"HMDAccessoryProgressStateUpdateNotification" object:v15 userInfo:v24];

      if (!v12)
      {

        uint64_t v23 = v16;
      }

      id WeakRetained = v69;
      a1 = v71;
      a2 = v73;
    }
    int v25 = [MEMORY[0x1E4F1CA60] dictionaryWithCapacity:4];
    __int16 v26 = [v5 accessoryName];

    if (v26)
    {
      uint64_t v27 = [v5 accessoryName];
      [v25 setObject:v27 forKeyedSubscript:@"kAccessoryName"];
    }
    __int16 v28 = [v5 accessoryUUID];

    if (v28)
    {
      id v29 = [v5 accessoryUUID];
      uint64_t v30 = [v29 UUIDString];
      [v25 setObject:v30 forKeyedSubscript:@"kAccessoryUUID"];
    }
    BOOL v31 = [v5 manufacturerName];

    if (v31)
    {
      id v32 = [v5 manufacturerName];
      [v25 setObject:v32 forKeyedSubscript:@"kAccessoryInfoManufacturerKey"];
    }
    uint64_t v33 = [v5 category];

    if (v33)
    {
      uint64_t v34 = [v5 category];
      id v35 = encodeRootObjectForIncomingXPCMessage(v34, 0);
      [v25 setObject:v35 forKeyedSubscript:@"kAccessoryCategory"];
    }
    if (a2 == 9)
    {
      uint64_t v41 = [WeakRetained wiFiRouterAccessories];
      uint64_t v37 = [v41 firstObject];

      if (v37)
      {
        uint64_t v42 = [v37 uuid];
        int8x16_t v43 = [v42 UUIDString];
        [v25 setObject:v43 forKeyedSubscript:*MEMORY[0x1E4F2D670]];

LABEL_41:
LABEL_42:
        id v62 = [NSNumber numberWithInteger:a2];
        [v25 setObject:v62 forKeyedSubscript:@"kAccessorySetupProgressKey"];

        unint64_t v63 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v5, "certificationStatus"));
        [v25 setObject:v63 forKeyedSubscript:@"kAccessoryCertificationStatusKey"];

        unint64_t v64 = (void *)MEMORY[0x1E4F654B0];
        uint64_t v65 = *MEMORY[0x1E4F2EC58];
        int v66 = [WeakRetained messageDestination];
        uint64_t v37 = [v64 messageWithName:v65 destination:v66 payload:v25];

        uint64_t v67 = [a1[6] identifier];
        [v37 setIdentifier:v67];

        [v37 setRequiresSPIEntitlement];
        id v68 = [a1[6] transport];
        [v37 setTransport:v68];

        uint64_t v39 = [WeakRetained msgDispatcher];
        [v39 sendMessage:v37 completionHandler:0];
        goto LABEL_43;
      }
      id v44 = (void *)MEMORY[0x1D9452090]();
      id v45 = WeakRetained;
      uint64_t v46 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
      {
        id v47 = HMFGetLogIdentifier();
        id v48 = HMSetupAccessoryProgressAsString();
        *(_DWORD *)long long buf = 138543618;
        id v77 = v47;
        __int16 v78 = 2112;
        uint64_t v79 = v48;
        _os_log_impl(&dword_1D49D5000, v46, OS_LOG_TYPE_INFO, "%{public}@Progress is %@ but no accessory being replaced", buf, 0x16u);
      }
      uint64_t v37 = 0;
    }
    else
    {
      if (a2 != 8) {
        goto LABEL_42;
      }
      id v36 = [v5 productData];

      if (!v36) {
        goto LABEL_42;
      }
      uint64_t v37 = +[HMDVendorDataManager sharedVendorDataManager];
      int v38 = [v5 productData];
      uint64_t v39 = [v37 vendorModelEntryForProductData:v38];

      id v40 = [a1[5] addRequestIdentifier];
      if (v40)
      {

LABEL_43:
        goto LABEL_44;
      }
      id v49 = [a1[5] appIdentifier];
      id v50 = [v39 appBundleID];
      char v51 = [v49 isEqual:v50];

      if (v51) {
        goto LABEL_43;
      }
      uint64_t v52 = [v39 appStoreID];
      if (v52
        && (id v53 = (void *)v52,
            [v39 appBundleID],
            id v54 = objc_claimAutoreleasedReturnValue(),
            v54,
            v53,
            v54))
      {
        uint64_t v55 = [v39 appStoreID];
        [v25 setObject:v55 forKeyedSubscript:@"kAccessoryVendorInfoStoreIDKey"];

        int v56 = [v39 appBundleID];
        [v25 setObject:v56 forKeyedSubscript:@"kAccessoryVendorInfoBundleIDKey"];
      }
      else
      {
        id v72 = a1;
        uint64_t v57 = (void *)MEMORY[0x1D9452090]();
        id v70 = WeakRetained;
        id v58 = WeakRetained;
        uint64_t v59 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v59, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v60 = HMFGetLogIdentifier();
          BOOL v61 = [v5 productData];
          *(_DWORD *)long long buf = 138543618;
          id v77 = v60;
          __int16 v78 = 2112;
          uint64_t v79 = v61;
          _os_log_impl(&dword_1D49D5000, v59, OS_LOG_TYPE_DEBUG, "%{public}@No appID/bundleID found for productData: %@", buf, 0x16u);
        }
        id WeakRetained = v70;
        a1 = v72;
      }
    }
    a2 = v73;
    goto LABEL_41;
  }
LABEL_44:
}

void sub_1D4BCB120(_Unwind_Exception *a1)
{
}

void sub_1D4BCB658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4BCB8E4(_Unwind_Exception *a1)
{
}

void sub_1D4BCBBEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4BCCD30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id location)
{
}

void sub_1D4BCD4EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1D4BCDAFC(_Unwind_Exception *a1)
{
}

void sub_1D4BCE480(_Unwind_Exception *a1)
{
}

void sub_1D4BCF2EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4BCF7EC(_Unwind_Exception *a1)
{
}

void sub_1D4BCFEB4(_Unwind_Exception *a1)
{
}

uint64_t _mediaSystemsContainsAccessory(void *a1, void *a2)
{
  id v3 = a2;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  _DWORD v7[2] = ___mediaSystemsContainsAccessory_block_invoke;
  v7[3] = &unk_1E6A0A830;
  id v8 = v3;
  id v4 = v3;
  uint64_t v5 = objc_msgSend(a1, "na_any:", v7);

  return v5;
}

uint64_t ___mediaSystemsContainsAccessory_block_invoke(uint64_t a1, void *a2)
{
  return _mediaSystemContainsAccessory(a2, *(void **)(a1 + 32));
}

uint64_t _mediaSystemContainsAccessory(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = [a1 components];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = ___mediaSystemContainsAccessory_block_invoke;
  void v8[3] = &unk_1E6A075F0;
  id v9 = v3;
  id v5 = v3;
  uint64_t v6 = objc_msgSend(v4, "na_any:", v8);

  return v6;
}

uint64_t ___mediaSystemContainsAccessory_block_invoke(uint64_t a1, void *a2)
{
  id v3 = [a2 accessory];
  id v4 = [v3 uuid];
  id v5 = [*(id *)(a1 + 32) uuid];
  uint64_t v6 = objc_msgSend(v4, "hmf_isEqualToUUID:", v5);

  return v6;
}

void sub_1D4BD2430(_Unwind_Exception *a1)
{
}

void sub_1D4BDA6C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4BDCA5C(_Unwind_Exception *a1)
{
}

void sub_1D4BDDBD4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4BDDD28(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4BDE21C(_Unwind_Exception *a1)
{
}

void sub_1D4BDE2A8(_Unwind_Exception *a1)
{
}

void sub_1D4BDE394(_Unwind_Exception *a1)
{
}

void sub_1D4BDFE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4BDFFD4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1D4BE14E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4BEC330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id *location,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a70);
  _Unwind_Resume(a1);
}

void sub_1D4BEE2E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1D4BEE580(_Unwind_Exception *a1)
{
}

void sub_1D4BEFE7C(_Unwind_Exception *a1)
{
}

void sub_1D4BEFF20(_Unwind_Exception *a1)
{
}

void sub_1D4BEFFC4(_Unwind_Exception *a1)
{
}

void sub_1D4BF00B4(_Unwind_Exception *a1)
{
}

void sub_1D4BF0228(_Unwind_Exception *exception_object)
{
}

void sub_1D4BF0388(_Unwind_Exception *a1)
{
}

void sub_1D4BF2ECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,id *location)
{
  objc_destroyWeak(v45);
  objc_destroyWeak((id *)(v46 - 144));
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v46 - 168));
  _Unwind_Resume(a1);
}

void __notifyRegisteredIdentityRemoved(void *a1, void *a2)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 && v4)
  {
    uint64_t v6 = (void *)MEMORY[0x1D9452090]();
    id v7 = v3;
    id v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      id v9 = HMFGetLogIdentifier();
      int v24 = 138543618;
      int v25 = v9;
      __int16 v26 = 2112;
      uint64_t v27 = v5;
      _os_log_impl(&dword_1D49D5000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Notifying of removed identity: %@", (uint8_t *)&v24, 0x16u);
    }
    uint64_t v10 = [MEMORY[0x1E4F1CA60] dictionaryWithCapacity:3];
    id v11 = [v5 identity];
    [v10 setObject:v11 forKeyedSubscript:@"HMDIdentityNotificationKey"];

    id v12 = v5;
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    if (isKindOfClass) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = 0;
    }
    id v15 = v14;

    if (isKindOfClass)
    {
      id v16 = [v12 device];
      [v10 setObject:v16 forKeyedSubscript:@"HMDDeviceNotificationKey"];
    }
    id v17 = v12;
    objc_opt_class();
    char v18 = objc_opt_isKindOfClass();
    if (v18) {
      uint64_t v19 = v17;
    }
    else {
      uint64_t v19 = 0;
    }
    id v20 = v19;

    if (v18)
    {
      id v21 = [v17 account];
      [v10 setObject:v21 forKeyedSubscript:@"HMDAccountNotificationKey"];
    }
    id v22 = [MEMORY[0x1E4F28EB8] defaultCenter];
    uint64_t v23 = (void *)[v10 copy];
    [v22 postNotificationName:@"HMDIdentityRegistryRemovedIdentity" object:v7 userInfo:v23];
  }
}

void __removeRegisteredObjectForRegisteredIdentity(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = v7;
  if (v5 && v6 && v7)
  {
    id v9 = [v5 lock];
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    void v10[2] = ____removeRegisteredObjectForRegisteredIdentity_block_invoke;
    v10[3] = &unk_1E6A19668;
    id v11 = v6;
    id v12 = v8;
    id v13 = v5;
    [v9 performBlock:v10];
  }
}

void ____removeRegisteredObjectForRegisteredIdentity_block_invoke(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v2 = [*(id *)(a1 + 32) registeredObjects];
  [v2 removeObject:*(void *)(a1 + 40)];

  id v3 = [*(id *)(a1 + 32) registeredObjects];
  int v4 = objc_msgSend(v3, "hmf_isEmpty");

  if (v4)
  {
    id v5 = (void *)MEMORY[0x1D9452090]();
    id v6 = *(id *)(a1 + 48);
    id v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id v8 = HMFGetLogIdentifier();
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138543618;
      id v11 = v8;
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_impl(&dword_1D49D5000, v7, OS_LOG_TYPE_INFO, "%{public}@Removing registered identity, %@", (uint8_t *)&v10, 0x16u);
    }
    [*(id *)(*(void *)(a1 + 48) + 8) removeObject:*(void *)(a1 + 32)];
    __notifyRegisteredIdentityRemoved(*(void **)(a1 + 48), *(void **)(a1 + 32));
  }
}

id __registeredIdentitiesForIdentity(void *a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  id v6 = 0;
  if (v3 && v4)
  {
    id v7 = [MEMORY[0x1E4F1CA48] array];
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v8 = v3[1];
    uint64_t v9 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v18;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v18 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = *(void **)(*((void *)&v17 + 1) + 8 * i);
          uint64_t v14 = objc_msgSend(v13, "identity", (void)v17);
          int v15 = [v14 isEqual:v5];

          if (v15) {
            [v7 addObject:v13];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
      }
      while (v10);
    }

    id v6 = (void *)[v7 copy];
  }

  return v6;
}

void __notifyRegisteredIdentityAdded(void *a1, void *a2)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 && v4)
  {
    id v6 = (void *)MEMORY[0x1D9452090]();
    id v7 = v3;
    id v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v9 = HMFGetLogIdentifier();
      int v24 = 138543618;
      int v25 = v9;
      __int16 v26 = 2112;
      uint64_t v27 = v5;
      _os_log_impl(&dword_1D49D5000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Notifying of added identity: %@", (uint8_t *)&v24, 0x16u);
    }
    uint64_t v10 = [MEMORY[0x1E4F1CA60] dictionaryWithCapacity:3];
    uint64_t v11 = [v5 identity];
    [v10 setObject:v11 forKeyedSubscript:@"HMDIdentityNotificationKey"];

    id v12 = v5;
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    if (isKindOfClass) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = 0;
    }
    id v15 = v14;

    if (isKindOfClass)
    {
      id v16 = [v12 device];
      [v10 setObject:v16 forKeyedSubscript:@"HMDDeviceNotificationKey"];
    }
    id v17 = v12;
    objc_opt_class();
    char v18 = objc_opt_isKindOfClass();
    if (v18) {
      long long v19 = v17;
    }
    else {
      long long v19 = 0;
    }
    id v20 = v19;

    if (v18)
    {
      id v21 = [v17 account];
      [v10 setObject:v21 forKeyedSubscript:@"HMDAccountNotificationKey"];
    }
    uint64_t v22 = [MEMORY[0x1E4F28EB8] defaultCenter];
    uint64_t v23 = (void *)[v10 copy];
    [v22 postNotificationName:@"HMDIdentityRegistryAddedIdentity" object:v7 userInfo:v23];
  }
}

void __registerObjectForRegisteredIdentity(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = v7;
  if (v5 && v6 && v7)
  {
    uint64_t v9 = (void *)MEMORY[0x1D9452090]();
    uint64_t v10 = [v6 registeredObjects];
    char v11 = [v10 containsObject:v8];

    if ((v11 & 1) == 0)
    {
      objc_initWeak(&location, v5);
      objc_initWeak(&v22, v8);
      objc_initWeak(&from, v6);
      uint64_t v14 = MEMORY[0x1E4F143A8];
      uint64_t v15 = 3221225472;
      id v16 = ____registerObjectForRegisteredIdentity_block_invoke;
      id v17 = &unk_1E6A114B8;
      objc_copyWeak(&v18, &location);
      objc_copyWeak(&v19, &from);
      objc_copyWeak(&v20, &v22);
      [v8 setDeallocationBlock:&v14];
      id v12 = objc_msgSend(v8, "observedObject", v14, v15, v16, v17);

      if (v12)
      {
        uint64_t v13 = [v6 registeredObjects];
        [v13 addObject:v8];
      }
      else
      {
        __removeRegisteredObjectForRegisteredIdentity(v5, v6, v8);
      }
      objc_destroyWeak(&v20);
      objc_destroyWeak(&v19);
      objc_destroyWeak(&v18);
      objc_destroyWeak(&from);
      objc_destroyWeak(&v22);
      objc_destroyWeak(&location);
    }
  }
}

void sub_1D4BF82B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17, id a18)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void ____registerObjectForRegisteredIdentity_block_invoke(id *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id WeakRetained = objc_loadWeakRetained(a1 + 4);
  id v3 = objc_loadWeakRetained(a1 + 5);
  id v4 = objc_loadWeakRetained(a1 + 6);
  id v5 = v4;
  if (WeakRetained && v3 && v4)
  {
    id v6 = (void *)MEMORY[0x1D9452090]();
    id v7 = WeakRetained;
    id v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v9 = HMFGetLogIdentifier();
      int v10 = 138543618;
      char v11 = v9;
      __int16 v12 = 2112;
      id v13 = v3;
      _os_log_impl(&dword_1D49D5000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Registered object deallocated, removing object from identity: %@", (uint8_t *)&v10, 0x16u);
    }
    __removeRegisteredObjectForRegisteredIdentity(v7, v3, v5);
  }
}

void sub_1D4BF89E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__11390(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11391(uint64_t a1)
{
}

void sub_1D4BF8D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4BF9084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4BF93C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4BF9944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4BF9CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4BFFF28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4C00DF0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C00EB0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C01F88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C02168(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C0273C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C02A90(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C02D14(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C03C84(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C04758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C083B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *location, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
}

void sub_1D4C08FC8(_Unwind_Exception *a1)
{
}

uint64_t __Block_byref_object_copy__13203(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__13204(uint64_t a1)
{
}

void sub_1D4C09C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,id location)
{
}

id actionResultForAction(void *a1)
{
  uint64_t v1 = (objc_class *)MEMORY[0x1E4F96670];
  id v2 = a1;
  id v3 = objc_alloc_init(v1);
  id v4 = [v2 aceId];

  [v3 setRequestActionId:v4];
  return v3;
}

uint64_t isActivationCharacteristicType(void *a1)
{
  id v1 = a1;
  if ([v1 isEqual:*MEMORY[0x1E4F2CF70]]) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = [v1 isEqual:*MEMORY[0x1E4F2CE48]];
  }

  return v2;
}

uint64_t isOutcomeSuccess(void *a1)
{
  id v1 = a1;
  if (([v1 isEqualToString:*MEMORY[0x1E4F96D58]] & 1) != 0
    || ([v1 isEqualToString:*MEMORY[0x1E4F96CC8]] & 1) != 0
    || ([v1 isEqualToString:*MEMORY[0x1E4F96CD0]] & 1) != 0
    || ([v1 isEqualToString:*MEMORY[0x1E4F96D48]] & 1) != 0)
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = [v1 isEqualToString:*MEMORY[0x1E4F96D40]];
  }

  return v2;
}

void sub_1D4C0F5A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id *location)
{
  objc_destroyWeak((id *)(v29 - 208));
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

id getActivationCharacteristicFromServiceIfAny(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "characteristics", 0);
  id v2 = (id)[v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v2; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v10 != v3) {
          objc_enumerationMutation(v1);
        }
        id v5 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        id v6 = [v5 type];
        int v7 = isActivationCharacteristicType(v6);

        if (v7)
        {
          id v2 = v5;
          goto LABEL_11;
        }
      }
      id v2 = (id)[v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  return v2;
}

void sub_1D4C1031C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C11D54(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1D4C128F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,id location)
{
  objc_destroyWeak(v49);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C13EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,id location)
{
}

void sub_1D4C14938(_Unwind_Exception *a1)
{
}

void sub_1D4C15CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t isTemperatureAttribute(void *a1)
{
  id v1 = a1;
  if (([v1 isEqualToString:*MEMORY[0x1E4F96E60]] & 1) != 0
    || ([v1 isEqualToString:*MEMORY[0x1E4F96E10]] & 1) != 0
    || ([v1 isEqualToString:*MEMORY[0x1E4F96E28]] & 1) != 0
    || ([v1 isEqualToString:*MEMORY[0x1E4F96E18]] & 1) != 0)
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = [v1 isEqualToString:*MEMORY[0x1E4F96E30]];
  }

  return v2;
}

uint64_t temperatureConversionIsNeeded(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (!v1)
  {
    if (isMetricLocale_onceToken != -1) {
      dispatch_once(&isMetricLocale_onceToken, &__block_literal_global_131496);
    }
    if (!isMetricLocale_isMetricLocale) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (([v1 isEqualToString:*MEMORY[0x1E4F971C8]] & 1) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = 1;
LABEL_8:

  return v3;
}

void sub_1D4C1C894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4C1CA48(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C1EFB4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4C1F584(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4C1F6BC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

__CFString *HMDUserSettingsBackingStoreControllerRunStateAsString(unint64_t a1)
{
  if (a1 >= 3)
  {
    uint64_t v2 = NSString;
    uint64_t v3 = [NSNumber numberWithInteger:a1];
    uint64_t v1 = [v2 stringWithFormat:@"Unknown state %@", v3];
  }
  else
  {
    uint64_t v1 = off_1E6A07A30[a1];
  }
  return v1;
}

void sub_1D4C28770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C28FCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

HMDHTTPDevice *__httpDeviceForNetService(void *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = objc_alloc(MEMORY[0x1E4F29128]);
  id v6 = [v3 name];
  int v7 = (void *)[v5 initWithUUIDString:v6];

  if (v7)
  {
    id v8 = [[HMDHTTPDevice alloc] initWithIdentifier:v7];
  }
  else
  {
    long long v9 = (void *)MEMORY[0x1D9452090]();
    id v10 = v4;
    long long v11 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      long long v12 = HMFGetLogIdentifier();
      id v13 = [v3 name];
      int v15 = 138543618;
      id v16 = v12;
      __int16 v17 = 2112;
      id v18 = v13;
      _os_log_impl(&dword_1D49D5000, v11, OS_LOG_TYPE_INFO, "%{public}@Unable to parse UUID from net service name %@", (uint8_t *)&v15, 0x16u);
    }
    id v8 = 0;
  }

  return v8;
}

void sub_1D4C298D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C2A870(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C2A900(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C2A990(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C2AC78(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C2AD04(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C2B17C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C2B23C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C2B2B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C2B62C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C2BDAC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_1D4C2D100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C30510(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 120));
  _Block_object_dispose((const void *)(v3 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1D4C315A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C3211C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__14998(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14999(uint64_t a1)
{
}

void sub_1D4C327F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C3385C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C341CC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1D4C343CC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1D4C36DBC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C36F54(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C370B0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

Class __getRadarDraftClass_block_invoke(uint64_t a1)
{
  TapToRadarKitLibrary();
  Class result = objc_getClass("RadarDraft");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getRadarDraftClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__getRadarComponentClass_block_invoke(v3);
  }
  return result;
}

Class __getRadarComponentClass_block_invoke(uint64_t a1)
{
  TapToRadarKitLibrary();
  Class result = objc_getClass("RadarComponent");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getRadarComponentClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__125__HMDTTRManager_initiateRadarWithTitle_componentName_componentVersion_componentID_displayReason_attachments_isUserInitiated___block_invoke(v3);
  }
  return result;
}

void TapToRadarKitLibrary()
{
  if (!TapToRadarKitLibraryCore())
  {
    id v0 = (void *)abort_report_np();
    free(v0);
  }
}

uint64_t TapToRadarKitLibraryCore()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = 0;
  uint64_t v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = TapToRadarKitLibraryCore_frameworkLibrary;
  uint64_t v5 = TapToRadarKitLibraryCore_frameworkLibrary;
  if (!TapToRadarKitLibraryCore_frameworkLibrary)
  {
    long long v6 = xmmword_1E6A07C00;
    long long v7 = *(_OWORD *)&off_1E6A07C10;
    v3[3] = _sl_dlopen();
    TapToRadarKitLibraryCore_frameworkLibrary = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_1D4C3E844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __TapToRadarKitLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  TapToRadarKitLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1D4C3F10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getTapToRadarServiceClass_block_invoke(uint64_t a1)
{
  TapToRadarKitLibrary();
  Class result = objc_getClass("TapToRadarService");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getTapToRadarServiceClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (void *)abort_report_np();
    return (Class)+[HMDTTRManager queue];
  }
  return result;
}

void sub_1D4C45890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

uint64_t __Block_byref_object_copy__16722(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__16723(uint64_t a1)
{
}

void sub_1D4C476B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1D4C47D04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1D4C48884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4C49540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1D4C49C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location,char a29)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1D4C4DB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t __Block_byref_object_copy__17325(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__17326(uint64_t a1)
{
}

void sub_1D4C4F9F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t HMDIsSiriClientIdentifier(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"com.apple.Siri"]) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = [v1 isEqualToString:@"assistant_service"];
  }

  return v2;
}

uint64_t HMDIsFirstPartyClientIdentifier(void *a1)
{
  id v1 = a1;
  if (HMDIsFirstPartyClientIdentifier_onceToken != -1) {
    dispatch_once(&HMDIsFirstPartyClientIdentifier_onceToken, &__block_literal_global_17738);
  }
  if (([v1 hasPrefix:@"com.apple."] & 1) != 0
    || ([v1 hasPrefix:@"apple."] & 1) != 0)
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = [(id)HMDIsFirstPartyClientIdentifier_knownClientIdentifiers containsObject:v1];
  }

  return v2;
}

uint64_t __HMDIsFirstPartyClientIdentifier_block_invoke()
{
  objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", @"accountsd", @"amsaccountsd", @"announced", @"assistant_service", @"assistantd", @"Carousel", @"CarPlay", @"cloudmediaservicesd", @"companiond", @"coordinated", @"coreautomationd", @"diagnosticextensionsd", @"hdsutil", @"HDSViewService", @"HomeAppIntentsExtension", @"homeenergyd", @"homehubd",
    @"HomeIntegrationTests-Runner",
    @"HomeKitDiagnosticExtension",
    @"HomeKitIntentExtension",
    @"homepodsensoryreporterd",
    @"homepodsettingsd",
    @"homeutil",
    @"itunescloudd",
    @"knowledgeconstructiond",
    @"mediaanalysisd-service",
    @"mediaanalysisd",
    @"mediaremoted",
    @"mediasetupd",
    @"passd",
    @"PineBoard",
    @"proximitycontrold",
    @"rapportd",
    @"seserviced",
    @"sharingd",
    @"Shortcuts",
    @"Siri Debug",
    @"siri",
    @"siriinferenced",
    @"siriknowledged",
    @"sirittsd",
    @"SiriUI",
    @"SiriUserFeedbackLearningUnivers",
    @"SoundBoard",
    @"SpringBoard",
    @"taptoradard",
    @"tvairplayd",
    @"tvremoted",
    @"tvsetuputil",
    @"userprofilesd",
    @"voiced",
    @"wifid",
  HMDIsFirstPartyClientIdentifier_knownClientIdentifiers = 0);
  return MEMORY[0x1F41817F8]();
}

__CFString *HMDRequestSourceAsString(unint64_t a1)
{
  if (a1 > 9) {
    return @"Unknown";
  }
  else {
    return off_1E6A07FB8[a1];
  }
}

__CFString *HMDRequestSourceAsLegacyMetricString(unint64_t a1)
{
  if (a1 >= 0xA)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unexpected source value: %lu", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_1E6A08008[a1];
  }
  return v1;
}

void sub_1D4C52A64(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 128));
  _Unwind_Resume(a1);
}

void sub_1D4C5413C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C54A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C565B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C56980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C56FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18571(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18572(uint64_t a1)
{
}

void sub_1D4C5AA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18888(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18889(uint64_t a1)
{
}

void sub_1D4C60964(_Unwind_Exception *a1)
{
}

void sub_1D4C60A4C(_Unwind_Exception *a1)
{
}

void sub_1D4C60FE4(_Unwind_Exception *a1)
{
}

void sub_1D4C64E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C66EC8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4C6B3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  os_unfair_lock_unlock(v41);
  _Block_object_dispose(&a41, 8);
  _Unwind_Resume(a1);
}

void sub_1D4C6C09C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,os_unfair_lock_t lock)
{
}

void sub_1D4C6C374(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4C6CDD4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C6CF18(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C6DCFC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C6DEC8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C6E09C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  os_unfair_lock_unlock(v17);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1D4C6E414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  os_unfair_lock_unlock(v17);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1D4C6ED04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_1D4C6F408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_1D4C6F608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_1D4C6F724(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C6FA58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_1D4C6FC84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_1D4C6FECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_1D4C7004C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C700F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C701AC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C702FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id HMDLocalizedStringForKeyWithCount(void *a1, uint64_t a2)
{
  if (a2 == 1) {
    uint64_t v2 = @"_SINGULAR";
  }
  else {
    uint64_t v2 = @"_PLURAL";
  }
  uint64_t v3 = [a1 stringByAppendingString:v2];
  SEL v4 = HMDLocalizedStringForKey(v3);

  return v4;
}

void sub_1D4C70C14(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C70CA0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C71360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C73334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

uint64_t __Block_byref_object_copy__20883(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__20884(uint64_t a1)
{
}

void sub_1D4C74420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4C78774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_1D4C78AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_1D4C79638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_1D4C7A044(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C7A120(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C7A84C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_1D4C7A930(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C7AE4C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C7B3A0(_Unwind_Exception *exception_object)
{
}

void sub_1D4C7B5D0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C7BB38(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C7BC1C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C7BFA4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __HMDActionSetAddActionWithModel(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  if (v7)
  {
    id v10 = [v8 backedObjectWithParent:v7 error:a4];
    if (v10)
    {
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
      if (isKindOfClass) {
        long long v12 = v10;
      }
      else {
        long long v12 = 0;
      }
      id v13 = v12;
      if (isKindOfClass)
      {
        [v7 _handleAddNewAction:v10 message:v9];
      }
      else if (a4)
      {
        *a4 = [MEMORY[0x1E4F28C58] hmErrorWithCode:22];
      }
    }
    else
    {
      char isKindOfClass = 0;
    }
  }
  else if (a4)
  {
    [MEMORY[0x1E4F28C58] hmErrorWithCode:20];
    char isKindOfClass = 0;
    *a4 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    char isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

void sub_1D4C7EB70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
}

uint64_t __Block_byref_object_copy__22088(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__22089(uint64_t a1)
{
}

void sub_1D4C7F330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,id location,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
}

void sub_1D4C7FCD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  objc_destroyWeak(v43);
  objc_destroyWeak(&location);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1D4C814A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
}

void sub_1D4C817B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C847D0(_Unwind_Exception *a1)
{
}

void sub_1D4C8D564(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C8D5F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C8D68C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C8DA24(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C8DAB8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C8E768(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D4C8ED44(_Unwind_Exception *a1)
{
}

void sub_1D4C8F1C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1D4C8F578(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C95654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4C997BC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C99960(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C99AA4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C99BE4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C99CEC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C99E20(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C9A080(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C9A2A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_1D4C9A464(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C9A53C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C9A6FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C9A8C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C9AAB8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C9ACBC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C9B320(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C9B430(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4C9B750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_unfair_lock_t lock)
{
}

void sub_1D4C9E58C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

id findResidentDevice(void *a1, void *a2)
{
  id v3 = a2;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  _DWORD v7[2] = __findResidentDevice_block_invoke;
  v7[3] = &unk_1E6A0F028;
  id v8 = v3;
  id v4 = v3;
  uint64_t v5 = objc_msgSend(a1, "na_firstObjectPassingTest:", v7);

  return v5;
}

uint64_t __findResidentDevice_block_invoke(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  uint64_t v4 = objc_msgSend(v3, "hmf_isEqualToUUID:", *(void *)(a1 + 32));

  return v4;
}

void sub_1D4C9F848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4CA0DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CA13E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CA18E0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_1D4CA1DEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CA1EFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CA3244(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_1D4CA3624(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CA3C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id *location)
{
}

void sub_1D4CA45AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__24655(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__24656(uint64_t a1)
{
}

void sub_1D4CA54F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __parseGlobalDestination(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = v9;
  if (v9)
  {
    id v11 = v9;
    uint64_t v12 = [v11 rangeOfString:@"/"];
    id v13 = v11;
    if (v12 != 0x7FFFFFFFFFFFFFFFLL)
    {
      id v13 = [v11 substringToIndex:v12];
    }
    if ([v13 containsString:@"self-token:"])
    {
      uint64_t v14 = (void *)[v13 mutableCopy];
      objc_msgSend(v14, "replaceOccurrencesOfString:withString:options:range:", @"self-token:", @"token:", 1, 0, objc_msgSend(v14, "length"));
      uint64_t v15 = [v14 copy];

      id v13 = (void *)v15;
    }
    if (([v13 hasPrefix:@"token:"] & 1) == 0)
    {
      if (a5)
      {
        [MEMORY[0x1E4F28C58] hmErrorWithCode:19 description:@"Invalid destination." reason:@"Missing token prefix." suggestion:0];
        uint64_t v22 = 0;
        *a5 = (id)objc_claimAutoreleasedReturnValue();
LABEL_28:

        goto LABEL_29;
      }
LABEL_27:
      uint64_t v22 = 0;
      goto LABEL_28;
    }
    if (a2)
    {
      id v16 = objc_alloc(MEMORY[0x1E4F29128]);
      __int16 v17 = +[_HMDDeviceHandle identifierNamespace];
      id v18 = [v13 dataUsingEncoding:4];
      *a2 = (id)[v16 initWithNamespace:v17 data:v18];
    }
    uint64_t v19 = [v13 substringFromIndex:objc_msgSend(@"token:", "length")];
    if ([v19 length])
    {
      id v20 = objc_alloc(MEMORY[0x1E4F1C9B8]);
      id v21 = objc_msgSend(v20, "hmf_initWithHexadecimalString:options:", v19, 0);

      if (v21)
      {
        if (a3) {
          *a3 = v21;
        }

        if (a4)
        {
          *a4 = +[HMDAccountHandle accountHandleForDestination:v11];
        }
        uint64_t v22 = 1;
        goto LABEL_28;
      }
      if (!a5) {
        goto LABEL_26;
      }
      uint64_t v23 = (void *)MEMORY[0x1E4F28C58];
      int v24 = @"Invalid token string.";
      uint64_t v25 = 3;
    }
    else
    {
      if (!a5)
      {
LABEL_26:

        goto LABEL_27;
      }
      uint64_t v23 = (void *)MEMORY[0x1E4F28C58];
      int v24 = @"Missing token string.";
      uint64_t v25 = 19;
    }
    *a5 = [v23 hmErrorWithCode:v25 description:@"Invalid destination." reason:v24 suggestion:0];
    goto LABEL_26;
  }
  if (a5)
  {
    [MEMORY[0x1E4F28C58] hmErrorWithCode:20];
    uint64_t v22 = 0;
    *a5 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v22 = 0;
  }
LABEL_29:

  return v22;
}

id __parseLocalDestination(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = v3;
  if (!v3)
  {
    if (a2)
    {
      id v9 = [MEMORY[0x1E4F28C58] hmErrorWithCode:20];
LABEL_10:
      id v7 = 0;
      *a2 = v9;
      goto LABEL_18;
    }
LABEL_11:
    id v7 = 0;
    goto LABEL_18;
  }
  if (([v3 hasPrefix:@"device:"] & 1) == 0)
  {
    if (a2)
    {
      id v9 = [MEMORY[0x1E4F28C58] hmErrorWithCode:19 description:@"Invalid destination." reason:@"Missing local device prefix." suggestion:0];
      goto LABEL_10;
    }
    goto LABEL_11;
  }
  uint64_t v5 = [v4 substringFromIndex:objc_msgSend(@"device:", "length")];
  if ([v5 length])
  {
    long long v6 = (void *)[objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:v5];
    id v7 = v6;
    if (v6)
    {
      id v8 = v6;
    }
    else if (a2)
    {
      *a2 = [MEMORY[0x1E4F28C58] hmErrorWithCode:19 description:@"Invalid destination." reason:@"Invalid device identifier" suggestion:0];
    }
  }
  else if (a2)
  {
    [MEMORY[0x1E4F28C58] hmErrorWithCode:19 description:@"Invalid destination." reason:@"Missing device identifier." suggestion:0];
    id v7 = 0;
    *a2 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v7 = 0;
  }

LABEL_18:
  return v7;
}

__CFString *HMDCloudShareTrustManagerConfigureStateAsString(unint64_t a1)
{
  if (a1 >= 4)
  {
    uint64_t v2 = NSString;
    id v3 = [NSNumber numberWithInteger:a1];
    uint64_t v1 = [v2 stringWithFormat:@"Unknown state %@", v3];
  }
  else
  {
    uint64_t v1 = off_1E6A08B70[a1];
  }
  return v1;
}

void sub_1D4CB3298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_unfair_lock_t lock)
{
}

void sub_1D4CB3A5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CB4208(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CB4380(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CB5CF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CB6680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void __HMDAppleAccountSettingsPostUpdatedNotification(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = (void *)MEMORY[0x1D9452090]();
    id v3 = v1;
    uint64_t v4 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = HMFGetLogIdentifier();
      int v7 = 138543362;
      id v8 = v5;
      _os_log_impl(&dword_1D49D5000, v4, OS_LOG_TYPE_INFO, "%{public}@Notifying of updated Apple account settings", (uint8_t *)&v7, 0xCu);
    }
    long long v6 = [MEMORY[0x1E4F28EB8] defaultCenter];
    [v6 postNotificationName:@"HMDAppleAccountSettingsUpdatedNotification" object:v3];
  }
}

void sub_1D4CB8340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CB8C0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CB8F8C(_Unwind_Exception *a1)
{
}

void sub_1D4CB90A4(_Unwind_Exception *a1)
{
}

void sub_1D4CB93CC(_Unwind_Exception *a1)
{
}

void __legacyWatchOSCategoryMap_block_invoke()
{
  v22[1] = *MEMORY[0x1E4F143B8];
  if (BulletinDistributorCompanionLibraryCore())
  {
    uint64_t v13 = 0;
    uint64_t v14 = &v13;
    uint64_t v15 = 0x2020000000;
    uint64_t v0 = (id *)getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr;
    uint64_t v16 = getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr;
    if (!getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr)
    {
      id v1 = (void *)BulletinDistributorCompanionLibrary();
      v14[3] = (uint64_t)dlsym(v1, "BLTBulletinContextKeyWatchLegacyMapKey");
      getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr = v14[3];
      uint64_t v0 = (id *)v14[3];
    }
    _Block_object_dispose(&v13, 8);
    if (!v0) {
      goto LABEL_12;
    }
    id v2 = *v0;
    id v21 = v2;
    id v3 = [&unk_1F2DC78D0 stringValue];
    uint64_t v19 = v3;
    uint64_t v13 = 0;
    uint64_t v14 = &v13;
    uint64_t v15 = 0x2020000000;
    uint64_t v4 = (id *)getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr;
    uint64_t v16 = getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr;
    if (!getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr)
    {
      uint64_t v5 = (void *)BulletinDistributorCompanionLibrary();
      v14[3] = (uint64_t)dlsym(v5, "BLTWatchLegacyMapCategoryIDKey");
      getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr = v14[3];
      uint64_t v4 = (id *)v14[3];
    }
    _Block_object_dispose(&v13, 8);
    if (!v4)
    {
LABEL_12:
      dlerror();
      abort_report_np();
      __break(1u);
    }
    id v17 = *v4;
    uint64_t v18 = MEMORY[0x1E4F1CBF0];
    long long v6 = (void *)MEMORY[0x1E4F1C9E8];
    id v7 = v17;
    id v8 = [v6 dictionaryWithObjects:&v18 forKeys:&v17 count:1];
    id v20 = v8;
    uint64_t v9 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v20 forKeys:&v19 count:1];
    v22[0] = v9;
    uint64_t v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v22 forKeys:&v21 count:1];
    id v11 = (void *)legacyWatchOSCategoryMap_legacyWatchOSCategoryMap;
    legacyWatchOSCategoryMap_legacyWatchOSCategoryMap = v10;
  }
  else
  {
    uint64_t v12 = (void *)legacyWatchOSCategoryMap_legacyWatchOSCategoryMap;
    legacyWatchOSCategoryMap_legacyWatchOSCategoryMap = MEMORY[0x1E4F1CC08];
  }
}

void sub_1D4CBDC58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t BulletinDistributorCompanionLibraryCore()
{
  if (!BulletinDistributorCompanionLibraryCore_frameworkLibrary) {
    BulletinDistributorCompanionLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  return BulletinDistributorCompanionLibraryCore_frameworkLibrary;
}

void *__getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)BulletinDistributorCompanionLibrary();
  Class result = dlsym(v2, "BLTBulletinContextKeyWatchLegacyMapKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t BulletinDistributorCompanionLibrary()
{
  uint64_t v0 = BulletinDistributorCompanionLibraryCore();
  if (!v0)
  {
    id v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

void *__getBLTWatchLegacyMapCategoryIDKeySymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)BulletinDistributorCompanionLibrary();
  Class result = dlsym(v2, "BLTWatchLegacyMapCategoryIDKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __BulletinDistributorCompanionLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  BulletinDistributorCompanionLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1D4CC4918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CC5474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _NCSchedulerDateWithMultiple(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  id v8 = (objc_class *)MEMORY[0x1E4F1C9D8];
  id v9 = a2;
  id v10 = a1;
  id v11 = objc_alloc_init(v8);
  if (v11)
  {
    uint64_t v12 = [v7 era];
    if (v12 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v13 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v13 = v12 * a4;
    }
    [v11 setEra:v13];
    uint64_t v14 = [v7 year];
    if (v14 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v15 = v14 * a4;
    }
    [v11 setYear:v15];
    uint64_t v16 = [v7 month];
    if (v16 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v17 = v16 * a4;
    }
    [v11 setMonth:v17];
    uint64_t v18 = [v7 day];
    if (v18 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v19 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v19 = v18 * a4;
    }
    [v11 setDay:v19];
    uint64_t v20 = [v7 hour];
    if (v20 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v21 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v21 = v20 * a4;
    }
    [v11 setHour:v21];
    uint64_t v22 = [v7 minute];
    if (v22 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v23 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v23 = v22 * a4;
    }
    [v11 setMinute:v23];
    uint64_t v24 = [v7 second];
    if (v24 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v25 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v25 = v24 * a4;
    }
    [v11 setSecond:v25];
    uint64_t v26 = [v7 weekday];
    if (v26 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v27 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v27 = v26 * a4;
    }
    [v11 setWeekday:v27];
    uint64_t v28 = [v7 weekdayOrdinal];
    if (v28 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v29 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v29 = v28 * a4;
    }
    [v11 setWeekdayOrdinal:v29];
    uint64_t v30 = [v7 quarter];
    if (v30 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v31 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v31 = v30 * a4;
    }
    [v11 setQuarter:v31];
    uint64_t v32 = [v7 weekOfMonth];
    if (v32 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v33 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v33 = v32 * a4;
    }
    [v11 setWeekOfMonth:v33];
    uint64_t v34 = [v7 weekOfYear];
    if (v34 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v35 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v35 = v34 * a4;
    }
    [v11 setWeekOfYear:v35];
    uint64_t v36 = [v7 yearForWeekOfYear];
    if (v36 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v37 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v37 = v36 * a4;
    }
    [v11 setYearForWeekOfYear:v37];
  }
  int v38 = [v9 dateByAddingComponents:v11 toDate:v10 options:0];

  return v38;
}

void sub_1D4CCFF10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1D4CD0780(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4CD2338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

BOOL HMDRemoteEventRouterProtoChangeRegistrationsMessageReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 3u:
        PBReaderReadString();
        uint64_t v17 = (HMDRemoteEventRouterProtoTopic *)objc_claimAutoreleasedReturnValue();
        if (v17) {
          [a1 addTopicFilterAdditions:v17];
        }
        goto LABEL_30;
      case 4u:
        PBReaderReadString();
        uint64_t v17 = (HMDRemoteEventRouterProtoTopic *)objc_claimAutoreleasedReturnValue();
        if (v17) {
          [a1 addTopicFilterRemovals:v17];
        }
        goto LABEL_30;
      case 5u:
        uint64_t v17 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        [a1 addTopicAdditions:v17];
        goto LABEL_27;
      case 6u:
        uint64_t v17 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        [a1 addTopicRemovals:v17];
LABEL_27:
        if (PBReaderPlaceMark() && HMDRemoteEventRouterProtoTopicReadFrom((uint64_t)v17, a2))
        {
          PBReaderRecallMark();
LABEL_30:

LABEL_31:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_31;
    }
  }
}

void sub_1D4CDA2D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CDB5CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CDC570(_Unwind_Exception *exception_object)
{
}

void sub_1D4CDC7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

__CFString *HMDAccessorySettingsAuditReasonAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 8)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDMediaSystemSettingsAuditReason %tu", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_1E6A08EE8[a1 - 1];
  }
  return v1;
}

void sub_1D4CDF300(_Unwind_Exception *a1)
{
}

void sub_1D4CDF50C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CDF808(_Unwind_Exception *a1)
{
}

__CFString *HMDEventTriggerActivationTypeAsString(unint64_t a1)
{
  if (a1 >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDEventTriggerActivationType %tu", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_1E6A08F28[a1];
  }
  return v1;
}

void sub_1D4CE0200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CE1850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CE1F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1D4CE323C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_1D4CE3934(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CE3DA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_1D4CE4BE0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CE4CA8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CE61A4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CE69EC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CE6B24(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CE6C78(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CE6E88(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CE70B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CE7A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_unfair_lock_t lock)
{
}

void sub_1D4CE7E6C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CE8024(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CEDCD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 168));
  _Unwind_Resume(a1);
}

void sub_1D4CEFD04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  objc_destroyWeak(v30);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CF324C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CF5268(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 160));
  _Unwind_Resume(a1);
}

void sub_1D4CF655C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CF7490(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CF7534(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CF75B0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4CF88A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4CF94F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id getIDSSessionOptionsAllowedClasses()
{
  unsigned char v4[8] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F1CAD0];
  v4[0] = objc_opt_class();
  v4[1] = objc_opt_class();
  _DWORD v4[2] = objc_opt_class();
  v4[3] = objc_opt_class();
  unsigned char v4[4] = objc_opt_class();
  v4[5] = objc_opt_class();
  void v4[6] = objc_opt_class();
  v4[7] = objc_opt_class();
  uint64_t v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:8];
  uint64_t v2 = [v0 setWithArray:v1];

  return v2;
}

void sub_1D4CFE4C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D002C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D0183C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D03A8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D0A4D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D0BBA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D0CA10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 184));
  _Unwind_Resume(a1);
}

void sub_1D4D0ED10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

uint64_t __Block_byref_object_copy__33230(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__33231(uint64_t a1)
{
}

void sub_1D4D0F064(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D0FFEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D12950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D14150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D16010(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 152));
  _Unwind_Resume(a1);
}

void sub_1D4D17FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sha256(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  memset(&c, 0, sizeof(c));
  CC_SHA256_Init(&c);
  uint64_t v21 = (id *)&a9;
  id v10 = v9;
  uint64_t v11 = v10;
  if (v10)
  {
    unint64_t v12 = v10;
    do
    {
      *(void *)md = 0;
      uint64_t v24 = 0;
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        char v13 = (unsigned __int8 *)[v12 UTF8String];
        CC_LONG v14 = strlen((const char *)v13);
      }
      else
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            objc_opt_class();
            _HMFPreconditionFailureWithFormat();
          }
          char v13 = md;
          [v12 getUUIDBytes:md];
          CC_LONG v16 = 16;
          goto LABEL_10;
        }
        id v15 = v12;
        char v13 = (unsigned __int8 *)[v15 bytes];
        CC_LONG v14 = [v15 length];
      }
      CC_LONG v16 = v14;
LABEL_10:
      CC_SHA256_Update(&c, v13, v16);
      uint64_t v17 = v21++;
      id v18 = *v17;

      unint64_t v12 = v18;
    }
    while (v18);
  }
  CC_SHA256_Final(md, &c);
  uint64_t v19 = [MEMORY[0x1E4F1C9B8] dataWithBytes:md length:32];

  return v19;
}

void sub_1D4D1C2E4(_Unwind_Exception *a1)
{
}

void sub_1D4D1C3FC(_Unwind_Exception *a1)
{
}

void sub_1D4D1C4FC(_Unwind_Exception *a1)
{
}

void sub_1D4D23000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D24B88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D25158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D25710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D25EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,id location)
{
  _Block_object_dispose((const void *)(v40 - 160), 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D2B648(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4D2B88C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D2C374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __hds_log_block_invoke()
{
  id v2 = [@"hds" stringByReplacingOccurrencesOfString:@"_" withString:@"."];
  uint64_t v0 = HMFCreateOSLogHandle();
  uint64_t v1 = (void *)hds_log__hmf_once_v1;
  hds_log__hmf_once_uint64_t v1 = v0;
}

void sub_1D4D323A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D32758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D3300C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D37598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  objc_destroyWeak(a11);
  objc_destroyWeak(a10);
  objc_destroyWeak((id *)(v26 - 152));
  objc_destroyWeak((id *)(v26 - 144));
  _Unwind_Resume(a1);
}

uint64_t __getDenylistKeys_block_invoke()
{
  if (isInternalBuild()) {
    objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", @"kAuthorizationDataKey", 0, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  }
  else {
  uint64_t v0 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", @"kAuthorizationDataKey", @"kAccessoryPairingPasswordKey", @"kAccessoryName", @"kServiceName", @"kActionSetName", @"kTriggerName", @"kZoneName", @"kHomeName", @"kRoomName", @"kAccessoryInfoSerialNumberKey", @"kUserIDKey", @"kUserIDsKey", @"kUserDisplayNameKey", @"kUserNamesKey", 0);
  }
  uint64_t v1 = getDenylistKeys_denylistKeys;
  getDenylistKeys_denylistKeys = v0;
  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1D4D39A48(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id HMXPCClientEntitlementsToComponents(unint64_t a1)
{
  id v2 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:64];
  if (a1)
  {
    for (uint64_t i = 1; i - 1 < a1; i *= 2)
    {
      if ((i & a1) != 0)
      {
        if (i > 4095)
        {
          if (i < 0x20000)
          {
            if (i < 0x4000)
            {
              if (i == 4096)
              {
                uint64_t v4 = @"com.apple.private.homekit.messaging";
                goto LABEL_52;
              }
              if (i == 0x2000)
              {
                uint64_t v4 = @"com.apple.private.homekit.person-manager";
                goto LABEL_52;
              }
            }
            else
            {
              switch(i)
              {
                case 0x4000:
                  uint64_t v4 = @"com.apple.private.homekit.allow-secure-access";
                  goto LABEL_52;
                case 0x8000:
                  uint64_t v4 = @"com.apple.private.homekit.diagnostics";
                  goto LABEL_52;
                case 0x10000:
                  uint64_t v4 = @"com.apple.private.homekit.state-dump";
                  goto LABEL_52;
              }
            }
          }
          else if (i >= 0x100000)
          {
            switch(i)
            {
              case 0x100000:
                uint64_t v4 = @"com.apple.private.homekit.location-feedback-debug";
                goto LABEL_52;
              case 0x200000:
                uint64_t v4 = @"com.apple.developer.matter.allow-setup-payload";
                goto LABEL_52;
              case 0x400000:
                uint64_t v4 = @"com.apple.private.homekit.modern-messaging";
                goto LABEL_52;
            }
          }
          else
          {
            switch(i)
            {
              case 0x20000:
                uint64_t v4 = @"com.apple.private.homekit.wallet-key";
                goto LABEL_52;
              case 0x40000:
                uint64_t v4 = @"com.apple.private.homekit.assistant-identifiers";
                goto LABEL_52;
              case 0x80000:
                uint64_t v4 = @"com.apple.private.homekit.home-location";
LABEL_52:
                [v2 addObject:v4];
                break;
            }
          }
        }
        else
        {
          if (i <= 63)
          {
            uint64_t v4 = @"com.apple.developer.homekit";
            switch(i)
            {
              case 1:
                goto LABEL_52;
              case 2:
                uint64_t v4 = @"com.apple.developer.homekit.background-mode";
                goto LABEL_52;
              case 3:
              case 5:
              case 6:
              case 7:
                continue;
              case 4:
                uint64_t v4 = @"com.apple.private.homekit";
                goto LABEL_52;
              case 8:
                uint64_t v4 = @"com.apple.private.homekit.pairing-identity";
                goto LABEL_52;
              default:
                if (i == 16)
                {
                  uint64_t v4 = @"com.apple.private.homekit.pairing-identity.private";
                }
                else
                {
                  if (i != 32) {
                    continue;
                  }
                  uint64_t v4 = @"com.apple.private.homekit.remote-login.private";
                }
                break;
            }
            goto LABEL_52;
          }
          if (i > 511)
          {
            switch(i)
            {
              case 512:
                uint64_t v4 = @"com.apple.private.homekit.multi-user.setup";
                goto LABEL_52;
              case 1024:
                uint64_t v4 = @"com.apple.private.homekit.location";
                goto LABEL_52;
              case 2048:
                uint64_t v4 = @"com.apple.private.homekit.shortcuts-automation-access";
                goto LABEL_52;
            }
          }
          else
          {
            switch(i)
            {
              case 64:
                uint64_t v4 = @"com.apple.developer.homekit.allow-setup-payload";
                goto LABEL_52;
              case 128:
                uint64_t v4 = @"com.apple.private.homekit.cameraclips";
                goto LABEL_52;
              case 256:
                uint64_t v4 = @"com.apple.private.homekit.connectivity-info";
                goto LABEL_52;
            }
          }
        }
      }
    }
  }
  uint64_t v5 = (void *)[v2 copy];

  return v5;
}

void sub_1D4D3C0DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D3C15C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D3C1D8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D3D638(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D3E490(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D3E948(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D3F0F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D4197C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__37887(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__37888(uint64_t a1)
{
}

void sub_1D4D41F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4D42C10(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D42C7C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D42CE8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D43148(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D475B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D4E518(_Unwind_Exception *a1)
{
}

void sub_1D4D4E5B0(_Unwind_Exception *a1)
{
}

void sub_1D4D4FFDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__39674(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__39675(uint64_t a1)
{
}

void sub_1D4D51084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D51B0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D51F94(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D527D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D52F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D53918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D53E74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D54174(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1D4D54484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D5476C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D549C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D54C28(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D556D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D55FD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1D4D56630(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL HMDCloudManagerIsZoneNotExistError(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 domain];
  if ([v2 isEqualToString:*MEMORY[0x1E4F19C40]]) {
    BOOL v3 = [v1 code] == 26 || objc_msgSend(v1, "code") == 28;
  }
  else {
    BOOL v3 = 0;
  }

  return v3;
}

void sub_1D4D56CBC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D56FC4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D57214(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D4D57A10(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1D4D579BCLL);
  }
  _Unwind_Resume(a1);
}

void sub_1D4D58E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D58FF8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D59C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id *a9, id *a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  objc_destroyWeak(v72);
  objc_destroyWeak(location);
  objc_destroyWeak(v71);
  _Block_object_dispose(&a53, 8);
  objc_destroyWeak(a10);
  _Block_object_dispose(&a67, 8);
  _Block_object_dispose(&a71, 8);
  _Block_object_dispose(&STACK[0x210], 8);
  objc_destroyWeak(a9);
  objc_destroyWeak((id *)(v73 - 248));
  _Block_object_dispose((const void *)(v73 - 240), 8);
  _Block_object_dispose((const void *)(v73 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1D4D5A948(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_1D4D5C41C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D5C848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4D5CA90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D5D1E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D5DDC0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1D4D5E1F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D5E5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1D4D5E8CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1D4D5EC1C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D5F1F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D5F3D8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4D5F4B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D5FBA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34)
{
  objc_destroyWeak(v34);
  objc_destroyWeak(location);
  objc_destroyWeak(a9);
  objc_destroyWeak(&a34);
  _Block_object_dispose((const void *)(v35 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1D4D60758(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_1D4D61078(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  _Block_object_dispose((const void *)(v4 - 176), 8);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D62160(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D625E0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4D6281C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D62B88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D6341C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_1D4D63ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  _Block_object_dispose((const void *)(v12 - 176), 8);
  objc_destroyWeak(v11);
  _Unwind_Resume(a1);
}

void sub_1D4D65168(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1D4D65B50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v26 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1D4D66284(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_1D4D66644(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4D66880(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D672C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  objc_destroyWeak(v9);
  objc_destroyWeak((id *)(v10 - 256));
  _Unwind_Resume(a1);
}

void sub_1D4D685FC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4D68974(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4D6DD38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D732B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D7336C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D73438(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D734C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D735E4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D736E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D75220(_Unwind_Exception *a1)
{
}

void __notifyDelegateAccountRemoved(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    uint64_t v5 = [v3 clientQueue];
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    v6[2] = ____notifyDelegateAccountRemoved_block_invoke;
    v6[3] = &unk_1E6A197C8;
    id v7 = v3;
    id v8 = v4;
    dispatch_async(v5, v6);
  }
}

void ____notifyDelegateAccountRemoved_block_invoke(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)MEMORY[0x1D9452090]();
  id v3 = *(id *)(a1 + 32);
  id v4 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = HMFGetLogIdentifier();
    uint64_t v6 = [*(id *)(a1 + 40) shortDescription];
    *(_DWORD *)long long buf = 138543618;
    uint64_t v14 = v5;
    __int16 v15 = 2112;
    CC_LONG v16 = v6;
    _os_log_impl(&dword_1D49D5000, v4, OS_LOG_TYPE_INFO, "%{public}@Account removed: %@", buf, 0x16u);
  }
  id v7 = [MEMORY[0x1E4F28EB8] defaultCenter];
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v11 = @"HMDAccountNotificationKey";
  uint64_t v12 = v8;
  uint64_t v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v12 forKeys:&v11 count:1];
  [v7 postNotificationName:@"HMDAccountRegistryRemovedAccountNotification" object:v9 userInfo:v10];
}

void __notifyDelegateAccountAdded(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    uint64_t v5 = [v3 clientQueue];
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    v6[2] = ____notifyDelegateAccountAdded_block_invoke;
    v6[3] = &unk_1E6A197C8;
    id v7 = v3;
    id v8 = v4;
    dispatch_async(v5, v6);
  }
}

void ____notifyDelegateAccountAdded_block_invoke(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)MEMORY[0x1D9452090]();
  id v3 = *(id *)(a1 + 32);
  id v4 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = HMFGetLogIdentifier();
    uint64_t v6 = [*(id *)(a1 + 40) shortDescription];
    *(_DWORD *)long long buf = 138543618;
    uint64_t v14 = v5;
    __int16 v15 = 2112;
    CC_LONG v16 = v6;
    _os_log_impl(&dword_1D49D5000, v4, OS_LOG_TYPE_INFO, "%{public}@Account added: %@", buf, 0x16u);
  }
  id v7 = [MEMORY[0x1E4F28EB8] defaultCenter];
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v11 = @"HMDAccountNotificationKey";
  uint64_t v12 = v8;
  uint64_t v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v12 forKeys:&v11 count:1];
  [v7 postNotificationName:@"HMDAccountRegistryAddedAccountNotification" object:v9 userInfo:v10];
}

void __cleanupRemoteDevicesWithHandles(void *a1, void *a2)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  context = (void *)MEMORY[0x1D9452090]();
  uint64_t v35 = v3;
  [v3 remoteAccountManager];
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  uint64_t v28 = v44 = 0u;
  id obj = [v28 accounts];
  uint64_t v31 = [obj countByEnumeratingWithState:&v41 objects:v52 count:16];
  if (v31)
  {
    uint64_t v30 = *(void *)v42;
    unint64_t v5 = 0x1E4F1C000uLL;
    id v33 = v4;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v42 != v30) {
          objc_enumerationMutation(obj);
        }
        uint64_t v32 = v6;
        id v7 = *(void **)(*((void *)&v41 + 1) + 8 * v6);
        long long v37 = 0u;
        long long v38 = 0u;
        long long v39 = 0u;
        long long v40 = 0u;
        uint64_t v36 = v7;
        id v34 = [v7 devices];
        uint64_t v8 = [v34 countByEnumeratingWithState:&v37 objects:v51 count:16];
        if (v8)
        {
          uint64_t v9 = v8;
          uint64_t v10 = *(void *)v38;
          do
          {
            for (uint64_t i = 0; i != v9; ++i)
            {
              if (*(void *)v38 != v10) {
                objc_enumerationMutation(v34);
              }
              uint64_t v12 = *(void **)(*((void *)&v37 + 1) + 8 * i);
              uint64_t v13 = *(void **)(v5 + 2688);
              uint64_t v14 = [v12 handles];
              __int16 v15 = [v13 setWithArray:v14];

              [v15 intersectSet:v4];
              if ([v15 count])
              {
                CC_LONG v16 = (void *)MEMORY[0x1D9452090]();
                id v17 = v35;
                id v18 = HMFGetOSLogHandle();
                if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
                {
                  uint64_t v19 = HMFGetLogIdentifier();
                  uint64_t v20 = [v12 shortDescription];
                  *(_DWORD *)long long buf = 138543874;
                  uint64_t v46 = v19;
                  __int16 v47 = 2112;
                  id v48 = v20;
                  __int16 v49 = 2112;
                  id v50 = v36;
                  _os_log_impl(&dword_1D49D5000, v18, OS_LOG_TYPE_INFO, "%{public}@Removing duplicate device, %@, from account: %@", buf, 0x20u);

                  id v4 = v33;
                  unint64_t v5 = 0x1E4F1C000;
                }

                [v36 removeDevice:v12];
              }
            }
            uint64_t v9 = [v34 countByEnumeratingWithState:&v37 objects:v51 count:16];
          }
          while (v9);
        }

        uint64_t v21 = [v36 devices];
        int v22 = objc_msgSend(v21, "hmf_isEmpty");

        unint64_t v5 = 0x1E4F1C000;
        if (v22)
        {
          uint64_t v23 = (void *)MEMORY[0x1D9452090]();
          id v24 = v35;
          uint64_t v25 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v26 = HMFGetLogIdentifier();
            *(_DWORD *)long long buf = 138543618;
            uint64_t v46 = v26;
            __int16 v47 = 2112;
            id v48 = v36;
            _os_log_impl(&dword_1D49D5000, v25, OS_LOG_TYPE_DEFAULT, "%{public}@Removing duplicate empty account: %@", buf, 0x16u);

            unint64_t v5 = 0x1E4F1C000;
          }

          [v28 removeAccount:v36];
        }
        uint64_t v6 = v32 + 1;
        id v4 = v33;
      }
      while (v32 + 1 != v31);
      uint64_t v31 = [obj countByEnumeratingWithState:&v41 objects:v52 count:16];
    }
    while (v31);
  }
}

void __cleanupRemoteAccountsRelatedToAccount(void *a1, void *a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v17 = (void *)MEMORY[0x1D9452090]();
  unint64_t v5 = [v3 remoteAccountManager];
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v6 = [v5 accounts];
  uint64_t v7 = [v6 countByEnumeratingWithState:&v21 objects:v29 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v22;
    id v18 = v6;
    uint64_t v19 = v5;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v22 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        if (([v4 isEqual:v11] & 1) == 0 && objc_msgSend(v4, "isRelatedToAccount:", v11))
        {
          context = (void *)MEMORY[0x1D9452090]();
          id v12 = v3;
          uint64_t v13 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v14 = HMFGetLogIdentifier();
            [v11 shortDescription];
            v16 = id v15 = v3;
            *(_DWORD *)long long buf = 138543618;
            uint64_t v26 = v14;
            __int16 v27 = 2112;
            uint64_t v28 = v16;
            _os_log_impl(&dword_1D49D5000, v13, OS_LOG_TYPE_DEFAULT, "%{public}@Detected stale account, %@, removing", buf, 0x16u);

            id v3 = v15;
            uint64_t v6 = v18;

            unint64_t v5 = v19;
          }

          [v5 removeAccount:v11];
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v21 objects:v29 count:16];
    }
    while (v8);
  }
}

void __registerForAccountUpdates(void *a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  unint64_t v5 = (void *)MEMORY[0x1D9452090]();
  id v6 = v3;
  uint64_t v7 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = HMFGetLogIdentifier();
    int v13 = 138543618;
    uint64_t v14 = v8;
    __int16 v15 = 2112;
    id v16 = v4;
    _os_log_impl(&dword_1D49D5000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Registering for account updates: %@", (uint8_t *)&v13, 0x16u);
  }
  uint64_t v9 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v9 removeObserver:v6 name:@"HMDAccountHandlesUpdatedNotification" object:0];

  uint64_t v10 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v10 removeObserver:v6 name:@"HMDAccountAddedDeviceNotification" object:0];

  if (v4)
  {
    uint64_t v11 = [MEMORY[0x1E4F28EB8] defaultCenter];
    [v11 addObserver:v6 selector:sel___handleAppleAccountHandlesUpdated_ name:@"HMDAccountHandlesUpdatedNotification" object:v4];

    id v12 = [MEMORY[0x1E4F28EB8] defaultCenter];
    [v12 addObserver:v6 selector:sel___handleAppleAccountDeviceAdded_ name:@"HMDAccountAddedDeviceNotification" object:v4];
  }
}

id __deviceForDevice(void *a1, void *a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    id v5 = v3;
    uint64_t v6 = [v5 countByEnumeratingWithState:&v24 objects:v29 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v25;
      uint64_t v19 = *(void *)v25;
      do
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          if (*(void *)v25 != v8) {
            objc_enumerationMutation(v5);
          }
          uint64_t v10 = *(void **)(*((void *)&v24 + 1) + 8 * i);
          long long v20 = 0u;
          long long v21 = 0u;
          long long v22 = 0u;
          long long v23 = 0u;
          id v11 = v10;
          uint64_t v12 = [v11 countByEnumeratingWithState:&v20 objects:v28 count:16];
          if (v12)
          {
            uint64_t v13 = v12;
            uint64_t v14 = *(void *)v21;
            while (2)
            {
              for (uint64_t j = 0; j != v13; ++j)
              {
                if (*(void *)v21 != v14) {
                  objc_enumerationMutation(v11);
                }
                id v16 = *(void **)(*((void *)&v20 + 1) + 8 * j);
                if ([v4 isRelatedToDevice:v16])
                {
                  id v17 = v16;

                  goto LABEL_21;
                }
              }
              uint64_t v13 = [v11 countByEnumeratingWithState:&v20 objects:v28 count:16];
              if (v13) {
                continue;
              }
              break;
            }
          }

          uint64_t v8 = v19;
        }
        uint64_t v7 = [v5 countByEnumeratingWithState:&v24 objects:v29 count:16];
        id v17 = 0;
      }
      while (v7);
    }
    else
    {
      id v17 = 0;
    }
LABEL_21:
  }
  else
  {
    id v17 = 0;
  }

  return v17;
}

id __deviceForHandle(void *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  uint64_t v6 = 0;
  if (v3 && v4)
  {
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v7 = v3;
    uint64_t v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v15;
      while (2)
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if (*(void *)v15 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = objc_msgSend(*(id *)(*((void *)&v14 + 1) + 8 * i), "deviceForHandle:", v5, (void)v14);
          if (v12)
          {
            uint64_t v6 = (void *)v12;
            goto LABEL_13;
          }
        }
        uint64_t v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }
    uint64_t v6 = 0;
LABEL_13:
  }
  return v6;
}

id __accountForHandle(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v5 = v3;
    id v6 = (id)[v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v6)
    {
      uint64_t v7 = *(void *)v14;
      while (2)
      {
        for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v14 != v7) {
            objc_enumerationMutation(v5);
          }
          uint64_t v9 = *(void **)(*((void *)&v13 + 1) + 8 * i);
          uint64_t v10 = objc_msgSend(v9, "handles", (void)v13);
          char v11 = [v10 containsObject:v4];

          if (v11)
          {
            id v6 = v9;
            goto LABEL_12;
          }
        }
        id v6 = (id)[v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
        if (v6) {
          continue;
        }
        break;
      }
    }
LABEL_12:
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

void sub_1D4D78E80(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

__CFString *HMDMatterAccessoryPairingStepAsString(unint64_t a1)
{
  if (a1 >= 0x1A)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Undefined HMDMatterAccessoryPairingStep %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_1E6A0A578[a1];
  }
  return v1;
}

void sub_1D4D7AC8C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D7AD3C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D7B690(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D7B9A8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D7BD30(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D7CB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4D7CCE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4D7CF80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__41866(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__41867(uint64_t a1)
{
}

void sub_1D4D7E990(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D7EA28(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D7EAD8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D7F46C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D7F4F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D7F710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__42272(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__42273(uint64_t a1)
{
}

void sub_1D4D80C5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D86A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__43412(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__43413(uint64_t a1)
{
}

void __createBackboardWatcher(void *a1)
{
  location[3] = *(id *)MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (!+[HMDDeviceCapabilities supportsBackboard])
  {
    uint64_t v7 = (void *)MEMORY[0x1D9452090]();
    id v8 = v1;
    uint64_t v9 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = HMFGetLogIdentifier();
      LODWORD(location[0]) = 138543362;
      *(id *)((char *)location + 4) = v10;
      _os_log_impl(&dword_1D49D5000, v9, OS_LOG_TYPE_INFO, "%{public}@No backboardd support for device, skipping watcher", (uint8_t *)location, 0xCu);
    }
    goto LABEL_9;
  }
  uint64_t ServerPort = CARenderServerGetServerPort();
  if ((ServerPort - 1) >= 0xFFFFFFFE)
  {
    uint64_t v7 = (void *)MEMORY[0x1D9452090]();
    id v8 = v1;
    uint64_t v9 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      char v11 = HMFGetLogIdentifier();
      LODWORD(location[0]) = 138543362;
      *(id *)((char *)location + 4) = v11;
      _os_log_impl(&dword_1D49D5000, v9, OS_LOG_TYPE_ERROR, "%{public}@Unable to find port for default render server", (uint8_t *)location, 0xCu);
    }
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v3 = ServerPort;
  objc_initWeak(location, v1);
  id v4 = objc_alloc(MEMORY[0x1E4F4F7E8]);
  id v5 = [v1 clientQueue];
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = ____createBackboardWatcher_block_invoke;
  void v12[3] = &unk_1E6A16E40;
  objc_copyWeak(&v13, location);
  id v6 = (void *)[v4 initWithPort:v3 queue:v5 deathHandler:v12];
  [v1 setBackboardServicesWatcher:v6];

  objc_destroyWeak(&v13);
  objc_destroyWeak(location);
LABEL_10:
}

void sub_1D4D86E54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____createBackboardWatcher_block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _backboardServicesRelaunched];
}

void sub_1D4D891C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D8A4F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61,uint64_t a62,uint64_t a63)
{
  objc_destroyWeak(v65);
  _Block_object_dispose(&a57, 8);
  _Block_object_dispose(&a61, 8);
  _Block_object_dispose((const void *)(v66 - 160), 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D8D77C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__44168(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__44169(uint64_t a1)
{
}

void sub_1D4D8FD74(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D8FEDC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D8FF7C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4D90DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D90FC0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id _findConstraintForType(void *a1, uint64_t a2)
{
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  _DWORD v4[2] = ___findConstraintForType_block_invoke;
  v4[3] = &__block_descriptor_40_e38_B16__0__HMAccessorySettingConstraint_8l;
  unsigned char v4[4] = a2;
  uint64_t v2 = objc_msgSend(a1, "na_firstObjectPassingTest:", v4);
  return v2;
}

BOOL ___findConstraintForType_block_invoke(uint64_t a1, void *a2)
{
  return [a2 type] == *(void *)(a1 + 32);
}

void sub_1D4D9390C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4D965D0(_Unwind_Exception *a1)
{
}

void __transactionAccessoryUpdated(void *a1, void *a2, void *a3)
{
  v309[1] = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v264 = a3;
  uint64_t v7 = [v264 transactionResult];
  [v7 source];
  id v8 = (void *)MEMORY[0x1E4F1CA48];
  uint64_t v9 = +[HMDAccessoryTransaction properties];
  uint64_t v10 = objc_msgSend(v8, "arrayWithCapacity:", objc_msgSend(v9, "count"));

  char v11 = [0 configurationTracker];
  uint64_t v12 = v11;
  if (v11) {
    dispatch_group_enter(v11);
  }
  unsigned int v273 = v10;
  if (([v6 propertyWasSet:@"name"] & 1) != 0
    || [v6 propertyWasSet:@"configuredName"])
  {
    id v13 = [v6 name];
    id v14 = v5;
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      long long v15 = v14;
    }
    else {
      long long v15 = 0;
    }
    id v16 = v15;

    if (v16)
    {
      uint64_t v17 = [v6 configuredName];

      id v13 = (void *)v17;
    }
    uint64_t v18 = [v14 configuredName];
    uint64_t v19 = [v14 name];
    if ((HMFEqualObjects() & 1) == 0)
    {
      [v14 setConfiguredName:v13];
      [v7 markChanged];
    }
    long long v20 = [v14 name];
    char v21 = HMFEqualObjects();
    if (v20 && (v21 & 1) == 0)
    {
      [v7 markSaveToAssistant];
      long long v22 = [v14 workQueue];
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = ____transactionAccessoryUpdated_block_invoke;
      block[3] = &unk_1E6A197C8;
      id v286 = v14;
      id v287 = v20;
      dispatch_async(v22, block);

      uint64_t v10 = v273;
    }
  }
  if ([v6 propertyWasSet:@"providedName"])
  {
    long long v23 = [v5 providedName];
    long long v24 = [v6 providedName];
    char v25 = HMFEqualObjects();

    if ((v25 & 1) == 0)
    {
      long long v26 = [v5 name];
      long long v27 = [v5 providedName];
      uint64_t v28 = [v6 providedName];
      [v5 setProvidedName:v28];

      uint64_t v29 = [v5 name];
      if (v29 && (HMFEqualObjects() & 1) == 0)
      {
        [v7 markSaveToAssistant];
        uint64_t v30 = [v5 workQueue];
        v282[0] = MEMORY[0x1E4F143A8];
        v282[1] = 3221225472;
        v282[2] = ____transactionAccessoryUpdated_block_invoke_2;
        v282[3] = &unk_1E6A197C8;
        id v283 = v5;
        id v284 = v29;
        dispatch_async(v30, v282);
      }
      uint64_t v31 = [v5 providedName];
      char v32 = HMFEqualObjects();

      if ((v32 & 1) == 0) {
        [v7 markChanged];
      }
    }
  }
  id v33 = [v6 setProperties];
  int v34 = [v33 containsObject:@"model"];
  char v35 = v34;
  if (!v34) {
    goto LABEL_28;
  }
  uint64_t v36 = [v6 model];
  long long v37 = [v5 model];
  char v38 = HMFEqualObjects();

  if ((v38 & 1) == 0)
  {
    long long v39 = [v6 model];

    if (v39)
    {
      id v33 = [v6 model];
      [v5 setModel:v33];
LABEL_28:

      goto LABEL_30;
    }
  }
  char v35 = 0;
LABEL_30:
  long long v40 = [v6 setProperties];
  if (![v40 containsObject:@"manufacturer"])
  {
LABEL_34:

    goto LABEL_35;
  }
  long long v41 = [v6 manufacturer];
  long long v42 = [v5 manufacturer];
  char v43 = HMFEqualObjects();

  if ((v43 & 1) == 0)
  {
    long long v44 = [v6 manufacturer];

    if (v44)
    {
      long long v40 = [v6 manufacturer];
      [v5 setManufacturer:v40];
      char v35 = 1;
      goto LABEL_34;
    }
  }
LABEL_35:
  group = v12;
  uint64_t v45 = [v6 firmwareVersion];
  unsigned int v269 = v6;
  if (v45)
  {
    uint64_t v46 = (void *)v45;
    __int16 v47 = [v6 firmwareVersion];
    id v48 = [v5 firmwareVersion];
    __int16 v49 = [v48 rawVersionString];
    char v50 = HMFEqualObjects();

    if (v50)
    {
      uint64_t v10 = v273;
    }
    else
    {
      id v51 = v5;
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        uint64_t v52 = v51;
      }
      else {
        uint64_t v52 = 0;
      }
      id v53 = v52;

      if (v53 && [v53 supportsCHIP])
      {
        id v54 = [HMDAccessoryVersion alloc];
        uint64_t v55 = [v6 firmwareVersion];
        uint64_t v56 = [(HMDAccessoryVersion *)v54 initWithMatterVersionString:v55];
      }
      else
      {
        uint64_t v57 = [HMDAccessoryVersion alloc];
        uint64_t v55 = [v6 firmwareVersion];
        uint64_t v56 = [(HMDAccessoryVersion *)v57 initWithVersionString:v55];
      }
      id v58 = (void *)v56;
      uint64_t v10 = v273;

      if (v58)
      {
        uint64_t v59 = [v51 firmwareVersion];
        [v51 setFirmwareVersion:v58];
        if (([v58 isEqualToVersion:v59] & 1) == 0)
        {
          if (v59)
          {
            unsigned int v308 = @"HMDAccessoryPreviousFirmwareVersionKey";
            v309[0] = v59;
            uint64_t v60 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v309 forKeys:&v308 count:1];
          }
          else
          {
            uint64_t v60 = 0;
          }
          logAndPostNotification(@"HMDAccessoryFirmwareVersionUpdatedNotification", v51, v60);
        }
        char v35 = 1;
      }
    }
  }
  BOOL v61 = [v6 setProperties];
  if (![v61 containsObject:@"displayableFirmwareVersion"]) {
    goto LABEL_62;
  }
  id v62 = [v6 displayableFirmwareVersion];
  unint64_t v63 = [v5 displayableFirmwareVersion];
  char v64 = HMFEqualObjects();

  if ((v64 & 1) == 0)
  {
    uint64_t v65 = [v6 displayableFirmwareVersion];

    if (v65)
    {
      BOOL v61 = [v5 displayableFirmwareVersion];
      uint64_t v66 = [v6 displayableFirmwareVersion];
      [v5 setDisplayableFirmwareVersion:v66];

      uint64_t v67 = [v6 displayableFirmwareVersion];
      char v68 = [v67 isEqualToString:v61];

      if ((v68 & 1) == 0)
      {
        if (v61)
        {
          int v306 = @"HMDAccessoryPreviousDisplayableFirmwareVersionKey";
          int v307 = v61;
          id v69 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v307 forKeys:&v306 count:1];
        }
        else
        {
          id v69 = 0;
        }
        logAndPostNotification(@"HMDAccessoryFirmwareDisplayableVersionUpdatedNotification", v5, v69);
      }
      char v35 = 1;
LABEL_62:
    }
  }
  id v70 = [v6 setProperties];
  if ([v70 containsObject:@"serialNumber"])
  {
    unint64_t v71 = [v6 serialNumber];
    id v72 = [v5 serialNumber];
    char v73 = HMFEqualObjects();

    if (v73) {
      goto LABEL_68;
    }
    id v74 = [v6 serialNumber];

    if (!v74) {
      goto LABEL_68;
    }
    id v70 = [v6 serialNumber];
    [v5 setSerialNumber:v70];
    char v35 = 1;
  }

LABEL_68:
  uint64_t v75 = [v6 hostAccessoryUUID];
  int v263 = (void *)v75;
  if (v75) {
    int v268 = (void *)[objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:v75];
  }
  else {
    int v268 = 0;
  }
  if ([v6 propertyWasSet:@"hostAccessoryUUID"])
  {
    id v76 = [v5 hostAccessory];
    id v77 = [v76 uuid];
    char v78 = objc_msgSend(v77, "hmf_isEqualToUUID:", v268);

    if ((v78 & 1) == 0)
    {
      [v5 _updateHost:v268];
      [v7 markChanged];
      [v7 markSaveToAssistant];
    }
  }
  uint64_t v79 = [v5 home];
  int v267 = [v79 homeManager];
  uint64_t v80 = [v5 productData];
  uint64_t v81 = [v6 productDataV2];
  unsigned int v271 = [v6 productData];
  id v82 = v5;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    __int16 v83 = v82;
  }
  else {
    __int16 v83 = 0;
  }
  id v270 = v83;
  int v275 = v82;

  int v266 = (void *)v80;
  uint64_t v260 = v81;
  if (v81)
  {
    uint64_t v84 = HMFEqualObjects();
    if ((v84 & 1) == 0)
    {
      id v90 = v82;
      uint64_t v91 = (void *)v81;
LABEL_92:
      objc_msgSend(v90, "setProductData:", v91, v260);
      if (v270)
      {
        unint64_t v98 = [v267 accessoryFirmwareUpdateManager];
        [v98 registerAccessory:v270];
      }
LABEL_94:
      unsigned int v297 = v275;
      uint64_t v99 = objc_msgSend(MEMORY[0x1E4F1C978], "arrayWithObjects:count:", &v297, 1, v260);
      [v79 notifyClientsOfAccessoryInfoUpdatedForAccessories:v99];

      [v7 markChanged];
      goto LABEL_95;
    }
  }
  if (v271 && !v80)
  {
    __int16 v85 = (void *)MEMORY[0x1D9452090](v84);
    id v86 = v275;
    HMFGetOSLogHandle();
    __int16 v87 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v87, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      id v88 = (id)objc_claimAutoreleasedReturnValue();
      +[HMDBackingStoreTransactionOptions stringForHMDBackingStoreTransactionSource:](HMDBackingStoreTransactionOptions, "stringForHMDBackingStoreTransactionSource:", objc_msgSend(v7, "source", v81));
      id v89 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)long long buf = 138543874;
      id v299 = v88;
      __int16 v300 = 2112;
      uint64_t v301 = (uint64_t)v271;
      __int16 v302 = 2112;
      uint64_t v303 = (uint64_t)v89;
      _os_log_impl(&dword_1D49D5000, v87, OS_LOG_TYPE_INFO, "%{public}@Applying initial legacy productData %@ (source: %@)", buf, 0x20u);
    }
    id v90 = v86;
    uint64_t v91 = v271;
    goto LABEL_92;
  }
  if (v271)
  {
    uint64_t v92 = HMFEqualObjects();
    if ((v92 & 1) == 0)
    {
      unint64_t v93 = (void *)MEMORY[0x1D9452090](v92);
      id v94 = v82;
      HMFGetOSLogHandle();
      unint64_t v95 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v95, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v96 = (id)objc_claimAutoreleasedReturnValue();
        +[HMDBackingStoreTransactionOptions stringForHMDBackingStoreTransactionSource:](HMDBackingStoreTransactionOptions, "stringForHMDBackingStoreTransactionSource:", objc_msgSend(v7, "source", v260));
        id v97 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)long long buf = 138544130;
        id v299 = v96;
        __int16 v300 = 2112;
        uint64_t v301 = (uint64_t)v266;
        __int16 v302 = 2112;
        uint64_t v303 = (uint64_t)v271;
        __int16 v304 = 2112;
        id v305 = v97;
        _os_log_impl(&dword_1D49D5000, v95, OS_LOG_TYPE_INFO, "%{public}@Ignoring legacy productData change %@ -> %@ (source: %@)", buf, 0x2Au);
      }
    }
  }
  if (v35) {
    goto LABEL_94;
  }
LABEL_95:
  uint64_t v100 = objc_msgSend(v6, "initialManufacturer", v260);
  if (v100)
  {
    long long v101 = (void *)v100;
    long long v102 = [v6 initialManufacturer];
    long long v103 = [v275 initialManufacturer];
    char v104 = HMFEqualObjects();

    if ((v104 & 1) == 0)
    {
      long long v105 = [v6 initialManufacturer];
      [v275 setInitialManufacturer:v105];

      logAndPostNotification(@"HMDAccessoryManufacturerUpdatedNotification", v275, 0);
      [v7 markChanged];
    }
  }
  uint64_t v106 = [v6 initialModel];
  if (v106)
  {
    long long v107 = (void *)v106;
    long long v108 = [v6 initialModel];
    long long v109 = [v275 initialModel];
    char v110 = HMFEqualObjects();

    if ((v110 & 1) == 0)
    {
      long long v111 = [v6 initialModel];
      [v275 setInitialModel:v111];

      [v7 markChanged];
    }
  }
  uint64_t v112 = [v6 initialCategoryIdentifier];
  if (v112)
  {
    unint64_t v113 = (void *)v112;
    unint64_t v114 = [v6 initialCategoryIdentifier];
    uint64_t v115 = [v275 initialCategoryIdentifier];
    char v116 = HMFEqualObjects();

    if ((v116 & 1) == 0)
    {
      unint64_t v117 = [v6 initialCategoryIdentifier];
      [v275 setInitialCategoryIdentifier:v117];

      logAndPostNotification(@"HMDAccessoryCategoryUpdatedNotification", v275, 0);
      [v7 markChanged];
    }
  }
  uint64_t v118 = [v6 accessoryCategory];

  if (v118)
  {
    long long v119 = [v6 accessoryCategory];
    unint64_t v120 = [v275 _updateCategory:v119 notifyClients:1];

    if (v120)
    {
      [v10 addObject:v120];
      [v7 markChanged];
      if (v270) {
        [v270 updatePrimaryServiceIfNeeded];
      }
    }
  }
  if ([v6 propertyWasSet:@"networkClientIdentifier"])
  {
    char v121 = [v6 networkClientIdentifier];
    __int16 v122 = [v275 networkClientIdentifier];
    char v123 = HMFEqualObjects();

    if ((v123 & 1) == 0)
    {
      __int16 v124 = [v6 networkClientIdentifier];
      [v275 setNetworkClientIdentifier:v124];

      [v7 markChanged];
    }
  }
  if ([v6 propertyWasSet:@"networkRouterUUID"])
  {
    unint64_t v125 = [v6 networkRouterUUID];
    uint64_t v126 = [v275 networkRouterUUID];
    unint64_t v127 = [v126 UUIDString];
    char v128 = HMFEqualObjects();

    if ((v128 & 1) == 0)
    {
      id v129 = objc_alloc(MEMORY[0x1E4F29128]);
      unint64_t v130 = [v6 networkRouterUUID];
      uint64_t v131 = (void *)[v129 initWithUUIDString:v130];
      [v275 setNetworkRouterUUID:v131];

      [v7 markChanged];
    }
  }
  uint64_t v132 = [v6 currentNetworkProtectionMode];
  if (v132)
  {
    unint64_t v133 = (void *)v132;
    unint64_t v134 = [v6 currentNetworkProtectionMode];
    uint64_t v135 = [v134 integerValue];
    uint64_t v136 = [v275 currentNetworkProtectionMode];

    if (v135 != v136)
    {
      unint64_t v137 = [v6 currentNetworkProtectionMode];
      objc_msgSend(v275, "setCurrentNetworkProtectionMode:", objc_msgSend(v137, "integerValue"));

      [v7 markChanged];
    }
  }
  uint64_t v138 = [v6 wiFiCredentialType];
  if (v138)
  {
    unint64_t v139 = (void *)v138;
    uint64_t v140 = [v6 wiFiCredentialType];
    uint64_t v141 = [v140 integerValue];
    uint64_t v142 = [v275 wiFiCredentialType];

    if (v141 != v142)
    {
      unint64_t v143 = (void *)MEMORY[0x1D9452090]();
      HMFGetOSLogHandle();
      unint64_t v144 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v144, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v145 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v146 = [v275 wiFiCredentialType];
        unint64_t v147 = [v6 wiFiCredentialType];
        uint64_t v148 = [v147 integerValue];
        *(_DWORD *)long long buf = 138544130;
        id v299 = v145;
        __int16 v300 = 2048;
        uint64_t v301 = v146;
        __int16 v302 = 2048;
        uint64_t v303 = v148;
        __int16 v304 = 2112;
        id v305 = v275;
        _os_log_impl(&dword_1D49D5000, v144, OS_LOG_TYPE_INFO, "%{public}@Updating wiFiCredentialType from [%lu] to [%lu] for accessory: %@", buf, 0x2Au);
      }
      unint64_t v149 = [v6 wiFiCredentialType];
      objc_msgSend(v275, "setWiFiCredentialType:", objc_msgSend(v149, "integerValue"));

      [v7 markChanged];
      unint64_t v150 = (void *)MEMORY[0x1E4F65480];
      uint64_t v151 = *MEMORY[0x1E4F2DA80];
      v295[0] = *MEMORY[0x1E4F2DA78];
      uint64_t v152 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v275, "supportsWiFiReconfiguration"));
      v296[0] = v152;
      v295[1] = *MEMORY[0x1E4F2DA68];
      uint64_t v153 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v275, "wiFiCredentialType"));
      v296[1] = v153;
      unint64_t v154 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v296 forKeys:v295 count:2];
      unint64_t v155 = [v150 entitledMessageWithName:v151 messagePayload:v154];
      [v10 addObject:v155];
    }
  }
  uint64_t v156 = [v6 networkClientLAN];
  if (v156)
  {
    uint64_t v157 = (void *)v156;
    unint64_t v158 = [v6 networkClientLAN];
    uint64_t v159 = [v158 integerValue];
    uint64_t v160 = [v275 networkClientLAN];

    if (v159 != v160)
    {
      uint64_t v161 = [v6 networkClientLAN];
      objc_msgSend(v275, "setNetworkClientLAN:", objc_msgSend(v161, "integerValue"));

      [v7 markChanged];
    }
  }
  if ([v6 propertyWasSet:@"networkClientProfileFingerprint"])
  {
    unint64_t v162 = [v6 networkClientProfileFingerprint];
    uint64_t v163 = [v275 networkClientProfileFingerprint];
    unint64_t v164 = [v163 UUIDString];
    char v165 = HMFEqualObjects();

    if ((v165 & 1) == 0)
    {
      id v166 = objc_alloc(MEMORY[0x1E4F29128]);
      uint64_t v167 = [v6 networkClientProfileFingerprint];
      unint64_t v168 = (void *)[v166 initWithUUIDString:v167];
      [v275 setNetworkClientProfileFingerprint:v168];

      [v7 markChanged];
    }
  }
  if ([v6 propertyWasSet:@"appliedFirewallWANRules"])
  {
    uint64_t v169 = [v6 appliedFirewallWANRules];
    BOOL v170 = +[HMDAccessoryAllowedHost allowedHostsFromJSONFirewallWANRules:v169];

    if (v170)
    {
      uint64_t v171 = [v275 allowedHosts];
      char v172 = HMFEqualObjects();

      if ((v172 & 1) == 0)
      {
        [v275 setAllowedHosts:v170];
        [v7 markChanged];
        uint64_t v173 = (void *)MEMORY[0x1E4F65480];
        uint64_t v174 = *MEMORY[0x1E4F2DA58];
        uint64_t v293 = *MEMORY[0x1E4F2DA50];
        unint64_t v175 = [v275 allowedHosts];
        unint64_t v176 = encodeRootObjectForSPIClients(v175);
        int v294 = v176;
        long long v177 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v294 forKeys:&v293 count:1];
        unint64_t v178 = [v173 entitledMessageWithName:v174 messagePayload:v177];

        uint64_t v10 = v273;
        [v273 addObject:v178];
      }
    }
  }
  if ([v6 propertyWasSet:@"wiFiUniquePreSharedKey"])
  {
    uint64_t v179 = [v6 wiFiUniquePreSharedKey];
    unint64_t v180 = [v275 wiFiUniquePreSharedKey];
    char v181 = HMFEqualObjects();

    if ((v181 & 1) == 0)
    {
      uint64_t v182 = [v6 wiFiUniquePreSharedKey];
      [v275 setWiFiUniquePreSharedKey:v182];

      [v7 markChanged];
    }
  }
  if ([v6 propertyWasSet:@"pendingConfigurationIdentifier"])
  {
    unint64_t v183 = [v6 pendingConfigurationIdentifier];
    unint64_t v184 = [v275 pendingConfigurationIdentifier];
    char v185 = HMFEqualObjects();

    if ((v185 & 1) == 0)
    {
      unint64_t v186 = [v6 pendingConfigurationIdentifier];
      [v275 setPendingConfigurationIdentifier:v186];

      [v7 markChanged];
    }
  }
  unsigned int v262 = v79;
  if ([v6 propertyWasSet:@"lastNetworkAccessViolationOccurrenceSince1970"]
    && [v6 propertyWasSet:@"lastNetworkAccessViolationResetSince1970"])
  {
    unint64_t v187 = [v275 networkAccessViolation];
    unint64_t v188 = [HMDAccessoryNetworkAccessViolation alloc];
    uint64_t v189 = [v6 lastNetworkAccessViolationOccurrenceSince1970];
    uint64_t v190 = [v6 lastNetworkAccessViolationResetSince1970];
    unint64_t v191 = [(HMDAccessoryNetworkAccessViolation *)v188 initWithLastViolationTimeInterval:v189 lastViolationResetTimeInterval:v190];

    if ((HMFEqualObjects() & 1) == 0)
    {
      [v275 setNetworkAccessViolation:v191];
      BOOL v192 = [(HMDAccessoryNetworkAccessViolation *)v191 hasCurrentViolation];
      int v193 = v192 ^ [v187 hasCurrentViolation];
      uint64_t v194 = [v187 lastViolationDate];
      uint64_t v195 = [(HMDAccessoryNetworkAccessViolation *)v191 lastViolationDate];
      unint64_t v196 = v195;
      BOOL v197 = 0;
      if (v194 && v191)
      {
        [v195 timeIntervalSinceDate:v194];
        BOOL v197 = v198 >= 86400.0;
      }
      unint64_t v199 = v196;
      if ((v193 | v197) == 1) {
        [v7 markChanged];
      }
      else {
        [v7 markLocalChanged];
      }
      id v6 = v269;
      uint64_t v200 = encodeRootObjectForSPIClients(v191);
      unint64_t v201 = (void *)MEMORY[0x1E4F65480];
      uint64_t v202 = *MEMORY[0x1E4F2DA48];
      uint64_t v291 = *MEMORY[0x1E4F2DA40];
      int v292 = v200;
      unint64_t v203 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v292 forKeys:&v291 count:1];
      unint64_t v204 = [v201 entitledMessageWithName:v202 messagePayload:v203];

      uint64_t v10 = v273;
      [v273 addObject:v204];
    }
  }
  if ([v6 propertyWasSet:@"configuredNetworkProtectionGroupUUIDString"])
  {
    unint64_t v205 = [v6 configuredNetworkProtectionGroupUUIDString];
    unint64_t v206 = [v275 configuredNetworkProtectionGroupUUID];
    unint64_t v207 = [v206 UUIDString];
    char v208 = HMFEqualObjects();

    if ((v208 & 1) == 0)
    {
      BOOL v209 = [v6 configuredNetworkProtectionGroupUUIDString];
      if (v209) {
        int v210 = (void *)[objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:v209];
      }
      else {
        int v210 = 0;
      }
      int v211 = [v275 configuredNetworkProtectionGroupUUID];
      [v275 setConfiguredNetworkProtectionGroupUUID:v210];
      if (v211)
      {
        int v289 = @"HMDAccessoryPreviousConfiguredNetworkProtectionGroupUUIDKey";
        unsigned int v290 = v211;
        int v212 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v290 forKeys:&v289 count:1];
      }
      else
      {
        int v212 = 0;
      }
      logAndPostNotification(@"HMDAccessoryConfiguredNetworkProtectionGroupUpdatedNotification", v275, v212);
      [v7 markChanged];
    }
  }
  uint64_t v213 = [v6 suspendCapable];
  if (v213)
  {
    int v214 = (void *)v213;
    int v215 = [v275 isSuspendCapable];
    uint64_t v216 = [v6 suspendCapable];
    int v217 = [v216 BOOLValue];

    if (v215 != v217)
    {
      int v218 = [v6 suspendCapable];
      objc_msgSend(v275, "setSuspendCapable:", objc_msgSend(v218, "BOOLValue"));

      [v7 markChanged];
    }
  }
  uint64_t v219 = [v6 lastSeenDate];
  if (v219)
  {
    int v220 = (void *)v219;
    unsigned int v221 = [v6 lastSeenDate];
    unsigned int v222 = [v275 lastSeenDate];
    char v223 = [v221 isEqualToDate:v222];

    if ((v223 & 1) == 0)
    {
      unsigned int v224 = [v6 lastSeenDate];
      [v275 setLastSeenDate:v224];

      [v7 markChanged];
    }
  }
  uint64_t v225 = [v6 lowBattery];
  if (v225)
  {
    int v226 = (void *)v225;
    int v227 = [v275 isLowBattery];
    int v228 = [v6 lowBattery];
    int v229 = [v228 BOOLValue];

    if (v227 != v229)
    {
      int v230 = [v6 lowBattery];
      objc_msgSend(v275, "setLowBattery:", objc_msgSend(v230, "BOOLValue"));

      [v7 markChanged];
    }
  }
  uint64_t v231 = [v6 sharedAdminAddedTimestamp];
  if (v231)
  {
    int v232 = (void *)v231;
    int v233 = [v275 sharedAdminAddedTimestamp];
    int v234 = [v6 sharedAdminAddedTimestamp];
    char v235 = HMFEqualObjects();

    if ((v235 & 1) == 0)
    {
      int v236 = [v6 sharedAdminAddedTimestamp];
      [v275 setSharedAdminAddedTimestamp:v236];

      [v7 markChanged];
    }
  }
  uint64_t v237 = [v6 pairingsAuditedTimestamp];
  if (v237)
  {
    unsigned int v238 = (void *)v237;
    unsigned int v239 = [v275 pairingsAuditedTimestamp];
    unsigned int v240 = [v6 pairingsAuditedTimestamp];
    char v241 = HMFEqualObjects();

    if ((v241 & 1) == 0)
    {
      int v242 = (void *)MEMORY[0x1D9452090]();
      id v243 = v275;
      HMFGetOSLogHandle();
      int v244 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v244, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v245 = (id)objc_claimAutoreleasedReturnValue();
        int v246 = [v6 pairingsAuditedTimestamp];
        *(_DWORD *)long long buf = 138543618;
        id v299 = v245;
        __int16 v300 = 2112;
        uint64_t v301 = (uint64_t)v246;
        _os_log_impl(&dword_1D49D5000, v244, OS_LOG_TYPE_INFO, "%{public}@Setting pairings audit timestamp to %@", buf, 0x16u);
      }
      unsigned int v247 = [v6 pairingsAuditedTimestamp];
      [v243 setPairingsAuditedTimestamp:v247];

      [v7 markChanged];
    }
  }
  int v274 = [v264 transport];
  int v248 = dispatch_group_create();
  long long v278 = 0u;
  long long v279 = 0u;
  long long v280 = 0u;
  long long v281 = 0u;
  id obj = v10;
  uint64_t v249 = [obj countByEnumeratingWithState:&v278 objects:v288 count:16];
  if (v249)
  {
    uint64_t v250 = v249;
    uint64_t v251 = *(void *)v279;
    do
    {
      for (uint64_t i = 0; i != v250; ++i)
      {
        if (*(void *)v279 != v251) {
          objc_enumerationMutation(obj);
        }
        unsigned int v253 = *(void **)(*((void *)&v278 + 1) + 8 * i);
        dispatch_group_enter(v248);
        if (v264)
        {
          int v254 = (void *)[v253 mutableCopy];
          [v254 setTransport:v274];
          id v255 = (id)[v254 copy];
        }
        else
        {
          id v255 = v253;
        }
        unsigned int v256 = [v275 msgDispatcher];
        int v257 = [v275 uuid];
        v276[0] = MEMORY[0x1E4F143A8];
        v276[1] = 3221225472;
        v276[2] = ____transactionAccessoryUpdated_block_invoke_1116;
        v276[3] = &unk_1E6A19B30;
        int v277 = v248;
        [v256 sendMessage:v255 target:v257 andInvokeCompletionHandler:v276];
      }
      uint64_t v250 = [obj countByEnumeratingWithState:&v278 objects:v288 count:16];
    }
    while (v250);
  }

  dispatch_group_wait(v248, 0);
  int v258 = [v264 responseHandler];

  if (v258)
  {
    int v259 = [v264 responseHandler];
    v259[2](v259, 0, 0);
  }
  if (group) {
    dispatch_group_leave(group);
  }
}

uint64_t ____transactionAccessoryUpdated_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleUpdatedName:*(void *)(a1 + 40)];
}

uint64_t ____transactionAccessoryUpdated_block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleUpdatedName:*(void *)(a1 + 40)];
}

void ____transactionAccessoryUpdated_block_invoke_1116(uint64_t a1)
{
}

void sub_1D4D9BD18(_Unwind_Exception *a1)
{
}

void sub_1D4D9CE70(_Unwind_Exception *a1)
{
}

void sub_1D4D9CF00(_Unwind_Exception *a1)
{
}

void sub_1D4D9D2C0(_Unwind_Exception *a1)
{
}

void sub_1D4D9F260(_Unwind_Exception *a1)
{
}

void sub_1D4D9F2F4(_Unwind_Exception *a1)
{
}

void sub_1D4D9F630(_Unwind_Exception *a1)
{
}

void sub_1D4D9F6C4(_Unwind_Exception *a1)
{
}

void sub_1D4D9F758(_Unwind_Exception *a1)
{
}

void sub_1D4D9F7EC(_Unwind_Exception *a1)
{
}

void sub_1D4D9FDA0(_Unwind_Exception *a1)
{
}

void sub_1D4D9FE38(_Unwind_Exception *a1)
{
}

void sub_1D4DA1450(_Unwind_Exception *a1)
{
}

void sub_1D4DA3C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4DAE558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
}

void sub_1D4DB7734(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DB87A4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DB89DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_1D4DB8CB0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DB9240(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DB9808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

void sub_1D4DB9D04(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DBAF08(_Unwind_Exception *a1)
{
}

void sub_1D4DBB014(_Unwind_Exception *a1)
{
}

void sub_1D4DBB3FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DBB7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4DBC1CC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DBC8F4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DBC970(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DBC9EC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id addOrReplaceElements(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if ([v5 count])
  {
    id v8 = (void *)[v6 mutableCopy];
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    v13[2] = __addOrReplaceElements_block_invoke;
    v13[3] = &unk_1E6A0AD18;
    id v9 = v8;
    id v14 = v9;
    id v15 = v7;
    objc_msgSend(v5, "na_each:", v13);
    uint64_t v10 = v15;
    id v11 = v9;
  }
  else
  {
    id v11 = v6;
  }

  return v11;
}

void __addOrReplaceElements_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v8 = MEMORY[0x1E4F143A8];
  uint64_t v9 = 3221225472;
  uint64_t v10 = __addOrReplaceElements_block_invoke_2;
  id v11 = &unk_1E6A0ACF0;
  id v4 = *(void **)(a1 + 32);
  id v13 = *(id *)(a1 + 40);
  id v5 = v3;
  id v12 = v5;
  uint64_t v6 = [v4 indexOfObjectPassingTest:&v8];
  id v7 = *(void **)(a1 + 32);
  if (v6 == 0x7FFFFFFFFFFFFFFFLL) {
    objc_msgSend(v7, "addObject:", v5, v8, v9, v10, v11);
  }
  else {
    objc_msgSend(v7, "replaceObjectAtIndex:withObject:", v6, v5, v8, v9, v10, v11);
  }
}

uint64_t __addOrReplaceElements_block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), a2);
  if (result) {
    *a4 = 1;
  }
  return result;
}

void sub_1D4DC0F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v16 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1D4DC125C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__48857(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__48858(uint64_t a1)
{
}

void sub_1D4DC4AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4DC5258(_Unwind_Exception *a1)
{
}

void sub_1D4DC5610(_Unwind_Exception *a1)
{
}

void sub_1D4DC6960(_Unwind_Exception *a1)
{
}

void sub_1D4DC6F3C(_Unwind_Exception *a1)
{
}

void sub_1D4DC7CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__49311(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__49312(uint64_t a1)
{
}

void __transactionAccessoryUpdated_49313(void *a1, void *a2, void *a3)
{
  uint64_t v210 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v192 = a3;
  uint64_t v189 = [v192 transactionResult];
  id v7 = (void *)MEMORY[0x1E4F1CA48];
  uint64_t v8 = +[HMDHAPAccessoryTransaction properties];
  unint64_t v187 = objc_msgSend(v7, "arrayWithCapacity:", objc_msgSend(v8, "count"));

  uint64_t v9 = [v5 home];
  uint64_t v10 = [v6 uniqueIdentifier];
  if (v10)
  {
    id v11 = (void *)v10;
    uint64_t v12 = [v5 uniqueIdentifier];
    uint64_t v13 = [v6 uniqueIdentifier];
    char v14 = [v12 isEqual:v13];

    if ((v14 & 1) == 0)
    {
      id v15 = [v6 uniqueIdentifier];
      [v5 setUniqueIdentifier:v15];

      [v189 markChanged];
    }
  }
  unint64_t v188 = (void *)v9;
  uint64_t v16 = [v6 bridgeUUID];
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    uint64_t v18 = [v5 bridge];
    uint64_t v19 = [v18 uuid];
    long long v20 = [v19 UUIDString];
    char v21 = [v6 bridgeUUID];
    char v22 = [v20 isEqual:v21];

    if ((v22 & 1) == 0)
    {
      id v23 = objc_alloc(MEMORY[0x1E4F29128]);
      long long v24 = [v6 bridgeUUID];
      char v25 = (void *)[v23 initWithUUIDString:v24];
      [v5 _updateHost:v25];

      [v189 markChanged];
      [v189 markSaveToAssistant];
    }
  }
  long long v26 = [v6 roomUUID];

  id obj = v5;
  if (v26)
  {
    long long v27 = [v5 room];
    uint64_t v28 = [v27 name];

    id v29 = objc_alloc(MEMORY[0x1E4F29128]);
    uint64_t v30 = [v6 roomUUID];
    uint64_t v31 = (void *)[v29 initWithUUIDString:v30];

    char v32 = (void *)MEMORY[0x1D9452090]();
    id v33 = v5;
    HMFGetOSLogHandle();
    int v34 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      id v35 = (id)objc_claimAutoreleasedReturnValue();
      unint64_t v186 = [v33 home];
      char v185 = [v186 roomWithUUID:v31];
      unint64_t v184 = [v185 name];
      [v33 room];
      uint64_t v36 = v32;
      v38 = long long v37 = v28;
      long long v39 = [v38 uuid];
      HMFEqualObjects();

      id v5 = obj;
      uint64_t v28 = v37;
      char v32 = v36;
      HMFBooleanToString();
      id v40 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)long long buf = 138544130;
      id v203 = v35;
      __int16 v204 = 2112;
      id v205 = v28;
      __int16 v206 = 2112;
      id v207 = v184;
      __int16 v208 = 2112;
      id v209 = v40;
      _os_log_impl(&dword_1D49D5000, v34, OS_LOG_TYPE_INFO, "%{public}@transactionObjectUpdated: old: %@, new:%@, same Room: %@", buf, 0x2Au);
    }
    if (v31 && objc_msgSend(v33, "_updateRoom:source:", v31, objc_msgSend(v189, "source")))
    {
      [v189 markChanged];
      [v189 markSaveToAssistant];
    }
    [v33 _handleRoomChangedFromOldRoomName:v28];
  }
  uint64_t v41 = [v6 accessoryFlags];
  if (v41)
  {
    long long v42 = (void *)v41;
    char v43 = [v5 accessoryFlags];
    long long v44 = [v6 accessoryFlags];
    char v45 = [v43 isEqual:v44];

    if ((v45 & 1) == 0)
    {
      uint64_t v46 = [v6 accessoryFlags];
      __int16 v47 = [v5 updateAccessoryFlagsAndNotifyClients:v46];

      if (v47)
      {
        [v187 addObject:v47];
        [v189 markChanged];
      }
    }
  }
  uint64_t v48 = [v6 certificationStatus];
  __int16 v49 = v192;
  if (v48)
  {
    char v50 = (void *)v48;
    id v51 = [v6 certificationStatus];
    if ([v51 unsignedIntegerValue])
    {
      uint64_t v52 = [v5 certificationStatus];
      id v53 = [v6 certificationStatus];
      uint64_t v54 = [v53 unsignedIntegerValue];

      if (v52 != v54)
      {
        uint64_t v55 = [v6 certificationStatus];
        objc_msgSend(v5, "setCertificationStatus:", objc_msgSend(v55, "unsignedIntegerValue"));

        [v189 markChanged];
      }
    }
    else
    {
    }
  }
  uint64_t v56 = [v6 broadcastKey];
  if (v56)
  {
    uint64_t v57 = (void *)v56;
    id v58 = [v5 broadcastKey];
    uint64_t v59 = [v6 broadcastKey];
    char v60 = [v58 isEqualToData:v59];

    if ((v60 & 1) == 0)
    {
      BOOL v61 = [v6 broadcastKey];
      [v5 setBroadcastKey:v61];

      id v62 = [v6 broadcastKey];
      unint64_t v63 = [v6 keyUpdatedStateNumber];
      char v64 = [v6 keyUpdatedTime];
      [v5 setBroadcastKey:v62 keyUpdatedStateNumber:v63 keyUpdatedTime:v64];

      [v189 markChanged];
    }
  }
  uint64_t v65 = [v6 pairingUsername];
  if (v65)
  {
    uint64_t v66 = (void *)v65;
    uint64_t v67 = [v6 publicKey];
    if (!v67)
    {

      goto LABEL_35;
    }
    char v68 = (void *)v67;
    id v69 = [obj pairingUsername];
    id v70 = [v6 pairingUsername];
    if ([v69 isEqual:v70])
    {
      unint64_t v71 = [obj publicKey];
      id v72 = [v6 publicKey];
      char v73 = [v71 isEqual:v72];

      __int16 v49 = v192;
      if (v73) {
        goto LABEL_35;
      }
    }
    else
    {
    }
    id v74 = [v6 pairingUsername];
    uint64_t v75 = [v6 publicKey];
    [obj setPairingUsername:v74 publicKey:v75];

    [v189 markChanged];
  }
LABEL_35:
  id v76 = [v6 transportInformation];

  id v77 = obj;
  if (v76)
  {
    char v78 = (void *)MEMORY[0x1D9452090]();
    uint64_t v79 = objc_opt_class();
    HMFGetOSLogHandle();
    uint64_t v80 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v80, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      id v81 = (id)objc_claimAutoreleasedReturnValue();
      [v189 source];
      HMFBooleanToString();
      id v82 = (id)objc_claimAutoreleasedReturnValue();
      __int16 v83 = [v6 transportInformation];
      *(_DWORD *)long long buf = 138543874;
      id v203 = v81;
      __int16 v204 = 2112;
      id v205 = v82;
      __int16 v206 = 2112;
      id v207 = v83;
      _os_log_impl(&dword_1D49D5000, v80, OS_LOG_TYPE_INFO, "%{public}@Received updated transportInformation from localSource: %@, transportInformation: %@", buf, 0x20u);

      __int16 v49 = v192;
    }

    uint64_t v84 = [v6 transportInformation];
    int v85 = objc_msgSend(obj, "updateTransportInformation:localSource:", v84, (unint64_t)objc_msgSend(v189, "source") < 2);

    if (v85) {
      [v189 markChanged];
    }
  }
  uint64_t v86 = [v6 communicationProtocol];
  if (v86)
  {
    __int16 v87 = (void *)v86;
    id v88 = [v6 communicationProtocol];
    uint64_t v89 = [v88 integerValue];
    uint64_t v90 = [obj communicationProtocol];

    if (v89 != v90)
    {
      uint64_t v91 = (void *)MEMORY[0x1D9452090]();
      id v92 = obj;
      HMFGetOSLogHandle();
      unint64_t v93 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v93, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v94 = (id)objc_claimAutoreleasedReturnValue();
        [v92 communicationProtocol];
        HAPCommunicationProtocolDescription();
        id v95 = (id)objc_claimAutoreleasedReturnValue();
        id v96 = [v6 communicationProtocol];
        [v96 integerValue];
        HAPCommunicationProtocolDescription();
        id v97 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)long long buf = 138543874;
        id v203 = v94;
        __int16 v204 = 2112;
        id v205 = v95;
        __int16 v206 = 2112;
        id v207 = v97;
        _os_log_impl(&dword_1D49D5000, v93, OS_LOG_TYPE_INFO, "%{public}@Updating communication protocol from %@ to %@", buf, 0x20u);

        __int16 v49 = v192;
        id v77 = obj;
      }
      unint64_t v98 = [v6 communicationProtocol];
      objc_msgSend(v92, "setCommunicationProtocol:", objc_msgSend(v98, "integerValue"));

      [v189 markChanged];
    }
  }
  uint64_t v99 = [v6 accessorySetupHash];
  if (v99)
  {
    uint64_t v100 = (void *)v99;
    long long v101 = [v77 setupHash];
    long long v102 = [v6 accessorySetupHash];
    char v103 = [v101 isEqual:v102];

    if ((v103 & 1) == 0)
    {
      char v104 = [v6 accessorySetupHash];
      [v77 setSetupHash:v104];

      [v189 markChanged];
    }
  }
  uint64_t v105 = [v6 targetUUIDs];
  if (v105)
  {
    uint64_t v106 = (void *)v105;
    long long v107 = [v77 targetUUIDs];
    long long v108 = [v6 targetUUIDs];
    char v109 = [v107 isEqual:v108];

    if ((v109 & 1) == 0)
    {
      char v110 = [v6 targetUUIDs];
      [v77 updateTargetUUIDs:v110];

      [v189 markChanged];
    }
  }
  uint64_t v111 = [v6 hardwareSupport];
  if (v111)
  {
    uint64_t v112 = (void *)v111;
    int v113 = [v77 hardwareSupport];
    unint64_t v114 = [v6 hardwareSupport];
    int v115 = [v114 BOOLValue];

    if (v113 != v115)
    {
      char v116 = [v6 hardwareSupport];
      objc_msgSend(v77, "setHardwareSupport:", objc_msgSend(v116, "BOOLValue"));

      [v77 notifyClientsOfTargetControlSupportUpdate];
      [v189 markChanged];
    }
  }
  uint64_t v117 = [v6 connectivityInfo];
  if (v117)
  {
    uint64_t v118 = (void *)v117;
    long long v119 = [v77 connectivityInfo];
    unint64_t v120 = [v6 connectivityInfo];
    char v121 = HMFEqualObjects();

    if ((v121 & 1) == 0)
    {
      __int16 v122 = [v6 connectivityInfo];
      [v77 setConnectivityInfo:v122];

      [v189 markChanged];
    }
  }
  uint64_t v123 = [v6 wiFiTransportCapabilities];
  if (v123)
  {
    __int16 v124 = (void *)v123;
    unint64_t v125 = [v77 wiFiTransportCapabilities];
    uint64_t v126 = [v6 wiFiTransportCapabilities];
    char v127 = [v125 isEqualToNumber:v126];

    if ((v127 & 1) == 0)
    {
      char v128 = [v6 wiFiTransportCapabilities];
      [v77 setWiFiTransportCapabilities:v128];

      [v189 markChanged];
    }
  }
  uint64_t v129 = [v6 sleepInterval];
  if (v129)
  {
    unint64_t v130 = (void *)v129;
    uint64_t v131 = [v77 sleepInterval];
    uint64_t v132 = [v6 sleepInterval];
    char v133 = [v131 isEqualToNumber:v132];

    if ((v133 & 1) == 0)
    {
      unint64_t v134 = [v6 sleepInterval];
      [v77 setSleepInterval:v134];

      [v189 markChanged];
    }
  }
  uint64_t v135 = [v6 primaryProfileVersion];

  if (v135)
  {
    id v136 = objc_alloc(MEMORY[0x1E4F65590]);
    unint64_t v137 = [v6 primaryProfileVersion];
    uint64_t v138 = (void *)[v136 initWithVersionString:v137];

    if (v138)
    {
      unint64_t v139 = [v77 primaryProfileVersion];
      char v140 = [v138 isEqualToVersion:v139];

      if ((v140 & 1) == 0)
      {
        [v77 setPrimaryProfileVersion:v138];
        uint64_t v141 = [v77 networkRouterController];

        if (v141) {
          [v188 _evaluateNetworkRouterManagementForTransaction:v189];
        }
        [v189 markChanged];
      }
    }
  }
  uint64_t v142 = [v6 hasOnboardedForNaturalLighting];
  if (v142)
  {
    unint64_t v143 = (void *)v142;
    unint64_t v144 = [v77 hasOnboardedForNaturalLighting];
    id v145 = [v6 hasOnboardedForNaturalLighting];
    char v146 = [v144 isEqualToNumber:v145];

    if ((v146 & 1) == 0)
    {
      unint64_t v147 = (void *)MEMORY[0x1D9452090]();
      id v148 = v77;
      HMFGetOSLogHandle();
      unint64_t v149 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v149, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v150 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v151 = [v6 hasOnboardedForNaturalLighting];
        *(_DWORD *)long long buf = 138543618;
        id v203 = v150;
        __int16 v204 = 2112;
        id v205 = v151;
        _os_log_impl(&dword_1D49D5000, v149, OS_LOG_TYPE_INFO, "%{public}@Updating has onboarded accessory for natural lighting: %@", buf, 0x16u);
      }
      uint64_t v152 = [v6 hasOnboardedForNaturalLighting];
      [v148 setHasOnboardedForNaturalLighting:v152];

      [v189 markChanged];
    }
  }
  uint64_t v153 = [v6 initialServiceTypeUUIDs];
  if (v153)
  {
    unint64_t v154 = (void *)v153;
    unint64_t v155 = [v6 initialServiceTypeUUIDs];
    uint64_t v156 = [v77 initialServiceTypeUUIDs];
    char v157 = HMFEqualObjects();

    if ((v157 & 1) == 0)
    {
      unint64_t v158 = [v6 initialServiceTypeUUIDs];
      [v77 setInitialServiceTypeUUIDs:v158];

      [v189 markChanged];
    }
  }
  uint64_t v159 = [v6 needsOnboarding];
  if (v159)
  {
    uint64_t v160 = (void *)v159;
    uint64_t v161 = [v6 needsOnboarding];
    unint64_t v162 = [v77 needsOnboarding];
    char v163 = HMFEqualObjects();

    if ((v163 & 1) == 0)
    {
      unint64_t v164 = [v6 needsOnboarding];
      [v77 setNeedsOnboarding:v164];

      [v189 markChanged];
    }
  }
  uint64_t v165 = [v6 suspendedState];
  if (v165)
  {
    id v166 = (void *)v165;
    uint64_t v167 = [v6 suspendedState];
    unint64_t v168 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v77, "suspendedState"));
    int v169 = [v167 isEqualToNumber:v168];

    if (v169)
    {
      BOOL v170 = [v6 suspendedState];
      objc_msgSend(v77, "setSuspendedState:", objc_msgSend(v170, "unsignedIntegerValue"));

      [v189 markChanged];
    }
  }
  uint64_t v171 = v77;
  [v77 handleUpdatedCHIPPropertiesOnAccessoryModel:v6 actions:v189];
  char v172 = dispatch_group_create();
  long long v197 = 0u;
  long long v198 = 0u;
  long long v199 = 0u;
  long long v200 = 0u;
  id obja = v187;
  uint64_t v173 = [obja countByEnumeratingWithState:&v197 objects:v201 count:16];
  if (v173)
  {
    uint64_t v174 = v173;
    uint64_t v175 = *(void *)v198;
    do
    {
      for (uint64_t i = 0; i != v174; ++i)
      {
        if (*(void *)v198 != v175) {
          objc_enumerationMutation(obja);
        }
        long long v177 = *(void **)(*((void *)&v197 + 1) + 8 * i);
        dispatch_group_enter(v172);
        if (v49)
        {
          unint64_t v178 = (void *)[v177 mutableCopy];
          uint64_t v179 = [v49 transport];
          [v178 setTransport:v179];
          id v180 = (id)[v178 copy];
        }
        else
        {
          id v180 = v177;
        }
        char v181 = [v171 msgDispatcher];
        uint64_t v182 = [v171 uuid];
        v195[0] = MEMORY[0x1E4F143A8];
        v195[1] = 3221225472;
        v195[2] = ____transactionAccessoryUpdated_block_invoke_49318;
        v195[3] = &unk_1E6A19B30;
        unint64_t v196 = v172;
        [v181 sendMessage:v180 target:v182 andInvokeCompletionHandler:v195];

        __int16 v49 = v192;
      }
      uint64_t v174 = [obja countByEnumeratingWithState:&v197 objects:v201 count:16];
    }
    while (v174);
  }

  dispatch_group_wait(v172, 0);
  v193[0] = MEMORY[0x1E4F143A8];
  v193[1] = 3221225472;
  v193[2] = ____transactionAccessoryUpdated_block_invoke_2_49319;
  v193[3] = &unk_1E6A18288;
  id v183 = v189;
  id v194 = v183;
  [v171 transactionAccessoryUpdatedForPreferredMediaUser:v6 completionHandler:v193];
  [v49 respondWithSuccess];
}

void ____transactionAccessoryUpdated_block_invoke_49318(uint64_t a1)
{
}

uint64_t ____transactionAccessoryUpdated_block_invoke_2_49319(uint64_t result, int a2)
{
  if (a2) {
    return [*(id *)(result + 32) markChanged];
  }
  return result;
}

void sub_1D4DC93BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4DCCD38(_Unwind_Exception *a1)
{
}

void sub_1D4DCDFCC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1D4DCE678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4DD10A8(_Unwind_Exception *a1)
{
}

void sub_1D4DD3668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
}

void sub_1D4DD38F8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DD5944(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DD84E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v15 - 176));
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1D4DD87D8(_Unwind_Exception *a1)
{
}

void sub_1D4DD8B58(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DD8C34(_Unwind_Exception *a1)
{
}

void sub_1D4DD8D20(_Unwind_Exception *a1)
{
}

void sub_1D4DD9394(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_1D4DD97F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1D4DDA2C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *a13, id *a14, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v15 - 200));
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1D4DDA4D0(_Unwind_Exception *a1)
{
}

void sub_1D4DDA5C0(_Unwind_Exception *a1)
{
}

void sub_1D4DDA6E0(_Unwind_Exception *a1)
{
}

void sub_1D4DDB90C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_1D4DDC34C(_Unwind_Exception *a1)
{
}

void sub_1D4DDD720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 216));
  _Unwind_Resume(a1);
}

void sub_1D4DDE074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4DDE910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4DE0324(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DE042C(_Unwind_Exception *a1)
{
}

void sub_1D4DE15D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_1D4DE1874(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DE197C(_Unwind_Exception *a1)
{
}

void sub_1D4DE2074(_Unwind_Exception *a1)
{
}

void sub_1D4DE2294(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4DE24A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DE2F6C(_Unwind_Exception *a1)
{
}

void sub_1D4DE319C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4DE3780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4DE3D54(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1D4DE4344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1D4DE5A40(_Unwind_Exception *a1)
{
}

void sub_1D4DE5BA4(_Unwind_Exception *a1)
{
}

void sub_1D4DE5D5C(_Unwind_Exception *exception_object)
{
}

void sub_1D4DE5F14(_Unwind_Exception *exception_object)
{
}

void sub_1D4DE5FE4(_Unwind_Exception *a1)
{
}

void sub_1D4DE63F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D4DE8974(_Unwind_Exception *a1)
{
}

void sub_1D4DE8A04(_Unwind_Exception *a1)
{
}

void sub_1D4DE912C(_Unwind_Exception *a1)
{
}

void sub_1D4DE9254(_Unwind_Exception *a1)
{
}

void sub_1D4DE93E8(_Unwind_Exception *a1)
{
}

void __handleUpdatedPassword(void *a1, void *a2)
{
  uint64_t v79 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v42 = a2;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  id v40 = v3;
  id v4 = [v3 services];
  id v5 = (void *)[v4 copy];

  id obj = v5;
  uint64_t v38 = [v5 countByEnumeratingWithState:&v50 objects:v57 count:16];
  if (v38)
  {
    uint64_t v37 = *(void *)v51;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v51 != v37)
        {
          uint64_t v7 = v6;
          objc_enumerationMutation(obj);
          uint64_t v6 = v7;
        }
        uint64_t v39 = v6;
        uint64_t v8 = *(void **)(*((void *)&v50 + 1) + 8 * v6);
        uint64_t v9 = [v8 type];
        int v10 = [v9 isEqualToString:@"000000DA-0000-1000-8000-0026BB765291"];

        if (v10)
        {
          long long v48 = 0u;
          long long v49 = 0u;
          long long v46 = 0u;
          long long v47 = 0u;
          id v41 = [v8 characteristics];
          uint64_t v11 = [v41 countByEnumeratingWithState:&v46 objects:v56 count:16];
          if (!v11) {
            goto LABEL_46;
          }
          uint64_t v43 = *(void *)v47;
          while (1)
          {
            uint64_t v12 = 0;
            do
            {
              if (*(void *)v47 != v43) {
                objc_enumerationMutation(v41);
              }
              uint64_t v13 = *(void **)(*((void *)&v46 + 1) + 8 * v12);
              char v14 = [v13 type];
              int v15 = [v14 isEqualToString:@"000000E4-0000-1000-8000-0026BB765291"];

              if (v15)
              {
                uint64_t v16 = [v13 value];

                if (v16)
                {
                  uint64_t v17 = [v13 value];
                  uint64_t v18 = v17;
                  if (v17)
                  {
                    id v19 = v17;
                    [v19 bytes];
                    [v19 length];

                    *(void *)&long long buf = 0;
                    uint64_t v54 = 0;
                    uint64_t v55 = 0;
                    id v20 = 0;
                    BOOL v21 = 0;
                    if (!TLV8Get() && v54 == 1)
                    {
                      unsigned int v22 = *(unsigned __int8 *)buf;
                      if (v22 > 1) {
                        goto LABEL_21;
                      }
                      int v23 = TLV8GetOrCopyCoalesced();
                      if (v23 == -6727 || !v54)
                      {
                        id v20 = 0;
                        if (!v22) {
                          goto LABEL_29;
                        }
                      }
                      else
                      {
                        if (v23)
                        {
LABEL_21:
                          BOOL v21 = 0;
                          id v20 = 0;
                          goto LABEL_30;
                        }
                        id v25 = [NSString alloc];
                        id v20 = (id)[v25 initWithBytes:(void)buf length:v54 encoding:4];
                        if (v55)
                        {
                          free(v55);
                          uint64_t v55 = 0;
                        }
                        if (v20)
                        {
LABEL_29:
                          BOOL v21 = v22 != 0;
                          id v20 = v20;
                          goto LABEL_30;
                        }
                      }
                      BOOL v21 = 0;
                    }
LABEL_30:
                  }
                  else
                  {
                    BOOL v21 = 0;
                    id v20 = 0;
                  }
                  id v24 = v20;
                }
                else
                {
                  BOOL v21 = 0;
                  id v24 = 0;
                }
                long long v77 = 0u;
                long long v78 = 0u;
                long long v75 = 0u;
                long long v76 = 0u;
                long long v73 = 0u;
                long long v74 = 0u;
                long long v71 = 0u;
                long long v72 = 0u;
                long long v69 = 0u;
                long long v70 = 0u;
                long long v67 = 0u;
                long long v68 = 0u;
                long long v65 = 0u;
                long long v66 = 0u;
                long long v63 = 0u;
                long long v64 = 0u;
                long long v61 = 0u;
                long long v62 = 0u;
                long long v59 = 0u;
                long long v60 = 0u;
                long long buf = 0u;
                id v26 = v42;
                TLV8BufferInit();
                id v27 = v26;
                [v27 UTF8String];
                [v27 length];

                if (TLV8BufferAppend() || (LOBYTE(v55) = v42 != 0, TLV8BufferAppend()))
                {
                  uint64_t v28 = 0;
                }
                else
                {
                  uint64_t v28 = objc_msgSend(MEMORY[0x1E4F1C9B8], "dataWithBytes:length:", buf);
                }
                TLV8BufferFree();
                if (v21 != (v42 != 0) || v42 && ([v24 isEqualToString:v27] & 1) == 0)
                {
                  id v29 = (void *)MEMORY[0x1D9452090]();
                  id v30 = v40;
                  uint64_t v31 = HMFGetOSLogHandle();
                  if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
                  {
                    char v32 = HMFGetLogIdentifier();
                    LODWORD(buf) = 138543362;
                    *(void *)((char *)&buf + 4) = v32;
                    _os_log_impl(&dword_1D49D5000, v31, OS_LOG_TYPE_INFO, "%{public}@password does not match send update", (uint8_t *)&buf, 0xCu);
                  }
                  id v33 = v28;
                  objc_initWeak((id *)&buf, v30);
                  int v34 = [v30 workQueue];
                  v44[0] = MEMORY[0x1E4F143A8];
                  v44[1] = 3221225472;
                  v44[2] = ____handleUpdatedPassword_block_invoke;
                  v44[3] = &unk_1E6A18528;
                  objc_copyWeak(&v45, (id *)&buf);
                  [v30 writeValue:v33 toCharacteristic:v13 queue:v34 completion:v44];

                  objc_destroyWeak(&v45);
                  objc_destroyWeak((id *)&buf);
                }
              }
              ++v12;
            }
            while (v11 != v12);
            uint64_t v35 = [v41 countByEnumeratingWithState:&v46 objects:v56 count:16];
            uint64_t v11 = v35;
            if (!v35)
            {
LABEL_46:

              break;
            }
          }
        }
        uint64_t v6 = v39 + 1;
      }
      while (v39 + 1 != v38);
      uint64_t v38 = [obj countByEnumeratingWithState:&v50 objects:v57 count:16];
    }
    while (v38);
  }
}

void sub_1D4DED388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id *location)
{
}

void ____handleUpdatedPassword_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = (void *)MEMORY[0x1D9452090]();
  id v6 = WeakRetained;
  uint64_t v7 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = HMFGetLogIdentifier();
    int v9 = 138543618;
    int v10 = v8;
    __int16 v11 = 2112;
    id v12 = v3;
    _os_log_impl(&dword_1D49D5000, v7, OS_LOG_TYPE_DEFAULT, "%{public}@unable to update password setting value with error: %@", (uint8_t *)&v9, 0x16u);
  }
}

void __handleUpdatedMinimumUserPrivilege(void *a1, uint64_t a2)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  id v35 = a1;
  id v3 = [v35 services];
  id v4 = (void *)[v3 copy];

  id obj = v4;
  uint64_t v33 = [v4 countByEnumeratingWithState:&v44 objects:v51 count:16];
  if (v33)
  {
    uint64_t v32 = *(void *)v45;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v45 != v32)
        {
          uint64_t v6 = v5;
          objc_enumerationMutation(obj);
          uint64_t v5 = v6;
        }
        uint64_t v34 = v5;
        uint64_t v7 = *(void **)(*((void *)&v44 + 1) + 8 * v5);
        uint64_t v8 = [v7 type];
        int v9 = [v8 isEqualToString:@"000000DA-0000-1000-8000-0026BB765291"];

        if (v9)
        {
          long long v42 = 0u;
          long long v43 = 0u;
          long long v40 = 0u;
          long long v41 = 0u;
          id v36 = [v7 characteristics];
          uint64_t v10 = [v36 countByEnumeratingWithState:&v40 objects:v50 count:16];
          if (v10)
          {
            uint64_t v11 = *(void *)v41;
            do
            {
              for (uint64_t i = 0; i != v10; ++i)
              {
                if (*(void *)v41 != v11) {
                  objc_enumerationMutation(v36);
                }
                uint64_t v13 = *(void **)(*((void *)&v40 + 1) + 8 * i);
                char v14 = [v13 type];
                int v15 = [v14 isEqualToString:@"000000E5-0000-1000-8000-0026BB765291"];

                if (v15)
                {
                  uint64_t v16 = [v13 value];
                  BOOL v17 = [v16 integerValue] == a2;

                  if (!v17)
                  {
                    uint64_t v18 = (void *)MEMORY[0x1D9452090]();
                    id v19 = v35;
                    id v20 = HMFGetOSLogHandle();
                    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
                    {
                      BOOL v21 = HMFGetLogIdentifier();
                      *(_DWORD *)long long buf = 138543362;
                      long long v49 = v21;
                      _os_log_impl(&dword_1D49D5000, v20, OS_LOG_TYPE_INFO, "%{public}@privilege does not match send update", buf, 0xCu);
                    }
                    unsigned int v22 = [NSNumber numberWithInteger:a2];
                    int v23 = [NSNumber numberWithInteger:a2];
                    id v39 = v22;
                    id v24 = [v13 validateValueForWrite:v23 outValue:&v39];
                    id v25 = v39;

                    if (v24)
                    {
                      id v26 = (void *)MEMORY[0x1D9452090]();
                      id v27 = v19;
                      uint64_t v28 = HMFGetOSLogHandle();
                      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
                      {
                        id v29 = HMFGetLogIdentifier();
                        *(_DWORD *)long long buf = 138543362;
                        long long v49 = v29;
                        _os_log_impl(&dword_1D49D5000, v28, OS_LOG_TYPE_ERROR, "%{public}@invalid minimum user privilege value", buf, 0xCu);
                      }
                    }
                    else
                    {
                      objc_initWeak((id *)buf, v19);
                      id v30 = [v19 workQueue];
                      v37[0] = MEMORY[0x1E4F143A8];
                      v37[1] = 3221225472;
                      v37[2] = ____handleUpdatedMinimumUserPrivilege_block_invoke;
                      _OWORD v37[3] = &unk_1E6A18528;
                      objc_copyWeak(&v38, (id *)buf);
                      [v19 writeValue:v25 toCharacteristic:v13 queue:v30 completion:v37];

                      objc_destroyWeak(&v38);
                      objc_destroyWeak((id *)buf);
                    }
                  }
                }
              }
              uint64_t v10 = [v36 countByEnumeratingWithState:&v40 objects:v50 count:16];
            }
            while (v10);
          }
        }
        uint64_t v5 = v34 + 1;
      }
      while (v34 + 1 != v33);
      uint64_t v33 = [obj countByEnumeratingWithState:&v44 objects:v51 count:16];
    }
    while (v33);
  }
}

void sub_1D4DED9D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id a41)
{
}

void ____handleUpdatedMinimumUserPrivilege_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = (void *)MEMORY[0x1D9452090]();
  id v6 = WeakRetained;
  uint64_t v7 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = HMFGetLogIdentifier();
    int v9 = 138543618;
    uint64_t v10 = v8;
    __int16 v11 = 2112;
    id v12 = v3;
    _os_log_impl(&dword_1D49D5000, v7, OS_LOG_TYPE_DEFAULT, "%{public}@unable to update privilege privilege value with error: %@", (uint8_t *)&v9, 0x16u);
  }
}

void sub_1D4DEE3BC(_Unwind_Exception *a1)
{
}

void sub_1D4DEEB14(_Unwind_Exception *a1)
{
}

void sub_1D4DEEE38(_Unwind_Exception *a1)
{
}

void sub_1D4DEEEE4(_Unwind_Exception *a1)
{
}

void sub_1D4DEF168(_Unwind_Exception *a1)
{
}

void sub_1D4DEF5B0(_Unwind_Exception *a1)
{
}

void sub_1D4DEF6C4(_Unwind_Exception *a1)
{
}

void sub_1D4DF0390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void completeWithError(void *a1, void *a2)
{
  uint64_t v5 = a1;
  id v3 = a2;
  if (v5)
  {
    if (v3)
    {
      v5[2](v5, v3);
    }
    else
    {
      id v4 = [MEMORY[0x1E4F28C58] hmErrorWithCode:52];
      v5[2](v5, v4);
    }
  }
}

id makeConfigurationControl(uint64_t a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F5BE80]);
  id v3 = (void *)[objc_alloc(MEMORY[0x1E4F5BE88]) initWithValue:a1];
  [v2 setOperationType:v3];

  return v2;
}

id makeStationConfiguration(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (objc_class *)MEMORY[0x1E4F5BE98];
  id v5 = a1;
  id v6 = objc_alloc_init(v4);
  [v6 setSSID:v5];

  id v7 = objc_alloc(MEMORY[0x1E4F5BE90]);
  if (v3)
  {
    uint64_t v8 = (void *)[v7 initWithValue:1];
    [v6 setSecurityMode:v8];

    [v6 setPSK:v3];
  }
  else
  {
    int v9 = (void *)[v7 initWithValue:0];
    [v6 setSecurityMode:v9];
  }
  return v6;
}

id encodeRootObjectForRemote(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = (void *)MEMORY[0x1D9452090]();
  int v9 = (void *)[objc_alloc(MEMORY[0x1E4F654E0]) initWithName:@"com.apple.homed.hmdutil.encode-remote."];
  id v10 = [[HMDRemoteKeyedArchiver alloc] initForWritingWithRemoteDeviceIsOnSameAccount:0 remoteGateway:0 remoteUserIsAdministrator:0 user:v6 supportedFeatures:v7];
  [v10 encodeObject:v5 forKey:*MEMORY[0x1E4F284E8]];
  [v10 finishEncoding];
  __int16 v11 = [v10 encodedData];

  return v11;
}

id encodeRootObjectForRemoteDeviceOnSameAccountMigrateToHH2(void *a1, int a2, int a3)
{
  id v5 = a1;
  id v6 = (void *)MEMORY[0x1D9452090]();
  id v7 = (void *)[objc_alloc(MEMORY[0x1E4F654E0]) initWithName:@"com.apple.homed.hmdutil.encode-remote-same."];
  if (a2)
  {
    id v8 = (id)homedSupportedFeatures;
    if (a3)
    {
      int v9 = [MEMORY[0x1E4F1CA48] arrayWithArray:v8];
      [v9 addObject:&unk_1F2DC7CC0];
      uint64_t v10 = [v9 copy];

      uint64_t v11 = 4;
      id v8 = (id)v10;
    }
    else
    {
      uint64_t v11 = 4;
    }
  }
  else
  {
    id v8 = &unk_1F2DC6B68;
    uint64_t v11 = 3;
  }
  id v12 = [[HMDRemoteKeyedArchiver alloc] initForWritingWithRemoteDeviceIsOnSameAccount:1 remoteGateway:0 remoteUserIsAdministrator:1 user:0 dataVersion:v11 supportedFeatures:v8];
  [v12 encodeObject:v5 forKey:*MEMORY[0x1E4F284E8]];
  [v12 finishEncoding];
  uint64_t v13 = [v12 encodedData];

  return v13;
}

id encodeRootObjectForSPIClients(void *a1)
{
  uint64_t v1 = (void *)MEMORY[0x1E4F65480];
  id v2 = a1;
  id v3 = [v1 internalMessageWithName:@"kDummyMessageForEntitledXPC" messagePayload:0];
  id v4 = encodeRootObjectForIncomingXPCMessage(v2, v3);

  return v4;
}

void launchURL(uint64_t a1)
{
  id v2 = [MEMORY[0x1E4F1CB10] URLWithString:a1];
  uint64_t v1 = [MEMORY[0x1E4F223E0] defaultWorkspace];
  [v1 openSensitiveURL:v2 withOptions:0];
}

__CFString *locationAsString(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (isInternalBuild())
    {
      id v2 = [v1 description];
    }
    else
    {
      id v2 = @"[]";
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

__CFString *regionAsString(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (isInternalBuild())
    {
      objc_msgSend(v1, "hm_description");
      id v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      id v2 = @"[]";
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

void createDirectory(void *a1)
{
  v20[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v19 = *MEMORY[0x1E4F28330];
  v20[0] = &unk_1F2DC7D80;
  id v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v20 forKeys:&v19 count:1];
  id v3 = [MEMORY[0x1E4F28CB8] defaultManager];
  char v12 = 0;
  if ([v3 fileExistsAtPath:v1 isDirectory:&v12])
  {
    id v4 = 0;
    if (v12)
    {
LABEL_3:
      id v10 = v4;
      [v3 setAttributes:v2 ofItemAtPath:v1 error:&v10];
      id v5 = v10;

      id v4 = v5;
      goto LABEL_8;
    }
  }
  else
  {
    id v11 = 0;
    int v6 = [v3 createDirectoryAtPath:v1 withIntermediateDirectories:1 attributes:v2 error:&v11];
    id v4 = v11;
    char v12 = v6;
    if (v6) {
      goto LABEL_3;
    }
  }
  id v7 = (void *)MEMORY[0x1D9452090]();
  id v8 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    int v9 = HMFGetLogIdentifier();
    *(_DWORD *)long long buf = 138543874;
    char v14 = v9;
    __int16 v15 = 2112;
    id v16 = v1;
    __int16 v17 = 2112;
    id v18 = v4;
    _os_log_impl(&dword_1D49D5000, v8, OS_LOG_TYPE_ERROR, "%{public}@Could not create directory path %@ - error %@", buf, 0x20u);
  }
LABEL_8:
}

id mapHAPPairingErrorToHMError(void *a1)
{
  id v1 = a1;
  id v2 = [v1 domain];
  id v3 = (void *)*MEMORY[0x1E4F5B998];

  if (v2 == v3)
  {
    uint64_t v11 = [v1 code];
    switch(v11)
    {
      case 18:
        id v4 = (void *)MEMORY[0x1E4F28C58];
        id v5 = @"Accessory is already paired";
        uint64_t v6 = 13;
        goto LABEL_3;
      case 19:
      case 22:
      case 24:
      case 27:
      case 28:
      case 29:
      case 31:
      case 32:
      case 33:
        break;
      case 20:
        id v4 = (void *)MEMORY[0x1E4F28C58];
        id v5 = @"Currently associated WiFi network is not compatible with the accessory";
        id v7 = @"Associate with a 2.4 GHz WiFi network and try again";
        uint64_t v6 = 90;
        goto LABEL_4;
      case 21:
        id v4 = (void *)MEMORY[0x1E4F28C58];
        id v5 = @"This device is not currently associated to a Home WiFi network";
        id v7 = @"Associate to a WiFi network (from Settings -> WiFi) and try again";
        uint64_t v6 = 78;
        goto LABEL_4;
      case 23:
        id v4 = (void *)MEMORY[0x1E4F28C58];
        id v5 = @"Accessories cannot be added to enterprise network";
        uint64_t v6 = 99;
        goto LABEL_3;
      case 25:
        char v12 = (void *)MEMORY[0x1E4F28C58];
        uint64_t v13 = @"Accessory did not join the configured network";
        uint64_t v14 = 2016;
        goto LABEL_19;
      case 26:
        id v4 = (void *)MEMORY[0x1E4F28C58];
        id v5 = @"Failed to join WiFi network";
        id v7 = @"Ensure there is good WiFi signal and try again";
        uint64_t v6 = 102;
        goto LABEL_4;
      case 30:
        char v12 = (void *)MEMORY[0x1E4F28C58];
        uint64_t v13 = @"No supported Thread router or Thread credentials not found";
        uint64_t v14 = 2010;
        goto LABEL_19;
      case 34:
        char v12 = (void *)MEMORY[0x1E4F28C58];
        uint64_t v13 = @"Failed to connect";
        uint64_t v14 = 2015;
LABEL_19:
        uint64_t v8 = [v12 hmPrivateErrorWithCode:v14 description:v13 underlyingError:v1];
        goto LABEL_5;
      case 35:
        id v4 = (void *)MEMORY[0x1E4F28C58];
        id v5 = @"Home hub required";
        id v7 = @"Add a Home hub to Apple Home and try again";
        uint64_t v6 = 91;
        goto LABEL_4;
      case 36:
        id v4 = (void *)MEMORY[0x1E4F28C58];
        uint64_t v6 = 79;
        id v5 = 0;
        goto LABEL_3;
      default:
        if (v11 != 8) {
          break;
        }
        id v4 = (void *)MEMORY[0x1E4F28C58];
        id v5 = @"Connection was lost with the accessory";
        id v7 = @"Ensure there is good WiFi signal, reset the accessory and try again";
        uint64_t v6 = 54;
        goto LABEL_4;
    }
  }
  id v4 = (void *)MEMORY[0x1E4F28C58];
  id v5 = @"Pairing Failed";
  uint64_t v6 = 18;
LABEL_3:
  id v7 = 0;
LABEL_4:
  uint64_t v8 = [v4 hmErrorWithCode:v6 description:v5 reason:0 suggestion:v7 underlyingError:v1];
LABEL_5:
  int v9 = (void *)v8;

  return v9;
}

id determineHomeKitDaemonRootStorePath()
{
  uint64_t v0 = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, 1uLL, 1);
  uint64_t v1 = [v0 firstObject];
  if (v1)
  {
    id v2 = (void *)v1;
    id v3 = [MEMORY[0x1E4F65548] productInfo];
    uint64_t v4 = [v3 productPlatform];

    if (v4 == 1) {
      id v5 = @"HomeKit";
    }
    else {
      id v5 = @"homed";
    }
    uint64_t v6 = [v2 stringByAppendingPathComponent:v5];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void __initializePaths_block_invoke()
{
  v66[1] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1D9452090]();
  uint64_t v1 = determineHomeKitDaemonRootStorePath();
  id v2 = (void *)storeDirectoryPath;
  storeDirectoryPath = v1;

  if (storeDirectoryPath)
  {
    uint64_t v3 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"protected-home.config"];
    uint64_t v4 = (void *)configProtectedDataStorePath;
    configProtectedDataStorePath = v3;

    uint64_t v5 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"vendor-id-store"];
    uint64_t v6 = (void *)configVendorIDStorePath;
    configVendorIDStorePath = v5;

    uint64_t v7 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"protected-metadata.config"];
    uint64_t v8 = (void *)configProtectedMetadataPath;
    configProtectedMetadataPath = v7;

    uint64_t v9 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"plain-metadata.config"];
    id v10 = (void *)configPlainMetadataPath;
    configPlainMetadataPath = v9;

    uint64_t v11 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"server-token"];
    char v12 = (void *)serverTokenDataStorePath;
    serverTokenDataStorePath = v11;

    uint64_t v13 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"transaction-journal"];
    uint64_t v14 = (void *)transactionJournalDataStorePath;
    transactionJournalDataStorePath = v13;

    uint64_t v15 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"datasync-journal"];
    id v16 = (void *)idsDataSyncJournalDataStorePath;
    idsDataSyncJournalDataStorePath = v15;

    uint64_t v17 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"blacklisted-bundles"];
    id v18 = (void *)blacklistedBundlesStorePath;
    blacklistedBundlesStorePath = v17;

    uint64_t v19 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"registered-applications"];
    id v20 = (void *)registeredApplicationsDataStorePath;
    registeredApplicationsDataStorePath = v19;

    uint64_t v21 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"bulletin-board"];
    unsigned int v22 = (void *)bulletinBoardDataStorePath;
    bulletinBoardDataStorePath = v21;

    uint64_t v23 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"cloud-cache"];
    id v24 = (void *)cloudCachePath;
    cloudCachePath = v23;

    uint64_t v25 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"datastore.sqlite"];
    id v26 = (void *)sqlitePath;
    sqlitePath = v25;

    uint64_t v27 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"eventstore-devel.sqlite"];
    uint64_t v28 = (void *)eventStorePath;
    eventStorePath = v27;

    uint64_t v29 = [(id)storeDirectoryPath stringByAppendingString:@"/BLECache"];
    id v30 = (void *)bleAccessoryCachePath;
    bleAccessoryCachePath = v29;

    uint64_t v31 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"com.apple.relaunch.assertion.plist"];
    uint64_t v32 = (void *)launchdAssertionPlistPath;
    launchdAssertionPlistPath = v31;

    uint64_t v33 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"metricsCounters"];
    uint64_t v34 = (void *)metricsCountersPersistentStorePath;
    metricsCountersPersistentStorePath = v33;

    uint64_t v35 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"eventcounters-groupstore"];
    id v36 = (void *)eventCountersDataStorePath;
    eventCountersDataStorePath = v35;

    uint64_t v37 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"eventcounters-datastore"];
    id v38 = (void *)eventCountersDataStoreLegacyPath;
    eventCountersDataStoreLegacyPath = v37;

    uint64_t v39 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"eventflags-datastore"];
    long long v40 = (void *)eventFlagsDataStorePath;
    eventFlagsDataStorePath = v39;

    uint64_t v41 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"core.sql"];
    long long v42 = (void *)coreDataDataStorePath;
    coreDataDataStorePath = v41;

    uint64_t v43 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"/HH1ToHH2PerDeviceMigration"];
    long long v44 = (void *)hh1ToHH2PerDeviceMigrationDirectoryPath;
    hh1ToHH2PerDeviceMigrationDirectoryPath = v43;

    uint64_t v45 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"/hh1TestArchives"];
    long long v46 = (void *)hh1TestArchivesDirectoryPath;
    hh1TestArchivesDirectoryPath = v45;

    long long v47 = HMDCreateHomeKitDaemonCacheDirectory();
    uint64_t v48 = [v47 stringByAppendingPathComponent:@"hh2MigratorRecordStore.plist"];
    long long v49 = (void *)hh2MigratorRecordStorePath;
    hh2MigratorRecordStorePath = v48;

    uint64_t v50 = [v47 stringByAppendingPathComponent:@"hh2MigrationFailureRecordStore.plist"];
    long long v51 = (void *)hh2MigrationFailureRecordStorePath;
    hh2MigrationFailureRecordStorePath = v50;

    uint64_t v52 = [v47 stringByAppendingPathComponent:@"hh2MigrationLogEventStore.plist"];
    long long v53 = (void *)hh2MigrationLogEventPath;
    hh2MigrationLogEventPath = v52;

    uint64_t v65 = *MEMORY[0x1E4F28330];
    v66[0] = &unk_1F2DC7D80;
    uint64_t v54 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v66 forKeys:&v65 count:1];
    v64[0] = storeDirectoryPath;
    v64[1] = bleAccessoryCachePath;
    v64[2] = hh1ToHH2PerDeviceMigrationDirectoryPath;
    uint64_t v55 = [MEMORY[0x1E4F1C978] arrayWithObjects:v64 count:3];
    v62[0] = MEMORY[0x1E4F143A8];
    v62[1] = 3221225472;
    v62[2] = ___initializeProtectedStorePaths_block_invoke;
    v62[3] = &unk_1E6A0B840;
    id v63 = v54;
    id v56 = v54;
    objc_msgSend(v55, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v62);
  }
  uint64_t v57 = [MEMORY[0x1E4F28B50] bundleWithIdentifier:@"com.apple.HomeKitDaemon"];
  uint64_t v58 = [v57 pathForResource:@"plain-metadata-full.config" ofType:0];
  long long v59 = (void *)builtinConfigMetadataDictionaryPath;
  builtinConfigMetadataDictionaryPath = v58;

  if (!builtinConfigMetadataDictionaryPath)
  {
    uint64_t v60 = [v57 pathForResource:@"plain-metadata.config" ofType:0];
    long long v61 = (void *)builtinConfigMetadataDictionaryPath;
    builtinConfigMetadataDictionaryPath = v60;
  }
}

void ___initializeProtectedStorePaths_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = v3;
  id v6 = v4;
  uint64_t v7 = [MEMORY[0x1E4F28CB8] defaultManager];
  if ([v7 fileExistsAtPath:v5 isDirectory:0])
  {
    id v13 = 0;
    [v7 setAttributes:v6 ofItemAtPath:v5 error:&v13];
    id v8 = v13;
    uint64_t v9 = (void *)MEMORY[0x1D9452090]();
    id v10 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543874;
      uint64_t v15 = v11;
      __int16 v16 = 2112;
      id v17 = v5;
      __int16 v18 = 2112;
      id v19 = v8;
      char v12 = "%{public}@Setting attributes to directory path %@ resulted into error : %@";
LABEL_6:
      _os_log_impl(&dword_1D49D5000, v10, OS_LOG_TYPE_INFO, v12, buf, 0x20u);
    }
  }
  else
  {
    id v13 = 0;
    [v7 createDirectoryAtPath:v5 withIntermediateDirectories:1 attributes:v6 error:&v13];
    id v8 = v13;
    uint64_t v9 = (void *)MEMORY[0x1D9452090]();
    id v10 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543874;
      uint64_t v15 = v11;
      __int16 v16 = 2112;
      id v17 = v5;
      __int16 v18 = 2112;
      id v19 = v8;
      char v12 = "%{public}@Create store directory path %@ finished with error %@";
      goto LABEL_6;
    }
  }
}

void __initializeCapabilitiesAndTimeouts_block_invoke(uint64_t a1)
{
  uint64_t v182 = *MEMORY[0x1E4F143B8];
  id v2 = (void *)MEMORY[0x1D9452090]();
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = [MEMORY[0x1E4F65548] productInfo];
  id v5 = (void *)MEMORY[0x1D9452090]();
  id v6 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = HMFGetLogIdentifier();
    *(_DWORD *)long long buf = 138543618;
    *(void *)&uint8_t buf[4] = v7;
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v4;
    _os_log_impl(&dword_1D49D5000, v6, OS_LOG_TYPE_DEFAULT, "%{public}@Initializing with product info: %@", buf, 0x16u);
  }

  uint64_t v8 = MGCopyAnswer();
  if (v8)
  {
    uint64_t v9 = (const void *)v8;
    uint64_t v10 = [NSString stringWithString:v8];
    uint64_t v11 = (void *)uniqueDeviceId;
    uniqueDeviceId = v10;

    CFRelease(v9);
  }
  BOOL v12 = +[HMDDeviceCapabilities isAppleMediaAccessory];
  id v13 = @"00000000-0000-0000-0000-C2EE6102B308";
  if (!v12) {
    id v13 = @"20BC605A-C33B-4D36-B885-C2EE6102B308";
  }
  uint64_t v14 = v13;
  if ([(__CFString *)v14 isEqualToString:@"20BC605A-C33B-4D36-B885-C2EE6102B308"])
  {
    uint64_t v15 = @"NonMediaDevice/";
  }
  else if ([(__CFString *)v14 isEqualToString:@"00000000-0000-0000-0000-C2EE6102B308"])
  {
    uint64_t v15 = @"UnknownMediaDevice/";
  }
  else
  {
    uint64_t v15 = &stru_1F2C9F1A8;
  }
  __int16 v16 = (void *)MEMORY[0x1D9452090]();
  id v17 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v18 = HMFGetLogIdentifier();
    *(_DWORD *)long long buf = 138543874;
    *(void *)&uint8_t buf[4] = v18;
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v15;
    *(_WORD *)&buf[22] = 2112;
    char v181 = v14;
    _os_log_impl(&dword_1D49D5000, v17, OS_LOG_TYPE_DEFAULT, "%{public}@Setting media remote ID: %@%@", buf, 0x20u);
  }
  id v19 = (void *)_mediaRouteIdentifier;
  _mediaRouteIdentifier = (uint64_t)v14;

  uint64_t v20 = +[HMDHomeKitVersion currentVersion];
  uint64_t v21 = objc_msgSend(NSString, "stringWithFormat:", @"%tu.%tu", objc_msgSend(v20, "majorVersion"), objc_msgSend(v20, "minorVersion"));
  unsigned int v22 = NSNumber;
  [v21 doubleValue];
  uint64_t v23 = objc_msgSend(v22, "numberWithDouble:");
  id v24 = (void *)homedVersion;
  homedVersion = v23;

  uint64_t v25 = [[HMDHomeKitVersion alloc] initWithVersionString:@"3.0"];
  id v26 = (void *)minimumSupportedResidentHomeKitVersion;
  minimumSupportedResidentHomeKitVersion = (uint64_t)v25;

  uint64_t v27 = (void *)homedSupportedFeatures;
  homedSupportedFeatures = (uint64_t)&unk_1F2DC6B80;

  if (isiOSDevice() || isTVOSDevice())
  {
    uint64_t v28 = [(id)homedSupportedFeatures arrayByAddingObjectsFromArray:&unk_1F2DC6B98];
    uint64_t v29 = (void *)homedSupportedFeatures;
    homedSupportedFeatures = v28;
  }
  id v30 = +[HMDDeviceCapabilities deviceCapabilities];
  int v31 = [v30 supportsFaceClassification];

  if (v31)
  {
    uint64_t v32 = [(id)homedSupportedFeatures arrayByAddingObject:&unk_1F2DC7E10];
    uint64_t v33 = (void *)homedSupportedFeatures;
    homedSupportedFeatures = v32;
  }
  uint64_t v34 = objc_msgSend(MEMORY[0x1E4F1C978], "arrayWithObjects:", @"NSDebugDescription", @"NSLocalizedDescription", @"RequestUUID", @"ServerErrorDescription", @"CKErrorDescription", 0);
  uint64_t v35 = (void *)ckErrorUserInfoKeys;
  ckErrorUserInfoKeys = v34;

  LODWORD(v175) = 0;
  CFDictionaryGetTypeID();
  id v36 = (void *)CFPrefs_CopyTypedValue();
  if (v36)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v37 = [v36 objectForKey:@"kHomesDataBlobKey"];
      id v38 = [v36 objectForKey:@"kDataSignatureKey"];
      if (v37)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          if (v38)
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              uint64_t v174 = v2;
              uint64_t v39 = (void *)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithBase64EncodedString:@"KQveymsUTHc1aqyc73tl3VuYb4Ls0j1+RnvdDxNymjU=" options:0];
              id v172 = v37;
              [v172 bytes];
              [v172 length];
              [v38 bytes];
              id v40 = v39;
              [v40 bytes];
              if (!cced25519_verify_compat())
              {
                uint64_t v173 = (void *)MEMORY[0x1E4F28DC0];
                uint64_t v41 = (void *)MEMORY[0x1E4F1CAD0];
                *(void *)long long buf = objc_opt_class();
                *(void *)&buf[8] = objc_opt_class();
                *(void *)&buf[16] = objc_opt_class();
                long long v42 = [MEMORY[0x1E4F1C978] arrayWithObjects:buf count:3];
                uint64_t v43 = [v41 setWithArray:v42];
                long long v44 = [v173 deserializeObjectWithData:v172 allowedClasses:v43];

                if (v44)
                {
                  objc_opt_class();
                  if (objc_opt_isKindOfClass())
                  {
                    uint64_t v45 = [v44 objectForKey:@"kHomeDataBlobKey"];
                    long long v46 = [v44 objectForKey:@"kControllerKeyPairKey"];
                    uint64_t v47 = [v44 objectForKey:@"kControllerPairingNameKey"];
                    uint64_t v48 = (void *)v47;
                    if (v45 && v46 && v47)
                    {
                      long long v49 = [MEMORY[0x1E4F5BE48] systemStore];
                      [v49 removeControllerKeyPairWithError:0];
                      if ([v49 saveKeyPair:v46 username:v48 syncable:0 error:0])
                      {
                        id v50 = (id)configProtectedDataStorePath;
                        id v51 = +[HMDPersistentStore writeData:v45 toStorePath:v50 dataLabel:@"home data"];

                        retailDemoDataEncoded = 1;
                      }
                    }
                  }
                }
              }
              id v2 = v174;
            }
          }
        }
      }
    }
  }

  if ((isInternalBuild() & 1) != 0
    || ([MEMORY[0x1E4F65548] productInfo],
        uint64_t v52 = objc_claimAutoreleasedReturnValue(),
        uint64_t v53 = [v52 productVariant],
        v52,
        v53 == 2))
  {
    *(_DWORD *)long long buf = 0;
    uint64_t Int64 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      skipAuthPromptDialog = Int64 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v55 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      showAuthDialog = v55 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v56 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      disableCloudDataSynCC_SHA256_CTX c = v56 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v57 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      disableLegacyCloudDataSynCC_SHA256_CTX c = v57 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v58 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      enableWakeNotifications = v58 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v59 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      disableWACBrowser = v59 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v60 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      delayBatchedReadWrite = v60 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v61 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      enableNetworkLogging = v61 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v62 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      enableRetailDemoSetup = v62 != 0;
    }
    int v179 = 0;
    CFDictionaryGetTypeID();
    id v63 = (void *)CFPrefs_CopyTypedValue();
    long long v64 = [MEMORY[0x1E4F1CA60] dictionary];
    long long v175 = 0u;
    long long v176 = 0u;
    long long v177 = 0u;
    long long v178 = 0u;
    id v65 = v63;
    uint64_t v66 = [v65 countByEnumeratingWithState:&v175 objects:buf count:16];
    if (v66)
    {
      uint64_t v67 = v66;
      uint64_t v68 = *(void *)v176;
      do
      {
        for (uint64_t i = 0; i != v67; ++i)
        {
          if (*(void *)v176 != v68) {
            objc_enumerationMutation(v65);
          }
          uint64_t v70 = *(void *)(*((void *)&v175 + 1) + 8 * i);
          long long v71 = (void *)[objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:v70];
          id v72 = objc_alloc(MEMORY[0x1E4F29128]);
          long long v73 = [v65 objectForKey:v70];
          long long v74 = (void *)[v72 initWithUUIDString:v73];

          [v64 setObject:v74 forKey:v71];
        }
        uint64_t v67 = [v65 countByEnumeratingWithState:&v175 objects:buf count:16];
      }
      while (v67);
    }

    long long v75 = (void *)preferredPrimaryForHome;
    preferredPrimaryForHome = (uint64_t)v64;
    id v76 = v64;

    CFStringGetTypeID();
    uint64_t v77 = CFPrefs_CopyTypedValue();
    if (v77)
    {
      long long v78 = (const void *)v77;
      uint64_t v79 = CKContainerEnvironmentFromString();
      uint64_t v80 = (void *)MEMORY[0x1D9452090]();
      HMFGetOSLogHandle();
      id v81 = (id)objc_claimAutoreleasedReturnValue();
      id v82 = v81;
      if (v79)
      {
        if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          id v83 = (id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)long long buf = 138543618;
          *(void *)&uint8_t buf[4] = v83;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v78;
          _os_log_impl(&dword_1D49D5000, v82, OS_LOG_TYPE_DEFAULT, "%{public}@Overriding CloudKit container environment to %@", buf, 0x16u);
        }
        cloudKitContainerEnvironment = v79;
      }
      else
      {
        if (os_log_type_enabled(v81, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          id v84 = (id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)long long buf = 138543618;
          *(void *)&uint8_t buf[4] = v84;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v78;
          _os_log_impl(&dword_1D49D5000, v82, OS_LOG_TYPE_ERROR, "%{public}@Invalid CloudKit environment %@", buf, 0x16u);
        }
      }
      CFRelease(v78);
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v85 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudPushBatchLimit = v85;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v86 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maxCloudOperationRetries = v86;
    }
    CFPrefs_GetDouble();
    minimumTimerRecurrence = v87;
    *(_DWORD *)long long buf = 0;
    uint64_t v88 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudUploadTimerInterval = v88;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v89 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudUploadMaximumTimerInterval = v89;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v90 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudUploadTimerIntervalExponentialFactor = v90;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v91 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudZoneUploadTimerInitialInterval = v91;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v92 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudZoneUploadTimerInterval = v92;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v93 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudRecordSizeLimit = v93;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v94 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      userPushCacheTimeInterval = v94;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v95 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      aggressiveControllerKeyPollInterval = v95;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v96 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      watchdogControllerKeyPollTimeout = v96;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v97 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      controllerKeyPollInterval = v97;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v98 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      keychainPopupTimerInterval = v98;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v99 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      checkRemoteAccessTimeout = v99;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v100 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      hrsCommitTimeoutNanoseconds = 1000000000 * v100;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v101 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      hrsIdleClientTimeoutNanoseconds = 1000000000 * v101;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v102 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      hrsIdleServertTimeoutNanoseconds = 1000000000 * v102;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v103 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      hrsSendInternalRequestTimeoutNanoseconds = 1000000000 * v103;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v104 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      hrsSendInternalRequestToWatchTimeoutNanoseconds = 1000000000 * v104;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v105 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      hrsSendUserRequestTimeoutNanoseconds = 1000000000 * v105;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v106 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      btleReachabilityTimerNanoseconds = 1000000000 * v106;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v107 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      btleReachabilityLeewayNanoseconds = 1000000000 * v107;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v108 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      btleReachabilityProbeReduceFactor = v108;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v109 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      remotePendingResponseTimerNanoseconds = 1000000000 * v109;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v110 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      remotePendingResponseLeewayNanoseconds = 1000000000 * v110;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v111 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      remotePendingResponseDecayScale = v111;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      accessoryConnectivityWaitPeriod = v112;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v113 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudDataSyncInProgressWaitPeriod = v113;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v114 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      controllerKeyNotLandingWaitPeriod = v114;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v115 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      controllerKeyNotLandingShortCircuitWaitPeriod = v115;
    }
    if (isHomePod()) {
      assistantClientReadWriteTimeoutSeconds = 0x4022000000000000;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      assistantClientReadWriteTimeoutSeconds = v116;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      assistantClientActionSetTimeoutSeconds = v117;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      disableNotificationsDeferPeriod = v118;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      coalesceNotificationsPeriod = v119;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      pendingResponseTickPeriod = v120;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      pendingResponseMaxPeriod = v121;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      delayNotificationsPeriod = v122;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      remoteReachabilityNotificationsDeferPeriod = v123;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      remoteReachabilityDeregistrationDeferPeriod = v124;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v125 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      deviceConnectionKeepAliveTimerPeriod = v125;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v126 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      deviceConnectionKeepAliveResponseTimeoutPeriod = v126;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      pairingInterruptionGracePeriod = v127;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      pairingReconfirmWaitPeriod = v128;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      vendorInfoFetchPeriod = v129;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      attestationInfoFetchPeriod = v130;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      keyTransferBroadcastMaximumDelay = v131;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      mediaBrowserProcessingInterval = v132;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      disableReprivsionBrowsingPeriodInMinutes = v133;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      authServerRetryTimeIntervalInSeconds = v134;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v135 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      authServerRetryCount = v135;
    }
    _overrideNumberArray((void **)&supportedResolutions);
    _overrideNumberArray((void **)&supportedVideoCodecs);
    _overrideNumberArray((void **)&supportedAudioCodecs);
    _overrideNumberArray((void **)&supportedSRTPAuths);
    *(_DWORD *)long long buf = 0;
    uint64_t v136 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      videoAttributesUpgradeDebouceTimer = v136;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v137 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      videoAttributesDowngradeDebouceTimer = v137;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v138 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cameraStreamNetworkAdaptation = v138 != 0;
    }
    _overrideNumber((id *)&rtpPtime);
    _overrideNumber((id *)&snapshotResolution);
    *(_DWORD *)long long buf = 0;
    uint64_t v139 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumSimultaneousRemoteStreams = v139;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v140 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumSecureRemoteStreams = v140;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      secureSessionMessageTimeout = v141;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      snapshotCacheValidPeriod = v142;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v143 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumHomes = v143;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v144 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumAccessoriesPerHome = v144;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v145 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumRoomsPerHome = v145;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v146 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumZonesPerHome = v146;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v147 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumTriggersPerHome = v147;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v148 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumActionSetsPerHome = v148;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v149 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumServiceGroupsPerHome = v149;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v150 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumUsersPerHome = v150;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v151 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumRoomsPerZone = v151;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v152 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumActionsPerActionSet = v152;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v153 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumServicesPerServiceGroup = v153;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v154 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumAccessoriesPerBridge = v154;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v155 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumServicesPerAccessory = v155;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v156 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumCharacteristicsPerService = v156;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v157 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumDataSyncFragmentSize = v157;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v158 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      bulletinSecureTriggerTimeoutInSeconds = v158;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v159 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      secureTriggerUserResponseTimeoutInSeconds = v159;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v160 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      broadcastKeyRefreshTimeInSeconds = v160;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v161 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      bluetoothGSNMaxValue = v161;
    }
    unint64_t v162 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
    allowAnonymousServerConnections = [v162 BOOLForKey:@"allowAnonymousServerConnections"];

    _overrideNSString((id *)&vendorInfoDatabaseServerURLOverride);
    _overrideNSString((id *)&appleConfigurationServer);
    _overrideNSString((id *)&homeKitConfigurationPath);
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      remoteDeviceMonitorHealthTimerTimeInterval = v163;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      remoteDeviceMonitorRetryTimerMinimumTimeInterval = v164;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      remoteDeviceMonitorRetryTimerMaximumTimeInterval = v165;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v166 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      remoteDeviceMonitorRetryTimerFactor = v166;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v167 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      presenceFeedRefreshInMinutes = v167;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v168 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      presenceMonitorAuditInMinutes = v168;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v169 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      presenceMonitorRefreshGracePeriodInMinutes = v169;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v170 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      startCharacteristicsMonitorWaitPeriod = v170;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v171 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      requestHomeDataSyncRetryPeriodInMinutes = v171;
    }
  }
}

BOOL isHomePod()
{
  uint64_t v0 = [MEMORY[0x1E4F65548] productInfo];
  BOOL v1 = [v0 productClass] == 6;

  return v1;
}

void _overrideNumberArray(void **a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  int v13 = 0;
  CFArrayGetTypeID();
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v2 = (id)CFPrefs_CopyTypedValue();
  uint64_t v3 = [v2 countByEnumeratingWithState:&v9 objects:v14 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v10;
    while (2)
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          uint64_t v8 = v2;
          goto LABEL_11;
        }
        ++v6;
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v9 objects:v14 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }

  id v7 = v2;
  uint64_t v8 = *a1;
  *a1 = v7;
LABEL_11:
}

void _overrideNumber(id *a1)
{
  CFNumberGetTypeID();
  id v2 = (void *)CFPrefs_CopyTypedValue();
  objc_storeStrong(a1, v2);
}

void _overrideNSString(id *a1)
{
  CFStringGetTypeID();
  id v2 = (void *)CFPrefs_CopyTypedValue();
  objc_storeStrong(a1, v2);
}

BOOL isMac()
{
  uint64_t v0 = [MEMORY[0x1E4F65548] productInfo];
  BOOL v1 = [v0 productPlatform] == 1;

  return v1;
}

uint64_t isBTLECapableDevice()
{
  uint64_t v0 = [MEMORY[0x1E4F65570] systemInfo];
  uint64_t v1 = [v0 supportsBLE];

  return v1;
}

id deviceName()
{
  uint64_t v0 = [MEMORY[0x1E4F65570] systemInfo];
  uint64_t v1 = [v0 name];

  return v1;
}

__CFString *getDeviceClass()
{
  if (isAppleTV()) {
    uint64_t v0 = @"kDeviceClassTypeResident";
  }
  else {
    uint64_t v0 = @"kDeviceClassTypeTransient";
  }
  return v0;
}

BOOL isPasscodeEnabledOnThisDevice()
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  if (+[HMDDeviceCapabilities supportsDeviceLock])
  {
    int v0 = MKBGetDeviceLockState();
    uint64_t v1 = (void *)MEMORY[0x1D9452090]();
    id v2 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = HMFGetLogIdentifier();
      int v8 = 138543618;
      long long v9 = v3;
      __int16 v10 = 2048;
      uint64_t v11 = v0;
      _os_log_impl(&dword_1D49D5000, v2, OS_LOG_TYPE_INFO, "%{public}@Device lock state (passcode): %ld", (uint8_t *)&v8, 0x16u);
    }
    return v0 != 3;
  }
  else
  {
    uint64_t v5 = (void *)MEMORY[0x1D9452090]();
    uint64_t v6 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      id v7 = HMFGetLogIdentifier();
      int v8 = 138543362;
      long long v9 = v7;
      _os_log_impl(&dword_1D49D5000, v6, OS_LOG_TYPE_INFO, "%{public}@Device does not support device lock (passcode).", (uint8_t *)&v8, 0xCu);
    }
    return 0;
  }
}

uint64_t getHMMaximumUsersPerHome()
{
  return maximumUsersPerHome;
}

id getBLEAccessoryCachePath()
{
  v28[1] = *MEMORY[0x1E4F143B8];
  int v0 = [MEMORY[0x1E4F28CB8] defaultManager];
  uint64_t v1 = v0;
  char v20 = 0;
  if (storeDirectoryPath)
  {
    if (!bleAccessoryCachePath
      || ([v0 fileExistsAtPath:bleAccessoryCachePath isDirectory:&v20] & 1) == 0)
    {
      uint64_t v27 = *MEMORY[0x1E4F28330];
      v28[0] = &unk_1F2DC7D80;
      id v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v28 forKeys:&v27 count:1];
      uint64_t v3 = [(id)storeDirectoryPath stringByAppendingString:@"/BLECache"];
      uint64_t v4 = (void *)bleAccessoryCachePath;
      bleAccessoryCachePath = v3;

      id v19 = 0;
      int v5 = [v1 createDirectoryAtPath:bleAccessoryCachePath withIntermediateDirectories:1 attributes:v2 error:&v19];
      id v6 = v19;
      id v7 = v6;
      char v20 = v5;
      if (v5)
      {
        id v18 = v6;
        [v1 setAttributes:v2 ofItemAtPath:bleAccessoryCachePath error:&v18];
        id v8 = v18;

        id v7 = v8;
      }
      else
      {
        int v13 = (void *)MEMORY[0x1D9452090]();
        uint64_t v14 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          uint64_t v15 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543874;
          unsigned int v22 = v15;
          __int16 v23 = 2112;
          uint64_t v24 = bleAccessoryCachePath;
          __int16 v25 = 2112;
          id v26 = v7;
          _os_log_impl(&dword_1D49D5000, v14, OS_LOG_TYPE_ERROR, "%{public}@Could not create BLE Cache directory path %@ - error %@", buf, 0x20u);
        }
      }
    }
  }
  else
  {
    long long v9 = (void *)MEMORY[0x1D9452090]();
    __int16 v10 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      unsigned int v22 = v11;
      __int16 v23 = 2112;
      uint64_t v24 = storeDirectoryPath;
      id v12 = (id)storeDirectoryPath;
      _os_log_impl(&dword_1D49D5000, v10, OS_LOG_TYPE_ERROR, "%{public}@Store Directory not initialized: %@", buf, 0x16u);
    }
  }
  id v16 = (id)bleAccessoryCachePath;

  return v16;
}

id getImagesPath()
{
  int v0 = HMDCreateHomeKitDaemonCacheDirectory();
  uint64_t v1 = [v0 stringByAppendingString:@"/Snapshots"];

  return v1;
}

id getBulletinImagesPath()
{
  int v0 = HMDCreateHomeKitDaemonCacheDirectory();
  uint64_t v1 = [v0 stringByAppendingString:@"/BulletinSnapshots"];

  return v1;
}

id HMDHomeKitDaemonDemoModePersistencePath()
{
  int v0 = (void *)MEMORY[0x1E4F1CB10];
  uint64_t v1 = HMDCreateHomeKitDaemonCacheDirectory();
  id v2 = [v0 fileURLWithPath:v1];

  uint64_t v3 = [v2 URLByAppendingPathComponent:@"DemoMode.data"];

  return v3;
}

BOOL compareCharacteristicValue(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  unint64_t v7 = a1;
  unint64_t v8 = a2;
  id v9 = a4;
  if (!v7 || !v8)
  {
    BOOL v14 = (v7 | v8) == 0;
    goto LABEL_49;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v10 = (id)v8;
      id v11 = (id)v7;
      id v12 = v10;
      BOOL v13 = *(unsigned char *)[v12 objCType] == 102
         || *(unsigned __int8 *)[v12 objCType] == 100;
      id v15 = v11;
      if (*(unsigned char *)[v15 objCType] == 102
        || ((id v16 = v15, *(unsigned char *)[v16 objCType] == 100)
          ? (int v17 = 1)
          : (int v17 = v13),
            v17 == 1))
      {
        [v12 doubleValue];
        double v19 = v18;
        uint64_t v20 = [v15 doubleValue];
        double v22 = v21;
        double v23 = 0.00999999978;
        if (v9)
        {
          uint64_t v20 = [v9 doubleValue];
          if (fabs(v24) >= 2.22044605e-16)
          {
            uint64_t v20 = [v9 doubleValue];
            double v23 = v25;
          }
        }
        context = (void *)MEMORY[0x1D9452090](v20);
        id v26 = HMFGetOSLogHandle();
        uint64_t v27 = (uint64_t)(v19 * (1.0 / v23));
        uint64_t v28 = (uint64_t)(v22 * (1.0 / v23));
        if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
        {
          uint64_t v29 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138544642;
          long long v46 = v29;
          __int16 v47 = 2048;
          double v48 = v19;
          __int16 v49 = 2048;
          id v50 = (id)(uint64_t)(v19 * (1.0 / v23));
          __int16 v51 = 2048;
          double v52 = v22;
          __int16 v53 = 2048;
          uint64_t v54 = (uint64_t)(v22 * (1.0 / v23));
          __int16 v55 = 2048;
          double v56 = v23;
          _os_log_impl(&dword_1D49D5000, v26, OS_LOG_TYPE_INFO, "%{public}@Saved double value: %lf (%ld), current double value: %lf (%ld), step value: %lf", buf, 0x3Eu);
        }
        switch((unint64_t)a3)
        {
          case 0uLL:
            BOOL v14 = v28 < v27;
            break;
          case 1uLL:
            BOOL v14 = v28 <= v27;
            break;
          case 2uLL:
            BOOL v14 = v28 > v27;
            break;
          case 3uLL:
            BOOL v14 = v28 >= v27;
            break;
          case 5uLL:
            BOOL v14 = v28 != v27;
            break;
          default:
            BOOL v14 = v28 == v27;
            break;
        }

        goto LABEL_49;
      }
    }
  }
  if (objc_opt_respondsToSelector() & 1) != 0 && (objc_opt_respondsToSelector())
  {
    unint64_t v30 = [(id)v7 compare:v8];
    switch((unint64_t)a3)
    {
      case 0uLL:
        BOOL v31 = v30 == -1;
        goto LABEL_37;
      case 1uLL:
        BOOL v38 = v30 + 1 >= 2;
        goto LABEL_33;
      case 2uLL:
        BOOL v31 = v30 == 1;
        goto LABEL_37;
      case 3uLL:
        BOOL v38 = v30 >= 2;
LABEL_33:
        BOOL v14 = !v38;
        break;
      case 5uLL:
        BOOL v14 = v30 != 0;
        break;
      default:
        BOOL v31 = v30 == 0;
LABEL_37:
        BOOL v14 = v31;
        break;
    }
    uint64_t v39 = (void *)MEMORY[0x1D9452090]();
    id v40 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
    {
      uint64_t v41 = HMFGetLogIdentifier();
      long long v42 = HMFBooleanToString();
      *(_DWORD *)long long buf = 138544386;
      long long v46 = v41;
      __int16 v47 = 2112;
      double v48 = *(double *)&v7;
      __int16 v49 = 2048;
      id v50 = a3;
      __int16 v51 = 2112;
      double v52 = *(double *)&v8;
      __int16 v53 = 2112;
      uint64_t v54 = (uint64_t)v42;
      _os_log_impl(&dword_1D49D5000, v40, OS_LOG_TYPE_INFO, "%{public}@Comparing characteristic value %@ (op:%tu) %@, result: %@", buf, 0x34u);
    }
  }
  else
  {
    uint64_t v32 = (void *)MEMORY[0x1D9452090]();
    uint64_t v33 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
    {
      uint64_t v34 = HMFGetLogIdentifier();
      uint64_t v35 = objc_opt_class();
      id v36 = v35;
      *(_DWORD *)long long buf = 138543874;
      long long v46 = v34;
      __int16 v47 = 2112;
      double v48 = *(double *)&v35;
      __int16 v49 = 2112;
      id v50 = (id)objc_opt_class();
      id v37 = v50;
    }
    BOOL v14 = 0;
  }
LABEL_49:

  return v14;
}

id spiClientIdentifierForUUIDAndSalts(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  int v5 = +[HMDProcessInfo privateClientIdentifierSalt];
  id v6 = objc_msgSend(MEMORY[0x1E4F29128], "hm_deriveUUIDFromBaseUUID:identifierSalt:withSalts:", v4, v5, v3);

  return v6;
}

uint64_t shouldLogPrivateInformation()
{
  int v0 = [MEMORY[0x1E4F65530] sharedPreferences];
  uint64_t v1 = [v0 preferenceForKey:@"shouldLogPrivateInformation"];
  uint64_t v2 = [v1 BOOLValue];

  return v2;
}

HMDHomeKitVersion *fixHomeKitVersion(void *a1)
{
  id v1 = a1;
  if ((unint64_t)[v1 minorVersion] >= 0xA && objc_msgSend(v1, "minorVersion"))
  {
    uint64_t v2 = [[HMDHomeKitVersion alloc] initWithVersionString:@"10.0"];
    if ([v1 isAtLeastVersion:v2])
    {
      id v3 = (HMDHomeKitVersion *)v1;
    }
    else
    {
      double v5 = round(log10((double)(unint64_t)[v1 minorVersion]));
      id v3 = -[HMDHomeKitVersion initWithMajorVersion:minorVersion:updateVersion:]([HMDHomeKitVersion alloc], "initWithMajorVersion:minorVersion:updateVersion:", [v1 majorVersion], llround((double)(unint64_t)objc_msgSend(v1, "minorVersion") / __exp10((double)(uint64_t)v5)), objc_msgSend(v1, "updateVersion"));
    }
    id v4 = v3;
  }
  else
  {
    id v4 = (HMDHomeKitVersion *)v1;
  }

  return v4;
}

id generateWiFiUniquePreSharedKey()
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  int v0 = (void *)SecPasswordGenerate();
  id v1 = v0;
  if (v0)
  {
    id v2 = v0;
  }
  else
  {
    id v3 = (void *)MEMORY[0x1D9452090]();
    id v4 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      double v5 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      unint64_t v8 = v5;
      __int16 v9 = 2112;
      uint64_t v10 = 0;
      _os_log_impl(&dword_1D49D5000, v4, OS_LOG_TYPE_ERROR, "%{public}@Failed to generate WiFi Pre-Shared Key with error: %@", buf, 0x16u);
    }
  }
  return v1;
}

uint64_t defaultAccessoryShouldDisconnectOnIdleForHome(void *a1)
{
  id v1 = a1;
  if ([v1 isCurrentDevicePrimaryResident]) {
    goto LABEL_12;
  }
  if (([v1 isCurrentDeviceAvailableResident] & 1) == 0)
  {
    if (![v1 isResidentFirstAccessoryCommunicationEnabled]) {
      goto LABEL_12;
    }
    id v3 = [v1 enabledResidents];
    char v4 = objc_msgSend(v3, "hmf_isEmpty");

    if (v4) {
      goto LABEL_12;
    }
    double v5 = [v1 primaryResident];
    int v6 = [v5 isReachable];

    if (!v6) {
      goto LABEL_12;
    }
  }
  if (([v1 isResidentFirstAccessoryCommunicationEnabled] & 1) != 0
    || ([v1 isCurrentDevicePrimaryResident] & 1) == 0
    && [v1 isCurrentDeviceAvailableResident]
    && !isiPadDevice())
  {
    uint64_t v2 = 1;
  }
  else
  {
LABEL_12:
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t __Block_byref_object_copy__51043(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__51044(uint64_t a1)
{
}

id __isPersistedConnectionRequiredForAccessory_block_invoke(uint64_t a1)
{
  id v1 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (v1)
  {
    id v2 = v1;
  }
  else
  {
    char v4 = [MEMORY[0x1E4F1CA80] setWithObject:*(void *)(a1 + 32)];
    double v5 = [*(id *)(a1 + 32) identifiersForBridgedAccessories];
    uint64_t v11 = MEMORY[0x1E4F143A8];
    uint64_t v12 = 3221225472;
    BOOL v13 = __isPersistedConnectionRequiredForAccessory_block_invoke_2;
    BOOL v14 = &unk_1E6A0B7C8;
    id v15 = *(id *)(a1 + 32);
    id v16 = v4;
    id v6 = v4;
    objc_msgSend(v5, "hmf_enumerateWithAutoreleasePoolUsingBlock:", &v11);

    uint64_t v7 = objc_msgSend(v6, "copy", v11, v12, v13, v14);
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
    __int16 v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    id v2 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  }
  return v2;
}

uint64_t __isPersistedConnectionRequiredForAccessory_block_invoke_772(uint64_t a1, void *a2, unsigned char *a3)
{
  uint64_t result = [a2 supportsTargetController];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  *a3 = *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void __isPersistedConnectionRequiredForAccessory_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  double v5 = [v3 home];
  id v6 = [v5 accessoryWithUUID:v4];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  id v9 = v7;

  uint64_t v8 = v9;
  if (v9)
  {
    [*(id *)(a1 + 40) addObject:v9];
    uint64_t v8 = v9;
  }
}

void __shouldEnableInternalDebugInterfaces_block_invoke()
{
  if (isInternalBuild())
  {
    id v1 = [MEMORY[0x1E4F65530] sharedPreferences];
    int v0 = [v1 preferenceForKey:@"shouldEnableInternalDebugInterfaces"];
    shouldEnableInternalDebugInterfaces__hmf_once_uint64_t v33 = [v0 BOOLValue];
  }
  else
  {
    shouldEnableInternalDebugInterfaces__hmf_once_uint64_t v33 = 0;
  }
}

id getCKContainer()
{
  int v0 = @"com.apple.willow.config";
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __getCKContainer_block_invoke;
  block[3] = &unk_1E6A19B30;
  id v4 = @"com.apple.willow.config";
  if (getCKContainer_onceToken != -1) {
    dispatch_once(&getCKContainer_onceToken, block);
  }
  id v1 = (id)getCKContainer_container;

  return v1;
}

void __getCKContainer_block_invoke(uint64_t a1)
{
  id v3 = (id)[objc_alloc(MEMORY[0x1E4F19ED8]) initWithContainerIdentifier:*(void *)(a1 + 32) environment:cloudKitContainerEnvironment];
  uint64_t v1 = [objc_alloc(MEMORY[0x1E4F19EC8]) initWithContainerID:v3];
  id v2 = (void *)getCKContainer_container;
  getCKContainer_container = v1;
}

id shortHAPTypeDescription(void *a1)
{
  id v1 = a1;
  id v2 = (void *)*MEMORY[0x1E4F5BB98];
  if ([v1 hasSuffix:*MEMORY[0x1E4F5BB98]])
  {
    uint64_t v3 = objc_msgSend(v1, "substringToIndex:", objc_msgSend(v1, "length") - objc_msgSend(v2, "length"));

    id v1 = (id)v3;
  }
  return v1;
}

uint64_t isThisDeviceDesignatedFMFDevice()
{
  int v0 = +[HMDFMFHandler sharedHandler];
  uint64_t v1 = [v0 isThisDesignatedFMFDevice];

  return v1;
}

void clearPrimaryPreference(int a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v2 = (void *)MEMORY[0x1D9452090](@"hmd.preferred.primary.homeutil");
  uint64_t v3 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = HMFGetLogIdentifier();
    double v5 = HMFBooleanToString();
    int v9 = 138543874;
    uint64_t v10 = v4;
    __int16 v11 = 2112;
    uint64_t v12 = v5;
    __int16 v13 = 2112;
    BOOL v14 = @"hmd.preferred.primary.homeutil";
    _os_log_impl(&dword_1D49D5000, v3, OS_LOG_TYPE_DEFAULT, "%{public}@Clearing preferred primary with requireOneTime: %@ ...withApplication: %@", (uint8_t *)&v9, 0x20u);
  }
  id v6 = (void *)CFPreferencesCopyAppValue(@"hmd.preferred.primary.one.time", @"hmd.preferred.primary.homeutil");
  uint64_t v7 = v6;
  if (v6)
  {
    int v8 = [v6 BOOLValue];
    if (!a1 || v8) {
      CFPreferencesSetAppValue(@"hmd.preferred.primary", 0, @"hmd.preferred.primary.homeutil");
    }
  }
}

uint64_t isTransientCloudKitError(void *a1)
{
  id v1 = a1;
  id v2 = [v1 domain];
  int v3 = [v2 isEqualToString:*MEMORY[0x1E4F19C40]];

  if (v3)
  {
    unint64_t v4 = [v1 code];
    if (v4 <= 0x17) {
      uint64_t v5 = (0x8000D8u >> v4) & 1;
    }
    else {
      uint64_t v5 = 0;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void __isFirstLaunchAfterBoot_block_invoke()
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  int v0 = determineHomeKitDaemonRootStorePath();
  id v1 = v0;
  if (v0)
  {
    id v2 = [v0 stringByAppendingPathComponent:@"lastBootUuid"];
    *(_OWORD *)double v19 = 0u;
    memset(v20, 0, sizeof(v20));
    size_t v16 = 37;
    int v3 = sysctlbyname("kern.bootsessionuuid", v19, &v16, 0, 0);
    if (v3)
    {
      if (v3 == -1)
      {
        __error();
        _os_assumes_log();
      }
      unint64_t v4 = (void *)MEMORY[0x1D9452090]();
      uint64_t v5 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        id v6 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        double v18 = v6;
        _os_log_impl(&dword_1D49D5000, v5, OS_LOG_TYPE_ERROR, "%{public}@Failed to get kern.bootsessionuuid", buf, 0xCu);
      }
      isFirstLaunchAfterBoot_firstLaunchAfterBoot = 1;
    }
    else
    {
      uint64_t v10 = [NSString stringWithContentsOfFile:v2 encoding:4 error:0];
      if (!v10)
      {
        __int16 v11 = (void *)MEMORY[0x1D9452090]();
        uint64_t v12 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
        {
          __int16 v13 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543362;
          double v18 = v13;
          _os_log_impl(&dword_1D49D5000, v12, OS_LOG_TYPE_DEBUG, "%{public}@Failed to load existing boot uuid", buf, 0xCu);
        }
      }
      BOOL v14 = (void *)[[NSString alloc] initWithUTF8String:v19];
      char v15 = 1;
      [v14 writeToFile:v2 atomically:1 encoding:4 error:0];
      if (v10) {
        char v15 = [v14 isEqualToString:v10] ^ 1;
      }
      isFirstLaunchAfterBoot_firstLaunchAfterBoot = v15;
    }
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x1D9452090]();
    int v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      int v9 = HMFGetLogIdentifier();
      *(_DWORD *)double v19 = 138543362;
      *(void *)&void v19[4] = v9;
      _os_log_impl(&dword_1D49D5000, v8, OS_LOG_TYPE_ERROR, "%{public}@Failed to get HomeKit daemon root store path!", v19, 0xCu);
    }
    isFirstLaunchAfterBoot_firstLaunchAfterBoot = 1;
  }
}

void sub_1D4DFE640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1D4DFE71C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D4DFEE34(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4DFEF6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void __callResolveBlocks(void *a1, void *a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  unint64_t v6 = a2;
  unint64_t v7 = a3;
  int v8 = [v5 underlyingQueue];
  dispatch_assert_queue_V2(v8);

  if (v5 && v6 | v7)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    int v9 = objc_msgSend(v5, "resolveBlocks", 0);
    uint64_t v10 = [v9 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)v16;
      do
      {
        uint64_t v13 = 0;
        do
        {
          if (*(void *)v16 != v12) {
            objc_enumerationMutation(v9);
          }
          (*(void (**)(void))(*(void *)(*((void *)&v15 + 1) + 8 * v13++) + 16))();
        }
        while (v11 != v13);
        uint64_t v11 = [v9 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v11);
    }

    BOOL v14 = [v5 resolveBlocks];
    [v14 removeAllObjects];
  }
}

void sub_1D4E04B20(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4E069E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _approximateSizeOfPlistValue(const __CFString *a1, void *a2, CFIndex *a3)
{
  if (!a1) {
    return 0;
  }
  CFTypeID v6 = CFGetTypeID(a1);
  uint64_t v23 = 0;
  double v24 = &v23;
  uint64_t v25 = 0x2020000000;
  uint64_t v26 = 0;
  switch(v6)
  {
    case 7uLL:
      CFIndex Length = CFStringGetLength(a1);
      CFIndex usedBufLen = 0;
      v27.id location = 0;
      v27.length = Length;
      if (CFStringGetBytes(a1, v27, 0x600u, 0, 0, 0, 0, &usedBufLen)) {
        BOOL v8 = usedBufLen == Length;
      }
      else {
        BOOL v8 = 0;
      }
      char v9 = !v8;
      CFIndex v10 = Length << v9;
      v24[3] = v10;
      if (a2)
      {
        CFStringRef v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CFB0], 0, @"string value, approximate encoded size: %ld", v10);
        goto LABEL_25;
      }
      break;
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
      break;
    case 0x10uLL:
      if (a2)
      {
        uint64_t v13 = @"deleted value";
        goto LABEL_30;
      }
      break;
    case 0x12uLL:
      CFIndex usedBufLen = 0;
      CFDictionaryApplyBlock();
      if (a2)
      {
        CFIndex Count = CFDictionaryGetCount((CFDictionaryRef)a1);
        CFStringRef v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CFB0], 0, @"dictionary value, count: %ld, total nested objects: %ld, approximate encoded size: %ld", Count, usedBufLen, v24[3]);
        goto LABEL_25;
      }
      break;
    case 0x13uLL:
      CFIndex usedBufLen = 0;
      CFArrayGetCount((CFArrayRef)a1);
      p_CFIndex usedBufLen = &usedBufLen;
      if (a3) {
        p_CFIndex usedBufLen = a3;
      }
      uint64_t v20 = MEMORY[0x1E4F143A8];
      uint64_t v21 = p_usedBufLen;
      CFArrayApplyBlock();
      if (a2)
      {
        CFIndex v16 = CFArrayGetCount((CFArrayRef)a1);
        CFStringRef v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CFB0], 0, @"array value, count: %ld, tested nested objects: %ld, approximate encoded size: %ld", v16, usedBufLen, v24[3], v20, 3221225472, ___approximateSizeOfPlistValue_block_invoke_2, &unk_1E6A0BA58, &v23, v21);
        goto LABEL_25;
      }
      break;
    case 0x14uLL:
      CFIndex v17 = CFDataGetLength((CFDataRef)a1);
      v24[3] = v17;
      if (a2)
      {
        CFStringRef v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CFB0], 0, @"data value, size: %ld", v17);
LABEL_25:
        *a2 = v11;
      }
      break;
    case 0x15uLL:
      uint64_t v26 = 1;
      if (a2)
      {
        uint64_t v13 = @"BOOLean value";
        goto LABEL_30;
      }
      break;
    case 0x16uLL:
      CFIndex ByteSize = CFNumberGetByteSize((CFNumberRef)a1);
      v24[3] = ByteSize;
      if (a2)
      {
        uint64_t v13 = @"number value";
        goto LABEL_30;
      }
      break;
    default:
      if (v6 == 42)
      {
        uint64_t v26 = 8;
        if (a2)
        {
          uint64_t v13 = @"date value";
LABEL_30:
          *a2 = v13;
        }
      }
      break;
  }
  if (a3) {
    ++*a3;
  }
  uint64_t v12 = v24[3];
  _Block_object_dispose(&v23, 8);
  return v12;
}

void sub_1D4E078B0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t ___approximateSizeOfPlistValue_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = _approximateSizeOfPlistValue(a2, 0, *(void *)(a1 + 40));
  uint64_t result = _approximateSizeOfPlistValue(a3, 0, *(void *)(a1 + 40));
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) += result + v5;
  return result;
}

uint64_t ___approximateSizeOfPlistValue_block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = _approximateSizeOfPlistValue(a2, 0, *(void *)(a1 + 40));
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) += result;
  return result;
}

uint64_t _isNetworkIntefaceActive()
{
  int v0 = socket(2, 2, 0);
  if (v0 < 0 && (!*__error() || *__error())) {
    return 0;
  }
  uint64_t v5 = 0;
  getifaddrs(&v5);
  int v3 = v5;
  if (!v5)
  {
    if (v0 < 0) {
      return 0;
    }
    goto LABEL_19;
  }
  do
  {
    if ((v3->ifa_flags & 8) == 0)
    {
      ifa_name = v3->ifa_name;
      if (ifa_name)
      {
        if (!SocketGetInterfaceInfo()
          && gLogCategory_HMDPowerManager <= 20
          && (gLogCategory_HMDPowerManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
    }
    int v3 = v3->ifa_next;
  }
  while (v3);
  if (v5) {
    MEMORY[0x1D9451AA0](v5, ifa_name, v2);
  }
  if ((v0 & 0x80000000) == 0)
  {
LABEL_19:
    if (close(v0) && *__error()) {
      __error();
    }
  }
  return 0;
}

void _handleNetworkInterfaceChanged(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3;
  v5[16] = _isNetworkIntefaceActive();
  if (gLogCategory_HMDPowerManager <= 30
    && (gLogCategory_HMDPowerManager != -1 || _LogCategory_Initialize()))
  {
    if (v5[16]) {
      int v3 = "yes";
    }
    else {
      int v3 = "no";
    }
    unint64_t v4 = v3;
    LogPrintF();
  }
  objc_msgSend(v5, "_update", v4);
}

void sub_1D4E09694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E0BB9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
}

id _parseTargetList(void *a1)
{
  id v1 = a1;
  if ([v1 length])
  {
    id v2 = v1;
    [v2 bytes];
    [v2 length];
    while (!TLV8GetNext())
      ;
  }

  return 0;
}

id _parseTargetButtonConfiguration(void *a1, uint64_t a2)
{
  id v2 = a1;
  int v3 = [MEMORY[0x1E4F1CA48] array];
  id v4 = v2;
  [v4 bytes];
  [v4 length];
  while (!TLV8GetNext())
    ;
  uint64_t v5 = objc_msgSend(v3, "copy", a2);

  return v5;
}

unint64_t targetConfigurationTLVSize(void *a1, void *a2)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v5 = [v3 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v21;
    unint64_t v8 = 32;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v21 != v7) {
          objc_enumerationMutation(v3);
        }
        CFIndex v10 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        unint64_t v11 = v8 + 12;
        id v12 = [v10 name];
        uint64_t v13 = (const char *)[v12 UTF8String];

        if (v13)
        {
          size_t v14 = strlen(v13);
          if (v14 >= 0x80) {
            uint64_t v15 = 128;
          }
          else {
            uint64_t v15 = v14;
          }
          v11 += v15;
        }
        CFIndex v16 = [v10 buttonConfiguration];
        if ([v16 count])
        {
          CFIndex v17 = [v10 buttonConfiguration];
          unint64_t v18 = buttonConfigurationTLVSize(v17);
        }
        else
        {
          unint64_t v18 = buttonConfigurationTLVSize(v4);
        }
        unint64_t v8 = v18 + v11;
      }
      uint64_t v6 = [v3 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v6);
  }
  else
  {
    unint64_t v8 = 32;
  }

  return v8 + 2 * (v8 / 0xFF);
}

uint64_t __addButtonConfigurationTLV(uint64_t a1, void *a2)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  if ([v2 count])
  {
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v19 = 0u;
    buttonConfigurationTLVSize(v2);
    TLV8BufferInit();
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v3 = v2;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v15;
LABEL_4:
      uint64_t v7 = 0;
      while (1)
      {
        if (*(void *)v15 != v6) {
          objc_enumerationMutation(v3);
        }
        unint64_t v8 = *(void **)(*((void *)&v14 + 1) + 8 * v7);
        [v8 identifier];
        uint64_t v9 = TLV8BufferAppend();
        if (v9) {
          break;
        }
        [v8 type];
        uint64_t v9 = TLV8BufferAppend();
        if (v9) {
          break;
        }
        id v10 = [v8 name];
        unint64_t v11 = (const char *)[v10 UTF8String];

        if (v11)
        {
          strlen(v11);
          uint64_t v9 = TLV8BufferAppend();
          if (v9) {
            break;
          }
        }
        if (v5 == ++v7)
        {
          uint64_t v5 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
          if (v5) {
            goto LABEL_4;
          }
          goto LABEL_13;
        }
      }
    }
    else
    {
LABEL_13:

      objc_msgSend(MEMORY[0x1E4F1C9B8], "dataWithBytes:length:", v19);
      id v3 = objc_claimAutoreleasedReturnValue();
      [v3 bytes];
      [v3 length];
      uint64_t v9 = TLV8BufferAppend();
    }
    uint64_t v12 = v9;

    TLV8BufferFree();
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

unint64_t buttonConfigurationTLVSize(void *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v13;
    unint64_t v5 = 32;
    do
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v13 != v4) {
          objc_enumerationMutation(v1);
        }
        v5 += 9;
        id v7 = [*(id *)(*((void *)&v12 + 1) + 8 * i) name];
        unint64_t v8 = (const char *)[v7 UTF8String];

        if (v8)
        {
          size_t v9 = strlen(v8);
          if (v9 >= 0x80) {
            uint64_t v10 = 128;
          }
          else {
            uint64_t v10 = v9;
          }
          v5 += v10;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v3);
  }
  else
  {
    unint64_t v5 = 32;
  }

  return v5 + 2 * (v5 / 0xFF);
}

void sub_1D4E10EE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E11470(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__53116(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__53117(uint64_t a1)
{
}

void sub_1D4E119BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E13898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E14178(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E14204(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E14290(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E1430C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id readDataFromCKRecordOptionalAssetField(uint64_t a1)
{
  uint64_t v1 = (void *)MEMORY[0x1F4188790](a1);
  unint64_t v3 = v2;
  unint64_t v5 = v4;
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v6 = v1;
  id v7 = v5;
  unint64_t v8 = filePathFromCKRecordOptionalAssetField(v6, v7);
  size_t v9 = v8;
  if (!v8)
  {
    long long v19 = 0;
    goto LABEL_25;
  }
  uint64_t v10 = createInputStreamWithFilePath(v8, 0);
  unint64_t v11 = v10;
  if (v10)
  {
    id v12 = v10;
    long long v13 = [MEMORY[0x1E4F1CA58] data];
    [v12 open];
    uint64_t v14 = [v12 read:v37 maxLength:4096];
    if (v14 < 1)
    {
LABEL_12:
      uint64_t v18 = [v12 close];
      if ((v14 & 0x8000000000000000) == 0)
      {
        long long v19 = (void *)[v13 copy];
LABEL_23:

        goto LABEL_24;
      }
      uint64_t v20 = MEMORY[0x1D9452090](v18);
      long long v21 = objc_opt_class();
      long long v22 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        long long v23 = HMFGetLogIdentifier();
        [v12 streamError];
        v24 = uint64_t v31 = v20;
        *(_DWORD *)long long buf = 138543618;
        long long v34 = v23;
        __int16 v35 = 2112;
        unint64_t v36 = (unint64_t)v24;
        _os_log_impl(&dword_1D49D5000, v22, OS_LOG_TYPE_ERROR, "%{public}@Error reading data from input stream: %@", buf, 0x16u);

        uint64_t v20 = v31;
      }

      long long v25 = (void *)v20;
    }
    else
    {
      while (1)
      {
        if (v3)
        {
          uint64_t v15 = [v13 length];
          uint64_t v16 = __CFADD__(v14, v15);
          uint64_t v17 = v16 << 63 >> 63;
          if (v17 != v16 || v17 < 0 || v14 + v15 > v3) {
            break;
          }
        }
        [v13 appendBytes:v37 length:v14];
        uint64_t v14 = [v12 read:v37 maxLength:4096];
        if (v14 <= 0) {
          goto LABEL_12;
        }
      }
      uint64_t v26 = MEMORY[0x1D9452090]([v12 close]);
      long long v27 = objc_opt_class();
      long long v28 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        long long v29 = v32 = v26;
        *(_DWORD *)long long buf = 138543618;
        long long v34 = v29;
        __int16 v35 = 2048;
        unint64_t v36 = v3;
        _os_log_impl(&dword_1D49D5000, v28, OS_LOG_TYPE_ERROR, "%{public}@Data from input stream has exceeded the maximum %lu bytes allowed", buf, 0x16u);

        uint64_t v26 = v32;
      }

      long long v25 = (void *)v26;
    }
    long long v19 = 0;
    goto LABEL_23;
  }
  long long v19 = 0;
LABEL_24:

LABEL_25:
  return v19;
}

id dataFromCKRecordRequiredField(void *a1, void *a2, void *a3)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = [v5 objectForKeyedSubscript:v6];
  unint64_t v8 = v7;
  if (v7)
  {
    id v9 = v7;
    objc_opt_class();
    int v10 = objc_opt_isKindOfClass() & 1;
    if (v10) {
      unint64_t v11 = v9;
    }
    else {
      unint64_t v11 = 0;
    }
    id v12 = v11;

    long long v13 = (void *)MEMORY[0x1D9452090]();
    uint64_t v14 = objc_opt_class();
    uint64_t v15 = HMFGetOSLogHandle();
    uint64_t v16 = v15;
    if (v10)
    {
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v17 = HMFGetLogIdentifier();
        uint64_t v18 = [v5 recordID];
        [v18 hmbDescription];
        long long v19 = v32 = v12;
        *(_DWORD *)long long buf = 138543874;
        __int16 v35 = v17;
        __int16 v36 = 2112;
        id v37 = v6;
        __int16 v38 = 2112;
        long long v39 = v19;
        _os_log_impl(&dword_1D49D5000, v16, OS_LOG_TYPE_DEBUG, "%{public}@Reading '%@' NSData for record %@", buf, 0x20u);

        id v12 = v32;
      }

      id v20 = v9;
    }
    else
    {
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v27 = uint64_t v31 = v13;
        long long v28 = [v5 recordID];
        [v28 hmbDescription];
        v29 = id v33 = v12;
        *(_DWORD *)long long buf = 138544130;
        __int16 v35 = v27;
        __int16 v36 = 2112;
        id v37 = v6;
        __int16 v38 = 2112;
        long long v39 = v29;
        __int16 v40 = 2112;
        id v41 = v9;
        _os_log_impl(&dword_1D49D5000, v16, OS_LOG_TYPE_ERROR, "%{public}@'%@' field is not a NSData on record %@: %@", buf, 0x2Au);

        id v12 = v33;
        long long v13 = v31;
      }

      if (a3)
      {
        [MEMORY[0x1E4F28C58] hmErrorWithCode:43];
        id v20 = 0;
        *a3 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        id v20 = 0;
      }
    }
  }
  else
  {
    long long v21 = (void *)MEMORY[0x1D9452090]();
    long long v22 = objc_opt_class();
    long long v23 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      long long v24 = HMFGetLogIdentifier();
      long long v25 = [v5 recordID];
      uint64_t v26 = [v25 hmbDescription];
      *(_DWORD *)long long buf = 138543874;
      __int16 v35 = v24;
      __int16 v36 = 2112;
      id v37 = v6;
      __int16 v38 = 2112;
      long long v39 = v26;
      _os_log_impl(&dword_1D49D5000, v23, OS_LOG_TYPE_ERROR, "%{public}@Field '%@' does not exist on record %@", buf, 0x20u);
    }
    if (a3)
    {
      [MEMORY[0x1E4F28C58] hmErrorWithCode:43];
      id v20 = 0;
      *a3 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      id v20 = 0;
    }
  }

  return v20;
}

id filePathFromCKRecordOptionalAssetField(void *a1, void *a2)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = [v3 objectForKeyedSubscript:v4];
  id v6 = v5;
  if (v5)
  {
    id v7 = v5;
    objc_opt_class();
    int v8 = objc_opt_isKindOfClass() & 1;
    if (v8) {
      id v9 = v7;
    }
    else {
      id v9 = 0;
    }
    id v10 = v9;

    unint64_t v11 = (void *)MEMORY[0x1D9452090]();
    id v12 = objc_opt_class();
    long long v13 = HMFGetOSLogHandle();
    uint64_t v14 = v13;
    if (v8)
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v15 = HMFGetLogIdentifier();
        uint64_t v26 = [v3 recordID];
        uint64_t v16 = [v26 hmbDescription];
        [v7 fileURL];
        uint64_t v17 = v27 = v10;
        [v17 path];
        v18 = long long v28 = v11;
        *(_DWORD *)long long buf = 138544130;
        uint64_t v31 = v15;
        __int16 v32 = 2112;
        id v33 = v4;
        __int16 v34 = 2112;
        __int16 v35 = v16;
        __int16 v36 = 2112;
        id v37 = v18;
        _os_log_impl(&dword_1D49D5000, v14, OS_LOG_TYPE_DEBUG, "%{public}@Reading '%@' CKAsset for record %@ from %@", buf, 0x2Au);

        unint64_t v11 = v28;
        id v10 = v27;
      }
      long long v19 = [v7 fileURL];
      id v20 = [v19 path];
    }
    else
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        long long v29 = v11;
        long long v22 = v21 = v10;
        long long v23 = [v3 recordID];
        long long v24 = [v23 hmbDescription];
        *(_DWORD *)long long buf = 138544130;
        uint64_t v31 = v22;
        __int16 v32 = 2112;
        id v33 = v4;
        __int16 v34 = 2112;
        __int16 v35 = v24;
        __int16 v36 = 2112;
        id v37 = v7;
        _os_log_impl(&dword_1D49D5000, v14, OS_LOG_TYPE_ERROR, "%{public}@'%@' field is not a CKAsset on record %@: %@", buf, 0x2Au);

        id v10 = v21;
        unint64_t v11 = v29;
      }

      id v20 = 0;
    }
  }
  else
  {
    id v20 = 0;
  }

  return v20;
}

id createInputStreamWithFilePath(void *a1, void *a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = [MEMORY[0x1E4F1CA10] inputStreamWithFileAtPath:v3];
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
  }
  else
  {
    id v7 = (void *)MEMORY[0x1D9452090]();
    int v8 = objc_opt_class();
    id v9 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      id v10 = HMFGetLogIdentifier();
      int v12 = 138543618;
      long long v13 = v10;
      __int16 v14 = 2112;
      id v15 = v3;
      _os_log_impl(&dword_1D49D5000, v9, OS_LOG_TYPE_ERROR, "%{public}@Failed to create input stream for file at path: %@", (uint8_t *)&v12, 0x16u);
    }
    if (a2)
    {
      *a2 = [MEMORY[0x1E4F28C58] hmErrorWithCode:52];
    }
  }

  return v5;
}

id stringFromCKRecord(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  id v8 = a1;
  id v9 = a2;
  id v10 = a3;
  if (!v10
    || (readDataFromCKRecordOptionalAssetField((uint64_t)v8), (uint64_t v11 = objc_claimAutoreleasedReturnValue()) == 0)
    || (int v12 = (void *)v11,
        id v13 = (id)[[NSString alloc] initWithData:v11 encoding:4],
        v12,
        !v13))
  {
    id v14 = v8;
    id v15 = v9;
    uint64_t v16 = [v14 objectForKeyedSubscript:v15];
    uint64_t v17 = v16;
    if (v16)
    {
      uint64_t v45 = a5;
      id v18 = v16;
      objc_opt_class();
      int v19 = objc_opt_isKindOfClass() & 1;
      id v20 = v19 ? v18 : 0;
      id v40 = v20;

      context = (void *)MEMORY[0x1D9452090]();
      id v21 = objc_opt_class();
      long long v22 = HMFGetOSLogHandle();
      long long v23 = v22;
      if (v19)
      {
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
        {
          HMFGetLogIdentifier();
          v24 = id v37 = v8;
          [v14 recordID];
          long long v25 = v42 = v9;
          uint64_t v26 = [v25 hmbDescription];
          *(_DWORD *)long long buf = 138543874;
          double v48 = v24;
          __int16 v49 = 2112;
          id v50 = v15;
          __int16 v51 = 2112;
          double v52 = v26;
          _os_log_impl(&dword_1D49D5000, v23, OS_LOG_TYPE_DEBUG, "%{public}@Reading '%@' NSString for record %@", buf, 0x20u);

          id v9 = v42;
          id v8 = v37;
        }

        id v13 = v18;
        a5 = v45;
      }
      else
      {
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          id v33 = HMFGetLogIdentifier();
          uint64_t v38 = [v14 recordID];
          [v38 hmbDescription];
          __int16 v34 = v44 = v9;
          *(_DWORD *)long long buf = 138544130;
          double v48 = v33;
          __int16 v49 = 2112;
          id v50 = v15;
          __int16 v51 = 2112;
          double v52 = v34;
          __int16 v53 = 2112;
          id v54 = v18;
          _os_log_impl(&dword_1D49D5000, v23, OS_LOG_TYPE_ERROR, "%{public}@'%@' field is not a NSData on record %@: %@", buf, 0x2Au);

          id v9 = v44;
        }

        a5 = v45;
        if (v45)
        {
          [MEMORY[0x1E4F28C58] hmErrorWithCode:43];
          id v13 = 0;
          void *v45 = (id)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          id v13 = 0;
        }
      }
    }
    else
    {
      id v43 = v9;
      id v27 = (void *)MEMORY[0x1D9452090]();
      long long v28 = objc_opt_class();
      long long v29 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        long long v30 = v46 = a5;
        uint64_t v31 = [v14 recordID];
        [v31 hmbDescription];
        __int16 v32 = v41 = v27;
        *(_DWORD *)long long buf = 138543874;
        double v48 = v30;
        __int16 v49 = 2112;
        id v50 = v15;
        __int16 v51 = 2112;
        double v52 = v32;
        _os_log_impl(&dword_1D49D5000, v29, OS_LOG_TYPE_ERROR, "%{public}@Field '%@' does not exist on record %@", buf, 0x20u);

        id v27 = v41;
        a5 = v46;
      }

      if (a5)
      {
        [MEMORY[0x1E4F28C58] hmErrorWithCode:43];
        id v13 = 0;
        *a5 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        id v13 = 0;
      }
      id v9 = v43;
    }

    if (!v13) {
      goto LABEL_29;
    }
  }
  if ([v13 length])
  {
    id v13 = v13;
    __int16 v35 = v13;
    goto LABEL_30;
  }
  if (a5)
  {
    [MEMORY[0x1E4F28C58] hmErrorWithCode:51];
    __int16 v35 = 0;
    *a5 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
LABEL_29:
    __int16 v35 = 0;
  }
LABEL_30:

  return v35;
}

uint64_t significantEventReasonFromVideoAnalyzerEventClass(void *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  if (([a1 isEqual:objc_opt_class()] & 1) != 0
    || ([a1 isEqual:objc_opt_class()] & 1) != 0)
  {
    return 2;
  }
  if ([a1 isEqual:objc_opt_class()]) {
    return 3;
  }
  if ([a1 isEqual:objc_opt_class()]) {
    return 4;
  }
  if ([a1 isEqual:objc_opt_class()]) {
    return 5;
  }
  if (([a1 isEqual:objc_opt_class()] & 1) == 0)
  {
    id v3 = (void *)MEMORY[0x1D9452090]();
    id v4 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id v5 = HMFGetLogIdentifier();
      int v6 = 138543618;
      id v7 = v5;
      __int16 v8 = 2112;
      id v9 = a1;
      _os_log_impl(&dword_1D49D5000, v4, OS_LOG_TYPE_ERROR, "%{public}@Unknown video analyzer event class: %@", (uint8_t *)&v6, 0x16u);
    }
  }
  return 1;
}

void __HMDNetworkRouterWANRulesFromHostNames_block_invoke(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 32)) {
    id v4 = [[HMDNetworkRouterWANICMPRule alloc] initWithHostDNSName:a2 hostIPStart:0 hostIPEnd:0 icmpTypes:*(void *)(a1 + 32)];
  }
  else {
    id v4 = [[HMDNetworkRouterWANPortRule alloc] initWithProtocol:*(void *)(a1 + 40) hostDNSName:a2 hostIPStart:0 hostIPEnd:0 hostPortStart:*(void *)(a1 + 48) hostPortEnd:*(void *)(a1 + 56)];
  }
  id v5 = v4;

  [*(id *)(a1 + 64) addObject:v5];
}

void __HMDNetworkRouterWANRulesFromAddresses_block_invoke(uint64_t a1, uint64_t a2)
{
  id v5 = +[HMDNetworkRouterIPAddress ipAddressFromRuleAddress:a2 allowWildcard:1];
  if (*(void *)(a1 + 32)) {
    id v3 = [[HMDNetworkRouterWANICMPRule alloc] initWithHostDNSName:0 hostIPStart:v5 hostIPEnd:0 icmpTypes:*(void *)(a1 + 32)];
  }
  else {
    id v3 = [[HMDNetworkRouterWANPortRule alloc] initWithProtocol:*(void *)(a1 + 40) hostDNSName:0 hostIPStart:v5 hostIPEnd:0 hostPortStart:*(void *)(a1 + 48) hostPortEnd:*(void *)(a1 + 56)];
  }
  id v4 = v3;
  [*(id *)(a1 + 64) addObject:v3];
}

HMDNetworkRouterLANIdentifierList *createIdentifierListFromLANRule(void *a1)
{
  uint64_t v1 = (objc_class *)MEMORY[0x1E4F5BE68];
  id v2 = a1;
  id v3 = (void *)[[v1 alloc] initWithValue:&unk_1F2DC7E70];
  id v4 = [MEMORY[0x1E4F1CA48] arrayWithObject:v3];
  int v5 = [v2 areConnectionsWithOtherAccessoriesAllowed];

  if (v5)
  {
    int v6 = (void *)[objc_alloc(MEMORY[0x1E4F5BE68]) initWithValue:&unk_1F2DC7EB8];
    [v4 addObject:v6];
  }
  id v7 = [[HMDNetworkRouterLANIdentifierList alloc] initWithIdentifiers:v4];

  return v7;
}

void sub_1D4E1CB9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E1DA90(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E204C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E239D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

__CFString *HMDSleepConfigurationOperationStatusAsString(unint64_t a1)
{
  if (a1 >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDSleepConfigurationOperationStatus %ld", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_1E6A0BE88[a1];
  }
  return v1;
}

__CFString *HMDSleepConfigurationOperationTypeAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDSleepConfigurationOperationType %ld", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_1E6A0BEA8[a1 - 1];
  }
  return v1;
}

void sub_1D4E252B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E25550(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E256FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E258D0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E31108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__56198(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__56199(uint64_t a1)
{
}

void sub_1D4E33CE0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E34008(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E349D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E34DBC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E36260(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E3659C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_1D4E36CB4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E37154(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E3B02C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t isAccessoryInDefaultGroup(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 defaultNetworkProtectionGroupUUID];
  if (v2)
  {
    id v3 = [v1 networkProtectionGroupUUID];
    uint64_t v4 = [v2 isEqual:v3];
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

void sub_1D4E3D710(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E3D88C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E3DAA8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E3DC48(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E3EE24(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __HMDAccountAddHandle(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3
    && (os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4),
        ([*((id *)v3 + 3) containsObject:v4] & 1) == 0))
  {
    int v6 = (void *)[*((id *)v3 + 3) mutableCopy];
    [v6 addObject:v4];
    uint64_t v7 = [v6 copy];
    __int16 v8 = (void *)*((void *)v3 + 3);
    *((void *)v3 + 3) = v7;

    uint64_t v5 = 1;
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void __HMDAccountDidUpdateHandles(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = (void *)MEMORY[0x1D9452090]();
    id v3 = v1;
    id v4 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = HMFGetLogIdentifier();
      int v7 = 138543362;
      __int16 v8 = v5;
      _os_log_impl(&dword_1D49D5000, v4, OS_LOG_TYPE_INFO, "%{public}@Handles updated", (uint8_t *)&v7, 0xCu);
    }
    int v6 = [MEMORY[0x1E4F28EB8] defaultCenter];
    [v6 postNotificationName:@"HMDAccountHandlesUpdatedNotification" object:v3];
  }
}

uint64_t __HMDAccountAddDevice(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  uint64_t v6 = 0;
  if (v3 && v4)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4);
    if ([*((id *)v3 + 4) containsObject:v5])
    {
      uint64_t v6 = 0;
    }
    else
    {
      [*((id *)v3 + 4) addObject:v5];
      uint64_t v6 = 1;
    }
  }

  return v6;
}

void __HMDAccountDidAddDevice(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  if (v3 && v4)
  {
    os_unfair_lock_assert_not_owner(v3 + 4);
    uint64_t v6 = (void *)MEMORY[0x1D9452090]();
    int v7 = v3;
    __int16 v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      id v15 = v9;
      __int16 v16 = 2112;
      uint64_t v17 = v5;
      _os_log_impl(&dword_1D49D5000, v8, OS_LOG_TYPE_INFO, "%{public}@Device added: %@", buf, 0x16u);
    }
    uint64_t v10 = [MEMORY[0x1E4F28EB8] defaultCenter];
    int v12 = @"HMDDeviceNotificationKey";
    id v13 = v5;
    uint64_t v11 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v13 forKeys:&v12 count:1];
    [v10 postNotificationName:@"HMDAccountAddedDeviceNotification" object:v7 userInfo:v11];
  }
}

void sub_1D4E3F960(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id __HMDAccountRemoveHandle(void *a1, void *a2)
{
  id v3 = a1;
  if (v3)
  {
    id v4 = a2;
    os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4);
    uint64_t v5 = [*((id *)v3 + 3) member:v4];

    if (v5)
    {
      uint64_t v6 = (void *)[*((id *)v3 + 3) mutableCopy];
      [v6 removeObject:v5];
      uint64_t v7 = [v6 copy];
      __int16 v8 = (void *)*((void *)v3 + 3);
      *((void *)v3 + 3) = v7;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

id __HMDAccountRemoveDevice(void *a1, void *a2)
{
  id v3 = a1;
  if (v3)
  {
    id v4 = a2;
    os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4);
    uint64_t v5 = [*((id *)v3 + 4) member:v4];

    if (v5) {
      [*((id *)v3 + 4) removeObject:v5];
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void __HMDAccountDidRemoveDevice(void *a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    os_unfair_lock_assert_not_owner(v3 + 4);
    uint64_t v5 = (void *)MEMORY[0x1D9452090]();
    uint64_t v6 = v3;
    uint64_t v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      __int16 v8 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      id v14 = v8;
      __int16 v15 = 2112;
      id v16 = v4;
      _os_log_impl(&dword_1D49D5000, v7, OS_LOG_TYPE_INFO, "%{public}@Device removed: %@", buf, 0x16u);
    }
    uint64_t v9 = [MEMORY[0x1E4F28EB8] defaultCenter];
    uint64_t v11 = @"HMDDeviceNotificationKey";
    id v12 = v4;
    uint64_t v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v12 forKeys:&v11 count:1];
    [v9 postNotificationName:@"HMDAccountRemovedDeviceNotification" object:v6 userInfo:v10];
  }
}

void sub_1D4E40D20(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E40F10(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E41208(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E413A0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E41430(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E41DAC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E41FAC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E42190(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E4228C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E4242C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E4264C(_Unwind_Exception *exception_object)
{
}

void sub_1D4E443F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E448FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
}

void sub_1D4E44E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E45574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__58284(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__58285(uint64_t a1)
{
}

void sub_1D4E459EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4E45DC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4E464CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E46B70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E472B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E49CE8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

BOOL __lookupDeviceForRemoteCommands(void *a1, void *a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = v3;
  if (a2)
  {
    uint64_t v5 = [v3 accessory];
    uint64_t v6 = [v5 home];
    if (v6)
    {
      id v7 = v4;
      id v8 = [v7 accessory];
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = 0;
      }
      id v10 = v9;

      uint64_t v11 = [v10 device];
      BOOL v12 = v11 != 0;
      if (v11)
      {
        context = (void *)MEMORY[0x1D9452090]();
        id v18 = v7;
        id v13 = v7;
        id v14 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
        {
          id v16 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543618;
          id v20 = v16;
          __int16 v21 = 2112;
          long long v22 = v11;
          _os_log_impl(&dword_1D49D5000, v14, OS_LOG_TYPE_INFO, "%{public}@Routing the command to the device backing the media accessory %@", buf, 0x16u);
        }
        *a2 = v11;
        id v7 = v18;
      }
    }
    else
    {
      BOOL v12 = 0;
    }
  }
  else
  {
    BOOL v12 = 0;
  }

  return v12;
}

void sub_1D4E4A22C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E4A404(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDLowPowerModeStateMachineDescription(unint64_t a1)
{
  if (a1 >= 5)
  {
    uint64_t v2 = NSString;
    id v3 = [NSNumber numberWithUnsignedInteger:a1];
    id v1 = [v2 stringWithFormat:@"Unknown (%@)", v3];
  }
  else
  {
    id v1 = off_1E6A0C598[a1];
  }
  return v1;
}

id findMatchingCharacteristic(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = @"00000221-0000-1000-8000-0026BB765291";
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  void v9[2] = __findMatchingCharacteristic_block_invoke;
  v9[3] = &unk_1E6A0C578;
  id v10 = v3;
  uint64_t v11 = @"00000221-0000-1000-8000-0026BB765291";
  uint64_t v5 = @"00000221-0000-1000-8000-0026BB765291";
  id v6 = v3;
  id v7 = objc_msgSend(a2, "hmf_objectPassingTest:", v9);

  return v7;
}

uint64_t __findMatchingCharacteristic_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;
  id v6 = v5;
  if (v5)
  {
    id v7 = [v5 type];
    if ([v7 isEqualToString:*(void *)(a1 + 32)])
    {
      id v8 = [v6 service];
      uint64_t v9 = [v8 serviceType];
      uint64_t v10 = [v9 isEqualToString:*(void *)(a1 + 40)];
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

id deserializeObject(objc_class *a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;

  if (v5 && [(objc_class *)a1 conformsToProtocol:&unk_1F2DF7DB8])
  {
    id v6 = objc_alloc_init(a1);
    id v15 = 0;
    int v7 = [v6 parseFromData:v5 error:&v15];
    id v8 = v15;
    if (v8 || !v6 || !v7)
    {
      uint64_t v9 = (void *)MEMORY[0x1D9452090]();
      uint64_t v10 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        uint64_t v11 = HMFGetLogIdentifier();
        BOOL v12 = NSStringFromClass(a1);
        *(_DWORD *)long long buf = 138543874;
        uint64_t v17 = v11;
        __int16 v18 = 2112;
        int v19 = v12;
        __int16 v20 = 2112;
        id v21 = v8;
        _os_log_impl(&dword_1D49D5000, v10, OS_LOG_TYPE_ERROR, "%{public}@Failed to create an object of class: %@ with error: %@", buf, 0x20u);
      }

      goto LABEL_15;
    }
  }
  else
  {
    id v6 = 0;
  }
  if (objc_opt_isKindOfClass())
  {
    id v6 = v6;
    id v13 = v6;
    goto LABEL_16;
  }
LABEL_15:
  id v13 = 0;
LABEL_16:

  return v13;
}

id HMDLowPowerModeOperationStatusDescription(unint64_t a1)
{
  id v1 = HMDSleepConfigurationOperationStatusAsString(a1);
  uint64_t v2 = [v1 stringByReplacingOccurrencesOfString:@"HMDSleepConfigurationOperationStatus" withString:&stru_1F2C9F1A8];

  return v2;
}

id HMDLowPowerModeOperationTypeDescription(uint64_t a1)
{
  id v1 = HMDSleepConfigurationOperationTypeAsString(a1);
  uint64_t v2 = [v1 stringByReplacingOccurrencesOfString:@"HMDSleepConfigurationOperationType" withString:&stru_1F2C9F1A8];

  return v2;
}

void sub_1D4E4DB58(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4E4DFE4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id HMDLowPowerModeWoWLANInfoForSupportedSleepConfiguration(void *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v24 = [MEMORY[0x1E4F1CA48] array];
  uint64_t v2 = [v1 version];
  id v3 = [v2 value];
  uint64_t v4 = [v3 unsignedCharValue];

  [v1 supportedWoLPacketConfigurations];
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v5 = [obj countByEnumeratingWithState:&v27 objects:v31 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    id v23 = v1;
    uint64_t v26 = 0;
    uint64_t v7 = *(void *)v28;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v28 != v7) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void **)(*((void *)&v27 + 1) + 8 * i);
        uint64_t v10 = objc_msgSend(v9, "wakePacketType", v23);
        uint64_t v11 = [v10 value];

        BOOL v12 = [v9 wakeDestinationPort];
        id v13 = [v12 value];
        uint64_t v14 = [v13 unsignedShortValue];

        id v15 = [v9 wakeDestinationAddress];
        id v16 = [v9 wakeType];
        uint64_t v17 = [v16 value];

        __int16 v18 = [v9 wakePattern];
        int v19 = [[HMFWoWLANInfo alloc] initWithWakeVersion:v4 wakePort:v14 wakeAddress:v15 wakeType:v17 wakePacketType:v11 wakePattern:v18];
        __int16 v20 = v19;
        if (v19)
        {
          if (v26 || [(HMFWoWLANInfo *)v19 wakeType] != 2) {
            [v24 addObject:v20];
          }
          else {
            uint64_t v26 = v20;
          }
        }
      }
      uint64_t v6 = [obj countByEnumeratingWithState:&v27 objects:v31 count:16];
    }
    while (v6);
    id v21 = v26;
    if (v26) {
      [v24 insertObject:v26 atIndex:0];
    }
    id v1 = v23;
  }
  else
  {
    id v21 = 0;
  }

  return v24;
}

void sub_1D4E4E438(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4E4E5D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D4E4EA8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D4E4EEE0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D4E4FDC0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

uint64_t __HMDLowPowerModeUUIDFromAccessory_block_invoke()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:@"CB66A944-B172-4D2F-A5B4-DCF2F9CFB9D4"];
  uint64_t v1 = HMDLowPowerModeUUIDFromAccessory_namespace;
  HMDLowPowerModeUUIDFromAccessory_namespace = v0;
  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1D4E521B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E524F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E52828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E52B74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E52E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL HMDRemoteEventRouterProtoTopicReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 3) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 16;
LABEL_22:
        int v19 = *(void **)(a1 + v18);
        *(void *)(a1 + v1_Block_object_dispose(&STACK[0x210], 8) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadString();
    uint64_t v18 = 8;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id entityFromObject(void *a1, int a2)
{
  uint64_t v100 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = objc_alloc_init(MEMORY[0x1E4F96690]);
  uint64_t v5 = [v3 objectForKeyedSubscript:@"objectName"];
  [v4 setName:v5];

  uint64_t v6 = [v3 objectForKeyedSubscript:@"objectType"];
  [v4 setEntityType:v6];

  uint64_t v7 = (void *)MEMORY[0x1E4F1CB10];
  char v8 = [v3 objectForKeyedSubscript:@"objectIdentifier"];
  unsigned int v9 = [v7 URLWithString:v8];
  [v4 setIdentifier:v9];

  if (a2)
  {
    unint64_t v10 = objc_msgSend(v3, "hmf_arrayForKey:", @"objectRelatedIdentifiers");
    if ([v10 count])
    {
      uint64_t v11 = hmd_urlsFromStrings(v10);
      [v4 setRelatedEntityIdentifiers:v11];
    }
  }
  unint64_t v12 = [v3 objectForKeyedSubscript:@"objectHome"];

  if (v12)
  {
    char v13 = [v3 objectForKeyedSubscript:@"objectHome"];
    [v4 setHome:v13];

    if (a2)
    {
      uint64_t v14 = (void *)MEMORY[0x1E4F1CB10];
      int v15 = [v3 objectForKeyedSubscript:@"objectHomeIdentifier"];
      id v16 = [v14 URLWithString:v15];
      [v4 setHomeIdentifier:v16];
    }
  }
  uint64_t v17 = [v3 objectForKeyedSubscript:@"objectRoom"];

  if (v17)
  {
    uint64_t v18 = [v3 objectForKeyedSubscript:@"objectRoom"];
    [v4 setRoom:v18];

    if (!a2) {
      goto LABEL_20;
    }
    int v19 = (void *)MEMORY[0x1E4F1CB10];
    __int16 v20 = [v3 objectForKeyedSubscript:@"objectRoomIdentifier"];
    id v21 = [v19 URLWithString:v20];
    [v4 setRoomIdentifier:v21];
  }
  else if (!a2)
  {
    goto LABEL_20;
  }
  uint64_t v22 = [v3 objectForKeyedSubscript:@"objectZones"];

  if (v22)
  {
    id v23 = objc_msgSend(v3, "hmf_arrayForKey:", @"objectZones");
    id v24 = [v23 firstObject];
    [v4 setZone:v24];

    long long v25 = objc_msgSend(v3, "hmf_arrayForKey:", @"objectZoneIdentifiers");
    if ([v25 count])
    {
      uint64_t v26 = hmd_urlsFromStrings(v25);
      [v4 setZoneIdentifiers:v26];
    }
  }
  long long v27 = [v3 objectForKeyedSubscript:@"objectAccessoryPrimaryServiceIdentifier"];

  if (v27)
  {
    long long v28 = (void *)MEMORY[0x1E4F1CB10];
    long long v29 = [v3 objectForKeyedSubscript:@"objectAccessoryPrimaryServiceIdentifier"];
    long long v30 = [v28 URLWithString:v29];
    [v4 setPrimaryServiceIdentifier:v30];
  }
  uint64_t v31 = [v3 objectForKeyedSubscript:@"objectAccessory"];

  if (v31)
  {
    uint64_t v32 = [v3 objectForKeyedSubscript:@"objectAccessory"];
    [v4 setAccessory:v32];

    id v33 = (void *)MEMORY[0x1E4F1CB10];
    __int16 v34 = [v3 objectForKeyedSubscript:@"objectAccessoryIdentifier"];
    __int16 v35 = [v33 URLWithString:v34];
    [v4 setAccessoryIdentifier:v35];
  }
LABEL_20:
  __int16 v36 = [v3 objectForKeyedSubscript:@"objectType"];
  int v37 = [v36 isEqualToString:*MEMORY[0x1E4F96FE0]];

  if (v37)
  {
    uint64_t v38 = [v3 objectForKeyedSubscript:@"objectSceneType"];
    long long v39 = mapToSiriSceneType(v38);
    [v4 setSceneType:v39];

    id v40 = [v3 objectForKeyedSubscript:@"objectStatus"];
    [v4 setStatus:v40];

    id v41 = [v3 objectForKeyedSubscript:@"objectSceneActions"];
    [v4 setSceneActions:v41];
  }
  id v42 = +[HMDHAPMetadata getSharedInstance];
  id v43 = [v3 objectForKeyedSubscript:@"objectServiceType"];
  id v44 = [v3 objectForKeyedSubscript:@"objectServiceSubType"];
  uint64_t v92 = v42;
  if (!v43)
  {
LABEL_41:
    if (!a2) {
      goto LABEL_44;
    }
    goto LABEL_42;
  }
  if (([v43 isEqual:*MEMORY[0x1E4F971B0]] & 1) == 0
    && ([v43 isEqual:*MEMORY[0x1E4F97190]] & 1) == 0
    && ![v43 isEqual:*MEMORY[0x1E4F97188]])
  {
    if ([v43 isEqualToString:*MEMORY[0x1E4F971A0]])
    {
      id v50 = v4;
      __int16 v51 = v43;
    }
    else
    {
      double v52 = [v42 mapToAssistantServiceName:v43];
      [v4 setServiceType:v52];

      __int16 v53 = [v4 serviceType];

      if (v53) {
        goto LABEL_39;
      }
      __int16 v51 = (void *)*MEMORY[0x1E4F97198];
      id v50 = v4;
    }
    [v50 setServiceType:v51];
LABEL_39:
    if (v44) {
      [v4 setServiceSubType:v44];
    }
    goto LABEL_41;
  }
  [v4 setServiceType:v43];
  if (v44) {
    [v4 setServiceSubType:v44];
  }
  if (a2)
  {
    uint64_t v45 = getAttributeForMediaProfile(v4);
    [v4 setAttributes:v45];

    long long v46 = [v3 objectForKeyedSubscript:@"objectReference"];
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      __int16 v47 = v46;
    }
    else {
      __int16 v47 = 0;
    }
    id v48 = v47;

    int v49 = [v48 isCurrentAccessory];
    id v42 = v92;
    if (v49) {
      [v4 setCurrentDevice:MEMORY[0x1E4F1CC38]];
    }
LABEL_42:
    id v54 = [v3 objectForKeyedSubscript:@"objectHashedRouteUID"];

    if (v54)
    {
      uint64_t v55 = [v3 objectForKeyedSubscript:@"objectHashedRouteUID"];
      [v4 setHashedRouteUID:v55];
    }
  }
LABEL_44:
  double v56 = [v3 objectForKeyedSubscript:@"objectCharacteristics"];
  uint64_t v57 = v56;
  if (a2 && v56)
  {
    uint64_t v85 = v44;
    uint64_t v86 = v43;
    int v87 = a2;
    uint64_t v88 = v3;
    uint64_t v89 = v4;
    uint64_t v58 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v56, "count"));
    id v42 = v92;
    uint64_t v91 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v57, "count"));
    long long v95 = 0u;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    id v83 = v57;
    id obj = v57;
    uint64_t v59 = [obj countByEnumeratingWithState:&v95 objects:v99 count:16];
    if (v59)
    {
      uint64_t v60 = v59;
      uint64_t v61 = *(void *)v96;
      do
      {
        for (uint64_t i = 0; i != v60; ++i)
        {
          if (*(void *)v96 != v61) {
            objc_enumerationMutation(obj);
          }
          uint64_t v63 = *(void *)(*((void *)&v95 + 1) + 8 * i);
          long long v64 = objc_msgSend(v42, "mapToAssistantCharacteristicName:", v63, v83);
          if (v64)
          {
            id v65 = [v42 mapReadCharacteristicFromAssistantName:v64];
            uint64_t v66 = [v42 getAliasedCharacteristicTypes:v65];
            if (([v58 containsObject:v64] & 1) == 0
              && (([v65 isEqualToString:v63] & 1) != 0
               || [v66 containsObject:v63]))
            {
              [v58 addObject:v64];
            }
            uint64_t v67 = [v42 mapWriteCharacteristicFromAssistantName:v64];
            uint64_t v68 = [v42 getAliasedCharacteristicTypes:v67];

            if (([v91 containsObject:v64] & 1) == 0
              && (([v67 isEqual:v63] & 1) != 0
               || [v68 containsObject:v63])
              && (HMFEqualObjects() & 1) == 0)
            {
              [v91 addObject:v64];
            }

            id v42 = v92;
          }
        }
        uint64_t v60 = [obj countByEnumeratingWithState:&v95 objects:v99 count:16];
      }
      while (v60);
    }

    id v43 = v86;
    id v3 = v88;
    id v4 = v89;
    if ([v86 isEqualToString:*MEMORY[0x1E4F2DE78]])
    {
      long long v69 = [v88 objectForKeyedSubscript:@"objectReference"];
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        uint64_t v70 = v69;
      }
      else {
        uint64_t v70 = 0;
      }
      id v71 = v70;

      id v72 = [v71 accessory];
      uint64_t v73 = [v72 lightProfiles];
      v93[0] = MEMORY[0x1E4F143A8];
      v93[1] = 3221225472;
      v93[2] = __entityFromObject_block_invoke;
      v93[3] = &unk_1E6A0CA58;
      id v94 = v71;
      id v74 = v71;
      long long v75 = objc_msgSend((id)v73, "na_firstObjectPassingTest:", v93);

      id v76 = [v75 settings];
      LOBYTE(v73) = [v76 supportedFeatures];

      if (v73) {
        [v58 addObject:*MEMORY[0x1E4F96E00]];
      }

      id v42 = v92;
    }
    a2 = v87;
    id v44 = v85;
    if (objc_msgSend(v58, "count", v83))
    {
      [v89 setAttributes:v58];
      if ([v91 count]) {
        [v89 setTargetAttributes:v91];
      }
    }

    uint64_t v57 = v84;
  }
  if (a2)
  {
    uint64_t v77 = [v3 objectForKey:@"objectGroups"];

    if (v77)
    {
      long long v78 = objc_msgSend(v3, "hmf_arrayForKey:", @"objectGroups");
      uint64_t v79 = [v78 firstObject];
      [v4 setServiceGroup:v79];

      uint64_t v80 = objc_msgSend(v3, "hmf_arrayForKey:", @"objectGroupIdentifiers");
      if ([v80 count])
      {
        id v81 = hmd_urlsFromStrings(v80);
        [v4 setServiceGroupIdentifiers:v81];
      }
      id v42 = v92;
    }
  }

  return v4;
}

id hmd_urlsFromStrings(void *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
  if (v4)
  {
    uint64_t v6 = v4;
    uint64_t v7 = *(void *)v24;
    unint64_t v8 = 0x1E4F1C000uLL;
    *(void *)&long long v5 = 138543618;
    long long v21 = v5;
    do
    {
      uint64_t v9 = 0;
      uint64_t v22 = v6;
      do
      {
        if (*(void *)v24 != v7) {
          objc_enumerationMutation(v3);
        }
        uint64_t v10 = *(void *)(*((void *)&v23 + 1) + 8 * v9);
        uint64_t v11 = objc_msgSend(*(id *)(v8 + 2832), "URLWithString:", v10, v21);
        if (v11)
        {
          [v2 addObject:v11];
        }
        else
        {
          unint64_t v12 = (void *)MEMORY[0x1D9452090]();
          char v13 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          {
            HMFGetLogIdentifier();
            uint64_t v14 = v7;
            unint64_t v15 = v8;
            id v16 = v2;
            v18 = id v17 = v3;
            *(_DWORD *)long long buf = v21;
            long long v28 = v18;
            __int16 v29 = 2112;
            uint64_t v30 = v10;
            _os_log_impl(&dword_1D49D5000, v13, OS_LOG_TYPE_ERROR, "%{public}@Unable to map NSString '%@' to NSURL", buf, 0x16u);

            id v3 = v17;
            uint64_t v2 = v16;
            unint64_t v8 = v15;
            uint64_t v7 = v14;
            uint64_t v6 = v22;
          }
        }

        ++v9;
      }
      while (v6 != v9);
      uint64_t v6 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
    }
    while (v6);
  }

  int v19 = (void *)[v2 copy];
  return v19;
}

id mapToSiriSceneType(void *a1)
{
  id v1 = a1;
  id v2 = (id)*MEMORY[0x1E4F97058];
  if ([v1 isEqualToString:*MEMORY[0x1E4F2C960]])
  {
    id v3 = (id *)MEMORY[0x1E4F97038];
  }
  else if ([v1 isEqualToString:*MEMORY[0x1E4F2C948]])
  {
    id v3 = (id *)MEMORY[0x1E4F97040];
  }
  else if ([v1 isEqualToString:*MEMORY[0x1E4F2C930]])
  {
    id v3 = (id *)MEMORY[0x1E4F97048];
  }
  else
  {
    if (![v1 isEqualToString:*MEMORY[0x1E4F2C938]]) {
      goto LABEL_10;
    }
    id v3 = (id *)MEMORY[0x1E4F97050];
  }
  id v4 = *v3;

  id v2 = v4;
LABEL_10:

  return v2;
}

id getAttributeForMediaProfile(void *a1)
{
  id v1 = a1;
  if (getAttributeForMediaProfile_onceToken != -1) {
    dispatch_once(&getAttributeForMediaProfile_onceToken, &__block_literal_global_60521);
  }
  id v2 = [v1 serviceType];
  id v3 = [v1 serviceSubType];
  if (v2)
  {
    id v4 = [v1 entityType];
    int v5 = [v4 isEqualToString:*MEMORY[0x1E4F96FE8]];

    if (v5)
    {
      if ([v2 isEqualToString:*MEMORY[0x1E4F97190]])
      {
        uint64_t v6 = &getAttributeForMediaProfile_atvAttributes;
LABEL_15:
        id v8 = (id)*v6;
        goto LABEL_17;
      }
      uint64_t v7 = *MEMORY[0x1E4F971B0];
      if ([v2 isEqualToString:*MEMORY[0x1E4F971B0]]
        && ([v3 isEqualToString:*MEMORY[0x1E4F97130]] & 1) != 0)
      {
        uint64_t v6 = &getAttributeForMediaProfile_homePodAttributes;
        goto LABEL_15;
      }
      if ([v2 isEqualToString:*MEMORY[0x1E4F97188]]
        && ([v3 isEqualToString:*MEMORY[0x1E4F970F0]] & 1) != 0
        || [v2 isEqualToString:v7]
        && [v3 isEqualToString:*MEMORY[0x1E4F970F0]])
      {
        uint64_t v6 = &getAttributeForMediaProfile_thirdPartyAttributes;
        goto LABEL_15;
      }
    }
  }
  id v8 = 0;
LABEL_17:

  return v8;
}

uint64_t __entityFromObject_block_invoke(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 service];
  uint64_t v4 = [v2 isEqual:v3];

  return v4;
}

void __getAttributeForMediaProfile_block_invoke()
{
  void v9[2] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *MEMORY[0x1E4F96E40];
  v9[0] = *MEMORY[0x1E4F96E58];
  v9[1] = v0;
  uint64_t v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:2];
  id v2 = (void *)getAttributeForMediaProfile_atvAttributes;
  getAttributeForMediaProfile_atvAttributes = v1;

  uint64_t v8 = v0;
  uint64_t v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v8 count:1];
  uint64_t v4 = (void *)getAttributeForMediaProfile_homePodAttributes;
  getAttributeForMediaProfile_homePodAttributes = v3;

  uint64_t v7 = v0;
  uint64_t v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v7 count:1];
  uint64_t v6 = (void *)getAttributeForMediaProfile_thirdPartyAttributes;
  getAttributeForMediaProfile_thirdPartyAttributes = v5;
}

id entityForService(void *a1, void *a2, void *a3, int a4)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v9 = a3;
  uint64_t v10 = [v9 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    int v21 = a4;
    id v22 = v8;
    uint64_t v12 = *(void *)v24;
    while (2)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v24 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void **)(*((void *)&v23 + 1) + 8 * i);
        unint64_t v15 = [v14 objectForKeyedSubscript:@"objectIdentifier"];
        id v16 = [v7 urlString];
        int v17 = [v16 isEqual:v15];

        if (v17)
        {
          int v19 = entityFromObject(v14, v21);
          uint64_t v18 = v19;
          id v8 = v22;
          if (v22) {
            [v19 setServiceType:v22];
          }

          goto LABEL_14;
        }
      }
      uint64_t v11 = [v9 countByEnumeratingWithState:&v23 objects:v27 count:16];
      if (v11) {
        continue;
      }
      break;
    }
    uint64_t v18 = 0;
    id v8 = v22;
  }
  else
  {
    uint64_t v18 = 0;
  }
LABEL_14:

  return v18;
}

id entityForMediaProfile(void *a1, void *a2, int a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v6 = a2;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    int v17 = a3;
    uint64_t v9 = *(void *)v19;
    while (2)
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v19 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        uint64_t v12 = [v11 objectForKeyedSubscript:@"objectIdentifier"];
        char v13 = [v5 urlString];
        char v14 = [v13 isEqual:v12];

        if (v14)
        {
          unint64_t v15 = entityFromObject(v11, v17);

          goto LABEL_11;
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
      if (v8) {
        continue;
      }
      break;
    }
  }
  unint64_t v15 = 0;
LABEL_11:

  return v15;
}

void __HMDHomeDataCopyProperties(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v54 = a1;
  id v6 = [v5 homes];
  uint64_t v7 = [v6 copyWithZone:a3];
  uint64_t v8 = (void *)v54[2];
  v54[2] = v7;

  uint64_t v9 = [v5 accessories];
  uint64_t v10 = [v9 copyWithZone:a3];
  uint64_t v11 = (void *)v54[3];
  v54[3] = v10;

  uint64_t v12 = [v5 primaryHomeUUID];
  uint64_t v13 = [v12 copyWithZone:a3];
  char v14 = (void *)v54[4];
  v54[4] = v13;

  unint64_t v15 = [v5 lastCurrentHomeUUID];
  uint64_t v16 = [v15 copyWithZone:a3];
  int v17 = (void *)v54[5];
  v54[5] = v16;

  v54[7] = [v5 schemaVersion];
  v54[6] = [v5 dataVersion];
  v54[8] = [v5 recoveryVersion];
  long long v18 = [v5 dataTag];
  uint64_t v19 = [v18 copyWithZone:a3];
  long long v20 = (void *)v54[9];
  v54[9] = v19;

  long long v21 = [v5 UUIDsOfRemovedHomes];
  uint64_t v22 = [v21 copyWithZone:a3];
  uint64_t v23 = (void *)v54[10];
  v54[10] = v22;

  long long v24 = [v5 cloudZones];
  uint64_t v25 = [v24 copyWithZone:a3];
  long long v26 = (void *)v54[11];
  v54[11] = v25;

  long long v27 = [v5 incomingInvitations];
  uint64_t v28 = [v27 copyWithZone:a3];
  __int16 v29 = (void *)v54[12];
  v54[12] = v28;

  uint64_t v30 = [v5 currentDevice];
  uint64_t v31 = [v30 copyWithZone:a3];
  uint64_t v32 = (void *)v54[13];
  v54[13] = v31;

  id v33 = [v5 pendingReasonSaved];
  uint64_t v34 = [v33 copyWithZone:a3];
  __int16 v35 = (void *)v54[14];
  v54[14] = v34;

  __int16 v36 = [v5 pendingUserManagementOperations];
  uint64_t v37 = [v36 copyWithZone:a3];
  uint64_t v38 = (void *)v54[15];
  v54[15] = v37;

  long long v39 = [v5 unprocessedOperationIdentifiers];
  uint64_t v40 = [v39 copyWithZone:a3];
  id v41 = (void *)v54[16];
  v54[16] = v40;

  id v42 = [v5 applicationData];
  uint64_t v43 = [v42 copyWithZone:a3];
  id v44 = (void *)v54[17];
  v54[17] = v43;

  v54[18] = [v5 residentEnabledState];
  uint64_t v45 = [v5 account];
  long long v46 = (void *)v54[19];
  v54[19] = v45;

  __int16 v47 = [v5 remoteAccounts];
  uint64_t v48 = [v47 copyWithZone:a3];
  int v49 = (void *)v54[20];
  v54[20] = v48;

  uint64_t v50 = [v5 primaryAccountHandle];
  __int16 v51 = (void *)v54[21];
  v54[21] = v50;

  *((unsigned char *)v54 + _Block_object_dispose(&STACK[0x210], 8) = [v5 accessAllowedWhenLocked];
  uint64_t v52 = [v5 demoAccessories];
  __int16 v53 = (void *)v54[22];
  v54[22] = v52;

  LOBYTE(a3) = [v5 demoFinalized];
  *((unsigned char *)v54 + 9) = a3;
}

void sub_1D4E64090(_Unwind_Exception *a1)
{
}

void sub_1D4E654CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__61282(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__61283(uint64_t a1)
{
}

void sub_1D4E65B68(_Unwind_Exception *a1)
{
}

void sub_1D4E6B758(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E6B958(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E6C044(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4E6C270(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __anonymizeUnknownVendorString_block_invoke()
{
  uint64_t v0 = (void *)anonymizeUnknownVendorString_allowedNames;
  anonymizeUnknownVendorString_allowedNames = (uint64_t)&unk_1F2DC6C70;
}

void sub_1D4E8C220(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4E8C3AC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4E8C94C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4E8CAF4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4E8D668(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1D4E8DE00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E8E2CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E8FACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E903C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D4E91360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id location)
{
  objc_destroyWeak(v37);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4E972B8(_Unwind_Exception *a1)
{
}

uint64_t __Block_byref_object_copy__65252(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__65253(uint64_t a1)
{
}

void ___legacyMultiUserSettings_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v13 = a2;
  id v5 = a3;
  id v6 = objc_alloc_init(HMDAnalyticsMultiUserSettingsValueByKeyPath);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v7 = v13;
    if ([v7 isEqualToString:@"private.root.home.dismissedUserSplitMediaAccountWarning"])
    {
      uint64_t v8 = 2;
    }
    else if ([v7 isEqualToString:@"private.root.home.dismissedIdentifyVoiceOnboarding"])
    {
      uint64_t v8 = 4;
    }
    else if ([v7 isEqualToString:@"private.root.home.dismissedTVViewingProfileOnboarding"])
    {
      uint64_t v8 = 6;
    }
    else if ([v7 isEqualToString:@"private.root.home.dismissedTVViewingProfileSetupBanner"])
    {
      uint64_t v8 = 7;
    }
    else if ([v7 isEqualToString:@"private.root.home.dismissedCameraRecordingOnboarding"])
    {
      uint64_t v8 = 8;
    }
    else if ([v7 isEqualToString:@"private.root.home.dismissedCameraRecordingSetupBanner"])
    {
      uint64_t v8 = 9;
    }
    else if ([v7 isEqualToString:@"shared.root.siri.identifyVoice"])
    {
      uint64_t v8 = 10;
    }
    else if ([v7 isEqualToString:@"shared.root.music.playbackInfluencesForYou"])
    {
      uint64_t v8 = 11;
    }
    else
    {
      uint64_t v8 = [v7 isEqualToString:@"private.root.home.dismissedIdentifyVoiceSetupBanner"]? 5: 0;
    }

    [(HMDAnalyticsMultiUserSettingsValueByKeyPath *)v6 setType:v8];
    if ([(HMDAnalyticsMultiUserSettingsValueByKeyPath *)v6 type])
    {
      id v9 = v5;
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = 0;
      }
      id v11 = v10;

      uint64_t v12 = [v11 longLongValue];
      [(HMDAnalyticsMultiUserSettingsValueByKeyPath *)v6 setMultiUserSettingsValueInteger:v12];
      [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:v6];
    }
  }
}

void sub_1D4E99C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D4E9B3E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
}

BOOL __HMDHH2AutoMigrationHasRealSharedUserForHome_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  if ([v2 isOwner] & 1) != 0 || (objc_msgSend(v2, "isRemoteGateway"))
  {
    BOOL v3 = 0;
  }
  else
  {
    uint64_t v4 = [v2 userID];
    BOOL v3 = v4 != 0;
  }
  return v3;
}

uint64_t HMDHH2AutoMigrationHasSharedUserOrPendingInvitation(void *a1)
{
  id v1 = a1;
  id v2 = [v1 users];
  char v3 = objc_msgSend(v2, "na_any:", &__block_literal_global_218_65567);

  if (v3)
  {
    uint64_t v4 = 1;
  }
  else
  {
    id v5 = [v1 outgoingInvitations];
    uint64_t v4 = objc_msgSend(v5, "na_any:", &__block_literal_global_216_65579);
  }
  return v4;
}

uint64_t __HMDHH2AutoMigrationHasSharedUserOrPendingInvitation_block_invoke(uint64_t a1, void *a2)
{
  return [a2 isPending];
}

void sub_1D4EA0BF4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4EA147C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4EA6CC8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDCompanionManagerUpdateWithConnectedDevices(void *a1, void *a2)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v30 = a1;
  uint64_t v31 = a2;
  if (v30)
  {
    char v3 = (void *)MEMORY[0x1D9452090]();
    uint64_t v4 = (os_unfair_lock_s *)v30;
    id v5 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      id v6 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      id v38 = v6;
      __int16 v39 = 2112;
      uint64_t v40 = v31;
      _os_log_impl(&dword_1D49D5000, v5, OS_LOG_TYPE_INFO, "%{public}@Updating connected devices: %@", buf, 0x16u);
    }
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    id v7 = v31;
    uint64_t v8 = [(HMDDevice *)v7 countByEnumeratingWithState:&v32 objects:v36 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v33;
      while (2)
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v33 != v9) {
            objc_enumerationMutation(v7);
          }
          uint64_t v11 = *(void *)(*((void *)&v32 + 1) + 8 * i);
          if (+[HMDCompanionManager isCompatibleCompanionDevice:](HMDCompanionManager, "isCompatibleCompanionDevice:", v11, v30))
          {
            uint64_t v12 = [HMDDevice alloc];
            id v13 = [(os_unfair_lock_s *)v4 service];
            char v14 = [(HMDDevice *)v12 initWithService:v13 device:v11];

            if (v14)
            {
              uint64_t v19 = (void *)MEMORY[0x1D9452090]();
              long long v20 = v4;
              long long v21 = HMFGetOSLogHandle();
              if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
              {
                uint64_t v22 = HMFGetLogIdentifier();
                *(_DWORD *)long long buf = 138543618;
                id v38 = v22;
                __int16 v39 = 2112;
                uint64_t v40 = v14;
                _os_log_impl(&dword_1D49D5000, v21, OS_LOG_TYPE_INFO, "%{public}@Found connected companion device: %@", buf, 0x16u);
              }

              goto LABEL_19;
            }
          }
        }
        uint64_t v8 = [(HMDDevice *)v7 countByEnumeratingWithState:&v32 objects:v36 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }

    unint64_t v15 = (void *)MEMORY[0x1D9452090]();
    uint64_t v16 = v4;
    int v17 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      long long v18 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      id v38 = v18;
      _os_log_impl(&dword_1D49D5000, v17, OS_LOG_TYPE_INFO, "%{public}@No connected companion found", buf, 0xCu);
    }
    char v14 = 0;
LABEL_19:
    uint64_t v23 = v4 + 2;
    os_unfair_lock_lock_with_options();
    if (HMFEqualObjects())
    {
      os_unfair_lock_unlock(v4 + 2);
    }
    else
    {
      long long v24 = (void *)MEMORY[0x1D9452090]();
      uint64_t v25 = v4;
      HMFGetOSLogHandle();
      long long v26 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        id v27 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v28 = [(HMDDevice *)v14 shortDescription];
        *(_DWORD *)long long buf = 138543618;
        id v38 = v27;
        __int16 v39 = 2112;
        uint64_t v40 = v28;
        _os_log_impl(&dword_1D49D5000, v26, OS_LOG_TYPE_DEFAULT, "%{public}@Updated companion to: %@", buf, 0x16u);
      }
      objc_storeStrong(v25 + 3, v14);
      os_unfair_lock_unlock(v23);
      __int16 v29 = [MEMORY[0x1E4F28EB8] defaultCenter];
      [v29 postNotificationName:@"HMDCompanionManagerUpdatedCompanionNotification" object:v25];
    }
  }
}

void sub_1D4EAA1B0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EAB6EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id *location, id *a17)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v17 - 144));
  _Unwind_Resume(a1);
}

void sub_1D4EAB998(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EABC84(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EABED4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EAC350(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EAC4B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EAC86C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EACA98(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EAE134(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EAE224(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EAE858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_1D4EAEEE0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EAEFAC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EAF4C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EAF590(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EAFFDC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EB0058(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EB0104(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __run(void *a1)
{
  uint64_t v1 = a1;
  id v2 = v1;
  switch(v1[19])
  {
    case 0:
      v1[19] = 1;
      goto LABEL_3;
    case 1:
LABEL_3:
      [v1 _requestUserPermission];
      goto LABEL_7;
    case 3:
      [v1 _configureDevice];
      goto LABEL_7;
    case 5:
      [v1 _waitForPostWACMatch];
      goto LABEL_7;
    case 6:
      [v1 _postWACMatchTimeout];
LABEL_7:
      uint64_t v1 = v2;
      break;
    default:
      break;
  }
}

void __callCompletion(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  [v7[18] suspend];
  id v10 = v7[18];
  v7[18] = 0;

  id v11 = v7[20];
  v7[20] = 0;

  if (v7[17])
  {
    uint64_t v12 = (void *)MEMORY[0x1D9452090]();
    id v13 = v7;
    char v14 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v15 = HMFGetLogIdentifier();
      int v17 = 138543618;
      long long v18 = v15;
      __int16 v19 = 2080;
      uint64_t v20 = a4;
      _os_log_impl(&dword_1D49D5000, v14, OS_LOG_TYPE_DEBUG, "%{public}@Calling completion from %s", (uint8_t *)&v17, 0x16u);
    }
    (*((void (**)(void))v13[17] + 2))();
    id v16 = v13[17];
    v13[17] = 0;
  }
}

void sub_1D4EB1188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1D4EB1BF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1D4EB2138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1D4EB35F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EB4A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4EB4F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4EB59B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

id HMDSWAuthFeaturesToString(char a1)
{
  if (a1)
  {
    id v2 = [@"<" stringByAppendingString:@" HAP"];
    if ((a1 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  id v2 = @"<";
  if ((a1 & 2) != 0)
  {
LABEL_5:
    uint64_t v3 = [(__CFString *)v2 stringByAppendingString:@" HAPAirPlay2"];

    id v2 = (__CFString *)v3;
  }
LABEL_6:
  uint64_t v4 = [(__CFString *)v2 stringByAppendingString:@" >"];

  return v4;
}

void sub_1D4EB5EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id DateFromEpochInterval(void *a1)
{
  if (a1)
  {
    id v2 = (void *)MEMORY[0x1E4F1C9C8];
    [a1 doubleValue];
    a1 = objc_msgSend(v2, "dateWithTimeIntervalSince1970:");
    uint64_t v1 = vars8;
  }
  return a1;
}

void sub_1D4EC6E34(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EC91FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4EC9938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4EC9BC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4ECD0DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4ED0BBC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4ED0F10(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4ED2214(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4ED4F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4ED9540(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D4EDC4B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D4EDF79C(_Unwind_Exception *a1)
{
}

void sub_1D4EDF89C(_Unwind_Exception *a1)
{
}

void sub_1D4EDF934(_Unwind_Exception *a1)
{
}

void sub_1D4EDFA34(_Unwind_Exception *a1)
{
}

void sub_1D4EE08AC(_Unwind_Exception *a1)
{
}

void BFSTraverseGroupWithBlock(void *a1, void *a2)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  uint64_t v4 = a2;
  unint64_t v5 = 0x1E4F1C000uLL;
  id v6 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v20 = v3;
  [v6 addObject:v3];
  for (; [v6 count]; unint64_t v5 = 0x1E4F1C000)
  {
    id v7 = v6;
    id v6 = objc_alloc_init(*(Class *)(v5 + 2632));
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    id obj = v7;
    uint64_t v8 = [obj countByEnumeratingWithState:&v26 objects:v31 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v27;
      while (2)
      {
        uint64_t v11 = 0;
        do
        {
          if (*(void *)v27 != v10) {
            objc_enumerationMutation(obj);
          }
          uint64_t v12 = *(void **)(*((void *)&v26 + 1) + 8 * v11);
          long long v22 = 0u;
          long long v23 = 0u;
          long long v24 = 0u;
          long long v25 = 0u;
          id v13 = [v12 groups];
          uint64_t v14 = [v13 countByEnumeratingWithState:&v22 objects:v30 count:16];
          if (v14)
          {
            uint64_t v15 = v14;
            uint64_t v16 = *(void *)v23;
            do
            {
              uint64_t v17 = 0;
              do
              {
                if (*(void *)v23 != v16) {
                  objc_enumerationMutation(v13);
                }
                [v6 addObject:*(void *)(*((void *)&v22 + 1) + 8 * v17++)];
              }
              while (v15 != v17);
              uint64_t v15 = [v13 countByEnumeratingWithState:&v22 objects:v30 count:16];
            }
            while (v15);
          }

          long long v18 = [v12 settings];
          int v19 = v4[2](v4, v12, v18);

          if (!v19)
          {

            goto LABEL_20;
          }
          ++v11;
        }
        while (v11 != v9);
        uint64_t v9 = [obj countByEnumeratingWithState:&v26 objects:v31 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }
  }
LABEL_20:
}

uint64_t isReconfigurationPossible(void *a1)
{
  id v1 = a1;
  if ([v1 supportsWiFiReconfiguration]) {
    uint64_t v2 = [v1 isReachable];
  }
  else {
    uint64_t v2 = 0;
  }

  return v2;
}

id __modelIdentifierForURI(void *a1, void *a2)
{
  void v14[2] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (__modelIdentifierForURI_onceToken != -1) {
    dispatch_once(&__modelIdentifierForURI_onceToken, &__block_literal_global_231);
  }
  unint64_t v5 = (void *)MEMORY[0x1E4F29128];
  if (v4)
  {
    uint64_t v6 = __modelIdentifierForURI_namespace;
    id v7 = [v4 UUIDString];
    v14[0] = v7;
    uint64_t v8 = [v3 prefixedURI];
    v14[1] = v8;
    uint64_t v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v14 count:2];
    uint64_t v10 = objc_msgSend(v5, "hm_deriveUUIDFromBaseUUID:withSalts:", v6, v9);
  }
  else
  {
    id v11 = objc_alloc(MEMORY[0x1E4F29128]);
    uint64_t v12 = __modelIdentifierForURI_namespace;
    id v7 = [v3 prefixedURI];
    uint64_t v8 = [v7 dataUsingEncoding:4];
    uint64_t v10 = (void *)[v11 initWithNamespace:v12 data:v8];
  }

  return v10;
}

uint64_t ____modelIdentifierForURI_block_invoke()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:@"F48EA8E5-696C-4EA4-B767-16D13368CB16"];
  uint64_t v1 = __modelIdentifierForURI_namespace;
  __modelIdentifierForURI_namespace = v0;
  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1D4EE87D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__75035(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__75036(uint64_t a1)
{
}

uint64_t ____identifierForURI_block_invoke()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:@"297A1FDB-8A3E-443F-A8A8-1F3360785587"];
  uint64_t v1 = __identifierForURI_namespace;
  __identifierForURI_namespace = v0;
  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1D4EECD90(_Unwind_Exception *a1)
{
}

void sub_1D4EEEF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_1D4EEF468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_unfair_lock_t lock)
{
}

void sub_1D4EEF8C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_1D4EF29E0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EF2D4C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1D4EF2F00(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void addLogEventsToResponse(void *a1, void *a2, void *a3)
{
  id v8 = a1;
  id v5 = a2;
  id v6 = a3;
  id v7 = [v6 objectForKeyedSubscript:v8];
  if (!v7)
  {
    id v7 = [MEMORY[0x1E4F1CA48] array];
    [v6 setObject:v7 forKeyedSubscript:v8];
  }
  [v7 addObjectsFromArray:v5];
}