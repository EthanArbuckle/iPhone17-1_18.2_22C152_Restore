uint64_t NTPBPurchaseLookupRecordReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  BOOL v16;
  NTPBRecordBase *v17;
  uint64_t result;
  void *String;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;

  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          v10 = 0;
        }
LABEL_14:
        if (v15) {
          v16 = 1;
        }
        else {
          v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = objc_alloc_init(NTPBRecordBase);

              a1[2] = v17;
              if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2))
              {
                PBReaderRecallMark();
                goto LABEL_31;
              }
              return 0;
            case 2u:
              String = (void *)PBReaderReadString();

              v20 = String;
              v21 = 1;
              goto LABEL_30;
            case 3u:
              v22 = PBReaderReadString();
              if (v22) {
                [a1 addChannelTagIDs:v22];
              }
              goto LABEL_31;
            case 4u:
              v23 = PBReaderReadString();
              if (v23) {
                [a1 addBundleChannelTagIDs:v23];
              }
              goto LABEL_31;
            case 5u:
              v24 = (void *)PBReaderReadString();

              v20 = v24;
              v21 = 4;
LABEL_30:
              a1[v21] = v20;
              goto LABEL_31;
            default:
              result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_31:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBPersonalizationWhitelistReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        v18 = objc_alloc_init(NTPBScoredTagID);
        [a1 addOptionalTags:v18];
        goto LABEL_25;
      }
      if (v17 == 1)
      {
        v18 = objc_alloc_init(NTPBScoredTagID);
        [a1 addDefaultTags:v18];
LABEL_25:
        if (!PBReaderPlaceMark() || (NTPBScoredTagIDReadFrom((uint64_t)v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
LABEL_28:

        goto LABEL_30;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_30:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    v18 = (NTPBScoredTagID *)objc_claimAutoreleasedReturnValue();
    if (v18) {
      [a1 addDisabledPortraitTags:v18];
    }
    goto LABEL_28;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBKeyValueStoreReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 0u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 40) |= 2u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_40;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_42;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_42:
        uint64_t v31 = 16;
        goto LABEL_47;
      case 1u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 40) |= 1u;
        while (2)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
            *(void *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_46;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_46:
        uint64_t v31 = 8;
LABEL_47:
        *(void *)(a1 + v31) = v19;
        goto LABEL_48;
      case 2u:
        v29 = objc_alloc_init(NTPBKeyValuePair);
        [(id)a1 addKeyValuePairs:v29];

        if PBReaderPlaceMark() && (NTPBKeyValuePairReadFrom((uint64_t)v29, a2))
        {
          PBReaderRecallMark();
LABEL_48:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      case 3u:
        Data = (void *)PBReaderReadData();

        *(void *)(a1 + 32) = Data;
        goto LABEL_48;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_48;
    }
  }
}

uint64_t NTPBKeyValuePairReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 0u:
        String = (void *)PBReaderReadString();

        id v18 = String;
        uint64_t v19 = 80;
        goto LABEL_38;
      case 1u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 140) |= 1u;
        while (2)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v14 = v21++ >= 9;
              if (v14)
              {
                LODWORD(v22) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_74:
        *(_DWORD *)(a1 + 136) = v22;
        goto LABEL_69;
      case 2u:
        Data = (void *)PBReaderReadData();

        id v18 = Data;
        uint64_t v19 = 56;
        goto LABEL_38;
      case 3u:
        unint64_t v27 = (void *)PBReaderReadString();

        id v18 = v27;
        uint64_t v19 = 128;
        goto LABEL_38;
      case 4u:
        char v28 = objc_alloc_init(NTPBDate);

        *(void *)(a1 + 64) = v28;
        if (!PBReaderPlaceMark() || (NTPBDateReadFrom((uint64_t)v28, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_68;
      case 6u:
        v30 = objc_alloc_init(NTPBCacheCoordinatorHints);

        *(void *)(a1 + 48) = v30;
        if (!PBReaderPlaceMark() || (NTPBCacheCoordinatorHintsReadFrom((uint64_t)v30, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_68;
      case 7u:
        uint64_t v31 = (void *)PBReaderReadData();

        id v18 = v31;
        uint64_t v19 = 120;
LABEL_38:
        *(void *)(a1 + v19) = v18;
        goto LABEL_69;
      case 8u:
        v32 = objc_alloc_init(NTPBReadingHistoryItem);

        *(void *)(a1 + 112) = v32;
        if (!PBReaderPlaceMark() || (NTPBReadingHistoryItemReadFrom((uint64_t)v32, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_68;
      case 0xAu:
        v33 = objc_alloc_init(NTPBNetworkSessionList);

        *(void *)(a1 + 88) = v33;
        if (!PBReaderPlaceMark() || (NTPBNetworkSessionListReadFrom(v33, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_68;
      case 0xDu:
        v34 = objc_alloc_init(NTPBPersonalizationLocalData);

        *(void *)(a1 + 96) = v34;
        if (!PBReaderPlaceMark()
          || (NTPBPersonalizationLocalDataReadFrom((id *)&v34->super.super.isa, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_68;
      case 0xEu:
        v35 = objc_alloc_init(NTPBAppConfigurationResource);

        *(void *)(a1 + 8) = v35;
        if (!PBReaderPlaceMark() || (NTPBAppConfigurationResourceReadFrom((uint64_t)v35, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_68;
      case 0xFu:
        v36 = objc_alloc_init(NTPBPrivateDataControllerSyncState);

        *(void *)(a1 + 104) = v36;
        if (!PBReaderPlaceMark()
          || (NTPBPrivateDataControllerSyncStateReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_68;
      case 0x10u:
        v37 = objc_alloc_init(NTPBIssueReadingHistoryItem);

        *(void *)(a1 + 72) = v37;
        if (!PBReaderPlaceMark()
          || (NTPBIssueReadingHistoryItemReadFrom((id *)&v37->super.super.isa, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_68;
      case 0x11u:
        v38 = objc_alloc_init(NTPBAsset);

        *(void *)(a1 + 16) = v38;
        if (!PBReaderPlaceMark() || (NTPBAssetReadFrom((uint64_t)v38, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_68;
      case 0x12u:
        v39 = objc_alloc_init(NTPBAudioPlaylistItem);

        *(void *)(a1 + 24) = v39;
        if (!PBReaderPlaceMark() || (NTPBAudioPlaylistItemReadFrom((uint64_t)v39, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_68;
      case 0x13u:
        v40 = objc_alloc_init(NTPBAVAsset);

        *(void *)(a1 + 32) = v40;
        if (!PBReaderPlaceMark() || (NTPBAVAssetReadFrom((uint64_t)v40, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_68;
      case 0x14u:
        v41 = objc_alloc_init(NTPBAVAssetKey);

        *(void *)(a1 + 40) = v41;
        if PBReaderPlaceMark() && (NTPBAVAssetKeyReadFrom((id *)&v41->super.super.isa, a2))
        {
LABEL_68:
          PBReaderRecallMark();
LABEL_69:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_69;
    }
  }
}

uint64_t NTPBAssetReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 5)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 24) |= 2u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_39;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_41;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_41:
        uint64_t v31 = 12;
      }
      else
      {
        if (v17 != 3)
        {
          if (v17 == 2)
          {
            Data = (void *)PBReaderReadData();

            *(void *)(a1 + 16) = Data;
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v21 |= (unint64_t)(v29 & 0x7F) << v25;
          if ((v29 & 0x80) == 0) {
            goto LABEL_43;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_45:
        uint64_t v31 = 8;
      }
      *(_DWORD *)(a1 + v31) = v21;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBCacheCoordinatorHintsReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v23 = objc_alloc_init(NTPBCacheHint);
        [(id)a1 addCacheHints:v23];

        if (!PBReaderPlaceMark() || (NTPBCacheHintReadFrom((uint64_t)v23, a2) & 1) == 0) {
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v10 >> 3))
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
      else
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_35:
        *(void *)(a1 + 8) = v19;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBCacheHintReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 28) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_39;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            uint64_t v21 = 0;
            goto LABEL_41;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_41:
        *(void *)(a1 + 8) = v21;
      }
      else if (v17 == 2)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        *(unsigned char *)(a1 + 28) |= 2u;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_43;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            LODWORD(v27) = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_45:
        *(_DWORD *)(a1 + 24) = v27;
      }
      else if (v17)
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
      else
      {
        String = (void *)PBReaderReadString();

        *(void *)(a1 + 16) = String;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBNetworkSessionListReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1)
      {
        unsigned int v18 = objc_alloc_init(NTPBNetworkEvent);
        [a1 addNetworkEvents:v18];

        if (!PBReaderPlaceMark() || (NTPBNetworkEventReadFrom((uint64_t)v18, a2) & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if ((v10 >> 3))
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        unint64_t v17 = objc_alloc_init(NTPBNetworkSession);
        [a1 addNetworkSessions:v17];

        if (!PBReaderPlaceMark() || (NTPBNetworkSessionReadFrom((uint64_t)v17, a2) & 1) == 0) {
          return 0;
        }
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBNetworkEventReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 0u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 124) |= 0x100u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_110;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_112;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_110:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_112:
          uint64_t v86 = 72;
          goto LABEL_154;
        case 1u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 124) |= 2u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_116;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_116:
          uint64_t v86 = 16;
          goto LABEL_154;
        case 2u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 124) |= 1u;
          while (2)
          {
            uint64_t v31 = *v3;
            unint64_t v32 = *(void *)(a2 + v31);
            if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
              *(void *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                BOOL v14 = v30++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_120:
          uint64_t v86 = 8;
          goto LABEL_154;
        case 3u:
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 124) |= 0x10u;
          while (2)
          {
            uint64_t v36 = *v3;
            unint64_t v37 = *(void *)(a2 + v36);
            if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
              *(void *)(a2 + v36) = v37 + 1;
              v19 |= (unint64_t)(v38 & 0x7F) << v34;
              if (v38 < 0)
              {
                v34 += 7;
                BOOL v14 = v35++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_124;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_124:
          uint64_t v86 = 40;
          goto LABEL_154;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 124) |= 0x20u;
          while (2)
          {
            uint64_t v41 = *v3;
            unint64_t v42 = *(void *)(a2 + v41);
            if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
              *(void *)(a2 + v41) = v42 + 1;
              v19 |= (unint64_t)(v43 & 0x7F) << v39;
              if (v43 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_128;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_128:
          uint64_t v86 = 48;
          goto LABEL_154;
        case 5u:
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 124) |= 0x40u;
          while (2)
          {
            uint64_t v46 = *v3;
            unint64_t v47 = *(void *)(a2 + v46);
            if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v47 + 1;
              v19 |= (unint64_t)(v48 & 0x7F) << v44;
              if (v48 < 0)
              {
                v44 += 7;
                BOOL v14 = v45++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_132;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_132:
          uint64_t v86 = 56;
          goto LABEL_154;
        case 6u:
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v51 = 0;
          *(_WORD *)(a1 + 124) |= 0x200u;
          while (2)
          {
            uint64_t v52 = *v3;
            unint64_t v53 = *(void *)(a2 + v52);
            if (v53 == -1 || v53 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
              *(void *)(a2 + v52) = v53 + 1;
              v51 |= (unint64_t)(v54 & 0x7F) << v49;
              if (v54 < 0)
              {
                v49 += 7;
                BOOL v14 = v50++ >= 9;
                if (v14)
                {
                  LODWORD(v51) = 0;
                  goto LABEL_136;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v51) = 0;
          }
LABEL_136:
          uint64_t v87 = 80;
          goto LABEL_149;
        case 7u:
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 124) |= 8u;
          while (2)
          {
            uint64_t v57 = *v3;
            unint64_t v58 = *(void *)(a2 + v57);
            if (v58 == -1 || v58 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v58);
              *(void *)(a2 + v57) = v58 + 1;
              v19 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                BOOL v14 = v56++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_140;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_140:
          uint64_t v86 = 32;
          goto LABEL_154;
        case 8u:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 124) |= 4u;
          while (2)
          {
            uint64_t v62 = *v3;
            unint64_t v63 = *(void *)(a2 + v62);
            if (v63 == -1 || v63 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
              *(void *)(a2 + v62) = v63 + 1;
              v19 |= (unint64_t)(v64 & 0x7F) << v60;
              if (v64 < 0)
              {
                v60 += 7;
                BOOL v14 = v61++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_144;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_144:
          uint64_t v86 = 24;
          goto LABEL_154;
        case 9u:
          char v65 = 0;
          unsigned int v66 = 0;
          uint64_t v51 = 0;
          *(_WORD *)(a1 + 124) |= 0x400u;
          while (2)
          {
            uint64_t v67 = *v3;
            unint64_t v68 = *(void *)(a2 + v67);
            if (v68 == -1 || v68 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v69 = *(unsigned char *)(*(void *)(a2 + *v7) + v68);
              *(void *)(a2 + v67) = v68 + 1;
              v51 |= (unint64_t)(v69 & 0x7F) << v65;
              if (v69 < 0)
              {
                v65 += 7;
                BOOL v14 = v66++ >= 9;
                if (v14)
                {
                  LODWORD(v51) = 0;
                  goto LABEL_148;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v51) = 0;
          }
LABEL_148:
          uint64_t v87 = 104;
LABEL_149:
          *(_DWORD *)(a1 + v87) = v51;
          continue;
        case 0xAu:
          String = (void *)PBReaderReadString();

          id v71 = String;
          uint64_t v72 = 112;
          goto LABEL_94;
        case 0xBu:
          v73 = (void *)PBReaderReadString();

          id v71 = v73;
          uint64_t v72 = 88;
          goto LABEL_94;
        case 0xCu:
          v74 = (void *)PBReaderReadString();

          id v71 = v74;
          uint64_t v72 = 96;
LABEL_94:
          *(void *)(a1 + v72) = v71;
          continue;
        case 0xDu:
          char v75 = 0;
          unsigned int v76 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 124) |= 0x80u;
          while (2)
          {
            uint64_t v77 = *v3;
            unint64_t v78 = *(void *)(a2 + v77);
            if (v78 == -1 || v78 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
              *(void *)(a2 + v77) = v78 + 1;
              v19 |= (unint64_t)(v79 & 0x7F) << v75;
              if (v79 < 0)
              {
                v75 += 7;
                BOOL v14 = v76++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_153:
          uint64_t v86 = 64;
LABEL_154:
          *(void *)(a1 + v86) = v19;
          continue;
        case 0xEu:
          char v80 = 0;
          unsigned int v81 = 0;
          uint64_t v82 = 0;
          *(_WORD *)(a1 + 124) |= 0x800u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v83 = *v3;
        unint64_t v84 = *(void *)(a2 + v83);
        if (v84 == -1 || v84 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v85 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
        *(void *)(a2 + v83) = v84 + 1;
        v82 |= (unint64_t)(v85 & 0x7F) << v80;
        if ((v85 & 0x80) == 0) {
          goto LABEL_158;
        }
        v80 += 7;
        BOOL v14 = v81++ >= 9;
        if (v14)
        {
          uint64_t v82 = 0;
          goto LABEL_160;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_158:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v82 = 0;
      }
LABEL_160:
      *(unsigned char *)(a1 + 120) = v82 != 0;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBNetworkSessionReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 2)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        *(unsigned char *)(a1 + 24) |= 2u;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_49;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_51;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_49:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v26) = 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + 16) = v26;
      }
      else if (v17 == 1)
      {
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        *(unsigned char *)(a1 + 24) |= 4u;
        while (1)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
          *(void *)(a2 + v33) = v34 + 1;
          v32 |= (unint64_t)(v35 & 0x7F) << v30;
          if ((v35 & 0x80) == 0) {
            goto LABEL_53;
          }
          v30 += 7;
          BOOL v14 = v31++ >= 9;
          if (v14)
          {
            uint64_t v32 = 0;
            goto LABEL_55;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
LABEL_55:
        *(unsigned char *)(a1 + 20) = v32 != 0;
      }
      else if (v17)
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
      else
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_45;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v20 = 0;
            goto LABEL_47;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_47:
        *(void *)(a1 + 8) = v20;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBBundleIDMappingReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(NTPBBundleIDMappingBundleID);
        [a1 addBundleIds:v17];
        if (!PBReaderPlaceMark() || !NTPBBundleIDMappingBundleIDReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBBundleIDMappingBundleIDReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        char v18 = (NTPBScoredTagID *)a1[1];
        a1[1] = v17;
        goto LABEL_28;
      case 2u:
        char v18 = objc_alloc_init(NTPBScoredTagID);
        [a1 addTopicTags:v18];
        goto LABEL_25;
      case 3u:
        char v18 = objc_alloc_init(NTPBScoredTagID);
        [a1 addChannelTags:v18];
        goto LABEL_25;
      case 4u:
        char v18 = objc_alloc_init(NTPBScoredTagID);
        [a1 addSectionTags:v18];
LABEL_25:
        if PBReaderPlaceMark() && (NTPBScoredTagIDReadFrom((uint64_t)v18, a2))
        {
          PBReaderRecallMark();
LABEL_28:

LABEL_29:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_29;
    }
  }
}

uint64_t NTPBVanityURLMappingReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(NTPBVanityURLPath);
        [a1 addPaths:v17];
        if (!PBReaderPlaceMark() || !NTPBVanityURLPathReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBVanityURLPathReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 16;
        goto LABEL_24;
      }
      if (v17 == 1)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 24;
LABEL_24:
        uint64_t v20 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v18 = PBReaderReadString();
    uint64_t v19 = 8;
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBURLMappingReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(NTPBURLMappingDomain);
        [a1 addDomains:v17];
        if (!PBReaderPlaceMark() || (NTPBURLMappingDomainReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBURLMappingDomainReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v22 = *v3;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v24 = *(void *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          uint64_t v24 = 0;
        }
        a1[1] = v24;
      }
      else if (v19 == 2)
      {
        unsigned int v25 = objc_alloc_init(NTPBURLMappingPath);
        [a1 addPaths:v25];
        if (!PBReaderPlaceMark() || !NTPBURLMappingPathReadFrom(v25, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else if (v19 == 1)
      {
        uint64_t v20 = PBReaderReadString();
        uint64_t v21 = (void *)a1[2];
        a1[2] = v20;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPublisherFavorabilityScoresReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        int v17 = objc_alloc_init(NTPBScoredTagID);
        [a1 addScores:v17];
        if (!PBReaderPlaceMark() || (NTPBScoredTagIDReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBURLMappingPathReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = (NTPBScoredTagID *)a1[2];
        a1[2] = v17;
        goto LABEL_28;
      case 2u:
        uint64_t v18 = objc_alloc_init(NTPBScoredTagID);
        [a1 addTopicTags:v18];
        goto LABEL_25;
      case 3u:
        uint64_t v18 = objc_alloc_init(NTPBScoredTagID);
        [a1 addChannelTags:v18];
        goto LABEL_25;
      case 4u:
        uint64_t v18 = objc_alloc_init(NTPBScoredTagID);
        [a1 addSectionTags:v18];
LABEL_25:
        if PBReaderPlaceMark() && (NTPBScoredTagIDReadFrom((uint64_t)v18, a2))
        {
          PBReaderRecallMark();
LABEL_28:

LABEL_29:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_29;
    }
  }
}

uint64_t NTPBScoredTagIDReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v21 = *v3;
        unint64_t v22 = *(void *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(void *)(a2 + *v4))
        {
          int v23 = *(_DWORD *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          int v23 = 0;
        }
        *(_DWORD *)(a1 + 8) = v23;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleScoresReadFrom(char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        int v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);
        [a1 addTopicCohorts:v17];
        goto LABEL_25;
      case 2u:
        int v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);
        uint64_t v18 = 8;
        goto LABEL_24;
      case 3u:
        int v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);
        uint64_t v18 = 16;
LABEL_24:
        objc_storeStrong((id *)&a1[v18], v17);
LABEL_25:
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortListReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_34;
        }
        goto LABEL_30;
      case 4u:
        int v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTopicCohortScore);
        [a1 addTopicCohortScores:v17];
        if (PBReaderPlaceMark()
          && COMAPPLEFELDSPARPROTOCOLLIVERPOOLTopicCohortScoreReadFrom((uint64_t)v17, a2))
        {
LABEL_30:
          PBReaderRecallMark();

LABEL_31:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_34:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_31;
    }
  }
}

uint64_t NTPBArticleRecordReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = objc_alloc_init(NTPBRecordBase);

        *(void *)(a1 + 192) = v18;
        if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v18, a2)) {
          goto LABEL_291;
        }
        return 0;
      case 2u:
        String = (void *)PBReaderReadString();

        id v20 = String;
        uint64_t v21 = 456;
        goto LABEL_308;
      case 3u:
        unint64_t v22 = (void *)PBReaderReadString();

        id v20 = v22;
        uint64_t v21 = 688;
        goto LABEL_308;
      case 4u:
        int v23 = (void *)PBReaderReadString();

        id v20 = v23;
        uint64_t v21 = 552;
        goto LABEL_308;
      case 5u:
        uint64_t v24 = (void *)PBReaderReadString();

        id v20 = v24;
        uint64_t v21 = 504;
        goto LABEL_308;
      case 6u:
        unsigned int v25 = objc_alloc_init(NTPBDate);

        *(void *)(a1 + 440) = v25;
        if (!PBReaderPlaceMark() || (NTPBDateReadFrom((uint64_t)v25, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_291;
      case 7u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x80u;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_314;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_314:
        uint64_t v261 = 64;
        goto LABEL_417;
      case 8u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 1u;
        while (2)
        {
          uint64_t v35 = *v3;
          uint64_t v36 = *(void *)(a2 + v35);
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v37;
            v28 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_318;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_318:
        uint64_t v261 = 8;
        goto LABEL_417;
      case 9u:
        char v39 = (void *)PBReaderReadString();

        id v20 = v39;
        uint64_t v21 = 584;
        goto LABEL_308;
      case 0xAu:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x800u;
        while (2)
        {
          uint64_t v42 = *v3;
          uint64_t v43 = *(void *)(a2 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v44;
            v28 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_322;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_322:
        uint64_t v261 = 96;
        goto LABEL_417;
      case 0xBu:
        uint64_t v46 = (void *)PBReaderReadString();

        id v20 = v46;
        uint64_t v21 = 432;
        goto LABEL_308;
      case 0xCu:
        unint64_t v47 = (void *)PBReaderReadString();

        id v20 = v47;
        uint64_t v21 = 256;
        goto LABEL_308;
      case 0xDu:
        char v48 = (void *)PBReaderReadString();

        id v20 = v48;
        uint64_t v21 = 488;
        goto LABEL_308;
      case 0xEu:
        char v49 = (void *)PBReaderReadString();

        id v20 = v49;
        uint64_t v21 = 160;
        goto LABEL_308;
      case 0xFu:
        unsigned int v50 = (void *)PBReaderReadString();

        id v20 = v50;
        uint64_t v21 = 240;
        goto LABEL_308;
      case 0x10u:
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(_DWORD *)(a1 + 760) |= 0x80000u;
        while (2)
        {
          uint64_t v54 = *v3;
          uint64_t v55 = *(void *)(a2 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
            *(void *)(a2 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v15 = v52++ >= 9;
              if (v15)
              {
                LODWORD(v53) = 0;
                goto LABEL_326;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v53) = 0;
        }
LABEL_326:
        uint64_t v262 = 232;
        goto LABEL_395;
      case 0x11u:
        unint64_t v58 = (void *)PBReaderReadString();

        id v20 = v58;
        uint64_t v21 = 224;
        goto LABEL_308;
      case 0x12u:
        char v59 = (void *)PBReaderReadString();

        id v20 = v59;
        uint64_t v21 = 280;
        goto LABEL_308;
      case 0x13u:
        uint64_t v60 = PBReaderReadString();
        if (v60) {
          [(id)a1 addFlintFontResourceIDs:v60];
        }
        goto LABEL_418;
      case 0x14u:
        unsigned int v61 = (void *)PBReaderReadString();

        id v20 = v61;
        uint64_t v21 = 744;
        goto LABEL_308;
      case 0x15u:
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_DWORD *)(a1 + 760) |= 0x400000u;
        while (2)
        {
          uint64_t v65 = *v3;
          uint64_t v66 = *(void *)(a2 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
            *(void *)(a2 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v15 = v63++ >= 9;
              if (v15)
              {
                uint64_t v64 = 0;
                goto LABEL_330;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v64 = 0;
        }
LABEL_330:
        BOOL v263 = v64 != 0;
        uint64_t v264 = 752;
        goto LABEL_404;
      case 0x16u:
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v71 = 0;
        *(_DWORD *)(a1 + 760) |= 0x1000000u;
        while (2)
        {
          uint64_t v72 = *v3;
          uint64_t v73 = *(void *)(a2 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(a2 + *v7) + v73);
            *(void *)(a2 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              BOOL v15 = v70++ >= 9;
              if (v15)
              {
                uint64_t v71 = 0;
                goto LABEL_334;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v71 = 0;
        }
LABEL_334:
        BOOL v263 = v71 != 0;
        uint64_t v264 = 754;
        goto LABEL_404;
      case 0x17u:
        char v76 = 0;
        unsigned int v77 = 0;
        uint64_t v78 = 0;
        *(_DWORD *)(a1 + 760) |= 0x8000000u;
        while (2)
        {
          uint64_t v79 = *v3;
          uint64_t v80 = *(void *)(a2 + v79);
          unint64_t v81 = v80 + 1;
          if (v80 == -1 || v81 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v82 = *(unsigned char *)(*(void *)(a2 + *v7) + v80);
            *(void *)(a2 + v79) = v81;
            v78 |= (unint64_t)(v82 & 0x7F) << v76;
            if (v82 < 0)
            {
              v76 += 7;
              BOOL v15 = v77++ >= 9;
              if (v15)
              {
                uint64_t v78 = 0;
                goto LABEL_338;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v78 = 0;
        }
LABEL_338:
        BOOL v263 = v78 != 0;
        uint64_t v264 = 757;
        goto LABEL_404;
      case 0x18u:
        uint64_t v83 = PBReaderReadString();
        if (v83) {
          [(id)a1 addIAdCategories:v83];
        }
        goto LABEL_418;
      case 0x19u:
        uint64_t v84 = PBReaderReadString();
        if (v84) {
          [(id)a1 addIAdKeywords:v84];
        }
        goto LABEL_418;
      case 0x1Au:
        uint64_t v85 = PBReaderReadString();
        if (v85) {
          [(id)a1 addIAdSectionIDs:v85];
        }
        goto LABEL_418;
      case 0x1Bu:
        uint64_t v86 = PBReaderReadString();
        if (v86) {
          [(id)a1 addBlockedStorefrontIDs:v86];
        }
        goto LABEL_418;
      case 0x1Cu:
        uint64_t v87 = PBReaderReadString();
        if (v87) {
          [(id)a1 addAllowedStorefrontIDs:v87];
        }
        goto LABEL_418;
      case 0x1Du:
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v90 = 0;
        *(_DWORD *)(a1 + 760) |= 0x800000u;
        while (2)
        {
          uint64_t v91 = *v3;
          uint64_t v92 = *(void *)(a2 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(a2 + *v7) + v92);
            *(void *)(a2 + v91) = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              BOOL v15 = v89++ >= 9;
              if (v15)
              {
                uint64_t v90 = 0;
                goto LABEL_342;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v90 = 0;
        }
LABEL_342:
        BOOL v263 = v90 != 0;
        uint64_t v264 = 753;
        goto LABEL_404;
      case 0x1Eu:
        uint64_t v95 = PBReaderReadString();
        if (v95) {
          [(id)a1 addRelatedArticleIDs:v95];
        }
        goto LABEL_418;
      case 0x1Fu:
        uint64_t v96 = PBReaderReadString();
        if (v96) {
          [(id)a1 addMoreFromPublisherArticleIDs:v96];
        }
        goto LABEL_418;
      case 0x20u:
        v97 = (void *)PBReaderReadString();

        id v20 = v97;
        uint64_t v21 = 624;
        goto LABEL_308;
      case 0x21u:
        char v98 = 0;
        unsigned int v99 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x2000u;
        while (2)
        {
          uint64_t v100 = *v3;
          uint64_t v101 = *(void *)(a2 + v100);
          unint64_t v102 = v101 + 1;
          if (v101 == -1 || v102 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v103 = *(unsigned char *)(*(void *)(a2 + *v7) + v101);
            *(void *)(a2 + v100) = v102;
            v28 |= (unint64_t)(v103 & 0x7F) << v98;
            if (v103 < 0)
            {
              v98 += 7;
              BOOL v15 = v99++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_346;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_346:
        uint64_t v261 = 112;
        goto LABEL_417;
      case 0x22u:
        char v104 = 0;
        unsigned int v105 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x200u;
        while (2)
        {
          uint64_t v106 = *v3;
          uint64_t v107 = *(void *)(a2 + v106);
          unint64_t v108 = v107 + 1;
          if (v107 == -1 || v108 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v109 = *(unsigned char *)(*(void *)(a2 + *v7) + v107);
            *(void *)(a2 + v106) = v108;
            v28 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              BOOL v15 = v105++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_350;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_350:
        uint64_t v261 = 80;
        goto LABEL_417;
      case 0x23u:
        v110 = (void *)PBReaderReadString();

        id v20 = v110;
        uint64_t v21 = 592;
        goto LABEL_308;
      case 0x24u:
        char v111 = 0;
        unsigned int v112 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x1000u;
        while (2)
        {
          uint64_t v113 = *v3;
          uint64_t v114 = *(void *)(a2 + v113);
          unint64_t v115 = v114 + 1;
          if (v114 == -1 || v115 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v116 = *(unsigned char *)(*(void *)(a2 + *v7) + v114);
            *(void *)(a2 + v113) = v115;
            v28 |= (unint64_t)(v116 & 0x7F) << v111;
            if (v116 < 0)
            {
              v111 += 7;
              BOOL v15 = v112++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_354;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_354:
        uint64_t v261 = 104;
        goto LABEL_417;
      case 0x25u:
        v117 = (void *)PBReaderReadString();

        id v20 = v117;
        uint64_t v21 = 576;
        goto LABEL_308;
      case 0x26u:
        char v118 = 0;
        unsigned int v119 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x400u;
        while (2)
        {
          uint64_t v120 = *v3;
          uint64_t v121 = *(void *)(a2 + v120);
          unint64_t v122 = v121 + 1;
          if (v121 == -1 || v122 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v123 = *(unsigned char *)(*(void *)(a2 + *v7) + v121);
            *(void *)(a2 + v120) = v122;
            v28 |= (unint64_t)(v123 & 0x7F) << v118;
            if (v123 < 0)
            {
              v118 += 7;
              BOOL v15 = v119++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_358;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_358:
        uint64_t v261 = 88;
        goto LABEL_417;
      case 0x27u:
        v124 = (void *)PBReaderReadString();

        id v20 = v124;
        uint64_t v21 = 632;
        goto LABEL_308;
      case 0x28u:
        char v125 = 0;
        unsigned int v126 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x4000u;
        while (2)
        {
          uint64_t v127 = *v3;
          uint64_t v128 = *(void *)(a2 + v127);
          unint64_t v129 = v128 + 1;
          if (v128 == -1 || v129 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v130 = *(unsigned char *)(*(void *)(a2 + *v7) + v128);
            *(void *)(a2 + v127) = v129;
            v28 |= (unint64_t)(v130 & 0x7F) << v125;
            if (v130 < 0)
            {
              v125 += 7;
              BOOL v15 = v126++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_362;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_362:
        uint64_t v261 = 120;
        goto LABEL_417;
      case 0x29u:
        char v131 = 0;
        unsigned int v132 = 0;
        uint64_t v53 = 0;
        *(_DWORD *)(a1 + 760) |= 0x200000u;
        while (2)
        {
          uint64_t v133 = *v3;
          uint64_t v134 = *(void *)(a2 + v133);
          unint64_t v135 = v134 + 1;
          if (v134 == -1 || v135 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v136 = *(unsigned char *)(*(void *)(a2 + *v7) + v134);
            *(void *)(a2 + v133) = v135;
            v53 |= (unint64_t)(v136 & 0x7F) << v131;
            if (v136 < 0)
            {
              v131 += 7;
              BOOL v15 = v132++ >= 9;
              if (v15)
              {
                LODWORD(v53) = 0;
                goto LABEL_366;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v53) = 0;
        }
LABEL_366:
        uint64_t v262 = 544;
        goto LABEL_395;
      case 0x2Au:
        char v137 = 0;
        unsigned int v138 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 2u;
        while (2)
        {
          uint64_t v139 = *v3;
          uint64_t v140 = *(void *)(a2 + v139);
          unint64_t v141 = v140 + 1;
          if (v140 == -1 || v141 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v142 = *(unsigned char *)(*(void *)(a2 + *v7) + v140);
            *(void *)(a2 + v139) = v141;
            v28 |= (unint64_t)(v142 & 0x7F) << v137;
            if (v142 < 0)
            {
              v137 += 7;
              BOOL v15 = v138++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_370;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_370:
        uint64_t v261 = 16;
        goto LABEL_417;
      case 0x2Bu:
        char v143 = 0;
        unsigned int v144 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x40u;
        while (2)
        {
          uint64_t v145 = *v3;
          uint64_t v146 = *(void *)(a2 + v145);
          unint64_t v147 = v146 + 1;
          if (v146 == -1 || v147 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v148 = *(unsigned char *)(*(void *)(a2 + *v7) + v146);
            *(void *)(a2 + v145) = v147;
            v28 |= (unint64_t)(v148 & 0x7F) << v143;
            if (v148 < 0)
            {
              v143 += 7;
              BOOL v15 = v144++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_374;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_374:
        uint64_t v261 = 56;
        goto LABEL_417;
      case 0x2Cu:
        v149 = (void *)PBReaderReadString();

        id v20 = v149;
        uint64_t v21 = 248;
        goto LABEL_308;
      case 0x2Du:
        char v150 = 0;
        unsigned int v151 = 0;
        uint64_t v152 = 0;
        *(_DWORD *)(a1 + 760) |= 0x4000000u;
        while (2)
        {
          uint64_t v153 = *v3;
          uint64_t v154 = *(void *)(a2 + v153);
          unint64_t v155 = v154 + 1;
          if (v154 == -1 || v155 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v156 = *(unsigned char *)(*(void *)(a2 + *v7) + v154);
            *(void *)(a2 + v153) = v155;
            v152 |= (unint64_t)(v156 & 0x7F) << v150;
            if (v156 < 0)
            {
              v150 += 7;
              BOOL v15 = v151++ >= 9;
              if (v15)
              {
                uint64_t v152 = 0;
                goto LABEL_378;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v152 = 0;
        }
LABEL_378:
        BOOL v263 = v152 != 0;
        uint64_t v264 = 756;
        goto LABEL_404;
      case 0x2Eu:
        v157 = (void *)PBReaderReadString();

        id v20 = v157;
        uint64_t v21 = 664;
        goto LABEL_308;
      case 0x2Fu:
        v158 = (void *)PBReaderReadString();

        id v20 = v158;
        uint64_t v21 = 656;
        goto LABEL_308;
      case 0x30u:
        char v159 = 0;
        unsigned int v160 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x10000u;
        while (2)
        {
          uint64_t v161 = *v3;
          uint64_t v162 = *(void *)(a2 + v161);
          unint64_t v163 = v162 + 1;
          if (v162 == -1 || v163 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v164 = *(unsigned char *)(*(void *)(a2 + *v7) + v162);
            *(void *)(a2 + v161) = v163;
            v28 |= (unint64_t)(v164 & 0x7F) << v159;
            if (v164 < 0)
            {
              v159 += 7;
              BOOL v15 = v160++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_382;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_382:
        uint64_t v261 = 136;
        goto LABEL_417;
      case 0x31u:
        v165 = (void *)PBReaderReadString();

        id v20 = v165;
        uint64_t v21 = 680;
        goto LABEL_308;
      case 0x32u:
        v166 = (void *)PBReaderReadString();

        id v20 = v166;
        uint64_t v21 = 672;
        goto LABEL_308;
      case 0x33u:
        char v167 = 0;
        unsigned int v168 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x20000u;
        while (2)
        {
          uint64_t v169 = *v3;
          uint64_t v170 = *(void *)(a2 + v169);
          unint64_t v171 = v170 + 1;
          if (v170 == -1 || v171 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v172 = *(unsigned char *)(*(void *)(a2 + *v7) + v170);
            *(void *)(a2 + v169) = v171;
            v28 |= (unint64_t)(v172 & 0x7F) << v167;
            if (v172 < 0)
            {
              v167 += 7;
              BOOL v15 = v168++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_386;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_386:
        uint64_t v261 = 144;
        goto LABEL_417;
      case 0x34u:
        v173 = (void *)PBReaderReadString();

        id v20 = v173;
        uint64_t v21 = 648;
        goto LABEL_308;
      case 0x35u:
        v174 = (void *)PBReaderReadString();

        id v20 = v174;
        uint64_t v21 = 640;
        goto LABEL_308;
      case 0x36u:
        char v175 = 0;
        unsigned int v176 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x8000u;
        while (2)
        {
          uint64_t v177 = *v3;
          uint64_t v178 = *(void *)(a2 + v177);
          unint64_t v179 = v178 + 1;
          if (v178 == -1 || v179 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v180 = *(unsigned char *)(*(void *)(a2 + *v7) + v178);
            *(void *)(a2 + v177) = v179;
            v28 |= (unint64_t)(v180 & 0x7F) << v175;
            if (v180 < 0)
            {
              v175 += 7;
              BOOL v15 = v176++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_390;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_390:
        uint64_t v261 = 128;
        goto LABEL_417;
      case 0x37u:
        v181 = objc_alloc_init(NTPBArticleTopic);
        [(id)a1 addTopics:v181];

        if (!PBReaderPlaceMark() || (NTPBArticleTopicReadFrom((uint64_t)v181, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_291;
      case 0x38u:
        v182 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);

        uint64_t v183 = 496;
        goto LABEL_210;
      case 0x39u:
        v182 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);

        uint64_t v183 = 312;
LABEL_210:
        *(void *)(a1 + v183) = v182;
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortListReadFrom(v182, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_291;
      case 0x3Au:
        v184 = (void *)PBReaderReadString();

        id v20 = v184;
        uint64_t v21 = 696;
        goto LABEL_308;
      case 0x3Bu:
        v185 = (void *)PBReaderReadString();

        id v20 = v185;
        uint64_t v21 = 712;
        goto LABEL_308;
      case 0x3Cu:
        v186 = (void *)PBReaderReadString();

        id v20 = v186;
        uint64_t v21 = 720;
        goto LABEL_308;
      case 0x3Eu:
        uint64_t v188 = PBReaderReadString();
        if (v188) {
          [(id)a1 addPublisherSpecifiedArticleIDs:v188];
        }
        goto LABEL_418;
      case 0x3Fu:
        v189 = (void *)PBReaderReadString();

        id v20 = v189;
        uint64_t v21 = 520;
        goto LABEL_308;
      case 0x40u:
        v190 = (void *)PBReaderReadString();

        id v20 = v190;
        uint64_t v21 = 528;
        goto LABEL_308;
      case 0x41u:
        v191 = (void *)PBReaderReadString();

        id v20 = v191;
        uint64_t v21 = 536;
        goto LABEL_308;
      case 0x42u:
        uint64_t v192 = PBReaderReadString();
        if (v192) {
          [(id)a1 addExperimentalTitles:v192];
        }
        goto LABEL_418;
      case 0x43u:
        v193 = (void *)PBReaderReadString();

        id v20 = v193;
        uint64_t v21 = 424;
        goto LABEL_308;
      case 0x44u:
        v194 = (void *)PBReaderReadString();

        id v20 = v194;
        uint64_t v21 = 352;
        goto LABEL_308;
      case 0x45u:
        char v195 = 0;
        unsigned int v196 = 0;
        uint64_t v53 = 0;
        *(_DWORD *)(a1 + 760) |= 0x100000u;
        while (2)
        {
          uint64_t v197 = *v3;
          uint64_t v198 = *(void *)(a2 + v197);
          unint64_t v199 = v198 + 1;
          if (v198 == -1 || v199 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v200 = *(unsigned char *)(*(void *)(a2 + *v7) + v198);
            *(void *)(a2 + v197) = v199;
            v53 |= (unint64_t)(v200 & 0x7F) << v195;
            if (v200 < 0)
            {
              v195 += 7;
              BOOL v15 = v196++ >= 9;
              if (v15)
              {
                LODWORD(v53) = 0;
                goto LABEL_394;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v53) = 0;
        }
LABEL_394:
        uint64_t v262 = 472;
LABEL_395:
        *(_DWORD *)(a1 + v262) = v53;
        goto LABEL_418;
      case 0x46u:
        char v201 = 0;
        unsigned int v202 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 8u;
        while (2)
        {
          uint64_t v203 = *v3;
          uint64_t v204 = *(void *)(a2 + v203);
          unint64_t v205 = v204 + 1;
          if (v204 == -1 || v205 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v206 = *(unsigned char *)(*(void *)(a2 + *v7) + v204);
            *(void *)(a2 + v203) = v205;
            v28 |= (unint64_t)(v206 & 0x7F) << v201;
            if (v206 < 0)
            {
              v201 += 7;
              BOOL v15 = v202++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_399;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_399:
        uint64_t v261 = 32;
        goto LABEL_417;
      case 0x47u:
        uint64_t v207 = PBReaderReadString();
        if (v207) {
          [(id)a1 addLinkedArticleIDs:v207];
        }
        goto LABEL_418;
      case 0x48u:
        uint64_t v208 = PBReaderReadString();
        if (v208) {
          [(id)a1 addLinkedIssueIDs:v208];
        }
        goto LABEL_418;
      case 0x49u:
        char v209 = 0;
        unsigned int v210 = 0;
        uint64_t v211 = 0;
        *(_DWORD *)(a1 + 760) |= 0x2000000u;
        while (2)
        {
          uint64_t v212 = *v3;
          uint64_t v213 = *(void *)(a2 + v212);
          unint64_t v214 = v213 + 1;
          if (v213 == -1 || v214 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v215 = *(unsigned char *)(*(void *)(a2 + *v7) + v213);
            *(void *)(a2 + v212) = v214;
            v211 |= (unint64_t)(v215 & 0x7F) << v209;
            if (v215 < 0)
            {
              v209 += 7;
              BOOL v15 = v210++ >= 9;
              if (v15)
              {
                uint64_t v211 = 0;
                goto LABEL_403;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v211 = 0;
        }
LABEL_403:
        BOOL v263 = v211 != 0;
        uint64_t v264 = 755;
LABEL_404:
        *(unsigned char *)(a1 + v264) = v263;
        goto LABEL_418;
      case 0x4Au:
        char v216 = 0;
        unsigned int v217 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 4u;
        while (2)
        {
          uint64_t v218 = *v3;
          uint64_t v219 = *(void *)(a2 + v218);
          unint64_t v220 = v219 + 1;
          if (v219 == -1 || v220 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v221 = *(unsigned char *)(*(void *)(a2 + *v7) + v219);
            *(void *)(a2 + v218) = v220;
            v28 |= (unint64_t)(v221 & 0x7F) << v216;
            if (v221 < 0)
            {
              v216 += 7;
              BOOL v15 = v217++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_408;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_408:
        uint64_t v261 = 24;
        goto LABEL_417;
      case 0x4Fu:
        v222 = (void *)PBReaderReadString();

        id v20 = v222;
        uint64_t v21 = 400;
        goto LABEL_308;
      case 0x50u:
        v223 = (void *)PBReaderReadString();

        id v20 = v223;
        uint64_t v21 = 392;
        goto LABEL_308;
      case 0x51u:
        v224 = (void *)PBReaderReadString();

        id v20 = v224;
        uint64_t v21 = 408;
        goto LABEL_308;
      case 0x52u:
        v225 = (void *)PBReaderReadString();

        id v20 = v225;
        uint64_t v21 = 416;
        goto LABEL_308;
      case 0x53u:
        v226 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);

        uint64_t v227 = 208;
        goto LABEL_265;
      case 0x54u:
        v226 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);

        uint64_t v227 = 320;
LABEL_265:
        *(void *)(a1 + v227) = v226;
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStatsReadFrom((uint64_t)v226, a2))
        {
          return 0;
        }
        goto LABEL_291;
      case 0x55u:
        v228 = (void *)PBReaderReadString();

        id v20 = v228;
        uint64_t v21 = 360;
        goto LABEL_308;
      case 0x56u:
        *(_DWORD *)(a1 + 760) |= 0x20u;
        uint64_t v229 = *v3;
        unint64_t v230 = *(void *)(a2 + v229);
        if (v230 <= 0xFFFFFFFFFFFFFFF7 && v230 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v231 = *(void *)(*(void *)(a2 + *v7) + v230);
          *(void *)(a2 + v229) = v230 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v231 = 0;
        }
        uint64_t v265 = 48;
        goto LABEL_424;
      case 0x57u:
        v232 = (void *)PBReaderReadString();

        id v20 = v232;
        uint64_t v21 = 608;
        goto LABEL_308;
      case 0x58u:
        v233 = (void *)PBReaderReadString();

        id v20 = v233;
        uint64_t v21 = 568;
        goto LABEL_308;
      case 0x59u:
        v234 = (void *)PBReaderReadString();

        id v20 = v234;
        uint64_t v21 = 616;
        goto LABEL_308;
      case 0x5Au:
        v235 = (void *)PBReaderReadString();

        id v20 = v235;
        uint64_t v21 = 560;
        goto LABEL_308;
      case 0x5Bu:
        uint64_t v236 = PBReaderReadString();
        if (v236) {
          [(id)a1 addAuthors:v236];
        }
        goto LABEL_418;
      case 0x5Cu:
        v237 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata);

        *(void *)(a1 + 216) = v237;
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadataReadFrom((uint64_t)v237, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_291;
      case 0x5Du:
        char v238 = 0;
        unsigned int v239 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x10u;
        while (2)
        {
          uint64_t v240 = *v3;
          uint64_t v241 = *(void *)(a2 + v240);
          unint64_t v242 = v241 + 1;
          if (v241 == -1 || v242 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v243 = *(unsigned char *)(*(void *)(a2 + *v7) + v241);
            *(void *)(a2 + v240) = v242;
            v28 |= (unint64_t)(v243 & 0x7F) << v238;
            if (v243 < 0)
            {
              v238 += 7;
              BOOL v15 = v239++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_412;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_412:
        uint64_t v261 = 40;
        goto LABEL_417;
      case 0x5Eu:
        v244 = (void *)PBReaderReadString();

        id v20 = v244;
        uint64_t v21 = 728;
        goto LABEL_308;
      case 0x5Fu:
        v245 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleContentExpiration);

        *(void *)(a1 + 272) = v245;
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleContentExpirationReadFrom((uint64_t)v245, a2) & 1) != 0)
        {
LABEL_291:
          PBReaderRecallMark();
LABEL_418:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      case 0x60u:
        *(_DWORD *)(a1 + 760) |= 0x40000u;
        uint64_t v246 = *v3;
        unint64_t v247 = *(void *)(a2 + v246);
        if (v247 <= 0xFFFFFFFFFFFFFFF7 && v247 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v231 = *(void *)(*(void *)(a2 + *v7) + v247);
          *(void *)(a2 + v246) = v247 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v231 = 0;
        }
        uint64_t v265 = 152;
LABEL_424:
        *(void *)(a1 + v265) = v231;
        goto LABEL_418;
      case 0x61u:
        v248 = (void *)PBReaderReadString();

        id v20 = v248;
        uint64_t v21 = 480;
        goto LABEL_308;
      case 0x62u:
        Data = (void *)PBReaderReadData();

        id v20 = Data;
        uint64_t v21 = 304;
        goto LABEL_308;
      case 0x63u:
        v250 = (void *)PBReaderReadData();

        id v20 = v250;
        uint64_t v21 = 296;
        goto LABEL_308;
      case 0x64u:
        char v251 = 0;
        unsigned int v252 = 0;
        uint64_t v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x100u;
        while (2)
        {
          uint64_t v253 = *v3;
          uint64_t v254 = *(void *)(a2 + v253);
          unint64_t v255 = v254 + 1;
          if (v254 == -1 || v255 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v256 = *(unsigned char *)(*(void *)(a2 + *v7) + v254);
            *(void *)(a2 + v253) = v255;
            v28 |= (unint64_t)(v256 & 0x7F) << v251;
            if (v256 < 0)
            {
              v251 += 7;
              BOOL v15 = v252++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_416;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_416:
        uint64_t v261 = 72;
LABEL_417:
        *(void *)(a1 + v261) = v28;
        goto LABEL_418;
      case 0x65u:
        v257 = (void *)PBReaderReadString();

        id v20 = v257;
        uint64_t v21 = 176;
        goto LABEL_308;
      case 0x66u:
        v258 = (void *)PBReaderReadData();

        id v20 = v258;
        uint64_t v21 = 600;
        goto LABEL_308;
      case 0x67u:
        v259 = (void *)PBReaderReadString();

        id v20 = v259;
        uint64_t v21 = 736;
LABEL_308:
        *(void *)(a1 + v21) = v20;
        goto LABEL_418;
      case 0x68u:
        uint64_t v260 = PBReaderReadString();
        if (v260) {
          [(id)a1 addSportsEventIDs:v260];
        }
        goto LABEL_418;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_418;
    }
  }
}

uint64_t NTPBArticleTopicReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = &OBJC_IVAR___NTPBChannelMuteUnmute__groupViewExposureId;
  char v8 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v3;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v4)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        int v17 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v17 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v17 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString();

        id v20 = String;
        v7 = &OBJC_IVAR___NTPBChannelMuteUnmute__groupViewExposureId;
        *(void *)(a1 + 64) = v20;
        goto LABEL_147;
      case 2u:
        unint64_t v22 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);

        *(void *)(a1 + 40) = v22;
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortListReadFrom(v22, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_88;
      case 3u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        *(_WORD *)(a1 + v7[198]) |= 0x200u;
        while (2)
        {
          uint64_t v26 = *v3;
          uint64_t v27 = *(void *)(a2 + v26);
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v8) + v27);
            *(void *)(a2 + v26) = v28;
            v25 |= (unint64_t)(v29 & 0x7F) << v23;
            if (v29 < 0)
            {
              v23 += 7;
              BOOL v16 = v24++ >= 9;
              if (v16)
              {
                uint64_t v25 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
LABEL_106:
        BOOL v95 = v25 != 0;
        uint64_t v96 = 77;
        goto LABEL_139;
      case 4u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        *(_WORD *)(a1 + v7[198]) |= 0x40u;
        while (2)
        {
          uint64_t v33 = *v3;
          uint64_t v34 = *(void *)(a2 + v33);
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + *v8) + v34);
            *(void *)(a2 + v33) = v35;
            v32 |= (unint64_t)(v36 & 0x7F) << v30;
            if (v36 < 0)
            {
              v30 += 7;
              BOOL v16 = v31++ >= 9;
              if (v16)
              {
                uint64_t v32 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
LABEL_110:
        BOOL v95 = v32 != 0;
        uint64_t v96 = 74;
        goto LABEL_139;
      case 5u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + v7[198]) |= 0x100u;
        while (2)
        {
          uint64_t v40 = *v3;
          uint64_t v41 = *(void *)(a2 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v8) + v41);
            *(void *)(a2 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              BOOL v16 = v38++ >= 9;
              if (v16)
              {
                uint64_t v39 = 0;
                goto LABEL_114;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
LABEL_114:
        BOOL v95 = v39 != 0;
        uint64_t v96 = 76;
        goto LABEL_139;
      case 6u:
        unint64_t v44 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);

        *(void *)(a1 + 56) = v44;
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStatsReadFrom((uint64_t)v44, a2))
        {
          return 0;
        }
        goto LABEL_88;
      case 7u:
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + v7[198]) |= 0x80u;
        while (2)
        {
          uint64_t v48 = *v3;
          uint64_t v49 = *(void *)(a2 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v8) + v49);
            *(void *)(a2 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v16 = v46++ >= 9;
              if (v16)
              {
                uint64_t v47 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
LABEL_118:
        BOOL v95 = v47 != 0;
        uint64_t v96 = 75;
        goto LABEL_139;
      case 8u:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(_WORD *)(a1 + v7[198]) |= 0x400u;
        while (2)
        {
          uint64_t v55 = *v3;
          uint64_t v56 = *(void *)(a2 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + *v8) + v56);
            *(void *)(a2 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v16 = v53++ >= 9;
              if (v16)
              {
                uint64_t v54 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v54 = 0;
        }
LABEL_122:
        BOOL v95 = v54 != 0;
        uint64_t v96 = 78;
        goto LABEL_139;
      case 9u:
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        *(_WORD *)(a1 + v7[198]) |= 0x800u;
        while (2)
        {
          uint64_t v62 = *v3;
          uint64_t v63 = *(void *)(a2 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(a2 + *v8) + v63);
            *(void *)(a2 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              BOOL v16 = v60++ >= 9;
              if (v16)
              {
                uint64_t v61 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v61 = 0;
        }
LABEL_126:
        BOOL v95 = v61 != 0;
        uint64_t v96 = 79;
        goto LABEL_139;
      case 0xAu:
        *(_WORD *)(a1 + v7[198]) |= 1u;
        uint64_t v66 = *v3;
        unint64_t v67 = *(void *)(a2 + v66);
        if (v67 <= 0xFFFFFFFFFFFFFFF7 && v67 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v68 = *(void *)(*(void *)(a2 + *v8) + v67);
          *(void *)(a2 + v66) = v67 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v68 = 0;
        }
        uint64_t v97 = 8;
        goto LABEL_146;
      case 0xBu:
        *(_WORD *)(a1 + v7[198]) |= 8u;
        uint64_t v69 = *v3;
        unint64_t v70 = *(void *)(a2 + v69);
        if (v70 <= 0xFFFFFFFFFFFFFFF7 && v70 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v68 = *(void *)(*(void *)(a2 + *v8) + v70);
          *(void *)(a2 + v69) = v70 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v68 = 0;
        }
        uint64_t v97 = 32;
        goto LABEL_146;
      case 0xCu:
        *(_WORD *)(a1 + v7[198]) |= 4u;
        uint64_t v71 = *v3;
        unint64_t v72 = *(void *)(a2 + v71);
        if (v72 <= 0xFFFFFFFFFFFFFFF7 && v72 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v68 = *(void *)(*(void *)(a2 + *v8) + v72);
          *(void *)(a2 + v71) = v72 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v68 = 0;
        }
        uint64_t v97 = 24;
LABEL_146:
        *(void *)(a1 + v97) = v68;
        goto LABEL_147;
      case 0xDu:
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v75 = 0;
        *(_WORD *)(a1 + v7[198]) |= 2u;
        while (2)
        {
          uint64_t v76 = *v3;
          uint64_t v77 = *(void *)(a2 + v76);
          unint64_t v78 = v77 + 1;
          if (v77 == -1 || v78 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(a2 + *v8) + v77);
            *(void *)(a2 + v76) = v78;
            v75 |= (unint64_t)(v79 & 0x7F) << v73;
            if (v79 < 0)
            {
              v73 += 7;
              BOOL v16 = v74++ >= 9;
              if (v16)
              {
                uint64_t v75 = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v75 = 0;
        }
LABEL_130:
        *(void *)(a1 + 16) = v75;
        goto LABEL_147;
      case 0xEu:
        uint64_t v80 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo);

        *(void *)(a1 + 48) = v80;
        if (PBReaderPlaceMark()
          && COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfoReadFrom((uint64_t)v80, a2))
        {
LABEL_88:
          PBReaderRecallMark();
          v7 = &OBJC_IVAR___NTPBChannelMuteUnmute__groupViewExposureId;
LABEL_147:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      case 0xFu:
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v83 = 0;
        *(_WORD *)(a1 + v7[198]) |= 0x20u;
        while (2)
        {
          uint64_t v84 = *v3;
          uint64_t v85 = *(void *)(a2 + v84);
          unint64_t v86 = v85 + 1;
          if (v85 == -1 || v86 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v87 = *(unsigned char *)(*(void *)(a2 + *v8) + v85);
            *(void *)(a2 + v84) = v86;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              BOOL v16 = v82++ >= 9;
              if (v16)
              {
                uint64_t v83 = 0;
                goto LABEL_134;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v83 = 0;
        }
LABEL_134:
        BOOL v95 = v83 != 0;
        uint64_t v96 = 73;
        goto LABEL_139;
      case 0x10u:
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v90 = 0;
        *(_WORD *)(a1 + v7[198]) |= 0x10u;
        while (2)
        {
          uint64_t v91 = *v3;
          uint64_t v92 = *(void *)(a2 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(a2 + *v8) + v92);
            *(void *)(a2 + v91) = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              BOOL v16 = v89++ >= 9;
              if (v16)
              {
                uint64_t v90 = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v90 = 0;
        }
LABEL_138:
        BOOL v95 = v90 != 0;
        uint64_t v96 = 72;
LABEL_139:
        *(unsigned char *)(a1 + v96) = v95;
        goto LABEL_147;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_147;
    }
  }
}

uint64_t COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortListReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        int v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohort);
        [a1 addCohorts:v17];
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 44) |= 0x10u;
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_45;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_47;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v20) = 0;
          }
LABEL_47:
          *(_DWORD *)(a1 + 40) = v20;
          continue;
        case 2u:
          *(unsigned char *)(a1 + 44) |= 1u;
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v28 = *(void *)(*(void *)(a2 + *v7) + v27);
            *(void *)(a2 + v26) = v27 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v28 = 0;
          }
          uint64_t v40 = 8;
          goto LABEL_58;
        case 3u:
          *(unsigned char *)(a1 + 44) |= 2u;
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v28 = *(void *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v28 = 0;
          }
          uint64_t v40 = 16;
          goto LABEL_58;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          *(unsigned char *)(a1 + 44) |= 8u;
          break;
        case 5u:
          *(unsigned char *)(a1 + 44) |= 4u;
          uint64_t v38 = *v3;
          unint64_t v39 = *(void *)(a2 + v38);
          if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v28 = *(void *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v39 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v28 = 0;
          }
          uint64_t v40 = 24;
LABEL_58:
          *(void *)(a1 + v40) = v28;
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v34 = *v3;
        uint64_t v35 = *(void *)(a2 + v34);
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)(a2 + *v4)) {
          break;
        }
        char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
        *(void *)(a2 + v34) = v36;
        v33 |= (unint64_t)(v37 & 0x7F) << v31;
        if ((v37 & 0x80) == 0) {
          goto LABEL_49;
        }
        v31 += 7;
        BOOL v15 = v32++ >= 9;
        if (v15)
        {
          uint64_t v33 = 0;
          goto LABEL_51;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_49:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v33 = 0;
      }
LABEL_51:
      *(void *)(a1 + 32) = v33;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfoReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 16) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4))
          {
            char v24 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo__contentRating;
            goto LABEL_38;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            break;
          }
          v17 += 7;
          BOOL v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            char v24 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo__contentRating;
            goto LABEL_41;
          }
        }
        char v24 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo__contentRating;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_42:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v25 = 0;
    unsigned int v26 = 0;
    uint64_t v19 = 0;
    *(unsigned char *)(a1 + 16) |= 2u;
    while (1)
    {
      uint64_t v27 = *v3;
      unint64_t v28 = *(void *)(a2 + v27);
      if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
      *(void *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        char v24 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo__relevanceRating;
        goto LABEL_39;
      }
      v25 += 7;
      BOOL v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        char v24 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo__relevanceRating;
        goto LABEL_41;
      }
    }
    char v24 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo__relevanceRating;
LABEL_38:
    *(unsigned char *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleContentExpirationReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 3)
      {
        BOOL v23 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagExpiration);
        [(id)a1 addTagsExpirationList:v23];
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagExpirationReadFrom((uint64_t)v23, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_35:
        *(void *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadataReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        *(unsigned char *)(a1 + 32) |= 1u;
        uint64_t v18 = *v3;
        unint64_t v19 = *(void *)(a2 + v18);
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(void *)(a2 + *v4))
        {
          int v20 = *(_DWORD *)(*(void *)(a2 + *v7) + v19);
          *(void *)(a2 + v18) = v19 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v20 = 0;
        }
        uint64_t v34 = 16;
        goto LABEL_50;
      case 2u:
        *(unsigned char *)(a1 + 32) |= 8u;
        uint64_t v22 = *v3;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)(a2 + *v4))
        {
          int v20 = *(_DWORD *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v20 = 0;
        }
        uint64_t v34 = 28;
        goto LABEL_50;
      case 3u:
        *(unsigned char *)(a1 + 32) |= 4u;
        uint64_t v24 = *v3;
        unint64_t v25 = *(void *)(a2 + v24);
        if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(void *)(a2 + *v4))
        {
          int v20 = *(_DWORD *)(*(void *)(a2 + *v7) + v25);
          *(void *)(a2 + v24) = v25 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v20 = 0;
        }
        uint64_t v34 = 24;
LABEL_50:
        *(_DWORD *)(a1 + v34) = v20;
        goto LABEL_51;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 32) |= 2u;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                LODWORD(v28) = 0;
                goto LABEL_43;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v28) = 0;
        }
LABEL_43:
        *(_DWORD *)(a1 + 20) = v28;
        goto LABEL_51;
      case 5u:
        uint64_t v33 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo);
        objc_storeStrong((id *)(a1 + 8), v33);
        if (PBReaderPlaceMark()
          && COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfoReadFrom((uint64_t)v33, a2))
        {
          PBReaderRecallMark();

LABEL_51:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_51;
    }
  }
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStatsReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        uint64_t v18 = *v3;
        unint64_t v19 = *(void *)(a2 + v18);
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v19);
          *(void *)(a2 + v18) = v19 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v20 = 0;
        }
        unint64_t v23 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats__conversions;
LABEL_32:
        *(void *)(a1 + *v23) = v20;
        goto LABEL_33;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_33:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    *(unsigned char *)(a1 + 24) |= 2u;
    uint64_t v21 = *v3;
    unint64_t v22 = *(void *)(a2 + v21);
    if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)(a2 + *v4))
    {
      uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v22);
      *(void *)(a2 + v21) = v22 + 8;
    }
    else
    {
      *(unsigned char *)(a2 + *v5) = 1;
      uint64_t v20 = 0;
    }
    unint64_t v23 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats__impressions;
    goto LABEL_32;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBResourceRecordReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = objc_alloc_init(NTPBRecordBase);

              a1[1] = v17;
              if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2))
              {
                PBReaderRecallMark();
                goto LABEL_28;
              }
              return 0;
            case 2u:
              String = (void *)PBReaderReadString();

              id v20 = String;
              uint64_t v21 = 3;
              goto LABEL_27;
            case 3u:
              unint64_t v22 = (void *)PBReaderReadString();

              id v20 = v22;
              uint64_t v21 = 2;
              goto LABEL_27;
            case 4u:
              unint64_t v23 = (void *)PBReaderReadString();

              id v20 = v23;
              uint64_t v21 = 4;
LABEL_27:
              a1[v21] = v20;
              goto LABEL_28;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_28:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBJSONRecordReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        Data = (void *)PBReaderReadData();

        *(void *)(a1 + 16) = Data;
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(NTPBRecordBase);

        *(void *)(a1 + 8) = v17;
        if (!PBReaderPlaceMark() || (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) == 0) {
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBIssueRecordReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = objc_alloc_init(NTPBRecordBase);

        *(void *)(a1 + 56) = v18;
        if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v18, a2)) {
          goto LABEL_101;
        }
        return 0;
      case 2u:
        uint64_t String = PBReaderReadString();
        if (String) {
          [(id)a1 addAllArticleIDs:String];
        }
        goto LABEL_129;
      case 3u:
        uint64_t v20 = PBReaderReadString();
        if (v20) {
          [(id)a1 addAllowedStorefrontIDs:v20];
        }
        goto LABEL_129;
      case 4u:
        uint64_t v21 = PBReaderReadString();
        if (v21) {
          [(id)a1 addBlockedStorefrontIDs:v21];
        }
        goto LABEL_129;
      case 5u:
        unint64_t v22 = (void *)PBReaderReadString();

        id v23 = v22;
        uint64_t v24 = 80;
        goto LABEL_97;
      case 6u:
        unint64_t v25 = (void *)PBReaderReadString();

        id v23 = v25;
        uint64_t v24 = 104;
        goto LABEL_97;
      case 7u:
        *(unsigned char *)(a1 + 248) |= 1u;
        uint64_t v26 = *v3;
        unint64_t v27 = *(void *)(a2 + v26);
        if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v28 = *(void *)(*(void *)(a2 + *v7) + v27);
          *(void *)(a2 + v26) = v27 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v28 = 0;
        }
        uint64_t v88 = 8;
        goto LABEL_128;
      case 8u:
        uint64_t v29 = (void *)PBReaderReadString();

        id v23 = v29;
        uint64_t v24 = 120;
        goto LABEL_97;
      case 0xBu:
        unint64_t v31 = (void *)PBReaderReadString();

        id v23 = v31;
        uint64_t v24 = 128;
        goto LABEL_97;
      case 0xCu:
        char v32 = (void *)PBReaderReadString();

        id v23 = v32;
        uint64_t v24 = 144;
        goto LABEL_97;
      case 0xDu:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 248) |= 2u;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_105:
        uint64_t v85 = 16;
        goto LABEL_123;
      case 0xEu:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 248) |= 0x20u;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v42 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v42 = 0;
        }
LABEL_109:
        BOOL v86 = v42 != 0;
        uint64_t v87 = 244;
        goto LABEL_114;
      case 0xFu:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(unsigned char *)(a1 + 248) |= 0x40u;
        while (2)
        {
          uint64_t v50 = *v3;
          uint64_t v51 = *(void *)(a2 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v15 = v48++ >= 9;
              if (v15)
              {
                uint64_t v49 = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v49 = 0;
        }
LABEL_113:
        BOOL v86 = v49 != 0;
        uint64_t v87 = 245;
LABEL_114:
        *(unsigned char *)(a1 + v87) = v86;
        goto LABEL_129;
      case 0x10u:
        uint64_t v54 = (void *)PBReaderReadString();

        id v23 = v54;
        uint64_t v24 = 152;
        goto LABEL_97;
      case 0x11u:
        uint64_t v55 = (void *)PBReaderReadString();

        id v23 = v55;
        uint64_t v24 = 160;
        goto LABEL_97;
      case 0x12u:
        *(unsigned char *)(a1 + 248) |= 4u;
        uint64_t v56 = *v3;
        unint64_t v57 = *(void *)(a2 + v56);
        if (v57 <= 0xFFFFFFFFFFFFFFF7 && v57 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v28 = *(void *)(*(void *)(a2 + *v7) + v57);
          *(void *)(a2 + v56) = v57 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v28 = 0;
        }
        uint64_t v88 = 24;
LABEL_128:
        *(void *)(a1 + v88) = v28;
        goto LABEL_129;
      case 0x13u:
        char v58 = (void *)PBReaderReadString();

        id v23 = v58;
        uint64_t v24 = 168;
        goto LABEL_97;
      case 0x14u:
        char v59 = (void *)PBReaderReadString();

        id v23 = v59;
        uint64_t v24 = 176;
        goto LABEL_97;
      case 0x15u:
        unsigned int v60 = (void *)PBReaderReadString();

        id v23 = v60;
        uint64_t v24 = 184;
        goto LABEL_97;
      case 0x17u:
        uint64_t v61 = objc_alloc_init(NTPBDate);

        uint64_t v62 = 200;
        goto LABEL_99;
      case 0x18u:
        uint64_t v63 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleScores);

        *(void *)(a1 + 208) = v63;
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleScoresReadFrom((char *)v63, a2))
        {
          return 0;
        }
        goto LABEL_101;
      case 0x19u:
        unint64_t v64 = (void *)PBReaderReadString();

        id v23 = v64;
        uint64_t v24 = 224;
        goto LABEL_97;
      case 0x1Au:
        uint64_t v65 = PBReaderReadString();
        if (v65) {
          [(id)a1 addTopicTagIDs:v65];
        }
        goto LABEL_129;
      case 0x1Bu:
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v68 = 0;
        *(unsigned char *)(a1 + 248) |= 0x10u;
        while (2)
        {
          uint64_t v69 = *v3;
          uint64_t v70 = *(void *)(a2 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v70);
            *(void *)(a2 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              BOOL v15 = v67++ >= 9;
              if (v15)
              {
                LODWORD(v68) = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v68) = 0;
        }
LABEL_118:
        *(_DWORD *)(a1 + 240) = v68;
        goto LABEL_129;
      case 0x1Cu:
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 248) |= 8u;
        while (2)
        {
          uint64_t v75 = *v3;
          uint64_t v76 = *(void *)(a2 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
            *(void *)(a2 + v75) = v77;
            v35 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              BOOL v15 = v74++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_122:
        uint64_t v85 = 32;
LABEL_123:
        *(void *)(a1 + v85) = v35;
        goto LABEL_129;
      case 0x1Du:
        char v79 = (void *)PBReaderReadString();

        id v23 = v79;
        uint64_t v24 = 192;
        goto LABEL_97;
      case 0x1Eu:
        uint64_t v80 = PBReaderReadString();
        if (v80) {
          [(id)a1 addBundleFeaturedArticleIDs:v80];
        }
        goto LABEL_129;
      case 0x23u:
        char v81 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleConversionStats);

        *(void *)(a1 + 88) = v81;
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleConversionStatsReadFrom((char *)v81, a2))
        {
          return 0;
        }
        goto LABEL_101;
      case 0x24u:
        unsigned int v82 = (void *)PBReaderReadString();

        id v23 = v82;
        uint64_t v24 = 112;
        goto LABEL_97;
      case 0x25u:
        uint64_t v83 = (void *)PBReaderReadString();

        id v23 = v83;
        uint64_t v24 = 136;
        goto LABEL_97;
      case 0x26u:
        uint64_t v84 = (void *)PBReaderReadString();

        id v23 = v84;
        uint64_t v24 = 96;
LABEL_97:
        *(void *)(a1 + v24) = v23;
        goto LABEL_129;
      case 0x27u:
        uint64_t v61 = objc_alloc_init(NTPBDate);

        uint64_t v62 = 216;
LABEL_99:
        *(void *)(a1 + v62) = v61;
        if PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v61, a2))
        {
LABEL_101:
          PBReaderRecallMark();
LABEL_129:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_129;
    }
  }
}

uint64_t NTPBTagRecordReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = objc_alloc_init(NTPBRecordBase);

        *(void *)(a1 + 112) = v18;
        if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v18, a2)) {
          goto LABEL_183;
        }
        return 0;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(_DWORD *)(a1 + 648) |= 0x400u;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_249;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_249:
        uint64_t v212 = 632;
        goto LABEL_298;
      case 3u:
        uint64_t String = (void *)PBReaderReadString();

        id v27 = String;
        uint64_t v28 = 272;
        goto LABEL_236;
      case 4u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        *(_DWORD *)(a1 + 648) |= 2u;
        while (2)
        {
          uint64_t v32 = *v3;
          uint64_t v33 = *(void *)(a2 + v32);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              BOOL v15 = v30++ >= 9;
              if (v15)
              {
                uint64_t v31 = 0;
                goto LABEL_253;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
LABEL_253:
        uint64_t v213 = 16;
        goto LABEL_320;
      case 5u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 648) |= 0x10000u;
        while (2)
        {
          uint64_t v39 = *v3;
          uint64_t v40 = *(void *)(a2 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v15 = v37++ >= 9;
              if (v15)
              {
                uint64_t v38 = 0;
                goto LABEL_257;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
LABEL_257:
        BOOL v214 = v38 != 0;
        uint64_t v215 = 641;
        goto LABEL_315;
      case 6u:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(_DWORD *)(a1 + 648) |= 0x1000u;
        while (2)
        {
          uint64_t v46 = *v3;
          uint64_t v47 = *(void *)(a2 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v15 = v44++ >= 9;
              if (v15)
              {
                uint64_t v45 = 0;
                goto LABEL_261;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v45 = 0;
        }
LABEL_261:
        BOOL v214 = v45 != 0;
        uint64_t v215 = 637;
        goto LABEL_315;
      case 7u:
        uint64_t v50 = (void *)PBReaderReadString();

        id v27 = v50;
        uint64_t v28 = 504;
        goto LABEL_236;
      case 8u:
        uint64_t v51 = (void *)PBReaderReadString();

        id v27 = v51;
        uint64_t v28 = 408;
        goto LABEL_236;
      case 0xEu:
        char v53 = (void *)PBReaderReadString();

        id v27 = v53;
        uint64_t v28 = 400;
        goto LABEL_236;
      case 0xFu:
        uint64_t v54 = (void *)PBReaderReadString();

        id v27 = v54;
        uint64_t v28 = 256;
        goto LABEL_236;
      case 0x10u:
        uint64_t v55 = PBReaderReadString();
        if (v55) {
          [(id)a1 addIAdCategories:v55];
        }
        goto LABEL_237;
      case 0x11u:
        uint64_t v56 = PBReaderReadString();
        if (v56) {
          [(id)a1 addBlockedStorefrontIDs:v56];
        }
        goto LABEL_237;
      case 0x12u:
        uint64_t v57 = PBReaderReadString();
        if (v57) {
          [(id)a1 addAllowedStorefrontIDs:v57];
        }
        goto LABEL_237;
      case 0x13u:
        char v58 = objc_alloc_init(NTPBFeedConfiguration);

        *(void *)(a1 + 184) = v58;
        goto LABEL_81;
      case 0x15u:
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v31 = 0;
        *(_DWORD *)(a1 + 648) |= 0x80u;
        while (2)
        {
          uint64_t v61 = *v3;
          uint64_t v62 = *(void *)(a2 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
            *(void *)(a2 + v61) = v63;
            v31 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v15 = v60++ >= 9;
              if (v15)
              {
                uint64_t v31 = 0;
                goto LABEL_265;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
LABEL_265:
        uint64_t v213 = 64;
        goto LABEL_320;
      case 0x16u:
        uint64_t v65 = (void *)PBReaderReadString();

        id v27 = v65;
        uint64_t v28 = 360;
        goto LABEL_236;
      case 0x17u:
        char v66 = (void *)PBReaderReadString();

        id v27 = v66;
        uint64_t v28 = 304;
        goto LABEL_236;
      case 0x18u:
        unsigned int v67 = (void *)PBReaderReadString();

        id v27 = v67;
        uint64_t v28 = 328;
        goto LABEL_236;
      case 0x19u:
        Data = (void *)PBReaderReadData();

        id v27 = Data;
        uint64_t v28 = 352;
        goto LABEL_236;
      case 0x1Au:
        uint64_t v69 = (void *)PBReaderReadString();

        id v27 = v69;
        uint64_t v28 = 152;
        goto LABEL_236;
      case 0x1Bu:
        uint64_t v70 = (void *)PBReaderReadString();

        id v27 = v70;
        uint64_t v28 = 624;
        goto LABEL_236;
      case 0x1Cu:
        uint64_t v71 = PBReaderReadString();
        if (v71) {
          [(id)a1 addChannelSectionIDs:v71];
        }
        goto LABEL_237;
      case 0x1Du:
        char v72 = (void *)PBReaderReadString();

        id v27 = v72;
        uint64_t v28 = 128;
        goto LABEL_236;
      case 0x1Eu:
        char v58 = objc_alloc_init(NTPBFeedConfiguration);
        [(id)a1 addChannelSectionFeedConfigurations:v58];

LABEL_81:
        if (!PBReaderPlaceMark() || !NTPBFeedConfigurationReadFrom((uint64_t)v58, a2)) {
          return 0;
        }
        goto LABEL_183;
      case 0x20u:
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v31 = 0;
        *(_DWORD *)(a1 + 648) |= 4u;
        while (2)
        {
          uint64_t v75 = *v3;
          uint64_t v76 = *(void *)(a2 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
            *(void *)(a2 + v75) = v77;
            v31 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              BOOL v15 = v74++ >= 9;
              if (v15)
              {
                uint64_t v31 = 0;
                goto LABEL_269;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
LABEL_269:
        uint64_t v213 = 24;
        goto LABEL_320;
      case 0x21u:
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0;
        *(_DWORD *)(a1 + 648) |= 0x2000u;
        while (2)
        {
          uint64_t v82 = *v3;
          uint64_t v83 = *(void *)(a2 + v82);
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(a2 + *v7) + v83);
            *(void *)(a2 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              BOOL v15 = v80++ >= 9;
              if (v15)
              {
                uint64_t v81 = 0;
                goto LABEL_273;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v81 = 0;
        }
LABEL_273:
        BOOL v214 = v81 != 0;
        uint64_t v215 = 638;
        goto LABEL_315;
      case 0x22u:
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v88 = 0;
        *(_DWORD *)(a1 + 648) |= 0x8000u;
        while (2)
        {
          uint64_t v89 = *v3;
          uint64_t v90 = *(void *)(a2 + v89);
          unint64_t v91 = v90 + 1;
          if (v90 == -1 || v91 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v92 = *(unsigned char *)(*(void *)(a2 + *v7) + v90);
            *(void *)(a2 + v89) = v91;
            v88 |= (unint64_t)(v92 & 0x7F) << v86;
            if (v92 < 0)
            {
              v86 += 7;
              BOOL v15 = v87++ >= 9;
              if (v15)
              {
                uint64_t v88 = 0;
                goto LABEL_277;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v88 = 0;
        }
LABEL_277:
        BOOL v214 = v88 != 0;
        uint64_t v215 = 640;
        goto LABEL_315;
      case 0x23u:
        unint64_t v93 = (void *)PBReaderReadString();

        id v27 = v93;
        uint64_t v28 = 416;
        goto LABEL_236;
      case 0x24u:
        char v94 = (void *)PBReaderReadString();

        id v27 = v94;
        uint64_t v28 = 448;
        goto LABEL_236;
      case 0x25u:
        BOOL v95 = (void *)PBReaderReadString();

        id v27 = v95;
        uint64_t v28 = 456;
        goto LABEL_236;
      case 0x26u:
        uint64_t v96 = PBReaderReadString();
        if (v96) {
          [(id)a1 addPublisherPaidFeldsparablePurchaseIDs:v96];
        }
        goto LABEL_237;
      case 0x27u:
        uint64_t v97 = PBReaderReadString();
        if (v97) {
          [(id)a1 addPublisherPaidBundlePurchaseIDs:v97];
        }
        goto LABEL_237;
      case 0x28u:
        char v98 = objc_alloc_init(NTPBPurchaseOfferableConfiguration);
        [(id)a1 addPurchaseOfferableConfiguration:v98];

        if (!PBReaderPlaceMark()
          || (NTPBPurchaseOfferableConfigurationReadFrom((uint64_t)v98, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_183;
      case 0x29u:
        char v99 = 0;
        unsigned int v100 = 0;
        uint64_t v101 = 0;
        *(_DWORD *)(a1 + 648) |= 0x40000u;
        while (2)
        {
          uint64_t v102 = *v3;
          uint64_t v103 = *(void *)(a2 + v102);
          unint64_t v104 = v103 + 1;
          if (v103 == -1 || v104 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v105 = *(unsigned char *)(*(void *)(a2 + *v7) + v103);
            *(void *)(a2 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              BOOL v15 = v100++ >= 9;
              if (v15)
              {
                uint64_t v101 = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v101 = 0;
        }
LABEL_281:
        BOOL v214 = v101 != 0;
        uint64_t v215 = 643;
        goto LABEL_315;
      case 0x2Au:
        char v106 = 0;
        unsigned int v107 = 0;
        uint64_t v108 = 0;
        *(_DWORD *)(a1 + 648) |= 0x80000u;
        while (2)
        {
          uint64_t v109 = *v3;
          uint64_t v110 = *(void *)(a2 + v109);
          unint64_t v111 = v110 + 1;
          if (v110 == -1 || v111 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v112 = *(unsigned char *)(*(void *)(a2 + *v7) + v110);
            *(void *)(a2 + v109) = v111;
            v108 |= (unint64_t)(v112 & 0x7F) << v106;
            if (v112 < 0)
            {
              v106 += 7;
              BOOL v15 = v107++ >= 9;
              if (v15)
              {
                uint64_t v108 = 0;
                goto LABEL_285;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v108 = 0;
        }
LABEL_285:
        BOOL v214 = v108 != 0;
        uint64_t v215 = 644;
        goto LABEL_315;
      case 0x2Bu:
        char v113 = 0;
        unsigned int v114 = 0;
        uint64_t v31 = 0;
        *(_DWORD *)(a1 + 648) |= 8u;
        while (2)
        {
          uint64_t v115 = *v3;
          uint64_t v116 = *(void *)(a2 + v115);
          unint64_t v117 = v116 + 1;
          if (v116 == -1 || v117 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v118 = *(unsigned char *)(*(void *)(a2 + *v7) + v116);
            *(void *)(a2 + v115) = v117;
            v31 |= (unint64_t)(v118 & 0x7F) << v113;
            if (v118 < 0)
            {
              v113 += 7;
              BOOL v15 = v114++ >= 9;
              if (v15)
              {
                uint64_t v31 = 0;
                goto LABEL_289;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
LABEL_289:
        uint64_t v213 = 32;
        goto LABEL_320;
      case 0x2Cu:
        *(_DWORD *)(a1 + 648) |= 0x10u;
        uint64_t v119 = *v3;
        unint64_t v120 = *(void *)(a2 + v119);
        if (v120 <= 0xFFFFFFFFFFFFFFF7 && v120 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v121 = *(void *)(*(void *)(a2 + *v7) + v120);
          *(void *)(a2 + v119) = v120 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v121 = 0;
        }
        uint64_t v216 = 40;
        goto LABEL_325;
      case 0x2Du:
        uint64_t v122 = PBReaderReadString();
        if (v122) {
          [(id)a1 addIAdKeywords:v122];
        }
        goto LABEL_237;
      case 0x2Eu:
        char v123 = (void *)PBReaderReadString();

        id v27 = v123;
        uint64_t v28 = 344;
        goto LABEL_236;
      case 0x2Fu:
        v124 = (void *)PBReaderReadString();

        id v27 = v124;
        uint64_t v28 = 336;
        goto LABEL_236;
      case 0x30u:
        char v125 = 0;
        unsigned int v126 = 0;
        uint64_t v127 = 0;
        *(_DWORD *)(a1 + 648) |= 0x800u;
        while (2)
        {
          uint64_t v128 = *v3;
          uint64_t v129 = *(void *)(a2 + v128);
          unint64_t v130 = v129 + 1;
          if (v129 == -1 || v130 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v131 = *(unsigned char *)(*(void *)(a2 + *v7) + v129);
            *(void *)(a2 + v128) = v130;
            v127 |= (unint64_t)(v131 & 0x7F) << v125;
            if (v131 < 0)
            {
              v125 += 7;
              BOOL v15 = v126++ >= 9;
              if (v15)
              {
                uint64_t v127 = 0;
                goto LABEL_293;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v127 = 0;
        }
LABEL_293:
        BOOL v214 = v127 != 0;
        uint64_t v215 = 636;
        goto LABEL_315;
      case 0x31u:
        unsigned int v132 = objc_alloc_init(NTPBPublisherPaidDescriptionStrings);

        *(void *)(a1 + 432) = v132;
        if (!PBReaderPlaceMark()
          || (NTPBPublisherPaidDescriptionStringsReadFrom((uint64_t)v132, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_183;
      case 0x32u:
        uint64_t v133 = (void *)PBReaderReadString();

        id v27 = v133;
        uint64_t v28 = 280;
        goto LABEL_236;
      case 0x33u:
        uint64_t v134 = (void *)PBReaderReadString();

        id v27 = v134;
        uint64_t v28 = 296;
        goto LABEL_236;
      case 0x34u:
        unint64_t v135 = (void *)PBReaderReadData();

        id v27 = v135;
        uint64_t v28 = 288;
        goto LABEL_236;
      case 0x35u:
        char v136 = 0;
        unsigned int v137 = 0;
        uint64_t v21 = 0;
        *(_DWORD *)(a1 + 648) |= 0x200u;
        while (2)
        {
          uint64_t v138 = *v3;
          uint64_t v139 = *(void *)(a2 + v138);
          unint64_t v140 = v139 + 1;
          if (v139 == -1 || v140 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v141 = *(unsigned char *)(*(void *)(a2 + *v7) + v139);
            *(void *)(a2 + v138) = v140;
            v21 |= (unint64_t)(v141 & 0x7F) << v136;
            if (v141 < 0)
            {
              v136 += 7;
              BOOL v15 = v137++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_297;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_297:
        uint64_t v212 = 208;
LABEL_298:
        *(_DWORD *)(a1 + v212) = v21;
        goto LABEL_237;
      case 0x36u:
        char v142 = 0;
        unsigned int v143 = 0;
        uint64_t v144 = 0;
        *(_DWORD *)(a1 + 648) |= 0x4000u;
        while (2)
        {
          uint64_t v145 = *v3;
          uint64_t v146 = *(void *)(a2 + v145);
          unint64_t v147 = v146 + 1;
          if (v146 == -1 || v147 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v148 = *(unsigned char *)(*(void *)(a2 + *v7) + v146);
            *(void *)(a2 + v145) = v147;
            v144 |= (unint64_t)(v148 & 0x7F) << v142;
            if (v148 < 0)
            {
              v142 += 7;
              BOOL v15 = v143++ >= 9;
              if (v15)
              {
                uint64_t v144 = 0;
                goto LABEL_302;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v144 = 0;
        }
LABEL_302:
        BOOL v214 = v144 != 0;
        uint64_t v215 = 639;
        goto LABEL_315;
      case 0x37u:
        char v149 = 0;
        unsigned int v150 = 0;
        uint64_t v31 = 0;
        *(_DWORD *)(a1 + 648) |= 1u;
        while (2)
        {
          uint64_t v151 = *v3;
          uint64_t v152 = *(void *)(a2 + v151);
          unint64_t v153 = v152 + 1;
          if (v152 == -1 || v153 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v154 = *(unsigned char *)(*(void *)(a2 + *v7) + v152);
            *(void *)(a2 + v151) = v153;
            v31 |= (unint64_t)(v154 & 0x7F) << v149;
            if (v154 < 0)
            {
              v149 += 7;
              BOOL v15 = v150++ >= 9;
              if (v15)
              {
                uint64_t v31 = 0;
                goto LABEL_306;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
LABEL_306:
        uint64_t v213 = 8;
        goto LABEL_320;
      case 0x38u:
        unint64_t v155 = (void *)PBReaderReadData();

        id v27 = v155;
        uint64_t v28 = 104;
        goto LABEL_236;
      case 0x39u:
        uint64_t v156 = PBReaderReadString();
        if (v156) {
          [(id)a1 addPublisherSpecifiedArticleIDs:v156];
        }
        goto LABEL_237;
      case 0x3Au:
        v157 = (void *)PBReaderReadString();

        id v27 = v157;
        uint64_t v28 = 592;
        goto LABEL_236;
      case 0x3Bu:
        v158 = objc_alloc_init(NTPBDate);

        *(void *)(a1 + 472) = v158;
        if PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v158, a2))
        {
LABEL_183:
          PBReaderRecallMark();
LABEL_237:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      case 0x3Cu:
        char v159 = (void *)PBReaderReadString();

        id v27 = v159;
        uint64_t v28 = 200;
        goto LABEL_236;
      case 0x3Du:
        uint64_t v160 = PBReaderReadString();
        if (v160) {
          [(id)a1 addLatestIssueIDs:v160];
        }
        goto LABEL_237;
      case 0x3Eu:
        uint64_t v161 = (void *)PBReaderReadString();

        id v27 = v161;
        uint64_t v28 = 96;
        goto LABEL_236;
      case 0x3Fu:
        uint64_t v162 = (void *)PBReaderReadString();

        id v27 = v162;
        uint64_t v28 = 240;
        goto LABEL_236;
      case 0x40u:
        unint64_t v163 = (void *)PBReaderReadString();

        id v27 = v163;
        uint64_t v28 = 264;
        goto LABEL_236;
      case 0x42u:
        char v164 = (void *)PBReaderReadString();

        id v27 = v164;
        uint64_t v28 = 392;
        goto LABEL_236;
      case 0x43u:
        v165 = (void *)PBReaderReadString();

        id v27 = v165;
        uint64_t v28 = 584;
        goto LABEL_236;
      case 0x44u:
        v166 = (void *)PBReaderReadString();

        id v27 = v166;
        uint64_t v28 = 608;
        goto LABEL_236;
      case 0x45u:
        char v167 = (void *)PBReaderReadString();

        id v27 = v167;
        uint64_t v28 = 616;
        goto LABEL_236;
      case 0x46u:
        char v168 = 0;
        unsigned int v169 = 0;
        uint64_t v31 = 0;
        *(_DWORD *)(a1 + 648) |= 0x20u;
        while (2)
        {
          uint64_t v170 = *v3;
          uint64_t v171 = *(void *)(a2 + v170);
          unint64_t v172 = v171 + 1;
          if (v171 == -1 || v172 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v173 = *(unsigned char *)(*(void *)(a2 + *v7) + v171);
            *(void *)(a2 + v170) = v172;
            v31 |= (unint64_t)(v173 & 0x7F) << v168;
            if (v173 < 0)
            {
              v168 += 7;
              BOOL v15 = v169++ >= 9;
              if (v15)
              {
                uint64_t v31 = 0;
                goto LABEL_310;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
LABEL_310:
        uint64_t v213 = 48;
        goto LABEL_320;
      case 0x47u:
        uint64_t v174 = PBReaderReadString();
        if (v174) {
          [(id)a1 addRecentIssueIDs:v174];
        }
        goto LABEL_237;
      case 0x48u:
        char v175 = (void *)PBReaderReadString();

        id v27 = v175;
        uint64_t v28 = 320;
        goto LABEL_236;
      case 0x49u:
        unsigned int v176 = (void *)PBReaderReadString();

        id v27 = v176;
        uint64_t v28 = 312;
        goto LABEL_236;
      case 0x4Au:
        uint64_t v177 = (void *)PBReaderReadString();

        id v27 = v177;
        uint64_t v28 = 600;
        goto LABEL_236;
      case 0x4Bu:
        char v178 = 0;
        unsigned int v179 = 0;
        uint64_t v180 = 0;
        *(_DWORD *)(a1 + 648) |= 0x20000u;
        while (2)
        {
          uint64_t v181 = *v3;
          uint64_t v182 = *(void *)(a2 + v181);
          unint64_t v183 = v182 + 1;
          if (v182 == -1 || v183 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v184 = *(unsigned char *)(*(void *)(a2 + *v7) + v182);
            *(void *)(a2 + v181) = v183;
            v180 |= (unint64_t)(v184 & 0x7F) << v178;
            if (v184 < 0)
            {
              v178 += 7;
              BOOL v15 = v179++ >= 9;
              if (v15)
              {
                uint64_t v180 = 0;
                goto LABEL_314;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v180 = 0;
        }
LABEL_314:
        BOOL v214 = v180 != 0;
        uint64_t v215 = 642;
LABEL_315:
        *(unsigned char *)(a1 + v215) = v214;
        goto LABEL_237;
      case 0x4Cu:
        v185 = (void *)PBReaderReadData();

        id v27 = v185;
        uint64_t v28 = 568;
        goto LABEL_236;
      case 0x4Du:
        v186 = (void *)PBReaderReadString();

        id v27 = v186;
        uint64_t v28 = 216;
        goto LABEL_236;
      case 0x4Eu:
        v187 = (void *)PBReaderReadString();

        id v27 = v187;
        uint64_t v28 = 560;
        goto LABEL_236;
      case 0x4Fu:
        uint64_t v188 = (void *)PBReaderReadString();

        id v27 = v188;
        uint64_t v28 = 544;
        goto LABEL_236;
      case 0x50u:
        v189 = (void *)PBReaderReadString();

        id v27 = v189;
        uint64_t v28 = 552;
        goto LABEL_236;
      case 0x51u:
        v190 = (void *)PBReaderReadString();

        id v27 = v190;
        uint64_t v28 = 512;
        goto LABEL_236;
      case 0x52u:
        v191 = (void *)PBReaderReadString();

        id v27 = v191;
        uint64_t v28 = 576;
        goto LABEL_236;
      case 0x53u:
        uint64_t v192 = (void *)PBReaderReadString();

        id v27 = v192;
        uint64_t v28 = 384;
        goto LABEL_236;
      case 0x54u:
        v193 = (void *)PBReaderReadString();

        id v27 = v193;
        uint64_t v28 = 176;
        goto LABEL_236;
      case 0x55u:
        v194 = (void *)PBReaderReadString();

        id v27 = v194;
        uint64_t v28 = 368;
        goto LABEL_236;
      case 0x56u:
        char v195 = (void *)PBReaderReadString();

        id v27 = v195;
        uint64_t v28 = 160;
        goto LABEL_236;
      case 0x57u:
        unsigned int v196 = (void *)PBReaderReadString();

        id v27 = v196;
        uint64_t v28 = 376;
        goto LABEL_236;
      case 0x58u:
        uint64_t v197 = (void *)PBReaderReadString();

        id v27 = v197;
        uint64_t v28 = 168;
        goto LABEL_236;
      case 0x59u:
        *(_DWORD *)(a1 + 648) |= 0x100u;
        uint64_t v198 = *v3;
        unint64_t v199 = *(void *)(a2 + v198);
        if (v199 <= 0xFFFFFFFFFFFFFFF7 && v199 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v121 = *(void *)(*(void *)(a2 + *v7) + v199);
          *(void *)(a2 + v198) = v199 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v121 = 0;
        }
        uint64_t v216 = 72;
LABEL_325:
        *(void *)(a1 + v216) = v121;
        goto LABEL_237;
      case 0x5Au:
        char v200 = (void *)PBReaderReadString();

        id v27 = v200;
        uint64_t v28 = 480;
        goto LABEL_236;
      case 0x5Bu:
        uint64_t v201 = PBReaderReadString();
        if (v201) {
          [(id)a1 addAdTargetingKeywords:v201];
        }
        goto LABEL_237;
      case 0x5Cu:
        unsigned int v202 = (void *)PBReaderReadString();

        id v27 = v202;
        uint64_t v28 = 192;
        goto LABEL_236;
      case 0x5Du:
        uint64_t v203 = (void *)PBReaderReadString();

        id v27 = v203;
        uint64_t v28 = 536;
        goto LABEL_236;
      case 0x5Eu:
        uint64_t v204 = (void *)PBReaderReadString();

        id v27 = v204;
        uint64_t v28 = 520;
        goto LABEL_236;
      case 0x5Fu:
        unint64_t v205 = (void *)PBReaderReadString();

        id v27 = v205;
        uint64_t v28 = 528;
LABEL_236:
        *(void *)(a1 + v28) = v27;
        goto LABEL_237;
      case 0x60u:
        char v206 = 0;
        unsigned int v207 = 0;
        uint64_t v31 = 0;
        *(_DWORD *)(a1 + 648) |= 0x40u;
        while (2)
        {
          uint64_t v208 = *v3;
          uint64_t v209 = *(void *)(a2 + v208);
          unint64_t v210 = v209 + 1;
          if (v209 == -1 || v210 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v211 = *(unsigned char *)(*(void *)(a2 + *v7) + v209);
            *(void *)(a2 + v208) = v210;
            v31 |= (unint64_t)(v211 & 0x7F) << v206;
            if (v211 < 0)
            {
              v206 += 7;
              BOOL v15 = v207++ >= 9;
              if (v15)
              {
                uint64_t v31 = 0;
                goto LABEL_319;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
LABEL_319:
        uint64_t v213 = 56;
LABEL_320:
        *(void *)(a1 + v213) = v31;
        goto LABEL_237;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_237;
    }
  }
}

BOOL NTPBFeedConfigurationReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) >= 6)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
      }
      else
      {
        char v17 = off_26444C260[(int)(v10 >> 3)];
        uint64_t String = (void *)PBReaderReadString();

        *(void *)(a1 + *v17) = String;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

NTPBRecordBase *NTPBReadBaseFromRecordData(void *a1)
{
  id v1 = a1;
  v2 = (unsigned char *)[objc_alloc(MEMORY[0x263F62228]) initWithData:v1];
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  v6 = (int *)MEMORY[0x263F62268];
  while (1)
  {
    while (1)
    {
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4] || v2[*v5]) {
        goto LABEL_24;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      uint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v3;
        unint64_t v11 = *(void *)&v2[v10];
        if (v11 == -1 || v11 >= *(void *)&v2[*v4]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&v2[*v6] + v11);
        *(void *)&v2[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          LODWORD(v9) = 0;
          int v14 = v2[*v5];
          goto LABEL_14;
        }
      }
      v2[*v5] = 1;
LABEL_12:
      int v14 = v2[*v5];
      if (v2[*v5]) {
        LODWORD(v9) = 0;
      }
LABEL_14:
      if (v14 || (v9 & 7) == 4)
      {
LABEL_24:
        int v16 = 0;
LABEL_25:
        int v16 = v16;
        char v17 = v16;
        goto LABEL_27;
      }
      if ((v9 & 0x7FFF8) == 8) {
        break;
      }
      PBReaderSkipValueWithTag();
    }
    int v16 = objc_alloc_init(NTPBRecordBase);
    if (!PBReaderPlaceMark() || (NTPBRecordBaseReadFrom((uint64_t)v16, (uint64_t)v2) & 1) == 0) {
      break;
    }
    PBReaderRecallMark();
    if (v16) {
      goto LABEL_25;
    }
  }
  char v17 = 0;
LABEL_27:

  return v17;
}

uint64_t NTPBRecordBaseReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  char v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t String = (void *)PBReaderReadString();

        id v18 = String;
        uint64_t v19 = 40;
        goto LABEL_23;
      case 2u:
        uint64_t v21 = (void *)PBReaderReadString();

        id v18 = v21;
        uint64_t v19 = 24;
LABEL_23:
        *(void *)(a1 + v19) = v18;
        goto LABEL_64;
      case 3u:
        uint64_t v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 48;
        goto LABEL_48;
      case 4u:
        uint64_t v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 32;
        goto LABEL_48;
      case 5u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        *(unsigned char *)(a1 + 64) |= 4u;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_54;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_54:
        *(unsigned char *)(a1 + 60) = v26 != 0;
        goto LABEL_64;
      case 6u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v32) = 0;
                goto LABEL_58;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v32) = 0;
        }
LABEL_58:
        uint64_t v41 = 16;
        goto LABEL_63;
      case 7u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v32 = 0;
        *(unsigned char *)(a1 + 64) |= 2u;
        while (2)
        {
          uint64_t v38 = *v3;
          unint64_t v39 = *(void *)(a2 + v38);
          if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v39 + 1;
            v32 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v36 += 7;
              BOOL v14 = v37++ >= 9;
              if (v14)
              {
                LODWORD(v32) = 0;
                goto LABEL_62;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v32) = 0;
        }
LABEL_62:
        uint64_t v41 = 56;
LABEL_63:
        *(_DWORD *)(a1 + v41) = v32;
        goto LABEL_64;
      case 8u:
        uint64_t v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 8;
LABEL_48:
        *(void *)(a1 + v23) = v22;
        if PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2))
        {
          PBReaderRecallMark();
LABEL_64:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_64;
    }
  }
}

uint64_t NTPBDateReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3))
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
      else
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v21 = 0;
        }
        *(void *)(a1 + 8) = v21;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPurchaseOfferableConfigurationReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 0u:
          uint64_t String = (void *)PBReaderReadString();

          *(void *)(a1 + 8) = String;
          continue;
        case 1u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (2)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                BOOL v14 = v20++ >= 9;
                if (v14)
                {
                  uint64_t v21 = 0;
                  goto LABEL_53;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v21 = 0;
          }
LABEL_53:
          BOOL v43 = v21 != 0;
          uint64_t v44 = 17;
          goto LABEL_66;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v27 = 0;
                  goto LABEL_57;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v27 = 0;
          }
LABEL_57:
          BOOL v43 = v27 != 0;
          uint64_t v44 = 16;
          goto LABEL_66;
        case 3u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  uint64_t v33 = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v33 = 0;
          }
LABEL_61:
          BOOL v43 = v33 != 0;
          uint64_t v44 = 18;
          goto LABEL_66;
        case 4u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          *(unsigned char *)(a1 + 20) |= 8u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v40 = *v3;
        unint64_t v41 = *(void *)(a2 + v40);
        if (v41 == -1 || v41 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
        *(void *)(a2 + v40) = v41 + 1;
        v39 |= (unint64_t)(v42 & 0x7F) << v37;
        if ((v42 & 0x80) == 0) {
          goto LABEL_63;
        }
        v37 += 7;
        BOOL v14 = v38++ >= 9;
        if (v14)
        {
          uint64_t v39 = 0;
          goto LABEL_65;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_63:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v39 = 0;
      }
LABEL_65:
      BOOL v43 = v39 != 0;
      uint64_t v44 = 19;
LABEL_66:
      *(unsigned char *)(a1 + v44) = v43;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPersonalizationLocalDataReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  char v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(NTPBPersonalizationAggregateDelta);
        [a1 addOpenChangeGroupDeltas:v17];

        if PBReaderPlaceMark() && (NTPBPersonalizationAggregateDeltaReadFrom((uint64_t)v17, a2)) {
          goto LABEL_32;
        }
        return 0;
      case 2u:
        char v19 = objc_alloc_init(NTPBPersonalizationChangeGroup);
        [a1 addClosedChangeGroups:v19];

        if (!PBReaderPlaceMark() || (NTPBPersonalizationChangeGroupReadFrom((uint64_t)v19, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_32;
      case 3u:
        Data = (void *)PBReaderReadData();

        id v21 = Data;
        uint64_t v22 = 5;
        goto LABEL_29;
      case 4u:
        uint64_t String = (void *)PBReaderReadString();

        id v21 = String;
        uint64_t v22 = 3;
LABEL_29:
        a1[v22] = v21;
        goto LABEL_33;
      case 5u:
        char v24 = objc_alloc_init(NTPBPersonalizationAggregate);
        [a1 addAggregates:v24];

        if PBReaderPlaceMark() && (NTPBPersonalizationAggregateReadFrom((uint64_t)v24, a2))
        {
LABEL_32:
          PBReaderRecallMark();
LABEL_33:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_33;
    }
  }
}

uint64_t NTPBPersonalizationAggregateReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 0u:
          uint64_t String = (void *)PBReaderReadString();

          *(void *)(a1 + 40) = String;
          continue;
        case 1u:
          *(unsigned char *)(a1 + 48) |= 1u;
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v22 = *(void *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v22 = 0;
          }
          uint64_t v39 = 8;
          goto LABEL_55;
        case 2u:
          *(unsigned char *)(a1 + 48) |= 4u;
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v22 = *(void *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v22 = 0;
          }
          uint64_t v39 = 24;
LABEL_55:
          *(void *)(a1 + v39) = v22;
          continue;
        case 3u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 48) |= 2u;
          while (2)
          {
            uint64_t v28 = *v3;
            uint64_t v29 = *(void *)(a2 + v28);
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if (v31 < 0)
              {
                v25 += 7;
                BOOL v15 = v26++ >= 9;
                if (v15)
                {
                  uint64_t v27 = 0;
                  goto LABEL_45;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v27 = 0;
          }
LABEL_45:
          uint64_t v38 = 16;
          goto LABEL_50;
        case 4u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 48) |= 8u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v34 = *v3;
        uint64_t v35 = *(void *)(a2 + v34);
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)(a2 + *v4)) {
          break;
        }
        char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
        *(void *)(a2 + v34) = v36;
        v27 |= (unint64_t)(v37 & 0x7F) << v32;
        if ((v37 & 0x80) == 0) {
          goto LABEL_47;
        }
        v32 += 7;
        BOOL v15 = v33++ >= 9;
        if (v15)
        {
          uint64_t v27 = 0;
          goto LABEL_49;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_47:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v27 = 0;
      }
LABEL_49:
      uint64_t v38 = 32;
LABEL_50:
      *(void *)(a1 + v38) = v27;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPublisherPaidDescriptionStringsReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3))
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
      else
      {
        id v18 = objc_alloc_init(NTPBPaywallDescription);

        *(void *)(a1 + 8) = v18;
        if (!PBReaderPlaceMark() || !NTPBPaywallDescriptionReadFrom((uint64_t)v18, a2)) {
          return 0;
        }
        PBReaderRecallMark();
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBPaywallDescriptionReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) >= 4)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
      }
      else
      {
        char v17 = off_26444E508[(int)(v10 >> 3)];
        uint64_t String = (void *)PBReaderReadString();

        *(void *)(a1 + *v17) = String;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPuzzleRecordReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  char v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(NTPBRecordBase);

        *(void *)(a1 + 48) = v17;
        if (!PBReaderPlaceMark() || (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_21;
      case 2u:
        uint64_t String = (void *)PBReaderReadString();

        id v20 = String;
        uint64_t v21 = 144;
        goto LABEL_63;
      case 3u:
        uint64_t v22 = (void *)PBReaderReadString();

        id v20 = v22;
        uint64_t v21 = 88;
        goto LABEL_63;
      case 4u:
        uint64_t v23 = (void *)PBReaderReadString();

        id v20 = v23;
        uint64_t v21 = 96;
        goto LABEL_63;
      case 5u:
        unint64_t v24 = (void *)PBReaderReadString();

        id v20 = v24;
        uint64_t v21 = 64;
        goto LABEL_63;
      case 6u:
        uint64_t v25 = PBReaderReadString();
        if (v25) {
          [(id)a1 addAuthors:v25];
        }
        goto LABEL_113;
      case 7u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 156) |= 0x20u;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_90:
        BOOL v69 = v28 != 0;
        uint64_t v70 = 154;
        goto LABEL_112;
      case 8u:
        char v32 = objc_alloc_init(NTPBDate);

        *(void *)(a1 + 80) = v32;
        if PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v32, a2))
        {
LABEL_21:
          PBReaderRecallMark();
LABEL_113:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      case 9u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 156) |= 2u;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v35 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_94:
        uint64_t v71 = 16;
        goto LABEL_103;
      case 0xAu:
        uint64_t v39 = (void *)PBReaderReadString();

        id v20 = v39;
        uint64_t v21 = 128;
        goto LABEL_63;
      case 0xBu:
        uint64_t v40 = (void *)PBReaderReadString();

        id v20 = v40;
        uint64_t v21 = 136;
        goto LABEL_63;
      case 0xCu:
        unint64_t v41 = (void *)PBReaderReadString();

        id v20 = v41;
        uint64_t v21 = 72;
        goto LABEL_63;
      case 0xDu:
        uint64_t v42 = PBReaderReadString();
        if (v42) {
          [(id)a1 addBlockedStorefrontIDs:v42];
        }
        goto LABEL_113;
      case 0xEu:
        uint64_t v43 = PBReaderReadString();
        if (v43) {
          [(id)a1 addAllowedStorefrontIDs:v43];
        }
        goto LABEL_113;
      case 0xFu:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 156) |= 4u;
        while (2)
        {
          uint64_t v46 = *v3;
          unint64_t v47 = *(void *)(a2 + v46);
          if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v47 + 1;
            v35 |= (unint64_t)(v48 & 0x7F) << v44;
            if (v48 < 0)
            {
              v44 += 7;
              BOOL v14 = v45++ >= 9;
              if (v14)
              {
                uint64_t v35 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_98:
        uint64_t v71 = 24;
        goto LABEL_103;
      case 0x10u:
        char v49 = (void *)PBReaderReadString();

        id v20 = v49;
        uint64_t v21 = 120;
        goto LABEL_63;
      case 0x11u:
        uint64_t v50 = (void *)PBReaderReadString();

        id v20 = v50;
        uint64_t v21 = 112;
LABEL_63:
        *(void *)(a1 + v21) = v20;
        goto LABEL_113;
      case 0x12u:
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 156) |= 1u;
        while (2)
        {
          uint64_t v53 = *v3;
          unint64_t v54 = *(void *)(a2 + v53);
          if (v54 == -1 || v54 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v54);
            *(void *)(a2 + v53) = v54 + 1;
            v35 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v51 += 7;
              BOOL v14 = v52++ >= 9;
              if (v14)
              {
                uint64_t v35 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_102:
        uint64_t v71 = 8;
LABEL_103:
        *(void *)(a1 + v71) = v35;
        goto LABEL_113;
      case 0x13u:
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        *(unsigned char *)(a1 + 156) |= 8u;
        while (2)
        {
          uint64_t v59 = *v3;
          unint64_t v60 = *(void *)(a2 + v59);
          if (v60 == -1 || v60 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
            *(void *)(a2 + v59) = v60 + 1;
            v58 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v14 = v57++ >= 9;
              if (v14)
              {
                uint64_t v58 = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v58 = 0;
        }
LABEL_107:
        BOOL v69 = v58 != 0;
        uint64_t v70 = 152;
        goto LABEL_112;
      case 0x14u:
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(unsigned char *)(a1 + 156) |= 0x10u;
        while (2)
        {
          uint64_t v65 = *v3;
          unint64_t v66 = *(void *)(a2 + v65);
          if (v66 == -1 || v66 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
            *(void *)(a2 + v65) = v66 + 1;
            v64 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              BOOL v14 = v63++ >= 9;
              if (v14)
              {
                uint64_t v64 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v64 = 0;
        }
LABEL_111:
        BOOL v69 = v64 != 0;
        uint64_t v70 = 153;
LABEL_112:
        *(unsigned char *)(a1 + v70) = v69;
        goto LABEL_113;
      case 0x15u:
        uint64_t v68 = PBReaderReadString();
        if (v68) {
          [(id)a1 addRelatedPuzzleIDs:v68];
        }
        goto LABEL_113;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_113;
    }
  }
}

uint64_t COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityScoreReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        uint64_t v25 = *v3;
        unint64_t v26 = *(void *)(a2 + v25);
        if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(void *)(a2 + *v4))
        {
          int v27 = *(_DWORD *)(*(void *)(a2 + *v7) + v26);
          *(void *)(a2 + v25) = v26 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v27 = 0;
        }
        *(_DWORD *)(a1 + 8) = v27;
      }
      else if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 16) |= 2u;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_35:
        *(_DWORD *)(a1 + 12) = v20;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityScoresReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityTagScore);
        [a1 addTagScores:v17];
        if (!PBReaderPlaceMark() || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityTagScoreReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityTagScoreReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        char v18 = (COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityScore *)a1[2];
        a1[2] = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityScore);
    [a1 addScores:v18];
    if (!PBReaderPlaceMark()
      || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityScoreReadFrom((uint64_t)v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPuzzleTypeRecordReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = objc_alloc_init(NTPBRecordBase);

          *(void *)(a1 + 32) = v17;
          if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2))
          {
            PBReaderRecallMark();
            continue;
          }
          return 0;
        case 2u:
          uint64_t String = (void *)PBReaderReadString();

          id v20 = String;
          uint64_t v21 = 112;
          goto LABEL_60;
        case 3u:
          uint64_t v22 = (void *)PBReaderReadString();

          id v20 = v22;
          uint64_t v21 = 56;
          goto LABEL_60;
        case 4u:
          unint64_t v23 = (void *)PBReaderReadString();

          id v20 = v23;
          uint64_t v21 = 216;
          goto LABEL_60;
        case 5u:
          uint64_t v24 = PBReaderReadString();
          if (v24) {
            [(id)a1 addLatestPuzzleIDs:v24];
          }
          continue;
        case 6u:
          uint64_t v25 = PBReaderReadString();
          if (v25) {
            [(id)a1 addPromotedPuzzleIDs:v25];
          }
          continue;
        case 7u:
          unint64_t v26 = (void *)PBReaderReadString();

          id v20 = v26;
          uint64_t v21 = 96;
          goto LABEL_60;
        case 8u:
          uint64_t v27 = PBReaderReadString();
          if (v27) {
            [(id)a1 addBlockedStorefrontIDs:v27];
          }
          continue;
        case 9u:
          uint64_t v28 = PBReaderReadString();
          if (v28) {
            [(id)a1 addAllowedStorefrontIDs:v28];
          }
          continue;
        case 0xAu:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          *(unsigned char *)(a1 + 236) |= 2u;
          while (2)
          {
            uint64_t v32 = *v3;
            unint64_t v33 = *(void *)(a2 + v32);
            if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
              *(void *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                BOOL v14 = v30++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_80;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
LABEL_80:
          uint64_t v63 = 16;
          goto LABEL_85;
        case 0xBu:
          uint64_t v35 = (void *)PBReaderReadString();

          id v20 = v35;
          uint64_t v21 = 152;
          goto LABEL_60;
        case 0xCu:
          uint64_t v36 = (void *)PBReaderReadString();

          id v20 = v36;
          uint64_t v21 = 128;
          goto LABEL_60;
        case 0xDu:
          unint64_t v37 = (void *)PBReaderReadString();

          id v20 = v37;
          uint64_t v21 = 136;
          goto LABEL_60;
        case 0xEu:
          char v38 = (void *)PBReaderReadString();

          id v20 = v38;
          uint64_t v21 = 144;
          goto LABEL_60;
        case 0xFu:
          uint64_t v39 = (void *)PBReaderReadString();

          id v20 = v39;
          uint64_t v21 = 48;
          goto LABEL_60;
        case 0x10u:
          uint64_t v40 = (void *)PBReaderReadString();

          id v20 = v40;
          uint64_t v21 = 72;
          goto LABEL_60;
        case 0x11u:
          unint64_t v41 = (void *)PBReaderReadString();

          id v20 = v41;
          uint64_t v21 = 64;
          goto LABEL_60;
        case 0x12u:
          uint64_t v42 = (void *)PBReaderReadString();

          id v20 = v42;
          uint64_t v21 = 224;
          goto LABEL_60;
        case 0x13u:
          uint64_t v43 = (void *)PBReaderReadString();

          id v20 = v43;
          uint64_t v21 = 80;
          goto LABEL_60;
        case 0x14u:
          char v44 = (void *)PBReaderReadString();

          id v20 = v44;
          uint64_t v21 = 200;
          goto LABEL_60;
        case 0x15u:
          unsigned int v45 = (void *)PBReaderReadString();

          id v20 = v45;
          uint64_t v21 = 184;
          goto LABEL_60;
        case 0x16u:
          uint64_t v46 = (void *)PBReaderReadString();

          id v20 = v46;
          uint64_t v21 = 192;
          goto LABEL_60;
        case 0x17u:
          unint64_t v47 = (void *)PBReaderReadString();

          id v20 = v47;
          uint64_t v21 = 176;
          goto LABEL_60;
        case 0x18u:
          char v48 = (void *)PBReaderReadString();

          id v20 = v48;
          uint64_t v21 = 160;
          goto LABEL_60;
        case 0x19u:
          char v49 = (void *)PBReaderReadString();

          id v20 = v49;
          uint64_t v21 = 168;
          goto LABEL_60;
        case 0x1Au:
          uint64_t v50 = (void *)PBReaderReadString();

          id v20 = v50;
          uint64_t v21 = 88;
          goto LABEL_60;
        case 0x1Bu:
          char v51 = (void *)PBReaderReadString();

          id v20 = v51;
          uint64_t v21 = 120;
LABEL_60:
          *(void *)(a1 + v21) = v20;
          continue;
        case 0x1Cu:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v31 = 0;
          *(unsigned char *)(a1 + 236) |= 1u;
          while (2)
          {
            uint64_t v54 = *v3;
            unint64_t v55 = *(void *)(a2 + v54);
            if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v55 + 1;
              v31 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                BOOL v14 = v53++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_84;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
LABEL_84:
          uint64_t v63 = 8;
LABEL_85:
          *(void *)(a1 + v63) = v31;
          continue;
        case 0x1Du:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v59 = 0;
          *(unsigned char *)(a1 + 236) |= 4u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v60 = *v3;
        unint64_t v61 = *(void *)(a2 + v60);
        if (v61 == -1 || v61 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
        *(void *)(a2 + v60) = v61 + 1;
        v59 |= (unint64_t)(v62 & 0x7F) << v57;
        if ((v62 & 0x80) == 0) {
          goto LABEL_87;
        }
        v57 += 7;
        BOOL v14 = v58++ >= 9;
        if (v14)
        {
          uint64_t v59 = 0;
          goto LABEL_89;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_87:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v59 = 0;
      }
LABEL_89:
      *(unsigned char *)(a1 + 232) = v59 != 0;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedItemInventoryReadFrom(uint64_t a1, unsigned char *a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)&a2[*MEMORY[0x263F62298]] >= *(void *)&a2[*MEMORY[0x263F62288]]) {
    return a2[*v5] == 0;
  }
  char v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (a2[*v5]) {
      return a2[*v5] == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)&a2[v11];
      if (v12 == -1 || v12 >= *(void *)&a2[*v4]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a2[*v7] + v12);
      *(void *)&a2[v11] = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = a2[*v5];
        goto LABEL_14;
      }
    }
    a2[*v5] = 1;
LABEL_12:
    int v15 = a2[*v5];
    if (a2[*v5]) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return a2[*v5] == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 40) |= 2u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)&a2[v20];
          if (v21 == -1 || v21 >= *(void *)&a2[*v4]) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)&a2[*v7] + v21);
          *(void *)&a2[v20] = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_42;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_44;
          }
        }
        a2[*v5] = 1;
LABEL_42:
        if (a2[*v5]) {
          LODWORD(v19) = 0;
        }
LABEL_44:
        uint64_t v31 = 24;
        goto LABEL_49;
      case 2u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 40) |= 1u;
        while (2)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)&a2[v26];
          if (v27 == -1 || v27 >= *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)&a2[*v7] + v27);
            *(void *)&a2[v26] = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_48;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          LODWORD(v19) = 0;
        }
LABEL_48:
        uint64_t v31 = 8;
LABEL_49:
        *(_DWORD *)(a1 + v31) = v19;
        goto LABEL_50;
      case 3u:
        char v29 = objc_alloc_init(NTPBDate);

        *(void *)(a1 + 32) = v29;
        if (!PBReaderPlaceMark() || (NTPBDateReadFrom((uint64_t)v29, (uint64_t)a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_40;
      case 4u:
        unsigned int v30 = objc_alloc_init(NTPBFeedItem);
        [(id)a1 addFeedItems:v30];

        if PBReaderPlaceMark() && (NTPBFeedItemReadFrom((uint64_t)v30, a2))
        {
LABEL_40:
          PBReaderRecallMark();
LABEL_50:
          if (*(void *)&a2[*v3] >= *(void *)&a2[*v4]) {
            return a2[*v5] == 0;
          }
          continue;
        }
        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_50;
    }
  }
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleConversionStatsReadFrom(char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        unsigned int v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);
        uint64_t v19 = 8;
        goto LABEL_26;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTopicConversionStats);
        [a1 addTopicConversionStats:v18];
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLTopicConversionStatsReadFrom((uint64_t)v18, a2))
        {
          goto LABEL_33;
        }
LABEL_28:
        PBReaderRecallMark();

        goto LABEL_30;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_30:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);
    uint64_t v19 = 16;
LABEL_26:
    objc_storeStrong((id *)&a1[v19], v18);
    if (!PBReaderPlaceMark()
      || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStatsReadFrom((uint64_t)v18, a2))
    {
LABEL_33:

      return 0;
    }
    goto LABEL_28;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLTopicConversionStatsReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStatsReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v18 = PBReaderReadString();
    unint64_t v17 = *(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats **)(a1 + 16);
    *(void *)(a1 + 16) = v18;
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTagTodaySectionSpecificConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 0u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 48) |= 1u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_51;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_53;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_51:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_53:
          uint64_t v41 = 8;
          goto LABEL_66;
        case 1u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 48) |= 2u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_57;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_57:
          uint64_t v41 = 16;
          goto LABEL_66;
        case 2u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          *(unsigned char *)(a1 + 48) |= 8u;
          while (2)
          {
            uint64_t v32 = *v3;
            unint64_t v33 = *(void *)(a2 + v32);
            if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
              *(void *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                BOOL v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v31) = 0;
          }
LABEL_61:
          *(_DWORD *)(a1 + 32) = v31;
          continue;
        case 3u:
          uint64_t String = (void *)PBReaderReadString();

          *(void *)(a1 + 40) = String;
          continue;
        case 4u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 48) |= 4u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v38 = *v3;
        unint64_t v39 = *(void *)(a2 + v38);
        if (v39 == -1 || v39 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
        *(void *)(a2 + v38) = v39 + 1;
        v19 |= (unint64_t)(v40 & 0x7F) << v36;
        if ((v40 & 0x80) == 0) {
          goto LABEL_63;
        }
        v36 += 7;
        BOOL v14 = v37++ >= 9;
        if (v14)
        {
          uint64_t v19 = 0;
          goto LABEL_65;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_63:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v19 = 0;
      }
LABEL_65:
      uint64_t v41 = 24;
LABEL_66:
      *(void *)(a1 + v41) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAVAssetReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t String = (void *)PBReaderReadString();

          id v18 = String;
          uint64_t v19 = 32;
          goto LABEL_24;
        case 2u:
          unint64_t v21 = (void *)PBReaderReadString();

          id v18 = v21;
          uint64_t v19 = 40;
          goto LABEL_24;
        case 3u:
          Data = (void *)PBReaderReadData();

          id v18 = Data;
          uint64_t v19 = 16;
LABEL_24:
          *(void *)(a1 + v19) = v18;
          continue;
        case 4u:
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          *(unsigned char *)(a1 + 48) |= 1u;
          break;
        case 5u:
          uint64_t v29 = PBReaderReadString();
          if (v29) {
            [(id)a1 addContentKeyIdentifiers:v29];
          }
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v26 = *v3;
        unint64_t v27 = *(void *)(a2 + v26);
        if (v27 == -1 || v27 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
        *(void *)(a2 + v26) = v27 + 1;
        v25 |= (unint64_t)(v28 & 0x7F) << v23;
        if ((v28 & 0x80) == 0) {
          goto LABEL_35;
        }
        v23 += 7;
        BOOL v14 = v24++ >= 9;
        if (v14)
        {
          uint64_t v25 = 0;
          goto LABEL_37;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v25 = 0;
      }
LABEL_37:
      *(void *)(a1 + 8) = v25;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAudioConfigRecordReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = objc_alloc_init(NTPBRecordBase);

              a1[1] = v17;
              if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2))
              {
                PBReaderRecallMark();
                goto LABEL_33;
              }
              return 0;
            case 2u:
              uint64_t String = (void *)PBReaderReadString();

              id v20 = String;
              uint64_t v21 = 2;
              goto LABEL_32;
            case 3u:
              char v22 = (void *)PBReaderReadString();

              id v20 = v22;
              uint64_t v21 = 4;
              goto LABEL_32;
            case 4u:
              char v23 = (void *)PBReaderReadString();

              id v20 = v23;
              uint64_t v21 = 5;
              goto LABEL_32;
            case 5u:
              uint64_t v24 = PBReaderReadString();
              if (v24) {
                [a1 addHeroArticleIDs:v24];
              }
              goto LABEL_33;
            case 6u:
              uint64_t v25 = (void *)PBReaderReadString();

              id v20 = v25;
              uint64_t v21 = 8;
              goto LABEL_32;
            case 7u:
              uint64_t v26 = (void *)PBReaderReadString();

              id v20 = v26;
              uint64_t v21 = 6;
              goto LABEL_32;
            case 8u:
              unint64_t v27 = (void *)PBReaderReadString();

              id v20 = v27;
              uint64_t v21 = 3;
LABEL_32:
              a1[v21] = v20;
              goto LABEL_33;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_33:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBRecommendationProviderReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        id v18 = (NTPBTagRecommendation *)a1[1];
        a1[1] = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    id v18 = objc_alloc_init(NTPBTagRecommendation);
    [a1 addTagRecommendations:v18];
    if (!PBReaderPlaceMark() || (NTPBTagRecommendationReadFrom((uint64_t)v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleSessionResignReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    char v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_38;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 48) |= 2u;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_42;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_42:
          *(_DWORD *)(a1 + 24) = v22;
          continue;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 40;
          goto LABEL_38;
        case 4u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 48) |= 1u;
          break;
        case 5u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 32;
LABEL_38:
          uint64_t v32 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
        *(void *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0) {
          goto LABEL_44;
        }
        v26 += 7;
        BOOL v14 = v27++ >= 9;
        if (v14)
        {
          uint64_t v28 = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v28 = 0;
      }
LABEL_46:
      *(void *)(a1 + 8) = v28;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBAppSessionResumeReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  v6 = (int *)MEMORY[0x263F62268];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t NTPBArticleSessionResumeReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_38;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 48) |= 2u;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_42;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_42:
          *(_DWORD *)(a1 + 24) = v22;
          continue;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 40;
          goto LABEL_38;
        case 4u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 48) |= 1u;
          break;
        case 5u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 32;
LABEL_38:
          uint64_t v32 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
        *(void *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0) {
          goto LABEL_44;
        }
        v26 += 7;
        BOOL v14 = v27++ >= 9;
        if (v14)
        {
          uint64_t v28 = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v28 = 0;
      }
LABEL_46:
      *(void *)(a1 + 8) = v28;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBAppSessionResignReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  v6 = (int *)MEMORY[0x263F62268];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t NTPBNotificationPoolIndexReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 100)
      {
        uint64_t v19 = objc_alloc_init(NTPBNotificationPoolIndexEntry);
        [(id)a1 addEntries:v19];

        if (!PBReaderPlaceMark() || (NTPBNotificationPoolIndexEntryReadFrom((uint64_t)v19, a2) & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v17 == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if ((v25 & 0x80) == 0) {
              goto LABEL_37;
            }
            v20 += 7;
            BOOL v14 = v21++ >= 9;
            if (v14)
            {
              uint64_t v22 = 0;
              goto LABEL_39;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_39:
          *(unsigned char *)(a1 + 24) = v22 != 0;
          continue;
        }
        if (v17 != 1)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        uint64_t v18 = objc_alloc_init(NTPBDate);

        *(void *)(a1 + 8) = v18;
        if (!PBReaderPlaceMark() || (NTPBDateReadFrom((uint64_t)v18, a2) & 1) == 0) {
          return 0;
        }
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBAlternateHeadlineReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 16) |= 2u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4))
          {
            unint64_t v24 = &OBJC_IVAR___NTPBAlternateHeadline__articleHeadlineTreatmentState;
            goto LABEL_38;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            break;
          }
          v17 += 7;
          BOOL v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            unint64_t v24 = &OBJC_IVAR___NTPBAlternateHeadline__articleHeadlineTreatmentState;
            goto LABEL_41;
          }
        }
        unint64_t v24 = &OBJC_IVAR___NTPBAlternateHeadline__articleHeadlineTreatmentState;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_42:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v25 = 0;
    unsigned int v26 = 0;
    uint64_t v19 = 0;
    *(unsigned char *)(a1 + 16) |= 1u;
    while (1)
    {
      uint64_t v27 = *v3;
      unint64_t v28 = *(void *)(a2 + v27);
      if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
      *(void *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        unint64_t v24 = &OBJC_IVAR___NTPBAlternateHeadline__articleHeadlineTreatmentId;
        goto LABEL_39;
      }
      v25 += 7;
      BOOL v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        unint64_t v24 = &OBJC_IVAR___NTPBAlternateHeadline__articleHeadlineTreatmentId;
        goto LABEL_41;
      }
    }
    unint64_t v24 = &OBJC_IVAR___NTPBAlternateHeadline__articleHeadlineTreatmentId;
LABEL_38:
    *(unsigned char *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBScoringCohortReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          uint64_t v12 = *(void *)(a2 + v11);
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v16) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = (v10 & 7) == 4;
        }
        if (!v17)
        {
          switch((v10 >> 3))
          {
            case 1u:
              uint64_t String = (void *)PBReaderReadString();

              *(void *)(a1 + 32) = String;
              goto LABEL_38;
            case 2u:
              *(unsigned char *)(a1 + 40) |= 1u;
              uint64_t v25 = *v3;
              unint64_t v26 = *(void *)(a2 + v25);
              if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v26);
                *(void *)(a2 + v25) = v26 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v21 = 0;
              }
              uint64_t v27 = 8;
              goto LABEL_37;
            case 3u:
              *(unsigned char *)(a1 + 40) |= 4u;
              uint64_t v19 = *v3;
              unint64_t v20 = *(void *)(a2 + v19);
              if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v20);
                *(void *)(a2 + v19) = v20 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v21 = 0;
              }
              uint64_t v27 = 24;
              goto LABEL_37;
            case 4u:
              *(unsigned char *)(a1 + 40) |= 2u;
              uint64_t v22 = *v3;
              unint64_t v23 = *(void *)(a2 + v22);
              if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v23);
                *(void *)(a2 + v22) = v23 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v21 = 0;
              }
              uint64_t v27 = 16;
LABEL_37:
              *(void *)(a1 + v27) = v21;
              goto LABEL_38;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_38:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBVideoGroupsConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 60) |= 0x100u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_85;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_87;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_85:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_87:
          BOOL v67 = v19 != 0;
          uint64_t v68 = 57;
          goto LABEL_104;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(_WORD *)(a1 + 60) |= 8u;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_91:
          uint64_t v69 = 32;
          goto LABEL_122;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v26 = 0;
          *(_WORD *)(a1 + 60) |= 0x10u;
          while (2)
          {
            uint64_t v32 = *v3;
            unint64_t v33 = *(void *)(a2 + v32);
            if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
              *(void *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                BOOL v14 = v31++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_95:
          uint64_t v69 = 40;
          goto LABEL_122;
        case 4u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v26 = 0;
          *(_WORD *)(a1 + 60) |= 1u;
          while (2)
          {
            uint64_t v37 = *v3;
            unint64_t v38 = *(void *)(a2 + v37);
            if (v38 == -1 || v38 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
              *(void *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                BOOL v14 = v36++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_99:
          uint64_t v69 = 8;
          goto LABEL_122;
        case 5u:
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v42 = 0;
          *(_WORD *)(a1 + 60) |= 0x80u;
          while (2)
          {
            uint64_t v43 = *v3;
            unint64_t v44 = *(void *)(a2 + v43);
            if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
              *(void *)(a2 + v43) = v44 + 1;
              v42 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                BOOL v14 = v41++ >= 9;
                if (v14)
                {
                  uint64_t v42 = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v42 = 0;
          }
LABEL_103:
          BOOL v67 = v42 != 0;
          uint64_t v68 = 56;
LABEL_104:
          *(unsigned char *)(a1 + v68) = v67;
          continue;
        case 6u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          *(_WORD *)(a1 + 60) |= 0x40u;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v14 = v47++ >= 9;
                if (v14)
                {
                  LODWORD(v48) = 0;
                  goto LABEL_108;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v48) = 0;
          }
LABEL_108:
          uint64_t v70 = 52;
          goto LABEL_113;
        case 7u:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v48 = 0;
          *(_WORD *)(a1 + 60) |= 0x20u;
          while (2)
          {
            uint64_t v54 = *v3;
            unint64_t v55 = *(void *)(a2 + v54);
            if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v55 + 1;
              v48 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                BOOL v14 = v53++ >= 9;
                if (v14)
                {
                  LODWORD(v48) = 0;
                  goto LABEL_112;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v48) = 0;
          }
LABEL_112:
          uint64_t v70 = 48;
LABEL_113:
          *(_DWORD *)(a1 + v70) = v48;
          continue;
        case 8u:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v26 = 0;
          *(_WORD *)(a1 + 60) |= 4u;
          while (2)
          {
            uint64_t v59 = *v3;
            unint64_t v60 = *(void *)(a2 + v59);
            if (v60 == -1 || v60 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
              *(void *)(a2 + v59) = v60 + 1;
              v26 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                BOOL v14 = v58++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_117;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_117:
          uint64_t v69 = 24;
          goto LABEL_122;
        case 9u:
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v26 = 0;
          *(_WORD *)(a1 + 60) |= 2u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v64 = *v3;
        unint64_t v65 = *(void *)(a2 + v64);
        if (v65 == -1 || v65 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v66 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
        *(void *)(a2 + v64) = v65 + 1;
        v26 |= (unint64_t)(v66 & 0x7F) << v62;
        if ((v66 & 0x80) == 0) {
          goto LABEL_119;
        }
        v62 += 7;
        BOOL v14 = v63++ >= 9;
        if (v14)
        {
          uint64_t v26 = 0;
          goto LABEL_121;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_119:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v26 = 0;
      }
LABEL_121:
      uint64_t v69 = 16;
LABEL_122:
      *(void *)(a1 + v69) = v26;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBHeadlineBackingElementReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 24;
        goto LABEL_24;
      }
      if (v17 == 1)
      {
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 8;
LABEL_24:
        uint64_t v20 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v18 = PBReaderReadData();
    uint64_t v19 = 16;
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBSportsEventRecordReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v17 = objc_alloc_init(NTPBRecordBase);

          *(void *)(a1 + 24) = v17;
          if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2))
          {
            PBReaderRecallMark();
            continue;
          }
          return 0;
        case 2u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 100) |= 1u;
          while (1)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_54;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              uint64_t v21 = 0;
              goto LABEL_56;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_54:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v21 = 0;
          }
LABEL_56:
          *(void *)(a1 + 8) = v21;
          continue;
        case 3u:
          uint64_t String = (void *)PBReaderReadString();

          id v26 = String;
          uint64_t v27 = 88;
          goto LABEL_39;
        case 4u:
          uint64_t v28 = PBReaderReadString();
          if (v28) {
            [(id)a1 addEventCompetitorTagIDs:v28];
          }
          continue;
        case 5u:
          char v29 = (void *)PBReaderReadString();

          id v26 = v29;
          uint64_t v27 = 64;
          goto LABEL_39;
        case 6u:
          char v30 = (void *)PBReaderReadString();

          id v26 = v30;
          uint64_t v27 = 40;
          goto LABEL_39;
        case 7u:
          unsigned int v31 = (void *)PBReaderReadString();

          id v26 = v31;
          uint64_t v27 = 72;
          goto LABEL_39;
        case 8u:
          uint64_t v32 = (void *)PBReaderReadString();

          id v26 = v32;
          uint64_t v27 = 80;
          goto LABEL_39;
        case 9u:
          unint64_t v33 = (void *)PBReaderReadString();

          id v26 = v33;
          uint64_t v27 = 56;
LABEL_39:
          *(void *)(a1 + v27) = v26;
          continue;
        case 0xAu:
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v36 = 0;
          *(unsigned char *)(a1 + 100) |= 2u;
          break;
        case 0xBu:
          uint64_t v40 = PBReaderReadString();
          if (v40) {
            [(id)a1 addBlockedStorefrontIDs:v40];
          }
          continue;
        case 0xCu:
          uint64_t v41 = PBReaderReadString();
          if (v41) {
            [(id)a1 addAllowedStorefrontIDs:v41];
          }
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v37 = *v3;
        unint64_t v38 = *(void *)(a2 + v37);
        if (v38 == -1 || v38 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
        *(void *)(a2 + v37) = v38 + 1;
        v36 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          goto LABEL_58;
        }
        v34 += 7;
        BOOL v14 = v35++ >= 9;
        if (v14)
        {
          uint64_t v36 = 0;
          goto LABEL_60;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_58:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v36 = 0;
      }
LABEL_60:
      *(unsigned char *)(a1 + 96) = v36 != 0;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTopOfFeedModuleExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_46;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_48;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_48:
          uint64_t v37 = 16;
          goto LABEL_57;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 4u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_52:
          uint64_t v37 = 36;
          goto LABEL_57;
        case 3u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          break;
        case 4u:
          uint64_t v34 = PBReaderReadData();
          uint64_t v35 = 24;
          goto LABEL_44;
        case 5u:
          uint64_t v34 = PBReaderReadData();
          uint64_t v35 = 8;
LABEL_44:
          uint64_t v36 = *(void **)(a1 + v35);
          *(void *)(a1 + v35) = v34;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v31 = *v3;
        unint64_t v32 = *(void *)(a2 + v31);
        if (v32 == -1 || v32 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
        *(void *)(a2 + v31) = v32 + 1;
        v19 |= (unint64_t)(v33 & 0x7F) << v29;
        if ((v33 & 0x80) == 0) {
          goto LABEL_54;
        }
        v29 += 7;
        BOOL v14 = v30++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_56;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_54:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_56:
      uint64_t v37 = 32;
LABEL_57:
      *(_DWORD *)(a1 + v37) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBInAppWebEmbedExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 84) |= 0x10u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_90;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_92;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_90:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_92:
          uint64_t v67 = 44;
          goto LABEL_125;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 84) |= 0x80u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_96;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_96:
          uint64_t v67 = 64;
          goto LABEL_125;
        case 3u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 84) |= 0x20u;
          while (2)
          {
            uint64_t v31 = *v3;
            unint64_t v32 = *(void *)(a2 + v31);
            if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
              *(void *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                BOOL v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_100;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_100:
          uint64_t v67 = 56;
          goto LABEL_125;
        case 4u:
          uint64_t v34 = PBReaderReadData();
          uint64_t v35 = 48;
          goto LABEL_60;
        case 5u:
          uint64_t v34 = PBReaderReadData();
          uint64_t v35 = 32;
          goto LABEL_60;
        case 6u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 84) |= 0x100u;
          while (2)
          {
            uint64_t v38 = *v3;
            unint64_t v39 = *(void *)(a2 + v38);
            if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_104;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_104:
          uint64_t v67 = 80;
          goto LABEL_125;
        case 7u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 16;
          goto LABEL_60;
        case 8u:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 84) |= 0x40u;
          while (2)
          {
            uint64_t v43 = *v3;
            unint64_t v44 = *(void *)(a2 + v43);
            if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
              *(void *)(a2 + v43) = v44 + 1;
              v19 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                BOOL v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_108;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_108:
          uint64_t v67 = 60;
          goto LABEL_125;
        case 9u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 72;
LABEL_60:
          char v46 = *(void **)(a1 + v35);
          *(void *)(a1 + v35) = v34;

          continue;
        case 0xAu:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 84) |= 8u;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v19 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                BOOL v14 = v48++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_112;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_112:
          uint64_t v67 = 40;
          goto LABEL_125;
        case 0xBu:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 84) |= 4u;
          while (2)
          {
            uint64_t v54 = *v3;
            unint64_t v55 = *(void *)(a2 + v54);
            if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v55 + 1;
              v19 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                BOOL v14 = v53++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_116;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_116:
          uint64_t v67 = 28;
          goto LABEL_125;
        case 0xCu:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 84) |= 2u;
          while (2)
          {
            uint64_t v59 = *v3;
            unint64_t v60 = *(void *)(a2 + v59);
            if (v60 == -1 || v60 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
              *(void *)(a2 + v59) = v60 + 1;
              v19 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                BOOL v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_120:
          uint64_t v67 = 24;
          goto LABEL_125;
        case 0xDu:
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 84) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v64 = *v3;
        unint64_t v65 = *(void *)(a2 + v64);
        if (v65 == -1 || v65 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v66 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
        *(void *)(a2 + v64) = v65 + 1;
        v19 |= (unint64_t)(v66 & 0x7F) << v62;
        if ((v66 & 0x80) == 0) {
          goto LABEL_122;
        }
        v62 += 7;
        BOOL v14 = v63++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_124;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_122:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_124:
      uint64_t v67 = 8;
LABEL_125:
      *(_DWORD *)(a1 + v67) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPurchaseOffersItemReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 16) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        unsigned int v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBWeightedTagIDReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v21 = *v3;
        unint64_t v22 = *(void *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(void *)(a2 + *v4))
        {
          int v23 = *(_DWORD *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          int v23 = 0;
        }
        *(_DWORD *)(a1 + 16) = v23;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v19 = PBReaderReadString();
        unsigned int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBNotificationItemReadFrom(uint64_t a1, unsigned char *a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)&a2[*MEMORY[0x263F62298]] >= *(void *)&a2[*MEMORY[0x263F62288]]) {
    return a2[*v5] == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (a2[*v5]) {
      return a2[*v5] == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)&a2[v11];
      if (v12 == -1 || v12 >= *(void *)&a2[*v4]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a2[*v7] + v12);
      *(void *)&a2[v11] = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = a2[*v5];
        goto LABEL_14;
      }
    }
    a2[*v5] = 1;
LABEL_12:
    int v15 = a2[*v5];
    if (a2[*v5]) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return a2[*v5] == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t String = (void *)PBReaderReadString();

        id v18 = String;
        uint64_t v19 = 48;
        goto LABEL_54;
      case 2u:
        uint64_t v21 = objc_alloc_init(NTPBFeedItem);

        *(void *)(a1 + 40) = v21;
        if (!PBReaderPlaceMark() || (NTPBFeedItemReadFrom((uint64_t)v21, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_29;
      case 3u:
        unint64_t v22 = (void *)PBReaderReadString();

        id v18 = v22;
        uint64_t v19 = 24;
        goto LABEL_54;
      case 4u:
        int v23 = (void *)PBReaderReadString();

        id v18 = v23;
        uint64_t v19 = 32;
        goto LABEL_54;
      case 5u:
        char v24 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityScores);

        *(void *)(a1 + 56) = v24;
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityScoresReadFrom(v24, (uint64_t)a2) & 1) != 0)
        {
LABEL_29:
          PBReaderRecallMark();
LABEL_68:
          if (*(void *)&a2[*v3] >= *(void *)&a2[*v4]) {
            return a2[*v5] == 0;
          }
          continue;
        }
        return 0;
      case 6u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        *(unsigned char *)(a1 + 84) |= 4u;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)&a2[v28];
          if (v29 == -1 || v29 >= *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)&a2[*v7] + v29);
            *(void *)&a2[v28] = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_58;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          LODWORD(v27) = 0;
        }
LABEL_58:
        uint64_t v44 = 80;
        goto LABEL_67;
      case 7u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        *(unsigned char *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v34 = *v3;
          unint64_t v35 = *(void *)&a2[v34];
          if (v35 == -1 || v35 >= *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)&a2[*v7] + v35);
            *(void *)&a2[v34] = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                uint64_t v33 = 0;
                goto LABEL_62;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v33 = 0;
        }
LABEL_62:
        *(void *)(a1 + 8) = v33;
        goto LABEL_68;
      case 8u:
        uint64_t v37 = PBReaderReadString();
        if (v37) {
          [(id)a1 addSuppressIfFollowingTagIDs:v37];
        }
        goto LABEL_68;
      case 9u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v27 = 0;
        *(unsigned char *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v40 = *v3;
          unint64_t v41 = *(void *)&a2[v40];
          if (v41 == -1 || v41 >= *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)&a2[*v7] + v41);
            *(void *)&a2[v40] = v41 + 1;
            v27 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          LODWORD(v27) = 0;
        }
LABEL_66:
        uint64_t v44 = 64;
LABEL_67:
        *(_DWORD *)(a1 + v44) = v27;
        goto LABEL_68;
      case 0xAu:
        uint64_t v43 = (void *)PBReaderReadString();

        id v18 = v43;
        uint64_t v19 = 16;
LABEL_54:
        *(void *)(a1 + v19) = v18;
        goto LABEL_68;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_68;
    }
  }
}

uint64_t NTPBNotificationPoolIndexEntryReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 32) |= 4u;
        uint64_t v26 = *v3;
        unint64_t v27 = *(void *)(a2 + v26);
        if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v28 = *(void *)(*(void *)(a2 + *v7) + v27);
          *(void *)(a2 + v26) = v27 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v28 = 0;
        }
        *(void *)(a1 + 24) = v28;
      }
      else
      {
        if (v18 == 2)
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v31 = *v3;
            uint64_t v32 = *(void *)(a2 + v31);
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)(a2 + *v4)) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v21 |= (unint64_t)(v34 & 0x7F) << v29;
            if ((v34 & 0x80) == 0) {
              goto LABEL_45;
            }
            v29 += 7;
            BOOL v15 = v30++ >= 9;
            if (v15)
            {
              uint64_t v21 = 0;
              goto LABEL_47;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v21 = 0;
          }
LABEL_47:
          uint64_t v36 = 8;
        }
        else
        {
          if (v18 != 1)
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (1)
          {
            uint64_t v22 = *v3;
            uint64_t v23 = *(void *)(a2 + v22);
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_41;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v21 = 0;
              goto LABEL_43;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v21 = 0;
          }
LABEL_43:
          uint64_t v36 = 16;
        }
        *(void *)(a1 + v36) = v21;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBLocationRecommendationMappingReadFrom(unsigned char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v22 = objc_alloc_init(NTPBRecommendationProvider);
        [a1 addRecommendationProviders:v22];
        if (!PBReaderPlaceMark() || !NTPBRecommendationProviderReadFrom(v22, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v18 == 2)
        {
          a1[32] |= 2u;
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v21 = 0;
          }
          uint64_t v26 = 16;
        }
        else
        {
          if (v18 != 1)
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          a1[32] |= 1u;
          uint64_t v19 = *v3;
          unint64_t v20 = *(void *)(a2 + v19);
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v20);
            *(void *)(a2 + v19) = v20 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v21 = 0;
          }
          uint64_t v26 = 8;
        }
        *(void *)&a1[v26] = v21;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTagMetadataReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        *(unsigned char *)(a1 + 32) |= 1u;
        uint64_t v18 = *v3;
        unint64_t v19 = *(void *)(a2 + v18);
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(void *)(a2 + *v4))
        {
          int v20 = *(_DWORD *)(*(void *)(a2 + *v7) + v19);
          *(void *)(a2 + v18) = v19 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v20 = 0;
        }
        uint64_t v34 = 16;
        goto LABEL_50;
      case 2u:
        *(unsigned char *)(a1 + 32) |= 8u;
        uint64_t v22 = *v3;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)(a2 + *v4))
        {
          int v20 = *(_DWORD *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v20 = 0;
        }
        uint64_t v34 = 28;
        goto LABEL_50;
      case 3u:
        *(unsigned char *)(a1 + 32) |= 4u;
        uint64_t v24 = *v3;
        unint64_t v25 = *(void *)(a2 + v24);
        if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(void *)(a2 + *v4))
        {
          int v20 = *(_DWORD *)(*(void *)(a2 + *v7) + v25);
          *(void *)(a2 + v24) = v25 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v20 = 0;
        }
        uint64_t v34 = 24;
LABEL_50:
        *(_DWORD *)(a1 + v34) = v20;
        goto LABEL_51;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 32) |= 2u;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                LODWORD(v28) = 0;
                goto LABEL_43;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v28) = 0;
        }
LABEL_43:
        *(_DWORD *)(a1 + 20) = v28;
        goto LABEL_51;
      case 5u:
        unint64_t v33 = objc_alloc_init(NTPBContentAndRelevanceInfo);
        objc_storeStrong((id *)(a1 + 8), v33);
        if (PBReaderPlaceMark() && NTPBContentAndRelevanceInfoReadFrom((uint64_t)v33, a2))
        {
          PBReaderRecallMark();

LABEL_51:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_51;
    }
  }
}

BOOL NTPBSectionSlotCostInfoReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 5)
      {
        *(unsigned char *)(a1 + 32) |= 2u;
        uint64_t v22 = *v3;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v21 = 0;
        }
        char v26 = &OBJC_IVAR___NTPBSectionSlotCostInfo__sectionFooterSlotCost;
        goto LABEL_38;
      }
      if (v18 == 4) {
        break;
      }
      if (v18 == 1)
      {
        *(unsigned char *)(a1 + 32) |= 4u;
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v21 = 0;
        }
        char v26 = &OBJC_IVAR___NTPBSectionSlotCostInfo__sectionTitleSlotCost;
LABEL_38:
        *(void *)(a1 + *v26) = v21;
        goto LABEL_39;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_39:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    *(unsigned char *)(a1 + 32) |= 1u;
    uint64_t v24 = *v3;
    unint64_t v25 = *(void *)(a2 + v24);
    if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)(a2 + *v4))
    {
      uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v25);
      *(void *)(a2 + v24) = v25 + 8;
    }
    else
    {
      *(unsigned char *)(a2 + *v5) = 1;
      uint64_t v21 = 0;
    }
    char v26 = &OBJC_IVAR___NTPBSectionSlotCostInfo__headlineSlotCost;
    goto LABEL_38;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBLRUCacheEntryReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 32) |= 1u;
        while (1)
        {
          uint64_t v24 = *v3;
          unint64_t v25 = *(void *)(a2 + v24);
          if (v25 == -1 || v25 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
          *(void *)(a2 + v24) = v25 + 1;
          v23 |= (unint64_t)(v26 & 0x7F) << v21;
          if ((v26 & 0x80) == 0) {
            goto LABEL_34;
          }
          v21 += 7;
          BOOL v14 = v22++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
LABEL_36:
        *(void *)(a1 + 8) = v23;
      }
      else
      {
        if (v17 == 2)
        {
          Data = (void *)PBReaderReadData();

          id v19 = Data;
          uint64_t v20 = 24;
        }
        else
        {
          if (v17 != 1)
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          unint64_t v18 = (void *)PBReaderReadData();

          id v19 = v18;
          uint64_t v20 = 16;
        }
        *(void *)(a1 + v20) = v19;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleViewWatchReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 44) |= 1u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_40;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_42;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_42:
          *(_DWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 24;
          goto LABEL_31;
        case 3u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 16;
          goto LABEL_31;
        case 4u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 32;
LABEL_31:
          char v26 = *(void **)(a1 + v25);
          *(void *)(a1 + v25) = v24;

          continue;
        case 5u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          *(unsigned char *)(a1 + 44) |= 2u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v30 = *v3;
        unint64_t v31 = *(void *)(a2 + v30);
        if (v31 == -1 || v31 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
        *(void *)(a2 + v30) = v31 + 1;
        v29 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0) {
          goto LABEL_44;
        }
        v27 += 7;
        BOOL v14 = v28++ >= 9;
        if (v14)
        {
          uint64_t v29 = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v29 = 0;
      }
LABEL_46:
      *(unsigned char *)(a1 + 40) = v29 != 0;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAppSessionStartWatchReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 12) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_31:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBAbsolutePersonalizedSectionPresenceConfigReadFrom(void *a1, void *a2)
{
  v3 = a1;
  v4 = a2;
  v5 = (int *)MEMORY[0x263F62298];
  v6 = (int *)MEMORY[0x263F62288];
  int v7 = (int *)MEMORY[0x263F62270];
  if (*(void *)&v4[*MEMORY[0x263F62298]] < *(void *)&v4[*MEMORY[0x263F62288]])
  {
    char v8 = (int *)MEMORY[0x263F62268];
    do
    {
      if (v4[*v7]) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v5;
        uint64_t v13 = *(void *)&v4[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v4[*v6]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v4[*v8] + v13);
        *(void *)&v4[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          int v17 = v4[*v7];
          goto LABEL_14;
        }
      }
      v4[*v7] = 1;
LABEL_12:
      int v17 = v4[*v7];
      if (v4[*v7]) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v17 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          v3[40] |= 2u;
          uint64_t v19 = *v5;
          unint64_t v20 = *(void *)&v4[v19];
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)&v4[*v6])
          {
            uint64_t v21 = *(void *)(*(void *)&v4[*v8] + v20);
            *(void *)&v4[v19] = v20 + 8;
          }
          else
          {
            v4[*v7] = 1;
            uint64_t v21 = 0;
          }
          uint64_t v33 = 16;
          goto LABEL_47;
        case 2u:
          v3[40] |= 1u;
          uint64_t v22 = *v5;
          unint64_t v23 = *(void *)&v4[v22];
          if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)&v4[*v6])
          {
            uint64_t v21 = *(void *)(*(void *)&v4[*v8] + v23);
            *(void *)&v4[v22] = v23 + 8;
          }
          else
          {
            v4[*v7] = 1;
            uint64_t v21 = 0;
          }
          uint64_t v33 = 8;
          goto LABEL_47;
        case 3u:
          v3[40] |= 4u;
          uint64_t v24 = *v5;
          unint64_t v25 = *(void *)&v4[v24];
          if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)&v4[*v6])
          {
            uint64_t v21 = *(void *)(*(void *)&v4[*v8] + v25);
            *(void *)&v4[v24] = v25 + 8;
          }
          else
          {
            v4[*v7] = 1;
            uint64_t v21 = 0;
          }
          uint64_t v33 = 24;
LABEL_47:
          *(void *)&v3[v33] = v21;
          continue;
        case 4u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          v3[40] |= 8u;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
          BOOL v35 = 0;
          goto LABEL_50;
      }
      while (1)
      {
        uint64_t v29 = *v5;
        uint64_t v30 = *(void *)&v4[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v4[*v6]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v4[*v8] + v30);
        *(void *)&v4[v29] = v31;
        v28 |= (unint64_t)(v32 & 0x7F) << v26;
        if ((v32 & 0x80) == 0) {
          goto LABEL_38;
        }
        v26 += 7;
        BOOL v16 = v27++ >= 9;
        if (v16)
        {
          uint64_t v28 = 0;
          goto LABEL_40;
        }
      }
      v4[*v7] = 1;
LABEL_38:
      if (v4[*v7]) {
        uint64_t v28 = 0;
      }
LABEL_40:
      *((void *)v3 + 4) = v28;
    }
    while (*(void *)&v4[*v5] < *(void *)&v4[*v6]);
  }
  BOOL v35 = v4[*v7] == 0;
LABEL_50:

  return v35;
}

uint64_t NTPBIssueTocViewReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        int v17 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 16), v17);
        if PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v17, a2)) {
          goto LABEL_29;
        }
        goto LABEL_58;
      case 2u:
        int v17 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 24), v17);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_58;
        }
        goto LABEL_29;
      case 3u:
        int v17 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 32), v17);
        if PBReaderPlaceMark() && (NTPBIssueViewDataReadFrom((uint64_t)v17, a2))
        {
LABEL_29:
          PBReaderRecallMark();

LABEL_56:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_58:

        return 0;
      case 4u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 8;
        goto LABEL_40;
      case 5u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v24 = *v3;
          unint64_t v25 = *(void *)(a2 + v24);
          if (v25 == -1 || v25 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if (v26 < 0)
            {
              v21 += 7;
              BOOL v14 = v22++ >= 9;
              if (v14)
              {
                LODWORD(v23) = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + 48) = v23;
        goto LABEL_56;
      case 6u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 40;
        goto LABEL_40;
      case 7u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 56;
LABEL_40:
        unsigned int v27 = *(void **)(a1 + v20);
        *(void *)(a1 + v20) = v19;

        goto LABEL_56;
      case 8u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v31 = *v3;
          unint64_t v32 = *(void *)(a2 + v31);
          if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v32 + 1;
            v30 |= (unint64_t)(v33 & 0x7F) << v28;
            if (v33 < 0)
            {
              v28 += 7;
              BOOL v14 = v29++ >= 9;
              if (v14)
              {
                uint64_t v30 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_55:
        *(unsigned char *)(a1 + 64) = v30 != 0;
        goto LABEL_56;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_56;
    }
  }
}

uint64_t NTPBForYouConfigRecordReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              int v17 = objc_alloc_init(NTPBRecordBase);

              a1[1] = v17;
              if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2))
              {
                PBReaderRecallMark();
                goto LABEL_35;
              }
              return 0;
            case 2u:
              uint64_t String = (void *)PBReaderReadString();

              id v19 = String;
              uint64_t v20 = 2;
              goto LABEL_34;
            case 3u:
              char v21 = (void *)PBReaderReadString();

              id v19 = v21;
              uint64_t v20 = 8;
              goto LABEL_34;
            case 5u:
              uint64_t v23 = PBReaderReadString();
              if (v23) {
                [a1 addEditorialArticleListIDs:v23];
              }
              goto LABEL_35;
            case 6u:
              uint64_t v24 = PBReaderReadString();
              if (v24) {
                [a1 addEditorialSectionTagIDs:v24];
              }
              goto LABEL_35;
            case 0xCu:
              unint64_t v25 = (void *)PBReaderReadString();

              id v19 = v25;
              uint64_t v20 = 5;
              goto LABEL_34;
            case 0xDu:
              uint64_t v26 = PBReaderReadString();
              if (v26) {
                [a1 addTodayFeedTopStoriesArticleIDs:v26];
              }
              goto LABEL_35;
            case 0xEu:
              unsigned int v27 = (void *)PBReaderReadString();

              id v19 = v27;
              uint64_t v20 = 6;
LABEL_34:
              a1[v20] = v19;
              goto LABEL_35;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_35:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBChannelMuteUnmuteReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 176) |= 0x20u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_95;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_97;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_95:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_97:
          uint64_t v65 = 168;
          goto LABEL_118;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 176) |= 0x10u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_101;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_101:
          uint64_t v65 = 128;
          goto LABEL_118;
        case 3u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 16;
          goto LABEL_93;
        case 4u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 152;
          goto LABEL_93;
        case 5u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 32;
          goto LABEL_93;
        case 6u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 48;
          goto LABEL_93;
        case 7u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 160;
          goto LABEL_93;
        case 8u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 176) |= 2u;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_105;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_105:
          uint64_t v65 = 88;
          goto LABEL_118;
        case 9u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 72;
          goto LABEL_93;
        case 0xAu:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 104;
          goto LABEL_93;
        case 0xBu:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v38 = 0;
          *(unsigned char *)(a1 + 176) |= 0x80u;
          while (2)
          {
            uint64_t v39 = *v3;
            unint64_t v40 = *(void *)(a2 + v39);
            if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
              *(void *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_109;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
LABEL_109:
          BOOL v66 = v38 != 0;
          uint64_t v67 = 173;
          goto LABEL_123;
        case 0xCu:
          uint64_t v29 = PBReaderReadData();
          uint64_t v30 = 24;
          goto LABEL_93;
        case 0xDu:
          uint64_t v29 = PBReaderReadData();
          uint64_t v30 = 40;
          goto LABEL_93;
        case 0xEu:
          uint64_t v29 = PBReaderReadData();
          uint64_t v30 = 96;
          goto LABEL_93;
        case 0xFu:
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 176) |= 8u;
          while (2)
          {
            uint64_t v44 = *v3;
            unint64_t v45 = *(void *)(a2 + v44);
            if (v45 == -1 || v45 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
              *(void *)(a2 + v44) = v45 + 1;
              v19 |= (unint64_t)(v46 & 0x7F) << v42;
              if (v46 < 0)
              {
                v42 += 7;
                BOOL v14 = v43++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_113;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_113:
          uint64_t v65 = 116;
          goto LABEL_118;
        case 0x10u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 56;
          goto LABEL_93;
        case 0x11u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 64;
          goto LABEL_93;
        case 0x12u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 80;
          goto LABEL_93;
        case 0x13u:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 176) |= 4u;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v19 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                BOOL v14 = v48++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_117;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_117:
          uint64_t v65 = 112;
LABEL_118:
          *(_DWORD *)(a1 + v65) = v19;
          continue;
        case 0x14u:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v54 = 0;
          *(unsigned char *)(a1 + 176) |= 0x40u;
          while (2)
          {
            uint64_t v55 = *v3;
            unint64_t v56 = *(void *)(a2 + v55);
            if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
              *(void *)(a2 + v55) = v56 + 1;
              v54 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                BOOL v14 = v53++ >= 9;
                if (v14)
                {
                  uint64_t v54 = 0;
                  goto LABEL_122;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v54 = 0;
          }
LABEL_122:
          BOOL v66 = v54 != 0;
          uint64_t v67 = 172;
LABEL_123:
          *(unsigned char *)(a1 + v67) = v66;
          continue;
        case 0x15u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 136;
          goto LABEL_93;
        case 0x16u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 144;
          goto LABEL_93;
        case 0x17u:
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v60 = 0;
          *(unsigned char *)(a1 + 176) |= 1u;
          break;
        case 0x18u:
          uint64_t v29 = PBReaderReadData();
          uint64_t v30 = 120;
LABEL_93:
          uint64_t v64 = *(void **)(a1 + v30);
          *(void *)(a1 + v30) = v29;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v61 = *v3;
        unint64_t v62 = *(void *)(a2 + v61);
        if (v62 == -1 || v62 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v63 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
        *(void *)(a2 + v61) = v62 + 1;
        v60 |= (unint64_t)(v63 & 0x7F) << v58;
        if ((v63 & 0x80) == 0) {
          goto LABEL_125;
        }
        v58 += 7;
        BOOL v14 = v59++ >= 9;
        if (v14)
        {
          uint64_t v60 = 0;
          goto LABEL_127;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_125:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v60 = 0;
      }
LABEL_127:
      *(void *)(a1 + 8) = v60;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBIssueReadingHistoryItemReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t String = (void *)PBReaderReadString();

        id v18 = String;
        uint64_t v19 = 1;
        goto LABEL_26;
      case 2u:
        unint64_t v21 = (void *)PBReaderReadString();

        id v18 = v21;
        uint64_t v19 = 2;
        goto LABEL_26;
      case 3u:
        char v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 8;
        goto LABEL_31;
      case 4u:
        char v24 = (void *)PBReaderReadString();

        id v18 = v24;
        uint64_t v19 = 7;
        goto LABEL_26;
      case 5u:
        unsigned int v25 = (void *)PBReaderReadString();

        id v18 = v25;
        uint64_t v19 = 9;
LABEL_26:
        a1[v19] = v18;
        goto LABEL_34;
      case 6u:
        char v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 3;
        goto LABEL_31;
      case 7u:
        char v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 4;
        goto LABEL_31;
      case 8u:
        char v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 5;
        goto LABEL_31;
      case 9u:
        char v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 6;
LABEL_31:
        a1[v23] = v22;
        if PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2))
        {
          PBReaderRecallMark();
LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_34;
    }
  }
}

uint64_t NTPBWidgetEngagementReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x80u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_123;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_125;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_123:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_125:
          uint64_t v84 = 128;
          goto LABEL_170;
        case 2u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 16;
          goto LABEL_121;
        case 3u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 72;
          goto LABEL_121;
        case 4u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 144;
          goto LABEL_121;
        case 5u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x200u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v19 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_129;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_129:
          uint64_t v84 = 136;
          goto LABEL_170;
        case 6u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x10u;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_133;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_133:
          uint64_t v84 = 108;
          goto LABEL_170;
        case 7u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 8u;
          while (2)
          {
            uint64_t v38 = *v3;
            unint64_t v39 = *(void *)(a2 + v38);
            if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_137;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_137:
          uint64_t v84 = 104;
          goto LABEL_170;
        case 8u:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 2u;
          while (2)
          {
            uint64_t v43 = *v3;
            unint64_t v44 = *(void *)(a2 + v43);
            if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
              *(void *)(a2 + v43) = v44 + 1;
              v19 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                BOOL v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_141;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_141:
          uint64_t v84 = 96;
          goto LABEL_170;
        case 9u:
          char v46 = PBReaderReadString();
          if (v46) {
            [(id)a1 addOtherVisibleSections:v46];
          }

          continue;
        case 0xAu:
          uint64_t v24 = PBReaderReadData();
          uint64_t v25 = 24;
          goto LABEL_121;
        case 0xBu:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x800u;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v19 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                BOOL v14 = v48++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_145:
          uint64_t v84 = 176;
          goto LABEL_170;
        case 0xCu:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 4u;
          while (2)
          {
            uint64_t v54 = *v3;
            unint64_t v55 = *(void *)(a2 + v54);
            if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v55 + 1;
              v19 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                BOOL v14 = v53++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_149:
          uint64_t v84 = 100;
          goto LABEL_170;
        case 0xDu:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 168;
          goto LABEL_121;
        case 0xEu:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x20u;
          while (2)
          {
            uint64_t v59 = *v3;
            unint64_t v60 = *(void *)(a2 + v59);
            if (v60 == -1 || v60 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
              *(void *)(a2 + v59) = v60 + 1;
              v19 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                BOOL v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_153:
          uint64_t v84 = 120;
          goto LABEL_170;
        case 0xFu:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 88;
          goto LABEL_121;
        case 0x10u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 48;
          goto LABEL_121;
        case 0x11u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 32;
          goto LABEL_121;
        case 0x12u:
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v64 = 0;
          *(_WORD *)(a1 + 180) |= 1u;
          while (2)
          {
            uint64_t v65 = *v3;
            unint64_t v66 = *(void *)(a2 + v65);
            if (v66 == -1 || v66 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
              *(void *)(a2 + v65) = v66 + 1;
              v64 |= (unint64_t)(v67 & 0x7F) << v62;
              if (v67 < 0)
              {
                v62 += 7;
                BOOL v14 = v63++ >= 9;
                if (v14)
                {
                  uint64_t v64 = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v64 = 0;
          }
LABEL_157:
          *(void *)(a1 + 8) = v64;
          continue;
        case 0x13u:
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x40u;
          while (2)
          {
            uint64_t v70 = *v3;
            unint64_t v71 = *(void *)(a2 + v70);
            if (v71 == -1 || v71 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
              *(void *)(a2 + v70) = v71 + 1;
              v19 |= (unint64_t)(v72 & 0x7F) << v68;
              if (v72 < 0)
              {
                v68 += 7;
                BOOL v14 = v69++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_161;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_161:
          uint64_t v84 = 124;
          goto LABEL_170;
        case 0x14u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 112;
          goto LABEL_121;
        case 0x15u:
          char v73 = 0;
          unsigned int v74 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x100u;
          while (2)
          {
            uint64_t v75 = *v3;
            unint64_t v76 = *(void *)(a2 + v75);
            if (v76 == -1 || v76 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
              *(void *)(a2 + v75) = v76 + 1;
              v19 |= (unint64_t)(v77 & 0x7F) << v73;
              if (v77 < 0)
              {
                v73 += 7;
                BOOL v14 = v74++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_165;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_165:
          uint64_t v84 = 132;
          goto LABEL_170;
        case 0x16u:
          char v78 = 0;
          unsigned int v79 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x400u;
          break;
        case 0x17u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 152;
          goto LABEL_121;
        case 0x18u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 80;
          goto LABEL_121;
        case 0x19u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 40;
          goto LABEL_121;
        case 0x1Au:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 56;
LABEL_121:
          uint64_t v83 = *(void **)(a1 + v25);
          *(void *)(a1 + v25) = v24;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v80 = *v3;
        unint64_t v81 = *(void *)(a2 + v80);
        if (v81 == -1 || v81 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v82 = *(unsigned char *)(*(void *)(a2 + *v7) + v81);
        *(void *)(a2 + v80) = v81 + 1;
        v19 |= (unint64_t)(v82 & 0x7F) << v78;
        if ((v82 & 0x80) == 0) {
          goto LABEL_167;
        }
        v78 += 7;
        BOOL v14 = v79++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_169;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_167:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_169:
      uint64_t v84 = 160;
LABEL_170:
      *(_DWORD *)(a1 + v84) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBArticleInfoListReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        unsigned int v18 = (NTPBArticleInfo *)a1[2];
        a1[2] = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(NTPBArticleInfo);
    [a1 addArticleInfo:v18];
    if (!PBReaderPlaceMark() || !NTPBArticleInfoReadFrom((uint64_t)v18, a2))
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBTodayModuleContentDescriptorReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        unsigned int v18 = *(NTPBTodayModuleContentRequest **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(NTPBTodayModuleContentRequest);
    objc_storeStrong((id *)(a1 + 16), v18);
    if (!PBReaderPlaceMark() || (NTPBTodayModuleContentRequestReadFrom((uint64_t)v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTodaySectionConfigArticleReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 0u:
        uint64_t String = (void *)PBReaderReadString();

        id v18 = String;
        uint64_t v19 = 2;
        goto LABEL_29;
      case 1u:
        unint64_t v21 = (void *)PBReaderReadString();

        id v18 = v21;
        uint64_t v19 = 3;
        goto LABEL_29;
      case 2u:
        char v22 = (void *)PBReaderReadString();

        id v18 = v22;
        uint64_t v19 = 5;
        goto LABEL_29;
      case 3u:
        uint64_t v23 = (void *)PBReaderReadString();

        id v18 = v23;
        uint64_t v19 = 6;
        goto LABEL_29;
      case 4u:
        uint64_t v24 = objc_alloc_init(NTPBTodaySectionConfigArticle);

        a1[4] = v24;
        if PBReaderPlaceMark() && (NTPBTodaySectionConfigArticleReadFrom(v24, a2))
        {
          PBReaderRecallMark();
LABEL_30:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      case 5u:
        uint64_t v25 = (void *)PBReaderReadString();

        id v18 = v25;
        uint64_t v19 = 1;
LABEL_29:
        a1[v19] = v18;
        goto LABEL_30;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_30;
    }
  }
}

uint64_t COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueViewDataReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        id v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAdExposureIneligibleReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_44;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_46;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_46:
          uint64_t v36 = 8;
          goto LABEL_55;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 32) |= 4u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_50:
          uint64_t v36 = 28;
          goto LABEL_55;
        case 3u:
          uint64_t v29 = PBReaderReadString();
          char v30 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v29;

          continue;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v33 = *v3;
        unint64_t v34 = *(void *)(a2 + v33);
        if (v34 == -1 || v34 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
        *(void *)(a2 + v33) = v34 + 1;
        v19 |= (unint64_t)(v35 & 0x7F) << v31;
        if ((v35 & 0x80) == 0) {
          goto LABEL_52;
        }
        v31 += 7;
        BOOL v14 = v32++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_54;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_52:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_54:
      uint64_t v36 = 24;
LABEL_55:
      *(_DWORD *)(a1 + v36) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBCoverArticleWidgetViewReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        unsigned int v18 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBMediaViewReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x400u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_176;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_178;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_176:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_178:
        uint64_t v108 = 216;
        goto LABEL_211;
      case 2u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 208;
        goto LABEL_164;
      case 3u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 40;
        goto LABEL_164;
      case 4u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 264;
        goto LABEL_164;
      case 5u:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 48;
        goto LABEL_164;
      case 6u:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 64;
        goto LABEL_164;
      case 7u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 280;
        goto LABEL_164;
      case 9u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x100u;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v19 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_182:
        uint64_t v108 = 120;
        goto LABEL_211;
      case 0xAu:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x200u;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v19 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_186:
        uint64_t v108 = 136;
        goto LABEL_211;
      case 0xBu:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x80u;
        while (2)
        {
          uint64_t v38 = *v3;
          unint64_t v39 = *(void *)(a2 + v38);
          if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v39 + 1;
            v19 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v36 += 7;
              BOOL v14 = v37++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_190:
        uint64_t v108 = 88;
        goto LABEL_211;
      case 0xCu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 80;
        goto LABEL_164;
      case 0xDu:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x40u;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v19 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v41 += 7;
              BOOL v14 = v42++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_194:
        uint64_t v108 = 76;
        goto LABEL_211;
      case 0xEu:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 96;
        goto LABEL_164;
      case 0xFu:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 324) |= 0x8000u;
        while (2)
        {
          uint64_t v49 = *v3;
          unint64_t v50 = *(void *)(a2 + v49);
          if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v14 = v47++ >= 9;
              if (v14)
              {
                uint64_t v48 = 0;
                goto LABEL_198;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
LABEL_198:
        BOOL v109 = v48 != 0;
        uint64_t v110 = 323;
        goto LABEL_228;
      case 0x12u:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x10u;
        while (2)
        {
          uint64_t v54 = *v3;
          unint64_t v55 = *(void *)(a2 + v54);
          if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
            *(void *)(a2 + v54) = v55 + 1;
            v19 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              BOOL v14 = v53++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_202:
        uint64_t v108 = 56;
        goto LABEL_211;
      case 0x13u:
        PBReaderReadString();
        char v57 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v57) {
          [(id)a1 addNamedEntities:v57];
        }
        goto LABEL_174;
      case 0x14u:
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x800u;
        while (2)
        {
          uint64_t v60 = *v3;
          unint64_t v61 = *(void *)(a2 + v60);
          if (v61 == -1 || v61 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
            *(void *)(a2 + v60) = v61 + 1;
            v19 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              BOOL v14 = v59++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_206:
        uint64_t v108 = 256;
        goto LABEL_211;
      case 0x15u:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x20u;
        while (2)
        {
          uint64_t v65 = *v3;
          unint64_t v66 = *(void *)(a2 + v65);
          if (v66 == -1 || v66 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
            *(void *)(a2 + v65) = v66 + 1;
            v19 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              BOOL v14 = v64++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_210;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_210:
        uint64_t v108 = 72;
LABEL_211:
        *(_DWORD *)(a1 + v108) = v19;
        goto LABEL_242;
      case 0x16u:
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v70 = 0;
        *(_WORD *)(a1 + 324) |= 0x1000u;
        while (2)
        {
          uint64_t v71 = *v3;
          unint64_t v72 = *(void *)(a2 + v71);
          if (v72 == -1 || v72 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(a2 + *v7) + v72);
            *(void *)(a2 + v71) = v72 + 1;
            v70 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              BOOL v14 = v69++ >= 9;
              if (v14)
              {
                uint64_t v70 = 0;
                goto LABEL_215;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v70 = 0;
        }
LABEL_215:
        BOOL v109 = v70 != 0;
        uint64_t v110 = 320;
        goto LABEL_228;
      case 0x17u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 288;
        goto LABEL_164;
      case 0x18u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 296;
        goto LABEL_164;
      case 0x19u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 304;
        goto LABEL_164;
      case 0x1Au:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 272;
        goto LABEL_164;
      case 0x1Bu:
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        *(_WORD *)(a1 + 324) |= 0x2000u;
        while (2)
        {
          uint64_t v77 = *v3;
          unint64_t v78 = *(void *)(a2 + v77);
          if (v78 == -1 || v78 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
            *(void *)(a2 + v77) = v78 + 1;
            v76 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              BOOL v14 = v75++ >= 9;
              if (v14)
              {
                uint64_t v76 = 0;
                goto LABEL_219;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v76 = 0;
        }
LABEL_219:
        BOOL v109 = v76 != 0;
        uint64_t v110 = 321;
        goto LABEL_228;
      case 0x1Cu:
        char v80 = 0;
        unsigned int v81 = 0;
        uint64_t v82 = 0;
        *(_WORD *)(a1 + 324) |= 2u;
        while (2)
        {
          uint64_t v83 = *v3;
          unint64_t v84 = *(void *)(a2 + v83);
          if (v84 == -1 || v84 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
            *(void *)(a2 + v83) = v84 + 1;
            v82 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              BOOL v14 = v81++ >= 9;
              if (v14)
              {
                uint64_t v82 = 0;
                goto LABEL_223;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v82 = 0;
        }
LABEL_223:
        uint64_t v111 = 16;
        goto LABEL_241;
      case 0x1Du:
        PBReaderReadString();
        char v57 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v57) {
          [(id)a1 addGalleryImageIds:v57];
        }
        goto LABEL_174;
      case 0x1Eu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 224;
        goto LABEL_164;
      case 0x1Fu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 240;
        goto LABEL_164;
      case 0x20u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 248;
        goto LABEL_164;
      case 0x21u:
        char v57 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 312), v57);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v57, a2) & 1) == 0) {
          goto LABEL_244;
        }
        goto LABEL_173;
      case 0x22u:
        char v57 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        [(id)a1 addFractionalCohortMembership:v57];
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v57, a2) & 1) == 0)
        {
          goto LABEL_244;
        }
        goto LABEL_173;
      case 0x23u:
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v88 = 0;
        *(_WORD *)(a1 + 324) |= 0x4000u;
        while (2)
        {
          uint64_t v89 = *v3;
          unint64_t v90 = *(void *)(a2 + v89);
          if (v90 == -1 || v90 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(a2 + *v7) + v90);
            *(void *)(a2 + v89) = v90 + 1;
            v88 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              BOOL v14 = v87++ >= 9;
              if (v14)
              {
                uint64_t v88 = 0;
                goto LABEL_227;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v88 = 0;
        }
LABEL_227:
        BOOL v109 = v88 != 0;
        uint64_t v110 = 322;
LABEL_228:
        *(unsigned char *)(a1 + v110) = v109;
        goto LABEL_242;
      case 0x24u:
        char v92 = 0;
        unsigned int v93 = 0;
        uint64_t v82 = 0;
        *(_WORD *)(a1 + 324) |= 8u;
        while (2)
        {
          uint64_t v94 = *v3;
          unint64_t v95 = *(void *)(a2 + v94);
          if (v95 == -1 || v95 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(a2 + *v7) + v95);
            *(void *)(a2 + v94) = v95 + 1;
            v82 |= (unint64_t)(v96 & 0x7F) << v92;
            if (v96 < 0)
            {
              v92 += 7;
              BOOL v14 = v93++ >= 9;
              if (v14)
              {
                uint64_t v82 = 0;
                goto LABEL_232;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v82 = 0;
        }
LABEL_232:
        uint64_t v111 = 32;
        goto LABEL_241;
      case 0x25u:
        char v97 = 0;
        unsigned int v98 = 0;
        uint64_t v82 = 0;
        *(_WORD *)(a1 + 324) |= 1u;
        while (2)
        {
          uint64_t v99 = *v3;
          unint64_t v100 = *(void *)(a2 + v99);
          if (v100 == -1 || v100 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(a2 + *v7) + v100);
            *(void *)(a2 + v99) = v100 + 1;
            v82 |= (unint64_t)(v101 & 0x7F) << v97;
            if (v101 < 0)
            {
              v97 += 7;
              BOOL v14 = v98++ >= 9;
              if (v14)
              {
                uint64_t v82 = 0;
                goto LABEL_236;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v82 = 0;
        }
LABEL_236:
        uint64_t v111 = 8;
        goto LABEL_241;
      case 0x26u:
        char v102 = 0;
        unsigned int v103 = 0;
        uint64_t v82 = 0;
        *(_WORD *)(a1 + 324) |= 4u;
        while (2)
        {
          uint64_t v104 = *v3;
          unint64_t v105 = *(void *)(a2 + v104);
          if (v105 == -1 || v105 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v106 = *(unsigned char *)(*(void *)(a2 + *v7) + v105);
            *(void *)(a2 + v104) = v105 + 1;
            v82 |= (unint64_t)(v106 & 0x7F) << v102;
            if (v106 < 0)
            {
              v102 += 7;
              BOOL v14 = v103++ >= 9;
              if (v14)
              {
                uint64_t v82 = 0;
                goto LABEL_240;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v82 = 0;
        }
LABEL_240:
        uint64_t v111 = 24;
LABEL_241:
        *(void *)(a1 + v111) = v82;
        goto LABEL_242;
      case 0x27u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 112;
        goto LABEL_164;
      case 0x28u:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 144;
        goto LABEL_164;
      case 0x29u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 160;
        goto LABEL_164;
      case 0x2Au:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 176;
        goto LABEL_164;
      case 0x2Bu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 152;
        goto LABEL_164;
      case 0x2Cu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 168;
LABEL_164:
        unsigned int v107 = *(void **)(a1 + v24);
        *(void *)(a1 + v24) = v23;

        goto LABEL_242;
      case 0x2Du:
        char v57 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 184), v57);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v57, a2) & 1) == 0) {
          goto LABEL_244;
        }
        goto LABEL_173;
      case 0x2Eu:
        char v57 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 192), v57);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v57, a2) & 1) == 0) {
          goto LABEL_244;
        }
        goto LABEL_173;
      case 0x2Fu:
        char v57 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 200), v57);
        if PBReaderPlaceMark() && (NTPBIssueViewDataReadFrom((uint64_t)v57, a2))
        {
LABEL_173:
          PBReaderRecallMark();
LABEL_174:

LABEL_242:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_244:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_242;
    }
  }
}

BOOL NTPBTelemetryStatsReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 1u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4))
            {
              uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__count;
              goto LABEL_69;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              break;
            }
            v17 += 7;
            BOOL v23 = v18++ > 8;
            if (v23)
            {
              uint64_t v19 = 0;
              uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__count;
              goto LABEL_72;
            }
          }
          uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__count;
          goto LABEL_70;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 0x10u;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__min;
              goto LABEL_69;
            }
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v23 = v26++ > 8;
              if (v23)
              {
                uint64_t v19 = 0;
                uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__min;
                goto LABEL_72;
              }
              continue;
            }
            break;
          }
          uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__min;
          goto LABEL_70;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 2u;
          while (2)
          {
            uint64_t v32 = *v3;
            unint64_t v33 = *(void *)(a2 + v32);
            if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
            {
              uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__max;
              goto LABEL_69;
            }
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              BOOL v23 = v31++ > 8;
              if (v23)
              {
                uint64_t v19 = 0;
                uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__max;
                goto LABEL_72;
              }
              continue;
            }
            break;
          }
          uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__max;
          goto LABEL_70;
        case 4u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 4u;
          while (2)
          {
            uint64_t v37 = *v3;
            unint64_t v38 = *(void *)(a2 + v37);
            if (v38 == -1 || v38 >= *(void *)(a2 + *v4))
            {
              uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__mean;
              goto LABEL_69;
            }
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              BOOL v23 = v36++ > 8;
              if (v23)
              {
                uint64_t v19 = 0;
                uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__mean;
                goto LABEL_72;
              }
              continue;
            }
            break;
          }
          uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__mean;
          goto LABEL_70;
        case 5u:
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 8u;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__median;
              goto LABEL_69;
            }
            char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v43 + 1;
            v19 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              BOOL v23 = v41++ > 8;
              if (v23)
              {
                uint64_t v19 = 0;
                uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__median;
                goto LABEL_72;
              }
              continue;
            }
            break;
          }
          uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__median;
          goto LABEL_70;
        case 6u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 0x20u;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
          return 0;
      }
      while (1)
      {
        uint64_t v47 = *v3;
        unint64_t v48 = *(void *)(a2 + v47);
        if (v48 == -1 || v48 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
        *(void *)(a2 + v47) = v48 + 1;
        v19 |= (unint64_t)(v49 & 0x7F) << v45;
        if ((v49 & 0x80) == 0)
        {
          uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__percentile95;
          goto LABEL_70;
        }
        v45 += 7;
        BOOL v23 = v46++ > 8;
        if (v23)
        {
          uint64_t v19 = 0;
          uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__percentile95;
          goto LABEL_72;
        }
      }
      uint64_t v24 = &OBJC_IVAR___NTPBTelemetryStats__percentile95;
LABEL_69:
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_70:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v19 = 0;
      }
LABEL_72:
      *(void *)(a1 + *v24) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedEngagementMenuExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_40;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_42;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_42:
          uint64_t v32 = 28;
          goto LABEL_47;
        case 2u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 16;
          goto LABEL_31;
        case 3u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 8;
          goto LABEL_31;
        case 4u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 32;
LABEL_31:
          unsigned int v26 = *(void **)(a1 + v25);
          *(void *)(a1 + v25) = v24;

          continue;
        case 5u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
        *(void *)(a2 + v29) = v30 + 1;
        v19 |= (unint64_t)(v31 & 0x7F) << v27;
        if ((v31 & 0x80) == 0) {
          goto LABEL_44;
        }
        v27 += 7;
        BOOL v14 = v28++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_46:
      uint64_t v32 = 24;
LABEL_47:
      *(_DWORD *)(a1 + v32) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPDFPageViewReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    int v16 = v10 & 7;
    if (v15 || v16 == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unsigned int v18 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 56), v18);
        if PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v18, a2)) {
          goto LABEL_98;
        }
        goto LABEL_169;
      case 2u:
        unsigned int v18 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 64), v18);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v18, a2) & 1) == 0) {
          goto LABEL_169;
        }
        goto LABEL_98;
      case 3u:
        unsigned int v18 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 72), v18);
        if (!PBReaderPlaceMark() || (NTPBIssueViewDataReadFrom((uint64_t)v18, a2) & 1) == 0) {
          goto LABEL_169;
        }
        goto LABEL_98;
      case 4u:
        if (v16 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (1)
            {
              uint64_t v23 = *v3;
              unint64_t v24 = *(void *)(a2 + v23);
              if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_42;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v82 = 0;
          unsigned int v83 = 0;
          uint64_t v84 = 0;
          while (1)
          {
            uint64_t v85 = *v3;
            unint64_t v86 = *(void *)(a2 + v85);
            if (v86 == -1 || v86 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v87 = *(unsigned char *)(*(void *)(a2 + *v7) + v86);
            *(void *)(a2 + v85) = v86 + 1;
            v84 |= (unint64_t)(v87 & 0x7F) << v82;
            if (v87 < 0)
            {
              v82 += 7;
              BOOL v14 = v83++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_166;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_166:
          PBRepeatedInt32Add();
        }
        goto LABEL_155;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        *(_WORD *)(a1 + 156) |= 2u;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v28) = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v28) = 0;
        }
LABEL_120:
        uint64_t v79 = 96;
        goto LABEL_154;
      case 6u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        *(_WORD *)(a1 + 156) |= 0x40u;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_124:
        BOOL v80 = v34 != 0;
        uint64_t v81 = 153;
        goto LABEL_145;
      case 7u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v28 = 0;
        *(_WORD *)(a1 + 156) |= 0x10u;
        while (2)
        {
          uint64_t v40 = *v3;
          unint64_t v41 = *(void *)(a2 + v40);
          if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v41 + 1;
            v28 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (v14)
              {
                LODWORD(v28) = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v28) = 0;
        }
LABEL_128:
        uint64_t v79 = 120;
        goto LABEL_154;
      case 8u:
        uint64_t v43 = PBReaderReadString();
        uint64_t v44 = 112;
        goto LABEL_116;
      case 9u:
        uint64_t v43 = PBReaderReadString();
        uint64_t v44 = 144;
        goto LABEL_116;
      case 0xAu:
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 156) |= 0x20u;
        while (2)
        {
          uint64_t v48 = *v3;
          unint64_t v49 = *(void *)(a2 + v48);
          if (v49 == -1 || v49 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
            *(void *)(a2 + v48) = v49 + 1;
            v47 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v14 = v46++ >= 9;
              if (v14)
              {
                uint64_t v47 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
LABEL_132:
        BOOL v80 = v47 != 0;
        uint64_t v81 = 152;
        goto LABEL_145;
      case 0xBu:
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(_WORD *)(a1 + 156) |= 0x80u;
        while (2)
        {
          uint64_t v54 = *v3;
          unint64_t v55 = *(void *)(a2 + v54);
          if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
            *(void *)(a2 + v54) = v55 + 1;
            v53 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v14 = v52++ >= 9;
              if (v14)
              {
                uint64_t v53 = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v53 = 0;
        }
LABEL_136:
        BOOL v80 = v53 != 0;
        uint64_t v81 = 154;
        goto LABEL_145;
      case 0xCu:
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v28 = 0;
        *(_WORD *)(a1 + 156) |= 1u;
        while (2)
        {
          uint64_t v59 = *v3;
          unint64_t v60 = *(void *)(a2 + v59);
          if (v60 == -1 || v60 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
            *(void *)(a2 + v59) = v60 + 1;
            v28 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              BOOL v14 = v58++ >= 9;
              if (v14)
              {
                LODWORD(v28) = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v28) = 0;
        }
LABEL_140:
        uint64_t v79 = 48;
        goto LABEL_154;
      case 0xDu:
        uint64_t v43 = PBReaderReadString();
        uint64_t v44 = 32;
        goto LABEL_116;
      case 0xEu:
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_WORD *)(a1 + 156) |= 0x100u;
        while (2)
        {
          uint64_t v65 = *v3;
          unint64_t v66 = *(void *)(a2 + v65);
          if (v66 == -1 || v66 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
            *(void *)(a2 + v65) = v66 + 1;
            v64 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              BOOL v14 = v63++ >= 9;
              if (v14)
              {
                uint64_t v64 = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v64 = 0;
        }
LABEL_144:
        BOOL v80 = v64 != 0;
        uint64_t v81 = 155;
LABEL_145:
        *(unsigned char *)(a1 + v81) = v80;
        goto LABEL_155;
      case 0xFu:
        uint64_t v43 = PBReaderReadString();
        uint64_t v44 = 88;
        goto LABEL_116;
      case 0x10u:
        unsigned int v18 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 40), v18);
        if PBReaderPlaceMark() && (NTPBChannelDataReadFrom((uint64_t)v18, a2))
        {
LABEL_98:
          PBReaderRecallMark();

LABEL_155:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_169:

        return 0;
      case 0x11u:
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v28 = 0;
        *(_WORD *)(a1 + 156) |= 4u;
        while (2)
        {
          uint64_t v70 = *v3;
          unint64_t v71 = *(void *)(a2 + v70);
          if (v71 == -1 || v71 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
            *(void *)(a2 + v70) = v71 + 1;
            v28 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              BOOL v14 = v69++ >= 9;
              if (v14)
              {
                LODWORD(v28) = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v28) = 0;
        }
LABEL_149:
        uint64_t v79 = 100;
        goto LABEL_154;
      case 0x12u:
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v28 = 0;
        *(_WORD *)(a1 + 156) |= 8u;
        while (2)
        {
          uint64_t v75 = *v3;
          unint64_t v76 = *(void *)(a2 + v75);
          if (v76 == -1 || v76 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
            *(void *)(a2 + v75) = v76 + 1;
            v28 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v73 += 7;
              BOOL v14 = v74++ >= 9;
              if (v14)
              {
                LODWORD(v28) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v28) = 0;
        }
LABEL_153:
        uint64_t v79 = 104;
LABEL_154:
        *(_DWORD *)(a1 + v79) = v28;
        goto LABEL_155;
      case 0x13u:
        uint64_t v43 = PBReaderReadString();
        uint64_t v44 = 80;
        goto LABEL_116;
      case 0x14u:
        uint64_t v43 = PBReaderReadString();
        uint64_t v44 = 128;
        goto LABEL_116;
      case 0x15u:
        uint64_t v43 = PBReaderReadString();
        uint64_t v44 = 136;
LABEL_116:
        unint64_t v78 = *(void **)(a1 + v44);
        *(void *)(a1 + v44) = v43;

        goto LABEL_155;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_155;
    }
  }
}

uint64_t NTPBIAdConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 44) |= 0x10u;
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_53;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_55;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_55:
          *(unsigned char *)(a1 + 40) = v20 != 0;
          continue;
        case 2u:
          *(unsigned char *)(a1 + 44) |= 8u;
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v28 = *(void *)(*(void *)(a2 + *v7) + v27);
            *(void *)(a2 + v26) = v27 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v28 = 0;
          }
          *(void *)(a1 + 32) = v28;
          continue;
        case 3u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          *(unsigned char *)(a1 + 44) |= 4u;
          while (2)
          {
            uint64_t v32 = *v3;
            uint64_t v33 = *(void *)(a2 + v32);
            unint64_t v34 = v33 + 1;
            if (v33 == -1 || v34 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
              *(void *)(a2 + v32) = v34;
              v31 |= (unint64_t)(v35 & 0x7F) << v29;
              if (v35 < 0)
              {
                v29 += 7;
                BOOL v15 = v30++ >= 9;
                if (v15)
                {
                  uint64_t v31 = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
LABEL_59:
          uint64_t v48 = 24;
          goto LABEL_68;
        case 4u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v31 = 0;
          *(unsigned char *)(a1 + 44) |= 1u;
          while (2)
          {
            uint64_t v38 = *v3;
            uint64_t v39 = *(void *)(a2 + v38);
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v40;
              v31 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                BOOL v15 = v37++ >= 9;
                if (v15)
                {
                  uint64_t v31 = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
LABEL_63:
          uint64_t v48 = 8;
          goto LABEL_68;
        case 5u:
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v31 = 0;
          *(unsigned char *)(a1 + 44) |= 2u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v44 = *v3;
        uint64_t v45 = *(void *)(a2 + v44);
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)(a2 + *v4)) {
          break;
        }
        char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
        *(void *)(a2 + v44) = v46;
        v31 |= (unint64_t)(v47 & 0x7F) << v42;
        if ((v47 & 0x80) == 0) {
          goto LABEL_65;
        }
        v42 += 7;
        BOOL v15 = v43++ >= 9;
        if (v15)
        {
          uint64_t v31 = 0;
          goto LABEL_67;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_65:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v31 = 0;
      }
LABEL_67:
      uint64_t v48 = 16;
LABEL_68:
      *(void *)(a1 + v48) = v31;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBMediaExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x1000u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_201;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_203;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_201:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_203:
        uint64_t v129 = 204;
        goto LABEL_264;
      case 2u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 192;
        goto LABEL_189;
      case 3u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 40;
        goto LABEL_189;
      case 4u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 248;
        goto LABEL_189;
      case 5u:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 48;
        goto LABEL_189;
      case 6u:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 64;
        goto LABEL_189;
      case 7u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 264;
        goto LABEL_189;
      case 8u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x400u;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_207;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_207:
        uint64_t v129 = 128;
        goto LABEL_264;
      case 9u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x200u;
        while (2)
        {
          uint64_t v32 = *v3;
          unint64_t v33 = *(void *)(a2 + v32);
          if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_211;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_211:
        uint64_t v129 = 96;
        goto LABEL_264;
      case 0xAu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 88;
        goto LABEL_189;
      case 0xBu:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x100u;
        while (2)
        {
          uint64_t v37 = *v3;
          unint64_t v38 = *(void *)(a2 + v37);
          if (v38 == -1 || v38 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              BOOL v14 = v36++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_215;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_215:
        uint64_t v129 = 84;
        goto LABEL_264;
      case 0xCu:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 104;
        goto LABEL_189;
      case 0xDu:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(_DWORD *)(a1 + 320) |= 0x40000u;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (v14)
              {
                uint64_t v42 = 0;
                goto LABEL_219;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v42 = 0;
        }
LABEL_219:
        BOOL v130 = v42 != 0;
        uint64_t v131 = 315;
        goto LABEL_269;
      case 0x10u:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x10u;
        while (2)
        {
          uint64_t v49 = *v3;
          unint64_t v50 = *(void *)(a2 + v49);
          if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v50 + 1;
            v19 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              BOOL v14 = v48++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_223;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_223:
        uint64_t v129 = 56;
        goto LABEL_264;
      case 0x11u:
        PBReaderReadString();
        unsigned int v52 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v52) {
          [(id)a1 addNamedEntities:v52];
        }
        goto LABEL_199;
      case 0x12u:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x2000u;
        while (2)
        {
          uint64_t v55 = *v3;
          unint64_t v56 = *(void *)(a2 + v55);
          if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
            *(void *)(a2 + v55) = v56 + 1;
            v19 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              BOOL v14 = v54++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_227;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_227:
        uint64_t v129 = 240;
        goto LABEL_264;
      case 0x13u:
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x20u;
        while (2)
        {
          uint64_t v60 = *v3;
          unint64_t v61 = *(void *)(a2 + v60);
          if (v61 == -1 || v61 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
            *(void *)(a2 + v60) = v61 + 1;
            v19 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              BOOL v14 = v59++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_231;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_231:
        uint64_t v129 = 72;
        goto LABEL_264;
      case 0x14u:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        *(_DWORD *)(a1 + 320) |= 0x8000u;
        while (2)
        {
          uint64_t v66 = *v3;
          unint64_t v67 = *(void *)(a2 + v66);
          if (v67 == -1 || v67 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(a2 + *v7) + v67);
            *(void *)(a2 + v66) = v67 + 1;
            v65 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              BOOL v14 = v64++ >= 9;
              if (v14)
              {
                uint64_t v65 = 0;
                goto LABEL_235;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v65 = 0;
        }
LABEL_235:
        BOOL v130 = v65 != 0;
        uint64_t v131 = 312;
        goto LABEL_269;
      case 0x15u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 272;
        goto LABEL_189;
      case 0x16u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 280;
        goto LABEL_189;
      case 0x17u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 288;
        goto LABEL_189;
      case 0x18u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 256;
        goto LABEL_189;
      case 0x19u:
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v71 = 0;
        *(_DWORD *)(a1 + 320) |= 0x10000u;
        while (2)
        {
          uint64_t v72 = *v3;
          unint64_t v73 = *(void *)(a2 + v72);
          if (v73 == -1 || v73 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(a2 + *v7) + v73);
            *(void *)(a2 + v72) = v73 + 1;
            v71 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              BOOL v14 = v70++ >= 9;
              if (v14)
              {
                uint64_t v71 = 0;
                goto LABEL_239;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v71 = 0;
        }
LABEL_239:
        BOOL v130 = v71 != 0;
        uint64_t v131 = 313;
        goto LABEL_269;
      case 0x1Au:
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x800u;
        while (2)
        {
          uint64_t v77 = *v3;
          unint64_t v78 = *(void *)(a2 + v77);
          if (v78 == -1 || v78 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
            *(void *)(a2 + v77) = v78 + 1;
            v19 |= (unint64_t)(v79 & 0x7F) << v75;
            if (v79 < 0)
            {
              v75 += 7;
              BOOL v14 = v76++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_243;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_243:
        uint64_t v129 = 200;
        goto LABEL_264;
      case 0x1Bu:
        char v80 = 0;
        unsigned int v81 = 0;
        uint64_t v82 = 0;
        *(_DWORD *)(a1 + 320) |= 0x80000u;
        while (2)
        {
          uint64_t v83 = *v3;
          unint64_t v84 = *(void *)(a2 + v83);
          if (v84 == -1 || v84 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
            *(void *)(a2 + v83) = v84 + 1;
            v82 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              BOOL v14 = v81++ >= 9;
              if (v14)
              {
                uint64_t v82 = 0;
                goto LABEL_247;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v82 = 0;
        }
LABEL_247:
        BOOL v130 = v82 != 0;
        uint64_t v131 = 316;
        goto LABEL_269;
      case 0x1Cu:
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v88 = 0;
        *(_DWORD *)(a1 + 320) |= 2u;
        while (2)
        {
          uint64_t v89 = *v3;
          unint64_t v90 = *(void *)(a2 + v89);
          if (v90 == -1 || v90 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(a2 + *v7) + v90);
            *(void *)(a2 + v89) = v90 + 1;
            v88 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              BOOL v14 = v87++ >= 9;
              if (v14)
              {
                uint64_t v88 = 0;
                goto LABEL_251;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v88 = 0;
        }
LABEL_251:
        uint64_t v132 = 16;
        goto LABEL_282;
      case 0x1Du:
        char v92 = 0;
        unsigned int v93 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x40u;
        while (2)
        {
          uint64_t v94 = *v3;
          unint64_t v95 = *(void *)(a2 + v94);
          if (v95 == -1 || v95 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(a2 + *v7) + v95);
            *(void *)(a2 + v94) = v95 + 1;
            v19 |= (unint64_t)(v96 & 0x7F) << v92;
            if (v96 < 0)
            {
              v92 += 7;
              BOOL v14 = v93++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_255;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_255:
        uint64_t v129 = 76;
        goto LABEL_264;
      case 0x1Eu:
        char v97 = 0;
        unsigned int v98 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x80u;
        while (2)
        {
          uint64_t v99 = *v3;
          unint64_t v100 = *(void *)(a2 + v99);
          if (v100 == -1 || v100 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(a2 + *v7) + v100);
            *(void *)(a2 + v99) = v100 + 1;
            v19 |= (unint64_t)(v101 & 0x7F) << v97;
            if (v101 < 0)
            {
              v97 += 7;
              BOOL v14 = v98++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_259;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_259:
        uint64_t v129 = 80;
        goto LABEL_264;
      case 0x1Fu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 208;
        goto LABEL_189;
      case 0x20u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 224;
        goto LABEL_189;
      case 0x21u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 232;
        goto LABEL_189;
      case 0x22u:
        unsigned int v52 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 304), v52);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v52, a2) & 1) == 0) {
          goto LABEL_285;
        }
        goto LABEL_198;
      case 0x23u:
        unsigned int v52 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        [(id)a1 addFractionalCohortMembership:v52];
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v52, a2) & 1) == 0)
        {
          goto LABEL_285;
        }
        goto LABEL_198;
      case 0x24u:
        char v102 = 0;
        unsigned int v103 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x4000u;
        while (2)
        {
          uint64_t v104 = *v3;
          unint64_t v105 = *(void *)(a2 + v104);
          if (v105 == -1 || v105 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v106 = *(unsigned char *)(*(void *)(a2 + *v7) + v105);
            *(void *)(a2 + v104) = v105 + 1;
            v19 |= (unint64_t)(v106 & 0x7F) << v102;
            if (v106 < 0)
            {
              v102 += 7;
              BOOL v14 = v103++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_263;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_263:
        uint64_t v129 = 296;
LABEL_264:
        *(_DWORD *)(a1 + v129) = v19;
        goto LABEL_283;
      case 0x25u:
        char v107 = 0;
        unsigned int v108 = 0;
        uint64_t v109 = 0;
        *(_DWORD *)(a1 + 320) |= 0x20000u;
        while (2)
        {
          uint64_t v110 = *v3;
          unint64_t v111 = *(void *)(a2 + v110);
          if (v111 == -1 || v111 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v112 = *(unsigned char *)(*(void *)(a2 + *v7) + v111);
            *(void *)(a2 + v110) = v111 + 1;
            v109 |= (unint64_t)(v112 & 0x7F) << v107;
            if (v112 < 0)
            {
              v107 += 7;
              BOOL v14 = v108++ >= 9;
              if (v14)
              {
                uint64_t v109 = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v109 = 0;
        }
LABEL_268:
        BOOL v130 = v109 != 0;
        uint64_t v131 = 314;
LABEL_269:
        *(unsigned char *)(a1 + v131) = v130;
        goto LABEL_283;
      case 0x26u:
        char v113 = 0;
        unsigned int v114 = 0;
        uint64_t v88 = 0;
        *(_DWORD *)(a1 + 320) |= 8u;
        while (2)
        {
          uint64_t v115 = *v3;
          unint64_t v116 = *(void *)(a2 + v115);
          if (v116 == -1 || v116 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v117 = *(unsigned char *)(*(void *)(a2 + *v7) + v116);
            *(void *)(a2 + v115) = v116 + 1;
            v88 |= (unint64_t)(v117 & 0x7F) << v113;
            if (v117 < 0)
            {
              v113 += 7;
              BOOL v14 = v114++ >= 9;
              if (v14)
              {
                uint64_t v88 = 0;
                goto LABEL_273;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v88 = 0;
        }
LABEL_273:
        uint64_t v132 = 32;
        goto LABEL_282;
      case 0x27u:
        char v118 = 0;
        unsigned int v119 = 0;
        uint64_t v88 = 0;
        *(_DWORD *)(a1 + 320) |= 1u;
        while (2)
        {
          uint64_t v120 = *v3;
          unint64_t v121 = *(void *)(a2 + v120);
          if (v121 == -1 || v121 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v122 = *(unsigned char *)(*(void *)(a2 + *v7) + v121);
            *(void *)(a2 + v120) = v121 + 1;
            v88 |= (unint64_t)(v122 & 0x7F) << v118;
            if (v122 < 0)
            {
              v118 += 7;
              BOOL v14 = v119++ >= 9;
              if (v14)
              {
                uint64_t v88 = 0;
                goto LABEL_277;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v88 = 0;
        }
LABEL_277:
        uint64_t v132 = 8;
        goto LABEL_282;
      case 0x28u:
        char v123 = 0;
        unsigned int v124 = 0;
        uint64_t v88 = 0;
        *(_DWORD *)(a1 + 320) |= 4u;
        while (2)
        {
          uint64_t v125 = *v3;
          unint64_t v126 = *(void *)(a2 + v125);
          if (v126 == -1 || v126 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v127 = *(unsigned char *)(*(void *)(a2 + *v7) + v126);
            *(void *)(a2 + v125) = v126 + 1;
            v88 |= (unint64_t)(v127 & 0x7F) << v123;
            if (v127 < 0)
            {
              v123 += 7;
              BOOL v14 = v124++ >= 9;
              if (v14)
              {
                uint64_t v88 = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v88 = 0;
        }
LABEL_281:
        uint64_t v132 = 24;
LABEL_282:
        *(void *)(a1 + v132) = v88;
        goto LABEL_283;
      case 0x29u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 120;
        goto LABEL_189;
      case 0x2Au:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 144;
        goto LABEL_189;
      case 0x2Bu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 160;
        goto LABEL_189;
      case 0x2Cu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 136;
        goto LABEL_189;
      case 0x2Du:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 152;
LABEL_189:
        uint64_t v128 = *(void **)(a1 + v24);
        *(void *)(a1 + v24) = v23;

        goto LABEL_283;
      case 0x2Eu:
        unsigned int v52 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 168), v52);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v52, a2) & 1) == 0) {
          goto LABEL_285;
        }
        goto LABEL_198;
      case 0x2Fu:
        unsigned int v52 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 176), v52);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v52, a2) & 1) == 0) {
          goto LABEL_285;
        }
        goto LABEL_198;
      case 0x30u:
        unsigned int v52 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 184), v52);
        if PBReaderPlaceMark() && (NTPBIssueViewDataReadFrom((uint64_t)v52, a2))
        {
LABEL_198:
          PBReaderRecallMark();
LABEL_199:

LABEL_283:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_285:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_283;
    }
  }
}

uint64_t NTPBLocationRecommendationMappingsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(NTPBLocationRecommendationMapping);
        [a1 addLocationMappings:v17];
        if (!PBReaderPlaceMark() || (NTPBLocationRecommendationMappingReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBViewArticleRequestReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 8;
        goto LABEL_24;
      }
      if (v17 == 1)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 24;
LABEL_24:
        uint64_t v20 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v18 = PBReaderReadString();
    uint64_t v19 = 16;
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBCohortMembershipReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v21 = 0;
        }
        *(void *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t String = (void *)PBReaderReadString();

        *(void *)(a1 + 16) = String;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTodayConfigReadFrom(uint64_t a1, unsigned char *a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)&a2[*MEMORY[0x263F62298]] >= *(void *)&a2[*MEMORY[0x263F62288]]) {
    return a2[*v5] == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (a2[*v5]) {
      return a2[*v5] == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)&a2[v11];
      if (v12 == -1 || v12 >= *(void *)&a2[*v4]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a2[*v7] + v12);
      *(void *)&a2[v11] = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = a2[*v5];
        goto LABEL_14;
      }
    }
    a2[*v5] = 1;
LABEL_12:
    int v15 = a2[*v5];
    if (a2[*v5]) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return a2[*v5] == 0;
    }
    switch((v10 >> 3))
    {
      case 0u:
        unint64_t v17 = objc_alloc_init(NTPBTodayQueueConfig);
        [(id)a1 addTodayQueueConfigs:v17];

        if PBReaderPlaceMark() && (NTPBTodayQueueConfigReadFrom((uint64_t)v17, a2)) {
          goto LABEL_45;
        }
        return 0;
      case 2u:
        uint64_t String = (void *)PBReaderReadString();

        id v20 = String;
        uint64_t v21 = 40;
        goto LABEL_28;
      case 3u:
        char v22 = (void *)PBReaderReadString();

        id v20 = v22;
        uint64_t v21 = 32;
        goto LABEL_28;
      case 4u:
        uint64_t v23 = (void *)PBReaderReadString();

        id v20 = v23;
        uint64_t v21 = 64;
        goto LABEL_28;
      case 5u:
        uint64_t v24 = (void *)PBReaderReadString();

        id v20 = v24;
        uint64_t v21 = 24;
LABEL_28:
        *(void *)(a1 + v21) = v20;
        goto LABEL_55;
      case 6u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)&a2[v28];
          if (v29 == -1 || v29 >= *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)&a2[*v7] + v29);
            *(void *)&a2[v28] = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v27 = 0;
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v27 = 0;
        }
LABEL_49:
        uint64_t v37 = 8;
        goto LABEL_54;
      case 7u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v27 = 0;
        *(unsigned char *)(a1 + 72) |= 2u;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)&a2[v33];
          if (v34 == -1 || v34 >= *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)&a2[*v7] + v34);
            *(void *)&a2[v33] = v34 + 1;
            v27 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                uint64_t v27 = 0;
                goto LABEL_53;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v27 = 0;
        }
LABEL_53:
        uint64_t v37 = 16;
LABEL_54:
        *(void *)(a1 + v37) = v27;
        goto LABEL_55;
      case 9u:
        unsigned int v36 = objc_alloc_init(NTPBTodayBannerConfig);

        *(void *)(a1 + 56) = v36;
        if PBReaderPlaceMark() && (NTPBTodayBannerConfigReadFrom((uint64_t)v36, (uint64_t)a2))
        {
LABEL_45:
          PBReaderRecallMark();
LABEL_55:
          if (*(void *)&a2[*v3] >= *(void *)&a2[*v4]) {
            return a2[*v5] == 0;
          }
          continue;
        }
        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_55;
    }
  }
}

BOOL NTPBViewArticleResponseReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 16;
LABEL_22:
        uint64_t v19 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadString();
    uint64_t v18 = 8;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBNetworkEventGroupReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if (!(v10 >> 3)) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = &OBJC_IVAR___NTPBNetworkEventGroup__respondingInstance;
LABEL_22:
        uint64_t String = (void *)PBReaderReadString();

        *(void *)(a1 + *v17) = String;
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = &OBJC_IVAR___NTPBNetworkEventGroup__via;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBIssueDownloadReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = objc_alloc_init(NTPBIssueData);
          objc_storeStrong((id *)(a1 + 24), v17);
          if PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v17, a2))
          {
            PBReaderRecallMark();

            continue;
          }

          return 0;
        case 2u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          while (1)
          {
            uint64_t v21 = *v3;
            unint64_t v22 = *(void *)(a2 + v21);
            if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0) {
              goto LABEL_47;
            }
            v18 += 7;
            BOOL v14 = v19++ >= 9;
            if (v14)
            {
              LODWORD(v20) = 0;
              goto LABEL_49;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_47:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v20) = 0;
          }
LABEL_49:
          uint64_t v37 = 8;
          goto LABEL_58;
        case 3u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v20 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_53;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v20) = 0;
          }
LABEL_53:
          uint64_t v37 = 12;
          goto LABEL_58;
        case 4u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 40) |= 4u;
          break;
        case 6u:
          uint64_t v35 = PBReaderReadString();
          unsigned int v36 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v35;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v31 = *v3;
        unint64_t v32 = *(void *)(a2 + v31);
        if (v32 == -1 || v32 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
        *(void *)(a2 + v31) = v32 + 1;
        v20 |= (unint64_t)(v33 & 0x7F) << v29;
        if ((v33 & 0x80) == 0) {
          goto LABEL_55;
        }
        v29 += 7;
        BOOL v14 = v30++ >= 9;
        if (v14)
        {
          LODWORD(v20) = 0;
          goto LABEL_57;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v20) = 0;
      }
LABEL_57:
      uint64_t v37 = 16;
LABEL_58:
      *(_DWORD *)(a1 + v37) = v20;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPointReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t String = (void *)PBReaderReadString();

        *(void *)(a1 + 24) = String;
      }
      else
      {
        if (v18 == 2)
        {
          *(unsigned char *)(a1 + 32) |= 2u;
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v21 = 0;
          }
          uint64_t v26 = 16;
        }
        else
        {
          if (v18 != 1)
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          *(unsigned char *)(a1 + 32) |= 1u;
          uint64_t v19 = *v3;
          unint64_t v20 = *(void *)(a2 + v19);
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v20);
            *(void *)(a2 + v19) = v20 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v21 = 0;
          }
          uint64_t v26 = 8;
        }
        *(void *)(a1 + v26) = v21;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBComscoreEventSendReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 1u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_41;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_43;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_43:
          uint64_t v32 = 8;
          goto LABEL_48;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 2u;
          break;
        case 3u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 24;
          goto LABEL_39;
        case 4u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 32;
          goto LABEL_39;
        case 5u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 16;
          goto LABEL_39;
        case 6u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 48;
LABEL_39:
          uint64_t v31 = *(void **)(a1 + v30);
          *(void *)(a1 + v30) = v29;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v26 = *v3;
        unint64_t v27 = *(void *)(a2 + v26);
        if (v27 == -1 || v27 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
        *(void *)(a2 + v26) = v27 + 1;
        v19 |= (unint64_t)(v28 & 0x7F) << v24;
        if ((v28 & 0x80) == 0) {
          goto LABEL_45;
        }
        v24 += 7;
        BOOL v14 = v25++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_47;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_47:
      uint64_t v32 = 40;
LABEL_48:
      *(_DWORD *)(a1 + v32) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBMediaEngageCompleteReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x1000u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_222;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_224;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_222:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_224:
        uint64_t v140 = 228;
        goto LABEL_311;
      case 2u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 216;
        goto LABEL_198;
      case 3u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 64;
        goto LABEL_198;
      case 4u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 280;
        goto LABEL_198;
      case 5u:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 72;
        goto LABEL_198;
      case 6u:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 88;
        goto LABEL_198;
      case 7u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 296;
        goto LABEL_198;
      case 8u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x200u;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_228;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_228:
        uint64_t v140 = 112;
        goto LABEL_311;
      case 9u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 104;
        goto LABEL_198;
      case 0xAu:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x100u;
        while (2)
        {
          uint64_t v32 = *v3;
          unint64_t v33 = *(void *)(a2 + v32);
          if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_232;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_232:
        uint64_t v140 = 100;
        goto LABEL_311;
      case 0xBu:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 120;
        goto LABEL_198;
      case 0xCu:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(_DWORD *)(a1 + 360) |= 0x100000u;
        while (2)
        {
          uint64_t v38 = *v3;
          unint64_t v39 = *(void *)(a2 + v38);
          if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v39 + 1;
            v37 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              BOOL v14 = v36++ >= 9;
              if (v14)
              {
                uint64_t v37 = 0;
                goto LABEL_236;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v37 = 0;
        }
LABEL_236:
        BOOL v141 = v37 != 0;
        uint64_t v142 = 356;
        goto LABEL_289;
      case 0xFu:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x40u;
        while (2)
        {
          uint64_t v44 = *v3;
          unint64_t v45 = *(void *)(a2 + v44);
          if (v45 == -1 || v45 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v45 + 1;
            v19 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              BOOL v14 = v43++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_240;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_240:
        uint64_t v140 = 80;
        goto LABEL_311;
      case 0x10u:
        PBReaderReadString();
        char v47 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v47) {
          [(id)a1 addNamedEntities:v47];
        }
        goto LABEL_218;
      case 0x11u:
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x2000u;
        while (2)
        {
          uint64_t v50 = *v3;
          unint64_t v51 = *(void *)(a2 + v50);
          if (v51 == -1 || v51 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v51 + 1;
            v19 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              BOOL v14 = v49++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_244;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_244:
        uint64_t v140 = 272;
        goto LABEL_311;
      case 0x12u:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x80u;
        while (2)
        {
          uint64_t v55 = *v3;
          unint64_t v56 = *(void *)(a2 + v55);
          if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
            *(void *)(a2 + v55) = v56 + 1;
            v19 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              BOOL v14 = v54++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_248;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_248:
        uint64_t v140 = 96;
        goto LABEL_311;
      case 0x13u:
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v60 = 0;
        *(_DWORD *)(a1 + 360) |= 0x10000u;
        while (2)
        {
          uint64_t v61 = *v3;
          unint64_t v62 = *(void *)(a2 + v61);
          if (v62 == -1 || v62 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
            *(void *)(a2 + v61) = v62 + 1;
            v60 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v14 = v59++ >= 9;
              if (v14)
              {
                uint64_t v60 = 0;
                goto LABEL_252;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v60 = 0;
        }
LABEL_252:
        BOOL v141 = v60 != 0;
        uint64_t v142 = 352;
        goto LABEL_289;
      case 0x14u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 304;
        goto LABEL_198;
      case 0x15u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 312;
        goto LABEL_198;
      case 0x16u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 320;
        goto LABEL_198;
      case 0x17u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 288;
        goto LABEL_198;
      case 0x18u:
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v66 = 0;
        *(_DWORD *)(a1 + 360) |= 0x40000u;
        while (2)
        {
          uint64_t v67 = *v3;
          unint64_t v68 = *(void *)(a2 + v67);
          if (v68 == -1 || v68 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(a2 + *v7) + v68);
            *(void *)(a2 + v67) = v68 + 1;
            v66 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              BOOL v14 = v65++ >= 9;
              if (v14)
              {
                uint64_t v66 = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v66 = 0;
        }
LABEL_256:
        BOOL v141 = v66 != 0;
        uint64_t v142 = 354;
        goto LABEL_289;
      case 0x19u:
        char v70 = 0;
        unsigned int v71 = 0;
        uint64_t v72 = 0;
        *(_DWORD *)(a1 + 360) |= 8u;
        while (2)
        {
          uint64_t v73 = *v3;
          unint64_t v74 = *(void *)(a2 + v73);
          if (v74 == -1 || v74 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(a2 + *v7) + v74);
            *(void *)(a2 + v73) = v74 + 1;
            v72 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              BOOL v14 = v71++ >= 9;
              if (v14)
              {
                uint64_t v72 = 0;
                goto LABEL_260;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v72 = 0;
        }
LABEL_260:
        uint64_t v143 = 32;
        goto LABEL_306;
      case 0x1Au:
        char v76 = 0;
        unsigned int v77 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x800u;
        while (2)
        {
          uint64_t v78 = *v3;
          unint64_t v79 = *(void *)(a2 + v78);
          if (v79 == -1 || v79 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(a2 + *v7) + v79);
            *(void *)(a2 + v78) = v79 + 1;
            v19 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v76 += 7;
              BOOL v14 = v77++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_264;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_264:
        uint64_t v140 = 224;
        goto LABEL_311;
      case 0x1Bu:
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v83 = 0;
        *(_DWORD *)(a1 + 360) |= 0x200000u;
        while (2)
        {
          uint64_t v84 = *v3;
          unint64_t v85 = *(void *)(a2 + v84);
          if (v85 == -1 || v85 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)(a2 + *v7) + v85);
            *(void *)(a2 + v84) = v85 + 1;
            v83 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              BOOL v14 = v82++ >= 9;
              if (v14)
              {
                uint64_t v83 = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v83 = 0;
        }
LABEL_268:
        BOOL v141 = v83 != 0;
        uint64_t v142 = 357;
        goto LABEL_289;
      case 0x1Cu:
        char v87 = 0;
        unsigned int v88 = 0;
        uint64_t v72 = 0;
        *(_DWORD *)(a1 + 360) |= 2u;
        while (2)
        {
          uint64_t v89 = *v3;
          unint64_t v90 = *(void *)(a2 + v89);
          if (v90 == -1 || v90 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(a2 + *v7) + v90);
            *(void *)(a2 + v89) = v90 + 1;
            v72 |= (unint64_t)(v91 & 0x7F) << v87;
            if (v91 < 0)
            {
              v87 += 7;
              BOOL v14 = v88++ >= 9;
              if (v14)
              {
                uint64_t v72 = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v72 = 0;
        }
LABEL_272:
        uint64_t v143 = 16;
        goto LABEL_306;
      case 0x1Du:
        char v92 = 0;
        unsigned int v93 = 0;
        uint64_t v72 = 0;
        *(_DWORD *)(a1 + 360) |= 4u;
        while (2)
        {
          uint64_t v94 = *v3;
          unint64_t v95 = *(void *)(a2 + v94);
          if (v95 == -1 || v95 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(a2 + *v7) + v95);
            *(void *)(a2 + v94) = v95 + 1;
            v72 |= (unint64_t)(v96 & 0x7F) << v92;
            if (v96 < 0)
            {
              v92 += 7;
              BOOL v14 = v93++ >= 9;
              if (v14)
              {
                uint64_t v72 = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v72 = 0;
        }
LABEL_276:
        uint64_t v143 = 24;
        goto LABEL_306;
      case 0x1Eu:
        char v97 = 0;
        unsigned int v98 = 0;
        uint64_t v99 = 0;
        *(_DWORD *)(a1 + 360) |= 0x80000u;
        while (2)
        {
          uint64_t v100 = *v3;
          unint64_t v101 = *(void *)(a2 + v100);
          if (v101 == -1 || v101 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v102 = *(unsigned char *)(*(void *)(a2 + *v7) + v101);
            *(void *)(a2 + v100) = v101 + 1;
            v99 |= (unint64_t)(v102 & 0x7F) << v97;
            if (v102 < 0)
            {
              v97 += 7;
              BOOL v14 = v98++ >= 9;
              if (v14)
              {
                uint64_t v99 = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v99 = 0;
        }
LABEL_280:
        BOOL v141 = v99 != 0;
        uint64_t v142 = 355;
        goto LABEL_289;
      case 0x1Fu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 248;
        goto LABEL_198;
      case 0x20u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 232;
        goto LABEL_198;
      case 0x21u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 256;
        goto LABEL_198;
      case 0x22u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 264;
        goto LABEL_198;
      case 0x23u:
        char v47 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 344), v47);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v47, a2) & 1) == 0) {
          goto LABEL_314;
        }
        goto LABEL_217;
      case 0x24u:
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x400u;
        while (2)
        {
          uint64_t v105 = *v3;
          unint64_t v106 = *(void *)(a2 + v105);
          if (v106 == -1 || v106 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v107 = *(unsigned char *)(*(void *)(a2 + *v7) + v106);
            *(void *)(a2 + v105) = v106 + 1;
            v19 |= (unint64_t)(v107 & 0x7F) << v103;
            if (v107 < 0)
            {
              v103 += 7;
              BOOL v14 = v104++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_284:
        uint64_t v140 = 144;
        goto LABEL_311;
      case 0x25u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 136;
        goto LABEL_198;
      case 0x27u:
        char v108 = 0;
        unsigned int v109 = 0;
        uint64_t v110 = 0;
        *(_DWORD *)(a1 + 360) |= 0x20000u;
        while (2)
        {
          uint64_t v111 = *v3;
          unint64_t v112 = *(void *)(a2 + v111);
          if (v112 == -1 || v112 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v113 = *(unsigned char *)(*(void *)(a2 + *v7) + v112);
            *(void *)(a2 + v111) = v112 + 1;
            v110 |= (unint64_t)(v113 & 0x7F) << v108;
            if (v113 < 0)
            {
              v108 += 7;
              BOOL v14 = v109++ >= 9;
              if (v14)
              {
                uint64_t v110 = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v110 = 0;
        }
LABEL_288:
        BOOL v141 = v110 != 0;
        uint64_t v142 = 353;
LABEL_289:
        *(unsigned char *)(a1 + v142) = v141;
        goto LABEL_312;
      case 0x28u:
        char v47 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        [(id)a1 addFractionalCohortMembership:v47];
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v47, a2) & 1) == 0)
        {
          goto LABEL_314;
        }
        goto LABEL_217;
      case 0x29u:
        char v114 = 0;
        unsigned int v115 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x8000u;
        while (2)
        {
          uint64_t v116 = *v3;
          unint64_t v117 = *(void *)(a2 + v116);
          if (v117 == -1 || v117 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v118 = *(unsigned char *)(*(void *)(a2 + *v7) + v117);
            *(void *)(a2 + v116) = v117 + 1;
            v19 |= (unint64_t)(v118 & 0x7F) << v114;
            if (v118 < 0)
            {
              v114 += 7;
              BOOL v14 = v115++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_293;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_293:
        uint64_t v140 = 336;
        goto LABEL_311;
      case 0x2Au:
        char v119 = 0;
        unsigned int v120 = 0;
        uint64_t v72 = 0;
        *(_DWORD *)(a1 + 360) |= 0x20u;
        while (2)
        {
          uint64_t v121 = *v3;
          unint64_t v122 = *(void *)(a2 + v121);
          if (v122 == -1 || v122 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v123 = *(unsigned char *)(*(void *)(a2 + *v7) + v122);
            *(void *)(a2 + v121) = v122 + 1;
            v72 |= (unint64_t)(v123 & 0x7F) << v119;
            if (v123 < 0)
            {
              v119 += 7;
              BOOL v14 = v120++ >= 9;
              if (v14)
              {
                uint64_t v72 = 0;
                goto LABEL_297;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v72 = 0;
        }
LABEL_297:
        uint64_t v143 = 48;
        goto LABEL_306;
      case 0x2Bu:
        char v124 = 0;
        unsigned int v125 = 0;
        uint64_t v72 = 0;
        *(_DWORD *)(a1 + 360) |= 1u;
        while (2)
        {
          uint64_t v126 = *v3;
          unint64_t v127 = *(void *)(a2 + v126);
          if (v127 == -1 || v127 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v128 = *(unsigned char *)(*(void *)(a2 + *v7) + v127);
            *(void *)(a2 + v126) = v127 + 1;
            v72 |= (unint64_t)(v128 & 0x7F) << v124;
            if (v128 < 0)
            {
              v124 += 7;
              BOOL v14 = v125++ >= 9;
              if (v14)
              {
                uint64_t v72 = 0;
                goto LABEL_301;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v72 = 0;
        }
LABEL_301:
        uint64_t v143 = 8;
        goto LABEL_306;
      case 0x2Cu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 168;
        goto LABEL_198;
      case 0x2Du:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 184;
        goto LABEL_198;
      case 0x2Eu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 160;
        goto LABEL_198;
      case 0x2Fu:
        char v129 = 0;
        unsigned int v130 = 0;
        uint64_t v72 = 0;
        *(_DWORD *)(a1 + 360) |= 0x10u;
        while (2)
        {
          uint64_t v131 = *v3;
          unint64_t v132 = *(void *)(a2 + v131);
          if (v132 == -1 || v132 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v133 = *(unsigned char *)(*(void *)(a2 + *v7) + v132);
            *(void *)(a2 + v131) = v132 + 1;
            v72 |= (unint64_t)(v133 & 0x7F) << v129;
            if (v133 < 0)
            {
              v129 += 7;
              BOOL v14 = v130++ >= 9;
              if (v14)
              {
                uint64_t v72 = 0;
                goto LABEL_305;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v72 = 0;
        }
LABEL_305:
        uint64_t v143 = 40;
LABEL_306:
        *(void *)(a1 + v143) = v72;
        goto LABEL_312;
      case 0x30u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 176;
        goto LABEL_198;
      case 0x31u:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 152;
LABEL_198:
        uint64_t v134 = *(void **)(a1 + v24);
        *(void *)(a1 + v24) = v23;

        goto LABEL_312;
      case 0x32u:
        char v47 = objc_alloc_init(NTPBAlternateHeadline);
        objc_storeStrong((id *)(a1 + 56), v47);
        if (!PBReaderPlaceMark() || !NTPBAlternateHeadlineReadFrom((uint64_t)v47, a2)) {
          goto LABEL_314;
        }
        goto LABEL_217;
      case 0x33u:
        char v135 = 0;
        unsigned int v136 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x4000u;
        while (2)
        {
          uint64_t v137 = *v3;
          unint64_t v138 = *(void *)(a2 + v137);
          if (v138 == -1 || v138 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v139 = *(unsigned char *)(*(void *)(a2 + *v7) + v138);
            *(void *)(a2 + v137) = v138 + 1;
            v19 |= (unint64_t)(v139 & 0x7F) << v135;
            if (v139 < 0)
            {
              v135 += 7;
              BOOL v14 = v136++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_310;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_310:
        uint64_t v140 = 276;
LABEL_311:
        *(_DWORD *)(a1 + v140) = v19;
        goto LABEL_312;
      case 0x34u:
        char v47 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 192), v47);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v47, a2) & 1) == 0) {
          goto LABEL_314;
        }
        goto LABEL_217;
      case 0x35u:
        char v47 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 200), v47);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v47, a2) & 1) == 0) {
          goto LABEL_314;
        }
        goto LABEL_217;
      case 0x36u:
        char v47 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 208), v47);
        if PBReaderPlaceMark() && (NTPBIssueViewDataReadFrom((uint64_t)v47, a2))
        {
LABEL_217:
          PBReaderRecallMark();
LABEL_218:

LABEL_312:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_314:

        return 0;
      case 0x37u:
        PBReaderReadString();
        char v47 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v47) {
          [(id)a1 addTopicIds:v47];
        }
        goto LABEL_218;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_312;
    }
  }
}

BOOL NTPBTrendingConfigReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        unsigned int v18 = (NTPBTrendingLanguageConfig *)a1[1];
        a1[1] = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(NTPBTrendingLanguageConfig);
    [a1 addLanguageConfigs:v18];
    if (!PBReaderPlaceMark() || !NTPBTrendingLanguageConfigReadFrom(v18, a2))
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTodayQueueConfigReadFrom(uint64_t a1, unsigned char *a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)&a2[*MEMORY[0x263F62298]] < *(void *)&a2[*MEMORY[0x263F62288]])
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (a2[*v5]) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&a2[v11];
        if (v12 == -1 || v12 >= *(void *)&a2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a2[*v7] + v12);
        *(void *)&a2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = a2[*v5];
          goto LABEL_14;
        }
      }
      a2[*v5] = 1;
LABEL_12:
      int v15 = a2[*v5];
      if (a2[*v5]) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)&a2[v21];
          if (v22 == -1 || v22 >= *(void *)&a2[*v4]) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)&a2[*v7] + v22);
          *(void *)&a2[v21] = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v20 = 0;
            goto LABEL_35;
          }
        }
        a2[*v5] = 1;
LABEL_33:
        if (a2[*v5]) {
          uint64_t v20 = 0;
        }
LABEL_35:
        *(void *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3))
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
      else
      {
        uint64_t v17 = objc_alloc_init(NTPBTodaySectionConfig);
        [(id)a1 addTodaySectionConfigs:v17];

        if (!PBReaderPlaceMark() || (NTPBTodaySectionConfigReadFrom((uint64_t)v17, a2) & 1) == 0) {
          return 0;
        }
        PBReaderRecallMark();
      }
    }
    while (*(void *)&a2[*v3] < *(void *)&a2[*v4]);
  }
  return a2[*v5] == 0;
}

uint64_t NTPBTocReorderReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 24;
          goto LABEL_37;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 40) |= 4u;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_48;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_48:
          uint64_t v37 = 36;
          goto LABEL_57;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v22 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_52:
          uint64_t v37 = 32;
          goto LABEL_57;
        case 4u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
LABEL_37:
          unsigned int v31 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        case 5u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v34 = *v3;
        unint64_t v35 = *(void *)(a2 + v34);
        if (v35 == -1 || v35 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
        *(void *)(a2 + v34) = v35 + 1;
        v22 |= (unint64_t)(v36 & 0x7F) << v32;
        if ((v36 & 0x80) == 0) {
          goto LABEL_54;
        }
        v32 += 7;
        BOOL v14 = v33++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_56;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_54:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v22) = 0;
      }
LABEL_56:
      uint64_t v37 = 16;
LABEL_57:
      *(_DWORD *)(a1 + v37) = v22;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTagListRecordReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t String = PBReaderReadString();
        if (String) {
          [a1 addTagIDs:String];
        }
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(NTPBRecordBase);

        a1[1] = v17;
        if (!PBReaderPlaceMark() || (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) == 0) {
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBIssueListRecordReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t String = PBReaderReadString();
        if (String) {
          [a1 addIssueIDs:String];
        }
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(NTPBRecordBase);

        a1[1] = v17;
        if (!PBReaderPlaceMark() || (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) == 0) {
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTodaySectionConfigWebEmbedReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_31;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v20 = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_33:
        *(void *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3))
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
      else
      {
        uint64_t String = (void *)PBReaderReadString();

        *(void *)(a1 + 16) = String;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBMediaEngageReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x100000uLL;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_309;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_311;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_309:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_311:
        uint64_t v239 = 276;
        goto LABEL_446;
      case 2u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 248;
        goto LABEL_285;
      case 3u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        *(void *)(a1 + 432) |= 0x20uLL;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_315;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_315:
        uint64_t v240 = 48;
        goto LABEL_441;
      case 4u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 88;
        goto LABEL_285;
      case 5u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 344;
        goto LABEL_285;
      case 6u:
        uint64_t v25 = PBReaderReadData();
        uint64_t v26 = 96;
        goto LABEL_285;
      case 7u:
        uint64_t v25 = PBReaderReadData();
        uint64_t v26 = 112;
        goto LABEL_285;
      case 8u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 360;
        goto LABEL_285;
      case 9u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x40000uLL;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v20 |= (unint64_t)(v39 & 0x7F) << v34;
            if (v39 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_319;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_319:
        uint64_t v239 = 268;
        goto LABEL_446;
      case 0xAu:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x10000uLL;
        while (2)
        {
          uint64_t v42 = *v3;
          uint64_t v43 = *(void *)(a2 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v44;
            v20 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_323;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_323:
        uint64_t v239 = 260;
        goto LABEL_446;
      case 0xBu:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v29 = 0;
        *(void *)(a1 + 432) |= 4uLL;
        while (2)
        {
          uint64_t v48 = *v3;
          uint64_t v49 = *(void *)(a2 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
            *(void *)(a2 + v48) = v50;
            v29 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v15 = v47++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_327;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_327:
        uint64_t v240 = 24;
        goto LABEL_441;
      case 0xCu:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v29 = 0;
        *(void *)(a1 + 432) |= 0x10uLL;
        while (2)
        {
          uint64_t v54 = *v3;
          uint64_t v55 = *(void *)(a2 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
            *(void *)(a2 + v54) = v56;
            v29 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v15 = v53++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_331;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_331:
        uint64_t v240 = 40;
        goto LABEL_441;
      case 0xDu:
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x80000uLL;
        while (2)
        {
          uint64_t v60 = *v3;
          uint64_t v61 = *(void *)(a2 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
            *(void *)(a2 + v60) = v62;
            v20 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v15 = v59++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_335;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_335:
        uint64_t v239 = 272;
        goto LABEL_446;
      case 0xEu:
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v29 = 0;
        *(void *)(a1 + 432) |= 8uLL;
        while (2)
        {
          uint64_t v66 = *v3;
          uint64_t v67 = *(void *)(a2 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(a2 + *v7) + v67);
            *(void *)(a2 + v66) = v68;
            v29 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              BOOL v15 = v65++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_339;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_339:
        uint64_t v240 = 32;
        goto LABEL_441;
      case 0xFu:
        char v70 = 0;
        unsigned int v71 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x20000uLL;
        while (2)
        {
          uint64_t v72 = *v3;
          uint64_t v73 = *(void *)(a2 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(a2 + *v7) + v73);
            *(void *)(a2 + v72) = v74;
            v20 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              BOOL v15 = v71++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_343;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_343:
        uint64_t v239 = 264;
        goto LABEL_446;
      case 0x10u:
        char v76 = 0;
        unsigned int v77 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x1000uLL;
        while (2)
        {
          uint64_t v78 = *v3;
          uint64_t v79 = *(void *)(a2 + v78);
          unint64_t v80 = v79 + 1;
          if (v79 == -1 || v80 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v81 = *(unsigned char *)(*(void *)(a2 + *v7) + v79);
            *(void *)(a2 + v78) = v80;
            v20 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              BOOL v15 = v77++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_347;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_347:
        uint64_t v239 = 136;
        goto LABEL_446;
      case 0x11u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 128;
        goto LABEL_285;
      case 0x12u:
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x800uLL;
        while (2)
        {
          uint64_t v84 = *v3;
          uint64_t v85 = *(void *)(a2 + v84);
          unint64_t v86 = v85 + 1;
          if (v85 == -1 || v86 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v87 = *(unsigned char *)(*(void *)(a2 + *v7) + v85);
            *(void *)(a2 + v84) = v86;
            v20 |= (unint64_t)(v87 & 0x7F) << v82;
            if (v87 < 0)
            {
              v82 += 7;
              BOOL v15 = v83++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_351;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_351:
        uint64_t v239 = 124;
        goto LABEL_446;
      case 0x13u:
        uint64_t v25 = PBReaderReadData();
        uint64_t v26 = 144;
        goto LABEL_285;
      case 0x14u:
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v90 = 0;
        *(void *)(a1 + 432) |= 0x200000000uLL;
        while (2)
        {
          uint64_t v91 = *v3;
          uint64_t v92 = *(void *)(a2 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(a2 + *v7) + v92);
            *(void *)(a2 + v91) = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              BOOL v15 = v89++ >= 9;
              if (v15)
              {
                uint64_t v90 = 0;
                goto LABEL_355;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v90 = 0;
        }
LABEL_355:
        BOOL v241 = v90 != 0;
        uint64_t v242 = 429;
        goto LABEL_416;
      case 0x17u:
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x200uLL;
        while (2)
        {
          uint64_t v98 = *v3;
          uint64_t v99 = *(void *)(a2 + v98);
          unint64_t v100 = v99 + 1;
          if (v99 == -1 || v100 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(a2 + *v7) + v99);
            *(void *)(a2 + v98) = v100;
            v20 |= (unint64_t)(v101 & 0x7F) << v96;
            if (v101 < 0)
            {
              v96 += 7;
              BOOL v15 = v97++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_359;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_359:
        uint64_t v239 = 104;
        goto LABEL_446;
      case 0x18u:
        PBReaderReadString();
        char v102 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v102) {
          [(id)a1 addNamedEntities:v102];
        }
        goto LABEL_305;
      case 0x19u:
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x800000uLL;
        while (2)
        {
          uint64_t v105 = *v3;
          uint64_t v106 = *(void *)(a2 + v105);
          unint64_t v107 = v106 + 1;
          if (v106 == -1 || v107 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v108 = *(unsigned char *)(*(void *)(a2 + *v7) + v106);
            *(void *)(a2 + v105) = v107;
            v20 |= (unint64_t)(v108 & 0x7F) << v103;
            if (v108 < 0)
            {
              v103 += 7;
              BOOL v15 = v104++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_363;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_363:
        uint64_t v239 = 336;
        goto LABEL_446;
      case 0x1Au:
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x400uLL;
        while (2)
        {
          uint64_t v111 = *v3;
          uint64_t v112 = *(void *)(a2 + v111);
          unint64_t v113 = v112 + 1;
          if (v112 == -1 || v113 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v114 = *(unsigned char *)(*(void *)(a2 + *v7) + v112);
            *(void *)(a2 + v111) = v113;
            v20 |= (unint64_t)(v114 & 0x7F) << v109;
            if (v114 < 0)
            {
              v109 += 7;
              BOOL v15 = v110++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_367;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_367:
        uint64_t v239 = 120;
        goto LABEL_446;
      case 0x1Bu:
        char v115 = 0;
        unsigned int v116 = 0;
        uint64_t v117 = 0;
        *(void *)(a1 + 432) |= 0x10000000uLL;
        while (2)
        {
          uint64_t v118 = *v3;
          uint64_t v119 = *(void *)(a2 + v118);
          unint64_t v120 = v119 + 1;
          if (v119 == -1 || v120 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v121 = *(unsigned char *)(*(void *)(a2 + *v7) + v119);
            *(void *)(a2 + v118) = v120;
            v117 |= (unint64_t)(v121 & 0x7F) << v115;
            if (v121 < 0)
            {
              v115 += 7;
              BOOL v15 = v116++ >= 9;
              if (v15)
              {
                uint64_t v117 = 0;
                goto LABEL_371;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v117 = 0;
        }
LABEL_371:
        BOOL v241 = v117 != 0;
        uint64_t v242 = 424;
        goto LABEL_416;
      case 0x1Cu:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 368;
        goto LABEL_285;
      case 0x1Du:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 376;
        goto LABEL_285;
      case 0x1Eu:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 384;
        goto LABEL_285;
      case 0x1Fu:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 352;
        goto LABEL_285;
      case 0x20u:
        char v122 = 0;
        unsigned int v123 = 0;
        uint64_t v124 = 0;
        *(void *)(a1 + 432) |= 0x40000000uLL;
        while (2)
        {
          uint64_t v125 = *v3;
          uint64_t v126 = *(void *)(a2 + v125);
          unint64_t v127 = v126 + 1;
          if (v126 == -1 || v127 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v128 = *(unsigned char *)(*(void *)(a2 + *v7) + v126);
            *(void *)(a2 + v125) = v127;
            v124 |= (unint64_t)(v128 & 0x7F) << v122;
            if (v128 < 0)
            {
              v122 += 7;
              BOOL v15 = v123++ >= 9;
              if (v15)
              {
                uint64_t v124 = 0;
                goto LABEL_375;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v124 = 0;
        }
LABEL_375:
        BOOL v241 = v124 != 0;
        uint64_t v242 = 426;
        goto LABEL_416;
      case 0x21u:
        char v129 = 0;
        unsigned int v130 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x4000000uLL;
        while (2)
        {
          uint64_t v131 = *v3;
          uint64_t v132 = *(void *)(a2 + v131);
          unint64_t v133 = v132 + 1;
          if (v132 == -1 || v133 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v134 = *(unsigned char *)(*(void *)(a2 + *v7) + v132);
            *(void *)(a2 + v131) = v133;
            v20 |= (unint64_t)(v134 & 0x7F) << v129;
            if (v134 < 0)
            {
              v129 += 7;
              BOOL v15 = v130++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_379;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_379:
        uint64_t v239 = 408;
        goto LABEL_446;
      case 0x22u:
        char v135 = 0;
        unsigned int v136 = 0;
        uint64_t v137 = 0;
        *(void *)(a1 + 432) |= 0x400000000uLL;
        while (2)
        {
          uint64_t v138 = *v3;
          uint64_t v139 = *(void *)(a2 + v138);
          unint64_t v140 = v139 + 1;
          if (v139 == -1 || v140 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v141 = *(unsigned char *)(*(void *)(a2 + *v7) + v139);
            *(void *)(a2 + v138) = v140;
            v137 |= (unint64_t)(v141 & 0x7F) << v135;
            if (v141 < 0)
            {
              v135 += 7;
              BOOL v15 = v136++ >= 9;
              if (v15)
              {
                uint64_t v137 = 0;
                goto LABEL_383;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v137 = 0;
        }
LABEL_383:
        BOOL v241 = v137 != 0;
        uint64_t v242 = 430;
        goto LABEL_416;
      case 0x23u:
        char v142 = 0;
        unsigned int v143 = 0;
        uint64_t v29 = 0;
        *(void *)(a1 + 432) |= 0x40uLL;
        while (2)
        {
          uint64_t v144 = *v3;
          uint64_t v145 = *(void *)(a2 + v144);
          unint64_t v146 = v145 + 1;
          if (v145 == -1 || v146 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v147 = *(unsigned char *)(*(void *)(a2 + *v7) + v145);
            *(void *)(a2 + v144) = v146;
            v29 |= (unint64_t)(v147 & 0x7F) << v142;
            if (v147 < 0)
            {
              v142 += 7;
              BOOL v15 = v143++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_387;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_387:
        uint64_t v240 = 56;
        goto LABEL_441;
      case 0x24u:
        char v148 = 0;
        unsigned int v149 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x8000uLL;
        while (2)
        {
          uint64_t v150 = *v3;
          uint64_t v151 = *(void *)(a2 + v150);
          unint64_t v152 = v151 + 1;
          if (v151 == -1 || v152 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v153 = *(unsigned char *)(*(void *)(a2 + *v7) + v151);
            *(void *)(a2 + v150) = v152;
            v20 |= (unint64_t)(v153 & 0x7F) << v148;
            if (v153 < 0)
            {
              v148 += 7;
              BOOL v15 = v149++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_391;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_391:
        uint64_t v239 = 256;
        goto LABEL_446;
      case 0x25u:
        char v154 = 0;
        unsigned int v155 = 0;
        uint64_t v29 = 0;
        *(void *)(a1 + 432) |= 2uLL;
        while (2)
        {
          uint64_t v156 = *v3;
          uint64_t v157 = *(void *)(a2 + v156);
          unint64_t v158 = v157 + 1;
          if (v157 == -1 || v158 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v159 = *(unsigned char *)(*(void *)(a2 + *v7) + v157);
            *(void *)(a2 + v156) = v158;
            v29 |= (unint64_t)(v159 & 0x7F) << v154;
            if (v159 < 0)
            {
              v154 += 7;
              BOOL v15 = v155++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_395;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_395:
        uint64_t v240 = 16;
        goto LABEL_441;
      case 0x26u:
        char v160 = 0;
        unsigned int v161 = 0;
        uint64_t v162 = 0;
        *(void *)(a1 + 432) |= 0x20000000uLL;
        while (2)
        {
          uint64_t v163 = *v3;
          uint64_t v164 = *(void *)(a2 + v163);
          unint64_t v165 = v164 + 1;
          if (v164 == -1 || v165 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v166 = *(unsigned char *)(*(void *)(a2 + *v7) + v164);
            *(void *)(a2 + v163) = v165;
            v162 |= (unint64_t)(v166 & 0x7F) << v160;
            if (v166 < 0)
            {
              v160 += 7;
              BOOL v15 = v161++ >= 9;
              if (v15)
              {
                uint64_t v162 = 0;
                goto LABEL_399;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v162 = 0;
        }
LABEL_399:
        BOOL v241 = v162 != 0;
        uint64_t v242 = 425;
        goto LABEL_416;
      case 0x27u:
        char v167 = 0;
        unsigned int v168 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x4000uLL;
        while (2)
        {
          uint64_t v169 = *v3;
          uint64_t v170 = *(void *)(a2 + v169);
          unint64_t v171 = v170 + 1;
          if (v170 == -1 || v171 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v172 = *(unsigned char *)(*(void *)(a2 + *v7) + v170);
            *(void *)(a2 + v169) = v171;
            v20 |= (unint64_t)(v172 & 0x7F) << v167;
            if (v172 < 0)
            {
              v167 += 7;
              BOOL v15 = v168++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_403;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_403:
        uint64_t v239 = 240;
        goto LABEL_446;
      case 0x28u:
        char v173 = 0;
        unsigned int v174 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x2000000uLL;
        while (2)
        {
          uint64_t v175 = *v3;
          uint64_t v176 = *(void *)(a2 + v175);
          unint64_t v177 = v176 + 1;
          if (v176 == -1 || v177 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v178 = *(unsigned char *)(*(void *)(a2 + *v7) + v176);
            *(void *)(a2 + v175) = v177;
            v20 |= (unint64_t)(v178 & 0x7F) << v173;
            if (v178 < 0)
            {
              v173 += 7;
              BOOL v15 = v174++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_407;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_407:
        uint64_t v239 = 392;
        goto LABEL_446;
      case 0x29u:
        char v179 = 0;
        unsigned int v180 = 0;
        uint64_t v181 = 0;
        *(void *)(a1 + 432) |= 0x100000000uLL;
        while (2)
        {
          uint64_t v182 = *v3;
          uint64_t v183 = *(void *)(a2 + v182);
          unint64_t v184 = v183 + 1;
          if (v183 == -1 || v184 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v185 = *(unsigned char *)(*(void *)(a2 + *v7) + v183);
            *(void *)(a2 + v182) = v184;
            v181 |= (unint64_t)(v185 & 0x7F) << v179;
            if (v185 < 0)
            {
              v179 += 7;
              BOOL v15 = v180++ >= 9;
              if (v15)
              {
                uint64_t v181 = 0;
                goto LABEL_411;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v181 = 0;
        }
LABEL_411:
        BOOL v241 = v181 != 0;
        uint64_t v242 = 428;
        goto LABEL_416;
      case 0x2Au:
        char v186 = 0;
        unsigned int v187 = 0;
        uint64_t v188 = 0;
        *(void *)(a1 + 432) |= 0x80000000uLL;
        while (2)
        {
          uint64_t v189 = *v3;
          uint64_t v190 = *(void *)(a2 + v189);
          unint64_t v191 = v190 + 1;
          if (v190 == -1 || v191 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v192 = *(unsigned char *)(*(void *)(a2 + *v7) + v190);
            *(void *)(a2 + v189) = v191;
            v188 |= (unint64_t)(v192 & 0x7F) << v186;
            if (v192 < 0)
            {
              v186 += 7;
              BOOL v15 = v187++ >= 9;
              if (v15)
              {
                uint64_t v188 = 0;
                goto LABEL_415;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v188 = 0;
        }
LABEL_415:
        BOOL v241 = v188 != 0;
        uint64_t v242 = 427;
LABEL_416:
        *(unsigned char *)(a1 + v242) = v241;
        goto LABEL_447;
      case 0x2Bu:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 304;
        goto LABEL_285;
      case 0x2Cu:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 280;
        goto LABEL_285;
      case 0x2Du:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 320;
        goto LABEL_285;
      case 0x2Eu:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 328;
        goto LABEL_285;
      case 0x2Fu:
        char v102 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 416), v102);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v102, a2) & 1) == 0) {
          goto LABEL_452;
        }
        goto LABEL_304;
      case 0x30u:
        char v193 = 0;
        unsigned int v194 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x2000uLL;
        while (2)
        {
          uint64_t v195 = *v3;
          uint64_t v196 = *(void *)(a2 + v195);
          unint64_t v197 = v196 + 1;
          if (v196 == -1 || v197 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v198 = *(unsigned char *)(*(void *)(a2 + *v7) + v196);
            *(void *)(a2 + v195) = v197;
            v20 |= (unint64_t)(v198 & 0x7F) << v193;
            if (v198 < 0)
            {
              v193 += 7;
              BOOL v15 = v194++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_420;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_420:
        uint64_t v239 = 168;
        goto LABEL_446;
      case 0x31u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 160;
        goto LABEL_285;
      case 0x32u:
        char v102 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        [(id)a1 addFractionalCohortMembership:v102];
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v102, a2) & 1) == 0)
        {
          goto LABEL_452;
        }
        goto LABEL_304;
      case 0x33u:
        char v199 = 0;
        unsigned int v200 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x8000000uLL;
        while (2)
        {
          uint64_t v201 = *v3;
          uint64_t v202 = *(void *)(a2 + v201);
          unint64_t v203 = v202 + 1;
          if (v202 == -1 || v203 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v204 = *(unsigned char *)(*(void *)(a2 + *v7) + v202);
            *(void *)(a2 + v201) = v203;
            v20 |= (unint64_t)(v204 & 0x7F) << v199;
            if (v204 < 0)
            {
              v199 += 7;
              BOOL v15 = v200++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_424;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_424:
        uint64_t v239 = 412;
        goto LABEL_446;
      case 0x34u:
        char v205 = 0;
        unsigned int v206 = 0;
        uint64_t v29 = 0;
        *(void *)(a1 + 432) |= 0x100uLL;
        while (2)
        {
          uint64_t v207 = *v3;
          uint64_t v208 = *(void *)(a2 + v207);
          unint64_t v209 = v208 + 1;
          if (v208 == -1 || v209 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v210 = *(unsigned char *)(*(void *)(a2 + *v7) + v208);
            *(void *)(a2 + v207) = v209;
            v29 |= (unint64_t)(v210 & 0x7F) << v205;
            if (v210 < 0)
            {
              v205 += 7;
              BOOL v15 = v206++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_428;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_428:
        uint64_t v240 = 72;
        goto LABEL_441;
      case 0x35u:
        char v211 = 0;
        unsigned int v212 = 0;
        uint64_t v29 = 0;
        *(void *)(a1 + 432) |= 1uLL;
        while (2)
        {
          uint64_t v213 = *v3;
          uint64_t v214 = *(void *)(a2 + v213);
          unint64_t v215 = v214 + 1;
          if (v214 == -1 || v215 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v216 = *(unsigned char *)(*(void *)(a2 + *v7) + v214);
            *(void *)(a2 + v213) = v215;
            v29 |= (unint64_t)(v216 & 0x7F) << v211;
            if (v216 < 0)
            {
              v211 += 7;
              BOOL v15 = v212++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_432;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_432:
        uint64_t v240 = 8;
        goto LABEL_441;
      case 0x36u:
        char v217 = 0;
        unsigned int v218 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x200000uLL;
        while (2)
        {
          uint64_t v219 = *v3;
          uint64_t v220 = *(void *)(a2 + v219);
          unint64_t v221 = v220 + 1;
          if (v220 == -1 || v221 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v222 = *(unsigned char *)(*(void *)(a2 + *v7) + v220);
            *(void *)(a2 + v219) = v221;
            v20 |= (unint64_t)(v222 & 0x7F) << v217;
            if (v222 < 0)
            {
              v217 += 7;
              BOOL v15 = v218++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_436;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_436:
        uint64_t v239 = 288;
        goto LABEL_446;
      case 0x37u:
        *(void *)(a1 + 432) |= 0x400000uLL;
        uint64_t v223 = *v3;
        unint64_t v224 = *(void *)(a2 + v223);
        if (v224 <= 0xFFFFFFFFFFFFFFFBLL && v224 + 4 <= *(void *)(a2 + *v4))
        {
          int v225 = *(_DWORD *)(*(void *)(a2 + *v7) + v224);
          *(void *)(a2 + v223) = v224 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v225 = 0;
        }
        *(_DWORD *)(a1 + 312) = v225;
        goto LABEL_447;
      case 0x38u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 192;
        goto LABEL_285;
      case 0x39u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 208;
        goto LABEL_285;
      case 0x3Au:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 184;
        goto LABEL_285;
      case 0x3Bu:
        char v226 = 0;
        unsigned int v227 = 0;
        uint64_t v29 = 0;
        *(void *)(a1 + 432) |= 0x80uLL;
        while (2)
        {
          uint64_t v228 = *v3;
          uint64_t v229 = *(void *)(a2 + v228);
          unint64_t v230 = v229 + 1;
          if (v229 == -1 || v230 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v231 = *(unsigned char *)(*(void *)(a2 + *v7) + v229);
            *(void *)(a2 + v228) = v230;
            v29 |= (unint64_t)(v231 & 0x7F) << v226;
            if (v231 < 0)
            {
              v226 += 7;
              BOOL v15 = v227++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_440;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_440:
        uint64_t v240 = 64;
LABEL_441:
        *(void *)(a1 + v240) = v29;
        goto LABEL_447;
      case 0x3Cu:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 200;
        goto LABEL_285;
      case 0x3Du:
        uint64_t v25 = PBReaderReadData();
        uint64_t v26 = 176;
LABEL_285:
        v232 = *(void **)(a1 + v26);
        *(void *)(a1 + v26) = v25;

        goto LABEL_447;
      case 0x3Eu:
        char v102 = objc_alloc_init(NTPBAlternateHeadline);
        objc_storeStrong((id *)(a1 + 80), v102);
        if (!PBReaderPlaceMark() || !NTPBAlternateHeadlineReadFrom((uint64_t)v102, a2)) {
          goto LABEL_452;
        }
        goto LABEL_304;
      case 0x3Fu:
        char v233 = 0;
        unsigned int v234 = 0;
        uint64_t v20 = 0;
        *(void *)(a1 + 432) |= 0x1000000uLL;
        while (2)
        {
          uint64_t v235 = *v3;
          uint64_t v236 = *(void *)(a2 + v235);
          unint64_t v237 = v236 + 1;
          if (v236 == -1 || v237 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v238 = *(unsigned char *)(*(void *)(a2 + *v7) + v236);
            *(void *)(a2 + v235) = v237;
            v20 |= (unint64_t)(v238 & 0x7F) << v233;
            if (v238 < 0)
            {
              v233 += 7;
              BOOL v15 = v234++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_445;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_445:
        uint64_t v239 = 340;
LABEL_446:
        *(_DWORD *)(a1 + v239) = v20;
        goto LABEL_447;
      case 0x40u:
        char v102 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 216), v102);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v102, a2) & 1) == 0) {
          goto LABEL_452;
        }
        goto LABEL_304;
      case 0x41u:
        char v102 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 224), v102);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v102, a2) & 1) == 0) {
          goto LABEL_452;
        }
        goto LABEL_304;
      case 0x42u:
        char v102 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 232), v102);
        if PBReaderPlaceMark() && (NTPBIssueViewDataReadFrom((uint64_t)v102, a2))
        {
LABEL_304:
          PBReaderRecallMark();
LABEL_305:

LABEL_447:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_452:

        return 0;
      case 0x43u:
        PBReaderReadString();
        char v102 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v102) {
          [(id)a1 addTopicIds:v102];
        }
        goto LABEL_305;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_447;
    }
  }
}

uint64_t NTPBTocToggleTapReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        char v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTocHandleTapReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        char v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTocCardDragReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        char v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTocExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v23 = PBReaderReadData();
        char v24 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v23;
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTocCellExposureArticleElementReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_30;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_41;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_41:
          *(_DWORD *)(a1 + 24) = v22;
          continue;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
LABEL_30:
          uint64_t v26 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        case 4u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v30 = *v3;
        unint64_t v31 = *(void *)(a2 + v30);
        if (v31 == -1 || v31 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
        *(void *)(a2 + v30) = v31 + 1;
        v29 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0) {
          goto LABEL_43;
        }
        v27 += 7;
        BOOL v14 = v28++ >= 9;
        if (v14)
        {
          uint64_t v29 = 0;
          goto LABEL_45;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v29 = 0;
      }
LABEL_45:
      *(void *)(a1 + 8) = v29;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBTopicsFollowedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = (void *)a1[1];
        a1[1] = v17;
LABEL_23:

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v18 = PBReaderReadString();
    if (v18) {
      [a1 addTopicId:v18];
    }
    goto LABEL_23;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTocCellExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 60) |= 8u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_64;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_66;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_64:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_66:
        uint64_t v48 = 52;
        goto LABEL_83;
      case 2u:
        uint64_t v24 = PBReaderReadData();
        char v25 = *(void **)(a1 + 40);
        *(void *)(a1 + 40) = v24;

        goto LABEL_84;
      case 3u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 60) |= 0x10u;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_70:
        *(unsigned char *)(a1 + 56) = v28 != 0;
        goto LABEL_84;
      case 4u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v34 = *v3;
          unint64_t v35 = *(void *)(a2 + v34);
          if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v35 + 1;
            v19 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_74:
        uint64_t v48 = 8;
        goto LABEL_83;
      case 5u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v39 = *v3;
          unint64_t v40 = *(void *)(a2 + v39);
          if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v40 + 1;
            v19 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              BOOL v14 = v38++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_78:
        uint64_t v48 = 24;
        goto LABEL_83;
      case 6u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 60) |= 4u;
        while (2)
        {
          uint64_t v44 = *v3;
          unint64_t v45 = *(void *)(a2 + v44);
          if (v45 == -1 || v45 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v45 + 1;
            v19 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              BOOL v14 = v43++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_82:
        uint64_t v48 = 48;
LABEL_83:
        *(_DWORD *)(a1 + v48) = v19;
        goto LABEL_84;
      case 7u:
        unsigned int v47 = objc_alloc_init(NTPBFeedCellExposure);
        objc_storeStrong((id *)(a1 + 16), v47);
        if (!PBReaderPlaceMark() || (NTPBFeedCellExposureReadFrom((uint64_t)v47, a2) & 1) == 0) {
          goto LABEL_86;
        }
        goto LABEL_62;
      case 8u:
        unsigned int v47 = objc_alloc_init(NTPBTocCellExposureArticleElement);
        objc_storeStrong((id *)(a1 + 32), v47);
        if PBReaderPlaceMark() && (NTPBTocCellExposureArticleElementReadFrom((uint64_t)v47, a2))
        {
LABEL_62:
          PBReaderRecallMark();

LABEL_84:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_86:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_84;
    }
  }
}

uint64_t NTPBUserOnboardingResumeReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        unsigned int v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBNotificationItemRecordReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(NTPBRecordBase);

        *(void *)(a1 + 24) = v17;
        if (!PBReaderPlaceMark() || (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_21;
      case 2u:
        uint64_t String = (void *)PBReaderReadString();

        id v20 = String;
        uint64_t v21 = 56;
        goto LABEL_28;
      case 3u:
        char v22 = (void *)PBReaderReadString();

        id v20 = v22;
        uint64_t v21 = 16;
        goto LABEL_28;
      case 4u:
        uint64_t v23 = (void *)PBReaderReadString();

        id v20 = v23;
        uint64_t v21 = 32;
        goto LABEL_28;
      case 5u:
        uint64_t v24 = (void *)PBReaderReadString();

        id v20 = v24;
        uint64_t v21 = 40;
LABEL_28:
        *(void *)(a1 + v21) = v20;
        goto LABEL_29;
      case 6u:
        char v25 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityScores);

        *(void *)(a1 + 48) = v25;
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityScoresReadFrom(v25, a2) & 1) != 0)
        {
LABEL_21:
          PBReaderRecallMark();
LABEL_29:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      case 7u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v28) = 0;
                goto LABEL_53;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v28) = 0;
        }
LABEL_53:
        *(_DWORD *)(a1 + 72) = v28;
        goto LABEL_29;
      case 8u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_57;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_57:
        *(void *)(a1 + 8) = v34;
        goto LABEL_29;
      case 9u:
        uint64_t v38 = PBReaderReadString();
        if (v38) {
          [(id)a1 addSuppressIfFollowingTagIDs:v38];
        }
        goto LABEL_29;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_29;
    }
  }
}

uint64_t NTPBNotificationItemListRecordReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = objc_alloc_init(NTPBRecordBase);

          *(void *)(a1 + 16) = v17;
          if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2))
          {
            PBReaderRecallMark();
            continue;
          }
          return 0;
        case 2u:
          uint64_t String = PBReaderReadString();
          if (String) {
            [(id)a1 addNotificationItemIDs:String];
          }
          continue;
        case 3u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          break;
        case 4u:
          char v26 = (void *)PBReaderReadString();

          *(void *)(a1 + 8) = v26;
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v23 = *v3;
        unint64_t v24 = *(void *)(a2 + v23);
        if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
        *(void *)(a2 + v23) = v24 + 1;
        v22 |= (unint64_t)(v25 & 0x7F) << v20;
        if ((v25 & 0x80) == 0) {
          goto LABEL_35;
        }
        v20 += 7;
        BOOL v14 = v21++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_37;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v22) = 0;
      }
LABEL_37:
      *(_DWORD *)(a1 + 32) = v22;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleScrollNotwReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          uint64_t v12 = *(void *)(a2 + v11);
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v16) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = (v10 & 7) == 4;
        }
        if (!v17)
        {
          switch((v10 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 40) |= 1u;
              uint64_t v18 = *v3;
              unint64_t v19 = *(void *)(a2 + v18);
              if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(void *)(a2 + *v4))
              {
                int v20 = *(_DWORD *)(*(void *)(a2 + *v7) + v19);
                *(void *)(a2 + v18) = v19 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                int v20 = 0;
              }
              *(_DWORD *)(a1 + 16) = v20;
              goto LABEL_30;
            case 2u:
              uint64_t v21 = PBReaderReadString();
              uint64_t v22 = 8;
              goto LABEL_27;
            case 3u:
              uint64_t v21 = PBReaderReadString();
              uint64_t v22 = 24;
              goto LABEL_27;
            case 4u:
              uint64_t v21 = PBReaderReadString();
              uint64_t v22 = 32;
LABEL_27:
              unint64_t v24 = *(void **)(a1 + v22);
              *(void *)(a1 + v22) = v21;

              goto LABEL_30;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_30:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBSearchViewExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = 0;
              unsigned int v18 = 0;
              uint64_t v19 = 0;
              *(unsigned char *)(a1 + 40) |= 1u;
              break;
            case 2u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 16;
              goto LABEL_31;
            case 3u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 24;
              goto LABEL_31;
            case 4u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 32;
LABEL_31:
              char v26 = *(void **)(a1 + v25);
              *(void *)(a1 + v25) = v24;

              goto LABEL_36;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_36:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_33;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_35;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_35:
          *(_DWORD *)(a1 + 8) = v19;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBEmailSubscriptionRequestReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 16;
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_34;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_36;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v20 = 0;
            }
LABEL_36:
            *(void *)(a1 + 8) = v20;
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 24;
      }
      char v26 = *(void **)(a1 + v25);
      *(void *)(a1 + v25) = v24;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPersonalizationAggregateDeltaReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          uint64_t v12 = *(void *)(a2 + v11);
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        int v17 = v10 & 7;
        if (!v16 && v17 != 4)
        {
          switch((v10 >> 3))
          {
            case 0u:
              uint64_t String = (void *)PBReaderReadString();

              *(void *)(a1 + 72) = String;
              goto LABEL_77;
            case 1u:
              *(unsigned char *)(a1 + 80) |= 1u;
              uint64_t v20 = *v3;
              unint64_t v21 = *(void *)(a2 + v20);
              if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v22 = *(void *)(*(void *)(a2 + *v7) + v21);
                *(void *)(a2 + v20) = v21 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v22 = 0;
              }
              uint64_t v50 = 32;
              goto LABEL_76;
            case 2u:
              *(unsigned char *)(a1 + 80) |= 2u;
              uint64_t v23 = *v3;
              unint64_t v24 = *(void *)(a2 + v23);
              if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v22 = *(void *)(*(void *)(a2 + *v7) + v24);
                *(void *)(a2 + v23) = v24 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v22 = 0;
              }
              uint64_t v50 = 40;
              goto LABEL_76;
            case 3u:
              if (v17 == 2)
              {
                uint64_t result = PBReaderPlaceMark();
                if (!result) {
                  return result;
                }
                while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
                {
                  char v25 = 0;
                  unsigned int v26 = 0;
                  uint64_t v27 = 0;
                  while (1)
                  {
                    uint64_t v28 = *v3;
                    uint64_t v29 = *(void *)(a2 + v28);
                    unint64_t v30 = v29 + 1;
                    if (v29 == -1 || v30 > *(void *)(a2 + *v4)) {
                      break;
                    }
                    char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
                    *(void *)(a2 + v28) = v30;
                    v27 |= (unint64_t)(v31 & 0x7F) << v25;
                    if (v31 < 0)
                    {
                      v25 += 7;
                      BOOL v15 = v26++ >= 9;
                      if (!v15) {
                        continue;
                      }
                    }
                    goto LABEL_40;
                  }
                  *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
                  PBRepeatedUInt32Add();
                }
                PBReaderRecallMark();
              }
              else
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v45 = 0;
                while (1)
                {
                  uint64_t v46 = *v3;
                  uint64_t v47 = *(void *)(a2 + v46);
                  unint64_t v48 = v47 + 1;
                  if (v47 == -1 || v48 > *(void *)(a2 + *v4)) {
                    break;
                  }
                  char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
                  *(void *)(a2 + v46) = v48;
                  v45 |= (unint64_t)(v49 & 0x7F) << v43;
                  if (v49 < 0)
                  {
                    v43 += 7;
                    BOOL v15 = v44++ >= 9;
                    if (!v15) {
                      continue;
                    }
                  }
                  goto LABEL_67;
                }
                *(unsigned char *)(a2 + *v5) = 1;
LABEL_67:
                PBRepeatedUInt32Add();
              }
LABEL_77:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
            case 4u:
              char v32 = 0;
              unsigned int v33 = 0;
              uint64_t v34 = 0;
              *(unsigned char *)(a1 + 80) |= 0x10u;
              while (2)
              {
                uint64_t v35 = *v3;
                uint64_t v36 = *(void *)(a2 + v35);
                unint64_t v37 = v36 + 1;
                if (v36 == -1 || v37 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
                  *(void *)(a2 + v35) = v37;
                  v34 |= (unint64_t)(v38 & 0x7F) << v32;
                  if (v38 < 0)
                  {
                    v32 += 7;
                    BOOL v15 = v33++ >= 9;
                    if (v15)
                    {
                      uint64_t v34 = 0;
                      goto LABEL_57;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v34 = 0;
              }
LABEL_57:
              *(void *)(a1 + 64) = v34;
              goto LABEL_77;
            case 5u:
              *(unsigned char *)(a1 + 80) |= 8u;
              uint64_t v39 = *v3;
              unint64_t v40 = *(void *)(a2 + v39);
              if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v22 = *(void *)(*(void *)(a2 + *v7) + v40);
                *(void *)(a2 + v39) = v40 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v22 = 0;
              }
              uint64_t v50 = 56;
              goto LABEL_76;
            case 6u:
              *(unsigned char *)(a1 + 80) |= 4u;
              uint64_t v41 = *v3;
              unint64_t v42 = *(void *)(a2 + v41);
              if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v22 = *(void *)(*(void *)(a2 + *v7) + v42);
                *(void *)(a2 + v41) = v42 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v22 = 0;
              }
              uint64_t v50 = 48;
LABEL_76:
              *(void *)(a1 + v50) = v22;
              goto LABEL_77;
            default:
              if (PBReaderSkipValueWithTag()) {
                goto LABEL_77;
              }
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedCellHostViewExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 64) |= 2u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_55;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_57;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_57:
          uint64_t v43 = 40;
          goto LABEL_70;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 64) |= 1u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_61:
          uint64_t v43 = 8;
          goto LABEL_70;
        case 3u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 48;
          goto LABEL_39;
        case 4u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 16;
          goto LABEL_39;
        case 5u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 24;
          goto LABEL_39;
        case 6u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 32;
LABEL_39:
          char v31 = *(void **)(a1 + v30);
          *(void *)(a1 + v30) = v29;

          continue;
        case 7u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          *(unsigned char *)(a1 + 64) |= 8u;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v34 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v34 = 0;
          }
LABEL_65:
          *(unsigned char *)(a1 + 60) = v34 != 0;
          continue;
        case 8u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 64) |= 4u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v40 = *v3;
        unint64_t v41 = *(void *)(a2 + v40);
        if (v41 == -1 || v41 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
        *(void *)(a2 + v40) = v41 + 1;
        v19 |= (unint64_t)(v42 & 0x7F) << v38;
        if ((v42 & 0x80) == 0) {
          goto LABEL_67;
        }
        v38 += 7;
        BOOL v14 = v39++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_69;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_67:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_69:
      uint64_t v43 = 56;
LABEL_70:
      *(_DWORD *)(a1 + v43) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBUserOnboardingResultReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 1u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_70;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_72;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_70:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_72:
          uint64_t v54 = 24;
          goto LABEL_89;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 56) |= 0x10u;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_76;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_76:
          BOOL v55 = v26 != 0;
          uint64_t v56 = 52;
          goto LABEL_94;
        case 3u:
          uint64_t v30 = PBReaderReadString();
          char v31 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v30;

          continue;
        case 4u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 2u;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v19 |= (unint64_t)(v36 & 0x7F) << v32;
              if (v36 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_80;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_80:
          uint64_t v54 = 40;
          goto LABEL_89;
        case 5u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 8u;
          while (2)
          {
            uint64_t v39 = *v3;
            unint64_t v40 = *(void *)(a2 + v39);
            if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
              *(void *)(a2 + v39) = v40 + 1;
              v19 |= (unint64_t)(v41 & 0x7F) << v37;
              if (v41 < 0)
              {
                v37 += 7;
                BOOL v14 = v38++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_84;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_84:
          uint64_t v54 = 48;
          goto LABEL_89;
        case 6u:
          char v42 = PBReaderReadString();
          if (v42) {
            [(id)a1 addChannelId:v42];
          }
          goto LABEL_54;
        case 7u:
          char v42 = PBReaderReadString();
          if (v42) {
            [(id)a1 addTopicId:v42];
          }
LABEL_54:

          continue;
        case 8u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 4u;
          while (2)
          {
            uint64_t v45 = *v3;
            unint64_t v46 = *(void *)(a2 + v45);
            if (v46 == -1 || v46 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
              *(void *)(a2 + v45) = v46 + 1;
              v19 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                BOOL v14 = v44++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_88;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_88:
          uint64_t v54 = 44;
LABEL_89:
          *(_DWORD *)(a1 + v54) = v19;
          continue;
        case 9u:
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          *(unsigned char *)(a1 + 56) |= 0x20u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v51 = *v3;
        unint64_t v52 = *(void *)(a2 + v51);
        if (v52 == -1 || v52 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
        *(void *)(a2 + v51) = v52 + 1;
        v50 |= (unint64_t)(v53 & 0x7F) << v48;
        if ((v53 & 0x80) == 0) {
          goto LABEL_91;
        }
        v48 += 7;
        BOOL v14 = v49++ >= 9;
        if (v14)
        {
          uint64_t v50 = 0;
          goto LABEL_93;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_91:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v50 = 0;
      }
LABEL_93:
      BOOL v55 = v50 != 0;
      uint64_t v56 = 53;
LABEL_94:
      *(unsigned char *)(a1 + v56) = v55;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTelemetryNetworkEventGroupReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 44) |= 2u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_49;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_51;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_49:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_51:
        uint64_t v38 = 12;
        goto LABEL_60;
      case 2u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        *(unsigned char *)(a1 + 44) |= 4u;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_55:
        *(unsigned char *)(a1 + 40) = v26 != 0;
        goto LABEL_61;
      case 3u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 44) |= 1u;
        while (2)
        {
          uint64_t v32 = *v3;
          unint64_t v33 = *(void *)(a2 + v32);
          if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_59:
        uint64_t v38 = 8;
LABEL_60:
        *(_DWORD *)(a1 + v38) = v19;
        goto LABEL_61;
      case 4u:
        uint64_t v35 = PBReaderReadString();
        char v36 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v35;

        goto LABEL_61;
      case 5u:
        char v37 = objc_alloc_init(NTPBTelemetryNetworkEvent);
        [(id)a1 addSuccesses:v37];
        goto LABEL_45;
      case 6u:
        char v37 = objc_alloc_init(NTPBTelemetryNetworkEvent);
        [(id)a1 addFailures:v37];
LABEL_45:
        if PBReaderPlaceMark() && (NTPBTelemetryNetworkEventReadFrom((uint64_t)v37, a2))
        {
          PBReaderRecallMark();

LABEL_61:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_61;
    }
  }
}

uint64_t NTPBWidgetSectionConfigRecordReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = objc_alloc_init(NTPBRecordBase);

              a1[3] = v17;
              if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2))
              {
                PBReaderRecallMark();
                goto LABEL_31;
              }
              return 0;
            case 5u:
              uint64_t String = (void *)PBReaderReadString();

              id v20 = String;
              uint64_t v21 = 4;
              goto LABEL_30;
            case 6u:
              uint64_t v22 = PBReaderReadString();
              if (v22) {
                [a1 addArticleListIDs2:v22];
              }
              goto LABEL_31;
            case 7u:
              uint64_t v23 = PBReaderReadString();
              if (v23) {
                [a1 addArticleIDs2:v23];
              }
              goto LABEL_31;
            case 8u:
              char v24 = (void *)PBReaderReadString();

              id v20 = v24;
              uint64_t v21 = 5;
LABEL_30:
              a1[v21] = v20;
              goto LABEL_31;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_31:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBColorGradientPairReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2)
      {
        char v17 = objc_alloc_init(NTPBColorGradient);

        uint64_t v18 = 8;
      }
      else
      {
        if ((v10 >> 3) != 1)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        char v17 = objc_alloc_init(NTPBColorGradient);

        uint64_t v18 = 16;
      }
      *(void *)(a1 + v18) = v17;
      if (!PBReaderPlaceMark() || (NTPBColorGradientReadFrom((id *)&v17->super.super.isa, a2) & 1) == 0) {
        return 0;
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBEnvelopeBatchReadFrom(unsigned char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = objc_alloc_init(NTPBEnvelope);
          [a1 addEnvelope:v17];
          if PBReaderPlaceMark() && (NTPBEnvelopeReadFrom((uint64_t)v17, a2))
          {
            PBReaderRecallMark();

            continue;
          }

          return 0;
        case 2u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          a1[36] |= 2u;
          while (1)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_53;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              LODWORD(v21) = 0;
              goto LABEL_55;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v21) = 0;
          }
LABEL_55:
          uint64_t v40 = 24;
          goto LABEL_68;
        case 3u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v21 = 0;
          a1[36] |= 4u;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v21 |= (unint64_t)(v29 & 0x7F) << v25;
              if (v29 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v21) = 0;
          }
LABEL_59:
          uint64_t v40 = 28;
          goto LABEL_68;
        case 4u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v21 = 0;
          a1[36] |= 8u;
          while (2)
          {
            uint64_t v32 = *v3;
            unint64_t v33 = *(void *)(a2 + v32);
            if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
              *(void *)(a2 + v32) = v33 + 1;
              v21 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                BOOL v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v21) = 0;
          }
LABEL_63:
          uint64_t v40 = 32;
          goto LABEL_68;
        case 5u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v21 = 0;
          a1[36] |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v37 = *v3;
        unint64_t v38 = *(void *)(a2 + v37);
        if (v38 == -1 || v38 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
        *(void *)(a2 + v37) = v38 + 1;
        v21 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0) {
          goto LABEL_65;
        }
        v35 += 7;
        BOOL v14 = v36++ >= 9;
        if (v14)
        {
          LODWORD(v21) = 0;
          goto LABEL_67;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_65:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v21) = 0;
      }
LABEL_67:
      uint64_t v40 = 8;
LABEL_68:
      *(_DWORD *)&a1[v40] = v21;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBLinkTapArticleReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 24;
          goto LABEL_24;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
          goto LABEL_24;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
LABEL_24:
          unsigned int v20 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        case 4u:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v24 = *v3;
        unint64_t v25 = *(void *)(a2 + v24);
        if (v25 == -1 || v25 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
        *(void *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0) {
          goto LABEL_33;
        }
        v21 += 7;
        BOOL v14 = v22++ >= 9;
        if (v14)
        {
          LODWORD(v23) = 0;
          goto LABEL_35;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v23) = 0;
      }
LABEL_35:
      *(_DWORD *)(a1 + 16) = v23;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleListRecordReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              uint64_t v17 = objc_alloc_init(NTPBRecordBase);

              *(void *)(a1 + 16) = v17;
              if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2))
              {
                PBReaderRecallMark();
                goto LABEL_38;
              }
              return 0;
            case 2u:
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              *(unsigned char *)(a1 + 36) |= 1u;
              break;
            case 3u:
              uint64_t String = PBReaderReadString();
              if (String) {
                [(id)a1 addArticleIDs:String];
              }
              goto LABEL_38;
            case 4u:
              char v26 = (void *)PBReaderReadString();

              *(void *)(a1 + 24) = v26;
              goto LABEL_38;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_38:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_35;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              LODWORD(v21) = 0;
              goto LABEL_37;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v21) = 0;
          }
LABEL_37:
          *(_DWORD *)(a1 + 32) = v21;
          goto LABEL_38;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleHostViewExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x20000uLL;
        while (1)
        {
          uint64_t v20 = *v3;
          uint64_t v21 = *(void *)(a2 + v20);
          unint64_t v22 = v21 + 1;
          if (v21 == -1 || v22 > *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v22;
          v19 |= (unint64_t)(v23 & 0x7F) << v17;
          if ((v23 & 0x80) == 0) {
            goto LABEL_658;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_660;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_658:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_660:
        uint64_t v520 = 156;
        goto LABEL_950;
      case 2u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 160;
        goto LABEL_636;
      case 3u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 616;
        goto LABEL_636;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x10000000000000uLL;
        while (2)
        {
          uint64_t v28 = *v3;
          uint64_t v29 = *(void *)(a2 + v28);
          unint64_t v30 = v29 + 1;
          if (v29 == -1 || v30 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v30;
            v19 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_664;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_664:
        uint64_t v520 = 596;
        goto LABEL_950;
      case 5u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x200000uLL;
        while (2)
        {
          uint64_t v34 = *v3;
          uint64_t v35 = *(void *)(a2 + v34);
          unint64_t v36 = v35 + 1;
          if (v35 == -1 || v36 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v36;
            v19 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_668;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_668:
        uint64_t v520 = 200;
        goto LABEL_950;
      case 6u:
        uint64_t v24 = PBReaderReadData();
        uint64_t v25 = 168;
        goto LABEL_636;
      case 7u:
        uint64_t v24 = PBReaderReadData();
        uint64_t v25 = 192;
        goto LABEL_636;
      case 8u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x10000000uLL;
        while (2)
        {
          uint64_t v40 = *v3;
          uint64_t v41 = *(void *)(a2 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v42;
            v19 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_672;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_672:
        uint64_t v520 = 276;
        goto LABEL_950;
      case 9u:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x100000uLL;
        while (2)
        {
          uint64_t v46 = *v3;
          uint64_t v47 = *(void *)(a2 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v48;
            v19 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v14 = v45++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_676;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_676:
        uint64_t v520 = 184;
        goto LABEL_950;
      case 0xAu:
        uint64_t v24 = PBReaderReadData();
        uint64_t v25 = 328;
        goto LABEL_636;
      case 0xBu:
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x80000000uLL;
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v19 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              BOOL v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_680;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_680:
        uint64_t v520 = 304;
        goto LABEL_950;
      case 0xCu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 312;
        goto LABEL_636;
      case 0xDu:
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x40000000uLL;
        while (2)
        {
          uint64_t v58 = *v3;
          uint64_t v59 = *(void *)(a2 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v59);
            *(void *)(a2 + v58) = v60;
            v19 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v14 = v57++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_684;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_684:
        uint64_t v520 = 300;
        goto LABEL_950;
      case 0xEu:
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x2000000000000uLL;
        while (2)
        {
          uint64_t v64 = *v3;
          uint64_t v65 = *(void *)(a2 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
            *(void *)(a2 + v64) = v66;
            v19 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              BOOL v14 = v63++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_688;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_688:
        uint64_t v520 = 560;
        goto LABEL_950;
      case 0xFu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 552;
        goto LABEL_636;
      case 0x10u:
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v70 = 0;
        unsigned int v71 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x80000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v71;
        while (2)
        {
          uint64_t v72 = *v3;
          uint64_t v73 = *(void *)(a2 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(a2 + *v7) + v73);
            *(void *)(a2 + v72) = v74;
            v70 |= (unint64_t)(v75 & 0x7F) << v68;
            if (v75 < 0)
            {
              v68 += 7;
              BOOL v14 = v69++ >= 9;
              if (v14)
              {
                uint64_t v70 = 0;
                goto LABEL_692;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v70 = 0;
        }
LABEL_692:
        BOOL v521 = v70 != 0;
        uint64_t v522 = 806;
        goto LABEL_959;
      case 0x13u:
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x8000uLL;
        while (2)
        {
          uint64_t v79 = *v3;
          uint64_t v80 = *(void *)(a2 + v79);
          unint64_t v81 = v80 + 1;
          if (v80 == -1 || v81 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v82 = *(unsigned char *)(*(void *)(a2 + *v7) + v80);
            *(void *)(a2 + v79) = v81;
            v19 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              BOOL v14 = v78++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_696;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_696:
        uint64_t v520 = 128;
        goto LABEL_950;
      case 0x14u:
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x20000000000uLL;
        while (2)
        {
          uint64_t v85 = *v3;
          uint64_t v86 = *(void *)(a2 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(a2 + *v7) + v86);
            *(void *)(a2 + v85) = v87;
            v19 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              BOOL v14 = v84++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_700;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_700:
        uint64_t v520 = 468;
        goto LABEL_950;
      case 0x15u:
        char v89 = 0;
        unsigned int v90 = 0;
        uint64_t v91 = 0;
        *(_WORD *)(a1 + 820) |= 1u;
        while (2)
        {
          uint64_t v92 = *v3;
          uint64_t v93 = *(void *)(a2 + v92);
          unint64_t v94 = v93 + 1;
          if (v93 == -1 || v94 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v95 = *(unsigned char *)(*(void *)(a2 + *v7) + v93);
            *(void *)(a2 + v92) = v94;
            v91 |= (unint64_t)(v95 & 0x7F) << v89;
            if (v95 < 0)
            {
              v89 += 7;
              BOOL v14 = v90++ >= 9;
              if (v14)
              {
                uint64_t v91 = 0;
                goto LABEL_704;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v91 = 0;
        }
LABEL_704:
        BOOL v521 = v91 != 0;
        uint64_t v522 = 787;
        goto LABEL_959;
      case 0x16u:
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v98 = 0;
        *(_WORD *)(a1 + 820) |= 0x1000u;
        while (2)
        {
          uint64_t v99 = *v3;
          uint64_t v100 = *(void *)(a2 + v99);
          unint64_t v101 = v100 + 1;
          if (v100 == -1 || v101 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v102 = *(unsigned char *)(*(void *)(a2 + *v7) + v100);
            *(void *)(a2 + v99) = v101;
            v98 |= (unint64_t)(v102 & 0x7F) << v96;
            if (v102 < 0)
            {
              v96 += 7;
              BOOL v14 = v97++ >= 9;
              if (v14)
              {
                uint64_t v98 = 0;
                goto LABEL_708;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v98 = 0;
        }
LABEL_708:
        BOOL v521 = v98 != 0;
        uint64_t v522 = 799;
        goto LABEL_959;
      case 0x17u:
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v105 = 0;
        *(_WORD *)(a1 + 820) |= 4u;
        while (2)
        {
          uint64_t v106 = *v3;
          uint64_t v107 = *(void *)(a2 + v106);
          unint64_t v108 = v107 + 1;
          if (v107 == -1 || v108 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v109 = *(unsigned char *)(*(void *)(a2 + *v7) + v107);
            *(void *)(a2 + v106) = v108;
            v105 |= (unint64_t)(v109 & 0x7F) << v103;
            if (v109 < 0)
            {
              v103 += 7;
              BOOL v14 = v104++ >= 9;
              if (v14)
              {
                uint64_t v105 = 0;
                goto LABEL_712;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v105 = 0;
        }
LABEL_712:
        BOOL v521 = v105 != 0;
        uint64_t v522 = 789;
        goto LABEL_959;
      case 0x18u:
        char v110 = 0;
        unsigned int v111 = 0;
        uint64_t v112 = 0;
        *(_WORD *)(a1 + 820) |= 0x100u;
        while (2)
        {
          uint64_t v113 = *v3;
          uint64_t v114 = *(void *)(a2 + v113);
          unint64_t v115 = v114 + 1;
          if (v114 == -1 || v115 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v116 = *(unsigned char *)(*(void *)(a2 + *v7) + v114);
            *(void *)(a2 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              BOOL v14 = v111++ >= 9;
              if (v14)
              {
                uint64_t v112 = 0;
                goto LABEL_716;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v112 = 0;
        }
LABEL_716:
        BOOL v521 = v112 != 0;
        uint64_t v522 = 795;
        goto LABEL_959;
      case 0x19u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 656;
        goto LABEL_636;
      case 0x1Au:
        char v117 = 0;
        unsigned int v118 = 0;
        uint64_t v119 = 0;
        *(void *)(a1 + 812) |= 0x2000000000000000uLL;
        while (2)
        {
          uint64_t v120 = *v3;
          uint64_t v121 = *(void *)(a2 + v120);
          unint64_t v122 = v121 + 1;
          if (v121 == -1 || v122 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v123 = *(unsigned char *)(*(void *)(a2 + *v7) + v121);
            *(void *)(a2 + v120) = v122;
            v119 |= (unint64_t)(v123 & 0x7F) << v117;
            if (v123 < 0)
            {
              v117 += 7;
              BOOL v14 = v118++ >= 9;
              if (v14)
              {
                uint64_t v119 = 0;
                goto LABEL_720;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v119 = 0;
        }
LABEL_720:
        BOOL v521 = v119 != 0;
        uint64_t v522 = 784;
        goto LABEL_959;
      case 0x1Bu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 664;
        goto LABEL_636;
      case 0x1Cu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 744;
        goto LABEL_636;
      case 0x1Du:
        char v124 = 0;
        unsigned int v125 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x1000000uLL;
        while (2)
        {
          uint64_t v126 = *v3;
          uint64_t v127 = *(void *)(a2 + v126);
          unint64_t v128 = v127 + 1;
          if (v127 == -1 || v128 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v129 = *(unsigned char *)(*(void *)(a2 + *v7) + v127);
            *(void *)(a2 + v126) = v128;
            v19 |= (unint64_t)(v129 & 0x7F) << v124;
            if (v129 < 0)
            {
              v124 += 7;
              BOOL v14 = v125++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_724;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_724:
        uint64_t v520 = 240;
        goto LABEL_950;
      case 0x1Eu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 456;
        goto LABEL_636;
      case 0x1Fu:
        PBReaderReadString();
        unsigned int v130 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v130) {
          [(id)a1 addNamedEntities:v130];
        }
        goto LABEL_656;
      case 0x20u:
        char v131 = 0;
        unsigned int v132 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x80000uLL;
        while (2)
        {
          uint64_t v133 = *v3;
          uint64_t v134 = *(void *)(a2 + v133);
          unint64_t v135 = v134 + 1;
          if (v134 == -1 || v135 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v136 = *(unsigned char *)(*(void *)(a2 + *v7) + v134);
            *(void *)(a2 + v133) = v135;
            v19 |= (unint64_t)(v136 & 0x7F) << v131;
            if (v136 < 0)
            {
              v131 += 7;
              BOOL v14 = v132++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_728;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_728:
        uint64_t v520 = 180;
        goto LABEL_950;
      case 0x21u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 680;
        goto LABEL_636;
      case 0x22u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 688;
        goto LABEL_636;
      case 0x23u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 704;
        goto LABEL_636;
      case 0x24u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 648;
        goto LABEL_636;
      case 0x25u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 624;
        goto LABEL_636;
      case 0x26u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 632;
        goto LABEL_636;
      case 0x27u:
        char v137 = 0;
        unsigned int v138 = 0;
        uint64_t v139 = 0;
        *(_WORD *)(a1 + 820) |= 0x80u;
        while (2)
        {
          uint64_t v140 = *v3;
          uint64_t v141 = *(void *)(a2 + v140);
          unint64_t v142 = v141 + 1;
          if (v141 == -1 || v142 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v143 = *(unsigned char *)(*(void *)(a2 + *v7) + v141);
            *(void *)(a2 + v140) = v142;
            v139 |= (unint64_t)(v143 & 0x7F) << v137;
            if (v143 < 0)
            {
              v137 += 7;
              BOOL v14 = v138++ >= 9;
              if (v14)
              {
                uint64_t v139 = 0;
                goto LABEL_732;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v139 = 0;
        }
LABEL_732:
        BOOL v521 = v139 != 0;
        uint64_t v522 = 794;
        goto LABEL_959;
      case 0x28u:
        char v144 = 0;
        unsigned int v145 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x4000000000000uLL;
        while (2)
        {
          uint64_t v146 = *v3;
          uint64_t v147 = *(void *)(a2 + v146);
          unint64_t v148 = v147 + 1;
          if (v147 == -1 || v148 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v149 = *(unsigned char *)(*(void *)(a2 + *v7) + v147);
            *(void *)(a2 + v146) = v148;
            v19 |= (unint64_t)(v149 & 0x7F) << v144;
            if (v149 < 0)
            {
              v144 += 7;
              BOOL v14 = v145++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_736;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_736:
        uint64_t v520 = 564;
        goto LABEL_950;
      case 0x29u:
        char v150 = 0;
        unsigned int v151 = 0;
        uint64_t v152 = 0;
        unsigned int v153 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x100000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v153;
        while (2)
        {
          uint64_t v154 = *v3;
          uint64_t v155 = *(void *)(a2 + v154);
          unint64_t v156 = v155 + 1;
          if (v155 == -1 || v156 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v157 = *(unsigned char *)(*(void *)(a2 + *v7) + v155);
            *(void *)(a2 + v154) = v156;
            v152 |= (unint64_t)(v157 & 0x7F) << v150;
            if (v157 < 0)
            {
              v150 += 7;
              BOOL v14 = v151++ >= 9;
              if (v14)
              {
                uint64_t v152 = 0;
                goto LABEL_740;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v152 = 0;
        }
LABEL_740:
        BOOL v521 = v152 != 0;
        uint64_t v522 = 807;
        goto LABEL_959;
      case 0x2Au:
        char v158 = 0;
        unsigned int v159 = 0;
        uint64_t v160 = 0;
        unsigned int v161 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x40000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v161;
        while (2)
        {
          uint64_t v162 = *v3;
          uint64_t v163 = *(void *)(a2 + v162);
          unint64_t v164 = v163 + 1;
          if (v163 == -1 || v164 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v165 = *(unsigned char *)(*(void *)(a2 + *v7) + v163);
            *(void *)(a2 + v162) = v164;
            v160 |= (unint64_t)(v165 & 0x7F) << v158;
            if (v165 < 0)
            {
              v158 += 7;
              BOOL v14 = v159++ >= 9;
              if (v14)
              {
                uint64_t v160 = 0;
                goto LABEL_744;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v160 = 0;
        }
LABEL_744:
        BOOL v521 = v160 != 0;
        uint64_t v522 = 805;
        goto LABEL_959;
      case 0x2Bu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 672;
        goto LABEL_636;
      case 0x2Cu:
        char v166 = 0;
        unsigned int v167 = 0;
        uint64_t v168 = 0;
        *(void *)(a1 + 812) |= 0x400uLL;
        while (2)
        {
          uint64_t v169 = *v3;
          uint64_t v170 = *(void *)(a2 + v169);
          unint64_t v171 = v170 + 1;
          if (v170 == -1 || v171 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v172 = *(unsigned char *)(*(void *)(a2 + *v7) + v170);
            *(void *)(a2 + v169) = v171;
            v168 |= (unint64_t)(v172 & 0x7F) << v166;
            if (v172 < 0)
            {
              v166 += 7;
              BOOL v14 = v167++ >= 9;
              if (v14)
              {
                uint64_t v168 = 0;
                goto LABEL_748;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v168 = 0;
        }
LABEL_748:
        uint64_t v523 = 88;
        goto LABEL_893;
      case 0x2Du:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 736;
        goto LABEL_636;
      case 0x2Eu:
        char v173 = 0;
        unsigned int v174 = 0;
        uint64_t v175 = 0;
        *(_WORD *)(a1 + 820) |= 0x400u;
        while (2)
        {
          uint64_t v176 = *v3;
          uint64_t v177 = *(void *)(a2 + v176);
          unint64_t v178 = v177 + 1;
          if (v177 == -1 || v178 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v179 = *(unsigned char *)(*(void *)(a2 + *v7) + v177);
            *(void *)(a2 + v176) = v178;
            v175 |= (unint64_t)(v179 & 0x7F) << v173;
            if (v179 < 0)
            {
              v173 += 7;
              BOOL v14 = v174++ >= 9;
              if (v14)
              {
                uint64_t v175 = 0;
                goto LABEL_752;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v175 = 0;
        }
LABEL_752:
        BOOL v521 = v175 != 0;
        uint64_t v522 = 797;
        goto LABEL_959;
      case 0x2Fu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 352;
        goto LABEL_636;
      case 0x30u:
        char v180 = 0;
        unsigned int v181 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x4000000000uLL;
        while (2)
        {
          uint64_t v182 = *v3;
          uint64_t v183 = *(void *)(a2 + v182);
          unint64_t v184 = v183 + 1;
          if (v183 == -1 || v184 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v185 = *(unsigned char *)(*(void *)(a2 + *v7) + v183);
            *(void *)(a2 + v182) = v184;
            v19 |= (unint64_t)(v185 & 0x7F) << v180;
            if (v185 < 0)
            {
              v180 += 7;
              BOOL v14 = v181++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_756;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_756:
        uint64_t v520 = 372;
        goto LABEL_950;
      case 0x31u:
        char v186 = 0;
        unsigned int v187 = 0;
        uint64_t v188 = 0;
        unsigned int v189 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x10000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v189;
        while (2)
        {
          uint64_t v190 = *v3;
          uint64_t v191 = *(void *)(a2 + v190);
          unint64_t v192 = v191 + 1;
          if (v191 == -1 || v192 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v193 = *(unsigned char *)(*(void *)(a2 + *v7) + v191);
            *(void *)(a2 + v190) = v192;
            v188 |= (unint64_t)(v193 & 0x7F) << v186;
            if (v193 < 0)
            {
              v186 += 7;
              BOOL v14 = v187++ >= 9;
              if (v14)
              {
                uint64_t v188 = 0;
                goto LABEL_760;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v188 = 0;
        }
LABEL_760:
        BOOL v521 = v188 != 0;
        uint64_t v522 = 803;
        goto LABEL_959;
      case 0x32u:
        char v194 = 0;
        unsigned int v195 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x10000uLL;
        while (2)
        {
          uint64_t v196 = *v3;
          uint64_t v197 = *(void *)(a2 + v196);
          unint64_t v198 = v197 + 1;
          if (v197 == -1 || v198 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v199 = *(unsigned char *)(*(void *)(a2 + *v7) + v197);
            *(void *)(a2 + v196) = v198;
            v19 |= (unint64_t)(v199 & 0x7F) << v194;
            if (v199 < 0)
            {
              v194 += 7;
              BOOL v14 = v195++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_764;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_764:
        uint64_t v520 = 152;
        goto LABEL_950;
      case 0x33u:
        char v200 = 0;
        unsigned int v201 = 0;
        uint64_t v202 = 0;
        unsigned int v203 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x200000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v203;
        while (2)
        {
          uint64_t v204 = *v3;
          uint64_t v205 = *(void *)(a2 + v204);
          unint64_t v206 = v205 + 1;
          if (v205 == -1 || v206 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v207 = *(unsigned char *)(*(void *)(a2 + *v7) + v205);
            *(void *)(a2 + v204) = v206;
            v202 |= (unint64_t)(v207 & 0x7F) << v200;
            if (v207 < 0)
            {
              v200 += 7;
              BOOL v14 = v201++ >= 9;
              if (v14)
              {
                uint64_t v202 = 0;
                goto LABEL_768;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v202 = 0;
        }
LABEL_768:
        BOOL v521 = v202 != 0;
        uint64_t v522 = 808;
        goto LABEL_959;
      case 0x34u:
        char v208 = 0;
        unsigned int v209 = 0;
        uint64_t v210 = 0;
        *(_WORD *)(a1 + 820) |= 0x8000u;
        while (2)
        {
          uint64_t v211 = *v3;
          uint64_t v212 = *(void *)(a2 + v211);
          unint64_t v213 = v212 + 1;
          if (v212 == -1 || v213 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v214 = *(unsigned char *)(*(void *)(a2 + *v7) + v212);
            *(void *)(a2 + v211) = v213;
            v210 |= (unint64_t)(v214 & 0x7F) << v208;
            if (v214 < 0)
            {
              v208 += 7;
              BOOL v14 = v209++ >= 9;
              if (v14)
              {
                uint64_t v210 = 0;
                goto LABEL_772;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v210 = 0;
        }
LABEL_772:
        BOOL v521 = v210 != 0;
        uint64_t v522 = 802;
        goto LABEL_959;
      case 0x35u:
        char v215 = 0;
        unsigned int v216 = 0;
        uint64_t v217 = 0;
        *(_WORD *)(a1 + 820) |= 0x200u;
        while (2)
        {
          uint64_t v218 = *v3;
          uint64_t v219 = *(void *)(a2 + v218);
          unint64_t v220 = v219 + 1;
          if (v219 == -1 || v220 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v221 = *(unsigned char *)(*(void *)(a2 + *v7) + v219);
            *(void *)(a2 + v218) = v220;
            v217 |= (unint64_t)(v221 & 0x7F) << v215;
            if (v221 < 0)
            {
              v215 += 7;
              BOOL v14 = v216++ >= 9;
              if (v14)
              {
                uint64_t v217 = 0;
                goto LABEL_776;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v217 = 0;
        }
LABEL_776:
        BOOL v521 = v217 != 0;
        uint64_t v522 = 796;
        goto LABEL_959;
      case 0x36u:
        char v222 = 0;
        unsigned int v223 = 0;
        uint64_t v224 = 0;
        *(_WORD *)(a1 + 820) |= 0x2000u;
        while (2)
        {
          uint64_t v225 = *v3;
          uint64_t v226 = *(void *)(a2 + v225);
          unint64_t v227 = v226 + 1;
          if (v226 == -1 || v227 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v228 = *(unsigned char *)(*(void *)(a2 + *v7) + v226);
            *(void *)(a2 + v225) = v227;
            v224 |= (unint64_t)(v228 & 0x7F) << v222;
            if (v228 < 0)
            {
              v222 += 7;
              BOOL v14 = v223++ >= 9;
              if (v14)
              {
                uint64_t v224 = 0;
                goto LABEL_780;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v224 = 0;
        }
LABEL_780:
        BOOL v521 = v224 != 0;
        uint64_t v522 = 800;
        goto LABEL_959;
      case 0x37u:
        char v229 = 0;
        unsigned int v230 = 0;
        uint64_t v231 = 0;
        *(_WORD *)(a1 + 820) |= 0x40u;
        while (2)
        {
          uint64_t v232 = *v3;
          uint64_t v233 = *(void *)(a2 + v232);
          unint64_t v234 = v233 + 1;
          if (v233 == -1 || v234 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v235 = *(unsigned char *)(*(void *)(a2 + *v7) + v233);
            *(void *)(a2 + v232) = v234;
            v231 |= (unint64_t)(v235 & 0x7F) << v229;
            if (v235 < 0)
            {
              v229 += 7;
              BOOL v14 = v230++ >= 9;
              if (v14)
              {
                uint64_t v231 = 0;
                goto LABEL_784;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v231 = 0;
        }
LABEL_784:
        BOOL v521 = v231 != 0;
        uint64_t v522 = 793;
        goto LABEL_959;
      case 0x38u:
        char v236 = 0;
        unsigned int v237 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x2000000uLL;
        while (2)
        {
          uint64_t v238 = *v3;
          uint64_t v239 = *(void *)(a2 + v238);
          unint64_t v240 = v239 + 1;
          if (v239 == -1 || v240 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v241 = *(unsigned char *)(*(void *)(a2 + *v7) + v239);
            *(void *)(a2 + v238) = v240;
            v19 |= (unint64_t)(v241 & 0x7F) << v236;
            if (v241 < 0)
            {
              v236 += 7;
              BOOL v14 = v237++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_788;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_788:
        uint64_t v520 = 244;
        goto LABEL_950;
      case 0x39u:
        char v242 = 0;
        unsigned int v243 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x4000000uLL;
        while (2)
        {
          uint64_t v244 = *v3;
          uint64_t v245 = *(void *)(a2 + v244);
          unint64_t v246 = v245 + 1;
          if (v245 == -1 || v246 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v247 = *(unsigned char *)(*(void *)(a2 + *v7) + v245);
            *(void *)(a2 + v244) = v246;
            v19 |= (unint64_t)(v247 & 0x7F) << v242;
            if (v247 < 0)
            {
              v242 += 7;
              BOOL v14 = v243++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_792;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_792:
        uint64_t v520 = 248;
        goto LABEL_950;
      case 0x3Au:
        char v248 = 0;
        unsigned int v249 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x1000000000000uLL;
        while (2)
        {
          uint64_t v250 = *v3;
          uint64_t v251 = *(void *)(a2 + v250);
          unint64_t v252 = v251 + 1;
          if (v251 == -1 || v252 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v253 = *(unsigned char *)(*(void *)(a2 + *v7) + v251);
            *(void *)(a2 + v250) = v252;
            v19 |= (unint64_t)(v253 & 0x7F) << v248;
            if (v253 < 0)
            {
              v248 += 7;
              BOOL v14 = v249++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_796;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_796:
        uint64_t v520 = 544;
        goto LABEL_950;
      case 0x3Bu:
        char v254 = 0;
        unsigned int v255 = 0;
        uint64_t v256 = 0;
        *(_WORD *)(a1 + 820) |= 0x4000u;
        while (2)
        {
          uint64_t v257 = *v3;
          uint64_t v258 = *(void *)(a2 + v257);
          unint64_t v259 = v258 + 1;
          if (v258 == -1 || v259 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v260 = *(unsigned char *)(*(void *)(a2 + *v7) + v258);
            *(void *)(a2 + v257) = v259;
            v256 |= (unint64_t)(v260 & 0x7F) << v254;
            if (v260 < 0)
            {
              v254 += 7;
              BOOL v14 = v255++ >= 9;
              if (v14)
              {
                uint64_t v256 = 0;
                goto LABEL_800;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v256 = 0;
        }
LABEL_800:
        BOOL v521 = v256 != 0;
        uint64_t v522 = 801;
        goto LABEL_959;
      case 0x3Cu:
        *(void *)(a1 + 812) |= 0x40000000000uLL;
        uint64_t v261 = *v3;
        unint64_t v262 = *(void *)(a2 + v261);
        if (v262 <= 0xFFFFFFFFFFFFFFFBLL && v262 + 4 <= *(void *)(a2 + *v4))
        {
          int v263 = *(_DWORD *)(*(void *)(a2 + *v7) + v262);
          *(void *)(a2 + v261) = v262 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v263 = 0;
        }
        *(_DWORD *)(a1 + 472) = v263;
        goto LABEL_985;
      case 0x3Du:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 216;
        goto LABEL_636;
      case 0x3Eu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 224;
        goto LABEL_636;
      case 0x3Fu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 256;
        goto LABEL_636;
      case 0x40u:
        char v264 = 0;
        unsigned int v265 = 0;
        uint64_t v266 = 0;
        unsigned int v267 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x400000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v267;
        while (2)
        {
          uint64_t v268 = *v3;
          uint64_t v269 = *(void *)(a2 + v268);
          unint64_t v270 = v269 + 1;
          if (v269 == -1 || v270 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v271 = *(unsigned char *)(*(void *)(a2 + *v7) + v269);
            *(void *)(a2 + v268) = v270;
            v266 |= (unint64_t)(v271 & 0x7F) << v264;
            if (v271 < 0)
            {
              v264 += 7;
              BOOL v14 = v265++ >= 9;
              if (v14)
              {
                uint64_t v266 = 0;
                goto LABEL_804;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v266 = 0;
        }
LABEL_804:
        BOOL v521 = v266 != 0;
        uint64_t v522 = 809;
        goto LABEL_959;
      case 0x41u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 536;
        goto LABEL_636;
      case 0x42u:
        char v272 = 0;
        unsigned int v273 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x800000000000uLL;
        while (2)
        {
          uint64_t v274 = *v3;
          uint64_t v275 = *(void *)(a2 + v274);
          unint64_t v276 = v275 + 1;
          if (v275 == -1 || v276 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v277 = *(unsigned char *)(*(void *)(a2 + *v7) + v275);
            *(void *)(a2 + v274) = v276;
            v19 |= (unint64_t)(v277 & 0x7F) << v272;
            if (v277 < 0)
            {
              v272 += 7;
              BOOL v14 = v273++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_808;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_808:
        uint64_t v520 = 520;
        goto LABEL_950;
      case 0x43u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 528;
        goto LABEL_636;
      case 0x44u:
        char v278 = 0;
        unsigned int v279 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x200000000uLL;
        while (2)
        {
          uint64_t v280 = *v3;
          uint64_t v281 = *(void *)(a2 + v280);
          unint64_t v282 = v281 + 1;
          if (v281 == -1 || v282 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v283 = *(unsigned char *)(*(void *)(a2 + *v7) + v281);
            *(void *)(a2 + v280) = v282;
            v19 |= (unint64_t)(v283 & 0x7F) << v278;
            if (v283 < 0)
            {
              v278 += 7;
              BOOL v14 = v279++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_812;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_812:
        uint64_t v520 = 344;
        goto LABEL_950;
      case 0x45u:
        char v284 = 0;
        unsigned int v285 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x400000000uLL;
        while (2)
        {
          uint64_t v286 = *v3;
          uint64_t v287 = *(void *)(a2 + v286);
          unint64_t v288 = v287 + 1;
          if (v287 == -1 || v288 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v289 = *(unsigned char *)(*(void *)(a2 + *v7) + v287);
            *(void *)(a2 + v286) = v288;
            v19 |= (unint64_t)(v289 & 0x7F) << v284;
            if (v289 < 0)
            {
              v284 += 7;
              BOOL v14 = v285++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_816;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_816:
        uint64_t v520 = 348;
        goto LABEL_950;
      case 0x46u:
        char v290 = 0;
        unsigned int v291 = 0;
        uint64_t v292 = 0;
        *(void *)(a1 + 812) |= 0x4000000000000000uLL;
        while (2)
        {
          uint64_t v293 = *v3;
          uint64_t v294 = *(void *)(a2 + v293);
          unint64_t v295 = v294 + 1;
          if (v294 == -1 || v295 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v296 = *(unsigned char *)(*(void *)(a2 + *v7) + v294);
            *(void *)(a2 + v293) = v295;
            v292 |= (unint64_t)(v296 & 0x7F) << v290;
            if (v296 < 0)
            {
              v290 += 7;
              BOOL v14 = v291++ >= 9;
              if (v14)
              {
                uint64_t v292 = 0;
                goto LABEL_820;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v292 = 0;
        }
LABEL_820:
        BOOL v521 = v292 != 0;
        uint64_t v522 = 785;
        goto LABEL_959;
      case 0x47u:
        char v297 = 0;
        unsigned int v298 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x10000000000uLL;
        while (2)
        {
          uint64_t v299 = *v3;
          uint64_t v300 = *(void *)(a2 + v299);
          unint64_t v301 = v300 + 1;
          if (v300 == -1 || v301 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v302 = *(unsigned char *)(*(void *)(a2 + *v7) + v300);
            *(void *)(a2 + v299) = v301;
            v19 |= (unint64_t)(v302 & 0x7F) << v297;
            if (v302 < 0)
            {
              v297 += 7;
              BOOL v14 = v298++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_824;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_824:
        uint64_t v520 = 464;
        goto LABEL_950;
      case 0x48u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 568;
        goto LABEL_636;
      case 0x49u:
        char v303 = 0;
        unsigned int v304 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x800000000000000uLL;
        while (2)
        {
          uint64_t v305 = *v3;
          uint64_t v306 = *(void *)(a2 + v305);
          unint64_t v307 = v306 + 1;
          if (v306 == -1 || v307 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v308 = *(unsigned char *)(*(void *)(a2 + *v7) + v306);
            *(void *)(a2 + v305) = v307;
            v19 |= (unint64_t)(v308 & 0x7F) << v303;
            if (v308 < 0)
            {
              v303 += 7;
              BOOL v14 = v304++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_828;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_828:
        uint64_t v520 = 776;
        goto LABEL_950;
      case 0x4Au:
        char v309 = 0;
        unsigned int v310 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x1000000000000000uLL;
        while (2)
        {
          uint64_t v311 = *v3;
          uint64_t v312 = *(void *)(a2 + v311);
          unint64_t v313 = v312 + 1;
          if (v312 == -1 || v313 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v314 = *(unsigned char *)(*(void *)(a2 + *v7) + v312);
            *(void *)(a2 + v311) = v313;
            v19 |= (unint64_t)(v314 & 0x7F) << v309;
            if (v314 < 0)
            {
              v309 += 7;
              BOOL v14 = v310++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_832;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_832:
        uint64_t v520 = 780;
        goto LABEL_950;
      case 0x4Bu:
        char v315 = 0;
        unsigned int v316 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x400000000000000uLL;
        while (2)
        {
          uint64_t v317 = *v3;
          uint64_t v318 = *(void *)(a2 + v317);
          unint64_t v319 = v318 + 1;
          if (v318 == -1 || v319 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v320 = *(unsigned char *)(*(void *)(a2 + *v7) + v318);
            *(void *)(a2 + v317) = v319;
            v19 |= (unint64_t)(v320 & 0x7F) << v315;
            if (v320 < 0)
            {
              v315 += 7;
              BOOL v14 = v316++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_836;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_836:
        uint64_t v520 = 760;
        goto LABEL_950;
      case 0x4Cu:
        unsigned int v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        [(id)a1 addFractionalCohortMembership:v130];
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x4Du:
        char v321 = 0;
        unsigned int v322 = 0;
        uint64_t v323 = 0;
        *(_WORD *)(a1 + 820) |= 0x20u;
        while (2)
        {
          uint64_t v324 = *v3;
          uint64_t v325 = *(void *)(a2 + v324);
          unint64_t v326 = v325 + 1;
          if (v325 == -1 || v326 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v327 = *(unsigned char *)(*(void *)(a2 + *v7) + v325);
            *(void *)(a2 + v324) = v326;
            v323 |= (unint64_t)(v327 & 0x7F) << v321;
            if (v327 < 0)
            {
              v321 += 7;
              BOOL v14 = v322++ >= 9;
              if (v14)
              {
                uint64_t v323 = 0;
                goto LABEL_840;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v323 = 0;
        }
LABEL_840:
        BOOL v521 = v323 != 0;
        uint64_t v522 = 792;
        goto LABEL_959;
      case 0x4Eu:
        char v328 = 0;
        unsigned int v329 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x800000uLL;
        while (2)
        {
          uint64_t v330 = *v3;
          uint64_t v331 = *(void *)(a2 + v330);
          unint64_t v332 = v331 + 1;
          if (v331 == -1 || v332 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v333 = *(unsigned char *)(*(void *)(a2 + *v7) + v331);
            *(void *)(a2 + v330) = v332;
            v19 |= (unint64_t)(v333 & 0x7F) << v328;
            if (v333 < 0)
            {
              v328 += 7;
              BOOL v14 = v329++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_844;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_844:
        uint64_t v520 = 208;
        goto LABEL_950;
      case 0x4Fu:
        char v334 = 0;
        unsigned int v335 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x400000uLL;
        while (2)
        {
          uint64_t v336 = *v3;
          uint64_t v337 = *(void *)(a2 + v336);
          unint64_t v338 = v337 + 1;
          if (v337 == -1 || v338 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v339 = *(unsigned char *)(*(void *)(a2 + *v7) + v337);
            *(void *)(a2 + v336) = v338;
            v19 |= (unint64_t)(v339 & 0x7F) << v334;
            if (v339 < 0)
            {
              v334 += 7;
              BOOL v14 = v335++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_848;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_848:
        uint64_t v520 = 204;
        goto LABEL_950;
      case 0x50u:
        char v340 = 0;
        unsigned int v341 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x200000000000000uLL;
        while (2)
        {
          uint64_t v342 = *v3;
          uint64_t v343 = *(void *)(a2 + v342);
          unint64_t v344 = v343 + 1;
          if (v343 == -1 || v344 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v345 = *(unsigned char *)(*(void *)(a2 + *v7) + v343);
            *(void *)(a2 + v342) = v344;
            v19 |= (unint64_t)(v345 & 0x7F) << v340;
            if (v345 < 0)
            {
              v340 += 7;
              BOOL v14 = v341++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_852;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_852:
        uint64_t v520 = 720;
        goto LABEL_950;
      case 0x51u:
        char v346 = 0;
        unsigned int v347 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x80000000000000uLL;
        while (2)
        {
          uint64_t v348 = *v3;
          uint64_t v349 = *(void *)(a2 + v348);
          unint64_t v350 = v349 + 1;
          if (v349 == -1 || v350 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v351 = *(unsigned char *)(*(void *)(a2 + *v7) + v349);
            *(void *)(a2 + v348) = v350;
            v19 |= (unint64_t)(v351 & 0x7F) << v346;
            if (v351 < 0)
            {
              v346 += 7;
              BOOL v14 = v347++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_856;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_856:
        uint64_t v520 = 712;
        goto LABEL_950;
      case 0x52u:
        char v352 = 0;
        unsigned int v353 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x100000000000000uLL;
        while (2)
        {
          uint64_t v354 = *v3;
          uint64_t v355 = *(void *)(a2 + v354);
          unint64_t v356 = v355 + 1;
          if (v355 == -1 || v356 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v357 = *(unsigned char *)(*(void *)(a2 + *v7) + v355);
            *(void *)(a2 + v354) = v356;
            v19 |= (unint64_t)(v357 & 0x7F) << v352;
            if (v357 < 0)
            {
              v352 += 7;
              BOOL v14 = v353++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_860;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_860:
        uint64_t v520 = 716;
        goto LABEL_950;
      case 0x53u:
        char v358 = 0;
        unsigned int v359 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x2000000000uLL;
        while (2)
        {
          uint64_t v360 = *v3;
          uint64_t v361 = *(void *)(a2 + v360);
          unint64_t v362 = v361 + 1;
          if (v361 == -1 || v362 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v363 = *(unsigned char *)(*(void *)(a2 + *v7) + v361);
            *(void *)(a2 + v360) = v362;
            v19 |= (unint64_t)(v363 & 0x7F) << v358;
            if (v363 < 0)
            {
              v358 += 7;
              BOOL v14 = v359++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_864;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_864:
        uint64_t v520 = 368;
        goto LABEL_950;
      case 0x54u:
        *(void *)(a1 + 812) |= 0x200uLL;
        uint64_t v364 = *v3;
        unint64_t v365 = *(void *)(a2 + v364);
        if (v365 <= 0xFFFFFFFFFFFFFFF7 && v365 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v365);
          *(void *)(a2 + v364) = v365 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 80;
        goto LABEL_984;
      case 0x55u:
        char v367 = 0;
        unsigned int v368 = 0;
        uint64_t v369 = 0;
        unsigned int v370 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x20000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v370;
        while (2)
        {
          uint64_t v371 = *v3;
          uint64_t v372 = *(void *)(a2 + v371);
          unint64_t v373 = v372 + 1;
          if (v372 == -1 || v373 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v374 = *(unsigned char *)(*(void *)(a2 + *v7) + v372);
            *(void *)(a2 + v371) = v373;
            v369 |= (unint64_t)(v374 & 0x7F) << v367;
            if (v374 < 0)
            {
              v367 += 7;
              BOOL v14 = v368++ >= 9;
              if (v14)
              {
                uint64_t v369 = 0;
                goto LABEL_868;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v369 = 0;
        }
LABEL_868:
        BOOL v521 = v369 != 0;
        uint64_t v522 = 804;
        goto LABEL_959;
      case 0x56u:
        char v375 = 0;
        unsigned int v376 = 0;
        uint64_t v377 = 0;
        *(_WORD *)(a1 + 820) |= 0x800u;
        while (2)
        {
          uint64_t v378 = *v3;
          uint64_t v379 = *(void *)(a2 + v378);
          unint64_t v380 = v379 + 1;
          if (v379 == -1 || v380 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v381 = *(unsigned char *)(*(void *)(a2 + *v7) + v379);
            *(void *)(a2 + v378) = v380;
            v377 |= (unint64_t)(v381 & 0x7F) << v375;
            if (v381 < 0)
            {
              v375 += 7;
              BOOL v14 = v376++ >= 9;
              if (v14)
              {
                uint64_t v377 = 0;
                goto LABEL_872;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v377 = 0;
        }
LABEL_872:
        BOOL v521 = v377 != 0;
        uint64_t v522 = 798;
        goto LABEL_959;
      case 0x57u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 512;
        goto LABEL_636;
      case 0x58u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 576;
        goto LABEL_636;
      case 0x59u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 144;
        goto LABEL_636;
      case 0x5Au:
        char v382 = 0;
        unsigned int v383 = 0;
        uint64_t v384 = 0;
        *(void *)(a1 + 812) |= 0x8000000000000000;
        while (2)
        {
          uint64_t v385 = *v3;
          uint64_t v386 = *(void *)(a2 + v385);
          unint64_t v387 = v386 + 1;
          if (v386 == -1 || v387 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v388 = *(unsigned char *)(*(void *)(a2 + *v7) + v386);
            *(void *)(a2 + v385) = v387;
            v384 |= (unint64_t)(v388 & 0x7F) << v382;
            if (v388 < 0)
            {
              v382 += 7;
              BOOL v14 = v383++ >= 9;
              if (v14)
              {
                uint64_t v384 = 0;
                goto LABEL_876;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v384 = 0;
        }
LABEL_876:
        BOOL v521 = v384 != 0;
        uint64_t v522 = 786;
        goto LABEL_959;
      case 0x5Bu:
        unsigned int v130 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 768), v130);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v130, a2) & 1) == 0) {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x5Cu:
        char v389 = 0;
        unsigned int v390 = 0;
        uint64_t v168 = 0;
        *(void *)(a1 + 812) |= 0x1000uLL;
        while (2)
        {
          uint64_t v391 = *v3;
          uint64_t v392 = *(void *)(a2 + v391);
          unint64_t v393 = v392 + 1;
          if (v392 == -1 || v393 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v394 = *(unsigned char *)(*(void *)(a2 + *v7) + v392);
            *(void *)(a2 + v391) = v393;
            v168 |= (unint64_t)(v394 & 0x7F) << v389;
            if (v394 < 0)
            {
              v389 += 7;
              BOOL v14 = v390++ >= 9;
              if (v14)
              {
                uint64_t v168 = 0;
                goto LABEL_880;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v168 = 0;
        }
LABEL_880:
        uint64_t v523 = 104;
        goto LABEL_893;
      case 0x5Du:
        char v395 = 0;
        unsigned int v396 = 0;
        uint64_t v168 = 0;
        *(void *)(a1 + 812) |= 8uLL;
        while (2)
        {
          uint64_t v397 = *v3;
          uint64_t v398 = *(void *)(a2 + v397);
          unint64_t v399 = v398 + 1;
          if (v398 == -1 || v399 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v400 = *(unsigned char *)(*(void *)(a2 + *v7) + v398);
            *(void *)(a2 + v397) = v399;
            v168 |= (unint64_t)(v400 & 0x7F) << v395;
            if (v400 < 0)
            {
              v395 += 7;
              BOOL v14 = v396++ >= 9;
              if (v14)
              {
                uint64_t v168 = 0;
                goto LABEL_884;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v168 = 0;
        }
LABEL_884:
        uint64_t v523 = 32;
        goto LABEL_893;
      case 0x5Eu:
        char v401 = 0;
        unsigned int v402 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x100000000uLL;
        while (2)
        {
          uint64_t v403 = *v3;
          uint64_t v404 = *(void *)(a2 + v403);
          unint64_t v405 = v404 + 1;
          if (v404 == -1 || v405 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v406 = *(unsigned char *)(*(void *)(a2 + *v7) + v404);
            *(void *)(a2 + v403) = v405;
            v19 |= (unint64_t)(v406 & 0x7F) << v401;
            if (v406 < 0)
            {
              v401 += 7;
              BOOL v14 = v402++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_888;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_888:
        uint64_t v520 = 320;
        goto LABEL_950;
      case 0x5Fu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 400;
        goto LABEL_636;
      case 0x60u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 416;
        goto LABEL_636;
      case 0x61u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 392;
        goto LABEL_636;
      case 0x62u:
        char v407 = 0;
        unsigned int v408 = 0;
        uint64_t v168 = 0;
        *(void *)(a1 + 812) |= 0x800uLL;
        while (2)
        {
          uint64_t v409 = *v3;
          uint64_t v410 = *(void *)(a2 + v409);
          unint64_t v411 = v410 + 1;
          if (v410 == -1 || v411 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v412 = *(unsigned char *)(*(void *)(a2 + *v7) + v410);
            *(void *)(a2 + v409) = v411;
            v168 |= (unint64_t)(v412 & 0x7F) << v407;
            if (v412 < 0)
            {
              v407 += 7;
              BOOL v14 = v408++ >= 9;
              if (v14)
              {
                uint64_t v168 = 0;
                goto LABEL_892;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v168 = 0;
        }
LABEL_892:
        uint64_t v523 = 96;
LABEL_893:
        *(void *)(a1 + v523) = v168;
        goto LABEL_985;
      case 0x63u:
        char v413 = 0;
        unsigned int v414 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x800000000uLL;
        while (2)
        {
          uint64_t v415 = *v3;
          uint64_t v416 = *(void *)(a2 + v415);
          unint64_t v417 = v416 + 1;
          if (v416 == -1 || v417 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v418 = *(unsigned char *)(*(void *)(a2 + *v7) + v416);
            *(void *)(a2 + v415) = v417;
            v19 |= (unint64_t)(v418 & 0x7F) << v413;
            if (v418 < 0)
            {
              v413 += 7;
              BOOL v14 = v414++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_897;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_897:
        uint64_t v520 = 360;
        goto LABEL_950;
      case 0x64u:
        char v419 = 0;
        unsigned int v420 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x20000000uLL;
        while (2)
        {
          uint64_t v421 = *v3;
          uint64_t v422 = *(void *)(a2 + v421);
          unint64_t v423 = v422 + 1;
          if (v422 == -1 || v423 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v424 = *(unsigned char *)(*(void *)(a2 + *v7) + v422);
            *(void *)(a2 + v421) = v423;
            v19 |= (unint64_t)(v424 & 0x7F) << v419;
            if (v424 < 0)
            {
              v419 += 7;
              BOOL v14 = v420++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_901;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_901:
        uint64_t v520 = 296;
        goto LABEL_950;
      case 0x65u:
        *(void *)(a1 + 812) |= 0x40uLL;
        uint64_t v425 = *v3;
        unint64_t v426 = *(void *)(a2 + v425);
        if (v426 <= 0xFFFFFFFFFFFFFFF7 && v426 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v426);
          *(void *)(a2 + v425) = v426 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 56;
        goto LABEL_984;
      case 0x66u:
        *(void *)(a1 + 812) |= 0x100uLL;
        uint64_t v427 = *v3;
        unint64_t v428 = *(void *)(a2 + v427);
        if (v428 <= 0xFFFFFFFFFFFFFFF7 && v428 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v428);
          *(void *)(a2 + v427) = v428 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 72;
        goto LABEL_984;
      case 0x67u:
        *(void *)(a1 + 812) |= 4uLL;
        uint64_t v429 = *v3;
        unint64_t v430 = *(void *)(a2 + v429);
        if (v430 <= 0xFFFFFFFFFFFFFFF7 && v430 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v430);
          *(void *)(a2 + v429) = v430 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 24;
        goto LABEL_984;
      case 0x68u:
        *(void *)(a1 + 812) |= 0x10uLL;
        uint64_t v431 = *v3;
        unint64_t v432 = *(void *)(a2 + v431);
        if (v432 <= 0xFFFFFFFFFFFFFFF7 && v432 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v432);
          *(void *)(a2 + v431) = v432 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 40;
        goto LABEL_984;
      case 0x69u:
        *(void *)(a1 + 812) |= 0x80uLL;
        uint64_t v433 = *v3;
        unint64_t v434 = *(void *)(a2 + v433);
        if (v434 <= 0xFFFFFFFFFFFFFFF7 && v434 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v434);
          *(void *)(a2 + v433) = v434 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 64;
        goto LABEL_984;
      case 0x6Au:
        *(void *)(a1 + 812) |= 0x4000uLL;
        uint64_t v435 = *v3;
        unint64_t v436 = *(void *)(a2 + v435);
        if (v436 <= 0xFFFFFFFFFFFFFFF7 && v436 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v436);
          *(void *)(a2 + v435) = v436 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 120;
        goto LABEL_984;
      case 0x6Bu:
        *(void *)(a1 + 812) |= 2uLL;
        uint64_t v437 = *v3;
        unint64_t v438 = *(void *)(a2 + v437);
        if (v438 <= 0xFFFFFFFFFFFFFFF7 && v438 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v438);
          *(void *)(a2 + v437) = v438 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 16;
        goto LABEL_984;
      case 0x6Cu:
        *(void *)(a1 + 812) |= 1uLL;
        uint64_t v439 = *v3;
        unint64_t v440 = *(void *)(a2 + v439);
        if (v440 <= 0xFFFFFFFFFFFFFFF7 && v440 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v440);
          *(void *)(a2 + v439) = v440 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 8;
        goto LABEL_984;
      case 0x6Du:
        *(void *)(a1 + 812) |= 0x20uLL;
        uint64_t v441 = *v3;
        unint64_t v442 = *(void *)(a2 + v441);
        if (v442 <= 0xFFFFFFFFFFFFFFF7 && v442 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v442);
          *(void *)(a2 + v441) = v442 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 48;
        goto LABEL_984;
      case 0x6Eu:
        char v443 = 0;
        unsigned int v444 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x80000000000uLL;
        while (2)
        {
          uint64_t v445 = *v3;
          uint64_t v446 = *(void *)(a2 + v445);
          unint64_t v447 = v446 + 1;
          if (v446 == -1 || v447 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v448 = *(unsigned char *)(*(void *)(a2 + *v7) + v446);
            *(void *)(a2 + v445) = v447;
            v19 |= (unint64_t)(v448 & 0x7F) << v443;
            if (v448 < 0)
            {
              v443 += 7;
              BOOL v14 = v444++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_905;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_905:
        uint64_t v520 = 476;
        goto LABEL_950;
      case 0x6Fu:
        char v449 = 0;
        unsigned int v450 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x400000000000uLL;
        while (2)
        {
          uint64_t v451 = *v3;
          unint64_t v452 = *(void *)(a2 + v451);
          if (v452 == -1 || v452 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v453 = *(unsigned char *)(*(void *)(a2 + *v7) + v452);
            *(void *)(a2 + v451) = v452 + 1;
            v19 |= (unint64_t)(v453 & 0x7F) << v449;
            if (v453 < 0)
            {
              v449 += 7;
              BOOL v14 = v450++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_909;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_909:
        uint64_t v520 = 496;
        goto LABEL_950;
      case 0x70u:
        char v454 = 0;
        unsigned int v455 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x100000000000uLL;
        while (2)
        {
          uint64_t v456 = *v3;
          unint64_t v457 = *(void *)(a2 + v456);
          if (v457 == -1 || v457 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v458 = *(unsigned char *)(*(void *)(a2 + *v7) + v457);
            *(void *)(a2 + v456) = v457 + 1;
            v19 |= (unint64_t)(v458 & 0x7F) << v454;
            if (v458 < 0)
            {
              v454 += 7;
              BOOL v14 = v455++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_913;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_913:
        uint64_t v520 = 488;
        goto LABEL_950;
      case 0x71u:
        char v459 = 0;
        unsigned int v460 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x200000000000uLL;
        while (2)
        {
          uint64_t v461 = *v3;
          unint64_t v462 = *(void *)(a2 + v461);
          if (v462 == -1 || v462 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v463 = *(unsigned char *)(*(void *)(a2 + *v7) + v462);
            *(void *)(a2 + v461) = v462 + 1;
            v19 |= (unint64_t)(v463 & 0x7F) << v459;
            if (v463 < 0)
            {
              v459 += 7;
              BOOL v14 = v460++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_917;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_917:
        uint64_t v520 = 492;
        goto LABEL_950;
      case 0x72u:
        uint64_t v24 = PBReaderReadData();
        uint64_t v25 = 480;
        goto LABEL_636;
      case 0x73u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 584;
        goto LABEL_636;
      case 0x74u:
        char v464 = 0;
        unsigned int v465 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x8000000000000uLL;
        while (2)
        {
          uint64_t v466 = *v3;
          unint64_t v467 = *(void *)(a2 + v466);
          if (v467 == -1 || v467 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v468 = *(unsigned char *)(*(void *)(a2 + *v7) + v467);
            *(void *)(a2 + v466) = v467 + 1;
            v19 |= (unint64_t)(v468 & 0x7F) << v464;
            if (v468 < 0)
            {
              v464 += 7;
              BOOL v14 = v465++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_921;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_921:
        uint64_t v520 = 592;
        goto LABEL_950;
      case 0x75u:
        PBReaderReadString();
        unsigned int v130 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v130) {
          [(id)a1 addSurfacedByTagIds:v130];
        }
        goto LABEL_656;
      case 0x76u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 408;
        goto LABEL_636;
      case 0x77u:
        char v469 = 0;
        unsigned int v470 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x8000000uLL;
        while (2)
        {
          uint64_t v471 = *v3;
          unint64_t v472 = *(void *)(a2 + v471);
          if (v472 == -1 || v472 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v473 = *(unsigned char *)(*(void *)(a2 + *v7) + v472);
            *(void *)(a2 + v471) = v472 + 1;
            v19 |= (unint64_t)(v473 & 0x7F) << v469;
            if (v473 < 0)
            {
              v469 += 7;
              BOOL v14 = v470++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_925;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_925:
        uint64_t v520 = 272;
        goto LABEL_950;
      case 0x78u:
        char v474 = 0;
        unsigned int v475 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x1000000000uLL;
        while (2)
        {
          uint64_t v476 = *v3;
          unint64_t v477 = *(void *)(a2 + v476);
          if (v477 == -1 || v477 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v478 = *(unsigned char *)(*(void *)(a2 + *v7) + v477);
            *(void *)(a2 + v476) = v477 + 1;
            v19 |= (unint64_t)(v478 & 0x7F) << v474;
            if (v478 < 0)
            {
              v474 += 7;
              BOOL v14 = v475++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_929;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_929:
        uint64_t v520 = 364;
        goto LABEL_950;
      case 0x79u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 288;
        goto LABEL_636;
      case 0x7Au:
        uint64_t v24 = PBReaderReadData();
        uint64_t v25 = 376;
        goto LABEL_636;
      case 0x7Bu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 280;
        goto LABEL_636;
      case 0x7Cu:
        char v479 = 0;
        unsigned int v480 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x40000uLL;
        while (2)
        {
          uint64_t v481 = *v3;
          unint64_t v482 = *(void *)(a2 + v481);
          if (v482 == -1 || v482 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v483 = *(unsigned char *)(*(void *)(a2 + *v7) + v482);
            *(void *)(a2 + v481) = v482 + 1;
            v19 |= (unint64_t)(v483 & 0x7F) << v479;
            if (v483 < 0)
            {
              v479 += 7;
              BOOL v14 = v480++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_933;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_933:
        uint64_t v520 = 176;
        goto LABEL_950;
      case 0x7Du:
        char v484 = 0;
        unsigned int v485 = 0;
        uint64_t v486 = 0;
        *(_WORD *)(a1 + 820) |= 2u;
        while (2)
        {
          uint64_t v487 = *v3;
          unint64_t v488 = *(void *)(a2 + v487);
          if (v488 == -1 || v488 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v489 = *(unsigned char *)(*(void *)(a2 + *v7) + v488);
            *(void *)(a2 + v487) = v488 + 1;
            v486 |= (unint64_t)(v489 & 0x7F) << v484;
            if (v489 < 0)
            {
              v484 += 7;
              BOOL v14 = v485++ >= 9;
              if (v14)
              {
                uint64_t v486 = 0;
                goto LABEL_937;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v486 = 0;
        }
LABEL_937:
        BOOL v521 = v486 != 0;
        uint64_t v522 = 788;
        goto LABEL_959;
      case 0x7Eu:
        *(void *)(a1 + 812) |= 0x2000uLL;
        uint64_t v490 = *v3;
        unint64_t v491 = *(void *)(a2 + v490);
        if (v491 <= 0xFFFFFFFFFFFFFFF7 && v491 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v491);
          *(void *)(a2 + v490) = v491 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 112;
LABEL_984:
        *(void *)(a1 + v524) = v366;
        goto LABEL_985;
      case 0x7Fu:
        unsigned int v130 = objc_alloc_init(NTPBAlternateHeadline);
        objc_storeStrong((id *)(a1 + 136), v130);
        if (!PBReaderPlaceMark() || !NTPBAlternateHeadlineReadFrom((uint64_t)v130, a2)) {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x80u:
        char v492 = 0;
        unsigned int v493 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x20000000000000uLL;
        while (2)
        {
          uint64_t v494 = *v3;
          unint64_t v495 = *(void *)(a2 + v494);
          if (v495 == -1 || v495 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v496 = *(unsigned char *)(*(void *)(a2 + *v7) + v495);
            *(void *)(a2 + v494) = v495 + 1;
            v19 |= (unint64_t)(v496 & 0x7F) << v492;
            if (v496 < 0)
            {
              v492 += 7;
              BOOL v14 = v493++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_941;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_941:
        uint64_t v520 = 608;
        goto LABEL_950;
      case 0x81u:
        unsigned int v130 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 424), v130);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v130, a2) & 1) == 0) {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x82u:
        unsigned int v130 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 432), v130);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v130, a2) & 1) == 0) {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x83u:
        unsigned int v130 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 448), v130);
        if (!PBReaderPlaceMark() || (NTPBIssueViewDataReadFrom((uint64_t)v130, a2) & 1) == 0) {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x84u:
        char v497 = 0;
        unsigned int v498 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x40000000000000uLL;
        while (2)
        {
          uint64_t v499 = *v3;
          unint64_t v500 = *(void *)(a2 + v499);
          if (v500 == -1 || v500 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v501 = *(unsigned char *)(*(void *)(a2 + *v7) + v500);
            *(void *)(a2 + v499) = v500 + 1;
            v19 |= (unint64_t)(v501 & 0x7F) << v497;
            if (v501 < 0)
            {
              v497 += 7;
              BOOL v14 = v498++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_945;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_945:
        uint64_t v520 = 640;
        goto LABEL_950;
      case 0x85u:
        unsigned int v130 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 232), v130);
        if (!PBReaderPlaceMark() || (NTPBChannelDataReadFrom((uint64_t)v130, a2) & 1) == 0) {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x86u:
        unsigned int v130 = objc_alloc_init(NTPBIssueViewContextData);
        objc_storeStrong((id *)(a1 + 440), v130);
        if (!PBReaderPlaceMark() || (NTPBIssueViewContextDataReadFrom((uint64_t)v130, a2) & 1) == 0) {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x87u:
        char v502 = 0;
        unsigned int v503 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x8000000000uLL;
        while (2)
        {
          uint64_t v504 = *v3;
          unint64_t v505 = *(void *)(a2 + v504);
          if (v505 == -1 || v505 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v506 = *(unsigned char *)(*(void *)(a2 + *v7) + v505);
            *(void *)(a2 + v504) = v505 + 1;
            v19 |= (unint64_t)(v506 & 0x7F) << v502;
            if (v506 < 0)
            {
              v502 += 7;
              BOOL v14 = v503++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_949;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_949:
        uint64_t v520 = 384;
LABEL_950:
        *(_DWORD *)(a1 + v520) = v19;
        goto LABEL_985;
      case 0x88u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 752;
        goto LABEL_636;
      case 0x89u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 264;
LABEL_636:
        v507 = *(void **)(a1 + v25);
        *(void *)(a1 + v25) = v24;

        goto LABEL_985;
      case 0x8Au:
        char v508 = 0;
        unsigned int v509 = 0;
        uint64_t v510 = 0;
        *(_WORD *)(a1 + 820) |= 8u;
        while (2)
        {
          uint64_t v511 = *v3;
          unint64_t v512 = *(void *)(a2 + v511);
          if (v512 == -1 || v512 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v513 = *(unsigned char *)(*(void *)(a2 + *v7) + v512);
            *(void *)(a2 + v511) = v512 + 1;
            v510 |= (unint64_t)(v513 & 0x7F) << v508;
            if (v513 < 0)
            {
              v508 += 7;
              BOOL v14 = v509++ >= 9;
              if (v14)
              {
                uint64_t v510 = 0;
                goto LABEL_954;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v510 = 0;
        }
LABEL_954:
        BOOL v521 = v510 != 0;
        uint64_t v522 = 790;
        goto LABEL_959;
      case 0x8Bu:
        char v514 = 0;
        unsigned int v515 = 0;
        uint64_t v516 = 0;
        *(_WORD *)(a1 + 820) |= 0x10u;
        while (2)
        {
          uint64_t v517 = *v3;
          unint64_t v518 = *(void *)(a2 + v517);
          if (v518 == -1 || v518 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v519 = *(unsigned char *)(*(void *)(a2 + *v7) + v518);
            *(void *)(a2 + v517) = v518 + 1;
            v516 |= (unint64_t)(v519 & 0x7F) << v514;
            if (v519 < 0)
            {
              v514 += 7;
              BOOL v14 = v515++ >= 9;
              if (v14)
              {
                uint64_t v516 = 0;
                goto LABEL_958;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v516 = 0;
        }
LABEL_958:
        BOOL v521 = v516 != 0;
        uint64_t v522 = 791;
LABEL_959:
        *(unsigned char *)(a1 + v522) = v521;
        goto LABEL_985;
      case 0x8Cu:
        PBReaderReadString();
        unsigned int v130 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v130) {
          [(id)a1 addTopicIds:v130];
        }
        goto LABEL_656;
      case 0x8Du:
        unsigned int v130 = objc_alloc_init(NTPBPurchaseOffersItem);
        [(id)a1 addPurchaseOffersItem:v130];
        if PBReaderPlaceMark() && (NTPBPurchaseOffersItemReadFrom((uint64_t)v130, a2))
        {
LABEL_655:
          PBReaderRecallMark();
LABEL_656:

LABEL_985:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_987:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_985;
    }
  }
}

uint64_t NTPBDeviceInfoReadFrom(unsigned char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = &OBJC_IVAR___NTPBChannelMuteUnmute__groupViewExposureId;
    char v8 = &OBJC_IVAR___NTPBChannelMuteUnmute__groupViewExposureId;
    unsigned int v9 = &OBJC_IVAR___NTPBChannelMuteUnmute__groupViewExposureId;
    unint64_t v10 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        uint64_t v14 = *v3;
        unint64_t v15 = *(void *)(a2 + v14);
        if (v15 == -1 || v15 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v16 = *(unsigned char *)(*(void *)(a2 + *v10) + v15);
        *(void *)(a2 + v14) = v15 + 1;
        v13 |= (unint64_t)(v16 & 0x7F) << v11;
        if ((v16 & 0x80) == 0) {
          goto LABEL_12;
        }
        v11 += 7;
        BOOL v17 = v12++ >= 9;
        if (v17)
        {
          unint64_t v13 = 0;
          int v18 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v18 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v13 = 0;
      }
LABEL_14:
      if (v18 || (v13 & 7) == 4) {
        break;
      }
      switch((v13 >> 3))
      {
        case 1u:
          uint64_t v20 = PBReaderReadString();
          uint64_t v21 = v7[640];
          goto LABEL_51;
        case 2u:
          uint64_t v20 = PBReaderReadString();
          uint64_t v21 = v8[641];
          goto LABEL_51;
        case 3u:
          uint64_t v20 = PBReaderReadString();
          uint64_t v21 = v9[642];
          goto LABEL_51;
        case 4u:
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          a1[96] |= 8u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v10) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v25 |= (unint64_t)(v28 & 0x7F) << v23;
              if (v28 < 0)
              {
                v23 += 7;
                BOOL v17 = v24++ >= 9;
                if (v17)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_62;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v25) = 0;
          }
LABEL_62:
          uint64_t v50 = 80;
          goto LABEL_76;
        case 5u:
          uint64_t v29 = v9;
          unint64_t v30 = v8;
          char v31 = v7;
          char v32 = PBReaderReadString();
          if (v32) {
            [a1 addDevicePreferredLanguage:v32];
          }

          int v7 = v31;
          char v8 = v30;
          unsigned int v9 = v29;
          continue;
        case 6u:
          uint64_t v20 = PBReaderReadString();
          uint64_t v21 = 48;
          goto LABEL_51;
        case 7u:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v35 = 0;
          a1[96] |= 2u;
          while (2)
          {
            uint64_t v36 = *v3;
            unint64_t v37 = *(void *)(a2 + v36);
            if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v38 = *(unsigned char *)(*(void *)(a2 + *v10) + v37);
              *(void *)(a2 + v36) = v37 + 1;
              v35 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v17 = v34++ >= 9;
                if (v17)
                {
                  uint64_t v35 = 0;
                  goto LABEL_66;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
LABEL_66:
          uint64_t v51 = 16;
          goto LABEL_71;
        case 8u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v35 = 0;
          a1[96] |= 1u;
          while (2)
          {
            uint64_t v41 = *v3;
            unint64_t v42 = *(void *)(a2 + v41);
            if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v43 = *(unsigned char *)(*(void *)(a2 + *v10) + v42);
              *(void *)(a2 + v41) = v42 + 1;
              v35 |= (unint64_t)(v43 & 0x7F) << v39;
              if (v43 < 0)
              {
                v39 += 7;
                BOOL v17 = v40++ >= 9;
                if (v17)
                {
                  uint64_t v35 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
LABEL_70:
          uint64_t v51 = 8;
LABEL_71:
          *(void *)&a1[v51] = v35;
          continue;
        case 9u:
          uint64_t v20 = PBReaderReadString();
          uint64_t v21 = 32;
          goto LABEL_51;
        case 0xAu:
          uint64_t v20 = PBReaderReadString();
          uint64_t v21 = 24;
LABEL_51:
          char v44 = *(void **)&a1[v21];
          *(void *)&a1[v21] = v20;

          continue;
        case 0xBu:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v25 = 0;
          a1[96] |= 4u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v47 = *v3;
        unint64_t v48 = *(void *)(a2 + v47);
        if (v48 == -1 || v48 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v49 = *(unsigned char *)(*(void *)(a2 + *v10) + v48);
        *(void *)(a2 + v47) = v48 + 1;
        v25 |= (unint64_t)(v49 & 0x7F) << v45;
        if ((v49 & 0x80) == 0) {
          goto LABEL_73;
        }
        v45 += 7;
        BOOL v17 = v46++ >= 9;
        if (v17)
        {
          LODWORD(v25) = 0;
          goto LABEL_75;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_73:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v25) = 0;
      }
LABEL_75:
      uint64_t v50 = 40;
LABEL_76:
      *(_DWORD *)&a1[v50] = v25;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedItemReadFrom(uint64_t a1, unsigned char *a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)&a2[*MEMORY[0x263F62298]] >= *(void *)&a2[*MEMORY[0x263F62288]]) {
    return a2[*v5] == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (a2[*v5]) {
      return a2[*v5] == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)&a2[v11];
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)&a2[*v4]) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)&a2[*v7] + v12);
      *(void *)&a2[v11] = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = a2[*v5];
        goto LABEL_14;
      }
    }
    a2[*v5] = 1;
LABEL_12:
    int v16 = a2[*v5];
    if (a2[*v5]) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return a2[*v5] == 0;
    }
    switch((v10 >> 3))
    {
      case 0u:
        uint64_t String = (void *)PBReaderReadString();

        id v19 = String;
        uint64_t v20 = 120;
        goto LABEL_194;
      case 1u:
        uint64_t v21 = (void *)PBReaderReadString();

        id v19 = v21;
        uint64_t v20 = 80;
        goto LABEL_194;
      case 2u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        *(_DWORD *)(a1 + 252) |= 0x40u;
        while (2)
        {
          uint64_t v25 = *v3;
          uint64_t v26 = *(void *)&a2[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)&a2[*v7] + v26);
            *(void *)&a2[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              BOOL v15 = v23++ >= 9;
              if (v15)
              {
                uint64_t v24 = 0;
                goto LABEL_248;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v24 = 0;
        }
LABEL_248:
        uint64_t v221 = 56;
        goto LABEL_301;
      case 3u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v24 = 0;
        *(_DWORD *)(a1 + 252) |= 0x80u;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)&a2[v31];
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)&a2[*v7] + v32);
            *(void *)&a2[v31] = v33;
            v24 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              BOOL v15 = v30++ >= 9;
              if (v15)
              {
                uint64_t v24 = 0;
                goto LABEL_252;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v24 = 0;
        }
LABEL_252:
        uint64_t v221 = 64;
        goto LABEL_301;
      case 4u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v24 = 0;
        *(_DWORD *)(a1 + 252) |= 8u;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)&a2[v37];
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)&a2[*v7] + v38);
            *(void *)&a2[v37] = v39;
            v24 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              BOOL v15 = v36++ >= 9;
              if (v15)
              {
                uint64_t v24 = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v24 = 0;
        }
LABEL_256:
        uint64_t v221 = 32;
        goto LABEL_301;
      case 5u:
        *(_DWORD *)(a1 + 252) |= 0x10u;
        uint64_t v41 = *v3;
        unint64_t v42 = *(void *)&a2[v41];
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v43 = *(void *)(*(void *)&a2[*v7] + v42);
          *(void *)&a2[v41] = v42 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v43 = 0;
        }
        uint64_t v224 = 40;
        goto LABEL_357;
      case 6u:
        char v44 = (void *)PBReaderReadString();

        id v19 = v44;
        uint64_t v20 = 104;
        goto LABEL_194;
      case 7u:
        char v45 = (void *)PBReaderReadString();

        id v19 = v45;
        uint64_t v20 = 192;
        goto LABEL_194;
      case 8u:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_DWORD *)(a1 + 252) |= 0x400u;
        while (2)
        {
          uint64_t v49 = *v3;
          uint64_t v50 = *(void *)&a2[v49];
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)&a2[*v7] + v50);
            *(void *)&a2[v49] = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v15 = v47++ >= 9;
              if (v15)
              {
                uint64_t v48 = 0;
                goto LABEL_260;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v48 = 0;
        }
LABEL_260:
        BOOL v222 = v48 != 0;
        uint64_t v223 = 233;
        goto LABEL_350;
      case 9u:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(_DWORD *)(a1 + 252) |= 0x100000u;
        while (2)
        {
          uint64_t v56 = *v3;
          uint64_t v57 = *(void *)&a2[v56];
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)&a2[*v7] + v57);
            *(void *)&a2[v56] = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v15 = v54++ >= 9;
              if (v15)
              {
                uint64_t v55 = 0;
                goto LABEL_264;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v55 = 0;
        }
LABEL_264:
        BOOL v222 = v55 != 0;
        uint64_t v223 = 243;
        goto LABEL_350;
      case 0xAu:
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        *(_DWORD *)(a1 + 252) |= 0x20000u;
        while (2)
        {
          uint64_t v63 = *v3;
          uint64_t v64 = *(void *)&a2[v63];
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)&a2[*v7] + v64);
            *(void *)&a2[v63] = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              BOOL v15 = v61++ >= 9;
              if (v15)
              {
                uint64_t v62 = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v62 = 0;
        }
LABEL_268:
        BOOL v222 = v62 != 0;
        uint64_t v223 = 240;
        goto LABEL_350;
      case 0xBu:
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v24 = 0;
        *(_DWORD *)(a1 + 252) |= 0x20u;
        while (2)
        {
          uint64_t v69 = *v3;
          uint64_t v70 = *(void *)&a2[v69];
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)&a2[*v7] + v70);
            *(void *)&a2[v69] = v71;
            v24 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              BOOL v15 = v68++ >= 9;
              if (v15)
              {
                uint64_t v24 = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v24 = 0;
        }
LABEL_272:
        uint64_t v221 = 48;
        goto LABEL_301;
      case 0xCu:
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v24 = 0;
        *(_DWORD *)(a1 + 252) |= 4u;
        while (2)
        {
          uint64_t v75 = *v3;
          uint64_t v76 = *(void *)&a2[v75];
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)&a2[*v7] + v76);
            *(void *)&a2[v75] = v77;
            v24 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              BOOL v15 = v74++ >= 9;
              if (v15)
              {
                uint64_t v24 = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v24 = 0;
        }
LABEL_276:
        uint64_t v221 = 24;
        goto LABEL_301;
      case 0xDu:
        uint64_t v79 = PBReaderReadString();
        if (v79) {
          [(id)a1 addTopicIDs:v79];
        }
        goto LABEL_351;
      case 0xEu:
        char v80 = 0;
        unsigned int v81 = 0;
        uint64_t v82 = 0;
        *(_DWORD *)(a1 + 252) |= 0x800000u;
        while (2)
        {
          uint64_t v83 = *v3;
          uint64_t v84 = *(void *)&a2[v83];
          unint64_t v85 = v84 + 1;
          if (v84 == -1 || v85 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)&a2[*v7] + v84);
            *(void *)&a2[v83] = v85;
            v82 |= (unint64_t)(v86 & 0x7F) << v80;
            if (v86 < 0)
            {
              v80 += 7;
              BOOL v15 = v81++ >= 9;
              if (v15)
              {
                uint64_t v82 = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v82 = 0;
        }
LABEL_280:
        BOOL v222 = v82 != 0;
        uint64_t v223 = 246;
        goto LABEL_350;
      case 0xFu:
        char v87 = 0;
        unsigned int v88 = 0;
        uint64_t v89 = 0;
        *(_DWORD *)(a1 + 252) |= 0x800u;
        while (2)
        {
          uint64_t v90 = *v3;
          uint64_t v91 = *(void *)&a2[v90];
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v93 = *(unsigned char *)(*(void *)&a2[*v7] + v91);
            *(void *)&a2[v90] = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              BOOL v15 = v88++ >= 9;
              if (v15)
              {
                uint64_t v89 = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v89 = 0;
        }
LABEL_284:
        BOOL v222 = v89 != 0;
        uint64_t v223 = 234;
        goto LABEL_350;
      case 0x10u:
        char v94 = 0;
        unsigned int v95 = 0;
        uint64_t v24 = 0;
        *(_DWORD *)(a1 + 252) |= 0x100u;
        while (2)
        {
          uint64_t v96 = *v3;
          uint64_t v97 = *(void *)&a2[v96];
          unint64_t v98 = v97 + 1;
          if (v97 == -1 || v98 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v99 = *(unsigned char *)(*(void *)&a2[*v7] + v97);
            *(void *)&a2[v96] = v98;
            v24 |= (unint64_t)(v99 & 0x7F) << v94;
            if (v99 < 0)
            {
              v94 += 7;
              BOOL v15 = v95++ >= 9;
              if (v15)
              {
                uint64_t v24 = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v24 = 0;
        }
LABEL_288:
        uint64_t v221 = 72;
        goto LABEL_301;
      case 0x13u:
        char v101 = 0;
        unsigned int v102 = 0;
        uint64_t v103 = 0;
        *(_DWORD *)(a1 + 252) |= 0x200000u;
        while (2)
        {
          uint64_t v104 = *v3;
          uint64_t v105 = *(void *)&a2[v104];
          unint64_t v106 = v105 + 1;
          if (v105 == -1 || v106 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v107 = *(unsigned char *)(*(void *)&a2[*v7] + v105);
            *(void *)&a2[v104] = v106;
            v103 |= (unint64_t)(v107 & 0x7F) << v101;
            if (v107 < 0)
            {
              v101 += 7;
              BOOL v15 = v102++ >= 9;
              if (v15)
              {
                uint64_t v103 = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v103 = 0;
        }
LABEL_292:
        BOOL v222 = v103 != 0;
        uint64_t v223 = 244;
        goto LABEL_350;
      case 0x14u:
        unint64_t v108 = (void *)PBReaderReadString();

        id v19 = v108;
        uint64_t v20 = 168;
        goto LABEL_194;
      case 0x15u:
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v111 = 0;
        *(_DWORD *)(a1 + 252) |= 0x4000u;
        while (2)
        {
          uint64_t v112 = *v3;
          uint64_t v113 = *(void *)&a2[v112];
          unint64_t v114 = v113 + 1;
          if (v113 == -1 || v114 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v115 = *(unsigned char *)(*(void *)&a2[*v7] + v113);
            *(void *)&a2[v112] = v114;
            v111 |= (unint64_t)(v115 & 0x7F) << v109;
            if (v115 < 0)
            {
              v109 += 7;
              BOOL v15 = v110++ >= 9;
              if (v15)
              {
                uint64_t v111 = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v111 = 0;
        }
LABEL_296:
        BOOL v222 = v111 != 0;
        uint64_t v223 = 237;
        goto LABEL_350;
      case 0x16u:
        char v116 = 0;
        unsigned int v117 = 0;
        uint64_t v24 = 0;
        *(_DWORD *)(a1 + 252) |= 1u;
        while (2)
        {
          uint64_t v118 = *v3;
          uint64_t v119 = *(void *)&a2[v118];
          unint64_t v120 = v119 + 1;
          if (v119 == -1 || v120 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v121 = *(unsigned char *)(*(void *)&a2[*v7] + v119);
            *(void *)&a2[v118] = v120;
            v24 |= (unint64_t)(v121 & 0x7F) << v116;
            if (v121 < 0)
            {
              v116 += 7;
              BOOL v15 = v117++ >= 9;
              if (v15)
              {
                uint64_t v24 = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v24 = 0;
        }
LABEL_300:
        uint64_t v221 = 8;
LABEL_301:
        *(void *)(a1 + v221) = v24;
        goto LABEL_351;
      case 0x17u:
        char v122 = 0;
        unsigned int v123 = 0;
        uint64_t v124 = 0;
        *(_DWORD *)(a1 + 252) |= 0x80000u;
        while (2)
        {
          uint64_t v125 = *v3;
          uint64_t v126 = *(void *)&a2[v125];
          unint64_t v127 = v126 + 1;
          if (v126 == -1 || v127 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v128 = *(unsigned char *)(*(void *)&a2[*v7] + v126);
            *(void *)&a2[v125] = v127;
            v124 |= (unint64_t)(v128 & 0x7F) << v122;
            if (v128 < 0)
            {
              v122 += 7;
              BOOL v15 = v123++ >= 9;
              if (v15)
              {
                uint64_t v124 = 0;
                goto LABEL_305;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v124 = 0;
        }
LABEL_305:
        BOOL v222 = v124 != 0;
        uint64_t v223 = 242;
        goto LABEL_350;
      case 0x18u:
        char v129 = 0;
        unsigned int v130 = 0;
        uint64_t v131 = 0;
        *(_DWORD *)(a1 + 252) |= 0x200u;
        while (2)
        {
          uint64_t v132 = *v3;
          uint64_t v133 = *(void *)&a2[v132];
          unint64_t v134 = v133 + 1;
          if (v133 == -1 || v134 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v135 = *(unsigned char *)(*(void *)&a2[*v7] + v133);
            *(void *)&a2[v132] = v134;
            v131 |= (unint64_t)(v135 & 0x7F) << v129;
            if (v135 < 0)
            {
              v129 += 7;
              BOOL v15 = v130++ >= 9;
              if (v15)
              {
                uint64_t v131 = 0;
                goto LABEL_309;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v131 = 0;
        }
LABEL_309:
        BOOL v222 = v131 != 0;
        uint64_t v223 = 232;
        goto LABEL_350;
      case 0x19u:
        char v136 = 0;
        unsigned int v137 = 0;
        uint64_t v138 = 0;
        *(_DWORD *)(a1 + 252) |= 0x40000u;
        while (2)
        {
          uint64_t v139 = *v3;
          uint64_t v140 = *(void *)&a2[v139];
          unint64_t v141 = v140 + 1;
          if (v140 == -1 || v141 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v142 = *(unsigned char *)(*(void *)&a2[*v7] + v140);
            *(void *)&a2[v139] = v141;
            v138 |= (unint64_t)(v142 & 0x7F) << v136;
            if (v142 < 0)
            {
              v136 += 7;
              BOOL v15 = v137++ >= 9;
              if (v15)
              {
                uint64_t v138 = 0;
                goto LABEL_313;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v138 = 0;
        }
LABEL_313:
        BOOL v222 = v138 != 0;
        uint64_t v223 = 241;
        goto LABEL_350;
      case 0x1Au:
        char v143 = 0;
        unsigned int v144 = 0;
        uint64_t v145 = 0;
        *(_DWORD *)(a1 + 252) |= 0x2000000u;
        while (2)
        {
          uint64_t v146 = *v3;
          uint64_t v147 = *(void *)&a2[v146];
          unint64_t v148 = v147 + 1;
          if (v147 == -1 || v148 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v149 = *(unsigned char *)(*(void *)&a2[*v7] + v147);
            *(void *)&a2[v146] = v148;
            v145 |= (unint64_t)(v149 & 0x7F) << v143;
            if (v149 < 0)
            {
              v143 += 7;
              BOOL v15 = v144++ >= 9;
              if (v15)
              {
                uint64_t v145 = 0;
                goto LABEL_317;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v145 = 0;
        }
LABEL_317:
        BOOL v222 = v145 != 0;
        uint64_t v223 = 248;
        goto LABEL_350;
      case 0x1Bu:
        char v150 = 0;
        unsigned int v151 = 0;
        uint64_t v152 = 0;
        *(_DWORD *)(a1 + 252) |= 0x400000u;
        while (2)
        {
          uint64_t v153 = *v3;
          uint64_t v154 = *(void *)&a2[v153];
          unint64_t v155 = v154 + 1;
          if (v154 == -1 || v155 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v156 = *(unsigned char *)(*(void *)&a2[*v7] + v154);
            *(void *)&a2[v153] = v155;
            v152 |= (unint64_t)(v156 & 0x7F) << v150;
            if (v156 < 0)
            {
              v150 += 7;
              BOOL v15 = v151++ >= 9;
              if (v15)
              {
                uint64_t v152 = 0;
                goto LABEL_321;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v152 = 0;
        }
LABEL_321:
        BOOL v222 = v152 != 0;
        uint64_t v223 = 245;
        goto LABEL_350;
      case 0x1Cu:
        char v157 = 0;
        unsigned int v158 = 0;
        uint64_t v159 = 0;
        *(_DWORD *)(a1 + 252) |= 0x10000u;
        while (2)
        {
          uint64_t v160 = *v3;
          uint64_t v161 = *(void *)&a2[v160];
          unint64_t v162 = v161 + 1;
          if (v161 == -1 || v162 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v163 = *(unsigned char *)(*(void *)&a2[*v7] + v161);
            *(void *)&a2[v160] = v162;
            v159 |= (unint64_t)(v163 & 0x7F) << v157;
            if (v163 < 0)
            {
              v157 += 7;
              BOOL v15 = v158++ >= 9;
              if (v15)
              {
                uint64_t v159 = 0;
                goto LABEL_325;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v159 = 0;
        }
LABEL_325:
        BOOL v222 = v159 != 0;
        uint64_t v223 = 239;
        goto LABEL_350;
      case 0x1Du:
        unint64_t v164 = (void *)PBReaderReadString();

        id v19 = v164;
        uint64_t v20 = 160;
        goto LABEL_194;
      case 0x1Eu:
        char v165 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);

        uint64_t v166 = 184;
        goto LABEL_174;
      case 0x1Fu:
        char v165 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);

        uint64_t v166 = 144;
LABEL_174:
        *(void *)(a1 + v166) = v165;
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortListReadFrom(v165, (uint64_t)a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_244;
      case 0x20u:
        unsigned int v167 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);

        uint64_t v168 = 88;
        goto LABEL_179;
      case 0x21u:
        unsigned int v167 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);

        uint64_t v168 = 152;
LABEL_179:
        *(void *)(a1 + v168) = v167;
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStatsReadFrom((uint64_t)v167, (uint64_t)a2))
        {
          return 0;
        }
        goto LABEL_244;
      case 0x22u:
        uint64_t v169 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata);

        *(void *)(a1 + 96) = v169;
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadataReadFrom((uint64_t)v169, (uint64_t)a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_244;
      case 0x23u:
        uint64_t v170 = objc_alloc_init(NTPBArticleTopic);
        [(id)a1 addTopics:v170];

        if (!PBReaderPlaceMark() || (NTPBArticleTopicReadFrom((uint64_t)v170, (uint64_t)a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_244;
      case 0x24u:
        unint64_t v171 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleContentExpiration);

        *(void *)(a1 + 112) = v171;
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleContentExpirationReadFrom((uint64_t)v171, (uint64_t)a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_244;
      case 0x26u:
        Data = (void *)PBReaderReadData();

        id v19 = Data;
        uint64_t v20 = 136;
        goto LABEL_194;
      case 0x27u:
        char v173 = (void *)PBReaderReadData();

        id v19 = v173;
        uint64_t v20 = 128;
        goto LABEL_194;
      case 0x28u:
        unsigned int v174 = (void *)PBReaderReadData();

        id v19 = v174;
        uint64_t v20 = 208;
LABEL_194:
        *(void *)(a1 + v20) = v19;
        goto LABEL_351;
      case 0x29u:
        char v175 = 0;
        unsigned int v176 = 0;
        uint64_t v177 = 0;
        *(_DWORD *)(a1 + 252) |= 0x1000000u;
        while (2)
        {
          uint64_t v178 = *v3;
          uint64_t v179 = *(void *)&a2[v178];
          unint64_t v180 = v179 + 1;
          if (v179 == -1 || v180 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v181 = *(unsigned char *)(*(void *)&a2[*v7] + v179);
            *(void *)&a2[v178] = v180;
            v177 |= (unint64_t)(v181 & 0x7F) << v175;
            if (v181 < 0)
            {
              v175 += 7;
              BOOL v15 = v176++ >= 9;
              if (v15)
              {
                uint64_t v177 = 0;
                goto LABEL_329;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v177 = 0;
        }
LABEL_329:
        BOOL v222 = v177 != 0;
        uint64_t v223 = 247;
        goto LABEL_350;
      case 0x2Au:
        char v182 = 0;
        unsigned int v183 = 0;
        uint64_t v184 = 0;
        *(_DWORD *)(a1 + 252) |= 0x1000u;
        while (2)
        {
          uint64_t v185 = *v3;
          uint64_t v186 = *(void *)&a2[v185];
          unint64_t v187 = v186 + 1;
          if (v186 == -1 || v187 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v188 = *(unsigned char *)(*(void *)&a2[*v7] + v186);
            *(void *)&a2[v185] = v187;
            v184 |= (unint64_t)(v188 & 0x7F) << v182;
            if (v188 < 0)
            {
              v182 += 7;
              BOOL v15 = v183++ >= 9;
              if (v15)
              {
                uint64_t v184 = 0;
                goto LABEL_333;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v184 = 0;
        }
LABEL_333:
        BOOL v222 = v184 != 0;
        uint64_t v223 = 235;
        goto LABEL_350;
      case 0x2Bu:
        char v189 = 0;
        unsigned int v190 = 0;
        uint64_t v191 = 0;
        *(_DWORD *)(a1 + 252) |= 0x8000000u;
        while (2)
        {
          uint64_t v192 = *v3;
          uint64_t v193 = *(void *)&a2[v192];
          unint64_t v194 = v193 + 1;
          if (v193 == -1 || v194 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v195 = *(unsigned char *)(*(void *)&a2[*v7] + v193);
            *(void *)&a2[v192] = v194;
            v191 |= (unint64_t)(v195 & 0x7F) << v189;
            if (v195 < 0)
            {
              v189 += 7;
              BOOL v15 = v190++ >= 9;
              if (v15)
              {
                uint64_t v191 = 0;
                goto LABEL_337;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v191 = 0;
        }
LABEL_337:
        BOOL v222 = v191 != 0;
        uint64_t v223 = 250;
        goto LABEL_350;
      case 0x2Cu:
        char v196 = 0;
        unsigned int v197 = 0;
        uint64_t v198 = 0;
        *(_DWORD *)(a1 + 252) |= 0x4000000u;
        while (2)
        {
          uint64_t v199 = *v3;
          uint64_t v200 = *(void *)&a2[v199];
          unint64_t v201 = v200 + 1;
          if (v200 == -1 || v201 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v202 = *(unsigned char *)(*(void *)&a2[*v7] + v200);
            *(void *)&a2[v199] = v201;
            v198 |= (unint64_t)(v202 & 0x7F) << v196;
            if (v202 < 0)
            {
              v196 += 7;
              BOOL v15 = v197++ >= 9;
              if (v15)
              {
                uint64_t v198 = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v198 = 0;
        }
LABEL_341:
        BOOL v222 = v198 != 0;
        uint64_t v223 = 249;
        goto LABEL_350;
      case 0x2Du:
        uint64_t v203 = PBReaderReadString();
        if (v203) {
          [(id)a1 addSurfacedByArticleListID2:v203];
        }
        goto LABEL_351;
      case 0x2Eu:
        *(_DWORD *)(a1 + 252) |= 2u;
        uint64_t v204 = *v3;
        unint64_t v205 = *(void *)&a2[v204];
        if (v205 <= 0xFFFFFFFFFFFFFFF7 && v205 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v43 = *(void *)(*(void *)&a2[*v7] + v205);
          *(void *)&a2[v204] = v205 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v43 = 0;
        }
        uint64_t v224 = 16;
LABEL_357:
        *(void *)(a1 + v224) = v43;
        goto LABEL_351;
      case 0x2Fu:
        char v206 = 0;
        unsigned int v207 = 0;
        uint64_t v208 = 0;
        *(_DWORD *)(a1 + 252) |= 0x2000u;
        while (2)
        {
          uint64_t v209 = *v3;
          uint64_t v210 = *(void *)&a2[v209];
          unint64_t v211 = v210 + 1;
          if (v210 == -1 || v211 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v212 = *(unsigned char *)(*(void *)&a2[*v7] + v210);
            *(void *)&a2[v209] = v211;
            v208 |= (unint64_t)(v212 & 0x7F) << v206;
            if (v212 < 0)
            {
              v206 += 7;
              BOOL v15 = v207++ >= 9;
              if (v15)
              {
                uint64_t v208 = 0;
                goto LABEL_345;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v208 = 0;
        }
LABEL_345:
        BOOL v222 = v208 != 0;
        uint64_t v223 = 236;
        goto LABEL_350;
      case 0x30u:
        char v213 = 0;
        unsigned int v214 = 0;
        uint64_t v215 = 0;
        *(_DWORD *)(a1 + 252) |= 0x8000u;
        while (2)
        {
          uint64_t v216 = *v3;
          uint64_t v217 = *(void *)&a2[v216];
          unint64_t v218 = v217 + 1;
          if (v217 == -1 || v218 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v219 = *(unsigned char *)(*(void *)&a2[*v7] + v217);
            *(void *)&a2[v216] = v218;
            v215 |= (unint64_t)(v219 & 0x7F) << v213;
            if (v219 < 0)
            {
              v213 += 7;
              BOOL v15 = v214++ >= 9;
              if (v15)
              {
                uint64_t v215 = 0;
                goto LABEL_349;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v215 = 0;
        }
LABEL_349:
        BOOL v222 = v215 != 0;
        uint64_t v223 = 238;
LABEL_350:
        *(unsigned char *)(a1 + v223) = v222;
        goto LABEL_351;
      case 0x64u:
        unint64_t v220 = objc_alloc_init(NTPBScoreProfiles);

        *(void *)(a1 + 176) = v220;
        if PBReaderPlaceMark() && (NTPBScoreProfilesReadFrom((uint64_t)v220, a2))
        {
LABEL_244:
          PBReaderRecallMark();
LABEL_351:
          if (*(void *)&a2[*v3] >= *(void *)&a2[*v4]) {
            return a2[*v5] == 0;
          }
          continue;
        }
        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_351;
    }
  }
}

BOOL NTPBRestorePaidSubscriptionReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        BOOL v17 = (NTPBRestorePaidSubscriptionItem *)objc_claimAutoreleasedReturnValue();
        if (v17) {
          [a1 addRestoredPaidSubscriptionChannelIds:v17];
        }
LABEL_25:

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    BOOL v17 = objc_alloc_init(NTPBRestorePaidSubscriptionItem);
    [a1 addItems:v17];
    if (!PBReaderPlaceMark() || (NTPBRestorePaidSubscriptionItemReadFrom((uint64_t)v17, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBEventObjectReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        BOOL v17 = objc_alloc_init(NTPBUserOnboardingBegin);
        objc_storeStrong(a1 + 96, v17);
        if (PBReaderPlaceMark() && NTPBUserOnboardingBeginReadFrom((uint64_t)v17, a2)) {
          goto LABEL_326;
        }
        goto LABEL_330;
      case 2u:
        BOOL v17 = objc_alloc_init(NTPBUserOnboardingResume);
        objc_storeStrong(a1 + 99, v17);
        if (!PBReaderPlaceMark() || (NTPBUserOnboardingResumeReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 3u:
        BOOL v17 = objc_alloc_init(NTPBUserOnboardingResult);
        objc_storeStrong(a1 + 98, v17);
        if (!PBReaderPlaceMark() || (NTPBUserOnboardingResultReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 4u:
        BOOL v17 = objc_alloc_init(NTPBAppSessionStart);
        objc_storeStrong(a1 + 12, v17);
        if (!PBReaderPlaceMark() || (NTPBAppSessionStartReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 5u:
        BOOL v17 = objc_alloc_init(NTPBAppSessionEnd);
        objc_storeStrong(a1 + 8, v17);
        if (!PBReaderPlaceMark() || (NTPBAppSessionEndReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 6u:
        BOOL v17 = objc_alloc_init(NTPBArticleScroll);
        objc_storeStrong(a1 + 19, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleScrollReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 7u:
        BOOL v17 = objc_alloc_init(NTPBArticleHostViewExposure);
        objc_storeStrong(a1 + 17, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleHostViewExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 8u:
        BOOL v17 = objc_alloc_init(NTPBArticleLikeDislike);
        objc_storeStrong(a1 + 18, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleLikeDislikeReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 9u:
        BOOL v17 = objc_alloc_init(NTPBFeedCellExposure);
        objc_storeStrong(a1 + 38, v17);
        if (!PBReaderPlaceMark() || (NTPBFeedCellExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0xAu:
        BOOL v17 = objc_alloc_init(NTPBFeedViewExposure);
        objc_storeStrong(a1 + 43, v17);
        if (!PBReaderPlaceMark() || (NTPBFeedViewExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0xBu:
        BOOL v17 = objc_alloc_init(NTPBFeedCellHostViewExposure);
        objc_storeStrong(a1 + 39, v17);
        if (!PBReaderPlaceMark() || (NTPBFeedCellHostViewExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0xCu:
        BOOL v17 = objc_alloc_init(NTPBFeedSubscribeUnsubscribe);
        objc_storeStrong(a1 + 42, v17);
        if (!PBReaderPlaceMark() || (NTPBFeedSubscribeUnsubscribeReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0xDu:
        BOOL v17 = objc_alloc_init(NTPBMediaExposure);
        objc_storeStrong(a1 + 55, v17);
        if (!PBReaderPlaceMark() || (NTPBMediaExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0xEu:
        BOOL v17 = objc_alloc_init(NTPBMediaView);
        objc_storeStrong(a1 + 56, v17);
        if (!PBReaderPlaceMark() || (NTPBMediaViewReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0xFu:
        BOOL v17 = objc_alloc_init(NTPBMediaEngage);
        objc_storeStrong(a1 + 53, v17);
        if (!PBReaderPlaceMark() || (NTPBMediaEngageReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x10u:
        BOOL v17 = objc_alloc_init(NTPBMediaEngageComplete);
        objc_storeStrong(a1 + 54, v17);
        if (!PBReaderPlaceMark() || (NTPBMediaEngageCompleteReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x11u:
        BOOL v17 = objc_alloc_init(NTPBSearchBegin);
        objc_storeStrong(a1 + 74, v17);
        if (!PBReaderPlaceMark() || (NTPBSearchBeginReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x12u:
        BOOL v17 = objc_alloc_init(NTPBSearchExecute);
        objc_storeStrong(a1 + 75, v17);
        if (!PBReaderPlaceMark() || (NTPBSearchExecuteReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x13u:
        BOOL v17 = objc_alloc_init(NTPBSearchResultSelect);
        objc_storeStrong(a1 + 76, v17);
        if (!PBReaderPlaceMark() || (NTPBSearchResultSelectReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x14u:
        BOOL v17 = objc_alloc_init(NTPBShareResult);
        objc_storeStrong(a1 + 79, v17);
        if (!PBReaderPlaceMark() || (NTPBShareResultReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x16u:
        BOOL v17 = objc_alloc_init(NTPBNoUserAction);
        objc_storeStrong(a1 + 57, v17);
        if (!PBReaderPlaceMark() || (NTPBNoUserActionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x17u:
        BOOL v17 = objc_alloc_init(NTPBReadingListAddRemove);
        objc_storeStrong(a1 + 69, v17);
        if (!PBReaderPlaceMark() || (NTPBReadingListAddRemoveReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x18u:
        BOOL v17 = objc_alloc_init(NTPBReadingListShow);
        objc_storeStrong(a1 + 70, v17);
        if (!PBReaderPlaceMark() || (NTPBReadingListShowReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x19u:
        BOOL v17 = objc_alloc_init(NTPBRecommendationBrickExposure);
        objc_storeStrong(a1 + 71, v17);
        if (!PBReaderPlaceMark() || (NTPBRecommendationBrickExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x1Bu:
        BOOL v17 = objc_alloc_init(NTPBEndOfArticleExposure);
        objc_storeStrong(a1 + 36, v17);
        if (!PBReaderPlaceMark() || (NTPBEndOfArticleExposureReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x1Cu:
        BOOL v17 = objc_alloc_init(NTPBReportConcernSubmission);
        objc_storeStrong(a1 + 72, v17);
        if (!PBReaderPlaceMark() || !NTPBReportConcernSubmissionReadFrom((uint64_t)v17, a2)) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x1Du:
        BOOL v17 = objc_alloc_init(NTPBLocalNotificationReturn);
        objc_storeStrong(a1 + 52, v17);
        if (!PBReaderPlaceMark() || (NTPBLocalNotificationReturnReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x1Eu:
        BOOL v17 = objc_alloc_init(NTPBPullToRefresh);
        objc_storeStrong(a1 + 67, v17);
        if (!PBReaderPlaceMark() || (NTPBPullToRefreshReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x1Fu:
        BOOL v17 = objc_alloc_init(NTPBLinkTapArticle);
        objc_storeStrong(a1 + 50, v17);
        if (!PBReaderPlaceMark() || (NTPBLinkTapArticleReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x20u:
        BOOL v17 = objc_alloc_init(NTPBLocalNotificationReceived);
        objc_storeStrong(a1 + 51, v17);
        if (!PBReaderPlaceMark() || (NTPBLocalNotificationReceivedReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x21u:
        BOOL v17 = objc_alloc_init(NTPBUserOnboardingScreenView);
        objc_storeStrong(a1 + 100, v17);
        if (!PBReaderPlaceMark() || (NTPBUserOnboardingScreenViewReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x22u:
        BOOL v17 = objc_alloc_init(NTPBUserOnboardingChannelPickerComplete);
        objc_storeStrong(a1 + 97, v17);
        if (!PBReaderPlaceMark() || (NTPBUserOnboardingChannelPickerCompleteReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x23u:
        BOOL v17 = objc_alloc_init(NTPBAdExposureOpportunity);
        objc_storeStrong(a1 + 4, v17);
        if (!PBReaderPlaceMark() || (NTPBAdExposureOpportunityReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x24u:
        BOOL v17 = objc_alloc_init(NTPBChannelMuteUnmute);
        objc_storeStrong(a1 + 30, v17);
        if (!PBReaderPlaceMark() || (NTPBChannelMuteUnmuteReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x25u:
        BOOL v17 = objc_alloc_init(NTPBShareSheetExposure);
        objc_storeStrong(a1 + 80, v17);
        if (!PBReaderPlaceMark() || (NTPBShareSheetExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x26u:
        BOOL v17 = objc_alloc_init(NTPBFeedEngagementMenuExposure);
        objc_storeStrong(a1 + 40, v17);
        if (!PBReaderPlaceMark() || (NTPBFeedEngagementMenuExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x27u:
        BOOL v17 = objc_alloc_init(NTPBSearchViewExposure);
        objc_storeStrong(a1 + 77, v17);
        if (!PBReaderPlaceMark() || (NTPBSearchViewExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x28u:
        BOOL v17 = objc_alloc_init(NTPBGroupViewExposure);
        objc_storeStrong(a1 + 44, v17);
        if (!PBReaderPlaceMark() || (NTPBGroupViewExposureReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x29u:
        BOOL v17 = objc_alloc_init(NTPBPaidSubscriptionConversionPointExposure);
        objc_storeStrong(a1 + 61, v17);
        if (!PBReaderPlaceMark()
          || (NTPBPaidSubscriptionConversionPointExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x2Au:
        BOOL v17 = objc_alloc_init(NTPBPaidSubscriptionSheetView);
        objc_storeStrong(a1 + 64, v17);
        if (!PBReaderPlaceMark() || (NTPBPaidSubscriptionSheetViewReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x2Bu:
        BOOL v17 = objc_alloc_init(NTPBShareSheetIapFail);
        objc_storeStrong(a1 + 81, v17);
        if (!PBReaderPlaceMark() || (NTPBShareSheetIapFailReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x2Cu:
        BOOL v17 = objc_alloc_init(NTPBPaidSubscriptionResult);
        objc_storeStrong(a1 + 62, v17);
        if (!PBReaderPlaceMark() || (NTPBPaidSubscriptionResultReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x2Du:
        BOOL v17 = objc_alloc_init(NTPBShareInformationScreenView);
        objc_storeStrong(a1 + 78, v17);
        if (!PBReaderPlaceMark() || (NTPBShareInformationScreenViewReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x2Eu:
        BOOL v17 = objc_alloc_init(NTPBWebAccessScreenView);
        objc_storeStrong(a1 + 101, v17);
        if (!PBReaderPlaceMark() || (NTPBWebAccessScreenViewReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x2Fu:
        BOOL v17 = objc_alloc_init(NTPBAlreadySubscriberSignIn);
        objc_storeStrong(a1 + 6, v17);
        if (!PBReaderPlaceMark() || (NTPBAlreadySubscriberSignInReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x30u:
        BOOL v17 = objc_alloc_init(NTPBBackgroundSubscriptionValidation);
        objc_storeStrong(a1 + 27, v17);
        if (!PBReaderPlaceMark()
          || (NTPBBackgroundSubscriptionValidationReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x31u:
        BOOL v17 = objc_alloc_init(NTPBSubscriptionDetectionScreenView);
        objc_storeStrong(a1 + 82, v17);
        if (!PBReaderPlaceMark()
          || (NTPBSubscriptionDetectionScreenViewReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x32u:
        BOOL v17 = objc_alloc_init(NTPBCoverArticleWidgetView);
        objc_storeStrong(a1 + 33, v17);
        if (!PBReaderPlaceMark() || (NTPBCoverArticleWidgetViewReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x33u:
        BOOL v17 = objc_alloc_init(NTPBNotificationSubscribeUnsubscribe);
        objc_storeStrong(a1 + 59, v17);
        if (!PBReaderPlaceMark()
          || (NTPBNotificationSubscribeUnsubscribeReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x34u:
        BOOL v17 = objc_alloc_init(NTPBNotificationSettingsScreenView);
        objc_storeStrong(a1 + 58, v17);
        if (!PBReaderPlaceMark()
          || (NTPBNotificationSettingsScreenViewReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x35u:
        BOOL v17 = objc_alloc_init(NTPBEmailOptInInvite);
        objc_storeStrong(a1 + 35, v17);
        if (!PBReaderPlaceMark() || (NTPBEmailOptInInviteReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x36u:
        BOOL v17 = objc_alloc_init(NTPBCoverArticleWidgetExposure);
        objc_storeStrong(a1 + 32, v17);
        if (!PBReaderPlaceMark() || (NTPBCoverArticleWidgetExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x37u:
        BOOL v17 = objc_alloc_init(NTPBRestorePaidSubscription);
        objc_storeStrong(a1 + 73, v17);
        if (!PBReaderPlaceMark() || !NTPBRestorePaidSubscriptionReadFrom(v17, a2)) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x38u:
        BOOL v17 = objc_alloc_init(NTPBPaidSubscriptionSheetIapFail);
        objc_storeStrong(a1 + 63, v17);
        if (!PBReaderPlaceMark() || !NTPBPaidSubscriptionSheetIapFailReadFrom((uint64_t)v17, a2)) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x39u:
        BOOL v17 = objc_alloc_init(NTPBComscoreEventSend);
        objc_storeStrong(a1 + 31, v17);
        if (!PBReaderPlaceMark() || (NTPBComscoreEventSendReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x3Au:
        BOOL v17 = objc_alloc_init(NTPBDiscoverMoreInterstitialExposure);
        objc_storeStrong(a1 + 34, v17);
        if (!PBReaderPlaceMark()
          || (NTPBDiscoverMoreInterstitialExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x3Bu:
        BOOL v17 = objc_alloc_init(NTPBArticleViewNotw);
        objc_storeStrong(a1 + 23, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleViewNotwReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x3Cu:
        BOOL v17 = objc_alloc_init(NTPBArticleScrollNotw);
        objc_storeStrong(a1 + 20, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleScrollNotwReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x3Du:
        BOOL v17 = objc_alloc_init(NTPBUrlMappingMiss);
        objc_storeStrong(a1 + 94, v17);
        if (!PBReaderPlaceMark() || !NTPBUrlMappingMissReadFrom((char *)v17, a2)) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x3Eu:
        BOOL v17 = objc_alloc_init(NTPBBundleIdMappingMiss);
        objc_storeStrong(a1 + 28, v17);
        if (!PBReaderPlaceMark() || (NTPBBundleIdMappingMissReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x3Fu:
        BOOL v17 = objc_alloc_init(NTPBExternalAnalyticsEventSend);
        objc_storeStrong(a1 + 37, v17);
        if (!PBReaderPlaceMark() || (NTPBExternalAnalyticsEventSendReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x40u:
        BOOL v17 = objc_alloc_init(NTPBAppSessionStartWatch);
        objc_storeStrong(a1 + 13, v17);
        if (!PBReaderPlaceMark() || (NTPBAppSessionStartWatchReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x41u:
        BOOL v17 = objc_alloc_init(NTPBArticleViewWatch);
        objc_storeStrong(a1 + 24, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleViewWatchReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x42u:
        BOOL v17 = objc_alloc_init(NTPBAppSessionEndWatch);
        objc_storeStrong(a1 + 9, v17);
        if (!PBReaderPlaceMark() || (NTPBAppSessionEndWatchReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x43u:
        BOOL v17 = objc_alloc_init(NTPBAnfComponentExposure);
        objc_storeStrong(a1 + 7, v17);
        if (!PBReaderPlaceMark() || (NTPBAnfComponentExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x44u:
        BOOL v17 = objc_alloc_init(NTPBTodayWidgetSession);
        objc_storeStrong(a1 + 92, v17);
        if (!PBReaderPlaceMark() || (NTPBTodayWidgetSessionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x45u:
        BOOL v17 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong(a1 + 102, v17);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x46u:
        BOOL v17 = objc_alloc_init(NTPBTodayWidgetHeadlineExposure);
        objc_storeStrong(a1 + 91, v17);
        if (!PBReaderPlaceMark() || (NTPBTodayWidgetHeadlineExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x47u:
        BOOL v17 = objc_alloc_init(NTPBTodayWidgetExposure);
        objc_storeStrong(a1 + 90, v17);
        if (!PBReaderPlaceMark() || (NTPBTodayWidgetExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x48u:
        BOOL v17 = objc_alloc_init(NTPBAdExposureIneligible);
        objc_storeStrong(a1 + 3, v17);
        if (!PBReaderPlaceMark() || (NTPBAdExposureIneligibleReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x49u:
        BOOL v17 = objc_alloc_init(NTPBOptInButtonExposure);
        objc_storeStrong(a1 + 60, v17);
        if (!PBReaderPlaceMark() || (NTPBOptInButtonExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x4Au:
        BOOL v17 = objc_alloc_init(NTPBSuggestionsFeedback);
        objc_storeStrong(a1 + 83, v17);
        if (!PBReaderPlaceMark() || !NTPBSuggestionsFeedbackReadFrom(v17, a2)) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x4Bu:
        BOOL v17 = objc_alloc_init(NTPBUserIgnoreFavoritesSuggestion);
        objc_storeStrong(a1 + 95, v17);
        if (!PBReaderPlaceMark()
          || (NTPBUserIgnoreFavoritesSuggestionReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x4Cu:
        BOOL v17 = objc_alloc_init(NTPBArticleEngagement);
        objc_storeStrong(a1 + 15, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleEngagementReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x4Du:
        BOOL v17 = objc_alloc_init(NTPBAdImpression);
        objc_storeStrong(a1 + 5, v17);
        if (!PBReaderPlaceMark() || (NTPBAdImpressionReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x4Eu:
        BOOL v17 = objc_alloc_init(NTPBAdEngagement);
        objc_storeStrong(a1 + 2, v17);
        if (!PBReaderPlaceMark() || (NTPBAdEngagementReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x4Fu:
        BOOL v17 = objc_alloc_init(NTPBAdCtaEngagement);
        objc_storeStrong(a1 + 1, v17);
        if (!PBReaderPlaceMark() || (NTPBAdCtaEngagementReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x50u:
        BOOL v17 = objc_alloc_init(NTPBLinkTap);
        objc_storeStrong(a1 + 49, v17);
        if (!PBReaderPlaceMark() || (NTPBLinkTapReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x51u:
        BOOL v17 = objc_alloc_init(NTPBTopOfFeedModuleExposure);
        objc_storeStrong(a1 + 93, v17);
        if (!PBReaderPlaceMark() || (NTPBTopOfFeedModuleExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x52u:
        BOOL v17 = objc_alloc_init(NTPBInAppWebEmbedExposure);
        objc_storeStrong(a1 + 45, v17);
        if (!PBReaderPlaceMark() || (NTPBInAppWebEmbedExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x53u:
        BOOL v17 = objc_alloc_init(NTPBTocExposure);
        objc_storeStrong(a1 + 86, v17);
        if (!PBReaderPlaceMark() || (NTPBTocExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x54u:
        BOOL v17 = objc_alloc_init(NTPBTocReorder);
        objc_storeStrong(a1 + 88, v17);
        if (!PBReaderPlaceMark() || (NTPBTocReorderReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x55u:
        BOOL v17 = objc_alloc_init(NTPBTocHandleTap);
        objc_storeStrong(a1 + 87, v17);
        if (!PBReaderPlaceMark() || (NTPBTocHandleTapReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x56u:
        BOOL v17 = objc_alloc_init(NTPBTocCardDrag);
        objc_storeStrong(a1 + 84, v17);
        if (!PBReaderPlaceMark() || (NTPBTocCardDragReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x57u:
        BOOL v17 = objc_alloc_init(NTPBTocToggleTap);
        objc_storeStrong(a1 + 89, v17);
        if (!PBReaderPlaceMark() || (NTPBTocToggleTapReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x58u:
        BOOL v17 = objc_alloc_init(NTPBTocCellExposure);
        objc_storeStrong(a1 + 85, v17);
        if (!PBReaderPlaceMark() || (NTPBTocCellExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x59u:
        BOOL v17 = objc_alloc_init(NTPBAppSessionResign);
        objc_storeStrong(a1 + 10, v17);
        if (!PBReaderPlaceMark() || !NTPBAppSessionResignReadFrom((uint64_t)v17, a2)) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x5Au:
        BOOL v17 = objc_alloc_init(NTPBAppSessionResume);
        objc_storeStrong(a1 + 11, v17);
        if (!PBReaderPlaceMark() || !NTPBAppSessionResumeReadFrom((uint64_t)v17, a2)) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x5Bu:
        BOOL v17 = objc_alloc_init(NTPBArticleSessionResign);
        objc_storeStrong(a1 + 21, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleSessionResignReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x5Cu:
        BOOL v17 = objc_alloc_init(NTPBArticleSessionResume);
        objc_storeStrong(a1 + 22, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleSessionResumeReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x5Du:
        BOOL v17 = objc_alloc_init(NTPBBundleSubscriberInfo);
        objc_storeStrong(a1 + 29, v17);
        if (!PBReaderPlaceMark() || (NTPBBundleSubscriberInfoReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x5Eu:
        BOOL v17 = objc_alloc_init(NTPBIssueDownload);
        objc_storeStrong(a1 + 46, v17);
        if (!PBReaderPlaceMark() || (NTPBIssueDownloadReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x5Fu:
        BOOL v17 = objc_alloc_init(NTPBPaywallButtonTap);
        objc_storeStrong(a1 + 65, v17);
        if (!PBReaderPlaceMark() || (NTPBPaywallButtonTapReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x60u:
        BOOL v17 = objc_alloc_init(NTPBPDFPageView);
        objc_storeStrong(a1 + 66, v17);
        if (!PBReaderPlaceMark() || (NTPBPDFPageViewReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x61u:
        BOOL v17 = objc_alloc_init(NTPBIssueTocView);
        objc_storeStrong(a1 + 48, v17);
        if (!PBReaderPlaceMark() || (NTPBIssueTocViewReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x62u:
        BOOL v17 = objc_alloc_init(NTPBIssueExposure);
        objc_storeStrong(a1 + 47, v17);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x63u:
        BOOL v17 = objc_alloc_init(NTPBAppleIdSignInResult);
        objc_storeStrong(a1 + 14, v17);
        if (!PBReaderPlaceMark() || (NTPBAppleIdSignInResultReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x64u:
        BOOL v17 = objc_alloc_init(NTPBArticleFeedback);
        objc_storeStrong(a1 + 16, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleFeedbackReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x65u:
        BOOL v17 = objc_alloc_init(NTPBAudioEngage);
        objc_storeStrong(a1 + 25, v17);
        if (!PBReaderPlaceMark() || (NTPBAudioEngageReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x66u:
        BOOL v17 = objc_alloc_init(NTPBAudioEngagementCompleted);
        objc_storeStrong(a1 + 26, v17);
        if (!PBReaderPlaceMark() || (NTPBAudioEngagementCompletedReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x67u:
        BOOL v17 = objc_alloc_init(NTPBPurchaseOffersItem);
        objc_storeStrong(a1 + 68, v17);
        if (!PBReaderPlaceMark() || (NTPBPurchaseOffersItemReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x68u:
        BOOL v17 = objc_alloc_init(NTPBFeedLoad);
        objc_storeStrong(a1 + 41, v17);
        if PBReaderPlaceMark() && (NTPBFeedLoadReadFrom((uint64_t)v17, a2))
        {
LABEL_326:
          PBReaderRecallMark();

LABEL_327:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_330:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_327;
    }
  }
}

uint64_t NTPBUserOnboardingChannelPickerCompleteReadFrom(unsigned char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          a1[44] |= 2u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_55;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_57;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_57:
          uint64_t v41 = 32;
          goto LABEL_70;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          a1[44] |= 4u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_61:
          uint64_t v41 = 36;
          goto LABEL_70;
        case 3u:
          char v29 = PBReaderReadString();
          if (v29) {
            [a1 addChannelId:v29];
          }
          goto LABEL_39;
        case 4u:
          char v29 = PBReaderReadString();
          if (v29) {
            [a1 addTopicId:v29];
          }
LABEL_39:

          continue;
        case 5u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v32 = 0;
          a1[44] |= 8u;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                BOOL v14 = v31++ >= 9;
                if (v14)
                {
                  uint64_t v32 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v32 = 0;
          }
LABEL_65:
          a1[40] = v32 != 0;
          continue;
        case 6u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v19 = 0;
          a1[44] |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v38 = *v3;
        unint64_t v39 = *(void *)(a2 + v38);
        if (v39 == -1 || v39 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
        *(void *)(a2 + v38) = v39 + 1;
        v19 |= (unint64_t)(v40 & 0x7F) << v36;
        if ((v40 & 0x80) == 0) {
          goto LABEL_67;
        }
        v36 += 7;
        BOOL v14 = v37++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_69;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_67:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_69:
      uint64_t v41 = 16;
LABEL_70:
      *(_DWORD *)&a1[v41] = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleLikeDislikeReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x4000u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_250;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_252;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_250:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_252:
        uint64_t v165 = 360;
        goto LABEL_355;
      case 2u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 40;
        goto LABEL_229;
      case 3u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 296;
        goto LABEL_229;
      case 4u:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 48;
        goto LABEL_229;
      case 5u:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 64;
        goto LABEL_229;
      case 6u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 312;
        goto LABEL_229;
      case 7u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x100u;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_256:
        uint64_t v165 = 128;
        goto LABEL_355;
      case 8u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 120;
        goto LABEL_229;
      case 9u:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 136;
        goto LABEL_229;
      case 0xAu:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        *(_DWORD *)(a1 + 388) |= 0x2000000u;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_260;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
LABEL_260:
        BOOL v166 = v32 != 0;
        uint64_t v167 = 386;
        goto LABEL_337;
      case 0xDu:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x400u;
        while (2)
        {
          uint64_t v39 = *v3;
          unint64_t v40 = *(void *)(a2 + v39);
          if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v40 + 1;
            v19 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              BOOL v14 = v38++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_264;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_264:
        uint64_t v165 = 232;
        goto LABEL_355;
      case 0xEu:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x10u;
        while (2)
        {
          uint64_t v44 = *v3;
          unint64_t v45 = *(void *)(a2 + v44);
          if (v45 == -1 || v45 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v45 + 1;
            v19 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              BOOL v14 = v43++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_268:
        uint64_t v165 = 56;
        goto LABEL_355;
      case 0xFu:
        PBReaderReadString();
        unsigned int v47 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v47) {
          [(id)a1 addNamedEntities:v47];
        }
        goto LABEL_246;
      case 0x10u:
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x40u;
        while (2)
        {
          uint64_t v50 = *v3;
          unint64_t v51 = *(void *)(a2 + v50);
          if (v51 == -1 || v51 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v51 + 1;
            v19 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              BOOL v14 = v49++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_272:
        uint64_t v165 = 104;
        goto LABEL_355;
      case 0x11u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 224;
        goto LABEL_229;
      case 0x12u:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x1000u;
        while (2)
        {
          uint64_t v55 = *v3;
          unint64_t v56 = *(void *)(a2 + v55);
          if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
            *(void *)(a2 + v55) = v56 + 1;
            v19 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              BOOL v14 = v54++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_276:
        uint64_t v165 = 288;
        goto LABEL_355;
      case 0x13u:
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x20u;
        while (2)
        {
          uint64_t v60 = *v3;
          unint64_t v61 = *(void *)(a2 + v60);
          if (v61 == -1 || v61 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
            *(void *)(a2 + v60) = v61 + 1;
            v19 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              BOOL v14 = v59++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_280:
        uint64_t v165 = 72;
        goto LABEL_355;
      case 0x14u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 320;
        goto LABEL_229;
      case 0x15u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 328;
        goto LABEL_229;
      case 0x16u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 336;
        goto LABEL_229;
      case 0x17u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 304;
        goto LABEL_229;
      case 0x18u:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        *(_DWORD *)(a1 + 388) |= 0x40000u;
        while (2)
        {
          uint64_t v66 = *v3;
          unint64_t v67 = *(void *)(a2 + v66);
          if (v67 == -1 || v67 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(a2 + *v7) + v67);
            *(void *)(a2 + v66) = v67 + 1;
            v65 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              BOOL v14 = v64++ >= 9;
              if (v14)
              {
                uint64_t v65 = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v65 = 0;
        }
LABEL_284:
        BOOL v166 = v65 != 0;
        uint64_t v167 = 379;
        goto LABEL_337;
      case 0x19u:
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v71 = 0;
        *(_DWORD *)(a1 + 388) |= 2u;
        while (2)
        {
          uint64_t v72 = *v3;
          unint64_t v73 = *(void *)(a2 + v72);
          if (v73 == -1 || v73 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(a2 + *v7) + v73);
            *(void *)(a2 + v72) = v73 + 1;
            v71 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              BOOL v14 = v70++ >= 9;
              if (v14)
              {
                uint64_t v71 = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v71 = 0;
        }
LABEL_288:
        uint64_t v168 = 16;
        goto LABEL_350;
      case 0x1Au:
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v77 = 0;
        *(_DWORD *)(a1 + 388) |= 0x100000u;
        while (2)
        {
          uint64_t v78 = *v3;
          unint64_t v79 = *(void *)(a2 + v78);
          if (v79 == -1 || v79 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(a2 + *v7) + v79);
            *(void *)(a2 + v78) = v79 + 1;
            v77 |= (unint64_t)(v80 & 0x7F) << v75;
            if (v80 < 0)
            {
              v75 += 7;
              BOOL v14 = v76++ >= 9;
              if (v14)
              {
                uint64_t v77 = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v77 = 0;
        }
LABEL_292:
        BOOL v166 = v77 != 0;
        uint64_t v167 = 381;
        goto LABEL_337;
      case 0x1Bu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 152;
        goto LABEL_229;
      case 0x1Cu:
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x200u;
        while (2)
        {
          uint64_t v83 = *v3;
          unint64_t v84 = *(void *)(a2 + v83);
          if (v84 == -1 || v84 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
            *(void *)(a2 + v83) = v84 + 1;
            v19 |= (unint64_t)(v85 & 0x7F) << v81;
            if (v85 < 0)
            {
              v81 += 7;
              BOOL v14 = v82++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_296:
        uint64_t v165 = 160;
        goto LABEL_355;
      case 0x1Du:
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v88 = 0;
        *(_DWORD *)(a1 + 388) |= 0x400000u;
        while (2)
        {
          uint64_t v89 = *v3;
          unint64_t v90 = *(void *)(a2 + v89);
          if (v90 == -1 || v90 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(a2 + *v7) + v90);
            *(void *)(a2 + v89) = v90 + 1;
            v88 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              BOOL v14 = v87++ >= 9;
              if (v14)
              {
                uint64_t v88 = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v88 = 0;
        }
LABEL_300:
        BOOL v166 = v88 != 0;
        uint64_t v167 = 383;
        goto LABEL_337;
      case 0x1Eu:
        char v92 = 0;
        unsigned int v93 = 0;
        uint64_t v94 = 0;
        *(_DWORD *)(a1 + 388) |= 0x80000u;
        while (2)
        {
          uint64_t v95 = *v3;
          unint64_t v96 = *(void *)(a2 + v95);
          if (v96 == -1 || v96 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v97 = *(unsigned char *)(*(void *)(a2 + *v7) + v96);
            *(void *)(a2 + v95) = v96 + 1;
            v94 |= (unint64_t)(v97 & 0x7F) << v92;
            if (v97 < 0)
            {
              v92 += 7;
              BOOL v14 = v93++ >= 9;
              if (v14)
              {
                uint64_t v94 = 0;
                goto LABEL_304;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v94 = 0;
        }
LABEL_304:
        BOOL v166 = v94 != 0;
        uint64_t v167 = 380;
        goto LABEL_337;
      case 0x1Fu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 80;
        goto LABEL_229;
      case 0x20u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 88;
        goto LABEL_229;
      case 0x21u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 112;
        goto LABEL_229;
      case 0x22u:
        char v98 = 0;
        unsigned int v99 = 0;
        uint64_t v100 = 0;
        *(_DWORD *)(a1 + 388) |= 0x20000u;
        while (2)
        {
          uint64_t v101 = *v3;
          unint64_t v102 = *(void *)(a2 + v101);
          if (v102 == -1 || v102 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v103 = *(unsigned char *)(*(void *)(a2 + *v7) + v102);
            *(void *)(a2 + v101) = v102 + 1;
            v100 |= (unint64_t)(v103 & 0x7F) << v98;
            if (v103 < 0)
            {
              v98 += 7;
              BOOL v14 = v99++ >= 9;
              if (v14)
              {
                uint64_t v100 = 0;
                goto LABEL_308;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v100 = 0;
        }
LABEL_308:
        BOOL v166 = v100 != 0;
        uint64_t v167 = 378;
        goto LABEL_337;
      case 0x23u:
        char v104 = 0;
        unsigned int v105 = 0;
        uint64_t v106 = 0;
        *(_DWORD *)(a1 + 388) |= 0x8000u;
        while (2)
        {
          uint64_t v107 = *v3;
          unint64_t v108 = *(void *)(a2 + v107);
          if (v108 == -1 || v108 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v109 = *(unsigned char *)(*(void *)(a2 + *v7) + v108);
            *(void *)(a2 + v107) = v108 + 1;
            v106 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              BOOL v14 = v105++ >= 9;
              if (v14)
              {
                uint64_t v106 = 0;
                goto LABEL_312;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v106 = 0;
        }
LABEL_312:
        BOOL v166 = v106 != 0;
        uint64_t v167 = 376;
        goto LABEL_337;
      case 0x24u:
        char v110 = 0;
        unsigned int v111 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x800u;
        while (2)
        {
          uint64_t v112 = *v3;
          unint64_t v113 = *(void *)(a2 + v112);
          if (v113 == -1 || v113 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v114 = *(unsigned char *)(*(void *)(a2 + *v7) + v113);
            *(void *)(a2 + v112) = v113 + 1;
            v19 |= (unint64_t)(v114 & 0x7F) << v110;
            if (v114 < 0)
            {
              v110 += 7;
              BOOL v14 = v111++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_316;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_316:
        uint64_t v165 = 256;
        goto LABEL_355;
      case 0x25u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 264;
        goto LABEL_229;
      case 0x26u:
        char v115 = 0;
        unsigned int v116 = 0;
        uint64_t v117 = 0;
        *(_DWORD *)(a1 + 388) |= 0x10000u;
        while (2)
        {
          uint64_t v118 = *v3;
          unint64_t v119 = *(void *)(a2 + v118);
          if (v119 == -1 || v119 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v120 = *(unsigned char *)(*(void *)(a2 + *v7) + v119);
            *(void *)(a2 + v118) = v119 + 1;
            v117 |= (unint64_t)(v120 & 0x7F) << v115;
            if (v120 < 0)
            {
              v115 += 7;
              BOOL v14 = v116++ >= 9;
              if (v14)
              {
                uint64_t v117 = 0;
                goto LABEL_320;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v117 = 0;
        }
LABEL_320:
        BOOL v166 = v117 != 0;
        uint64_t v167 = 377;
        goto LABEL_337;
      case 0x27u:
        char v121 = 0;
        unsigned int v122 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x2000u;
        while (2)
        {
          uint64_t v123 = *v3;
          unint64_t v124 = *(void *)(a2 + v123);
          if (v124 == -1 || v124 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v125 = *(unsigned char *)(*(void *)(a2 + *v7) + v124);
            *(void *)(a2 + v123) = v124 + 1;
            v19 |= (unint64_t)(v125 & 0x7F) << v121;
            if (v125 < 0)
            {
              v121 += 7;
              BOOL v14 = v122++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_324;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_324:
        uint64_t v165 = 344;
        goto LABEL_355;
      case 0x28u:
        char v126 = 0;
        unsigned int v127 = 0;
        uint64_t v128 = 0;
        *(_DWORD *)(a1 + 388) |= 0x1000000u;
        while (2)
        {
          uint64_t v129 = *v3;
          unint64_t v130 = *(void *)(a2 + v129);
          if (v130 == -1 || v130 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v131 = *(unsigned char *)(*(void *)(a2 + *v7) + v130);
            *(void *)(a2 + v129) = v130 + 1;
            v128 |= (unint64_t)(v131 & 0x7F) << v126;
            if (v131 < 0)
            {
              v126 += 7;
              BOOL v14 = v127++ >= 9;
              if (v14)
              {
                uint64_t v128 = 0;
                goto LABEL_328;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v128 = 0;
        }
LABEL_328:
        BOOL v166 = v128 != 0;
        uint64_t v167 = 385;
        goto LABEL_337;
      case 0x29u:
        char v132 = 0;
        unsigned int v133 = 0;
        uint64_t v134 = 0;
        *(_DWORD *)(a1 + 388) |= 0x800000u;
        while (2)
        {
          uint64_t v135 = *v3;
          unint64_t v136 = *(void *)(a2 + v135);
          if (v136 == -1 || v136 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v137 = *(unsigned char *)(*(void *)(a2 + *v7) + v136);
            *(void *)(a2 + v135) = v136 + 1;
            v134 |= (unint64_t)(v137 & 0x7F) << v132;
            if (v137 < 0)
            {
              v132 += 7;
              BOOL v14 = v133++ >= 9;
              if (v14)
              {
                uint64_t v134 = 0;
                goto LABEL_332;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v134 = 0;
        }
LABEL_332:
        BOOL v166 = v134 != 0;
        uint64_t v167 = 384;
        goto LABEL_337;
      case 0x2Au:
        char v138 = 0;
        unsigned int v139 = 0;
        uint64_t v140 = 0;
        *(_DWORD *)(a1 + 388) |= 0x200000u;
        while (2)
        {
          uint64_t v141 = *v3;
          unint64_t v142 = *(void *)(a2 + v141);
          if (v142 == -1 || v142 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v143 = *(unsigned char *)(*(void *)(a2 + *v7) + v142);
            *(void *)(a2 + v141) = v142 + 1;
            v140 |= (unint64_t)(v143 & 0x7F) << v138;
            if (v143 < 0)
            {
              v138 += 7;
              BOOL v14 = v139++ >= 9;
              if (v14)
              {
                uint64_t v140 = 0;
                goto LABEL_336;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v140 = 0;
        }
LABEL_336:
        BOOL v166 = v140 != 0;
        uint64_t v167 = 382;
LABEL_337:
        *(unsigned char *)(a1 + v167) = v166;
        goto LABEL_356;
      case 0x2Bu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 248;
        goto LABEL_229;
      case 0x2Cu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 272;
        goto LABEL_229;
      case 0x2Du:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 280;
        goto LABEL_229;
      case 0x2Eu:
        unsigned int v47 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 368), v47);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v47, a2) & 1) == 0) {
          goto LABEL_358;
        }
        goto LABEL_245;
      case 0x2Fu:
        unsigned int v47 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        [(id)a1 addFractionalCohortMembership:v47];
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v47, a2) & 1) == 0)
        {
          goto LABEL_358;
        }
        goto LABEL_245;
      case 0x30u:
        char v144 = 0;
        unsigned int v145 = 0;
        uint64_t v71 = 0;
        *(_DWORD *)(a1 + 388) |= 8u;
        while (2)
        {
          uint64_t v146 = *v3;
          unint64_t v147 = *(void *)(a2 + v146);
          if (v147 == -1 || v147 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v148 = *(unsigned char *)(*(void *)(a2 + *v7) + v147);
            *(void *)(a2 + v146) = v147 + 1;
            v71 |= (unint64_t)(v148 & 0x7F) << v144;
            if (v148 < 0)
            {
              v144 += 7;
              BOOL v14 = v145++ >= 9;
              if (v14)
              {
                uint64_t v71 = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v71 = 0;
        }
LABEL_341:
        uint64_t v168 = 32;
        goto LABEL_350;
      case 0x31u:
        char v149 = 0;
        unsigned int v150 = 0;
        uint64_t v71 = 0;
        *(_DWORD *)(a1 + 388) |= 1u;
        while (2)
        {
          uint64_t v151 = *v3;
          unint64_t v152 = *(void *)(a2 + v151);
          if (v152 == -1 || v152 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v153 = *(unsigned char *)(*(void *)(a2 + *v7) + v152);
            *(void *)(a2 + v151) = v152 + 1;
            v71 |= (unint64_t)(v153 & 0x7F) << v149;
            if (v153 < 0)
            {
              v149 += 7;
              BOOL v14 = v150++ >= 9;
              if (v14)
              {
                uint64_t v71 = 0;
                goto LABEL_345;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v71 = 0;
        }
LABEL_345:
        uint64_t v168 = 8;
        goto LABEL_350;
      case 0x32u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 184;
        goto LABEL_229;
      case 0x33u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 200;
        goto LABEL_229;
      case 0x34u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 176;
        goto LABEL_229;
      case 0x35u:
        char v154 = 0;
        unsigned int v155 = 0;
        uint64_t v71 = 0;
        *(_DWORD *)(a1 + 388) |= 4u;
        while (2)
        {
          uint64_t v156 = *v3;
          unint64_t v157 = *(void *)(a2 + v156);
          if (v157 == -1 || v157 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v158 = *(unsigned char *)(*(void *)(a2 + *v7) + v157);
            *(void *)(a2 + v156) = v157 + 1;
            v71 |= (unint64_t)(v158 & 0x7F) << v154;
            if (v158 < 0)
            {
              v154 += 7;
              BOOL v14 = v155++ >= 9;
              if (v14)
              {
                uint64_t v71 = 0;
                goto LABEL_349;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v71 = 0;
        }
LABEL_349:
        uint64_t v168 = 24;
LABEL_350:
        *(void *)(a1 + v168) = v71;
        goto LABEL_356;
      case 0x36u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 192;
        goto LABEL_229;
      case 0x37u:
        uint64_t v23 = PBReaderReadData();
        uint64_t v24 = 168;
LABEL_229:
        uint64_t v159 = *(void **)(a1 + v24);
        *(void *)(a1 + v24) = v23;

        goto LABEL_356;
      case 0x38u:
        unsigned int v47 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 208), v47);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v47, a2) & 1) == 0) {
          goto LABEL_358;
        }
        goto LABEL_245;
      case 0x39u:
        unsigned int v47 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 216), v47);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v47, a2) & 1) == 0) {
          goto LABEL_358;
        }
        goto LABEL_245;
      case 0x3Au:
        char v160 = 0;
        unsigned int v161 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x80u;
        while (2)
        {
          uint64_t v162 = *v3;
          unint64_t v163 = *(void *)(a2 + v162);
          if (v163 == -1 || v163 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v164 = *(unsigned char *)(*(void *)(a2 + *v7) + v163);
            *(void *)(a2 + v162) = v163 + 1;
            v19 |= (unint64_t)(v164 & 0x7F) << v160;
            if (v164 < 0)
            {
              v160 += 7;
              BOOL v14 = v161++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_354;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_354:
        uint64_t v165 = 108;
LABEL_355:
        *(_DWORD *)(a1 + v165) = v19;
        goto LABEL_356;
      case 0x3Bu:
        unsigned int v47 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 96), v47);
        if PBReaderPlaceMark() && (NTPBChannelDataReadFrom((uint64_t)v47, a2))
        {
LABEL_245:
          PBReaderRecallMark();
LABEL_246:

LABEL_356:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_358:

        return 0;
      case 0x3Cu:
        PBReaderReadString();
        unsigned int v47 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v47) {
          [(id)a1 addTopicIds:v47];
        }
        goto LABEL_246;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_356;
    }
  }
}

BOOL NTPBTodaySectionConfigFontReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if (!(v10 >> 3)) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = &OBJC_IVAR___NTPBTodaySectionConfigFont__urlString;
LABEL_22:
        uint64_t String = (void *)PBReaderReadString();

        *(void *)(a1 + *v17) = String;
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = &OBJC_IVAR___NTPBTodaySectionConfigFont__name;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBItemsTodaySectionSpecificConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v20 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_35:
        *(void *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3))
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
      else
      {
        char v17 = objc_alloc_init(NTPBTodaySectionConfigItem);
        [(id)a1 addItems:v17];

        if (!PBReaderPlaceMark() || (NTPBTodaySectionConfigItemReadFrom((uint64_t)v17, a2) & 1) == 0) {
          return 0;
        }
        PBReaderRecallMark();
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBReportConcernReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_114;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_116;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_114:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_116:
          uint64_t v84 = 112;
          goto LABEL_162;
        case 2u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 48;
          goto LABEL_105;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 132) |= 0x20u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v19 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_120:
          uint64_t v84 = 64;
          goto LABEL_162;
        case 4u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 56;
          goto LABEL_105;
        case 5u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 132) |= 0x40u;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_124;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_124:
          uint64_t v84 = 80;
          goto LABEL_162;
        case 6u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 72;
          goto LABEL_105;
        case 7u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v38 = 0;
          *(_WORD *)(a1 + 132) |= 2u;
          while (2)
          {
            uint64_t v39 = *v3;
            unint64_t v40 = *(void *)(a2 + v39);
            if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
              *(void *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_128;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
LABEL_128:
          uint64_t v85 = 16;
          goto LABEL_133;
        case 8u:
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v38 = 0;
          *(_WORD *)(a1 + 132) |= 1u;
          while (2)
          {
            uint64_t v44 = *v3;
            unint64_t v45 = *(void *)(a2 + v44);
            if (v45 == -1 || v45 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
              *(void *)(a2 + v44) = v45 + 1;
              v38 |= (unint64_t)(v46 & 0x7F) << v42;
              if (v46 < 0)
              {
                v42 += 7;
                BOOL v14 = v43++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_132;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
LABEL_132:
          uint64_t v85 = 8;
LABEL_133:
          *(void *)(a1 + v85) = v38;
          continue;
        case 9u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 32;
          goto LABEL_105;
        case 0xAu:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 132) |= 0x10u;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v19 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                BOOL v14 = v48++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_137;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_137:
          uint64_t v84 = 40;
          goto LABEL_162;
        case 0xBu:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 132) |= 0x80u;
          while (2)
          {
            uint64_t v54 = *v3;
            unint64_t v55 = *(void *)(a2 + v54);
            if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v55 + 1;
              v19 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                BOOL v14 = v53++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_141;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_141:
          uint64_t v84 = 84;
          goto LABEL_162;
        case 0xCu:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 132) |= 4u;
          while (2)
          {
            uint64_t v59 = *v3;
            unint64_t v60 = *(void *)(a2 + v59);
            if (v60 == -1 || v60 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
              *(void *)(a2 + v59) = v60 + 1;
              v19 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                BOOL v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_145:
          uint64_t v84 = 24;
          goto LABEL_162;
        case 0xDu:
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 132) |= 8u;
          while (2)
          {
            uint64_t v64 = *v3;
            unint64_t v65 = *(void *)(a2 + v64);
            if (v65 == -1 || v65 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v66 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
              *(void *)(a2 + v64) = v65 + 1;
              v19 |= (unint64_t)(v66 & 0x7F) << v62;
              if (v66 < 0)
              {
                v62 += 7;
                BOOL v14 = v63++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_149:
          uint64_t v84 = 28;
          goto LABEL_162;
        case 0xEu:
          char v67 = 0;
          unsigned int v68 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 132) |= 0x100u;
          while (2)
          {
            uint64_t v69 = *v3;
            unint64_t v70 = *(void *)(a2 + v69);
            if (v70 == -1 || v70 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v70);
              *(void *)(a2 + v69) = v70 + 1;
              v19 |= (unint64_t)(v71 & 0x7F) << v67;
              if (v71 < 0)
              {
                v67 += 7;
                BOOL v14 = v68++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_153:
          uint64_t v84 = 96;
          goto LABEL_162;
        case 0xFu:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 88;
          goto LABEL_105;
        case 0x10u:
          char v72 = 0;
          unsigned int v73 = 0;
          uint64_t v74 = 0;
          *(_WORD *)(a1 + 132) |= 0x400u;
          while (2)
          {
            uint64_t v75 = *v3;
            unint64_t v76 = *(void *)(a2 + v75);
            if (v76 == -1 || v76 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
              *(void *)(a2 + v75) = v76 + 1;
              v74 |= (unint64_t)(v77 & 0x7F) << v72;
              if (v77 < 0)
              {
                v72 += 7;
                BOOL v14 = v73++ >= 9;
                if (v14)
                {
                  uint64_t v74 = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v74 = 0;
          }
LABEL_157:
          *(unsigned char *)(a1 + 128) = v74 != 0;
          continue;
        case 0x11u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 104;
          goto LABEL_105;
        case 0x12u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 120;
LABEL_105:
          uint64_t v78 = *(void **)(a1 + v25);
          *(void *)(a1 + v25) = v24;

          continue;
        case 0x13u:
          char v79 = 0;
          unsigned int v80 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 132) |= 0x200u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v81 = *v3;
        unint64_t v82 = *(void *)(a2 + v81);
        if (v82 == -1 || v82 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v83 = *(unsigned char *)(*(void *)(a2 + *v7) + v82);
        *(void *)(a2 + v81) = v82 + 1;
        v19 |= (unint64_t)(v83 & 0x7F) << v79;
        if ((v83 & 0x80) == 0) {
          goto LABEL_159;
        }
        v79 += 7;
        BOOL v14 = v80++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_161;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_159:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_161:
      uint64_t v84 = 100;
LABEL_162:
      *(_DWORD *)(a1 + v84) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBIssueExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unsigned int v18 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 128), v18);
        if PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v18, a2)) {
          goto LABEL_69;
        }
        goto LABEL_153;
      case 2u:
        unsigned int v18 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 136), v18);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v18, a2) & 1) == 0) {
          goto LABEL_153;
        }
        goto LABEL_69;
      case 3u:
        unsigned int v18 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 96), v18);
        if (!PBReaderPlaceMark() || (NTPBChannelDataReadFrom((uint64_t)v18, a2) & 1) == 0) {
          goto LABEL_153;
        }
        goto LABEL_69;
      case 4u:
        uint64_t v20 = PBReaderReadString();
        uint64_t v21 = 168;
        goto LABEL_105;
      case 5u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        *(_WORD *)(a1 + 188) |= 0x2000u;
        while (2)
        {
          uint64_t v25 = *v3;
          uint64_t v26 = *(void *)(a2 + v25);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
            *(void *)(a2 + v25) = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              BOOL v15 = v23++ >= 9;
              if (v15)
              {
                LODWORD(v24) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v24) = 0;
        }
LABEL_109:
        uint64_t v79 = 160;
        goto LABEL_118;
      case 6u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v24 = 0;
        *(_WORD *)(a1 + 188) |= 0x1000u;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v24 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              BOOL v15 = v30++ >= 9;
              if (v15)
              {
                LODWORD(v24) = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v24) = 0;
        }
LABEL_113:
        uint64_t v79 = 120;
        goto LABEL_118;
      case 7u:
        uint64_t v20 = PBReaderReadString();
        uint64_t v21 = 152;
        goto LABEL_105;
      case 8u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v24 = 0;
        *(_WORD *)(a1 + 188) |= 0x800u;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v24 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              BOOL v15 = v36++ >= 9;
              if (v15)
              {
                LODWORD(v24) = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v24) = 0;
        }
LABEL_117:
        uint64_t v79 = 104;
LABEL_118:
        *(_DWORD *)(a1 + v79) = v24;
        goto LABEL_151;
      case 9u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + 188) |= 0x4000u;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
LABEL_122:
        BOOL v80 = v43 != 0;
        uint64_t v81 = 184;
        goto LABEL_127;
      case 0xAu:
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(_WORD *)(a1 + 188) |= 0x8000u;
        while (2)
        {
          uint64_t v51 = *v3;
          uint64_t v52 = *(void *)(a2 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
            *(void *)(a2 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v15 = v49++ >= 9;
              if (v15)
              {
                uint64_t v50 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v50 = 0;
        }
LABEL_126:
        BOOL v80 = v50 != 0;
        uint64_t v81 = 185;
LABEL_127:
        *(unsigned char *)(a1 + v81) = v80;
        goto LABEL_151;
      case 0xBu:
        unsigned int v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        [(id)a1 addFractionalCohortMembership:v18];
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v18, a2) & 1) != 0)
        {
LABEL_69:
          PBReaderRecallMark();

LABEL_151:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_153:

        return 0;
      case 0xCu:
        *(_WORD *)(a1 + 188) |= 0x100u;
        uint64_t v55 = *v3;
        unint64_t v56 = *(void *)(a2 + v55);
        if (v56 <= 0xFFFFFFFFFFFFFFF7 && v56 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v57 = *(void *)(*(void *)(a2 + *v7) + v56);
          *(void *)(a2 + v55) = v56 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v57 = 0;
        }
        uint64_t v82 = 72;
        goto LABEL_150;
      case 0xDu:
        *(_WORD *)(a1 + 188) |= 0x20u;
        uint64_t v58 = *v3;
        unint64_t v59 = *(void *)(a2 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFF7 && v59 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v57 = *(void *)(*(void *)(a2 + *v7) + v59);
          *(void *)(a2 + v58) = v59 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v57 = 0;
        }
        uint64_t v82 = 48;
        goto LABEL_150;
      case 0xEu:
        *(_WORD *)(a1 + 188) |= 0x80u;
        uint64_t v60 = *v3;
        unint64_t v61 = *(void *)(a2 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFF7 && v61 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v57 = *(void *)(*(void *)(a2 + *v7) + v61);
          *(void *)(a2 + v60) = v61 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v57 = 0;
        }
        uint64_t v82 = 64;
        goto LABEL_150;
      case 0xFu:
        *(_WORD *)(a1 + 188) |= 4u;
        uint64_t v62 = *v3;
        unint64_t v63 = *(void *)(a2 + v62);
        if (v63 <= 0xFFFFFFFFFFFFFFF7 && v63 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v57 = *(void *)(*(void *)(a2 + *v7) + v63);
          *(void *)(a2 + v62) = v63 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v57 = 0;
        }
        uint64_t v82 = 24;
        goto LABEL_150;
      case 0x10u:
        *(_WORD *)(a1 + 188) |= 8u;
        uint64_t v64 = *v3;
        unint64_t v65 = *(void *)(a2 + v64);
        if (v65 <= 0xFFFFFFFFFFFFFFF7 && v65 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v57 = *(void *)(*(void *)(a2 + *v7) + v65);
          *(void *)(a2 + v64) = v65 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v57 = 0;
        }
        uint64_t v82 = 32;
        goto LABEL_150;
      case 0x11u:
        *(_WORD *)(a1 + 188) |= 0x40u;
        uint64_t v66 = *v3;
        unint64_t v67 = *(void *)(a2 + v66);
        if (v67 <= 0xFFFFFFFFFFFFFFF7 && v67 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v57 = *(void *)(*(void *)(a2 + *v7) + v67);
          *(void *)(a2 + v66) = v67 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v57 = 0;
        }
        uint64_t v82 = 56;
        goto LABEL_150;
      case 0x12u:
        *(_WORD *)(a1 + 188) |= 0x400u;
        uint64_t v68 = *v3;
        unint64_t v69 = *(void *)(a2 + v68);
        if (v69 <= 0xFFFFFFFFFFFFFFF7 && v69 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v57 = *(void *)(*(void *)(a2 + *v7) + v69);
          *(void *)(a2 + v68) = v69 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v57 = 0;
        }
        uint64_t v82 = 88;
        goto LABEL_150;
      case 0x13u:
        *(_WORD *)(a1 + 188) |= 2u;
        uint64_t v70 = *v3;
        unint64_t v71 = *(void *)(a2 + v70);
        if (v71 <= 0xFFFFFFFFFFFFFFF7 && v71 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v57 = *(void *)(*(void *)(a2 + *v7) + v71);
          *(void *)(a2 + v70) = v71 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v57 = 0;
        }
        uint64_t v82 = 16;
        goto LABEL_150;
      case 0x14u:
        *(_WORD *)(a1 + 188) |= 1u;
        uint64_t v72 = *v3;
        unint64_t v73 = *(void *)(a2 + v72);
        if (v73 <= 0xFFFFFFFFFFFFFFF7 && v73 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v57 = *(void *)(*(void *)(a2 + *v7) + v73);
          *(void *)(a2 + v72) = v73 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v57 = 0;
        }
        uint64_t v82 = 8;
        goto LABEL_150;
      case 0x15u:
        *(_WORD *)(a1 + 188) |= 0x10u;
        uint64_t v74 = *v3;
        unint64_t v75 = *(void *)(a2 + v74);
        if (v75 <= 0xFFFFFFFFFFFFFFF7 && v75 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v57 = *(void *)(*(void *)(a2 + *v7) + v75);
          *(void *)(a2 + v74) = v75 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v57 = 0;
        }
        uint64_t v82 = 40;
        goto LABEL_150;
      case 0x16u:
        *(_WORD *)(a1 + 188) |= 0x200u;
        uint64_t v76 = *v3;
        unint64_t v77 = *(void *)(a2 + v76);
        if (v77 <= 0xFFFFFFFFFFFFFFF7 && v77 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v57 = *(void *)(*(void *)(a2 + *v7) + v77);
          *(void *)(a2 + v76) = v77 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v57 = 0;
        }
        uint64_t v82 = 80;
LABEL_150:
        *(void *)(a1 + v82) = v57;
        goto LABEL_151;
      case 0x17u:
        uint64_t v20 = PBReaderReadString();
        uint64_t v21 = 144;
        goto LABEL_105;
      case 0x18u:
        uint64_t v20 = PBReaderReadString();
        uint64_t v21 = 176;
LABEL_105:
        uint64_t v78 = *(void **)(a1 + v21);
        *(void *)(a1 + v21) = v20;

        goto LABEL_151;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_151;
    }
  }
}

uint64_t NTPBPersonalizationProfileReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1)
      {
        unsigned int v18 = objc_alloc_init(NTPBPersonalizationInstanceHistory);
        [a1 addHistories:v18];

        if (!PBReaderPlaceMark()
          || (NTPBPersonalizationInstanceHistoryReadFrom((uint64_t)v18, a2) & 1) == 0)
        {
          return 0;
        }
      }
      else
      {
        if ((v10 >> 3))
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        char v17 = objc_alloc_init(NTPBPersonalizationAggregate);
        [a1 addAggregates:v17];

        if (!PBReaderPlaceMark() || (NTPBPersonalizationAggregateReadFrom((uint64_t)v17, a2) & 1) == 0) {
          return 0;
        }
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBExternalAnalyticsQueryParameterConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 8;
LABEL_22:
        uint64_t v19 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadString();
    uint64_t v18 = 16;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBTopStoriesStyleConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
          goto LABEL_25;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 24;
          goto LABEL_25;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_25;
        case 4u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
LABEL_25:
          uint64_t v19 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          goto LABEL_26;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_26:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v21 = *v3;
        unint64_t v22 = *(void *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(void *)(a2 + *v4))
        {
          int v23 = *(_DWORD *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          int v23 = 0;
        }
        *(_DWORD *)(a1 + 8) = v23;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBSessionReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          uint64_t v12 = *(void *)(a2 + v11);
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        int v17 = v10 & 7;
        if (!v16 && v17 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 26;
              goto LABEL_380;
            case 2u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 27;
              goto LABEL_380;
            case 3u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 39;
              goto LABEL_380;
            case 4u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 17;
              goto LABEL_380;
            case 5u:
              char v22 = 0;
              unsigned int v23 = 0;
              uint64_t v24 = 0;
              a1[61] |= 1uLL;
              while (2)
              {
                uint64_t v25 = *v3;
                uint64_t v26 = *(void *)(a2 + v25);
                unint64_t v27 = v26 + 1;
                if (v26 == -1 || v27 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
                  *(void *)(a2 + v25) = v27;
                  v24 |= (unint64_t)(v28 & 0x7F) << v22;
                  if (v28 < 0)
                  {
                    v22 += 7;
                    BOOL v15 = v23++ >= 9;
                    if (v15)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_392;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v24 = 0;
              }
LABEL_392:
              uint64_t v323 = 7;
              goto LABEL_517;
            case 6u:
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x100000uLL;
              while (2)
              {
                uint64_t v32 = *v3;
                uint64_t v33 = *(void *)(a2 + v32);
                unint64_t v34 = v33 + 1;
                if (v33 == -1 || v34 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
                  *(void *)(a2 + v32) = v34;
                  v31 |= (unint64_t)(v35 & 0x7F) << v29;
                  if (v35 < 0)
                  {
                    v29 += 7;
                    BOOL v15 = v30++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_396;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_396:
              uint64_t v324 = 416;
              goto LABEL_559;
            case 7u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 25;
              goto LABEL_380;
            case 8u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 31;
              goto LABEL_380;
            case 9u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 21;
              goto LABEL_380;
            case 0xAu:
              char v36 = 0;
              unsigned int v37 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x40000uLL;
              while (2)
              {
                uint64_t v38 = *v3;
                uint64_t v39 = *(void *)(a2 + v38);
                unint64_t v40 = v39 + 1;
                if (v39 == -1 || v40 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
                  *(void *)(a2 + v38) = v40;
                  v31 |= (unint64_t)(v41 & 0x7F) << v36;
                  if (v41 < 0)
                  {
                    v36 += 7;
                    BOOL v15 = v37++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_400;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_400:
              uint64_t v324 = 360;
              goto LABEL_559;
            case 0xBu:
              char v42 = 0;
              unsigned int v43 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x100uLL;
              while (2)
              {
                uint64_t v44 = *v3;
                uint64_t v45 = *(void *)(a2 + v44);
                unint64_t v46 = v45 + 1;
                if (v45 == -1 || v46 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
                  *(void *)(a2 + v44) = v46;
                  v31 |= (unint64_t)(v47 & 0x7F) << v42;
                  if (v47 < 0)
                  {
                    v42 += 7;
                    BOOL v15 = v43++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_404;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_404:
              uint64_t v324 = 176;
              goto LABEL_559;
            case 0xCu:
              char v48 = 0;
              unsigned int v49 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x80000uLL;
              while (2)
              {
                uint64_t v50 = *v3;
                uint64_t v51 = *(void *)(a2 + v50);
                unint64_t v52 = v51 + 1;
                if (v51 == -1 || v52 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
                  *(void *)(a2 + v50) = v52;
                  v31 |= (unint64_t)(v53 & 0x7F) << v48;
                  if (v53 < 0)
                  {
                    v48 += 7;
                    BOOL v15 = v49++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_408;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_408:
              uint64_t v324 = 392;
              goto LABEL_559;
            case 0xDu:
              uint64_t v19 = PBReaderReadData();
              uint64_t v20 = 47;
              goto LABEL_380;
            case 0xEu:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 50;
              goto LABEL_380;
            case 0xFu:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 51;
              goto LABEL_380;
            case 0x10u:
              char v54 = 0;
              unsigned int v55 = 0;
              uint64_t v56 = 0;
              a1[61] |= 0x80000000uLL;
              while (2)
              {
                uint64_t v57 = *v3;
                uint64_t v58 = *(void *)(a2 + v57);
                unint64_t v59 = v58 + 1;
                if (v58 == -1 || v59 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v60 = *(unsigned char *)(*(void *)(a2 + *v7) + v58);
                  *(void *)(a2 + v57) = v59;
                  v56 |= (unint64_t)(v60 & 0x7F) << v54;
                  if (v60 < 0)
                  {
                    v54 += 7;
                    BOOL v15 = v55++ >= 9;
                    if (v15)
                    {
                      uint64_t v56 = 0;
                      goto LABEL_412;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v56 = 0;
              }
LABEL_412:
              BOOL v325 = v56 != 0;
              uint64_t v326 = 471;
              goto LABEL_554;
            case 0x11u:
              char v61 = 0;
              unsigned int v62 = 0;
              uint64_t v24 = 0;
              a1[61] |= 0x10uLL;
              while (2)
              {
                uint64_t v63 = *v3;
                uint64_t v64 = *(void *)(a2 + v63);
                unint64_t v65 = v64 + 1;
                if (v64 == -1 || v65 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v66 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
                  *(void *)(a2 + v63) = v65;
                  v24 |= (unint64_t)(v66 & 0x7F) << v61;
                  if (v66 < 0)
                  {
                    v61 += 7;
                    BOOL v15 = v62++ >= 9;
                    if (v15)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_416;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v24 = 0;
              }
LABEL_416:
              uint64_t v323 = 11;
              goto LABEL_517;
            case 0x12u:
              char v67 = 0;
              unsigned int v68 = 0;
              uint64_t v24 = 0;
              a1[61] |= 4uLL;
              while (2)
              {
                uint64_t v69 = *v3;
                uint64_t v70 = *(void *)(a2 + v69);
                unint64_t v71 = v70 + 1;
                if (v70 == -1 || v71 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v70);
                  *(void *)(a2 + v69) = v71;
                  v24 |= (unint64_t)(v72 & 0x7F) << v67;
                  if (v72 < 0)
                  {
                    v67 += 7;
                    BOOL v15 = v68++ >= 9;
                    if (v15)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_420;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v24 = 0;
              }
LABEL_420:
              uint64_t v323 = 9;
              goto LABEL_517;
            case 0x13u:
              char v73 = 0;
              unsigned int v74 = 0;
              uint64_t v75 = 0;
              a1[61] |= 0x40000000000uLL;
              while (2)
              {
                uint64_t v76 = *v3;
                uint64_t v77 = *(void *)(a2 + v76);
                unint64_t v78 = v77 + 1;
                if (v77 == -1 || v78 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
                  *(void *)(a2 + v76) = v78;
                  v75 |= (unint64_t)(v79 & 0x7F) << v73;
                  if (v79 < 0)
                  {
                    v73 += 7;
                    BOOL v15 = v74++ >= 9;
                    if (v15)
                    {
                      uint64_t v75 = 0;
                      goto LABEL_424;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v75 = 0;
              }
LABEL_424:
              BOOL v325 = v75 != 0;
              uint64_t v326 = 482;
              goto LABEL_554;
            case 0x14u:
              char v80 = 0;
              unsigned int v81 = 0;
              uint64_t v82 = 0;
              a1[61] |= 0x200000000000uLL;
              while (2)
              {
                uint64_t v83 = *v3;
                uint64_t v84 = *(void *)(a2 + v83);
                unint64_t v85 = v84 + 1;
                if (v84 == -1 || v85 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v86 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
                  *(void *)(a2 + v83) = v85;
                  v82 |= (unint64_t)(v86 & 0x7F) << v80;
                  if (v86 < 0)
                  {
                    v80 += 7;
                    BOOL v15 = v81++ >= 9;
                    if (v15)
                    {
                      uint64_t v82 = 0;
                      goto LABEL_428;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v82 = 0;
              }
LABEL_428:
              BOOL v325 = v82 != 0;
              uint64_t v326 = 485;
              goto LABEL_554;
            case 0x15u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 42;
              goto LABEL_380;
            case 0x16u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 43;
              goto LABEL_380;
            case 0x17u:
              char v87 = 0;
              unsigned int v88 = 0;
              uint64_t v89 = 0;
              a1[61] |= 0x100000000000uLL;
              while (2)
              {
                uint64_t v90 = *v3;
                uint64_t v91 = *(void *)(a2 + v90);
                unint64_t v92 = v91 + 1;
                if (v91 == -1 || v92 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v93 = *(unsigned char *)(*(void *)(a2 + *v7) + v91);
                  *(void *)(a2 + v90) = v92;
                  v89 |= (unint64_t)(v93 & 0x7F) << v87;
                  if (v93 < 0)
                  {
                    v87 += 7;
                    BOOL v15 = v88++ >= 9;
                    if (v15)
                    {
                      uint64_t v89 = 0;
                      goto LABEL_432;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v89 = 0;
              }
LABEL_432:
              BOOL v325 = v89 != 0;
              uint64_t v326 = 484;
              goto LABEL_554;
            case 0x18u:
              char v94 = 0;
              unsigned int v95 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x10000uLL;
              while (2)
              {
                uint64_t v96 = *v3;
                uint64_t v97 = *(void *)(a2 + v96);
                unint64_t v98 = v97 + 1;
                if (v97 == -1 || v98 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v99 = *(unsigned char *)(*(void *)(a2 + *v7) + v97);
                  *(void *)(a2 + v96) = v98;
                  v31 |= (unint64_t)(v99 & 0x7F) << v94;
                  if (v99 < 0)
                  {
                    v94 += 7;
                    BOOL v15 = v95++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_436;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_436:
              uint64_t v324 = 304;
              goto LABEL_559;
            case 0x19u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 19;
              goto LABEL_380;
            case 0x1Au:
              char v100 = 0;
              unsigned int v101 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x80uLL;
              while (2)
              {
                uint64_t v102 = *v3;
                uint64_t v103 = *(void *)(a2 + v102);
                unint64_t v104 = v103 + 1;
                if (v103 == -1 || v104 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v105 = *(unsigned char *)(*(void *)(a2 + *v7) + v103);
                  *(void *)(a2 + v102) = v104;
                  v31 |= (unint64_t)(v105 & 0x7F) << v100;
                  if (v105 < 0)
                  {
                    v100 += 7;
                    BOOL v15 = v101++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_440;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_440:
              uint64_t v324 = 160;
              goto LABEL_559;
            case 0x1Bu:
              char v106 = 0;
              unsigned int v107 = 0;
              uint64_t v108 = 0;
              a1[61] |= 0x10000000000uLL;
              while (2)
              {
                uint64_t v109 = *v3;
                uint64_t v110 = *(void *)(a2 + v109);
                unint64_t v111 = v110 + 1;
                if (v110 == -1 || v111 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v112 = *(unsigned char *)(*(void *)(a2 + *v7) + v110);
                  *(void *)(a2 + v109) = v111;
                  v108 |= (unint64_t)(v112 & 0x7F) << v106;
                  if (v112 < 0)
                  {
                    v106 += 7;
                    BOOL v15 = v107++ >= 9;
                    if (v15)
                    {
                      uint64_t v108 = 0;
                      goto LABEL_444;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v108 = 0;
              }
LABEL_444:
              BOOL v325 = v108 != 0;
              uint64_t v326 = 480;
              goto LABEL_554;
            case 0x1Cu:
              char v113 = 0;
              unsigned int v114 = 0;
              uint64_t v115 = 0;
              a1[61] |= 0x100000000uLL;
              while (2)
              {
                uint64_t v116 = *v3;
                uint64_t v117 = *(void *)(a2 + v116);
                unint64_t v118 = v117 + 1;
                if (v117 == -1 || v118 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v119 = *(unsigned char *)(*(void *)(a2 + *v7) + v117);
                  *(void *)(a2 + v116) = v118;
                  v115 |= (unint64_t)(v119 & 0x7F) << v113;
                  if (v119 < 0)
                  {
                    v113 += 7;
                    BOOL v15 = v114++ >= 9;
                    if (v15)
                    {
                      uint64_t v115 = 0;
                      goto LABEL_448;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v115 = 0;
              }
LABEL_448:
              BOOL v325 = v115 != 0;
              uint64_t v326 = 472;
              goto LABEL_554;
            case 0x1Du:
              char v120 = 0;
              unsigned int v121 = 0;
              uint64_t v122 = 0;
              a1[61] |= 0x400000000uLL;
              while (2)
              {
                uint64_t v123 = *v3;
                uint64_t v124 = *(void *)(a2 + v123);
                unint64_t v125 = v124 + 1;
                if (v124 == -1 || v125 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v126 = *(unsigned char *)(*(void *)(a2 + *v7) + v124);
                  *(void *)(a2 + v123) = v125;
                  v122 |= (unint64_t)(v126 & 0x7F) << v120;
                  if (v126 < 0)
                  {
                    v120 += 7;
                    BOOL v15 = v121++ >= 9;
                    if (v15)
                    {
                      uint64_t v122 = 0;
                      goto LABEL_452;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v122 = 0;
              }
LABEL_452:
              BOOL v325 = v122 != 0;
              uint64_t v326 = 474;
              goto LABEL_554;
            case 0x1Eu:
              char v127 = 0;
              unsigned int v128 = 0;
              uint64_t v129 = 0;
              a1[61] |= 0x200000000uLL;
              while (2)
              {
                uint64_t v130 = *v3;
                uint64_t v131 = *(void *)(a2 + v130);
                unint64_t v132 = v131 + 1;
                if (v131 == -1 || v132 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v133 = *(unsigned char *)(*(void *)(a2 + *v7) + v131);
                  *(void *)(a2 + v130) = v132;
                  v129 |= (unint64_t)(v133 & 0x7F) << v127;
                  if (v133 < 0)
                  {
                    v127 += 7;
                    BOOL v15 = v128++ >= 9;
                    if (v15)
                    {
                      uint64_t v129 = 0;
                      goto LABEL_456;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v129 = 0;
              }
LABEL_456:
              BOOL v325 = v129 != 0;
              uint64_t v326 = 473;
              goto LABEL_554;
            case 0x1Fu:
              char v134 = 0;
              unsigned int v135 = 0;
              uint64_t v136 = 0;
              a1[61] |= 0x800000000uLL;
              while (2)
              {
                uint64_t v137 = *v3;
                uint64_t v138 = *(void *)(a2 + v137);
                unint64_t v139 = v138 + 1;
                if (v138 == -1 || v139 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v140 = *(unsigned char *)(*(void *)(a2 + *v7) + v138);
                  *(void *)(a2 + v137) = v139;
                  v136 |= (unint64_t)(v140 & 0x7F) << v134;
                  if (v140 < 0)
                  {
                    v134 += 7;
                    BOOL v15 = v135++ >= 9;
                    if (v15)
                    {
                      uint64_t v136 = 0;
                      goto LABEL_460;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v136 = 0;
              }
LABEL_460:
              BOOL v325 = v136 != 0;
              uint64_t v326 = 475;
              goto LABEL_554;
            case 0x20u:
              char v141 = 0;
              unsigned int v142 = 0;
              uint64_t v143 = 0;
              a1[61] |= 0x4000000000uLL;
              while (2)
              {
                uint64_t v144 = *v3;
                uint64_t v145 = *(void *)(a2 + v144);
                unint64_t v146 = v145 + 1;
                if (v145 == -1 || v146 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v147 = *(unsigned char *)(*(void *)(a2 + *v7) + v145);
                  *(void *)(a2 + v144) = v146;
                  v143 |= (unint64_t)(v147 & 0x7F) << v141;
                  if (v147 < 0)
                  {
                    v141 += 7;
                    BOOL v15 = v142++ >= 9;
                    if (v15)
                    {
                      uint64_t v143 = 0;
                      goto LABEL_464;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v143 = 0;
              }
LABEL_464:
              BOOL v325 = v143 != 0;
              uint64_t v326 = 478;
              goto LABEL_554;
            case 0x21u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 35;
              goto LABEL_380;
            case 0x22u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 36;
              goto LABEL_380;
            case 0x23u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 37;
              goto LABEL_380;
            case 0x24u:
              char v148 = 0;
              unsigned int v149 = 0;
              uint64_t v150 = 0;
              a1[61] |= 0x2000000uLL;
              while (2)
              {
                uint64_t v151 = *v3;
                uint64_t v152 = *(void *)(a2 + v151);
                unint64_t v153 = v152 + 1;
                if (v152 == -1 || v153 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v154 = *(unsigned char *)(*(void *)(a2 + *v7) + v152);
                  *(void *)(a2 + v151) = v153;
                  v150 |= (unint64_t)(v154 & 0x7F) << v148;
                  if (v154 < 0)
                  {
                    v148 += 7;
                    BOOL v15 = v149++ >= 9;
                    if (v15)
                    {
                      uint64_t v150 = 0;
                      goto LABEL_468;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v150 = 0;
              }
LABEL_468:
              BOOL v325 = v150 != 0;
              uint64_t v326 = 465;
              goto LABEL_554;
            case 0x25u:
              char v155 = 0;
              unsigned int v156 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x800000uLL;
              while (2)
              {
                uint64_t v157 = *v3;
                uint64_t v158 = *(void *)(a2 + v157);
                unint64_t v159 = v158 + 1;
                if (v158 == -1 || v159 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v160 = *(unsigned char *)(*(void *)(a2 + *v7) + v158);
                  *(void *)(a2 + v157) = v159;
                  v31 |= (unint64_t)(v160 & 0x7F) << v155;
                  if (v160 < 0)
                  {
                    v155 += 7;
                    BOOL v15 = v156++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_472;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_472:
              uint64_t v324 = 440;
              goto LABEL_559;
            case 0x26u:
              char v161 = 0;
              unsigned int v162 = 0;
              uint64_t v163 = 0;
              a1[61] |= 0x2000000000uLL;
              while (2)
              {
                uint64_t v164 = *v3;
                uint64_t v165 = *(void *)(a2 + v164);
                unint64_t v166 = v165 + 1;
                if (v165 == -1 || v166 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v167 = *(unsigned char *)(*(void *)(a2 + *v7) + v165);
                  *(void *)(a2 + v164) = v166;
                  v163 |= (unint64_t)(v167 & 0x7F) << v161;
                  if (v167 < 0)
                  {
                    v161 += 7;
                    BOOL v15 = v162++ >= 9;
                    if (v15)
                    {
                      uint64_t v163 = 0;
                      goto LABEL_476;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v163 = 0;
              }
LABEL_476:
              BOOL v325 = v163 != 0;
              uint64_t v326 = 477;
              goto LABEL_554;
            case 0x27u:
              char v168 = 0;
              unsigned int v169 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x8000uLL;
              while (2)
              {
                uint64_t v170 = *v3;
                uint64_t v171 = *(void *)(a2 + v170);
                unint64_t v172 = v171 + 1;
                if (v171 == -1 || v172 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v173 = *(unsigned char *)(*(void *)(a2 + *v7) + v171);
                  *(void *)(a2 + v170) = v172;
                  v31 |= (unint64_t)(v173 & 0x7F) << v168;
                  if (v173 < 0)
                  {
                    v168 += 7;
                    BOOL v15 = v169++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_480;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_480:
              uint64_t v324 = 256;
              goto LABEL_559;
            case 0x28u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 33;
              goto LABEL_380;
            case 0x29u:
              char v174 = 0;
              unsigned int v175 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x20uLL;
              while (2)
              {
                uint64_t v176 = *v3;
                uint64_t v177 = *(void *)(a2 + v176);
                unint64_t v178 = v177 + 1;
                if (v177 == -1 || v178 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v179 = *(unsigned char *)(*(void *)(a2 + *v7) + v177);
                  *(void *)(a2 + v176) = v178;
                  v31 |= (unint64_t)(v179 & 0x7F) << v174;
                  if (v179 < 0)
                  {
                    v174 += 7;
                    BOOL v15 = v175++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_484;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_484:
              uint64_t v324 = 96;
              goto LABEL_559;
            case 0x2Au:
              a1[61] |= 0x40uLL;
              uint64_t v180 = *v3;
              unint64_t v181 = *(void *)(a2 + v180);
              if (v181 <= 0xFFFFFFFFFFFFFFFBLL && v181 + 4 <= *(void *)(a2 + *v4))
              {
                int v182 = *(_DWORD *)(*(void *)(a2 + *v7) + v181);
                *(void *)(a2 + v180) = v181 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                int v182 = 0;
              }
              uint64_t v341 = 100;
              goto LABEL_586;
            case 0x2Bu:
              char v183 = 0;
              unsigned int v184 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x800uLL;
              while (2)
              {
                uint64_t v185 = *v3;
                uint64_t v186 = *(void *)(a2 + v185);
                unint64_t v187 = v186 + 1;
                if (v186 == -1 || v187 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v188 = *(unsigned char *)(*(void *)(a2 + *v7) + v186);
                  *(void *)(a2 + v185) = v187;
                  v31 |= (unint64_t)(v188 & 0x7F) << v183;
                  if (v188 < 0)
                  {
                    v183 += 7;
                    BOOL v15 = v184++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_488;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_488:
              uint64_t v324 = 232;
              goto LABEL_559;
            case 0x2Cu:
              a1[61] |= 0x1000uLL;
              uint64_t v189 = *v3;
              unint64_t v190 = *(void *)(a2 + v189);
              if (v190 <= 0xFFFFFFFFFFFFFFFBLL && v190 + 4 <= *(void *)(a2 + *v4))
              {
                int v182 = *(_DWORD *)(*(void *)(a2 + *v7) + v190);
                *(void *)(a2 + v189) = v190 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                int v182 = 0;
              }
              uint64_t v341 = 236;
              goto LABEL_586;
            case 0x2Du:
              char v191 = 0;
              unsigned int v192 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x2000uLL;
              while (2)
              {
                uint64_t v193 = *v3;
                uint64_t v194 = *(void *)(a2 + v193);
                unint64_t v195 = v194 + 1;
                if (v194 == -1 || v195 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v196 = *(unsigned char *)(*(void *)(a2 + *v7) + v194);
                  *(void *)(a2 + v193) = v195;
                  v31 |= (unint64_t)(v196 & 0x7F) << v191;
                  if (v196 < 0)
                  {
                    v191 += 7;
                    BOOL v15 = v192++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_492;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_492:
              uint64_t v324 = 240;
              goto LABEL_559;
            case 0x2Eu:
              a1[61] |= 0x4000uLL;
              uint64_t v197 = *v3;
              unint64_t v198 = *(void *)(a2 + v197);
              if (v198 <= 0xFFFFFFFFFFFFFFFBLL && v198 + 4 <= *(void *)(a2 + *v4))
              {
                int v182 = *(_DWORD *)(*(void *)(a2 + *v7) + v198);
                *(void *)(a2 + v197) = v198 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                int v182 = 0;
              }
              uint64_t v341 = 244;
              goto LABEL_586;
            case 0x2Fu:
              char v199 = 0;
              unsigned int v200 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x200uLL;
              while (2)
              {
                uint64_t v201 = *v3;
                uint64_t v202 = *(void *)(a2 + v201);
                unint64_t v203 = v202 + 1;
                if (v202 == -1 || v203 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v204 = *(unsigned char *)(*(void *)(a2 + *v7) + v202);
                  *(void *)(a2 + v201) = v203;
                  v31 |= (unint64_t)(v204 & 0x7F) << v199;
                  if (v204 < 0)
                  {
                    v199 += 7;
                    BOOL v15 = v200++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_496;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_496:
              uint64_t v324 = 224;
              goto LABEL_559;
            case 0x30u:
              a1[61] |= 0x400uLL;
              uint64_t v205 = *v3;
              unint64_t v206 = *(void *)(a2 + v205);
              if (v206 <= 0xFFFFFFFFFFFFFFFBLL && v206 + 4 <= *(void *)(a2 + *v4))
              {
                int v182 = *(_DWORD *)(*(void *)(a2 + *v7) + v206);
                *(void *)(a2 + v205) = v206 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                int v182 = 0;
              }
              uint64_t v341 = 228;
LABEL_586:
              *(_DWORD *)((char *)a1 + v341) = v182;
              goto LABEL_587;
            case 0x31u:
              char v207 = 0;
              unsigned int v208 = 0;
              uint64_t v24 = 0;
              a1[61] |= 2uLL;
              while (2)
              {
                uint64_t v209 = *v3;
                uint64_t v210 = *(void *)(a2 + v209);
                unint64_t v211 = v210 + 1;
                if (v210 == -1 || v211 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v212 = *(unsigned char *)(*(void *)(a2 + *v7) + v210);
                  *(void *)(a2 + v209) = v211;
                  v24 |= (unint64_t)(v212 & 0x7F) << v207;
                  if (v212 < 0)
                  {
                    v207 += 7;
                    BOOL v15 = v208++ >= 9;
                    if (v15)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_500;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v24 = 0;
              }
LABEL_500:
              uint64_t v323 = 8;
              goto LABEL_517;
            case 0x32u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 23;
              goto LABEL_380;
            case 0x33u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 24;
              goto LABEL_380;
            case 0x34u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 18;
              goto LABEL_380;
            case 0x35u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 34;
              goto LABEL_380;
            case 0x36u:
              char v213 = 0;
              unsigned int v214 = 0;
              uint64_t v215 = 0;
              a1[61] |= 0x8000000000uLL;
              while (2)
              {
                uint64_t v216 = *v3;
                uint64_t v217 = *(void *)(a2 + v216);
                unint64_t v218 = v217 + 1;
                if (v217 == -1 || v218 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v219 = *(unsigned char *)(*(void *)(a2 + *v7) + v217);
                  *(void *)(a2 + v216) = v218;
                  v215 |= (unint64_t)(v219 & 0x7F) << v213;
                  if (v219 < 0)
                  {
                    v213 += 7;
                    BOOL v15 = v214++ >= 9;
                    if (v15)
                    {
                      uint64_t v215 = 0;
                      goto LABEL_504;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v215 = 0;
              }
LABEL_504:
              BOOL v325 = v215 != 0;
              uint64_t v326 = 479;
              goto LABEL_554;
            case 0x37u:
              char v220 = 0;
              unsigned int v221 = 0;
              uint64_t v222 = 0;
              a1[61] |= 0x20000000000uLL;
              while (2)
              {
                uint64_t v223 = *v3;
                uint64_t v224 = *(void *)(a2 + v223);
                unint64_t v225 = v224 + 1;
                if (v224 == -1 || v225 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v226 = *(unsigned char *)(*(void *)(a2 + *v7) + v224);
                  *(void *)(a2 + v223) = v225;
                  v222 |= (unint64_t)(v226 & 0x7F) << v220;
                  if (v226 < 0)
                  {
                    v220 += 7;
                    BOOL v15 = v221++ >= 9;
                    if (v15)
                    {
                      uint64_t v222 = 0;
                      goto LABEL_508;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v222 = 0;
              }
LABEL_508:
              BOOL v325 = v222 != 0;
              uint64_t v326 = 481;
              goto LABEL_554;
            case 0x38u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 53;
              goto LABEL_380;
            case 0x39u:
              uint64_t v19 = PBReaderReadData();
              uint64_t v20 = 48;
              goto LABEL_380;
            case 0x3Au:
              uint64_t v19 = PBReaderReadData();
              uint64_t v20 = 56;
              goto LABEL_380;
            case 0x3Bu:
              char v227 = 0;
              unsigned int v228 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x200000uLL;
              while (2)
              {
                uint64_t v229 = *v3;
                uint64_t v230 = *(void *)(a2 + v229);
                unint64_t v231 = v230 + 1;
                if (v230 == -1 || v231 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v232 = *(unsigned char *)(*(void *)(a2 + *v7) + v230);
                  *(void *)(a2 + v229) = v231;
                  v31 |= (unint64_t)(v232 & 0x7F) << v227;
                  if (v232 < 0)
                  {
                    v227 += 7;
                    BOOL v15 = v228++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_512;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_512:
              uint64_t v324 = 432;
              goto LABEL_559;
            case 0x3Cu:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 41;
              goto LABEL_380;
            case 0x3Du:
              uint64_t v19 = PBReaderReadData();
              uint64_t v20 = 16;
              goto LABEL_380;
            case 0x3Eu:
              char v233 = 0;
              unsigned int v234 = 0;
              uint64_t v24 = 0;
              a1[61] |= 8uLL;
              while (2)
              {
                uint64_t v235 = *v3;
                uint64_t v236 = *(void *)(a2 + v235);
                unint64_t v237 = v236 + 1;
                if (v236 == -1 || v237 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v238 = *(unsigned char *)(*(void *)(a2 + *v7) + v236);
                  *(void *)(a2 + v235) = v237;
                  v24 |= (unint64_t)(v238 & 0x7F) << v233;
                  if (v238 < 0)
                  {
                    v233 += 7;
                    BOOL v15 = v234++ >= 9;
                    if (v15)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_516;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v24 = 0;
              }
LABEL_516:
              uint64_t v323 = 10;
LABEL_517:
              a1[v323] = v24;
              goto LABEL_587;
            case 0x3Fu:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 57;
              goto LABEL_380;
            case 0x40u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 44;
              goto LABEL_380;
            case 0x41u:
              if (v17 != 2)
              {
                char v327 = 0;
                unsigned int v328 = 0;
                uint64_t v329 = 0;
                while (1)
                {
                  uint64_t v330 = *v3;
                  uint64_t v331 = *(void *)(a2 + v330);
                  unint64_t v332 = v331 + 1;
                  if (v331 == -1 || v332 > *(void *)(a2 + *v4)) {
                    break;
                  }
                  char v333 = *(unsigned char *)(*(void *)(a2 + *v7) + v331);
                  *(void *)(a2 + v330) = v332;
                  v329 |= (unint64_t)(v333 & 0x7F) << v327;
                  if (v333 < 0)
                  {
                    v327 += 7;
                    BOOL v15 = v328++ >= 9;
                    if (!v15) {
                      continue;
                    }
                  }
                  goto LABEL_575;
                }
                *(unsigned char *)(a2 + *v5) = 1;
LABEL_575:
                PBRepeatedInt64Add();
                goto LABEL_587;
              }
              uint64_t result = PBReaderPlaceMark();
              if (!result) {
                return result;
              }
              while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
              {
                char v239 = 0;
                unsigned int v240 = 0;
                uint64_t v241 = 0;
                while (1)
                {
                  uint64_t v242 = *v3;
                  uint64_t v243 = *(void *)(a2 + v242);
                  unint64_t v244 = v243 + 1;
                  if (v243 == -1 || v244 > *(void *)(a2 + *v4)) {
                    break;
                  }
                  char v245 = *(unsigned char *)(*(void *)(a2 + *v7) + v243);
                  *(void *)(a2 + v242) = v244;
                  v241 |= (unint64_t)(v245 & 0x7F) << v239;
                  if (v245 < 0)
                  {
                    v239 += 7;
                    BOOL v15 = v240++ >= 9;
                    if (!v15) {
                      continue;
                    }
                  }
                  goto LABEL_297;
                }
                *(unsigned char *)(a2 + *v5) = 1;
LABEL_297:
                PBRepeatedInt64Add();
              }
              goto LABEL_388;
            case 0x42u:
              if (v17 == 2)
              {
                uint64_t result = PBReaderPlaceMark();
                if (!result) {
                  return result;
                }
                while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
                {
                  char v246 = 0;
                  unsigned int v247 = 0;
                  uint64_t v248 = 0;
                  while (1)
                  {
                    uint64_t v249 = *v3;
                    uint64_t v250 = *(void *)(a2 + v249);
                    unint64_t v251 = v250 + 1;
                    if (v250 == -1 || v251 > *(void *)(a2 + *v4)) {
                      break;
                    }
                    char v252 = *(unsigned char *)(*(void *)(a2 + *v7) + v250);
                    *(void *)(a2 + v249) = v251;
                    v248 |= (unint64_t)(v252 & 0x7F) << v246;
                    if (v252 < 0)
                    {
                      v246 += 7;
                      BOOL v15 = v247++ >= 9;
                      if (!v15) {
                        continue;
                      }
                    }
                    goto LABEL_310;
                  }
                  *(unsigned char *)(a2 + *v5) = 1;
LABEL_310:
                  PBRepeatedInt32Add();
                }
LABEL_388:
                PBReaderRecallMark();
              }
              else
              {
                char v334 = 0;
                unsigned int v335 = 0;
                uint64_t v336 = 0;
                while (1)
                {
                  uint64_t v337 = *v3;
                  uint64_t v338 = *(void *)(a2 + v337);
                  unint64_t v339 = v338 + 1;
                  if (v338 == -1 || v339 > *(void *)(a2 + *v4)) {
                    break;
                  }
                  char v340 = *(unsigned char *)(*(void *)(a2 + *v7) + v338);
                  *(void *)(a2 + v337) = v339;
                  v336 |= (unint64_t)(v340 & 0x7F) << v334;
                  if (v340 < 0)
                  {
                    v334 += 7;
                    BOOL v15 = v335++ >= 9;
                    if (!v15) {
                      continue;
                    }
                  }
                  goto LABEL_577;
                }
                *(unsigned char *)(a2 + *v5) = 1;
LABEL_577:
                PBRepeatedInt32Add();
              }
LABEL_587:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
            case 0x43u:
              char v253 = 0;
              unsigned int v254 = 0;
              uint64_t v255 = 0;
              a1[61] |= 0x20000000uLL;
              while (2)
              {
                uint64_t v256 = *v3;
                uint64_t v257 = *(void *)(a2 + v256);
                unint64_t v258 = v257 + 1;
                if (v257 == -1 || v258 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v259 = *(unsigned char *)(*(void *)(a2 + *v7) + v257);
                  *(void *)(a2 + v256) = v258;
                  v255 |= (unint64_t)(v259 & 0x7F) << v253;
                  if (v259 < 0)
                  {
                    v253 += 7;
                    BOOL v15 = v254++ >= 9;
                    if (v15)
                    {
                      uint64_t v255 = 0;
                      goto LABEL_521;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v255 = 0;
              }
LABEL_521:
              BOOL v325 = v255 != 0;
              uint64_t v326 = 469;
              goto LABEL_554;
            case 0x44u:
              char v260 = 0;
              unsigned int v261 = 0;
              uint64_t v262 = 0;
              a1[61] |= 0x1000000uLL;
              while (2)
              {
                uint64_t v263 = *v3;
                uint64_t v264 = *(void *)(a2 + v263);
                unint64_t v265 = v264 + 1;
                if (v264 == -1 || v265 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v266 = *(unsigned char *)(*(void *)(a2 + *v7) + v264);
                  *(void *)(a2 + v263) = v265;
                  v262 |= (unint64_t)(v266 & 0x7F) << v260;
                  if (v266 < 0)
                  {
                    v260 += 7;
                    BOOL v15 = v261++ >= 9;
                    if (v15)
                    {
                      uint64_t v262 = 0;
                      goto LABEL_525;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v262 = 0;
              }
LABEL_525:
              BOOL v325 = v262 != 0;
              uint64_t v326 = 464;
              goto LABEL_554;
            case 0x45u:
              char v267 = 0;
              unsigned int v268 = 0;
              uint64_t v269 = 0;
              a1[61] |= 0x10000000uLL;
              while (2)
              {
                uint64_t v270 = *v3;
                uint64_t v271 = *(void *)(a2 + v270);
                unint64_t v272 = v271 + 1;
                if (v271 == -1 || v272 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v273 = *(unsigned char *)(*(void *)(a2 + *v7) + v271);
                  *(void *)(a2 + v270) = v272;
                  v269 |= (unint64_t)(v273 & 0x7F) << v267;
                  if (v273 < 0)
                  {
                    v267 += 7;
                    BOOL v15 = v268++ >= 9;
                    if (v15)
                    {
                      uint64_t v269 = 0;
                      goto LABEL_529;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v269 = 0;
              }
LABEL_529:
              BOOL v325 = v269 != 0;
              uint64_t v326 = 468;
              goto LABEL_554;
            case 0x46u:
              char v274 = 0;
              unsigned int v275 = 0;
              uint64_t v276 = 0;
              a1[61] |= 0x8000000uLL;
              while (2)
              {
                uint64_t v277 = *v3;
                uint64_t v278 = *(void *)(a2 + v277);
                unint64_t v279 = v278 + 1;
                if (v278 == -1 || v279 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v280 = *(unsigned char *)(*(void *)(a2 + *v7) + v278);
                  *(void *)(a2 + v277) = v279;
                  v276 |= (unint64_t)(v280 & 0x7F) << v274;
                  if (v280 < 0)
                  {
                    v274 += 7;
                    BOOL v15 = v275++ >= 9;
                    if (v15)
                    {
                      uint64_t v276 = 0;
                      goto LABEL_533;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v276 = 0;
              }
LABEL_533:
              BOOL v325 = v276 != 0;
              uint64_t v326 = 467;
              goto LABEL_554;
            case 0x47u:
              char v281 = 0;
              unsigned int v282 = 0;
              uint64_t v283 = 0;
              a1[61] |= 0x4000000uLL;
              while (2)
              {
                uint64_t v284 = *v3;
                uint64_t v285 = *(void *)(a2 + v284);
                unint64_t v286 = v285 + 1;
                if (v285 == -1 || v286 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v287 = *(unsigned char *)(*(void *)(a2 + *v7) + v285);
                  *(void *)(a2 + v284) = v286;
                  v283 |= (unint64_t)(v287 & 0x7F) << v281;
                  if (v287 < 0)
                  {
                    v281 += 7;
                    BOOL v15 = v282++ >= 9;
                    if (v15)
                    {
                      uint64_t v283 = 0;
                      goto LABEL_537;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v283 = 0;
              }
LABEL_537:
              BOOL v325 = v283 != 0;
              uint64_t v326 = 466;
              goto LABEL_554;
            case 0x48u:
              char v288 = 0;
              unsigned int v289 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x400000uLL;
              while (2)
              {
                uint64_t v290 = *v3;
                uint64_t v291 = *(void *)(a2 + v290);
                unint64_t v292 = v291 + 1;
                if (v291 == -1 || v292 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v293 = *(unsigned char *)(*(void *)(a2 + *v7) + v291);
                  *(void *)(a2 + v290) = v292;
                  v31 |= (unint64_t)(v293 & 0x7F) << v288;
                  if (v293 < 0)
                  {
                    v288 += 7;
                    BOOL v15 = v289++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_541;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_541:
              uint64_t v324 = 436;
              goto LABEL_559;
            case 0x49u:
              char v294 = 0;
              unsigned int v295 = 0;
              uint64_t v296 = 0;
              a1[61] |= 0x80000000000uLL;
              while (2)
              {
                uint64_t v297 = *v3;
                uint64_t v298 = *(void *)(a2 + v297);
                unint64_t v299 = v298 + 1;
                if (v298 == -1 || v299 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v300 = *(unsigned char *)(*(void *)(a2 + *v7) + v298);
                  *(void *)(a2 + v297) = v299;
                  v296 |= (unint64_t)(v300 & 0x7F) << v294;
                  if (v300 < 0)
                  {
                    v294 += 7;
                    BOOL v15 = v295++ >= 9;
                    if (v15)
                    {
                      uint64_t v296 = 0;
                      goto LABEL_545;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v296 = 0;
              }
LABEL_545:
              BOOL v325 = v296 != 0;
              uint64_t v326 = 483;
              goto LABEL_554;
            case 0x4Au:
              char v301 = 0;
              unsigned int v302 = 0;
              uint64_t v303 = 0;
              a1[61] |= 0x1000000000uLL;
              while (2)
              {
                uint64_t v304 = *v3;
                uint64_t v305 = *(void *)(a2 + v304);
                unint64_t v306 = v305 + 1;
                if (v305 == -1 || v306 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v307 = *(unsigned char *)(*(void *)(a2 + *v7) + v305);
                  *(void *)(a2 + v304) = v306;
                  v303 |= (unint64_t)(v307 & 0x7F) << v301;
                  if (v307 < 0)
                  {
                    v301 += 7;
                    BOOL v15 = v302++ >= 9;
                    if (v15)
                    {
                      uint64_t v303 = 0;
                      goto LABEL_549;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v303 = 0;
              }
LABEL_549:
              BOOL v325 = v303 != 0;
              uint64_t v326 = 476;
              goto LABEL_554;
            case 0x4Bu:
              char v308 = 0;
              unsigned int v309 = 0;
              uint64_t v310 = 0;
              a1[61] |= 0x40000000uLL;
              while (2)
              {
                uint64_t v311 = *v3;
                uint64_t v312 = *(void *)(a2 + v311);
                unint64_t v313 = v312 + 1;
                if (v312 == -1 || v313 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v314 = *(unsigned char *)(*(void *)(a2 + *v7) + v312);
                  *(void *)(a2 + v311) = v313;
                  v310 |= (unint64_t)(v314 & 0x7F) << v308;
                  if (v314 < 0)
                  {
                    v308 += 7;
                    BOOL v15 = v309++ >= 9;
                    if (v15)
                    {
                      uint64_t v310 = 0;
                      goto LABEL_553;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v310 = 0;
              }
LABEL_553:
              BOOL v325 = v310 != 0;
              uint64_t v326 = 470;
LABEL_554:
              *((unsigned char *)a1 + v326) = v325;
              goto LABEL_587;
            case 0x4Cu:
              char v315 = PBReaderReadString();
              if (v315) {
                [a1 addRegionIds:v315];
              }

              goto LABEL_587;
            case 0x4Du:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 15;
              goto LABEL_380;
            case 0x4Eu:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 14;
              goto LABEL_380;
            case 0x4Fu:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 13;
LABEL_380:
              unsigned int v316 = (void *)a1[v20];
              a1[v20] = v19;

              goto LABEL_587;
            case 0x50u:
              char v317 = 0;
              unsigned int v318 = 0;
              uint64_t v31 = 0;
              a1[61] |= 0x20000uLL;
              while (2)
              {
                uint64_t v319 = *v3;
                uint64_t v320 = *(void *)(a2 + v319);
                unint64_t v321 = v320 + 1;
                if (v320 == -1 || v321 > *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v322 = *(unsigned char *)(*(void *)(a2 + *v7) + v320);
                  *(void *)(a2 + v319) = v321;
                  v31 |= (unint64_t)(v322 & 0x7F) << v317;
                  if (v322 < 0)
                  {
                    v317 += 7;
                    BOOL v15 = v318++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_558;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                LODWORD(v31) = 0;
              }
LABEL_558:
              uint64_t v324 = 320;
LABEL_559:
              *(_DWORD *)((char *)a1 + v324) = v31;
              goto LABEL_587;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
              goto LABEL_587;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTodayModuleDescriptorReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v20 = objc_alloc_init(NTPBTodayModuleContentDescriptor);
        [(id)a1 addAvailableContents:v20];
        if (!PBReaderPlaceMark() || !NTPBTodayModuleContentDescriptorReadFrom((uint64_t)v20, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else if (v17 == 2)
      {
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 28) |= 1u;
        while (1)
        {
          uint64_t v24 = *v3;
          unint64_t v25 = *(void *)(a2 + v24);
          if (v25 == -1 || v25 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
          *(void *)(a2 + v24) = v25 + 1;
          v23 |= (unint64_t)(v26 & 0x7F) << v21;
          if ((v26 & 0x80) == 0) {
            goto LABEL_35;
          }
          v21 += 7;
          BOOL v14 = v22++ >= 9;
          if (v14)
          {
            LODWORD(v23) = 0;
            goto LABEL_37;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_37:
        *(_DWORD *)(a1 + 24) = v23;
      }
      else if (v17 == 1)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v18;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      int v16 = v10 & 7;
      if (v15 || v16 == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 600;
          goto LABEL_543;
        case 2u:
          char v21 = objc_alloc_init(NTPBLanguageConfig);
          [(id)a1 addLanguageConfigs:v21];
          if (!PBReaderPlaceMark() || !NTPBLanguageConfigReadFrom((id *)&v21->super.super.isa, a2)) {
            goto LABEL_886;
          }
          goto LABEL_306;
        case 3u:
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x100000000000uLL;
          while (2)
          {
            uint64_t v25 = *v3;
            uint64_t v26 = *(void *)(a2 + v25);
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
              *(void *)(a2 + v25) = v27;
              v24 |= (unint64_t)(v28 & 0x7F) << v22;
              if (v28 < 0)
              {
                v22 += 7;
                BOOL v14 = v23++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_585;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_585:
          uint64_t v456 = 384;
          goto LABEL_843;
        case 4u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x20000uLL;
          while (2)
          {
            uint64_t v31 = *v3;
            uint64_t v32 = *(void *)(a2 + v31);
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
              *(void *)(a2 + v31) = v33;
              v24 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                BOOL v14 = v30++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_589;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_589:
          uint64_t v456 = 168;
          goto LABEL_843;
        case 5u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          *(_WORD *)(a1 + 780) |= 0x80u;
          while (2)
          {
            uint64_t v38 = *v3;
            uint64_t v39 = *(void *)(a2 + v38);
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                BOOL v14 = v36++ >= 9;
                if (v14)
                {
                  uint64_t v37 = 0;
                  goto LABEL_593;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v37 = 0;
          }
LABEL_593:
          BOOL v457 = v37 != 0;
          uint64_t v458 = 765;
          goto LABEL_850;
        case 6u:
          *(void *)(a1 + 772) |= 0x100uLL;
          uint64_t v42 = *v3;
          unint64_t v43 = *(void *)(a2 + v42);
          if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v44 = *(void *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v43 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v44 = 0;
          }
          uint64_t v467 = 96;
          goto LABEL_883;
        case 7u:
          *(void *)(a1 + 772) |= 0x10000uLL;
          uint64_t v45 = *v3;
          unint64_t v46 = *(void *)(a2 + v45);
          if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v44 = *(void *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v46 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v44 = 0;
          }
          uint64_t v467 = 160;
          goto LABEL_883;
        case 8u:
          *(void *)(a1 + 772) |= 0x2000000000uLL;
          uint64_t v47 = *v3;
          unint64_t v48 = *(void *)(a2 + v47);
          if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v44 = *(void *)(*(void *)(a2 + *v7) + v48);
            *(void *)(a2 + v47) = v48 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v44 = 0;
          }
          uint64_t v467 = 328;
          goto LABEL_883;
        case 9u:
          char v21 = objc_alloc_init(NTPBEndpointConfig);
          [(id)a1 addEndpointConfigs:v21];
          if (!PBReaderPlaceMark() || (NTPBEndpointConfigReadFrom((uint64_t)v21, a2) & 1) == 0) {
            goto LABEL_886;
          }
          goto LABEL_306;
        case 0xAu:
          char v21 = objc_alloc_init(NTPBPersonalizationConfig);
          objc_storeStrong((id *)(a1 + 664), v21);
          if (!PBReaderPlaceMark() || (NTPBPersonalizationConfigReadFrom((uint64_t)v21, a2) & 1) == 0) {
            goto LABEL_886;
          }
          goto LABEL_306;
        case 0xBu:
          char v21 = objc_alloc_init(NTPBIAdConfig);
          objc_storeStrong((id *)(a1 + 624), v21);
          if (!PBReaderPlaceMark() || (NTPBIAdConfigReadFrom((uint64_t)v21, a2) & 1) == 0) {
            goto LABEL_886;
          }
          goto LABEL_306;
        case 0xCu:
          char v21 = objc_alloc_init(NTPBPrefetchConfig);
          objc_storeStrong((id *)(a1 + 720), v21);
          if (!PBReaderPlaceMark() || (NTPBPrefetchConfigReadFrom((uint64_t)v21, a2) & 1) == 0) {
            goto LABEL_886;
          }
          goto LABEL_306;
        case 0xDu:
          *(void *)(a1 + 772) |= 0x8000000000000uLL;
          uint64_t v49 = *v3;
          unint64_t v50 = *(void *)(a2 + v49);
          if (v50 <= 0xFFFFFFFFFFFFFFF7 && v50 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v44 = *(void *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v50 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v44 = 0;
          }
          uint64_t v467 = 440;
          goto LABEL_883;
        case 0xEu:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x800000uLL;
          while (2)
          {
            uint64_t v53 = *v3;
            uint64_t v54 = *(void *)(a2 + v53);
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v54);
              *(void *)(a2 + v53) = v55;
              v24 |= (unint64_t)(v56 & 0x7F) << v51;
              if (v56 < 0)
              {
                v51 += 7;
                BOOL v14 = v52++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_597;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_597:
          uint64_t v456 = 216;
          goto LABEL_843;
        case 0xFu:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x8000uLL;
          while (2)
          {
            uint64_t v59 = *v3;
            uint64_t v60 = *(void *)(a2 + v59);
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
              *(void *)(a2 + v59) = v61;
              v24 |= (unint64_t)(v62 & 0x7F) << v57;
              if (v62 < 0)
              {
                v57 += 7;
                BOOL v14 = v58++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_601;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_601:
          uint64_t v456 = 152;
          goto LABEL_843;
        case 0x10u:
          char v63 = 0;
          unsigned int v64 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x80uLL;
          while (2)
          {
            uint64_t v65 = *v3;
            uint64_t v66 = *(void *)(a2 + v65);
            unint64_t v67 = v66 + 1;
            if (v66 == -1 || v67 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v68 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
              *(void *)(a2 + v65) = v67;
              v24 |= (unint64_t)(v68 & 0x7F) << v63;
              if (v68 < 0)
              {
                v63 += 7;
                BOOL v14 = v64++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_605;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_605:
          uint64_t v456 = 88;
          goto LABEL_843;
        case 0x11u:
          char v69 = 0;
          unsigned int v70 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x80000000000000uLL;
          while (2)
          {
            uint64_t v71 = *v3;
            uint64_t v72 = *(void *)(a2 + v71);
            unint64_t v73 = v72 + 1;
            if (v72 == -1 || v73 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v74 = *(unsigned char *)(*(void *)(a2 + *v7) + v72);
              *(void *)(a2 + v71) = v73;
              v24 |= (unint64_t)(v74 & 0x7F) << v69;
              if (v74 < 0)
              {
                v69 += 7;
                BOOL v14 = v70++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_609;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_609:
          uint64_t v456 = 472;
          goto LABEL_843;
        case 0x12u:
          char v75 = 0;
          unsigned int v76 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 2uLL;
          while (2)
          {
            uint64_t v77 = *v3;
            uint64_t v78 = *(void *)(a2 + v77);
            unint64_t v79 = v78 + 1;
            if (v78 == -1 || v79 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v80 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
              *(void *)(a2 + v77) = v79;
              v24 |= (unint64_t)(v80 & 0x7F) << v75;
              if (v80 < 0)
              {
                v75 += 7;
                BOOL v14 = v76++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_613;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_613:
          uint64_t v456 = 40;
          goto LABEL_843;
        case 0x13u:
          char v81 = 0;
          unsigned int v82 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x1000000uLL;
          while (2)
          {
            uint64_t v83 = *v3;
            uint64_t v84 = *(void *)(a2 + v83);
            unint64_t v85 = v84 + 1;
            if (v84 == -1 || v85 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v86 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
              *(void *)(a2 + v83) = v85;
              v24 |= (unint64_t)(v86 & 0x7F) << v81;
              if (v86 < 0)
              {
                v81 += 7;
                BOOL v14 = v82++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_617;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_617:
          uint64_t v456 = 224;
          goto LABEL_843;
        case 0x14u:
          char v87 = 0;
          unsigned int v88 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x20000000000000uLL;
          while (2)
          {
            uint64_t v89 = *v3;
            uint64_t v90 = *(void *)(a2 + v89);
            unint64_t v91 = v90 + 1;
            if (v90 == -1 || v91 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v92 = *(unsigned char *)(*(void *)(a2 + *v7) + v90);
              *(void *)(a2 + v89) = v91;
              v24 |= (unint64_t)(v92 & 0x7F) << v87;
              if (v92 < 0)
              {
                v87 += 7;
                BOOL v14 = v88++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_621;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_621:
          uint64_t v456 = 456;
          goto LABEL_843;
        case 0x15u:
          char v93 = 0;
          unsigned int v94 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x10000000000000uLL;
          while (2)
          {
            uint64_t v95 = *v3;
            uint64_t v96 = *(void *)(a2 + v95);
            unint64_t v97 = v96 + 1;
            if (v96 == -1 || v97 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v98 = *(unsigned char *)(*(void *)(a2 + *v7) + v96);
              *(void *)(a2 + v95) = v97;
              v24 |= (unint64_t)(v98 & 0x7F) << v93;
              if (v98 < 0)
              {
                v93 += 7;
                BOOL v14 = v94++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_625;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_625:
          uint64_t v456 = 448;
          goto LABEL_843;
        case 0x16u:
          char v99 = 0;
          unsigned int v100 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x800000000uLL;
          while (2)
          {
            uint64_t v101 = *v3;
            uint64_t v102 = *(void *)(a2 + v101);
            unint64_t v103 = v102 + 1;
            if (v102 == -1 || v103 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v104 = *(unsigned char *)(*(void *)(a2 + *v7) + v102);
              *(void *)(a2 + v101) = v103;
              v24 |= (unint64_t)(v104 & 0x7F) << v99;
              if (v104 < 0)
              {
                v99 += 7;
                BOOL v14 = v100++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_629;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_629:
          uint64_t v456 = 312;
          goto LABEL_843;
        case 0x17u:
          char v105 = 0;
          unsigned int v106 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x10uLL;
          while (2)
          {
            uint64_t v107 = *v3;
            uint64_t v108 = *(void *)(a2 + v107);
            unint64_t v109 = v108 + 1;
            if (v108 == -1 || v109 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v110 = *(unsigned char *)(*(void *)(a2 + *v7) + v108);
              *(void *)(a2 + v107) = v109;
              v24 |= (unint64_t)(v110 & 0x7F) << v105;
              if (v110 < 0)
              {
                v105 += 7;
                BOOL v14 = v106++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_633;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_633:
          uint64_t v456 = 64;
          goto LABEL_843;
        case 0x18u:
          char v111 = 0;
          unsigned int v112 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x400000000000uLL;
          while (2)
          {
            uint64_t v113 = *v3;
            uint64_t v114 = *(void *)(a2 + v113);
            unint64_t v115 = v114 + 1;
            if (v114 == -1 || v115 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v116 = *(unsigned char *)(*(void *)(a2 + *v7) + v114);
              *(void *)(a2 + v113) = v115;
              v24 |= (unint64_t)(v116 & 0x7F) << v111;
              if (v116 < 0)
              {
                v111 += 7;
                BOOL v14 = v112++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_637;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_637:
          uint64_t v456 = 400;
          goto LABEL_843;
        case 0x19u:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 528;
          goto LABEL_543;
        case 0x1Au:
          char v117 = 0;
          unsigned int v118 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x2000000000000uLL;
          while (2)
          {
            uint64_t v119 = *v3;
            uint64_t v120 = *(void *)(a2 + v119);
            unint64_t v121 = v120 + 1;
            if (v120 == -1 || v121 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v122 = *(unsigned char *)(*(void *)(a2 + *v7) + v120);
              *(void *)(a2 + v119) = v121;
              v24 |= (unint64_t)(v122 & 0x7F) << v117;
              if (v122 < 0)
              {
                v117 += 7;
                BOOL v14 = v118++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_641;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_641:
          uint64_t v456 = 424;
          goto LABEL_843;
        case 0x1Bu:
          char v123 = 0;
          unsigned int v124 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x1000000000000uLL;
          while (2)
          {
            uint64_t v125 = *v3;
            uint64_t v126 = *(void *)(a2 + v125);
            unint64_t v127 = v126 + 1;
            if (v126 == -1 || v127 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v128 = *(unsigned char *)(*(void *)(a2 + *v7) + v126);
              *(void *)(a2 + v125) = v127;
              v24 |= (unint64_t)(v128 & 0x7F) << v123;
              if (v128 < 0)
              {
                v123 += 7;
                BOOL v14 = v124++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_645;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_645:
          uint64_t v456 = 416;
          goto LABEL_843;
        case 0x1Cu:
          char v129 = 0;
          unsigned int v130 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x800000000000uLL;
          while (2)
          {
            uint64_t v131 = *v3;
            uint64_t v132 = *(void *)(a2 + v131);
            unint64_t v133 = v132 + 1;
            if (v132 == -1 || v133 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v134 = *(unsigned char *)(*(void *)(a2 + *v7) + v132);
              *(void *)(a2 + v131) = v133;
              v24 |= (unint64_t)(v134 & 0x7F) << v129;
              if (v134 < 0)
              {
                v129 += 7;
                BOOL v14 = v130++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_649;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_649:
          uint64_t v456 = 408;
          goto LABEL_843;
        case 0x1Du:
          char v135 = 0;
          unsigned int v136 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x80000000uLL;
          while (2)
          {
            uint64_t v137 = *v3;
            uint64_t v138 = *(void *)(a2 + v137);
            unint64_t v139 = v138 + 1;
            if (v138 == -1 || v139 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v140 = *(unsigned char *)(*(void *)(a2 + *v7) + v138);
              *(void *)(a2 + v137) = v139;
              v24 |= (unint64_t)(v140 & 0x7F) << v135;
              if (v140 < 0)
              {
                v135 += 7;
                BOOL v14 = v136++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_653;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_653:
          uint64_t v456 = 280;
          goto LABEL_843;
        case 0x1Eu:
          *(void *)(a1 + 772) |= 0x1000uLL;
          uint64_t v141 = *v3;
          unint64_t v142 = *(void *)(a2 + v141);
          if (v142 <= 0xFFFFFFFFFFFFFFF7 && v142 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v44 = *(void *)(*(void *)(a2 + *v7) + v142);
            *(void *)(a2 + v141) = v142 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v44 = 0;
          }
          uint64_t v467 = 128;
          goto LABEL_883;
        case 0x1Fu:
          char v143 = 0;
          unsigned int v144 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x800uLL;
          while (2)
          {
            uint64_t v145 = *v3;
            uint64_t v146 = *(void *)(a2 + v145);
            unint64_t v147 = v146 + 1;
            if (v146 == -1 || v147 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v148 = *(unsigned char *)(*(void *)(a2 + *v7) + v146);
              *(void *)(a2 + v145) = v147;
              v24 |= (unint64_t)(v148 & 0x7F) << v143;
              if (v148 < 0)
              {
                v143 += 7;
                BOOL v14 = v144++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_657;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_657:
          uint64_t v456 = 120;
          goto LABEL_843;
        case 0x20u:
          char v21 = objc_alloc_init(NTPBWidgetConfig);
          uint64_t v149 = 744;
          goto LABEL_304;
        case 0x21u:
          char v150 = 0;
          unsigned int v151 = 0;
          uint64_t v152 = 0;
          *(_WORD *)(a1 + 780) |= 0x400u;
          while (2)
          {
            uint64_t v153 = *v3;
            uint64_t v154 = *(void *)(a2 + v153);
            unint64_t v155 = v154 + 1;
            if (v154 == -1 || v155 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v156 = *(unsigned char *)(*(void *)(a2 + *v7) + v154);
              *(void *)(a2 + v153) = v155;
              v152 |= (unint64_t)(v156 & 0x7F) << v150;
              if (v156 < 0)
              {
                v150 += 7;
                BOOL v14 = v151++ >= 9;
                if (v14)
                {
                  uint64_t v152 = 0;
                  goto LABEL_661;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v152 = 0;
          }
LABEL_661:
          BOOL v457 = v152 != 0;
          uint64_t v458 = 768;
          goto LABEL_850;
        case 0x22u:
          char v157 = 0;
          unsigned int v158 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x100000000uLL;
          while (2)
          {
            uint64_t v159 = *v3;
            uint64_t v160 = *(void *)(a2 + v159);
            unint64_t v161 = v160 + 1;
            if (v160 == -1 || v161 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v162 = *(unsigned char *)(*(void *)(a2 + *v7) + v160);
              *(void *)(a2 + v159) = v161;
              v24 |= (unint64_t)(v162 & 0x7F) << v157;
              if (v162 < 0)
              {
                v157 += 7;
                BOOL v14 = v158++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_665;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_665:
          uint64_t v456 = 288;
          goto LABEL_843;
        case 0x23u:
          char v163 = 0;
          unsigned int v164 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x200000000uLL;
          while (2)
          {
            uint64_t v165 = *v3;
            uint64_t v166 = *(void *)(a2 + v165);
            unint64_t v167 = v166 + 1;
            if (v166 == -1 || v167 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v168 = *(unsigned char *)(*(void *)(a2 + *v7) + v166);
              *(void *)(a2 + v165) = v167;
              v24 |= (unint64_t)(v168 & 0x7F) << v163;
              if (v168 < 0)
              {
                v163 += 7;
                BOOL v14 = v164++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_669;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_669:
          uint64_t v456 = 296;
          goto LABEL_843;
        case 0x24u:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 608;
          goto LABEL_543;
        case 0x25u:
          char v169 = 0;
          unsigned int v170 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x400000000uLL;
          while (2)
          {
            uint64_t v171 = *v3;
            uint64_t v172 = *(void *)(a2 + v171);
            unint64_t v173 = v172 + 1;
            if (v172 == -1 || v173 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v174 = *(unsigned char *)(*(void *)(a2 + *v7) + v172);
              *(void *)(a2 + v171) = v173;
              v24 |= (unint64_t)(v174 & 0x7F) << v169;
              if (v174 < 0)
              {
                v169 += 7;
                BOOL v14 = v170++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_673;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_673:
          uint64_t v456 = 304;
          goto LABEL_843;
        case 0x26u:
          char v175 = 0;
          unsigned int v176 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x40000000000uLL;
          while (2)
          {
            uint64_t v177 = *v3;
            uint64_t v178 = *(void *)(a2 + v177);
            unint64_t v179 = v178 + 1;
            if (v178 == -1 || v179 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v180 = *(unsigned char *)(*(void *)(a2 + *v7) + v178);
              *(void *)(a2 + v177) = v179;
              v24 |= (unint64_t)(v180 & 0x7F) << v175;
              if (v180 < 0)
              {
                v175 += 7;
                BOOL v14 = v176++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_677;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_677:
          uint64_t v456 = 368;
          goto LABEL_843;
        case 0x27u:
          char v181 = 0;
          unsigned int v182 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x20000000000uLL;
          while (2)
          {
            uint64_t v183 = *v3;
            uint64_t v184 = *(void *)(a2 + v183);
            unint64_t v185 = v184 + 1;
            if (v184 == -1 || v185 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v186 = *(unsigned char *)(*(void *)(a2 + *v7) + v184);
              *(void *)(a2 + v183) = v185;
              v24 |= (unint64_t)(v186 & 0x7F) << v181;
              if (v186 < 0)
              {
                v181 += 7;
                BOOL v14 = v182++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_681;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_681:
          uint64_t v456 = 360;
          goto LABEL_843;
        case 0x28u:
          char v187 = 0;
          unsigned int v188 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x10000000000uLL;
          while (2)
          {
            uint64_t v189 = *v3;
            uint64_t v190 = *(void *)(a2 + v189);
            unint64_t v191 = v190 + 1;
            if (v190 == -1 || v191 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v192 = *(unsigned char *)(*(void *)(a2 + *v7) + v190);
              *(void *)(a2 + v189) = v191;
              v24 |= (unint64_t)(v192 & 0x7F) << v187;
              if (v192 < 0)
              {
                v187 += 7;
                BOOL v14 = v188++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_685;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_685:
          uint64_t v456 = 352;
          goto LABEL_843;
        case 0x29u:
          char v193 = 0;
          unsigned int v194 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x80000000000uLL;
          while (2)
          {
            uint64_t v195 = *v3;
            uint64_t v196 = *(void *)(a2 + v195);
            unint64_t v197 = v196 + 1;
            if (v196 == -1 || v197 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v198 = *(unsigned char *)(*(void *)(a2 + *v7) + v196);
              *(void *)(a2 + v195) = v197;
              v24 |= (unint64_t)(v198 & 0x7F) << v193;
              if (v198 < 0)
              {
                v193 += 7;
                BOOL v14 = v194++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_689;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_689:
          uint64_t v456 = 376;
          goto LABEL_843;
        case 0x2Au:
          char v21 = objc_alloc_init(NTPBWidgetConfig);
          uint64_t v149 = 520;
          goto LABEL_304;
        case 0x2Bu:
          char v199 = 0;
          unsigned int v200 = 0;
          uint64_t v201 = 0;
          *(_WORD *)(a1 + 780) |= 4u;
          while (2)
          {
            uint64_t v202 = *v3;
            uint64_t v203 = *(void *)(a2 + v202);
            unint64_t v204 = v203 + 1;
            if (v203 == -1 || v204 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v205 = *(unsigned char *)(*(void *)(a2 + *v7) + v203);
              *(void *)(a2 + v202) = v204;
              v201 |= (unint64_t)(v205 & 0x7F) << v199;
              if (v205 < 0)
              {
                v199 += 7;
                BOOL v14 = v200++ >= 9;
                if (v14)
                {
                  uint64_t v201 = 0;
                  goto LABEL_693;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v201 = 0;
          }
LABEL_693:
          BOOL v457 = v201 != 0;
          uint64_t v458 = 760;
          goto LABEL_850;
        case 0x2Cu:
          char v21 = objc_alloc_init(NTPBWidgetConfig);
          uint64_t v149 = 560;
          goto LABEL_304;
        case 0x2Du:
          char v21 = objc_alloc_init(NTPBPaidSubscriptionConfig);
          objc_storeStrong((id *)(a1 + 648), v21);
          if (!PBReaderPlaceMark() || !NTPBPaidSubscriptionConfigReadFrom((uint64_t)v21, a2)) {
            goto LABEL_886;
          }
          goto LABEL_306;
        case 0x2Eu:
          *(void *)(a1 + 772) |= 8uLL;
          uint64_t v206 = *v3;
          unint64_t v207 = *(void *)(a2 + v206);
          if (v207 <= 0xFFFFFFFFFFFFFFF7 && v207 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v44 = *(void *)(*(void *)(a2 + *v7) + v207);
            *(void *)(a2 + v206) = v207 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v44 = 0;
          }
          uint64_t v467 = 56;
          goto LABEL_883;
        case 0x2Fu:
          *(void *)(a1 + 772) |= 4uLL;
          uint64_t v208 = *v3;
          unint64_t v209 = *(void *)(a2 + v208);
          if (v209 <= 0xFFFFFFFFFFFFFFF7 && v209 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v44 = *(void *)(*(void *)(a2 + *v7) + v209);
            *(void *)(a2 + v208) = v209 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v44 = 0;
          }
          uint64_t v467 = 48;
          goto LABEL_883;
        case 0x30u:
          char v210 = 0;
          unsigned int v211 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x80000uLL;
          while (2)
          {
            uint64_t v212 = *v3;
            uint64_t v213 = *(void *)(a2 + v212);
            unint64_t v214 = v213 + 1;
            if (v213 == -1 || v214 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v215 = *(unsigned char *)(*(void *)(a2 + *v7) + v213);
              *(void *)(a2 + v212) = v214;
              v24 |= (unint64_t)(v215 & 0x7F) << v210;
              if (v215 < 0)
              {
                v210 += 7;
                BOOL v14 = v211++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_697;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_697:
          uint64_t v456 = 184;
          goto LABEL_843;
        case 0x31u:
          char v216 = 0;
          unsigned int v217 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x100000uLL;
          while (2)
          {
            uint64_t v218 = *v3;
            uint64_t v219 = *(void *)(a2 + v218);
            unint64_t v220 = v219 + 1;
            if (v219 == -1 || v220 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v221 = *(unsigned char *)(*(void *)(a2 + *v7) + v219);
              *(void *)(a2 + v218) = v220;
              v24 |= (unint64_t)(v221 & 0x7F) << v216;
              if (v221 < 0)
              {
                v216 += 7;
                BOOL v14 = v217++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_701;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_701:
          uint64_t v456 = 192;
          goto LABEL_843;
        case 0x32u:
          char v222 = 0;
          unsigned int v223 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x200000uLL;
          while (2)
          {
            uint64_t v224 = *v3;
            uint64_t v225 = *(void *)(a2 + v224);
            unint64_t v226 = v225 + 1;
            if (v225 == -1 || v226 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v227 = *(unsigned char *)(*(void *)(a2 + *v7) + v225);
              *(void *)(a2 + v224) = v226;
              v24 |= (unint64_t)(v227 & 0x7F) << v222;
              if (v227 < 0)
              {
                v222 += 7;
                BOOL v14 = v223++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_705;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_705:
          uint64_t v456 = 200;
          goto LABEL_843;
        case 0x33u:
          *(void *)(a1 + 772) |= 0x4000000000uLL;
          uint64_t v228 = *v3;
          unint64_t v229 = *(void *)(a2 + v228);
          if (v229 <= 0xFFFFFFFFFFFFFFF7 && v229 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v44 = *(void *)(*(void *)(a2 + *v7) + v229);
            *(void *)(a2 + v228) = v229 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v44 = 0;
          }
          uint64_t v467 = 336;
          goto LABEL_883;
        case 0x34u:
          *(void *)(a1 + 772) |= 0x8000000000uLL;
          uint64_t v230 = *v3;
          unint64_t v231 = *(void *)(a2 + v230);
          if (v231 <= 0xFFFFFFFFFFFFFFF7 && v231 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v44 = *(void *)(*(void *)(a2 + *v7) + v231);
            *(void *)(a2 + v230) = v231 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v44 = 0;
          }
          uint64_t v467 = 344;
          goto LABEL_883;
        case 0x35u:
          char v232 = 0;
          unsigned int v233 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x4000uLL;
          while (2)
          {
            uint64_t v234 = *v3;
            uint64_t v235 = *(void *)(a2 + v234);
            unint64_t v236 = v235 + 1;
            if (v235 == -1 || v236 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v237 = *(unsigned char *)(*(void *)(a2 + *v7) + v235);
              *(void *)(a2 + v234) = v236;
              v24 |= (unint64_t)(v237 & 0x7F) << v232;
              if (v237 < 0)
              {
                v232 += 7;
                BOOL v14 = v233++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_709;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_709:
          uint64_t v456 = 144;
          goto LABEL_843;
        case 0x36u:
          char v238 = 0;
          unsigned int v239 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x40000uLL;
          while (2)
          {
            uint64_t v240 = *v3;
            uint64_t v241 = *(void *)(a2 + v240);
            unint64_t v242 = v241 + 1;
            if (v241 == -1 || v242 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v243 = *(unsigned char *)(*(void *)(a2 + *v7) + v241);
              *(void *)(a2 + v240) = v242;
              v24 |= (unint64_t)(v243 & 0x7F) << v238;
              if (v243 < 0)
              {
                v238 += 7;
                BOOL v14 = v239++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_713;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_713:
          uint64_t v456 = 176;
          goto LABEL_843;
        case 0x37u:
          char v21 = objc_alloc_init(NTPBWidgetConfig);
          uint64_t v149 = 752;
LABEL_304:
          objc_storeStrong((id *)(a1 + v149), v21);
          if PBReaderPlaceMark() && (NTPBWidgetConfigReadFrom((uint64_t)v21, a2)) {
            goto LABEL_306;
          }
          goto LABEL_886;
        case 0x38u:
          char v244 = 0;
          unsigned int v245 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x4000000000000uLL;
          while (2)
          {
            uint64_t v246 = *v3;
            uint64_t v247 = *(void *)(a2 + v246);
            unint64_t v248 = v247 + 1;
            if (v247 == -1 || v248 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v249 = *(unsigned char *)(*(void *)(a2 + *v7) + v247);
              *(void *)(a2 + v246) = v248;
              v24 |= (unint64_t)(v249 & 0x7F) << v244;
              if (v249 < 0)
              {
                v244 += 7;
                BOOL v14 = v245++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_717;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_717:
          uint64_t v456 = 432;
          goto LABEL_843;
        case 0x39u:
          char v250 = 0;
          unsigned int v251 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x40000000000000uLL;
          while (2)
          {
            uint64_t v252 = *v3;
            uint64_t v253 = *(void *)(a2 + v252);
            unint64_t v254 = v253 + 1;
            if (v253 == -1 || v254 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v255 = *(unsigned char *)(*(void *)(a2 + *v7) + v253);
              *(void *)(a2 + v252) = v254;
              v24 |= (unint64_t)(v255 & 0x7F) << v250;
              if (v255 < 0)
              {
                v250 += 7;
                BOOL v14 = v251++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_721;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_721:
          uint64_t v456 = 464;
          goto LABEL_843;
        case 0x3Au:
          char v21 = objc_alloc_init(NTPBBinningConfig);
          objc_storeStrong((id *)(a1 + 552), v21);
          if (!PBReaderPlaceMark() || (NTPBBinningConfigReadFrom((uint64_t)v21, a2) & 1) == 0) {
            goto LABEL_886;
          }
          goto LABEL_306;
        case 0x3Bu:
          char v21 = objc_alloc_init(NTPBPersonalizationTreatment);
          objc_storeStrong((id *)(a1 + 688), v21);
          if (!PBReaderPlaceMark() || (NTPBPersonalizationTreatmentReadFrom((uint64_t)v21, a2) & 1) == 0) {
            goto LABEL_886;
          }
          goto LABEL_306;
        case 0x3Cu:
          char v256 = 0;
          unsigned int v257 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 1uLL;
          while (2)
          {
            uint64_t v258 = *v3;
            uint64_t v259 = *(void *)(a2 + v258);
            unint64_t v260 = v259 + 1;
            if (v259 == -1 || v260 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v261 = *(unsigned char *)(*(void *)(a2 + *v7) + v259);
              *(void *)(a2 + v258) = v260;
              v24 |= (unint64_t)(v261 & 0x7F) << v256;
              if (v261 < 0)
              {
                v256 += 7;
                BOOL v14 = v257++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_725;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_725:
          uint64_t v456 = 32;
          goto LABEL_843;
        case 0x3Du:
          char v262 = 0;
          unsigned int v263 = 0;
          uint64_t v264 = 0;
          *(_WORD *)(a1 + 780) |= 0x100u;
          while (2)
          {
            uint64_t v265 = *v3;
            uint64_t v266 = *(void *)(a2 + v265);
            unint64_t v267 = v266 + 1;
            if (v266 == -1 || v267 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v268 = *(unsigned char *)(*(void *)(a2 + *v7) + v266);
              *(void *)(a2 + v265) = v267;
              v264 |= (unint64_t)(v268 & 0x7F) << v262;
              if (v268 < 0)
              {
                v262 += 7;
                BOOL v14 = v263++ >= 9;
                if (v14)
                {
                  uint64_t v264 = 0;
                  goto LABEL_729;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v264 = 0;
          }
LABEL_729:
          BOOL v457 = v264 != 0;
          uint64_t v458 = 766;
          goto LABEL_850;
        case 0x3Eu:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 656;
          goto LABEL_543;
        case 0x3Fu:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 696;
          goto LABEL_543;
        case 0x40u:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 704;
          goto LABEL_543;
        case 0x41u:
          char v269 = 0;
          unsigned int v270 = 0;
          uint64_t v271 = 0;
          *(void *)(a1 + 772) |= 0x2000000000000000uLL;
          while (2)
          {
            uint64_t v272 = *v3;
            uint64_t v273 = *(void *)(a2 + v272);
            unint64_t v274 = v273 + 1;
            if (v273 == -1 || v274 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v275 = *(unsigned char *)(*(void *)(a2 + *v7) + v273);
              *(void *)(a2 + v272) = v274;
              v271 |= (unint64_t)(v275 & 0x7F) << v269;
              if (v275 < 0)
              {
                v269 += 7;
                BOOL v14 = v270++ >= 9;
                if (v14)
                {
                  LODWORD(v271) = 0;
                  goto LABEL_733;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v271) = 0;
          }
LABEL_733:
          uint64_t v459 = 568;
          goto LABEL_826;
        case 0x42u:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 680;
          goto LABEL_543;
        case 0x43u:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 712;
          goto LABEL_543;
        case 0x44u:
          char v276 = 0;
          unsigned int v277 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x200uLL;
          while (2)
          {
            uint64_t v278 = *v3;
            uint64_t v279 = *(void *)(a2 + v278);
            unint64_t v280 = v279 + 1;
            if (v279 == -1 || v280 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v281 = *(unsigned char *)(*(void *)(a2 + *v7) + v279);
              *(void *)(a2 + v278) = v280;
              v24 |= (unint64_t)(v281 & 0x7F) << v276;
              if (v281 < 0)
              {
                v276 += 7;
                BOOL v14 = v277++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_737;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_737:
          uint64_t v456 = 104;
          goto LABEL_843;
        case 0x45u:
          char v282 = 0;
          unsigned int v283 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x400uLL;
          while (2)
          {
            uint64_t v284 = *v3;
            uint64_t v285 = *(void *)(a2 + v284);
            unint64_t v286 = v285 + 1;
            if (v285 == -1 || v286 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v287 = *(unsigned char *)(*(void *)(a2 + *v7) + v285);
              *(void *)(a2 + v284) = v286;
              v24 |= (unint64_t)(v287 & 0x7F) << v282;
              if (v287 < 0)
              {
                v282 += 7;
                BOOL v14 = v283++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_741;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_741:
          uint64_t v456 = 112;
          goto LABEL_843;
        case 0x46u:
          char v288 = 0;
          unsigned int v289 = 0;
          uint64_t v290 = 0;
          *(_WORD *)(a1 + 780) |= 0x10u;
          while (2)
          {
            uint64_t v291 = *v3;
            uint64_t v292 = *(void *)(a2 + v291);
            unint64_t v293 = v292 + 1;
            if (v292 == -1 || v293 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v294 = *(unsigned char *)(*(void *)(a2 + *v7) + v292);
              *(void *)(a2 + v291) = v293;
              v290 |= (unint64_t)(v294 & 0x7F) << v288;
              if (v294 < 0)
              {
                v288 += 7;
                BOOL v14 = v289++ >= 9;
                if (v14)
                {
                  uint64_t v290 = 0;
                  goto LABEL_745;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v290 = 0;
          }
LABEL_745:
          BOOL v457 = v290 != 0;
          uint64_t v458 = 762;
          goto LABEL_850;
        case 0x47u:
          char v21 = objc_alloc_init(NTPBExternalAnalyticsConfig);
          [(id)a1 addExternalAnalyticsConfig:v21];
          if (!PBReaderPlaceMark() || (NTPBExternalAnalyticsConfigReadFrom(v21, a2) & 1) == 0) {
            goto LABEL_886;
          }
          goto LABEL_306;
        case 0x48u:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 672;
          goto LABEL_543;
        case 0x49u:
          char v295 = 0;
          unsigned int v296 = 0;
          uint64_t v271 = 0;
          *(void *)(a1 + 772) |= 0x8000000000000000;
          while (2)
          {
            uint64_t v297 = *v3;
            uint64_t v298 = *(void *)(a2 + v297);
            unint64_t v299 = v298 + 1;
            if (v298 == -1 || v299 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v300 = *(unsigned char *)(*(void *)(a2 + *v7) + v298);
              *(void *)(a2 + v297) = v299;
              v271 |= (unint64_t)(v300 & 0x7F) << v295;
              if (v300 < 0)
              {
                v295 += 7;
                BOOL v14 = v296++ >= 9;
                if (v14)
                {
                  LODWORD(v271) = 0;
                  goto LABEL_749;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v271) = 0;
          }
LABEL_749:
          uint64_t v459 = 644;
          goto LABEL_826;
        case 0x4Au:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 584;
          goto LABEL_543;
        case 0x4Bu:
          char v301 = 0;
          unsigned int v302 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x20000000uLL;
          while (2)
          {
            uint64_t v303 = *v3;
            uint64_t v304 = *(void *)(a2 + v303);
            unint64_t v305 = v304 + 1;
            if (v304 == -1 || v305 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v306 = *(unsigned char *)(*(void *)(a2 + *v7) + v304);
              *(void *)(a2 + v303) = v305;
              v24 |= (unint64_t)(v306 & 0x7F) << v301;
              if (v306 < 0)
              {
                v301 += 7;
                BOOL v14 = v302++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_753;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_753:
          uint64_t v456 = 264;
          goto LABEL_843;
        case 0x4Cu:
          char v307 = 0;
          unsigned int v308 = 0;
          uint64_t v309 = 0;
          *(_WORD *)(a1 + 780) |= 0x1000u;
          while (2)
          {
            uint64_t v310 = *v3;
            uint64_t v311 = *(void *)(a2 + v310);
            unint64_t v312 = v311 + 1;
            if (v311 == -1 || v312 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v313 = *(unsigned char *)(*(void *)(a2 + *v7) + v311);
              *(void *)(a2 + v310) = v312;
              v309 |= (unint64_t)(v313 & 0x7F) << v307;
              if (v313 < 0)
              {
                v307 += 7;
                BOOL v14 = v308++ >= 9;
                if (v14)
                {
                  uint64_t v309 = 0;
                  goto LABEL_757;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v309 = 0;
          }
LABEL_757:
          BOOL v457 = v309 != 0;
          uint64_t v458 = 770;
          goto LABEL_850;
        case 0x4Du:
          char v314 = 0;
          unsigned int v315 = 0;
          uint64_t v316 = 0;
          *(_WORD *)(a1 + 780) |= 0x800u;
          while (2)
          {
            uint64_t v317 = *v3;
            uint64_t v318 = *(void *)(a2 + v317);
            unint64_t v319 = v318 + 1;
            if (v318 == -1 || v319 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v320 = *(unsigned char *)(*(void *)(a2 + *v7) + v318);
              *(void *)(a2 + v317) = v319;
              v316 |= (unint64_t)(v320 & 0x7F) << v314;
              if (v320 < 0)
              {
                v314 += 7;
                BOOL v14 = v315++ >= 9;
                if (v14)
                {
                  uint64_t v316 = 0;
                  goto LABEL_761;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v316 = 0;
          }
LABEL_761:
          BOOL v457 = v316 != 0;
          uint64_t v458 = 769;
          goto LABEL_850;
        case 0x4Eu:
          char v321 = 0;
          unsigned int v322 = 0;
          uint64_t v271 = 0;
          *(void *)(a1 + 772) |= 0x4000000000000000uLL;
          while (2)
          {
            uint64_t v323 = *v3;
            uint64_t v324 = *(void *)(a2 + v323);
            unint64_t v325 = v324 + 1;
            if (v324 == -1 || v325 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v326 = *(unsigned char *)(*(void *)(a2 + *v7) + v324);
              *(void *)(a2 + v323) = v325;
              v271 |= (unint64_t)(v326 & 0x7F) << v321;
              if (v326 < 0)
              {
                v321 += 7;
                BOOL v14 = v322++ >= 9;
                if (v14)
                {
                  LODWORD(v271) = 0;
                  goto LABEL_765;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v271) = 0;
          }
LABEL_765:
          uint64_t v459 = 640;
          goto LABEL_826;
        case 0x4Fu:
          char v327 = 0;
          unsigned int v328 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x200000000000uLL;
          while (2)
          {
            uint64_t v329 = *v3;
            uint64_t v330 = *(void *)(a2 + v329);
            unint64_t v331 = v330 + 1;
            if (v330 == -1 || v331 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v332 = *(unsigned char *)(*(void *)(a2 + *v7) + v330);
              *(void *)(a2 + v329) = v331;
              v24 |= (unint64_t)(v332 & 0x7F) << v327;
              if (v332 < 0)
              {
                v327 += 7;
                BOOL v14 = v328++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_769;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_769:
          uint64_t v456 = 392;
          goto LABEL_843;
        case 0x50u:
          char v333 = 0;
          unsigned int v334 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x40uLL;
          while (2)
          {
            uint64_t v335 = *v3;
            uint64_t v336 = *(void *)(a2 + v335);
            unint64_t v337 = v336 + 1;
            if (v336 == -1 || v337 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v338 = *(unsigned char *)(*(void *)(a2 + *v7) + v336);
              *(void *)(a2 + v335) = v337;
              v24 |= (unint64_t)(v338 & 0x7F) << v333;
              if (v338 < 0)
              {
                v333 += 7;
                BOOL v14 = v334++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_773;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_773:
          uint64_t v456 = 80;
          goto LABEL_843;
        case 0x51u:
          char v339 = 0;
          unsigned int v340 = 0;
          uint64_t v341 = 0;
          *(_WORD *)(a1 + 780) |= 0x200u;
          while (2)
          {
            uint64_t v342 = *v3;
            uint64_t v343 = *(void *)(a2 + v342);
            unint64_t v344 = v343 + 1;
            if (v343 == -1 || v344 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v345 = *(unsigned char *)(*(void *)(a2 + *v7) + v343);
              *(void *)(a2 + v342) = v344;
              v341 |= (unint64_t)(v345 & 0x7F) << v339;
              if (v345 < 0)
              {
                v339 += 7;
                BOOL v14 = v340++ >= 9;
                if (v14)
                {
                  uint64_t v341 = 0;
                  goto LABEL_777;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v341 = 0;
          }
LABEL_777:
          BOOL v457 = v341 != 0;
          uint64_t v458 = 767;
          goto LABEL_850;
        case 0x52u:
          if (v16 == 2)
          {
            uint64_t result = PBReaderPlaceMark();
            if (!result) {
              return result;
            }
            while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
            {
              char v346 = 0;
              unsigned int v347 = 0;
              uint64_t v348 = 0;
              while (1)
              {
                uint64_t v349 = *v3;
                uint64_t v350 = *(void *)(a2 + v349);
                unint64_t v351 = v350 + 1;
                if (v350 == -1 || v351 > *(void *)(a2 + *v4)) {
                  break;
                }
                char v352 = *(unsigned char *)(*(void *)(a2 + *v7) + v350);
                *(void *)(a2 + v349) = v351;
                v348 |= (unint64_t)(v352 & 0x7F) << v346;
                if (v352 < 0)
                {
                  v346 += 7;
                  BOOL v14 = v347++ >= 9;
                  if (!v14) {
                    continue;
                  }
                }
                goto LABEL_447;
              }
              *(unsigned char *)(a2 + *v5) = 1;
LABEL_447:
              PBRepeatedInt64Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v460 = 0;
            unsigned int v461 = 0;
            uint64_t v462 = 0;
            while (1)
            {
              uint64_t v463 = *v3;
              uint64_t v464 = *(void *)(a2 + v463);
              unint64_t v465 = v464 + 1;
              if (v464 == -1 || v465 > *(void *)(a2 + *v4)) {
                break;
              }
              char v466 = *(unsigned char *)(*(void *)(a2 + *v7) + v464);
              *(void *)(a2 + v463) = v465;
              v462 |= (unint64_t)(v466 & 0x7F) << v460;
              if (v466 < 0)
              {
                v460 += 7;
                BOOL v14 = v461++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_860;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_860:
            PBRepeatedInt64Add();
          }
          goto LABEL_844;
        case 0x53u:
          char v353 = 0;
          unsigned int v354 = 0;
          uint64_t v355 = 0;
          *(_WORD *)(a1 + 780) |= 8u;
          while (2)
          {
            uint64_t v356 = *v3;
            uint64_t v357 = *(void *)(a2 + v356);
            unint64_t v358 = v357 + 1;
            if (v357 == -1 || v358 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v359 = *(unsigned char *)(*(void *)(a2 + *v7) + v357);
              *(void *)(a2 + v356) = v358;
              v355 |= (unint64_t)(v359 & 0x7F) << v353;
              if (v359 < 0)
              {
                v353 += 7;
                BOOL v14 = v354++ >= 9;
                if (v14)
                {
                  uint64_t v355 = 0;
                  goto LABEL_781;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v355 = 0;
          }
LABEL_781:
          BOOL v457 = v355 != 0;
          uint64_t v458 = 761;
          goto LABEL_850;
        case 0x54u:
          *(void *)(a1 + 772) |= 0x400000uLL;
          uint64_t v360 = *v3;
          unint64_t v361 = *(void *)(a2 + v360);
          if (v361 <= 0xFFFFFFFFFFFFFFF7 && v361 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v44 = *(void *)(*(void *)(a2 + *v7) + v361);
            *(void *)(a2 + v360) = v361 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v44 = 0;
          }
          uint64_t v467 = 208;
          goto LABEL_883;
        case 0x55u:
          *(void *)(a1 + 772) |= 0x40000000uLL;
          uint64_t v362 = *v3;
          unint64_t v363 = *(void *)(a2 + v362);
          if (v363 <= 0xFFFFFFFFFFFFFFF7 && v363 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v44 = *(void *)(*(void *)(a2 + *v7) + v363);
            *(void *)(a2 + v362) = v363 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v44 = 0;
          }
          uint64_t v467 = 272;
LABEL_883:
          *(void *)(a1 + v467) = v44;
          goto LABEL_844;
        case 0x56u:
          char v364 = 0;
          unsigned int v365 = 0;
          uint64_t v271 = 0;
          *(_WORD *)(a1 + 780) |= 2u;
          while (2)
          {
            uint64_t v366 = *v3;
            uint64_t v367 = *(void *)(a2 + v366);
            unint64_t v368 = v367 + 1;
            if (v367 == -1 || v368 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v369 = *(unsigned char *)(*(void *)(a2 + *v7) + v367);
              *(void *)(a2 + v366) = v368;
              v271 |= (unint64_t)(v369 & 0x7F) << v364;
              if (v369 < 0)
              {
                v364 += 7;
                BOOL v14 = v365++ >= 9;
                if (v14)
                {
                  LODWORD(v271) = 0;
                  goto LABEL_785;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v271) = 0;
          }
LABEL_785:
          uint64_t v459 = 732;
          goto LABEL_826;
        case 0x57u:
          char v370 = 0;
          unsigned int v371 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x2000000uLL;
          while (2)
          {
            uint64_t v372 = *v3;
            uint64_t v373 = *(void *)(a2 + v372);
            unint64_t v374 = v373 + 1;
            if (v373 == -1 || v374 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v375 = *(unsigned char *)(*(void *)(a2 + *v7) + v373);
              *(void *)(a2 + v372) = v374;
              v24 |= (unint64_t)(v375 & 0x7F) << v370;
              if (v375 < 0)
              {
                v370 += 7;
                BOOL v14 = v371++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_789;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_789:
          uint64_t v456 = 232;
          goto LABEL_843;
        case 0x58u:
          char v376 = 0;
          unsigned int v377 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x4000000uLL;
          while (2)
          {
            uint64_t v378 = *v3;
            uint64_t v379 = *(void *)(a2 + v378);
            unint64_t v380 = v379 + 1;
            if (v379 == -1 || v380 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v381 = *(unsigned char *)(*(void *)(a2 + *v7) + v379);
              *(void *)(a2 + v378) = v380;
              v24 |= (unint64_t)(v381 & 0x7F) << v376;
              if (v381 < 0)
              {
                v376 += 7;
                BOOL v14 = v377++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_793;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_793:
          uint64_t v456 = 240;
          goto LABEL_843;
        case 0x59u:
          char v382 = 0;
          unsigned int v383 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x8000000uLL;
          while (2)
          {
            uint64_t v384 = *v3;
            uint64_t v385 = *(void *)(a2 + v384);
            unint64_t v386 = v385 + 1;
            if (v385 == -1 || v386 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v387 = *(unsigned char *)(*(void *)(a2 + *v7) + v385);
              *(void *)(a2 + v384) = v386;
              v24 |= (unint64_t)(v387 & 0x7F) << v382;
              if (v387 < 0)
              {
                v382 += 7;
                BOOL v14 = v383++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_797;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_797:
          uint64_t v456 = 248;
          goto LABEL_843;
        case 0x5Au:
          char v388 = 0;
          unsigned int v389 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x10000000uLL;
          while (2)
          {
            uint64_t v390 = *v3;
            uint64_t v391 = *(void *)(a2 + v390);
            unint64_t v392 = v391 + 1;
            if (v391 == -1 || v392 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v393 = *(unsigned char *)(*(void *)(a2 + *v7) + v391);
              *(void *)(a2 + v390) = v392;
              v24 |= (unint64_t)(v393 & 0x7F) << v388;
              if (v393 < 0)
              {
                v388 += 7;
                BOOL v14 = v389++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_801;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_801:
          uint64_t v456 = 256;
          goto LABEL_843;
        case 0x5Bu:
          char v394 = 0;
          unsigned int v395 = 0;
          uint64_t v396 = 0;
          *(_WORD *)(a1 + 780) |= 0x40u;
          while (2)
          {
            uint64_t v397 = *v3;
            uint64_t v398 = *(void *)(a2 + v397);
            unint64_t v399 = v398 + 1;
            if (v398 == -1 || v399 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v400 = *(unsigned char *)(*(void *)(a2 + *v7) + v398);
              *(void *)(a2 + v397) = v399;
              v396 |= (unint64_t)(v400 & 0x7F) << v394;
              if (v400 < 0)
              {
                v394 += 7;
                BOOL v14 = v395++ >= 9;
                if (v14)
                {
                  uint64_t v396 = 0;
                  goto LABEL_805;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v396 = 0;
          }
LABEL_805:
          BOOL v457 = v396 != 0;
          uint64_t v458 = 764;
          goto LABEL_850;
        case 0x5Cu:
          char v21 = objc_alloc_init(NTPBVideoGroupsConfig);
          objc_storeStrong((id *)(a1 + 616), v21);
          if (!PBReaderPlaceMark() || (NTPBVideoGroupsConfigReadFrom((uint64_t)v21, a2) & 1) == 0) {
            goto LABEL_886;
          }
          goto LABEL_306;
        case 0x5Du:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 544;
          goto LABEL_543;
        case 0x5Eu:
          char v401 = 0;
          unsigned int v402 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x1000000000uLL;
          while (2)
          {
            uint64_t v403 = *v3;
            uint64_t v404 = *(void *)(a2 + v403);
            unint64_t v405 = v404 + 1;
            if (v404 == -1 || v405 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v406 = *(unsigned char *)(*(void *)(a2 + *v7) + v404);
              *(void *)(a2 + v403) = v405;
              v24 |= (unint64_t)(v406 & 0x7F) << v401;
              if (v406 < 0)
              {
                v401 += 7;
                BOOL v14 = v402++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_809;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_809:
          uint64_t v456 = 320;
          goto LABEL_843;
        case 0x5Fu:
          char v407 = 0;
          unsigned int v408 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x2000uLL;
          while (2)
          {
            uint64_t v409 = *v3;
            uint64_t v410 = *(void *)(a2 + v409);
            unint64_t v411 = v410 + 1;
            if (v410 == -1 || v411 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v412 = *(unsigned char *)(*(void *)(a2 + *v7) + v410);
              *(void *)(a2 + v409) = v411;
              v24 |= (unint64_t)(v412 & 0x7F) << v407;
              if (v412 < 0)
              {
                v407 += 7;
                BOOL v14 = v408++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_813;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_813:
          uint64_t v456 = 136;
          goto LABEL_843;
        case 0x60u:
          char v413 = 0;
          unsigned int v414 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x200000000000000uLL;
          while (2)
          {
            uint64_t v415 = *v3;
            uint64_t v416 = *(void *)(a2 + v415);
            unint64_t v417 = v416 + 1;
            if (v416 == -1 || v417 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v418 = *(unsigned char *)(*(void *)(a2 + *v7) + v416);
              *(void *)(a2 + v415) = v417;
              v24 |= (unint64_t)(v418 & 0x7F) << v413;
              if (v418 < 0)
              {
                v413 += 7;
                BOOL v14 = v414++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_817;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_817:
          uint64_t v456 = 488;
          goto LABEL_843;
        case 0x61u:
          char v419 = 0;
          unsigned int v420 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x100000000000000uLL;
          while (2)
          {
            uint64_t v421 = *v3;
            unint64_t v422 = *(void *)(a2 + v421);
            if (v422 == -1 || v422 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v423 = *(unsigned char *)(*(void *)(a2 + *v7) + v422);
              *(void *)(a2 + v421) = v422 + 1;
              v24 |= (unint64_t)(v423 & 0x7F) << v419;
              if (v423 < 0)
              {
                v419 += 7;
                BOOL v14 = v420++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_821;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_821:
          uint64_t v456 = 480;
          goto LABEL_843;
        case 0x62u:
          char v424 = 0;
          unsigned int v425 = 0;
          uint64_t v271 = 0;
          *(_WORD *)(a1 + 780) |= 1u;
          while (2)
          {
            uint64_t v426 = *v3;
            unint64_t v427 = *(void *)(a2 + v426);
            if (v427 == -1 || v427 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v428 = *(unsigned char *)(*(void *)(a2 + *v7) + v427);
              *(void *)(a2 + v426) = v427 + 1;
              v271 |= (unint64_t)(v428 & 0x7F) << v424;
              if (v428 < 0)
              {
                v424 += 7;
                BOOL v14 = v425++ >= 9;
                if (v14)
                {
                  LODWORD(v271) = 0;
                  goto LABEL_825;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v271) = 0;
          }
LABEL_825:
          uint64_t v459 = 728;
LABEL_826:
          *(_DWORD *)(a1 + v459) = v271;
          goto LABEL_844;
        case 0x63u:
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 536;
LABEL_543:
          uint64_t v429 = *(void **)(a1 + v19);
          *(void *)(a1 + v19) = v18;

          goto LABEL_844;
        case 0x64u:
          char v430 = 0;
          unsigned int v431 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x1000000000000000uLL;
          while (2)
          {
            uint64_t v432 = *v3;
            unint64_t v433 = *(void *)(a2 + v432);
            if (v433 == -1 || v433 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v434 = *(unsigned char *)(*(void *)(a2 + *v7) + v433);
              *(void *)(a2 + v432) = v433 + 1;
              v24 |= (unint64_t)(v434 & 0x7F) << v430;
              if (v434 < 0)
              {
                v430 += 7;
                BOOL v14 = v431++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_830;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_830:
          uint64_t v456 = 512;
          goto LABEL_843;
        case 0x65u:
          char v435 = 0;
          unsigned int v436 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x800000000000000uLL;
          while (2)
          {
            uint64_t v437 = *v3;
            unint64_t v438 = *(void *)(a2 + v437);
            if (v438 == -1 || v438 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v439 = *(unsigned char *)(*(void *)(a2 + *v7) + v438);
              *(void *)(a2 + v437) = v438 + 1;
              v24 |= (unint64_t)(v439 & 0x7F) << v435;
              if (v439 < 0)
              {
                v435 += 7;
                BOOL v14 = v436++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_834;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_834:
          uint64_t v456 = 504;
          goto LABEL_843;
        case 0x66u:
          char v440 = 0;
          unsigned int v441 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x400000000000000uLL;
          while (2)
          {
            uint64_t v442 = *v3;
            unint64_t v443 = *(void *)(a2 + v442);
            if (v443 == -1 || v443 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v444 = *(unsigned char *)(*(void *)(a2 + *v7) + v443);
              *(void *)(a2 + v442) = v443 + 1;
              v24 |= (unint64_t)(v444 & 0x7F) << v440;
              if (v444 < 0)
              {
                v440 += 7;
                BOOL v14 = v441++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_838;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_838:
          uint64_t v456 = 496;
          goto LABEL_843;
        case 0x67u:
          char v445 = 0;
          unsigned int v446 = 0;
          uint64_t v24 = 0;
          *(void *)(a1 + 772) |= 0x20uLL;
          while (2)
          {
            uint64_t v447 = *v3;
            unint64_t v448 = *(void *)(a2 + v447);
            if (v448 == -1 || v448 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v449 = *(unsigned char *)(*(void *)(a2 + *v7) + v448);
              *(void *)(a2 + v447) = v448 + 1;
              v24 |= (unint64_t)(v449 & 0x7F) << v445;
              if (v449 < 0)
              {
                v445 += 7;
                BOOL v14 = v446++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_842;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v24 = 0;
          }
LABEL_842:
          uint64_t v456 = 72;
LABEL_843:
          *(void *)(a1 + v456) = v24;
          goto LABEL_844;
        case 0x68u:
          char v450 = 0;
          unsigned int v451 = 0;
          uint64_t v452 = 0;
          *(_WORD *)(a1 + 780) |= 0x20u;
          while (2)
          {
            uint64_t v453 = *v3;
            unint64_t v454 = *(void *)(a2 + v453);
            if (v454 == -1 || v454 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v455 = *(unsigned char *)(*(void *)(a2 + *v7) + v454);
              *(void *)(a2 + v453) = v454 + 1;
              v452 |= (unint64_t)(v455 & 0x7F) << v450;
              if (v455 < 0)
              {
                v450 += 7;
                BOOL v14 = v451++ >= 9;
                if (v14)
                {
                  uint64_t v452 = 0;
                  goto LABEL_849;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v452 = 0;
          }
LABEL_849:
          BOOL v457 = v452 != 0;
          uint64_t v458 = 763;
LABEL_850:
          *(unsigned char *)(a1 + v458) = v457;
          goto LABEL_844;
        case 0x69u:
          char v21 = objc_alloc_init(NTPBUserSegmentationApiConfiguration);
          objc_storeStrong((id *)(a1 + 736), v21);
          if (!PBReaderPlaceMark() || !NTPBUserSegmentationApiConfigurationReadFrom((uint64_t)v21, a2))
          {
LABEL_886:

            return 0;
          }
LABEL_306:
          PBReaderRecallMark();

LABEL_844:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          goto LABEL_844;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedSubscribeUnsubscribeReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x800u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_135;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_137;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_135:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_137:
          uint64_t v96 = 168;
          goto LABEL_187;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x20u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_141;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_141:
          uint64_t v96 = 76;
          goto LABEL_187;
        case 3u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 64;
          goto LABEL_133;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x200u;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_145:
          uint64_t v96 = 152;
          goto LABEL_187;
        case 5u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x40u;
          while (2)
          {
            uint64_t v38 = *v3;
            unint64_t v39 = *(void *)(a2 + v38);
            if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_149:
          uint64_t v96 = 88;
          goto LABEL_187;
        case 6u:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 176) |= 8u;
          while (2)
          {
            uint64_t v43 = *v3;
            unint64_t v44 = *(void *)(a2 + v43);
            if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
              *(void *)(a2 + v43) = v44 + 1;
              v19 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                BOOL v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_153:
          uint64_t v96 = 56;
          goto LABEL_187;
        case 7u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 176) |= 4u;
          while (2)
          {
            uint64_t v48 = *v3;
            unint64_t v49 = *(void *)(a2 + v48);
            if (v49 == -1 || v49 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
              *(void *)(a2 + v48) = v49 + 1;
              v19 |= (unint64_t)(v50 & 0x7F) << v46;
              if (v50 < 0)
              {
                v46 += 7;
                BOOL v14 = v47++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_157:
          uint64_t v96 = 52;
          goto LABEL_187;
        case 8u:
          uint64_t v29 = PBReaderReadData();
          uint64_t v30 = 80;
          goto LABEL_133;
        case 9u:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 176) |= 2u;
          while (2)
          {
            uint64_t v53 = *v3;
            unint64_t v54 = *(void *)(a2 + v53);
            if (v54 == -1 || v54 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v54);
              *(void *)(a2 + v53) = v54 + 1;
              v19 |= (unint64_t)(v55 & 0x7F) << v51;
              if (v55 < 0)
              {
                v51 += 7;
                BOOL v14 = v52++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_161;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_161:
          uint64_t v96 = 48;
          goto LABEL_187;
        case 0xAu:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 144;
          goto LABEL_133;
        case 0xBu:
          char v56 = PBReaderReadString();
          if (v56) {
            [(id)a1 addSubscribedFeedIds:v56];
          }

          continue;
        case 0xCu:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v59 = 0;
          *(_WORD *)(a1 + 176) |= 0x1000u;
          while (2)
          {
            uint64_t v60 = *v3;
            unint64_t v61 = *(void *)(a2 + v60);
            if (v61 == -1 || v61 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
              *(void *)(a2 + v60) = v61 + 1;
              v59 |= (unint64_t)(v62 & 0x7F) << v57;
              if (v62 < 0)
              {
                v57 += 7;
                BOOL v14 = v58++ >= 9;
                if (v14)
                {
                  uint64_t v59 = 0;
                  goto LABEL_165;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v59 = 0;
          }
LABEL_165:
          BOOL v97 = v59 != 0;
          uint64_t v98 = 172;
          goto LABEL_174;
        case 0xDu:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 96;
          goto LABEL_133;
        case 0xEu:
          char v63 = 0;
          unsigned int v64 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x80u;
          while (2)
          {
            uint64_t v65 = *v3;
            unint64_t v66 = *(void *)(a2 + v65);
            if (v66 == -1 || v66 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
              *(void *)(a2 + v65) = v66 + 1;
              v19 |= (unint64_t)(v67 & 0x7F) << v63;
              if (v67 < 0)
              {
                v63 += 7;
                BOOL v14 = v64++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_169;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_169:
          uint64_t v96 = 104;
          goto LABEL_187;
        case 0xFu:
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v70 = 0;
          *(_WORD *)(a1 + 176) |= 0x2000u;
          while (2)
          {
            uint64_t v71 = *v3;
            unint64_t v72 = *(void *)(a2 + v71);
            if (v72 == -1 || v72 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v73 = *(unsigned char *)(*(void *)(a2 + *v7) + v72);
              *(void *)(a2 + v71) = v72 + 1;
              v70 |= (unint64_t)(v73 & 0x7F) << v68;
              if (v73 < 0)
              {
                v68 += 7;
                BOOL v14 = v69++ >= 9;
                if (v14)
                {
                  uint64_t v70 = 0;
                  goto LABEL_173;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v70 = 0;
          }
LABEL_173:
          BOOL v97 = v70 != 0;
          uint64_t v98 = 173;
LABEL_174:
          *(unsigned char *)(a1 + v98) = v97;
          continue;
        case 0x10u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 24;
          goto LABEL_133;
        case 0x11u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 32;
          goto LABEL_133;
        case 0x12u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 40;
          goto LABEL_133;
        case 0x13u:
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x100u;
          while (2)
          {
            uint64_t v76 = *v3;
            unint64_t v77 = *(void *)(a2 + v76);
            if (v77 == -1 || v77 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
              *(void *)(a2 + v76) = v77 + 1;
              v19 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                BOOL v14 = v75++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_178;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_178:
          uint64_t v96 = 136;
          goto LABEL_187;
        case 0x14u:
          char v79 = 0;
          unsigned int v80 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x400u;
          while (2)
          {
            uint64_t v81 = *v3;
            unint64_t v82 = *(void *)(a2 + v81);
            if (v82 == -1 || v82 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v83 = *(unsigned char *)(*(void *)(a2 + *v7) + v82);
              *(void *)(a2 + v81) = v82 + 1;
              v19 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                BOOL v14 = v80++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_182;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_182:
          uint64_t v96 = 156;
          goto LABEL_187;
        case 0x15u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 16;
          goto LABEL_133;
        case 0x16u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 120;
          goto LABEL_133;
        case 0x17u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 128;
          goto LABEL_133;
        case 0x18u:
          char v84 = 0;
          unsigned int v85 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x10u;
          while (2)
          {
            uint64_t v86 = *v3;
            unint64_t v87 = *(void *)(a2 + v86);
            if (v87 == -1 || v87 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v88 = *(unsigned char *)(*(void *)(a2 + *v7) + v87);
              *(void *)(a2 + v86) = v87 + 1;
              v19 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                BOOL v14 = v85++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_186;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_186:
          uint64_t v96 = 72;
LABEL_187:
          *(_DWORD *)(a1 + v96) = v19;
          continue;
        case 0x19u:
          char v89 = 0;
          unsigned int v90 = 0;
          uint64_t v91 = 0;
          *(_WORD *)(a1 + 176) |= 1u;
          break;
        case 0x1Au:
          uint64_t v29 = PBReaderReadData();
          uint64_t v30 = 112;
LABEL_133:
          uint64_t v95 = *(void **)(a1 + v30);
          *(void *)(a1 + v30) = v29;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v92 = *v3;
        unint64_t v93 = *(void *)(a2 + v92);
        if (v93 == -1 || v93 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v94 = *(unsigned char *)(*(void *)(a2 + *v7) + v93);
        *(void *)(a2 + v92) = v93 + 1;
        v91 |= (unint64_t)(v94 & 0x7F) << v89;
        if ((v94 & 0x80) == 0) {
          goto LABEL_191;
        }
        v89 += 7;
        BOOL v14 = v90++ >= 9;
        if (v14)
        {
          uint64_t v91 = 0;
          goto LABEL_193;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_191:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v91 = 0;
      }
LABEL_193:
      *(void *)(a1 + 8) = v91;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBLocalNotificationReceivedReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 12) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_31:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBCoverArticleWidgetExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 24;
      }
      else
      {
        if (v17 == 2)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v24 = *v3;
            unint64_t v25 = *(void *)(a2 + v24);
            if (v25 == -1 || v25 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if ((v26 & 0x80) == 0) {
              goto LABEL_34;
            }
            v21 += 7;
            BOOL v14 = v22++ >= 9;
            if (v14)
            {
              LODWORD(v23) = 0;
              goto LABEL_36;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 8) = v23;
          continue;
        }
        if (v17 != 1)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 16;
      }
      uint64_t v20 = *(void **)(a1 + v19);
      *(void *)(a1 + v19) = v18;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBNoUserActionReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(NTPBViewInfo);
        [a1 addVisibleViews:v17];
        if (!PBReaderPlaceMark() || (NTPBViewInfoReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAppSessionStartReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 244) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_176;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_178;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_176:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_178:
        *(void *)(a1 + 8) = v19;
        goto LABEL_240;
      case 2u:
        uint64_t v24 = objc_alloc_init(NTPBViewInfo);
        [(id)a1 addVisibleViews:v24];
        if (!PBReaderPlaceMark() || (NTPBViewInfoReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_252;
        }
        goto LABEL_113;
      case 3u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 4u;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_182:
        uint64_t v117 = 48;
        goto LABEL_239;
      case 4u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x400u;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v27 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_186:
        uint64_t v117 = 184;
        goto LABEL_239;
      case 5u:
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 152;
        goto LABEL_73;
      case 6u:
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 160;
        goto LABEL_73;
      case 7u:
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 192;
        goto LABEL_73;
      case 8u:
        PBReaderReadString();
        uint64_t v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24) {
          [(id)a1 addPaidSubscriptionChannelIds:v24];
        }
        goto LABEL_118;
      case 9u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(_DWORD *)(a1 + 244) |= 0x20000u;
        while (2)
        {
          uint64_t v41 = *v3;
          unint64_t v42 = *(void *)(a2 + v41);
          if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
            *(void *)(a2 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (v14)
              {
                uint64_t v40 = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v40 = 0;
        }
LABEL_190:
        BOOL v118 = v40 != 0;
        uint64_t v119 = 242;
        goto LABEL_250;
      case 0xAu:
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 104;
        goto LABEL_73;
      case 0xBu:
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 112;
        goto LABEL_73;
      case 0xCu:
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 120;
        goto LABEL_73;
      case 0xDu:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x40u;
        while (2)
        {
          uint64_t v46 = *v3;
          unint64_t v47 = *(void *)(a2 + v46);
          if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v47 + 1;
            v27 |= (unint64_t)(v48 & 0x7F) << v44;
            if (v48 < 0)
            {
              v44 += 7;
              BOOL v14 = v45++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_194:
        uint64_t v117 = 132;
        goto LABEL_239;
      case 0xEu:
        PBReaderReadString();
        uint64_t v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24) {
          [(id)a1 addNotificationChannelIds:v24];
        }
        goto LABEL_118;
      case 0xFu:
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 80;
        goto LABEL_73;
      case 0x10u:
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 32;
        goto LABEL_73;
      case 0x11u:
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 40;
        goto LABEL_73;
      case 0x12u:
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 56;
LABEL_73:
        unint64_t v49 = *(void **)(a1 + v37);
        *(void *)(a1 + v37) = v36;

        goto LABEL_240;
      case 0x13u:
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x10u;
        while (2)
        {
          uint64_t v52 = *v3;
          unint64_t v53 = *(void *)(a2 + v52);
          if (v53 == -1 || v53 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v53 + 1;
            v27 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              BOOL v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_198;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_198:
        uint64_t v117 = 96;
        goto LABEL_239;
      case 0x14u:
        PBReaderReadString();
        uint64_t v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24) {
          [(id)a1 addSubscribedFeedIds:v24];
        }
        goto LABEL_118;
      case 0x15u:
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x200u;
        while (2)
        {
          uint64_t v57 = *v3;
          unint64_t v58 = *(void *)(a2 + v57);
          if (v58 == -1 || v58 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v58);
            *(void *)(a2 + v57) = v58 + 1;
            v27 |= (unint64_t)(v59 & 0x7F) << v55;
            if (v59 < 0)
            {
              v55 += 7;
              BOOL v14 = v56++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_202:
        uint64_t v117 = 172;
        goto LABEL_239;
      case 0x16u:
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x2000u;
        while (2)
        {
          uint64_t v62 = *v3;
          unint64_t v63 = *(void *)(a2 + v62);
          if (v63 == -1 || v63 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
            *(void *)(a2 + v62) = v63 + 1;
            v27 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              BOOL v14 = v61++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_206:
        uint64_t v117 = 232;
        goto LABEL_239;
      case 0x17u:
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x4000u;
        while (2)
        {
          uint64_t v67 = *v3;
          unint64_t v68 = *(void *)(a2 + v67);
          if (v68 == -1 || v68 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(a2 + *v7) + v68);
            *(void *)(a2 + v67) = v68 + 1;
            v27 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              BOOL v14 = v66++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_210;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_210:
        uint64_t v117 = 236;
        goto LABEL_239;
      case 0x18u:
        char v70 = 0;
        unsigned int v71 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x1000u;
        while (2)
        {
          uint64_t v72 = *v3;
          unint64_t v73 = *(void *)(a2 + v72);
          if (v73 == -1 || v73 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(a2 + *v7) + v73);
            *(void *)(a2 + v72) = v73 + 1;
            v27 |= (unint64_t)(v74 & 0x7F) << v70;
            if (v74 < 0)
            {
              v70 += 7;
              BOOL v14 = v71++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_214;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_214:
        uint64_t v117 = 216;
        goto LABEL_239;
      case 0x19u:
        uint64_t v24 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 224), v24);
        if PBReaderPlaceMark() && (NTPBWidgetEngagementReadFrom((uint64_t)v24, a2))
        {
LABEL_113:
          PBReaderRecallMark();
LABEL_118:

LABEL_240:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_252:

        return 0;
      case 0x1Au:
        PBReaderReadString();
        uint64_t v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24) {
          [(id)a1 addAutoSubscribedFeedIds:v24];
        }
        goto LABEL_118;
      case 0x1Bu:
        PBReaderReadString();
        uint64_t v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24) {
          [(id)a1 addGroupableFeedIds:v24];
        }
        goto LABEL_118;
      case 0x1Cu:
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x80u;
        while (2)
        {
          uint64_t v77 = *v3;
          unint64_t v78 = *(void *)(a2 + v77);
          if (v78 == -1 || v78 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
            *(void *)(a2 + v77) = v78 + 1;
            v27 |= (unint64_t)(v79 & 0x7F) << v75;
            if (v79 < 0)
            {
              v75 += 7;
              BOOL v14 = v76++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_218;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_218:
        uint64_t v117 = 144;
        goto LABEL_239;
      case 0x1Du:
        char v80 = 0;
        unsigned int v81 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x100u;
        while (2)
        {
          uint64_t v82 = *v3;
          unint64_t v83 = *(void *)(a2 + v82);
          if (v83 == -1 || v83 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(a2 + *v7) + v83);
            *(void *)(a2 + v82) = v83 + 1;
            v27 |= (unint64_t)(v84 & 0x7F) << v80;
            if (v84 < 0)
            {
              v80 += 7;
              BOOL v14 = v81++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_222;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_222:
        uint64_t v117 = 168;
        goto LABEL_239;
      case 0x1Eu:
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 2u;
        while (2)
        {
          uint64_t v87 = *v3;
          unint64_t v88 = *(void *)(a2 + v87);
          if (v88 == -1 || v88 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v89 = *(unsigned char *)(*(void *)(a2 + *v7) + v88);
            *(void *)(a2 + v87) = v88 + 1;
            v27 |= (unint64_t)(v89 & 0x7F) << v85;
            if (v89 < 0)
            {
              v85 += 7;
              BOOL v14 = v86++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_226;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_226:
        uint64_t v117 = 16;
        goto LABEL_239;
      case 0x1Fu:
        char v90 = 0;
        unsigned int v91 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 8u;
        while (2)
        {
          uint64_t v92 = *v3;
          unint64_t v93 = *(void *)(a2 + v92);
          if (v93 == -1 || v93 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(a2 + *v7) + v93);
            *(void *)(a2 + v92) = v93 + 1;
            v27 |= (unint64_t)(v94 & 0x7F) << v90;
            if (v94 < 0)
            {
              v90 += 7;
              BOOL v14 = v91++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_230;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_230:
        uint64_t v117 = 72;
        goto LABEL_239;
      case 0x20u:
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x800u;
        while (2)
        {
          uint64_t v97 = *v3;
          unint64_t v98 = *(void *)(a2 + v97);
          if (v98 == -1 || v98 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v99 = *(unsigned char *)(*(void *)(a2 + *v7) + v98);
            *(void *)(a2 + v97) = v98 + 1;
            v27 |= (unint64_t)(v99 & 0x7F) << v95;
            if (v99 < 0)
            {
              v95 += 7;
              BOOL v14 = v96++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_234;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_234:
        uint64_t v117 = 200;
        goto LABEL_239;
      case 0x21u:
        char v100 = 0;
        unsigned int v101 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x20u;
        while (2)
        {
          uint64_t v102 = *v3;
          unint64_t v103 = *(void *)(a2 + v102);
          if (v103 == -1 || v103 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v104 = *(unsigned char *)(*(void *)(a2 + *v7) + v103);
            *(void *)(a2 + v102) = v103 + 1;
            v27 |= (unint64_t)(v104 & 0x7F) << v100;
            if (v104 < 0)
            {
              v100 += 7;
              BOOL v14 = v101++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_238;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_238:
        uint64_t v117 = 128;
LABEL_239:
        *(_DWORD *)(a1 + v117) = v27;
        goto LABEL_240;
      case 0x22u:
        char v105 = 0;
        unsigned int v106 = 0;
        uint64_t v107 = 0;
        *(_DWORD *)(a1 + 244) |= 0x10000u;
        while (2)
        {
          uint64_t v108 = *v3;
          unint64_t v109 = *(void *)(a2 + v108);
          if (v109 == -1 || v109 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v110 = *(unsigned char *)(*(void *)(a2 + *v7) + v109);
            *(void *)(a2 + v108) = v109 + 1;
            v107 |= (unint64_t)(v110 & 0x7F) << v105;
            if (v110 < 0)
            {
              v105 += 7;
              BOOL v14 = v106++ >= 9;
              if (v14)
              {
                uint64_t v107 = 0;
                goto LABEL_245;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v107 = 0;
        }
LABEL_245:
        BOOL v118 = v107 != 0;
        uint64_t v119 = 241;
        goto LABEL_250;
      case 0x23u:
        char v111 = 0;
        unsigned int v112 = 0;
        uint64_t v113 = 0;
        *(_DWORD *)(a1 + 244) |= 0x8000u;
        while (2)
        {
          uint64_t v114 = *v3;
          unint64_t v115 = *(void *)(a2 + v114);
          if (v115 == -1 || v115 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v116 = *(unsigned char *)(*(void *)(a2 + *v7) + v115);
            *(void *)(a2 + v114) = v115 + 1;
            v113 |= (unint64_t)(v116 & 0x7F) << v111;
            if (v116 < 0)
            {
              v111 += 7;
              BOOL v14 = v112++ >= 9;
              if (v14)
              {
                uint64_t v113 = 0;
                goto LABEL_249;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v113 = 0;
        }
LABEL_249:
        BOOL v118 = v113 != 0;
        uint64_t v119 = 240;
LABEL_250:
        *(unsigned char *)(a1 + v119) = v118;
        goto LABEL_240;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_240;
    }
  }
}

uint64_t NTPBShareInformationScreenViewReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 88) |= 8u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_72;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_74;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_72:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_74:
          uint64_t v54 = 80;
          goto LABEL_87;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 88) |= 4u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_78:
          uint64_t v54 = 56;
          goto LABEL_87;
        case 3u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 88) |= 1u;
          while (2)
          {
            uint64_t v31 = *v3;
            unint64_t v32 = *(void *)(a2 + v31);
            if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
              *(void *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                BOOL v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_82:
          uint64_t v54 = 48;
          goto LABEL_87;
        case 4u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 32;
          goto LABEL_70;
        case 5u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 24;
          goto LABEL_70;
        case 6u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 72;
          goto LABEL_70;
        case 7u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 64;
          goto LABEL_70;
        case 8u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 8;
          goto LABEL_70;
        case 9u:
          uint64_t v34 = PBReaderReadData();
          uint64_t v35 = 16;
          goto LABEL_70;
        case 0xAu:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 88) |= 2u;
          while (2)
          {
            uint64_t v38 = *v3;
            unint64_t v39 = *(void *)(a2 + v38);
            if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_86:
          uint64_t v54 = 52;
LABEL_87:
          *(_DWORD *)(a1 + v54) = v19;
          continue;
        case 0xBu:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          *(unsigned char *)(a1 + 88) |= 0x20u;
          while (2)
          {
            uint64_t v44 = *v3;
            unint64_t v45 = *(void *)(a2 + v44);
            if (v45 == -1 || v45 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
              *(void *)(a2 + v44) = v45 + 1;
              v43 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                BOOL v14 = v42++ >= 9;
                if (v14)
                {
                  uint64_t v43 = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v43 = 0;
          }
LABEL_91:
          BOOL v55 = v43 != 0;
          uint64_t v56 = 85;
          goto LABEL_96;
        case 0xCu:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v49 = 0;
          *(unsigned char *)(a1 + 88) |= 0x10u;
          break;
        case 0xDu:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 40;
LABEL_70:
          unint64_t v53 = *(void **)(a1 + v35);
          *(void *)(a1 + v35) = v34;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v50 = *v3;
        unint64_t v51 = *(void *)(a2 + v50);
        if (v51 == -1 || v51 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
        *(void *)(a2 + v50) = v51 + 1;
        v49 |= (unint64_t)(v52 & 0x7F) << v47;
        if ((v52 & 0x80) == 0) {
          goto LABEL_93;
        }
        v47 += 7;
        BOOL v14 = v48++ >= 9;
        if (v14)
        {
          uint64_t v49 = 0;
          goto LABEL_95;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_93:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v49 = 0;
      }
LABEL_95:
      BOOL v55 = v49 != 0;
      uint64_t v56 = 84;
LABEL_96:
      *(unsigned char *)(a1 + v56) = v55;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBContentAndRelevanceInfoReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 16) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4))
          {
            char v24 = &OBJC_IVAR___NTPBContentAndRelevanceInfo__contentRating;
            goto LABEL_38;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            break;
          }
          v17 += 7;
          BOOL v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            char v24 = &OBJC_IVAR___NTPBContentAndRelevanceInfo__contentRating;
            goto LABEL_41;
          }
        }
        char v24 = &OBJC_IVAR___NTPBContentAndRelevanceInfo__contentRating;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_42:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v25 = 0;
    unsigned int v26 = 0;
    uint64_t v19 = 0;
    *(unsigned char *)(a1 + 16) |= 2u;
    while (1)
    {
      uint64_t v27 = *v3;
      unint64_t v28 = *(void *)(a2 + v27);
      if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
      *(void *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        char v24 = &OBJC_IVAR___NTPBContentAndRelevanceInfo__relevanceRating;
        goto LABEL_39;
      }
      v25 += 7;
      BOOL v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        char v24 = &OBJC_IVAR___NTPBContentAndRelevanceInfo__relevanceRating;
        goto LABEL_41;
      }
    }
    char v24 = &OBJC_IVAR___NTPBContentAndRelevanceInfo__relevanceRating;
LABEL_38:
    *(unsigned char *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBWebAccessScreenViewReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 100) |= 8u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_80;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_82;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_80:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_82:
          uint64_t v59 = 88;
          goto LABEL_108;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 100) |= 4u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_86:
          uint64_t v59 = 56;
          goto LABEL_108;
        case 3u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 100) |= 1u;
          while (2)
          {
            uint64_t v31 = *v3;
            unint64_t v32 = *(void *)(a2 + v31);
            if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
              *(void *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                BOOL v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_90:
          uint64_t v59 = 48;
          goto LABEL_108;
        case 4u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 32;
          goto LABEL_71;
        case 5u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 24;
          goto LABEL_71;
        case 6u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 72;
          goto LABEL_71;
        case 7u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 64;
          goto LABEL_71;
        case 8u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 8;
          goto LABEL_71;
        case 9u:
          uint64_t v34 = PBReaderReadData();
          uint64_t v35 = 16;
          goto LABEL_71;
        case 0xAu:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 100) |= 2u;
          while (2)
          {
            uint64_t v38 = *v3;
            unint64_t v39 = *(void *)(a2 + v38);
            if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_94;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_94:
          uint64_t v59 = 52;
          goto LABEL_108;
        case 0xBu:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          *(unsigned char *)(a1 + 100) |= 0x40u;
          while (2)
          {
            uint64_t v44 = *v3;
            unint64_t v45 = *(void *)(a2 + v44);
            if (v45 == -1 || v45 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
              *(void *)(a2 + v44) = v45 + 1;
              v43 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                BOOL v14 = v42++ >= 9;
                if (v14)
                {
                  uint64_t v43 = 0;
                  goto LABEL_98;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v43 = 0;
          }
LABEL_98:
          BOOL v60 = v43 != 0;
          uint64_t v61 = 97;
          goto LABEL_103;
        case 0xCu:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v49 = 0;
          *(unsigned char *)(a1 + 100) |= 0x20u;
          while (2)
          {
            uint64_t v50 = *v3;
            unint64_t v51 = *(void *)(a2 + v50);
            if (v51 == -1 || v51 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
              *(void *)(a2 + v50) = v51 + 1;
              v49 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                BOOL v14 = v48++ >= 9;
                if (v14)
                {
                  uint64_t v49 = 0;
                  goto LABEL_102;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v49 = 0;
          }
LABEL_102:
          BOOL v60 = v49 != 0;
          uint64_t v61 = 96;
LABEL_103:
          *(unsigned char *)(a1 + v61) = v60;
          continue;
        case 0xDu:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 40;
          goto LABEL_71;
        case 0xEu:
          uint64_t v34 = PBReaderReadData();
          uint64_t v35 = 80;
LABEL_71:
          unint64_t v53 = *(void **)(a1 + v35);
          *(void *)(a1 + v35) = v34;

          continue;
        case 0xFu:
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 100) |= 0x10u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v56 = *v3;
        unint64_t v57 = *(void *)(a2 + v56);
        if (v57 == -1 || v57 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
        *(void *)(a2 + v56) = v57 + 1;
        v19 |= (unint64_t)(v58 & 0x7F) << v54;
        if ((v58 & 0x80) == 0) {
          goto LABEL_105;
        }
        v54 += 7;
        BOOL v14 = v55++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_107;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_105:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_107:
      uint64_t v59 = 92;
LABEL_108:
      *(_DWORD *)(a1 + v59) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBEndpointConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = 0;
              unsigned int v18 = 0;
              uint64_t v19 = 0;
              break;
            case 2u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 24;
              goto LABEL_36;
            case 3u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 40;
              goto LABEL_36;
            case 4u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 48;
              goto LABEL_36;
            case 5u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 56;
              goto LABEL_36;
            case 6u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 8;
              goto LABEL_36;
            case 7u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 16;
              goto LABEL_36;
            case 8u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 72;
              goto LABEL_36;
            case 9u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 64;
LABEL_36:
              uint64_t v26 = *(void **)(a1 + v25);
              *(void *)(a1 + v25) = v24;

              goto LABEL_37;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_37:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_40;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_42;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_42:
          *(_DWORD *)(a1 + 32) = v19;
          goto LABEL_37;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTodaySectionConfigReadFrom(uint64_t a1, unsigned char *a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)&a2[*MEMORY[0x263F62298]] < *(void *)&a2[*MEMORY[0x263F62288]])
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!a2[*v5])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)&a2[v11];
          if (v12 == -1 || v12 >= *(void *)&a2[*v4]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&a2[*v7] + v12);
          *(void *)&a2[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = a2[*v5];
            goto LABEL_14;
          }
        }
        a2[*v5] = 1;
LABEL_12:
        int v15 = a2[*v5];
        if (a2[*v5]) {
          unint64_t v10 = 0;
        }
LABEL_14:
        int v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 0u:
              uint64_t String = (void *)PBReaderReadString();

              id v19 = String;
              uint64_t v20 = 216;
              goto LABEL_190;
            case 1u:
              unint64_t v21 = (void *)PBReaderReadString();

              id v19 = v21;
              uint64_t v20 = 192;
              goto LABEL_190;
            case 2u:
              char v22 = 0;
              unsigned int v23 = 0;
              uint64_t v24 = 0;
              *(_DWORD *)(a1 + 316) |= 2u;
              while (2)
              {
                uint64_t v25 = *v3;
                unint64_t v26 = *(void *)&a2[v25];
                if (v26 == -1 || v26 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v27 = *(unsigned char *)(*(void *)&a2[*v7] + v26);
                  *(void *)&a2[v25] = v26 + 1;
                  v24 |= (unint64_t)(v27 & 0x7F) << v22;
                  if (v27 < 0)
                  {
                    v22 += 7;
                    BOOL v14 = v23++ >= 9;
                    if (v14)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_201;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v24 = 0;
              }
LABEL_201:
              uint64_t v146 = 40;
              goto LABEL_272;
            case 3u:
              char v28 = 0;
              unsigned int v29 = 0;
              uint64_t v30 = 0;
              *(_DWORD *)(a1 + 316) |= 0x1000u;
              while (2)
              {
                uint64_t v31 = *v3;
                unint64_t v32 = *(void *)&a2[v31];
                if (v32 == -1 || v32 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v33 = *(unsigned char *)(*(void *)&a2[*v7] + v32);
                  *(void *)&a2[v31] = v32 + 1;
                  v30 |= (unint64_t)(v33 & 0x7F) << v28;
                  if (v33 < 0)
                  {
                    v28 += 7;
                    BOOL v14 = v29++ >= 9;
                    if (v14)
                    {
                      LODWORD(v30) = 0;
                      goto LABEL_205;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                LODWORD(v30) = 0;
              }
LABEL_205:
              uint64_t v147 = 288;
              goto LABEL_262;
            case 4u:
              char v34 = 0;
              unsigned int v35 = 0;
              uint64_t v24 = 0;
              *(_DWORD *)(a1 + 316) |= 1u;
              while (2)
              {
                uint64_t v36 = *v3;
                unint64_t v37 = *(void *)&a2[v36];
                if (v37 == -1 || v37 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v38 = *(unsigned char *)(*(void *)&a2[*v7] + v37);
                  *(void *)&a2[v36] = v37 + 1;
                  v24 |= (unint64_t)(v38 & 0x7F) << v34;
                  if (v38 < 0)
                  {
                    v34 += 7;
                    BOOL v14 = v35++ >= 9;
                    if (v14)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_209;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v24 = 0;
              }
LABEL_209:
              uint64_t v146 = 32;
              goto LABEL_272;
            case 5u:
              char v39 = 0;
              unsigned int v40 = 0;
              uint64_t v30 = 0;
              *(_DWORD *)(a1 + 316) |= 0x800u;
              while (2)
              {
                uint64_t v41 = *v3;
                unint64_t v42 = *(void *)&a2[v41];
                if (v42 == -1 || v42 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v43 = *(unsigned char *)(*(void *)&a2[*v7] + v42);
                  *(void *)&a2[v41] = v42 + 1;
                  v30 |= (unint64_t)(v43 & 0x7F) << v39;
                  if (v43 < 0)
                  {
                    v39 += 7;
                    BOOL v14 = v40++ >= 9;
                    if (v14)
                    {
                      LODWORD(v30) = 0;
                      goto LABEL_213;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                LODWORD(v30) = 0;
              }
LABEL_213:
              uint64_t v147 = 276;
              goto LABEL_262;
            case 6u:
              uint64_t v44 = objc_alloc_init(NTPBArticleListTodaySectionSpecificConfig);

              *(void *)(a1 + 120) = v44;
              if (!PBReaderPlaceMark()
                || (NTPBArticleListTodaySectionSpecificConfigReadFrom((uint64_t)v44, (uint64_t)a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_177;
            case 7u:
              unint64_t v45 = objc_alloc_init(NTPBForYouTodaySectionSpecificConfig);

              *(void *)(a1 + 160) = v45;
              if (!PBReaderPlaceMark()
                || (NTPBForYouTodaySectionSpecificConfigReadFrom((uint64_t)v45, (uint64_t)a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_177;
            case 8u:
              char v46 = 0;
              unsigned int v47 = 0;
              uint64_t v24 = 0;
              *(_DWORD *)(a1 + 316) |= 0x20u;
              while (2)
              {
                uint64_t v48 = *v3;
                unint64_t v49 = *(void *)&a2[v48];
                if (v49 == -1 || v49 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v50 = *(unsigned char *)(*(void *)&a2[*v7] + v49);
                  *(void *)&a2[v48] = v49 + 1;
                  v24 |= (unint64_t)(v50 & 0x7F) << v46;
                  if (v50 < 0)
                  {
                    v46 += 7;
                    BOOL v14 = v47++ >= 9;
                    if (v14)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_217;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v24 = 0;
              }
LABEL_217:
              uint64_t v146 = 72;
              goto LABEL_272;
            case 9u:
              char v51 = 0;
              unsigned int v52 = 0;
              uint64_t v24 = 0;
              *(_DWORD *)(a1 + 316) |= 0x10u;
              while (2)
              {
                uint64_t v53 = *v3;
                unint64_t v54 = *(void *)&a2[v53];
                if (v54 == -1 || v54 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v55 = *(unsigned char *)(*(void *)&a2[*v7] + v54);
                  *(void *)&a2[v53] = v54 + 1;
                  v24 |= (unint64_t)(v55 & 0x7F) << v51;
                  if (v55 < 0)
                  {
                    v51 += 7;
                    BOOL v14 = v52++ >= 9;
                    if (v14)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_221;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v24 = 0;
              }
LABEL_221:
              uint64_t v146 = 64;
              goto LABEL_272;
            case 0xAu:
              char v56 = 0;
              unsigned int v57 = 0;
              uint64_t v24 = 0;
              *(_DWORD *)(a1 + 316) |= 8u;
              while (2)
              {
                uint64_t v58 = *v3;
                unint64_t v59 = *(void *)&a2[v58];
                if (v59 == -1 || v59 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v60 = *(unsigned char *)(*(void *)&a2[*v7] + v59);
                  *(void *)&a2[v58] = v59 + 1;
                  v24 |= (unint64_t)(v60 & 0x7F) << v56;
                  if (v60 < 0)
                  {
                    v56 += 7;
                    BOOL v14 = v57++ >= 9;
                    if (v14)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_225;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v24 = 0;
              }
LABEL_225:
              uint64_t v146 = 56;
              goto LABEL_272;
            case 0xBu:
              char v61 = 0;
              unsigned int v62 = 0;
              uint64_t v24 = 0;
              *(_DWORD *)(a1 + 316) |= 4u;
              while (2)
              {
                uint64_t v63 = *v3;
                unint64_t v64 = *(void *)&a2[v63];
                if (v64 == -1 || v64 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v65 = *(unsigned char *)(*(void *)&a2[*v7] + v64);
                  *(void *)&a2[v63] = v64 + 1;
                  v24 |= (unint64_t)(v65 & 0x7F) << v61;
                  if (v65 < 0)
                  {
                    v61 += 7;
                    BOOL v14 = v62++ >= 9;
                    if (v14)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_229;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v24 = 0;
              }
LABEL_229:
              uint64_t v146 = 48;
              goto LABEL_272;
            case 0xCu:
              char v66 = 0;
              unsigned int v67 = 0;
              uint64_t v30 = 0;
              *(_DWORD *)(a1 + 316) |= 0x2000u;
              while (2)
              {
                uint64_t v68 = *v3;
                unint64_t v69 = *(void *)&a2[v68];
                if (v69 == -1 || v69 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v70 = *(unsigned char *)(*(void *)&a2[*v7] + v69);
                  *(void *)&a2[v68] = v69 + 1;
                  v30 |= (unint64_t)(v70 & 0x7F) << v66;
                  if (v70 < 0)
                  {
                    v66 += 7;
                    BOOL v14 = v67++ >= 9;
                    if (v14)
                    {
                      LODWORD(v30) = 0;
                      goto LABEL_233;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                LODWORD(v30) = 0;
              }
LABEL_233:
              uint64_t v147 = 292;
              goto LABEL_262;
            case 0xDu:
              unsigned int v71 = objc_alloc_init(NTPBArticleIDsTodaySectionSpecificConfig);

              *(void *)(a1 + 112) = v71;
              if (!PBReaderPlaceMark()
                || (NTPBArticleIDsTodaySectionSpecificConfigReadFrom(v71, (uint64_t)a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_177;
            case 0xEu:
              char v72 = 0;
              unsigned int v73 = 0;
              uint64_t v74 = 0;
              *(_DWORD *)(a1 + 316) |= 0x20000u;
              while (2)
              {
                uint64_t v75 = *v3;
                unint64_t v76 = *(void *)&a2[v75];
                if (v76 == -1 || v76 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v77 = *(unsigned char *)(*(void *)&a2[*v7] + v76);
                  *(void *)&a2[v75] = v76 + 1;
                  v74 |= (unint64_t)(v77 & 0x7F) << v72;
                  if (v77 < 0)
                  {
                    v72 += 7;
                    BOOL v14 = v73++ >= 9;
                    if (v14)
                    {
                      uint64_t v74 = 0;
                      goto LABEL_237;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v74 = 0;
              }
LABEL_237:
              BOOL v148 = v74 != 0;
              uint64_t v149 = 315;
              goto LABEL_267;
            case 0xFu:
              unint64_t v78 = (void *)PBReaderReadString();

              id v19 = v78;
              uint64_t v20 = 232;
              goto LABEL_190;
            case 0x10u:
              char v79 = objc_alloc_init(NTPBPersonalizedTodaySectionSpecificConfig);

              *(void *)(a1 + 264) = v79;
              if (!PBReaderPlaceMark()
                || (NTPBPersonalizedTodaySectionSpecificConfigReadFrom((uint64_t)v79, (uint64_t)a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_177;
            case 0x11u:
              char v80 = 0;
              unsigned int v81 = 0;
              uint64_t v24 = 0;
              *(_DWORD *)(a1 + 316) |= 0x200u;
              while (2)
              {
                uint64_t v82 = *v3;
                unint64_t v83 = *(void *)&a2[v82];
                if (v83 == -1 || v83 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v84 = *(unsigned char *)(*(void *)&a2[*v7] + v83);
                  *(void *)&a2[v82] = v83 + 1;
                  v24 |= (unint64_t)(v84 & 0x7F) << v80;
                  if (v84 < 0)
                  {
                    v80 += 7;
                    BOOL v14 = v81++ >= 9;
                    if (v14)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_241;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v24 = 0;
              }
LABEL_241:
              uint64_t v146 = 104;
              goto LABEL_272;
            case 0x12u:
              char v85 = (void *)PBReaderReadString();

              id v19 = v85;
              uint64_t v20 = 240;
              goto LABEL_190;
            case 0x14u:
              char v86 = 0;
              unsigned int v87 = 0;
              uint64_t v88 = 0;
              *(_DWORD *)(a1 + 316) |= 0x10000u;
              while (2)
              {
                uint64_t v89 = *v3;
                unint64_t v90 = *(void *)&a2[v89];
                if (v90 == -1 || v90 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v91 = *(unsigned char *)(*(void *)&a2[*v7] + v90);
                  *(void *)&a2[v89] = v90 + 1;
                  v88 |= (unint64_t)(v91 & 0x7F) << v86;
                  if (v91 < 0)
                  {
                    v86 += 7;
                    BOOL v14 = v87++ >= 9;
                    if (v14)
                    {
                      uint64_t v88 = 0;
                      goto LABEL_245;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v88 = 0;
              }
LABEL_245:
              BOOL v148 = v88 != 0;
              uint64_t v149 = 314;
              goto LABEL_267;
            case 0x15u:
              uint64_t v92 = objc_alloc_init(NTPBPersonalizedSectionPresenceConfig);

              *(void *)(a1 + 248) = v92;
              if (!PBReaderPlaceMark()
                || (NTPBPersonalizedSectionPresenceConfigReadFrom((uint64_t)v92, a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_177;
            case 0x16u:
              if (v16 == 2)
              {
                uint64_t result = PBReaderPlaceMark();
                if (!result) {
                  return result;
                }
                while (*(void *)&a2[*v3] < *(void *)&a2[*v4] && !a2[*v5])
                {
                  char v94 = 0;
                  unsigned int v95 = 0;
                  uint64_t v96 = 0;
                  while (1)
                  {
                    uint64_t v97 = *v3;
                    unint64_t v98 = *(void *)&a2[v97];
                    if (v98 == -1 || v98 >= *(void *)&a2[*v4]) {
                      break;
                    }
                    char v99 = *(unsigned char *)(*(void *)&a2[*v7] + v98);
                    *(void *)&a2[v97] = v98 + 1;
                    v96 |= (unint64_t)(v99 & 0x7F) << v94;
                    if (v99 < 0)
                    {
                      v94 += 7;
                      BOOL v14 = v95++ >= 9;
                      if (!v14) {
                        continue;
                      }
                    }
                    goto LABEL_136;
                  }
                  a2[*v5] = 1;
LABEL_136:
                  PBRepeatedUInt64Add();
                }
LABEL_177:
                PBReaderRecallMark();
              }
              else
              {
                char v150 = 0;
                unsigned int v151 = 0;
                uint64_t v152 = 0;
                while (1)
                {
                  uint64_t v153 = *v3;
                  unint64_t v154 = *(void *)&a2[v153];
                  if (v154 == -1 || v154 >= *(void *)&a2[*v4]) {
                    break;
                  }
                  char v155 = *(unsigned char *)(*(void *)&a2[*v7] + v154);
                  *(void *)&a2[v153] = v154 + 1;
                  v152 |= (unint64_t)(v155 & 0x7F) << v150;
                  if (v155 < 0)
                  {
                    v150 += 7;
                    BOOL v14 = v151++ >= 9;
                    if (!v14) {
                      continue;
                    }
                  }
                  goto LABEL_283;
                }
                a2[*v5] = 1;
LABEL_283:
                PBRepeatedUInt64Add();
              }
LABEL_273:
              if (*(void *)&a2[*v3] >= *(void *)&a2[*v4]) {
                return a2[*v5] == 0;
              }
              continue;
            case 0x17u:
              char v100 = (void *)PBReaderReadString();

              id v19 = v100;
              uint64_t v20 = 144;
              goto LABEL_190;
            case 0x18u:
              char v101 = 0;
              unsigned int v102 = 0;
              uint64_t v103 = 0;
              *(_DWORD *)(a1 + 316) |= 0x8000u;
              while (2)
              {
                uint64_t v104 = *v3;
                unint64_t v105 = *(void *)&a2[v104];
                if (v105 == -1 || v105 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v106 = *(unsigned char *)(*(void *)&a2[*v7] + v105);
                  *(void *)&a2[v104] = v105 + 1;
                  v103 |= (unint64_t)(v106 & 0x7F) << v101;
                  if (v106 < 0)
                  {
                    v101 += 7;
                    BOOL v14 = v102++ >= 9;
                    if (v14)
                    {
                      uint64_t v103 = 0;
                      goto LABEL_249;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v103 = 0;
              }
LABEL_249:
              BOOL v148 = v103 != 0;
              uint64_t v149 = 313;
              goto LABEL_267;
            case 0x1Bu:
              uint64_t v107 = (void *)PBReaderReadString();

              id v19 = v107;
              uint64_t v20 = 152;
              goto LABEL_190;
            case 0x1Cu:
              uint64_t v108 = (void *)PBReaderReadString();

              id v19 = v108;
              uint64_t v20 = 256;
              goto LABEL_190;
            case 0x1Du:
              char v109 = 0;
              unsigned int v110 = 0;
              uint64_t v24 = 0;
              *(_DWORD *)(a1 + 316) |= 0x100u;
              while (2)
              {
                uint64_t v111 = *v3;
                unint64_t v112 = *(void *)&a2[v111];
                if (v112 == -1 || v112 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v113 = *(unsigned char *)(*(void *)&a2[*v7] + v112);
                  *(void *)&a2[v111] = v112 + 1;
                  v24 |= (unint64_t)(v113 & 0x7F) << v109;
                  if (v113 < 0)
                  {
                    v109 += 7;
                    BOOL v14 = v110++ >= 9;
                    if (v14)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_253;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v24 = 0;
              }
LABEL_253:
              uint64_t v146 = 96;
              goto LABEL_272;
            case 0x1Eu:
              char v114 = 0;
              unsigned int v115 = 0;
              uint64_t v24 = 0;
              *(_DWORD *)(a1 + 316) |= 0x80u;
              while (2)
              {
                uint64_t v116 = *v3;
                unint64_t v117 = *(void *)&a2[v116];
                if (v117 == -1 || v117 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v118 = *(unsigned char *)(*(void *)&a2[*v7] + v117);
                  *(void *)&a2[v116] = v117 + 1;
                  v24 |= (unint64_t)(v118 & 0x7F) << v114;
                  if (v118 < 0)
                  {
                    v114 += 7;
                    BOOL v14 = v115++ >= 9;
                    if (v14)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_257;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v24 = 0;
              }
LABEL_257:
              uint64_t v146 = 88;
              goto LABEL_272;
            case 0x1Fu:
              uint64_t v119 = (void *)PBReaderReadString();

              id v19 = v119;
              uint64_t v20 = 280;
              goto LABEL_190;
            case 0x20u:
              uint64_t v120 = (void *)PBReaderReadString();

              id v19 = v120;
              uint64_t v20 = 168;
              goto LABEL_190;
            case 0x21u:
              unint64_t v121 = (void *)PBReaderReadString();

              id v19 = v121;
              uint64_t v20 = 176;
              goto LABEL_190;
            case 0x22u:
              char v122 = objc_alloc_init(NTPBItemsTodaySectionSpecificConfig);

              *(void *)(a1 + 200) = v122;
              if (!PBReaderPlaceMark()
                || (NTPBItemsTodaySectionSpecificConfigReadFrom((uint64_t)v122, (uint64_t)a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_177;
            case 0x24u:
              char v123 = 0;
              unsigned int v124 = 0;
              uint64_t v30 = 0;
              *(_DWORD *)(a1 + 316) |= 0x400u;
              while (2)
              {
                uint64_t v125 = *v3;
                unint64_t v126 = *(void *)&a2[v125];
                if (v126 == -1 || v126 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v127 = *(unsigned char *)(*(void *)&a2[*v7] + v126);
                  *(void *)&a2[v125] = v126 + 1;
                  v30 |= (unint64_t)(v127 & 0x7F) << v123;
                  if (v127 < 0)
                  {
                    v123 += 7;
                    BOOL v14 = v124++ >= 9;
                    if (v14)
                    {
                      LODWORD(v30) = 0;
                      goto LABEL_261;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                LODWORD(v30) = 0;
              }
LABEL_261:
              uint64_t v147 = 272;
LABEL_262:
              *(_DWORD *)(a1 + v147) = v30;
              goto LABEL_273;
            case 0x25u:
              char v128 = (void *)PBReaderReadString();

              id v19 = v128;
              uint64_t v20 = 224;
              goto LABEL_190;
            case 0x26u:
              char v129 = objc_alloc_init(NTPBTagTodaySectionSpecificConfig);

              *(void *)(a1 + 304) = v129;
              if (PBReaderPlaceMark()
                && (NTPBTagTodaySectionSpecificConfigReadFrom((uint64_t)v129, (uint64_t)a2) & 1) != 0)
              {
                goto LABEL_177;
              }
              return 0;
            case 0x27u:
              unsigned int v130 = (void *)PBReaderReadString();

              id v19 = v130;
              uint64_t v20 = 208;
              goto LABEL_190;
            case 0x28u:
              uint64_t v131 = (void *)PBReaderReadString();

              id v19 = v131;
              uint64_t v20 = 184;
              goto LABEL_190;
            case 0x29u:
              uint64_t v132 = (void *)PBReaderReadString();

              id v19 = v132;
              uint64_t v20 = 136;
              goto LABEL_190;
            case 0x2Au:
              unint64_t v133 = (void *)PBReaderReadString();

              id v19 = v133;
              uint64_t v20 = 128;
              goto LABEL_190;
            case 0x2Bu:
              char v134 = 0;
              unsigned int v135 = 0;
              uint64_t v136 = 0;
              *(_DWORD *)(a1 + 316) |= 0x4000u;
              while (2)
              {
                uint64_t v137 = *v3;
                unint64_t v138 = *(void *)&a2[v137];
                if (v138 == -1 || v138 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v139 = *(unsigned char *)(*(void *)&a2[*v7] + v138);
                  *(void *)&a2[v137] = v138 + 1;
                  v136 |= (unint64_t)(v139 & 0x7F) << v134;
                  if (v139 < 0)
                  {
                    v134 += 7;
                    BOOL v14 = v135++ >= 9;
                    if (v14)
                    {
                      uint64_t v136 = 0;
                      goto LABEL_266;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v136 = 0;
              }
LABEL_266:
              BOOL v148 = v136 != 0;
              uint64_t v149 = 312;
LABEL_267:
              *(unsigned char *)(a1 + v149) = v148;
              goto LABEL_273;
            case 0x2Cu:
              char v140 = (void *)PBReaderReadString();

              id v19 = v140;
              uint64_t v20 = 296;
LABEL_190:
              *(void *)(a1 + v20) = v19;
              goto LABEL_273;
            case 0x2Du:
              char v141 = 0;
              unsigned int v142 = 0;
              uint64_t v24 = 0;
              *(_DWORD *)(a1 + 316) |= 0x40u;
              while (2)
              {
                uint64_t v143 = *v3;
                unint64_t v144 = *(void *)&a2[v143];
                if (v144 == -1 || v144 >= *(void *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  char v145 = *(unsigned char *)(*(void *)&a2[*v7] + v144);
                  *(void *)&a2[v143] = v144 + 1;
                  v24 |= (unint64_t)(v145 & 0x7F) << v141;
                  if (v145 < 0)
                  {
                    v141 += 7;
                    BOOL v14 = v142++ >= 9;
                    if (v14)
                    {
                      uint64_t v24 = 0;
                      goto LABEL_271;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5]) {
                uint64_t v24 = 0;
              }
LABEL_271:
              uint64_t v146 = 80;
LABEL_272:
              *(void *)(a1 + v146) = v24;
              goto LABEL_273;
            default:
              if (PBReaderSkipValueWithTag()) {
                goto LABEL_273;
              }
              return 0;
          }
        }
      }
      break;
    }
  }
  return a2[*v5] == 0;
}

uint64_t NTPBNetworkMetricsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(NTPBNetworkEvent);
        [a1 addFailures:v17];
      }
      else
      {
        if ((v10 >> 3))
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        char v17 = objc_alloc_init(NTPBNetworkEvent);
        [a1 addSuccesses:v17];
      }

      if (!PBReaderPlaceMark() || (NTPBNetworkEventReadFrom((uint64_t)v17, a2) & 1) == 0) {
        return 0;
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBLocalNotificationReturnReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 32) |= 0x10u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_57;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_59;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_57:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_59:
          *(unsigned char *)(a1 + 28) = v19 != 0;
          continue;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v26) = 0;
          }
LABEL_63:
          uint64_t v46 = 16;
          goto LABEL_76;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 32) |= 8u;
          while (2)
          {
            uint64_t v32 = *v3;
            unint64_t v33 = *(void *)(a2 + v32);
            if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
              *(void *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                BOOL v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_67;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v26) = 0;
          }
LABEL_67:
          uint64_t v46 = 24;
          goto LABEL_76;
        case 4u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (2)
          {
            uint64_t v38 = *v3;
            unint64_t v39 = *(void *)(a2 + v38);
            if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v39 + 1;
              v37 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                BOOL v14 = v36++ >= 9;
                if (v14)
                {
                  uint64_t v37 = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v37 = 0;
          }
LABEL_71:
          *(void *)(a1 + 8) = v37;
          continue;
        case 5u:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 32) |= 4u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v43 = *v3;
        unint64_t v44 = *(void *)(a2 + v43);
        if (v44 == -1 || v44 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
        *(void *)(a2 + v43) = v44 + 1;
        v26 |= (unint64_t)(v45 & 0x7F) << v41;
        if ((v45 & 0x80) == 0) {
          goto LABEL_73;
        }
        v41 += 7;
        BOOL v14 = v42++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_75;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_73:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v26) = 0;
      }
LABEL_75:
      uint64_t v46 = 20;
LABEL_76:
      *(_DWORD *)(a1 + v46) = v26;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleTagMetadataReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2)
      {
        char v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata);
        [a1 addTopicTagMetadata:v17];
      }
      else
      {
        if ((v10 >> 3) != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
          continue;
        }
        char v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata);
        objc_storeStrong(a1 + 1, v17);
      }
      if (!PBReaderPlaceMark()
        || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadataReadFrom((uint64_t)v17, a2) & 1) == 0)
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAlreadySubscriberSignInReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 148) |= 0x20u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_86;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_88;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_86:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_88:
        BOOL v56 = v19 != 0;
        uint64_t v57 = 146;
        goto LABEL_105;
      case 2u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        *(unsigned char *)(a1 + 148) |= 2u;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v26) = 0;
        }
LABEL_92:
        uint64_t v58 = 88;
        goto LABEL_110;
      case 3u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 56;
        goto LABEL_82;
      case 4u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 48;
        goto LABEL_82;
      case 5u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 104;
        goto LABEL_82;
      case 6u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 96;
        goto LABEL_82;
      case 7u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 8;
        goto LABEL_82;
      case 8u:
        uint64_t v30 = PBReaderReadData();
        uint64_t v31 = 16;
        goto LABEL_82;
      case 9u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v26 = 0;
        *(unsigned char *)(a1 + 148) |= 4u;
        while (2)
        {
          uint64_t v34 = *v3;
          unint64_t v35 = *(void *)(a2 + v34);
          if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v35 + 1;
            v26 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v26) = 0;
        }
LABEL_96:
        uint64_t v58 = 92;
        goto LABEL_110;
      case 0xAu:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 148) |= 0x10u;
        while (2)
        {
          uint64_t v40 = *v3;
          unint64_t v41 = *(void *)(a2 + v40);
          if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              BOOL v14 = v38++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
LABEL_100:
        BOOL v56 = v39 != 0;
        uint64_t v57 = 145;
        goto LABEL_105;
      case 0xBu:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(unsigned char *)(a1 + 148) |= 8u;
        while (2)
        {
          uint64_t v46 = *v3;
          unint64_t v47 = *(void *)(a2 + v46);
          if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v47 + 1;
            v45 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v14 = v44++ >= 9;
              if (v14)
              {
                uint64_t v45 = 0;
                goto LABEL_104;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v45 = 0;
        }
LABEL_104:
        BOOL v56 = v45 != 0;
        uint64_t v57 = 144;
LABEL_105:
        *(unsigned char *)(a1 + v57) = v56;
        goto LABEL_83;
      case 0xCu:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 72;
        goto LABEL_82;
      case 0xDu:
        uint64_t v30 = PBReaderReadData();
        uint64_t v31 = 112;
        goto LABEL_82;
      case 0xEu:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 24;
        goto LABEL_82;
      case 0xFu:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 32;
        goto LABEL_82;
      case 0x10u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 40;
        goto LABEL_82;
      case 0x11u:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v26 = 0;
        *(unsigned char *)(a1 + 148) |= 1u;
        while (2)
        {
          uint64_t v51 = *v3;
          unint64_t v52 = *(void *)(a2 + v51);
          if (v52 == -1 || v52 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
            *(void *)(a2 + v51) = v52 + 1;
            v26 |= (unint64_t)(v53 & 0x7F) << v49;
            if (v53 < 0)
            {
              v49 += 7;
              BOOL v14 = v50++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v26) = 0;
        }
LABEL_109:
        uint64_t v58 = 64;
LABEL_110:
        *(_DWORD *)(a1 + v58) = v26;
        goto LABEL_83;
      case 0x12u:
        unint64_t v54 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 80), v54);
        if PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v54, a2))
        {
          PBReaderRecallMark();
LABEL_79:

LABEL_83:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 0x13u:
        PBReaderReadString();
        unint64_t v54 = (NTPBIssueData *)objc_claimAutoreleasedReturnValue();
        if (v54) {
          [(id)a1 addTopicIds:v54];
        }
        goto LABEL_79;
      case 0x14u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 128;
        goto LABEL_82;
      case 0x15u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 120;
LABEL_82:
        char v55 = *(void **)(a1 + v31);
        *(void *)(a1 + v31) = v30;

        goto LABEL_83;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_83;
    }
  }
}

uint64_t NTPBShareResultReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x1000u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_267;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_269;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_267:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_269:
        uint64_t v176 = 328;
        goto LABEL_354;
      case 2u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x80u;
        while (2)
        {
          uint64_t v25 = *v3;
          unint64_t v26 = *(void *)(a2 + v25);
          if (v26 == -1 || v26 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
            *(void *)(a2 + v25) = v26 + 1;
            v19 |= (unint64_t)(v27 & 0x7F) << v23;
            if (v27 < 0)
            {
              v23 += 7;
              BOOL v14 = v24++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_273;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_273:
        uint64_t v176 = 112;
        goto LABEL_354;
      case 3u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 104;
        goto LABEL_253;
      case 4u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 320;
        goto LABEL_253;
      case 5u:
        uint64_t v28 = PBReaderReadData();
        uint64_t v29 = 40;
        goto LABEL_253;
      case 6u:
        uint64_t v28 = PBReaderReadData();
        uint64_t v29 = 56;
        goto LABEL_253;
      case 7u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x100u;
        while (2)
        {
          uint64_t v32 = *v3;
          unint64_t v33 = *(void *)(a2 + v32);
          if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_277;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_277:
        uint64_t v176 = 144;
        goto LABEL_354;
      case 8u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 136;
        goto LABEL_253;
      case 9u:
        uint64_t v28 = PBReaderReadData();
        uint64_t v29 = 152;
        goto LABEL_253;
      case 0xAu:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(_DWORD *)(a1 + 420) |= 0x8000000u;
        while (2)
        {
          uint64_t v38 = *v3;
          unint64_t v39 = *(void *)(a2 + v38);
          if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v39 + 1;
            v37 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              BOOL v14 = v36++ >= 9;
              if (v14)
              {
                uint64_t v37 = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v37 = 0;
        }
LABEL_281:
        BOOL v177 = v37 != 0;
        uint64_t v178 = 419;
        goto LABEL_367;
      case 0xEu:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x4000u;
        while (2)
        {
          uint64_t v44 = *v3;
          unint64_t v45 = *(void *)(a2 + v44);
          if (v45 == -1 || v45 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v45 + 1;
            v19 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              BOOL v14 = v43++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_285;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_285:
        uint64_t v176 = 348;
        goto LABEL_354;
      case 0xFu:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x2000u;
        while (2)
        {
          uint64_t v49 = *v3;
          unint64_t v50 = *(void *)(a2 + v49);
          if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v50 + 1;
            v19 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              BOOL v14 = v48++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_289;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_289:
        uint64_t v176 = 344;
        goto LABEL_354;
      case 0x10u:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x40u;
        while (2)
        {
          uint64_t v54 = *v3;
          unint64_t v55 = *(void *)(a2 + v54);
          if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
            *(void *)(a2 + v54) = v55 + 1;
            v19 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              BOOL v14 = v53++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_293;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_293:
        uint64_t v176 = 96;
        goto LABEL_354;
      case 0x11u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 248;
        goto LABEL_253;
      case 0x12u:
        PBReaderReadString();
        uint64_t v57 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v57) {
          [(id)a1 addNamedEntities:v57];
        }
        goto LABEL_263;
      case 0x13u:
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x800u;
        while (2)
        {
          uint64_t v60 = *v3;
          unint64_t v61 = *(void *)(a2 + v60);
          if (v61 == -1 || v61 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
            *(void *)(a2 + v60) = v61 + 1;
            v19 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              BOOL v14 = v59++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_297;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_297:
        uint64_t v176 = 312;
        goto LABEL_354;
      case 0x14u:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x20u;
        while (2)
        {
          uint64_t v65 = *v3;
          unint64_t v66 = *(void *)(a2 + v65);
          if (v66 == -1 || v66 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
            *(void *)(a2 + v65) = v66 + 1;
            v19 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              BOOL v14 = v64++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_301;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_301:
        uint64_t v176 = 64;
        goto LABEL_354;
      case 0x15u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 352;
        goto LABEL_253;
      case 0x16u:
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x10u;
        while (2)
        {
          uint64_t v70 = *v3;
          unint64_t v71 = *(void *)(a2 + v70);
          if (v71 == -1 || v71 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
            *(void *)(a2 + v70) = v71 + 1;
            v19 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              BOOL v14 = v69++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_305;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_305:
        uint64_t v176 = 48;
        goto LABEL_354;
      case 0x17u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 360;
        goto LABEL_253;
      case 0x18u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 368;
        goto LABEL_253;
      case 0x19u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 376;
        goto LABEL_253;
      case 0x1Au:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 336;
        goto LABEL_253;
      case 0x1Bu:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 224;
        goto LABEL_253;
      case 0x1Cu:
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v75 = 0;
        *(_DWORD *)(a1 + 420) |= 0x80000u;
        while (2)
        {
          uint64_t v76 = *v3;
          unint64_t v77 = *(void *)(a2 + v76);
          if (v77 == -1 || v77 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
            *(void *)(a2 + v76) = v77 + 1;
            v75 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              BOOL v14 = v74++ >= 9;
              if (v14)
              {
                uint64_t v75 = 0;
                goto LABEL_309;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v75 = 0;
        }
LABEL_309:
        BOOL v177 = v75 != 0;
        uint64_t v178 = 411;
        goto LABEL_367;
      case 0x1Du:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 128;
        goto LABEL_253;
      case 0x1Eu:
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0;
        *(_DWORD *)(a1 + 420) |= 2u;
        while (2)
        {
          uint64_t v82 = *v3;
          unint64_t v83 = *(void *)(a2 + v82);
          if (v83 == -1 || v83 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(a2 + *v7) + v83);
            *(void *)(a2 + v82) = v83 + 1;
            v81 |= (unint64_t)(v84 & 0x7F) << v79;
            if (v84 < 0)
            {
              v79 += 7;
              BOOL v14 = v80++ >= 9;
              if (v14)
              {
                uint64_t v81 = 0;
                goto LABEL_313;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v81 = 0;
        }
LABEL_313:
        uint64_t v179 = 16;
        goto LABEL_380;
      case 0x1Fu:
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v87 = 0;
        *(_DWORD *)(a1 + 420) |= 0x200000u;
        while (2)
        {
          uint64_t v88 = *v3;
          unint64_t v89 = *(void *)(a2 + v88);
          if (v89 == -1 || v89 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v90 = *(unsigned char *)(*(void *)(a2 + *v7) + v89);
            *(void *)(a2 + v88) = v89 + 1;
            v87 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              BOOL v14 = v86++ >= 9;
              if (v14)
              {
                uint64_t v87 = 0;
                goto LABEL_317;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v87 = 0;
        }
LABEL_317:
        BOOL v177 = v87 != 0;
        uint64_t v178 = 413;
        goto LABEL_367;
      case 0x20u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 168;
        goto LABEL_253;
      case 0x21u:
        char v91 = 0;
        unsigned int v92 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x200u;
        while (2)
        {
          uint64_t v93 = *v3;
          unint64_t v94 = *(void *)(a2 + v93);
          if (v94 == -1 || v94 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v95 = *(unsigned char *)(*(void *)(a2 + *v7) + v94);
            *(void *)(a2 + v93) = v94 + 1;
            v19 |= (unint64_t)(v95 & 0x7F) << v91;
            if (v95 < 0)
            {
              v91 += 7;
              BOOL v14 = v92++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_321;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_321:
        uint64_t v176 = 176;
        goto LABEL_354;
      case 0x22u:
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v98 = 0;
        *(_DWORD *)(a1 + 420) |= 0x1000000u;
        while (2)
        {
          uint64_t v99 = *v3;
          unint64_t v100 = *(void *)(a2 + v99);
          if (v100 == -1 || v100 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(a2 + *v7) + v100);
            *(void *)(a2 + v99) = v100 + 1;
            v98 |= (unint64_t)(v101 & 0x7F) << v96;
            if (v101 < 0)
            {
              v96 += 7;
              BOOL v14 = v97++ >= 9;
              if (v14)
              {
                uint64_t v98 = 0;
                goto LABEL_325;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v98 = 0;
        }
LABEL_325:
        BOOL v177 = v98 != 0;
        uint64_t v178 = 416;
        goto LABEL_367;
      case 0x23u:
        char v102 = 0;
        unsigned int v103 = 0;
        uint64_t v104 = 0;
        *(_DWORD *)(a1 + 420) |= 0x100000u;
        while (2)
        {
          uint64_t v105 = *v3;
          unint64_t v106 = *(void *)(a2 + v105);
          if (v106 == -1 || v106 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v107 = *(unsigned char *)(*(void *)(a2 + *v7) + v106);
            *(void *)(a2 + v105) = v106 + 1;
            v104 |= (unint64_t)(v107 & 0x7F) << v102;
            if (v107 < 0)
            {
              v102 += 7;
              BOOL v14 = v103++ >= 9;
              if (v14)
              {
                uint64_t v104 = 0;
                goto LABEL_329;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v104 = 0;
        }
LABEL_329:
        BOOL v177 = v104 != 0;
        uint64_t v178 = 412;
        goto LABEL_367;
      case 0x24u:
        char v108 = 0;
        unsigned int v109 = 0;
        uint64_t v110 = 0;
        *(_DWORD *)(a1 + 420) |= 0x800000u;
        while (2)
        {
          uint64_t v111 = *v3;
          unint64_t v112 = *(void *)(a2 + v111);
          if (v112 == -1 || v112 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v113 = *(unsigned char *)(*(void *)(a2 + *v7) + v112);
            *(void *)(a2 + v111) = v112 + 1;
            v110 |= (unint64_t)(v113 & 0x7F) << v108;
            if (v113 < 0)
            {
              v108 += 7;
              BOOL v14 = v109++ >= 9;
              if (v14)
              {
                uint64_t v110 = 0;
                goto LABEL_333;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v110 = 0;
        }
LABEL_333:
        BOOL v177 = v110 != 0;
        uint64_t v178 = 415;
        goto LABEL_367;
      case 0x25u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 288;
        goto LABEL_253;
      case 0x26u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 72;
        goto LABEL_253;
      case 0x27u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 80;
        goto LABEL_253;
      case 0x28u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 120;
        goto LABEL_253;
      case 0x29u:
        char v114 = 0;
        unsigned int v115 = 0;
        uint64_t v116 = 0;
        *(_DWORD *)(a1 + 420) |= 0x40000u;
        while (2)
        {
          uint64_t v117 = *v3;
          unint64_t v118 = *(void *)(a2 + v117);
          if (v118 == -1 || v118 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v119 = *(unsigned char *)(*(void *)(a2 + *v7) + v118);
            *(void *)(a2 + v117) = v118 + 1;
            v116 |= (unint64_t)(v119 & 0x7F) << v114;
            if (v119 < 0)
            {
              v114 += 7;
              BOOL v14 = v115++ >= 9;
              if (v14)
              {
                uint64_t v116 = 0;
                goto LABEL_337;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v116 = 0;
        }
LABEL_337:
        BOOL v177 = v116 != 0;
        uint64_t v178 = 410;
        goto LABEL_367;
      case 0x2Au:
        char v120 = 0;
        unsigned int v121 = 0;
        uint64_t v122 = 0;
        *(_DWORD *)(a1 + 420) |= 0x10000u;
        while (2)
        {
          uint64_t v123 = *v3;
          unint64_t v124 = *(void *)(a2 + v123);
          if (v124 == -1 || v124 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v125 = *(unsigned char *)(*(void *)(a2 + *v7) + v124);
            *(void *)(a2 + v123) = v124 + 1;
            v122 |= (unint64_t)(v125 & 0x7F) << v120;
            if (v125 < 0)
            {
              v120 += 7;
              BOOL v14 = v121++ >= 9;
              if (v14)
              {
                uint64_t v122 = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v122 = 0;
        }
LABEL_341:
        BOOL v177 = v122 != 0;
        uint64_t v178 = 408;
        goto LABEL_367;
      case 0x2Bu:
        char v126 = 0;
        unsigned int v127 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x400u;
        while (2)
        {
          uint64_t v128 = *v3;
          unint64_t v129 = *(void *)(a2 + v128);
          if (v129 == -1 || v129 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v130 = *(unsigned char *)(*(void *)(a2 + *v7) + v129);
            *(void *)(a2 + v128) = v129 + 1;
            v19 |= (unint64_t)(v130 & 0x7F) << v126;
            if (v130 < 0)
            {
              v126 += 7;
              BOOL v14 = v127++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_345;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_345:
        uint64_t v176 = 272;
        goto LABEL_354;
      case 0x2Cu:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 280;
        goto LABEL_253;
      case 0x2Du:
        char v131 = 0;
        unsigned int v132 = 0;
        uint64_t v133 = 0;
        *(_DWORD *)(a1 + 420) |= 0x20000u;
        while (2)
        {
          uint64_t v134 = *v3;
          unint64_t v135 = *(void *)(a2 + v134);
          if (v135 == -1 || v135 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v136 = *(unsigned char *)(*(void *)(a2 + *v7) + v135);
            *(void *)(a2 + v134) = v135 + 1;
            v133 |= (unint64_t)(v136 & 0x7F) << v131;
            if (v136 < 0)
            {
              v131 += 7;
              BOOL v14 = v132++ >= 9;
              if (v14)
              {
                uint64_t v133 = 0;
                goto LABEL_349;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v133 = 0;
        }
LABEL_349:
        BOOL v177 = v133 != 0;
        uint64_t v178 = 409;
        goto LABEL_367;
      case 0x2Eu:
        char v137 = 0;
        unsigned int v138 = 0;
        uint64_t v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x8000u;
        while (2)
        {
          uint64_t v139 = *v3;
          unint64_t v140 = *(void *)(a2 + v139);
          if (v140 == -1 || v140 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v141 = *(unsigned char *)(*(void *)(a2 + *v7) + v140);
            *(void *)(a2 + v139) = v140 + 1;
            v19 |= (unint64_t)(v141 & 0x7F) << v137;
            if (v141 < 0)
            {
              v137 += 7;
              BOOL v14 = v138++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_353;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_353:
        uint64_t v176 = 384;
LABEL_354:
        *(_DWORD *)(a1 + v176) = v19;
        goto LABEL_381;
      case 0x2Fu:
        char v142 = 0;
        unsigned int v143 = 0;
        uint64_t v144 = 0;
        *(_DWORD *)(a1 + 420) |= 0x4000000u;
        while (2)
        {
          uint64_t v145 = *v3;
          unint64_t v146 = *(void *)(a2 + v145);
          if (v146 == -1 || v146 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v147 = *(unsigned char *)(*(void *)(a2 + *v7) + v146);
            *(void *)(a2 + v145) = v146 + 1;
            v144 |= (unint64_t)(v147 & 0x7F) << v142;
            if (v147 < 0)
            {
              v142 += 7;
              BOOL v14 = v143++ >= 9;
              if (v14)
              {
                uint64_t v144 = 0;
                goto LABEL_358;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v144 = 0;
        }
LABEL_358:
        BOOL v177 = v144 != 0;
        uint64_t v178 = 418;
        goto LABEL_367;
      case 0x30u:
        char v148 = 0;
        unsigned int v149 = 0;
        uint64_t v150 = 0;
        *(_DWORD *)(a1 + 420) |= 0x2000000u;
        while (2)
        {
          uint64_t v151 = *v3;
          unint64_t v152 = *(void *)(a2 + v151);
          if (v152 == -1 || v152 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v153 = *(unsigned char *)(*(void *)(a2 + *v7) + v152);
            *(void *)(a2 + v151) = v152 + 1;
            v150 |= (unint64_t)(v153 & 0x7F) << v148;
            if (v153 < 0)
            {
              v148 += 7;
              BOOL v14 = v149++ >= 9;
              if (v14)
              {
                uint64_t v150 = 0;
                goto LABEL_362;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v150 = 0;
        }
LABEL_362:
        BOOL v177 = v150 != 0;
        uint64_t v178 = 417;
        goto LABEL_367;
      case 0x31u:
        char v154 = 0;
        unsigned int v155 = 0;
        uint64_t v156 = 0;
        *(_DWORD *)(a1 + 420) |= 0x400000u;
        while (2)
        {
          uint64_t v157 = *v3;
          unint64_t v158 = *(void *)(a2 + v157);
          if (v158 == -1 || v158 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v159 = *(unsigned char *)(*(void *)(a2 + *v7) + v158);
            *(void *)(a2 + v157) = v158 + 1;
            v156 |= (unint64_t)(v159 & 0x7F) << v154;
            if (v159 < 0)
            {
              v154 += 7;
              BOOL v14 = v155++ >= 9;
              if (v14)
              {
                uint64_t v156 = 0;
                goto LABEL_366;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v156 = 0;
        }
LABEL_366:
        BOOL v177 = v156 != 0;
        uint64_t v178 = 414;
LABEL_367:
        *(unsigned char *)(a1 + v178) = v177;
        goto LABEL_381;
      case 0x32u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 264;
        goto LABEL_253;
      case 0x33u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 296;
        goto LABEL_253;
      case 0x34u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 304;
        goto LABEL_253;
      case 0x35u:
        uint64_t v57 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 400), v57);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v57, a2) & 1) == 0) {
          goto LABEL_383;
        }
        goto LABEL_262;
      case 0x36u:
        uint64_t v57 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        [(id)a1 addFractionalCohortMembership:v57];
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v57, a2) & 1) == 0)
        {
          goto LABEL_383;
        }
        goto LABEL_262;
      case 0x37u:
        char v160 = 0;
        unsigned int v161 = 0;
        uint64_t v81 = 0;
        *(_DWORD *)(a1 + 420) |= 8u;
        while (2)
        {
          uint64_t v162 = *v3;
          unint64_t v163 = *(void *)(a2 + v162);
          if (v163 == -1 || v163 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v164 = *(unsigned char *)(*(void *)(a2 + *v7) + v163);
            *(void *)(a2 + v162) = v163 + 1;
            v81 |= (unint64_t)(v164 & 0x7F) << v160;
            if (v164 < 0)
            {
              v160 += 7;
              BOOL v14 = v161++ >= 9;
              if (v14)
              {
                uint64_t v81 = 0;
                goto LABEL_371;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v81 = 0;
        }
LABEL_371:
        uint64_t v179 = 32;
        goto LABEL_380;
      case 0x38u:
        char v165 = 0;
        unsigned int v166 = 0;
        uint64_t v81 = 0;
        *(_DWORD *)(a1 + 420) |= 1u;
        while (2)
        {
          uint64_t v167 = *v3;
          unint64_t v168 = *(void *)(a2 + v167);
          if (v168 == -1 || v168 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v169 = *(unsigned char *)(*(void *)(a2 + *v7) + v168);
            *(void *)(a2 + v167) = v168 + 1;
            v81 |= (unint64_t)(v169 & 0x7F) << v165;
            if (v169 < 0)
            {
              v165 += 7;
              BOOL v14 = v166++ >= 9;
              if (v14)
              {
                uint64_t v81 = 0;
                goto LABEL_375;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v81 = 0;
        }
LABEL_375:
        uint64_t v179 = 8;
        goto LABEL_380;
      case 0x39u:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 200;
        goto LABEL_253;
      case 0x3Au:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 216;
        goto LABEL_253;
      case 0x3Bu:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 192;
        goto LABEL_253;
      case 0x3Cu:
        char v170 = 0;
        unsigned int v171 = 0;
        uint64_t v81 = 0;
        *(_DWORD *)(a1 + 420) |= 4u;
        while (2)
        {
          uint64_t v172 = *v3;
          unint64_t v173 = *(void *)(a2 + v172);
          if (v173 == -1 || v173 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v174 = *(unsigned char *)(*(void *)(a2 + *v7) + v173);
            *(void *)(a2 + v172) = v173 + 1;
            v81 |= (unint64_t)(v174 & 0x7F) << v170;
            if (v174 < 0)
            {
              v170 += 7;
              BOOL v14 = v171++ >= 9;
              if (v14)
              {
                uint64_t v81 = 0;
                goto LABEL_379;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v81 = 0;
        }
LABEL_379:
        uint64_t v179 = 24;
LABEL_380:
        *(void *)(a1 + v179) = v81;
        goto LABEL_381;
      case 0x3Du:
        uint64_t v28 = PBReaderReadString();
        uint64_t v29 = 208;
        goto LABEL_253;
      case 0x3Eu:
        uint64_t v28 = PBReaderReadData();
        uint64_t v29 = 184;
LABEL_253:
        char v175 = *(void **)(a1 + v29);
        *(void *)(a1 + v29) = v28;

        goto LABEL_381;
      case 0x3Fu:
        uint64_t v57 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 232), v57);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v57, a2) & 1) == 0) {
          goto LABEL_383;
        }
        goto LABEL_262;
      case 0x40u:
        uint64_t v57 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 240), v57);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v57, a2) & 1) == 0) {
          goto LABEL_383;
        }
        goto LABEL_262;
      case 0x41u:
        uint64_t v57 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 88), v57);
        if PBReaderPlaceMark() && (NTPBChannelDataReadFrom((uint64_t)v57, a2))
        {
LABEL_262:
          PBReaderRecallMark();
LABEL_263:

LABEL_381:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_383:

        return 0;
      case 0x42u:
        PBReaderReadString();
        uint64_t v57 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v57) {
          [(id)a1 addTopicIds:v57];
        }
        goto LABEL_263;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_381;
    }
  }
}

uint64_t NTPBFeedCellExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 60) |= 8u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_61;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_63;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_61:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_63:
          uint64_t v48 = 40;
          goto LABEL_80;
        case 2u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 32;
          goto LABEL_59;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 60) |= 0x10u;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v28 = 0;
                  goto LABEL_67;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_67:
          *(unsigned char *)(a1 + 56) = v28 != 0;
          continue;
        case 4u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 60) |= 4u;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v19 |= (unint64_t)(v36 & 0x7F) << v32;
              if (v36 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_71:
          uint64_t v48 = 28;
          goto LABEL_80;
        case 5u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 60) |= 1u;
          while (2)
          {
            uint64_t v39 = *v3;
            unint64_t v40 = *(void *)(a2 + v39);
            if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
              *(void *)(a2 + v39) = v40 + 1;
              v19 |= (unint64_t)(v41 & 0x7F) << v37;
              if (v41 < 0)
              {
                v37 += 7;
                BOOL v14 = v38++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_75:
          uint64_t v48 = 8;
          goto LABEL_80;
        case 6u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 48;
          goto LABEL_59;
        case 7u:
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 60) |= 2u;
          break;
        case 8u:
          uint64_t v24 = PBReaderReadData();
          uint64_t v25 = 16;
LABEL_59:
          char v47 = *(void **)(a1 + v25);
          *(void *)(a1 + v25) = v24;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v44 = *v3;
        unint64_t v45 = *(void *)(a2 + v44);
        if (v45 == -1 || v45 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
        *(void *)(a2 + v44) = v45 + 1;
        v19 |= (unint64_t)(v46 & 0x7F) << v42;
        if ((v46 & 0x80) == 0) {
          goto LABEL_77;
        }
        v42 += 7;
        BOOL v14 = v43++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_79;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_77:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_79:
      uint64_t v48 = 24;
LABEL_80:
      *(_DWORD *)(a1 + v48) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedItemBatchReadFrom(void *a1, unsigned char *a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)&a2[*MEMORY[0x263F62298]] < *(void *)&a2[*MEMORY[0x263F62288]])
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (a2[*v5]) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&a2[v11];
        if (v12 == -1 || v12 >= *(void *)&a2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a2[*v7] + v12);
        *(void *)&a2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = a2[*v5];
          goto LABEL_14;
        }
      }
      a2[*v5] = 1;
LABEL_12:
      int v15 = a2[*v5];
      if (a2[*v5]) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3))
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
      else
      {
        unsigned int v18 = objc_alloc_init(NTPBFeedItem);
        [a1 addFeedItems:v18];

        if (!PBReaderPlaceMark() || (NTPBFeedItemReadFrom((uint64_t)v18, a2) & 1) == 0) {
          return 0;
        }
        PBReaderRecallMark();
      }
    }
    while (*(void *)&a2[*v3] < *(void *)&a2[*v4]);
  }
  return a2[*v5] == 0;
}

uint64_t NTPBEndOfArticleExposureReadFrom(unsigned char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
          goto LABEL_72;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 104;
          goto LABEL_72;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 56;
          goto LABEL_72;
        case 4u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 64;
          goto LABEL_72;
        case 5u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          a1[156] |= 0x80u;
          while (2)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                BOOL v14 = v20++ >= 9;
                if (v14)
                {
                  uint64_t v21 = 0;
                  goto LABEL_97;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v21 = 0;
          }
LABEL_97:
          a1[152] = v21 != 0;
          continue;
        case 8u:
          char v26 = PBReaderReadString();
          if (v26) {
            [a1 addRecommendedArticleId:v26];
          }
          goto LABEL_53;
        case 9u:
          char v26 = PBReaderReadString();
          if (v26) {
            [a1 addReferencedRecommendedArticleIds:v26];
          }
          goto LABEL_53;
        case 0xAu:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          a1[156] |= 8u;
          while (2)
          {
            uint64_t v30 = *v3;
            unint64_t v31 = *(void *)(a2 + v30);
            if (v31 == -1 || v31 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v31 + 1;
              v29 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                BOOL v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_101;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v29) = 0;
          }
LABEL_101:
          uint64_t v65 = 40;
          goto LABEL_114;
        case 0xBu:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v29 = 0;
          a1[156] |= 0x20u;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v29 |= (unint64_t)(v37 & 0x7F) << v33;
              if (v37 < 0)
              {
                v33 += 7;
                BOOL v14 = v34++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_105;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v29) = 0;
          }
LABEL_105:
          uint64_t v65 = 48;
          goto LABEL_114;
        case 0xCu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 72;
          goto LABEL_72;
        case 0xDu:
          char v26 = PBReaderReadString();
          if (v26) {
            [a1 addNamedEntities:v26];
          }
LABEL_53:

          continue;
        case 0xEu:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v29 = 0;
          a1[156] |= 0x40u;
          while (2)
          {
            uint64_t v40 = *v3;
            unint64_t v41 = *(void *)(a2 + v40);
            if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
              *(void *)(a2 + v40) = v41 + 1;
              v29 |= (unint64_t)(v42 & 0x7F) << v38;
              if (v42 < 0)
              {
                v38 += 7;
                BOOL v14 = v39++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_109;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v29) = 0;
          }
LABEL_109:
          uint64_t v65 = 88;
          goto LABEL_114;
        case 0xFu:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v29 = 0;
          a1[156] |= 0x10u;
          while (2)
          {
            uint64_t v45 = *v3;
            unint64_t v46 = *(void *)(a2 + v45);
            if (v46 == -1 || v46 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
              *(void *)(a2 + v45) = v46 + 1;
              v29 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                BOOL v14 = v44++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_113;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v29) = 0;
          }
LABEL_113:
          uint64_t v65 = 44;
LABEL_114:
          *(_DWORD *)&a1[v65] = v29;
          continue;
        case 0x10u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 128;
          goto LABEL_72;
        case 0x11u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 136;
          goto LABEL_72;
        case 0x12u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 144;
          goto LABEL_72;
        case 0x13u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 120;
LABEL_72:
          uint64_t v48 = *(void **)&a1[v18];
          *(void *)&a1[v18] = v17;

          continue;
        case 0x14u:
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v51 = 0;
          a1[156] |= 2u;
          while (2)
          {
            uint64_t v52 = *v3;
            unint64_t v53 = *(void *)(a2 + v52);
            if (v53 == -1 || v53 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
              *(void *)(a2 + v52) = v53 + 1;
              v51 |= (unint64_t)(v54 & 0x7F) << v49;
              if (v54 < 0)
              {
                v49 += 7;
                BOOL v14 = v50++ >= 9;
                if (v14)
                {
                  uint64_t v51 = 0;
                  goto LABEL_118;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v51 = 0;
          }
LABEL_118:
          uint64_t v66 = 16;
          goto LABEL_127;
        case 0x15u:
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v51 = 0;
          a1[156] |= 4u;
          while (2)
          {
            uint64_t v57 = *v3;
            unint64_t v58 = *(void *)(a2 + v57);
            if (v58 == -1 || v58 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v58);
              *(void *)(a2 + v57) = v58 + 1;
              v51 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                BOOL v14 = v56++ >= 9;
                if (v14)
                {
                  uint64_t v51 = 0;
                  goto LABEL_122;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v51 = 0;
          }
LABEL_122:
          uint64_t v66 = 24;
          goto LABEL_127;
        case 0x16u:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v51 = 0;
          a1[156] |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v62 = *v3;
        unint64_t v63 = *(void *)(a2 + v62);
        if (v63 == -1 || v63 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
        *(void *)(a2 + v62) = v63 + 1;
        v51 |= (unint64_t)(v64 & 0x7F) << v60;
        if ((v64 & 0x80) == 0) {
          goto LABEL_124;
        }
        v60 += 7;
        BOOL v14 = v61++ >= 9;
        if (v14)
        {
          uint64_t v51 = 0;
          goto LABEL_126;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_124:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v51 = 0;
      }
LABEL_126:
      uint64_t v66 = 8;
LABEL_127:
      *(void *)&a1[v66] = v51;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBBinningConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 60) |= 0x80u;
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_70;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_72;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_70:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_72:
          *(unsigned char *)(a1 + 56) = v20 != 0;
          continue;
        case 2u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 60) |= 2u;
          while (2)
          {
            uint64_t v29 = *v3;
            uint64_t v30 = *(void *)(a2 + v29);
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v31;
              v28 |= (unint64_t)(v32 & 0x7F) << v26;
              if (v32 < 0)
              {
                v26 += 7;
                BOOL v15 = v27++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_76;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_76:
          uint64_t v63 = 16;
          goto LABEL_85;
        case 3u:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 60) |= 4u;
          while (2)
          {
            uint64_t v35 = *v3;
            uint64_t v36 = *(void *)(a2 + v35);
            unint64_t v37 = v36 + 1;
            if (v36 == -1 || v37 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v37;
              v28 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v15 = v34++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_80;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_80:
          uint64_t v63 = 24;
          goto LABEL_85;
        case 4u:
          *(unsigned char *)(a1 + 60) |= 8u;
          uint64_t v39 = *v3;
          unint64_t v40 = *(void *)(a2 + v39);
          if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v41 = *(void *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v40 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v41 = 0;
          }
          uint64_t v65 = 32;
          goto LABEL_99;
        case 5u:
          *(unsigned char *)(a1 + 60) |= 1u;
          uint64_t v42 = *v3;
          unint64_t v43 = *(void *)(a2 + v42);
          if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v41 = *(void *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v43 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v41 = 0;
          }
          uint64_t v65 = 8;
LABEL_99:
          *(void *)(a1 + v65) = v41;
          continue;
        case 6u:
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 60) |= 0x10u;
          while (2)
          {
            uint64_t v46 = *v3;
            uint64_t v47 = *(void *)(a2 + v46);
            unint64_t v48 = v47 + 1;
            if (v47 == -1 || v48 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v48;
              v28 |= (unint64_t)(v49 & 0x7F) << v44;
              if (v49 < 0)
              {
                v44 += 7;
                BOOL v15 = v45++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_84;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_84:
          uint64_t v63 = 40;
LABEL_85:
          *(void *)(a1 + v63) = v28;
          continue;
        case 7u:
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v52 = 0;
          *(unsigned char *)(a1 + 60) |= 0x40u;
          while (2)
          {
            uint64_t v53 = *v3;
            uint64_t v54 = *(void *)(a2 + v53);
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v54);
              *(void *)(a2 + v53) = v55;
              v52 |= (unint64_t)(v56 & 0x7F) << v50;
              if (v56 < 0)
              {
                v50 += 7;
                BOOL v15 = v51++ >= 9;
                if (v15)
                {
                  LODWORD(v52) = 0;
                  goto LABEL_89;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v52) = 0;
          }
LABEL_89:
          uint64_t v64 = 52;
          goto LABEL_94;
        case 8u:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v52 = 0;
          *(unsigned char *)(a1 + 60) |= 0x20u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v59 = *v3;
        uint64_t v60 = *(void *)(a2 + v59);
        unint64_t v61 = v60 + 1;
        if (v60 == -1 || v61 > *(void *)(a2 + *v4)) {
          break;
        }
        char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
        *(void *)(a2 + v59) = v61;
        v52 |= (unint64_t)(v62 & 0x7F) << v57;
        if ((v62 & 0x80) == 0) {
          goto LABEL_91;
        }
        v57 += 7;
        BOOL v15 = v58++ >= 9;
        if (v15)
        {
          LODWORD(v52) = 0;
          goto LABEL_93;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_91:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v52) = 0;
      }
LABEL_93:
      uint64_t v64 = 48;
LABEL_94:
      *(_DWORD *)(a1 + v64) = v52;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBBundleSubscriberInfoReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 52) |= 2u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_63;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_65;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_63:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_65:
          *(_DWORD *)(a1 + 16) = v19;
          continue;
        case 2u:
          char v24 = PBReaderReadString();
          if (v24) {
            [(id)a1 addSubscribedChannelIds:v24];
          }

          continue;
        case 3u:
          uint64_t v25 = PBReaderReadString();
          uint64_t v26 = 32;
          goto LABEL_33;
        case 4u:
          uint64_t v25 = PBReaderReadString();
          uint64_t v26 = 40;
LABEL_33:
          unsigned int v27 = *(void **)(a1 + v26);
          *(void *)(a1 + v26) = v25;

          continue;
        case 5u:
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          *(unsigned char *)(a1 + 52) |= 1u;
          while (2)
          {
            uint64_t v31 = *v3;
            unint64_t v32 = *(void *)(a2 + v31);
            if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
              *(void *)(a2 + v31) = v32 + 1;
              v30 |= (unint64_t)(v33 & 0x7F) << v28;
              if (v33 < 0)
              {
                v28 += 7;
                BOOL v14 = v29++ >= 9;
                if (v14)
                {
                  uint64_t v30 = 0;
                  goto LABEL_69;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v30 = 0;
          }
LABEL_69:
          *(void *)(a1 + 8) = v30;
          continue;
        case 6u:
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v36 = 0;
          *(unsigned char *)(a1 + 52) |= 0x10u;
          while (2)
          {
            uint64_t v37 = *v3;
            unint64_t v38 = *(void *)(a2 + v37);
            if (v38 == -1 || v38 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
              *(void *)(a2 + v37) = v38 + 1;
              v36 |= (unint64_t)(v39 & 0x7F) << v34;
              if (v39 < 0)
              {
                v34 += 7;
                BOOL v14 = v35++ >= 9;
                if (v14)
                {
                  uint64_t v36 = 0;
                  goto LABEL_73;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v36 = 0;
          }
LABEL_73:
          BOOL v52 = v36 != 0;
          uint64_t v53 = 50;
          goto LABEL_82;
        case 7u:
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v42 = 0;
          *(unsigned char *)(a1 + 52) |= 8u;
          while (2)
          {
            uint64_t v43 = *v3;
            unint64_t v44 = *(void *)(a2 + v43);
            if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
              *(void *)(a2 + v43) = v44 + 1;
              v42 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                BOOL v14 = v41++ >= 9;
                if (v14)
                {
                  uint64_t v42 = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v42 = 0;
          }
LABEL_77:
          BOOL v52 = v42 != 0;
          uint64_t v53 = 49;
          goto LABEL_82;
        case 8u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          *(unsigned char *)(a1 + 52) |= 4u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v49 = *v3;
        unint64_t v50 = *(void *)(a2 + v49);
        if (v50 == -1 || v50 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
        *(void *)(a2 + v49) = v50 + 1;
        v48 |= (unint64_t)(v51 & 0x7F) << v46;
        if ((v51 & 0x80) == 0) {
          goto LABEL_79;
        }
        v46 += 7;
        BOOL v14 = v47++ >= 9;
        if (v14)
        {
          uint64_t v48 = 0;
          goto LABEL_81;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_79:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v48 = 0;
      }
LABEL_81:
      BOOL v52 = v48 != 0;
      uint64_t v53 = 48;
LABEL_82:
      *(unsigned char *)(a1 + v53) = v52;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBSearchExecuteReadFrom(unsigned char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 64;
          goto LABEL_59;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          a1[124] |= 2u;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_63:
          uint64_t v38 = 60;
          goto LABEL_72;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v22 = 0;
          a1[124] |= 1u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v22 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_67;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_67:
          uint64_t v38 = 56;
          goto LABEL_72;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v22 = 0;
          a1[124] |= 4u;
          break;
        case 5u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 96;
          goto LABEL_59;
        case 6u:
          uint64_t v36 = PBReaderReadString();
          if (v36) {
            [a1 addTopicResultFeedIds:v36];
          }
          goto LABEL_57;
        case 7u:
          uint64_t v36 = PBReaderReadString();
          if (v36) {
            [a1 addChannelResultFeedIds:v36];
          }
          goto LABEL_57;
        case 8u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 72;
          goto LABEL_59;
        case 9u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_59;
        case 0xAu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 24;
          goto LABEL_59;
        case 0xBu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 48;
          goto LABEL_59;
        case 0xCu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 80;
          goto LABEL_59;
        case 0xDu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 88;
          goto LABEL_59;
        case 0xEu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 104;
          goto LABEL_59;
        case 0xFu:
          uint64_t v36 = PBReaderReadString();
          if (v36) {
            [a1 addArticleResultIds:v36];
          }
LABEL_57:

          continue;
        case 0x10u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 40;
LABEL_59:
          uint64_t v37 = *(void **)&a1[v18];
          *(void *)&a1[v18] = v17;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v33 = *v3;
        unint64_t v34 = *(void *)(a2 + v33);
        if (v34 == -1 || v34 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
        *(void *)(a2 + v33) = v34 + 1;
        v22 |= (unint64_t)(v35 & 0x7F) << v31;
        if ((v35 & 0x80) == 0) {
          goto LABEL_69;
        }
        v31 += 7;
        BOOL v14 = v32++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_71;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_69:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v22) = 0;
      }
LABEL_71:
      uint64_t v38 = 120;
LABEL_72:
      *(_DWORD *)&a1[v38] = v22;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBBloomFilterInfoReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v23 = PBReaderReadData();
        unint64_t v24 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v23;
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 16) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAudioEngageReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 120;
        goto LABEL_151;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 248;
        goto LABEL_151;
      case 3u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(_DWORD *)(a1 + 268) |= 0x800000u;
        while (2)
        {
          uint64_t v24 = *v3;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              BOOL v15 = v22++ >= 9;
              if (v15)
              {
                uint64_t v23 = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
LABEL_172:
        BOOL v131 = v23 != 0;
        uint64_t v132 = 264;
        goto LABEL_218;
      case 4u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x10000u;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_176;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v30) = 0;
        }
LABEL_176:
        uint64_t v133 = 192;
        goto LABEL_223;
      case 5u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 184;
        goto LABEL_151;
      case 6u:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 200;
        goto LABEL_151;
      case 7u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x8000u;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v30 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              BOOL v15 = v36++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v30) = 0;
        }
LABEL_180:
        uint64_t v133 = 168;
        goto LABEL_223;
      case 8u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 160;
        goto LABEL_151;
      case 9u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 268) |= 0x1000u;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
LABEL_184:
        uint64_t v134 = 104;
        goto LABEL_197;
      case 0xAu:
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x200000u;
        while (2)
        {
          uint64_t v50 = *v3;
          uint64_t v51 = *(void *)(a2 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v52;
            v30 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              BOOL v15 = v49++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v30) = 0;
        }
LABEL_188:
        uint64_t v133 = 256;
        goto LABEL_223;
      case 0xBu:
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 268) |= 8u;
        while (2)
        {
          uint64_t v56 = *v3;
          uint64_t v57 = *(void *)(a2 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
            *(void *)(a2 + v56) = v58;
            v43 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v15 = v55++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
LABEL_192:
        uint64_t v134 = 32;
        goto LABEL_197;
      case 0xCu:
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 268) |= 4u;
        while (2)
        {
          uint64_t v62 = *v3;
          uint64_t v63 = *(void *)(a2 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
            *(void *)(a2 + v62) = v64;
            v43 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v15 = v61++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
LABEL_196:
        uint64_t v134 = 24;
LABEL_197:
        *(void *)(a1 + v134) = v43;
        goto LABEL_247;
      case 0xDu:
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x400000u;
        while (2)
        {
          uint64_t v68 = *v3;
          uint64_t v69 = *(void *)(a2 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v69);
            *(void *)(a2 + v68) = v70;
            v30 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              BOOL v15 = v67++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_201;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v30) = 0;
        }
LABEL_201:
        uint64_t v133 = 260;
        goto LABEL_223;
      case 0xEu:
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x100000u;
        while (2)
        {
          uint64_t v74 = *v3;
          uint64_t v75 = *(void *)(a2 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v75);
            *(void *)(a2 + v74) = v76;
            v30 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              BOOL v15 = v73++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_205;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v30) = 0;
        }
LABEL_205:
        uint64_t v133 = 244;
        goto LABEL_223;
      case 0xFu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 152;
        goto LABEL_151;
      case 0x10u:
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x40000u;
        while (2)
        {
          uint64_t v80 = *v3;
          uint64_t v81 = *(void *)(a2 + v80);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(a2 + *v7) + v81);
            *(void *)(a2 + v80) = v82;
            v30 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              BOOL v15 = v79++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_209;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v30) = 0;
        }
LABEL_209:
        uint64_t v133 = 236;
        goto LABEL_223;
      case 0x11u:
        char v84 = 0;
        unsigned int v85 = 0;
        uint64_t v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x20000u;
        while (2)
        {
          uint64_t v86 = *v3;
          uint64_t v87 = *(void *)(a2 + v86);
          unint64_t v88 = v87 + 1;
          if (v87 == -1 || v88 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v89 = *(unsigned char *)(*(void *)(a2 + *v7) + v87);
            *(void *)(a2 + v86) = v88;
            v30 |= (unint64_t)(v89 & 0x7F) << v84;
            if (v89 < 0)
            {
              v84 += 7;
              BOOL v15 = v85++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_213;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v30) = 0;
        }
LABEL_213:
        uint64_t v133 = 232;
        goto LABEL_223;
      case 0x12u:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 128;
        goto LABEL_151;
      case 0x13u:
        char v90 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        [(id)a1 addFractionalCohortMembership:v90];
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v90, a2) & 1) == 0)
        {
          goto LABEL_252;
        }
        goto LABEL_149;
      case 0x14u:
        *(_DWORD *)(a1 + 268) |= 1u;
        uint64_t v91 = *v3;
        unint64_t v92 = *(void *)(a2 + v91);
        if (v92 <= 0xFFFFFFFFFFFFFFF7 && v92 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v93 = *(void *)(*(void *)(a2 + *v7) + v92);
          *(void *)(a2 + v91) = v92 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v93 = 0;
        }
        uint64_t v135 = 8;
        goto LABEL_246;
      case 0x15u:
        *(_DWORD *)(a1 + 268) |= 2u;
        uint64_t v94 = *v3;
        unint64_t v95 = *(void *)(a2 + v94);
        if (v95 <= 0xFFFFFFFFFFFFFFF7 && v95 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v93 = *(void *)(*(void *)(a2 + *v7) + v95);
          *(void *)(a2 + v94) = v95 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v93 = 0;
        }
        uint64_t v135 = 16;
        goto LABEL_246;
      case 0x16u:
        *(_DWORD *)(a1 + 268) |= 0x10u;
        uint64_t v96 = *v3;
        unint64_t v97 = *(void *)(a2 + v96);
        if (v97 <= 0xFFFFFFFFFFFFFFF7 && v97 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v93 = *(void *)(*(void *)(a2 + *v7) + v97);
          *(void *)(a2 + v96) = v97 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v93 = 0;
        }
        uint64_t v135 = 40;
        goto LABEL_246;
      case 0x17u:
        *(_DWORD *)(a1 + 268) |= 0x20u;
        uint64_t v98 = *v3;
        unint64_t v99 = *(void *)(a2 + v98);
        if (v99 <= 0xFFFFFFFFFFFFFFF7 && v99 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v93 = *(void *)(*(void *)(a2 + *v7) + v99);
          *(void *)(a2 + v98) = v99 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v93 = 0;
        }
        uint64_t v135 = 48;
        goto LABEL_246;
      case 0x18u:
        *(_DWORD *)(a1 + 268) |= 0x40u;
        uint64_t v100 = *v3;
        unint64_t v101 = *(void *)(a2 + v100);
        if (v101 <= 0xFFFFFFFFFFFFFFF7 && v101 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v93 = *(void *)(*(void *)(a2 + *v7) + v101);
          *(void *)(a2 + v100) = v101 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v93 = 0;
        }
        uint64_t v135 = 56;
        goto LABEL_246;
      case 0x19u:
        *(_DWORD *)(a1 + 268) |= 0x80u;
        uint64_t v102 = *v3;
        unint64_t v103 = *(void *)(a2 + v102);
        if (v103 <= 0xFFFFFFFFFFFFFFF7 && v103 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v93 = *(void *)(*(void *)(a2 + *v7) + v103);
          *(void *)(a2 + v102) = v103 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v93 = 0;
        }
        uint64_t v135 = 64;
        goto LABEL_246;
      case 0x1Au:
        *(_DWORD *)(a1 + 268) |= 0x100u;
        uint64_t v104 = *v3;
        unint64_t v105 = *(void *)(a2 + v104);
        if (v105 <= 0xFFFFFFFFFFFFFFF7 && v105 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v93 = *(void *)(*(void *)(a2 + *v7) + v105);
          *(void *)(a2 + v104) = v105 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v93 = 0;
        }
        uint64_t v135 = 72;
        goto LABEL_246;
      case 0x1Bu:
        *(_DWORD *)(a1 + 268) |= 0x200u;
        uint64_t v106 = *v3;
        unint64_t v107 = *(void *)(a2 + v106);
        if (v107 <= 0xFFFFFFFFFFFFFFF7 && v107 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v93 = *(void *)(*(void *)(a2 + *v7) + v107);
          *(void *)(a2 + v106) = v107 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v93 = 0;
        }
        uint64_t v135 = 80;
        goto LABEL_246;
      case 0x1Cu:
        *(_DWORD *)(a1 + 268) |= 0x400u;
        uint64_t v108 = *v3;
        unint64_t v109 = *(void *)(a2 + v108);
        if (v109 <= 0xFFFFFFFFFFFFFFF7 && v109 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v93 = *(void *)(*(void *)(a2 + *v7) + v109);
          *(void *)(a2 + v108) = v109 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v93 = 0;
        }
        uint64_t v135 = 88;
        goto LABEL_246;
      case 0x1Du:
        *(_DWORD *)(a1 + 268) |= 0x800u;
        uint64_t v110 = *v3;
        unint64_t v111 = *(void *)(a2 + v110);
        if (v111 <= 0xFFFFFFFFFFFFFFF7 && v111 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v93 = *(void *)(*(void *)(a2 + *v7) + v111);
          *(void *)(a2 + v110) = v111 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v93 = 0;
        }
        uint64_t v135 = 96;
        goto LABEL_246;
      case 0x1Eu:
        *(_DWORD *)(a1 + 268) |= 0x2000u;
        uint64_t v112 = *v3;
        unint64_t v113 = *(void *)(a2 + v112);
        if (v113 <= 0xFFFFFFFFFFFFFFF7 && v113 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v93 = *(void *)(*(void *)(a2 + *v7) + v113);
          *(void *)(a2 + v112) = v113 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v93 = 0;
        }
        uint64_t v135 = 112;
LABEL_246:
        *(void *)(a1 + v135) = v93;
        goto LABEL_247;
      case 0x1Fu:
        char v90 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 208), v90);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v90, a2) & 1) == 0) {
          goto LABEL_252;
        }
        goto LABEL_149;
      case 0x20u:
        char v90 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 216), v90);
        if (!PBReaderPlaceMark() || (NTPBIssueViewDataReadFrom((uint64_t)v90, a2) & 1) == 0) {
          goto LABEL_252;
        }
        goto LABEL_149;
      case 0x21u:
        char v90 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 144), v90);
        if PBReaderPlaceMark() && (NTPBChannelDataReadFrom((uint64_t)v90, a2))
        {
LABEL_149:
          PBReaderRecallMark();

LABEL_247:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_252:

        return 0;
      case 0x22u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 224;
LABEL_151:
        char v114 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_247;
      case 0x23u:
        char v115 = 0;
        unsigned int v116 = 0;
        uint64_t v117 = 0;
        *(_DWORD *)(a1 + 268) |= 0x1000000u;
        while (2)
        {
          uint64_t v118 = *v3;
          uint64_t v119 = *(void *)(a2 + v118);
          unint64_t v120 = v119 + 1;
          if (v119 == -1 || v120 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v121 = *(unsigned char *)(*(void *)(a2 + *v7) + v119);
            *(void *)(a2 + v118) = v120;
            v117 |= (unint64_t)(v121 & 0x7F) << v115;
            if (v121 < 0)
            {
              v115 += 7;
              BOOL v15 = v116++ >= 9;
              if (v15)
              {
                uint64_t v117 = 0;
                goto LABEL_217;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v117 = 0;
        }
LABEL_217:
        BOOL v131 = v117 != 0;
        uint64_t v132 = 265;
LABEL_218:
        *(unsigned char *)(a1 + v132) = v131;
        goto LABEL_247;
      case 0x24u:
        *(_DWORD *)(a1 + 268) |= 0x80000u;
        uint64_t v122 = *v3;
        unint64_t v123 = *(void *)(a2 + v122);
        if (v123 <= 0xFFFFFFFFFFFFFFFBLL && v123 + 4 <= *(void *)(a2 + *v4))
        {
          int v124 = *(_DWORD *)(*(void *)(a2 + *v7) + v123);
          *(void *)(a2 + v122) = v123 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v124 = 0;
        }
        *(_DWORD *)(a1 + 240) = v124;
        goto LABEL_247;
      case 0x25u:
        char v125 = 0;
        unsigned int v126 = 0;
        uint64_t v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x4000u;
        while (2)
        {
          uint64_t v127 = *v3;
          uint64_t v128 = *(void *)(a2 + v127);
          unint64_t v129 = v128 + 1;
          if (v128 == -1 || v129 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v130 = *(unsigned char *)(*(void *)(a2 + *v7) + v128);
            *(void *)(a2 + v127) = v129;
            v30 |= (unint64_t)(v130 & 0x7F) << v125;
            if (v130 < 0)
            {
              v125 += 7;
              BOOL v15 = v126++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_222;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v30) = 0;
        }
LABEL_222:
        uint64_t v133 = 136;
LABEL_223:
        *(_DWORD *)(a1 + v133) = v30;
        goto LABEL_247;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_247;
    }
  }
}

uint64_t NTPBNotificationSettingsScreenViewReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = 0;
              unsigned int v18 = 0;
              uint64_t v19 = 0;
              *(unsigned char *)(a1 + 36) |= 1u;
              break;
            case 2u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 8;
              goto LABEL_31;
            case 3u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 16;
              goto LABEL_31;
            case 4u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 24;
LABEL_31:
              unint64_t v26 = *(void **)(a1 + v25);
              *(void *)(a1 + v25) = v24;

              goto LABEL_36;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_36:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_33;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_35;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_35:
          *(_DWORD *)(a1 + 32) = v19;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBUrlMappingMissReadFrom(char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 8;
LABEL_25:
        uint64_t v20 = *(void **)&a1[v19];
        *(void *)&a1[v19] = v18;
LABEL_26:

        goto LABEL_28;
      }
      if (v17 == 1)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 24;
        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v20 = PBReaderReadString();
    if (v20) {
      [a1 addPaths:v20];
    }
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBPersonalizationBucketReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 32) |= 4u;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            uint64_t v25 = &OBJC_IVAR___NTPBPersonalizationBucket__treatmentId;
            goto LABEL_48;
          }
          v26 += 7;
          BOOL v24 = v27++ > 8;
          if (v24)
          {
            uint64_t v20 = 0;
            uint64_t v25 = &OBJC_IVAR___NTPBPersonalizationBucket__treatmentId;
            goto LABEL_50;
          }
        }
        uint64_t v25 = &OBJC_IVAR___NTPBPersonalizationBucket__treatmentId;
LABEL_47:
        *(unsigned char *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 32) |= 2u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4))
          {
            uint64_t v25 = &OBJC_IVAR___NTPBPersonalizationBucket__minimum;
            goto LABEL_47;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            break;
          }
          v18 += 7;
          BOOL v24 = v19++ > 8;
          if (v24)
          {
            uint64_t v20 = 0;
            uint64_t v25 = &OBJC_IVAR___NTPBPersonalizationBucket__minimum;
            goto LABEL_50;
          }
        }
        uint64_t v25 = &OBJC_IVAR___NTPBPersonalizationBucket__minimum;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_51:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v31 = 0;
    unsigned int v32 = 0;
    uint64_t v20 = 0;
    *(unsigned char *)(a1 + 32) |= 1u;
    while (1)
    {
      uint64_t v33 = *v3;
      unint64_t v34 = *(void *)(a2 + v33);
      if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
      {
        uint64_t v25 = &OBJC_IVAR___NTPBPersonalizationBucket__maximum;
        goto LABEL_47;
      }
      char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
      *(void *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0) {
        break;
      }
      v31 += 7;
      BOOL v24 = v32++ > 8;
      if (v24)
      {
        uint64_t v20 = 0;
        uint64_t v25 = &OBJC_IVAR___NTPBPersonalizationBucket__maximum;
        goto LABEL_50;
      }
    }
    uint64_t v25 = &OBJC_IVAR___NTPBPersonalizationBucket__maximum;
LABEL_48:
    if (*(unsigned char *)(a2 + *v5)) {
      uint64_t v20 = 0;
    }
LABEL_50:
    *(void *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBDevicePushTokenUpdateRequestReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 24;
        goto LABEL_28;
      case 2u:
        unsigned int v19 = objc_alloc_init(NTPBDeviceInfo);
        uint64_t v20 = 8;
        goto LABEL_24;
      case 3u:
        unsigned int v19 = objc_alloc_init(NTPBDeviceInfo);
        uint64_t v20 = 16;
LABEL_24:
        objc_storeStrong((id *)(a1 + v20), v19);
        if PBReaderPlaceMark() && (NTPBDeviceInfoReadFrom(v19, a2))
        {
          PBReaderRecallMark();
LABEL_29:

LABEL_30:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 4u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 32;
LABEL_28:
        unsigned int v19 = *(NTPBDeviceInfo **)(a1 + v18);
        *(void *)(a1 + v18) = v17;
        goto LABEL_29;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_30;
    }
  }
}

uint64_t NTPBPersonalizationTreatmentReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 3000) |= 0x8000000000000uLL;
        while (1)
        {
          uint64_t v20 = *v3;
          uint64_t v21 = *(void *)(a2 + v20);
          unint64_t v22 = v21 + 1;
          if (v21 == -1 || v22 > *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v22;
          v19 |= (unint64_t)(v23 & 0x7F) << v17;
          if ((v23 & 0x80) == 0) {
            goto LABEL_1488;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_1490;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_1488:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1490:
        uint64_t v1034 = 2464;
        goto LABEL_1761;
      case 2u:
        *(void *)(a1 + 2968) |= 0x2000000000000000uLL;
        uint64_t v24 = *v3;
        unint64_t v25 = *(void *)(a2 + v24);
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v25);
          *(void *)(a2 + v24) = v25 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 496;
        goto LABEL_2418;
      case 5u:
        *(void *)(a1 + 2968) |= 0x2000000000uLL;
        uint64_t v28 = *v3;
        unint64_t v29 = *(void *)(a2 + v28);
        if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 304;
        goto LABEL_2418;
      case 6u:
        *(void *)(a1 + 2968) |= 0x4000000000uLL;
        uint64_t v30 = *v3;
        unint64_t v31 = *(void *)(a2 + v30);
        if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v31 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 312;
        goto LABEL_2418;
      case 7u:
        *(void *)(a1 + 2976) |= 0x20000uLL;
        uint64_t v32 = *v3;
        unint64_t v33 = *(void *)(a2 + v32);
        if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v33);
          *(void *)(a2 + v32) = v33 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 656;
        goto LABEL_2418;
      case 8u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        *(_WORD *)(a1 + 3016) |= 0x40u;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v14 = v35++ >= 9;
              if (v14)
              {
                uint64_t v36 = 0;
                goto LABEL_1494;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_1494:
        BOOL v1035 = v36 != 0;
        uint64_t v1036 = 2960;
        goto LABEL_1747;
      case 9u:
        *(void *)(a1 + 2976) |= 0x800000uLL;
        uint64_t v41 = *v3;
        unint64_t v42 = *(void *)(a2 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v42);
          *(void *)(a2 + v41) = v42 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 704;
        goto LABEL_2418;
      case 0xAu:
        *(void *)(a1 + 2992) |= 0x20000000000000uLL;
        uint64_t v43 = *v3;
        unint64_t v44 = *(void *)(a2 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v44);
          *(void *)(a2 + v43) = v44 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1968;
        goto LABEL_2418;
      case 0xBu:
        *(void *)(a1 + 2984) |= 0x40000000000uLL;
        uint64_t v45 = *v3;
        unint64_t v46 = *(void *)(a2 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v46);
          *(void *)(a2 + v45) = v46 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1368;
        goto LABEL_2418;
      case 0xCu:
        *(void *)(a1 + 2976) |= 0x1000000uLL;
        uint64_t v47 = *v3;
        unint64_t v48 = *(void *)(a2 + v47);
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v48);
          *(void *)(a2 + v47) = v48 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 712;
        goto LABEL_2418;
      case 0xDu:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2992) |= 0x10uLL;
        while (2)
        {
          uint64_t v51 = *v3;
          uint64_t v52 = *(void *)(a2 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
            *(void *)(a2 + v51) = v53;
            v19 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v14 = v50++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1498;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1498:
        uint64_t v1034 = 1576;
        goto LABEL_1761;
      case 0xEu:
        *(void *)(a1 + 2984) |= 0x400000000000000uLL;
        uint64_t v55 = *v3;
        unint64_t v56 = *(void *)(a2 + v55);
        if (v56 <= 0xFFFFFFFFFFFFFFF7 && v56 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v56);
          *(void *)(a2 + v55) = v56 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1496;
        goto LABEL_2418;
      case 0xFu:
        *(void *)(a1 + 2976) |= 0x10000000000uLL;
        uint64_t v57 = *v3;
        unint64_t v58 = *(void *)(a2 + v57);
        if (v58 <= 0xFFFFFFFFFFFFFFF7 && v58 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v58);
          *(void *)(a2 + v57) = v58 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 840;
        goto LABEL_2418;
      case 0x10u:
        *(void *)(a1 + 2976) |= 0x1000000000000000uLL;
        uint64_t v59 = *v3;
        unint64_t v60 = *(void *)(a2 + v59);
        if (v60 <= 0xFFFFFFFFFFFFFFF7 && v60 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v60);
          *(void *)(a2 + v59) = v60 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1000;
        goto LABEL_2418;
      case 0x11u:
        *(void *)(a1 + 2992) |= 0x10000000000uLL;
        uint64_t v61 = *v3;
        unint64_t v62 = *(void *)(a2 + v61);
        if (v62 <= 0xFFFFFFFFFFFFFFF7 && v62 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v62);
          *(void *)(a2 + v61) = v62 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1864;
        goto LABEL_2418;
      case 0x12u:
        *(void *)(a1 + 2992) |= 0x20000000uLL;
        uint64_t v63 = *v3;
        unint64_t v64 = *(void *)(a2 + v63);
        if (v64 <= 0xFFFFFFFFFFFFFFF7 && v64 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v64);
          *(void *)(a2 + v63) = v64 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1776;
        goto LABEL_2418;
      case 0x13u:
        *(void *)(a1 + 2992) |= 0x200000000000uLL;
        uint64_t v65 = *v3;
        unint64_t v66 = *(void *)(a2 + v65);
        if (v66 <= 0xFFFFFFFFFFFFFFF7 && v66 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v66);
          *(void *)(a2 + v65) = v66 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1904;
        goto LABEL_2418;
      case 0x14u:
        *(void *)(a1 + 3000) |= 0x800uLL;
        uint64_t v67 = *v3;
        unint64_t v68 = *(void *)(a2 + v67);
        if (v68 <= 0xFFFFFFFFFFFFFFF7 && v68 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v68);
          *(void *)(a2 + v67) = v68 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2144;
        goto LABEL_2418;
      case 0x15u:
        *(void *)(a1 + 3008) |= 0x2000000uLL;
        uint64_t v69 = *v3;
        unint64_t v70 = *(void *)(a2 + v69);
        if (v70 <= 0xFFFFFFFFFFFFFFF7 && v70 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v70);
          *(void *)(a2 + v69) = v70 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2768;
        goto LABEL_2418;
      case 0x16u:
        *(void *)(a1 + 3000) |= 0x800000000000000uLL;
        uint64_t v71 = *v3;
        unint64_t v72 = *(void *)(a2 + v71);
        if (v72 <= 0xFFFFFFFFFFFFFFF7 && v72 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v72);
          *(void *)(a2 + v71) = v72 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2528;
        goto LABEL_2418;
      case 0x17u:
        *(void *)(a1 + 3008) |= 0x200000uLL;
        uint64_t v73 = *v3;
        unint64_t v74 = *(void *)(a2 + v73);
        if (v74 <= 0xFFFFFFFFFFFFFFF7 && v74 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v74);
          *(void *)(a2 + v73) = v74 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2736;
        goto LABEL_2418;
      case 0x18u:
        *(void *)(a1 + 2976) |= 2uLL;
        uint64_t v75 = *v3;
        unint64_t v76 = *(void *)(a2 + v75);
        if (v76 <= 0xFFFFFFFFFFFFFFF7 && v76 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v76);
          *(void *)(a2 + v75) = v76 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 528;
        goto LABEL_2418;
      case 0x19u:
        *(void *)(a1 + 2984) |= 0x100000000000000uLL;
        uint64_t v77 = *v3;
        unint64_t v78 = *(void *)(a2 + v77);
        if (v78 <= 0xFFFFFFFFFFFFFFF7 && v78 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v78);
          *(void *)(a2 + v77) = v78 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1480;
        goto LABEL_2418;
      case 0x1Au:
        *(void *)(a1 + 2976) |= 0x4000000000uLL;
        uint64_t v79 = *v3;
        unint64_t v80 = *(void *)(a2 + v79);
        if (v80 <= 0xFFFFFFFFFFFFFFF7 && v80 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v80);
          *(void *)(a2 + v79) = v80 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 824;
        goto LABEL_2418;
      case 0x1Bu:
        *(void *)(a1 + 2976) |= 0x400000000000000uLL;
        uint64_t v81 = *v3;
        unint64_t v82 = *(void *)(a2 + v81);
        if (v82 <= 0xFFFFFFFFFFFFFFF7 && v82 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v82);
          *(void *)(a2 + v81) = v82 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 984;
        goto LABEL_2418;
      case 0x1Cu:
        *(void *)(a1 + 2992) |= 0x4000000000uLL;
        uint64_t v83 = *v3;
        unint64_t v84 = *(void *)(a2 + v83);
        if (v84 <= 0xFFFFFFFFFFFFFFF7 && v84 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v84);
          *(void *)(a2 + v83) = v84 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1848;
        goto LABEL_2418;
      case 0x1Du:
        *(void *)(a1 + 2992) |= 0x8000000uLL;
        uint64_t v85 = *v3;
        unint64_t v86 = *(void *)(a2 + v85);
        if (v86 <= 0xFFFFFFFFFFFFFFF7 && v86 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v86);
          *(void *)(a2 + v85) = v86 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1760;
        goto LABEL_2418;
      case 0x1Eu:
        *(void *)(a1 + 2992) |= 0x80000000000uLL;
        uint64_t v87 = *v3;
        unint64_t v88 = *(void *)(a2 + v87);
        if (v88 <= 0xFFFFFFFFFFFFFFF7 && v88 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v88);
          *(void *)(a2 + v87) = v88 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1888;
        goto LABEL_2418;
      case 0x1Fu:
        *(void *)(a1 + 3000) |= 0x200uLL;
        uint64_t v89 = *v3;
        unint64_t v90 = *(void *)(a2 + v89);
        if (v90 <= 0xFFFFFFFFFFFFFFF7 && v90 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v90);
          *(void *)(a2 + v89) = v90 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2128;
        goto LABEL_2418;
      case 0x20u:
        *(void *)(a1 + 3008) |= 0x800000uLL;
        uint64_t v91 = *v3;
        unint64_t v92 = *(void *)(a2 + v91);
        if (v92 <= 0xFFFFFFFFFFFFFFF7 && v92 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v92);
          *(void *)(a2 + v91) = v92 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2752;
        goto LABEL_2418;
      case 0x21u:
        *(void *)(a1 + 3000) |= 0x200000000000000uLL;
        uint64_t v93 = *v3;
        unint64_t v94 = *(void *)(a2 + v93);
        if (v94 <= 0xFFFFFFFFFFFFFFF7 && v94 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v94);
          *(void *)(a2 + v93) = v94 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2512;
        goto LABEL_2418;
      case 0x22u:
        *(void *)(a1 + 3008) |= 0x80000uLL;
        uint64_t v95 = *v3;
        unint64_t v96 = *(void *)(a2 + v95);
        if (v96 <= 0xFFFFFFFFFFFFFFF7 && v96 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v96);
          *(void *)(a2 + v95) = v96 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2720;
        goto LABEL_2418;
      case 0x23u:
        *(void *)(a1 + 2968) |= 0x8000000000000000;
        uint64_t v97 = *v3;
        unint64_t v98 = *(void *)(a2 + v97);
        if (v98 <= 0xFFFFFFFFFFFFFFF7 && v98 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v98);
          *(void *)(a2 + v97) = v98 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 512;
        goto LABEL_2418;
      case 0x24u:
        *(void *)(a1 + 2976) |= 0x10000000000000uLL;
        uint64_t v99 = *v3;
        unint64_t v100 = *(void *)(a2 + v99);
        if (v100 <= 0xFFFFFFFFFFFFFFF7 && v100 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v100);
          *(void *)(a2 + v99) = v100 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 936;
        goto LABEL_2418;
      case 0x25u:
        *(void *)(a1 + 2976) |= 0x40000000000000uLL;
        uint64_t v101 = *v3;
        unint64_t v102 = *(void *)(a2 + v101);
        if (v102 <= 0xFFFFFFFFFFFFFFF7 && v102 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v102);
          *(void *)(a2 + v101) = v102 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 952;
        goto LABEL_2418;
      case 0x26u:
        *(void *)(a1 + 2976) |= 0x2000000000000uLL;
        uint64_t v103 = *v3;
        unint64_t v104 = *(void *)(a2 + v103);
        if (v104 <= 0xFFFFFFFFFFFFFFF7 && v104 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v104);
          *(void *)(a2 + v103) = v104 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 912;
        goto LABEL_2418;
      case 0x27u:
        *(void *)(a1 + 2968) |= 0x4000000000000000uLL;
        uint64_t v105 = *v3;
        unint64_t v106 = *(void *)(a2 + v105);
        if (v106 <= 0xFFFFFFFFFFFFFFF7 && v106 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v106);
          *(void *)(a2 + v105) = v106 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 504;
        goto LABEL_2418;
      case 0x28u:
        char v107 = 0;
        unsigned int v108 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2992) |= 0x40000000000uLL;
        while (2)
        {
          uint64_t v109 = *v3;
          uint64_t v110 = *(void *)(a2 + v109);
          unint64_t v111 = v110 + 1;
          if (v110 == -1 || v111 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v112 = *(unsigned char *)(*(void *)(a2 + *v7) + v110);
            *(void *)(a2 + v109) = v111;
            v19 |= (unint64_t)(v112 & 0x7F) << v107;
            if (v112 < 0)
            {
              v107 += 7;
              BOOL v14 = v108++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1502;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1502:
        uint64_t v1034 = 1880;
        goto LABEL_1761;
      case 0x29u:
        char v113 = 0;
        unsigned int v114 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2976) |= 0x40000uLL;
        while (2)
        {
          uint64_t v115 = *v3;
          uint64_t v116 = *(void *)(a2 + v115);
          unint64_t v117 = v116 + 1;
          if (v116 == -1 || v117 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v118 = *(unsigned char *)(*(void *)(a2 + *v7) + v116);
            *(void *)(a2 + v115) = v117;
            v19 |= (unint64_t)(v118 & 0x7F) << v113;
            if (v118 < 0)
            {
              v113 += 7;
              BOOL v14 = v114++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1506;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1506:
        uint64_t v1034 = 664;
        goto LABEL_1761;
      case 0x2Au:
        *(void *)(a1 + 2976) |= 0x200000uLL;
        uint64_t v119 = *v3;
        unint64_t v120 = *(void *)(a2 + v119);
        if (v120 <= 0xFFFFFFFFFFFFFFF7 && v120 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v120);
          *(void *)(a2 + v119) = v120 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 688;
        goto LABEL_2418;
      case 0x2Bu:
        *(void *)(a1 + 2976) |= 0x2000000000uLL;
        uint64_t v121 = *v3;
        unint64_t v122 = *(void *)(a2 + v121);
        if (v122 <= 0xFFFFFFFFFFFFFFF7 && v122 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v122);
          *(void *)(a2 + v121) = v122 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 816;
        goto LABEL_2418;
      case 0x2Cu:
        *(void *)(a1 + 2976) |= 0x10uLL;
        uint64_t v123 = *v3;
        unint64_t v124 = *(void *)(a2 + v123);
        if (v124 <= 0xFFFFFFFFFFFFFFF7 && v124 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v124);
          *(void *)(a2 + v123) = v124 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 552;
        goto LABEL_2418;
      case 0x2Du:
        *(void *)(a1 + 2976) |= 0x40000000000uLL;
        uint64_t v125 = *v3;
        unint64_t v126 = *(void *)(a2 + v125);
        if (v126 <= 0xFFFFFFFFFFFFFFF7 && v126 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v126);
          *(void *)(a2 + v125) = v126 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 856;
        goto LABEL_2418;
      case 0x2Eu:
        *(void *)(a1 + 2992) |= 0x8000000000000uLL;
        uint64_t v127 = *v3;
        unint64_t v128 = *(void *)(a2 + v127);
        if (v128 <= 0xFFFFFFFFFFFFFFF7 && v128 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v128);
          *(void *)(a2 + v127) = v128 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1952;
        goto LABEL_2418;
      case 0x2Fu:
        *(void *)(a1 + 2992) |= 0x2000000000000uLL;
        uint64_t v129 = *v3;
        unint64_t v130 = *(void *)(a2 + v129);
        if (v130 <= 0xFFFFFFFFFFFFFFF7 && v130 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v130);
          *(void *)(a2 + v129) = v130 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1936;
        goto LABEL_2418;
      case 0x30u:
        *(void *)(a1 + 2976) |= 0x20000000000000uLL;
        uint64_t v131 = *v3;
        unint64_t v132 = *(void *)(a2 + v131);
        if (v132 <= 0xFFFFFFFFFFFFFFF7 && v132 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v132);
          *(void *)(a2 + v131) = v132 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 944;
        goto LABEL_2418;
      case 0x31u:
        char v133 = 0;
        unsigned int v134 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2976) |= 0x10000uLL;
        while (2)
        {
          uint64_t v135 = *v3;
          uint64_t v136 = *(void *)(a2 + v135);
          unint64_t v137 = v136 + 1;
          if (v136 == -1 || v137 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v138 = *(unsigned char *)(*(void *)(a2 + *v7) + v136);
            *(void *)(a2 + v135) = v137;
            v19 |= (unint64_t)(v138 & 0x7F) << v133;
            if (v138 < 0)
            {
              v133 += 7;
              BOOL v14 = v134++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1510;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1510:
        uint64_t v1034 = 648;
        goto LABEL_1761;
      case 0x32u:
        *(void *)(a1 + 2976) |= 0x100000uLL;
        uint64_t v139 = *v3;
        unint64_t v140 = *(void *)(a2 + v139);
        if (v140 <= 0xFFFFFFFFFFFFFFF7 && v140 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v140);
          *(void *)(a2 + v139) = v140 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 680;
        goto LABEL_2418;
      case 0x33u:
        *(void *)(a1 + 2976) |= 0x80000uLL;
        uint64_t v141 = *v3;
        unint64_t v142 = *(void *)(a2 + v141);
        if (v142 <= 0xFFFFFFFFFFFFFFF7 && v142 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v142);
          *(void *)(a2 + v141) = v142 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 672;
        goto LABEL_2418;
      case 0x34u:
        *(void *)(a1 + 2976) |= 0x400000uLL;
        uint64_t v143 = *v3;
        unint64_t v144 = *(void *)(a2 + v143);
        if (v144 <= 0xFFFFFFFFFFFFFFF7 && v144 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v144);
          *(void *)(a2 + v143) = v144 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 696;
        goto LABEL_2418;
      case 0x35u:
        *(void *)(a1 + 2984) |= 0x800000000000000uLL;
        uint64_t v145 = *v3;
        unint64_t v146 = *(void *)(a2 + v145);
        if (v146 <= 0xFFFFFFFFFFFFFFF7 && v146 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v146);
          *(void *)(a2 + v145) = v146 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1504;
        goto LABEL_2418;
      case 0x36u:
        *(void *)(a1 + 2976) |= 0x20000000000uLL;
        uint64_t v147 = *v3;
        unint64_t v148 = *(void *)(a2 + v147);
        if (v148 <= 0xFFFFFFFFFFFFFFF7 && v148 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v148);
          *(void *)(a2 + v147) = v148 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 848;
        goto LABEL_2418;
      case 0x37u:
        *(void *)(a1 + 2976) |= 0x2000000000000000uLL;
        uint64_t v149 = *v3;
        unint64_t v150 = *(void *)(a2 + v149);
        if (v150 <= 0xFFFFFFFFFFFFFFF7 && v150 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v150);
          *(void *)(a2 + v149) = v150 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1008;
        goto LABEL_2418;
      case 0x38u:
        *(void *)(a1 + 2992) |= 0x20000000000uLL;
        uint64_t v151 = *v3;
        unint64_t v152 = *(void *)(a2 + v151);
        if (v152 <= 0xFFFFFFFFFFFFFFF7 && v152 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v152);
          *(void *)(a2 + v151) = v152 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1872;
        goto LABEL_2418;
      case 0x39u:
        *(void *)(a1 + 2992) |= 0x40000000uLL;
        uint64_t v153 = *v3;
        unint64_t v154 = *(void *)(a2 + v153);
        if (v154 <= 0xFFFFFFFFFFFFFFF7 && v154 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v154);
          *(void *)(a2 + v153) = v154 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1784;
        goto LABEL_2418;
      case 0x3Au:
        *(void *)(a1 + 2992) |= 0x400000000000uLL;
        uint64_t v155 = *v3;
        unint64_t v156 = *(void *)(a2 + v155);
        if (v156 <= 0xFFFFFFFFFFFFFFF7 && v156 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v156);
          *(void *)(a2 + v155) = v156 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1912;
        goto LABEL_2418;
      case 0x3Bu:
        *(void *)(a1 + 3000) |= 0x1000uLL;
        uint64_t v157 = *v3;
        unint64_t v158 = *(void *)(a2 + v157);
        if (v158 <= 0xFFFFFFFFFFFFFFF7 && v158 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v158);
          *(void *)(a2 + v157) = v158 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2152;
        goto LABEL_2418;
      case 0x3Cu:
        *(void *)(a1 + 3008) |= 0x4000000uLL;
        uint64_t v159 = *v3;
        unint64_t v160 = *(void *)(a2 + v159);
        if (v160 <= 0xFFFFFFFFFFFFFFF7 && v160 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v160);
          *(void *)(a2 + v159) = v160 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2776;
        goto LABEL_2418;
      case 0x3Du:
        *(void *)(a1 + 3000) |= 0x1000000000000000uLL;
        uint64_t v161 = *v3;
        unint64_t v162 = *(void *)(a2 + v161);
        if (v162 <= 0xFFFFFFFFFFFFFFF7 && v162 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v162);
          *(void *)(a2 + v161) = v162 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2536;
        goto LABEL_2418;
      case 0x3Eu:
        *(void *)(a1 + 3008) |= 0x400000uLL;
        uint64_t v163 = *v3;
        unint64_t v164 = *(void *)(a2 + v163);
        if (v164 <= 0xFFFFFFFFFFFFFFF7 && v164 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v164);
          *(void *)(a2 + v163) = v164 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2744;
        goto LABEL_2418;
      case 0x3Fu:
        *(void *)(a1 + 2976) |= 4uLL;
        uint64_t v165 = *v3;
        unint64_t v166 = *(void *)(a2 + v165);
        if (v166 <= 0xFFFFFFFFFFFFFFF7 && v166 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v166);
          *(void *)(a2 + v165) = v166 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 536;
        goto LABEL_2418;
      case 0x40u:
        *(void *)(a1 + 2992) |= 0x10000000000000uLL;
        uint64_t v167 = *v3;
        unint64_t v168 = *(void *)(a2 + v167);
        if (v168 <= 0xFFFFFFFFFFFFFFF7 && v168 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v168);
          *(void *)(a2 + v167) = v168 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1960;
        goto LABEL_2418;
      case 0x41u:
        *(void *)(a1 + 2984) |= 0x200000000000000uLL;
        uint64_t v169 = *v3;
        unint64_t v170 = *(void *)(a2 + v169);
        if (v170 <= 0xFFFFFFFFFFFFFFF7 && v170 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v170);
          *(void *)(a2 + v169) = v170 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1488;
        goto LABEL_2418;
      case 0x42u:
        *(void *)(a1 + 2976) |= 0x8000000000uLL;
        uint64_t v171 = *v3;
        unint64_t v172 = *(void *)(a2 + v171);
        if (v172 <= 0xFFFFFFFFFFFFFFF7 && v172 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v172);
          *(void *)(a2 + v171) = v172 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 832;
        goto LABEL_2418;
      case 0x43u:
        *(void *)(a1 + 2976) |= 0x800000000000000uLL;
        uint64_t v173 = *v3;
        unint64_t v174 = *(void *)(a2 + v173);
        if (v174 <= 0xFFFFFFFFFFFFFFF7 && v174 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v174);
          *(void *)(a2 + v173) = v174 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 992;
        goto LABEL_2418;
      case 0x44u:
        *(void *)(a1 + 2992) |= 0x8000000000uLL;
        uint64_t v175 = *v3;
        unint64_t v176 = *(void *)(a2 + v175);
        if (v176 <= 0xFFFFFFFFFFFFFFF7 && v176 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v176);
          *(void *)(a2 + v175) = v176 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1856;
        goto LABEL_2418;
      case 0x45u:
        *(void *)(a1 + 2992) |= 0x10000000uLL;
        uint64_t v177 = *v3;
        unint64_t v178 = *(void *)(a2 + v177);
        if (v178 <= 0xFFFFFFFFFFFFFFF7 && v178 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v178);
          *(void *)(a2 + v177) = v178 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1768;
        goto LABEL_2418;
      case 0x46u:
        *(void *)(a1 + 2992) |= 0x100000000000uLL;
        uint64_t v179 = *v3;
        unint64_t v180 = *(void *)(a2 + v179);
        if (v180 <= 0xFFFFFFFFFFFFFFF7 && v180 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v180);
          *(void *)(a2 + v179) = v180 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1896;
        goto LABEL_2418;
      case 0x47u:
        *(void *)(a1 + 3000) |= 0x400uLL;
        uint64_t v181 = *v3;
        unint64_t v182 = *(void *)(a2 + v181);
        if (v182 <= 0xFFFFFFFFFFFFFFF7 && v182 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v182);
          *(void *)(a2 + v181) = v182 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2136;
        goto LABEL_2418;
      case 0x48u:
        *(void *)(a1 + 3008) |= 0x1000000uLL;
        uint64_t v183 = *v3;
        unint64_t v184 = *(void *)(a2 + v183);
        if (v184 <= 0xFFFFFFFFFFFFFFF7 && v184 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v184);
          *(void *)(a2 + v183) = v184 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2760;
        goto LABEL_2418;
      case 0x49u:
        *(void *)(a1 + 3000) |= 0x400000000000000uLL;
        uint64_t v185 = *v3;
        unint64_t v186 = *(void *)(a2 + v185);
        if (v186 <= 0xFFFFFFFFFFFFFFF7 && v186 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v186);
          *(void *)(a2 + v185) = v186 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2520;
        goto LABEL_2418;
      case 0x4Au:
        *(void *)(a1 + 3008) |= 0x100000uLL;
        uint64_t v187 = *v3;
        unint64_t v188 = *(void *)(a2 + v187);
        if (v188 <= 0xFFFFFFFFFFFFFFF7 && v188 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v188);
          *(void *)(a2 + v187) = v188 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2728;
        goto LABEL_2418;
      case 0x4Bu:
        *(void *)(a1 + 2976) |= 1uLL;
        uint64_t v189 = *v3;
        unint64_t v190 = *(void *)(a2 + v189);
        if (v190 <= 0xFFFFFFFFFFFFFFF7 && v190 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v190);
          *(void *)(a2 + v189) = v190 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 520;
        goto LABEL_2418;
      case 0x4Cu:
        *(void *)(a1 + 2992) |= 0x4000000000000uLL;
        uint64_t v191 = *v3;
        unint64_t v192 = *(void *)(a2 + v191);
        if (v192 <= 0xFFFFFFFFFFFFFFF7 && v192 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v192);
          *(void *)(a2 + v191) = v192 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1944;
        goto LABEL_2418;
      case 0x4Du:
        *(void *)(a1 + 2976) |= 0x100uLL;
        uint64_t v193 = *v3;
        unint64_t v194 = *(void *)(a2 + v193);
        if (v194 <= 0xFFFFFFFFFFFFFFF7 && v194 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v194);
          *(void *)(a2 + v193) = v194 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 584;
        goto LABEL_2418;
      case 0x4Eu:
        *(void *)(a1 + 2976) |= 0x40uLL;
        uint64_t v195 = *v3;
        unint64_t v196 = *(void *)(a2 + v195);
        if (v196 <= 0xFFFFFFFFFFFFFFF7 && v196 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v196);
          *(void *)(a2 + v195) = v196 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 568;
        goto LABEL_2418;
      case 0x4Fu:
        *(void *)(a1 + 2976) |= 0x200uLL;
        uint64_t v197 = *v3;
        unint64_t v198 = *(void *)(a2 + v197);
        if (v198 <= 0xFFFFFFFFFFFFFFF7 && v198 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v198);
          *(void *)(a2 + v197) = v198 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 592;
        goto LABEL_2418;
      case 0x50u:
        *(void *)(a1 + 2976) |= 0x80uLL;
        uint64_t v199 = *v3;
        unint64_t v200 = *(void *)(a2 + v199);
        if (v200 <= 0xFFFFFFFFFFFFFFF7 && v200 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v200);
          *(void *)(a2 + v199) = v200 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 576;
        goto LABEL_2418;
      case 0x51u:
        *(void *)(a1 + 2976) |= 0x1000uLL;
        uint64_t v201 = *v3;
        unint64_t v202 = *(void *)(a2 + v201);
        if (v202 <= 0xFFFFFFFFFFFFFFF7 && v202 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v202);
          *(void *)(a2 + v201) = v202 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 616;
        goto LABEL_2418;
      case 0x52u:
        *(void *)(a1 + 2976) |= 0x400uLL;
        uint64_t v203 = *v3;
        unint64_t v204 = *(void *)(a2 + v203);
        if (v204 <= 0xFFFFFFFFFFFFFFF7 && v204 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v204);
          *(void *)(a2 + v203) = v204 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 600;
        goto LABEL_2418;
      case 0x53u:
        *(void *)(a1 + 2976) |= 0x2000uLL;
        uint64_t v205 = *v3;
        unint64_t v206 = *(void *)(a2 + v205);
        if (v206 <= 0xFFFFFFFFFFFFFFF7 && v206 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v206);
          *(void *)(a2 + v205) = v206 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 624;
        goto LABEL_2418;
      case 0x54u:
        *(void *)(a1 + 2976) |= 0x800uLL;
        uint64_t v207 = *v3;
        unint64_t v208 = *(void *)(a2 + v207);
        if (v208 <= 0xFFFFFFFFFFFFFFF7 && v208 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v208);
          *(void *)(a2 + v207) = v208 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 608;
        goto LABEL_2418;
      case 0x55u:
        *(void *)(a1 + 2976) |= 0x8000000uLL;
        uint64_t v209 = *v3;
        unint64_t v210 = *(void *)(a2 + v209);
        if (v210 <= 0xFFFFFFFFFFFFFFF7 && v210 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v210);
          *(void *)(a2 + v209) = v210 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 736;
        goto LABEL_2418;
      case 0x56u:
        *(void *)(a1 + 2976) |= 0x4000000000000uLL;
        uint64_t v211 = *v3;
        unint64_t v212 = *(void *)(a2 + v211);
        if (v212 <= 0xFFFFFFFFFFFFFFF7 && v212 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v212);
          *(void *)(a2 + v211) = v212 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 920;
        goto LABEL_2418;
      case 0x57u:
        *(void *)(a1 + 2976) |= 0x1000000000000uLL;
        uint64_t v213 = *v3;
        unint64_t v214 = *(void *)(a2 + v213);
        if (v214 <= 0xFFFFFFFFFFFFFFF7 && v214 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v214);
          *(void *)(a2 + v213) = v214 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 904;
        goto LABEL_2418;
      case 0x59u:
        *(void *)(a1 + 2992) |= 0x4000000uLL;
        uint64_t v215 = *v3;
        unint64_t v216 = *(void *)(a2 + v215);
        if (v216 <= 0xFFFFFFFFFFFFFFF7 && v216 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v216);
          *(void *)(a2 + v215) = v216 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1752;
        goto LABEL_2418;
      case 0x5Au:
        *(void *)(a1 + 2984) |= 0x4000000000000000uLL;
        uint64_t v217 = *v3;
        unint64_t v218 = *(void *)(a2 + v217);
        if (v218 <= 0xFFFFFFFFFFFFFFF7 && v218 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v218);
          *(void *)(a2 + v217) = v218 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1528;
        goto LABEL_2418;
      case 0x5Bu:
        char v219 = 0;
        unsigned int v220 = 0;
        uint64_t v221 = 0;
        *(_WORD *)(a1 + 3016) |= 0x200u;
        while (2)
        {
          uint64_t v222 = *v3;
          unint64_t v223 = *(void *)(a2 + v222);
          if (v223 == -1 || v223 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v224 = *(unsigned char *)(*(void *)(a2 + *v7) + v223);
            *(void *)(a2 + v222) = v223 + 1;
            v221 |= (unint64_t)(v224 & 0x7F) << v219;
            if (v224 < 0)
            {
              v219 += 7;
              BOOL v14 = v220++ >= 9;
              if (v14)
              {
                uint64_t v221 = 0;
                goto LABEL_1514;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v221 = 0;
        }
LABEL_1514:
        BOOL v1035 = v221 != 0;
        uint64_t v1036 = 2963;
        goto LABEL_1747;
      case 0x5Cu:
        *(void *)(a1 + 2976) |= 0x400000000000uLL;
        uint64_t v225 = *v3;
        unint64_t v226 = *(void *)(a2 + v225);
        if (v226 <= 0xFFFFFFFFFFFFFFF7 && v226 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v226);
          *(void *)(a2 + v225) = v226 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 888;
        goto LABEL_2418;
      case 0x5Du:
        *(void *)(a1 + 2976) |= 0x800000000000uLL;
        uint64_t v227 = *v3;
        unint64_t v228 = *(void *)(a2 + v227);
        if (v228 <= 0xFFFFFFFFFFFFFFF7 && v228 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v228);
          *(void *)(a2 + v227) = v228 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 896;
        goto LABEL_2418;
      case 0x5Eu:
        *(void *)(a1 + 2976) |= 0x8000000000000uLL;
        uint64_t v229 = *v3;
        unint64_t v230 = *(void *)(a2 + v229);
        if (v230 <= 0xFFFFFFFFFFFFFFF7 && v230 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v230);
          *(void *)(a2 + v229) = v230 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 928;
        goto LABEL_2418;
      case 0x5Fu:
        *(void *)(a1 + 2992) |= 0x2000uLL;
        uint64_t v231 = *v3;
        unint64_t v232 = *(void *)(a2 + v231);
        if (v232 <= 0xFFFFFFFFFFFFFFF7 && v232 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v232);
          *(void *)(a2 + v231) = v232 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1648;
        goto LABEL_2418;
      case 0x60u:
        *(void *)(a1 + 2992) |= 0x800uLL;
        uint64_t v233 = *v3;
        unint64_t v234 = *(void *)(a2 + v233);
        if (v234 <= 0xFFFFFFFFFFFFFFF7 && v234 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v234);
          *(void *)(a2 + v233) = v234 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1632;
        goto LABEL_2418;
      case 0x61u:
        *(void *)(a1 + 2992) |= 0x200uLL;
        uint64_t v235 = *v3;
        unint64_t v236 = *(void *)(a2 + v235);
        if (v236 <= 0xFFFFFFFFFFFFFFF7 && v236 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v236);
          *(void *)(a2 + v235) = v236 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1616;
        goto LABEL_2418;
      case 0x62u:
        *(void *)(a1 + 2992) |= 0x80uLL;
        uint64_t v237 = *v3;
        unint64_t v238 = *(void *)(a2 + v237);
        if (v238 <= 0xFFFFFFFFFFFFFFF7 && v238 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v238);
          *(void *)(a2 + v237) = v238 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1600;
        goto LABEL_2418;
      case 0x63u:
        *(void *)(a1 + 2992) |= 0x4000uLL;
        uint64_t v239 = *v3;
        unint64_t v240 = *(void *)(a2 + v239);
        if (v240 <= 0xFFFFFFFFFFFFFFF7 && v240 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v240);
          *(void *)(a2 + v239) = v240 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1656;
        goto LABEL_2418;
      case 0x64u:
        *(void *)(a1 + 2992) |= 0x1000uLL;
        uint64_t v241 = *v3;
        unint64_t v242 = *(void *)(a2 + v241);
        if (v242 <= 0xFFFFFFFFFFFFFFF7 && v242 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v242);
          *(void *)(a2 + v241) = v242 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1640;
        goto LABEL_2418;
      case 0x65u:
        *(void *)(a1 + 2992) |= 0x400uLL;
        uint64_t v243 = *v3;
        unint64_t v244 = *(void *)(a2 + v243);
        if (v244 <= 0xFFFFFFFFFFFFFFF7 && v244 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v244);
          *(void *)(a2 + v243) = v244 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1624;
        goto LABEL_2418;
      case 0x66u:
        *(void *)(a1 + 2992) |= 0x100uLL;
        uint64_t v245 = *v3;
        unint64_t v246 = *(void *)(a2 + v245);
        if (v246 <= 0xFFFFFFFFFFFFFFF7 && v246 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v246);
          *(void *)(a2 + v245) = v246 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1608;
        goto LABEL_2418;
      case 0x67u:
        *(void *)(a1 + 2984) |= 0x40000000000000uLL;
        uint64_t v247 = *v3;
        unint64_t v248 = *(void *)(a2 + v247);
        if (v248 <= 0xFFFFFFFFFFFFFFF7 && v248 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v248);
          *(void *)(a2 + v247) = v248 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1464;
        goto LABEL_2418;
      case 0x68u:
        *(void *)(a1 + 2984) |= 0x10000000000000uLL;
        uint64_t v249 = *v3;
        unint64_t v250 = *(void *)(a2 + v249);
        if (v250 <= 0xFFFFFFFFFFFFFFF7 && v250 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v250);
          *(void *)(a2 + v249) = v250 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1448;
        goto LABEL_2418;
      case 0x69u:
        *(void *)(a1 + 2984) |= 0x80000000000000uLL;
        uint64_t v251 = *v3;
        unint64_t v252 = *(void *)(a2 + v251);
        if (v252 <= 0xFFFFFFFFFFFFFFF7 && v252 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v252);
          *(void *)(a2 + v251) = v252 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1472;
        goto LABEL_2418;
      case 0x6Au:
        *(void *)(a1 + 2984) |= 0x20000000000000uLL;
        uint64_t v253 = *v3;
        unint64_t v254 = *(void *)(a2 + v253);
        if (v254 <= 0xFFFFFFFFFFFFFFF7 && v254 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v254);
          *(void *)(a2 + v253) = v254 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1456;
        goto LABEL_2418;
      case 0x6Bu:
        *(void *)(a1 + 2976) |= 0x4000000000000000uLL;
        uint64_t v255 = *v3;
        unint64_t v256 = *(void *)(a2 + v255);
        if (v256 <= 0xFFFFFFFFFFFFFFF7 && v256 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v256);
          *(void *)(a2 + v255) = v256 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1016;
        goto LABEL_2418;
      case 0x6Cu:
        char v257 = 0;
        unsigned int v258 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2984) |= 0x400uLL;
        while (2)
        {
          uint64_t v259 = *v3;
          unint64_t v260 = *(void *)(a2 + v259);
          if (v260 == -1 || v260 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v261 = *(unsigned char *)(*(void *)(a2 + *v7) + v260);
            *(void *)(a2 + v259) = v260 + 1;
            v19 |= (unint64_t)(v261 & 0x7F) << v257;
            if (v261 < 0)
            {
              v257 += 7;
              BOOL v14 = v258++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1518;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1518:
        uint64_t v1034 = 1112;
        goto LABEL_1761;
      case 0x6Du:
        char v262 = 0;
        unsigned int v263 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2984) |= 4uLL;
        while (2)
        {
          uint64_t v264 = *v3;
          unint64_t v265 = *(void *)(a2 + v264);
          if (v265 == -1 || v265 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v266 = *(unsigned char *)(*(void *)(a2 + *v7) + v265);
            *(void *)(a2 + v264) = v265 + 1;
            v19 |= (unint64_t)(v266 & 0x7F) << v262;
            if (v266 < 0)
            {
              v262 += 7;
              BOOL v14 = v263++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1522;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1522:
        uint64_t v1034 = 1048;
        goto LABEL_1761;
      case 0x6Eu:
        char v267 = 0;
        unsigned int v268 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2976) |= 0x8000000000000000;
        while (2)
        {
          uint64_t v269 = *v3;
          unint64_t v270 = *(void *)(a2 + v269);
          if (v270 == -1 || v270 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v271 = *(unsigned char *)(*(void *)(a2 + *v7) + v270);
            *(void *)(a2 + v269) = v270 + 1;
            v19 |= (unint64_t)(v271 & 0x7F) << v267;
            if (v271 < 0)
            {
              v267 += 7;
              BOOL v14 = v268++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1526;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1526:
        uint64_t v1034 = 1024;
        goto LABEL_1761;
      case 0x6Fu:
        char v272 = 0;
        unsigned int v273 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2976) |= 0x80000000000uLL;
        while (2)
        {
          uint64_t v274 = *v3;
          unint64_t v275 = *(void *)(a2 + v274);
          if (v275 == -1 || v275 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v276 = *(unsigned char *)(*(void *)(a2 + *v7) + v275);
            *(void *)(a2 + v274) = v275 + 1;
            v19 |= (unint64_t)(v276 & 0x7F) << v272;
            if (v276 < 0)
            {
              v272 += 7;
              BOOL v14 = v273++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1530;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1530:
        uint64_t v1034 = 864;
        goto LABEL_1761;
      case 0x70u:
        char v277 = 0;
        unsigned int v278 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2992) |= 0x400000000uLL;
        while (2)
        {
          uint64_t v279 = *v3;
          unint64_t v280 = *(void *)(a2 + v279);
          if (v280 == -1 || v280 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v281 = *(unsigned char *)(*(void *)(a2 + *v7) + v280);
            *(void *)(a2 + v279) = v280 + 1;
            v19 |= (unint64_t)(v281 & 0x7F) << v277;
            if (v281 < 0)
            {
              v277 += 7;
              BOOL v14 = v278++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1534;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1534:
        uint64_t v1034 = 1816;
        goto LABEL_1761;
      case 0x71u:
        *(void *)(a1 + 2992) |= 0x80000000uLL;
        uint64_t v282 = *v3;
        unint64_t v283 = *(void *)(a2 + v282);
        if (v283 <= 0xFFFFFFFFFFFFFFF7 && v283 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v283);
          *(void *)(a2 + v282) = v283 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1792;
        goto LABEL_2418;
      case 0x72u:
        *(void *)(a1 + 2992) |= 0x2000000000uLL;
        uint64_t v284 = *v3;
        unint64_t v285 = *(void *)(a2 + v284);
        if (v285 <= 0xFFFFFFFFFFFFFFF7 && v285 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v285);
          *(void *)(a2 + v284) = v285 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1840;
        goto LABEL_2418;
      case 0x73u:
        char v286 = 0;
        unsigned int v287 = 0;
        uint64_t v288 = 0;
        *(_WORD *)(a1 + 3016) |= 2u;
        while (2)
        {
          uint64_t v289 = *v3;
          unint64_t v290 = *(void *)(a2 + v289);
          if (v290 == -1 || v290 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v291 = *(unsigned char *)(*(void *)(a2 + *v7) + v290);
            *(void *)(a2 + v289) = v290 + 1;
            v288 |= (unint64_t)(v291 & 0x7F) << v286;
            if (v291 < 0)
            {
              v286 += 7;
              BOOL v14 = v287++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1538;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1538:
        uint64_t v1037 = 2952;
        goto LABEL_1756;
      case 0x74u:
        char v292 = 0;
        unsigned int v293 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x400000000000000uLL;
        while (2)
        {
          uint64_t v294 = *v3;
          unint64_t v295 = *(void *)(a2 + v294);
          if (v295 == -1 || v295 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v296 = *(unsigned char *)(*(void *)(a2 + *v7) + v295);
            *(void *)(a2 + v294) = v295 + 1;
            v288 |= (unint64_t)(v296 & 0x7F) << v292;
            if (v296 < 0)
            {
              v292 += 7;
              BOOL v14 = v293++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1542;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1542:
        uint64_t v1037 = 2908;
        goto LABEL_1756;
      case 0x75u:
        char v297 = 0;
        unsigned int v298 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x20000000000uLL;
        while (2)
        {
          uint64_t v299 = *v3;
          unint64_t v300 = *(void *)(a2 + v299);
          if (v300 == -1 || v300 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v301 = *(unsigned char *)(*(void *)(a2 + *v7) + v300);
            *(void *)(a2 + v299) = v300 + 1;
            v288 |= (unint64_t)(v301 & 0x7F) << v297;
            if (v301 < 0)
            {
              v297 += 7;
              BOOL v14 = v298++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1546;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1546:
        uint64_t v1037 = 2840;
        goto LABEL_1756;
      case 0x76u:
        char v302 = 0;
        unsigned int v303 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x4000000000uLL;
        while (2)
        {
          uint64_t v304 = *v3;
          unint64_t v305 = *(void *)(a2 + v304);
          if (v305 == -1 || v305 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v306 = *(unsigned char *)(*(void *)(a2 + *v7) + v305);
            *(void *)(a2 + v304) = v305 + 1;
            v288 |= (unint64_t)(v306 & 0x7F) << v302;
            if (v306 < 0)
            {
              v302 += 7;
              BOOL v14 = v303++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1550;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1550:
        uint64_t v1037 = 2828;
        goto LABEL_1756;
      case 0x77u:
        char v307 = 0;
        unsigned int v308 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x10000000000000uLL;
        while (2)
        {
          uint64_t v309 = *v3;
          unint64_t v310 = *(void *)(a2 + v309);
          if (v310 == -1 || v310 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v311 = *(unsigned char *)(*(void *)(a2 + *v7) + v310);
            *(void *)(a2 + v309) = v310 + 1;
            v288 |= (unint64_t)(v311 & 0x7F) << v307;
            if (v311 < 0)
            {
              v307 += 7;
              BOOL v14 = v308++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1554;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1554:
        uint64_t v1037 = 2884;
        goto LABEL_1756;
      case 0x78u:
        char v312 = 0;
        unsigned int v313 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x100000000000uLL;
        while (2)
        {
          uint64_t v314 = *v3;
          unint64_t v315 = *(void *)(a2 + v314);
          if (v315 == -1 || v315 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v316 = *(unsigned char *)(*(void *)(a2 + *v7) + v315);
            *(void *)(a2 + v314) = v315 + 1;
            v288 |= (unint64_t)(v316 & 0x7F) << v312;
            if (v316 < 0)
            {
              v312 += 7;
              BOOL v14 = v313++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1558;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1558:
        uint64_t v1037 = 2852;
        goto LABEL_1756;
      case 0x79u:
        char v317 = 0;
        unsigned int v318 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x100000000000000uLL;
        while (2)
        {
          uint64_t v319 = *v3;
          unint64_t v320 = *(void *)(a2 + v319);
          if (v320 == -1 || v320 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v321 = *(unsigned char *)(*(void *)(a2 + *v7) + v320);
            *(void *)(a2 + v319) = v320 + 1;
            v288 |= (unint64_t)(v321 & 0x7F) << v317;
            if (v321 < 0)
            {
              v317 += 7;
              BOOL v14 = v318++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1562;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1562:
        uint64_t v1037 = 2900;
        goto LABEL_1756;
      case 0x7Au:
        char v322 = 0;
        unsigned int v323 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x1000000000000uLL;
        while (2)
        {
          uint64_t v324 = *v3;
          unint64_t v325 = *(void *)(a2 + v324);
          if (v325 == -1 || v325 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v326 = *(unsigned char *)(*(void *)(a2 + *v7) + v325);
            *(void *)(a2 + v324) = v325 + 1;
            v288 |= (unint64_t)(v326 & 0x7F) << v322;
            if (v326 < 0)
            {
              v322 += 7;
              BOOL v14 = v323++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1566;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1566:
        uint64_t v1037 = 2868;
        goto LABEL_1756;
      case 0x7Bu:
        char v327 = 0;
        unsigned int v328 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x4000000000000uLL;
        while (2)
        {
          uint64_t v329 = *v3;
          unint64_t v330 = *(void *)(a2 + v329);
          if (v330 == -1 || v330 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v331 = *(unsigned char *)(*(void *)(a2 + *v7) + v330);
            *(void *)(a2 + v329) = v330 + 1;
            v288 |= (unint64_t)(v331 & 0x7F) << v327;
            if (v331 < 0)
            {
              v327 += 7;
              BOOL v14 = v328++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1570;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1570:
        uint64_t v1037 = 2876;
        goto LABEL_1756;
      case 0x7Cu:
        char v332 = 0;
        unsigned int v333 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x40000000000uLL;
        while (2)
        {
          uint64_t v334 = *v3;
          unint64_t v335 = *(void *)(a2 + v334);
          if (v335 == -1 || v335 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v336 = *(unsigned char *)(*(void *)(a2 + *v7) + v335);
            *(void *)(a2 + v334) = v335 + 1;
            v288 |= (unint64_t)(v336 & 0x7F) << v332;
            if (v336 < 0)
            {
              v332 += 7;
              BOOL v14 = v333++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1574;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1574:
        uint64_t v1037 = 2844;
        goto LABEL_1756;
      case 0x7Du:
        char v337 = 0;
        unsigned int v338 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x40000000000000uLL;
        while (2)
        {
          uint64_t v339 = *v3;
          unint64_t v340 = *(void *)(a2 + v339);
          if (v340 == -1 || v340 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v341 = *(unsigned char *)(*(void *)(a2 + *v7) + v340);
            *(void *)(a2 + v339) = v340 + 1;
            v288 |= (unint64_t)(v341 & 0x7F) << v337;
            if (v341 < 0)
            {
              v337 += 7;
              BOOL v14 = v338++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1578;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1578:
        uint64_t v1037 = 2892;
        goto LABEL_1756;
      case 0x7Eu:
        char v342 = 0;
        unsigned int v343 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x400000000000uLL;
        while (2)
        {
          uint64_t v344 = *v3;
          unint64_t v345 = *(void *)(a2 + v344);
          if (v345 == -1 || v345 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v346 = *(unsigned char *)(*(void *)(a2 + *v7) + v345);
            *(void *)(a2 + v344) = v345 + 1;
            v288 |= (unint64_t)(v346 & 0x7F) << v342;
            if (v346 < 0)
            {
              v342 += 7;
              BOOL v14 = v343++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1582;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1582:
        uint64_t v1037 = 2860;
        goto LABEL_1756;
      case 0x7Fu:
        char v347 = 0;
        unsigned int v348 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2984) |= 2uLL;
        while (2)
        {
          uint64_t v349 = *v3;
          unint64_t v350 = *(void *)(a2 + v349);
          if (v350 == -1 || v350 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v351 = *(unsigned char *)(*(void *)(a2 + *v7) + v350);
            *(void *)(a2 + v349) = v350 + 1;
            v19 |= (unint64_t)(v351 & 0x7F) << v347;
            if (v351 < 0)
            {
              v347 += 7;
              BOOL v14 = v348++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1586;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1586:
        uint64_t v1034 = 1040;
        goto LABEL_1761;
      case 0x80u:
        char v352 = 0;
        unsigned int v353 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2984) |= 1uLL;
        while (2)
        {
          uint64_t v354 = *v3;
          unint64_t v355 = *(void *)(a2 + v354);
          if (v355 == -1 || v355 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v356 = *(unsigned char *)(*(void *)(a2 + *v7) + v355);
            *(void *)(a2 + v354) = v355 + 1;
            v19 |= (unint64_t)(v356 & 0x7F) << v352;
            if (v356 < 0)
            {
              v352 += 7;
              BOOL v14 = v353++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1590;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1590:
        uint64_t v1034 = 1032;
        goto LABEL_1761;
      case 0x81u:
        char v357 = 0;
        unsigned int v358 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2976) |= 0x200000000000uLL;
        while (2)
        {
          uint64_t v359 = *v3;
          unint64_t v360 = *(void *)(a2 + v359);
          if (v360 == -1 || v360 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v361 = *(unsigned char *)(*(void *)(a2 + *v7) + v360);
            *(void *)(a2 + v359) = v360 + 1;
            v19 |= (unint64_t)(v361 & 0x7F) << v357;
            if (v361 < 0)
            {
              v357 += 7;
              BOOL v14 = v358++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1594;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1594:
        uint64_t v1034 = 880;
        goto LABEL_1761;
      case 0x82u:
        char v362 = 0;
        unsigned int v363 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2976) |= 0x100000000000uLL;
        while (2)
        {
          uint64_t v364 = *v3;
          unint64_t v365 = *(void *)(a2 + v364);
          if (v365 == -1 || v365 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v366 = *(unsigned char *)(*(void *)(a2 + *v7) + v365);
            *(void *)(a2 + v364) = v365 + 1;
            v19 |= (unint64_t)(v366 & 0x7F) << v362;
            if (v366 < 0)
            {
              v362 += 7;
              BOOL v14 = v363++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1598;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1598:
        uint64_t v1034 = 872;
        goto LABEL_1761;
      case 0x83u:
        char v367 = 0;
        unsigned int v368 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2992) |= 0x1000000000uLL;
        while (2)
        {
          uint64_t v369 = *v3;
          unint64_t v370 = *(void *)(a2 + v369);
          if (v370 == -1 || v370 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v371 = *(unsigned char *)(*(void *)(a2 + *v7) + v370);
            *(void *)(a2 + v369) = v370 + 1;
            v19 |= (unint64_t)(v371 & 0x7F) << v367;
            if (v371 < 0)
            {
              v367 += 7;
              BOOL v14 = v368++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1602;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1602:
        uint64_t v1034 = 1832;
        goto LABEL_1761;
      case 0x84u:
        char v372 = 0;
        unsigned int v373 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2992) |= 0x800000000uLL;
        while (2)
        {
          uint64_t v374 = *v3;
          unint64_t v375 = *(void *)(a2 + v374);
          if (v375 == -1 || v375 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v376 = *(unsigned char *)(*(void *)(a2 + *v7) + v375);
            *(void *)(a2 + v374) = v375 + 1;
            v19 |= (unint64_t)(v376 & 0x7F) << v372;
            if (v376 < 0)
            {
              v372 += 7;
              BOOL v14 = v373++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1606;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1606:
        uint64_t v1034 = 1824;
        goto LABEL_1761;
      case 0x85u:
        *(void *)(a1 + 2992) |= 0x200000000uLL;
        uint64_t v377 = *v3;
        unint64_t v378 = *(void *)(a2 + v377);
        if (v378 <= 0xFFFFFFFFFFFFFFF7 && v378 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v378);
          *(void *)(a2 + v377) = v378 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1808;
        goto LABEL_2418;
      case 0x86u:
        *(void *)(a1 + 2992) |= 0x100000000uLL;
        uint64_t v379 = *v3;
        unint64_t v380 = *(void *)(a2 + v379);
        if (v380 <= 0xFFFFFFFFFFFFFFF7 && v380 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v380);
          *(void *)(a2 + v379) = v380 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1800;
        goto LABEL_2418;
      case 0x87u:
        char v381 = 0;
        unsigned int v382 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x10000000000uLL;
        while (2)
        {
          uint64_t v383 = *v3;
          unint64_t v384 = *(void *)(a2 + v383);
          if (v384 == -1 || v384 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v385 = *(unsigned char *)(*(void *)(a2 + *v7) + v384);
            *(void *)(a2 + v383) = v384 + 1;
            v288 |= (unint64_t)(v385 & 0x7F) << v381;
            if (v385 < 0)
            {
              v381 += 7;
              BOOL v14 = v382++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1610;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1610:
        uint64_t v1037 = 2836;
        goto LABEL_1756;
      case 0x88u:
        char v386 = 0;
        unsigned int v387 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x8000000000uLL;
        while (2)
        {
          uint64_t v388 = *v3;
          unint64_t v389 = *(void *)(a2 + v388);
          if (v389 == -1 || v389 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v390 = *(unsigned char *)(*(void *)(a2 + *v7) + v389);
            *(void *)(a2 + v388) = v389 + 1;
            v288 |= (unint64_t)(v390 & 0x7F) << v386;
            if (v390 < 0)
            {
              v386 += 7;
              BOOL v14 = v387++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1614;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1614:
        uint64_t v1037 = 2832;
        goto LABEL_1756;
      case 0x89u:
        *(void *)(a1 + 3000) |= 0x40uLL;
        uint64_t v391 = *v3;
        unint64_t v392 = *(void *)(a2 + v391);
        if (v392 <= 0xFFFFFFFFFFFFFFF7 && v392 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v392);
          *(void *)(a2 + v391) = v392 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2104;
        goto LABEL_2418;
      case 0x8Au:
        *(void *)(a1 + 3000) |= 0x20uLL;
        uint64_t v393 = *v3;
        unint64_t v394 = *(void *)(a2 + v393);
        if (v394 <= 0xFFFFFFFFFFFFFFF7 && v394 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v394);
          *(void *)(a2 + v393) = v394 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2096;
        goto LABEL_2418;
      case 0x8Bu:
        *(void *)(a1 + 3000) |= 4uLL;
        uint64_t v395 = *v3;
        unint64_t v396 = *(void *)(a2 + v395);
        if (v396 <= 0xFFFFFFFFFFFFFFF7 && v396 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v396);
          *(void *)(a2 + v395) = v396 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2072;
        goto LABEL_2418;
      case 0x8Cu:
        *(void *)(a1 + 3000) |= 2uLL;
        uint64_t v397 = *v3;
        unint64_t v398 = *(void *)(a2 + v397);
        if (v398 <= 0xFFFFFFFFFFFFFFF7 && v398 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v398);
          *(void *)(a2 + v397) = v398 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2064;
        goto LABEL_2418;
      case 0x8Du:
        *(void *)(a1 + 2984) |= 0x40000uLL;
        uint64_t v399 = *v3;
        unint64_t v400 = *(void *)(a2 + v399);
        if (v400 <= 0xFFFFFFFFFFFFFFF7 && v400 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v400);
          *(void *)(a2 + v399) = v400 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1176;
        goto LABEL_2418;
      case 0x8Eu:
        *(void *)(a1 + 2984) |= 0x20000uLL;
        uint64_t v401 = *v3;
        unint64_t v402 = *(void *)(a2 + v401);
        if (v402 <= 0xFFFFFFFFFFFFFFF7 && v402 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v402);
          *(void *)(a2 + v401) = v402 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1168;
        goto LABEL_2418;
      case 0x8Fu:
        *(void *)(a1 + 2984) |= 0x100000uLL;
        uint64_t v403 = *v3;
        unint64_t v404 = *(void *)(a2 + v403);
        if (v404 <= 0xFFFFFFFFFFFFFFF7 && v404 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v404);
          *(void *)(a2 + v403) = v404 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1192;
        goto LABEL_2418;
      case 0x90u:
        *(void *)(a1 + 2984) |= 0x80000uLL;
        uint64_t v405 = *v3;
        unint64_t v406 = *(void *)(a2 + v405);
        if (v406 <= 0xFFFFFFFFFFFFFFF7 && v406 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v406);
          *(void *)(a2 + v405) = v406 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1184;
        goto LABEL_2418;
      case 0x91u:
        *(void *)(a1 + 2992) |= 0x1000000000000000uLL;
        uint64_t v407 = *v3;
        unint64_t v408 = *(void *)(a2 + v407);
        if (v408 <= 0xFFFFFFFFFFFFFFF7 && v408 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v408);
          *(void *)(a2 + v407) = v408 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2024;
        goto LABEL_2418;
      case 0x92u:
        *(void *)(a1 + 2984) |= 0x4000uLL;
        uint64_t v409 = *v3;
        unint64_t v410 = *(void *)(a2 + v409);
        if (v410 <= 0xFFFFFFFFFFFFFFF7 && v410 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v410);
          *(void *)(a2 + v409) = v410 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1144;
        goto LABEL_2418;
      case 0x93u:
        *(void *)(a1 + 2984) |= 0x2000uLL;
        uint64_t v411 = *v3;
        unint64_t v412 = *(void *)(a2 + v411);
        if (v412 <= 0xFFFFFFFFFFFFFFF7 && v412 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v412);
          *(void *)(a2 + v411) = v412 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1136;
        goto LABEL_2418;
      case 0x94u:
        char v413 = 0;
        unsigned int v414 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x80000000uLL;
        while (2)
        {
          uint64_t v415 = *v3;
          unint64_t v416 = *(void *)(a2 + v415);
          if (v416 == -1 || v416 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v417 = *(unsigned char *)(*(void *)(a2 + *v7) + v416);
            *(void *)(a2 + v415) = v416 + 1;
            v288 |= (unint64_t)(v417 & 0x7F) << v413;
            if (v417 < 0)
            {
              v413 += 7;
              BOOL v14 = v414++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1618;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1618:
        uint64_t v1037 = 2800;
        goto LABEL_1756;
      case 0x95u:
        char v418 = 0;
        unsigned int v419 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x40000000uLL;
        while (2)
        {
          uint64_t v420 = *v3;
          unint64_t v421 = *(void *)(a2 + v420);
          if (v421 == -1 || v421 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v422 = *(unsigned char *)(*(void *)(a2 + *v7) + v421);
            *(void *)(a2 + v420) = v421 + 1;
            v288 |= (unint64_t)(v422 & 0x7F) << v418;
            if (v422 < 0)
            {
              v418 += 7;
              BOOL v14 = v419++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1622;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1622:
        uint64_t v1037 = 2796;
        goto LABEL_1756;
      case 0x96u:
        char v423 = 0;
        unsigned int v424 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x200000000uLL;
        while (2)
        {
          uint64_t v425 = *v3;
          unint64_t v426 = *(void *)(a2 + v425);
          if (v426 == -1 || v426 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v427 = *(unsigned char *)(*(void *)(a2 + *v7) + v426);
            *(void *)(a2 + v425) = v426 + 1;
            v288 |= (unint64_t)(v427 & 0x7F) << v423;
            if (v427 < 0)
            {
              v423 += 7;
              BOOL v14 = v424++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1626;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1626:
        uint64_t v1037 = 2808;
        goto LABEL_1756;
      case 0x97u:
        char v428 = 0;
        unsigned int v429 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x100000000uLL;
        while (2)
        {
          uint64_t v430 = *v3;
          unint64_t v431 = *(void *)(a2 + v430);
          if (v431 == -1 || v431 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v432 = *(unsigned char *)(*(void *)(a2 + *v7) + v431);
            *(void *)(a2 + v430) = v431 + 1;
            v288 |= (unint64_t)(v432 & 0x7F) << v428;
            if (v432 < 0)
            {
              v428 += 7;
              BOOL v14 = v429++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1630;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1630:
        uint64_t v1037 = 2804;
        goto LABEL_1756;
      case 0x98u:
        char v433 = 0;
        unsigned int v434 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x20000000uLL;
        while (2)
        {
          uint64_t v435 = *v3;
          unint64_t v436 = *(void *)(a2 + v435);
          if (v436 == -1 || v436 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v437 = *(unsigned char *)(*(void *)(a2 + *v7) + v436);
            *(void *)(a2 + v435) = v436 + 1;
            v288 |= (unint64_t)(v437 & 0x7F) << v433;
            if (v437 < 0)
            {
              v433 += 7;
              BOOL v14 = v434++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1634;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1634:
        uint64_t v1037 = 2792;
        goto LABEL_1756;
      case 0x99u:
        char v438 = 0;
        unsigned int v439 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x10000000uLL;
        while (2)
        {
          uint64_t v440 = *v3;
          unint64_t v441 = *(void *)(a2 + v440);
          if (v441 == -1 || v441 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v442 = *(unsigned char *)(*(void *)(a2 + *v7) + v441);
            *(void *)(a2 + v440) = v441 + 1;
            v288 |= (unint64_t)(v442 & 0x7F) << v438;
            if (v442 < 0)
            {
              v438 += 7;
              BOOL v14 = v439++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1638;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1638:
        uint64_t v1037 = 2788;
        goto LABEL_1756;
      case 0x9Au:
        char v443 = 0;
        unsigned int v444 = 0;
        uint64_t v445 = 0;
        *(_WORD *)(a1 + 3016) |= 4u;
        while (2)
        {
          uint64_t v446 = *v3;
          unint64_t v447 = *(void *)(a2 + v446);
          if (v447 == -1 || v447 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v448 = *(unsigned char *)(*(void *)(a2 + *v7) + v447);
            *(void *)(a2 + v446) = v447 + 1;
            v445 |= (unint64_t)(v448 & 0x7F) << v443;
            if (v448 < 0)
            {
              v443 += 7;
              BOOL v14 = v444++ >= 9;
              if (v14)
              {
                uint64_t v445 = 0;
                goto LABEL_1642;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v445 = 0;
        }
LABEL_1642:
        BOOL v1035 = v445 != 0;
        uint64_t v1036 = 2956;
        goto LABEL_1747;
      case 0x9Bu:
        *(void *)(a1 + 2984) |= 0x20000000000uLL;
        uint64_t v449 = *v3;
        unint64_t v450 = *(void *)(a2 + v449);
        if (v450 <= 0xFFFFFFFFFFFFFFF7 && v450 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v450);
          *(void *)(a2 + v449) = v450 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1360;
        goto LABEL_2418;
      case 0x9Cu:
        *(void *)(a1 + 2984) |= 0x10000uLL;
        uint64_t v451 = *v3;
        unint64_t v452 = *(void *)(a2 + v451);
        if (v452 <= 0xFFFFFFFFFFFFFFF7 && v452 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v452);
          *(void *)(a2 + v451) = v452 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1160;
        goto LABEL_2418;
      case 0x9Du:
        *(void *)(a1 + 2984) |= 0x8000uLL;
        uint64_t v453 = *v3;
        unint64_t v454 = *(void *)(a2 + v453);
        if (v454 <= 0xFFFFFFFFFFFFFFF7 && v454 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v454);
          *(void *)(a2 + v453) = v454 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1152;
        goto LABEL_2418;
      case 0x9Eu:
        *(void *)(a1 + 2976) |= 0x80000000uLL;
        uint64_t v455 = *v3;
        unint64_t v456 = *(void *)(a2 + v455);
        if (v456 <= 0xFFFFFFFFFFFFFFF7 && v456 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v456);
          *(void *)(a2 + v455) = v456 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 768;
        goto LABEL_2418;
      case 0x9Fu:
        *(void *)(a1 + 2976) |= 0x100000000uLL;
        uint64_t v457 = *v3;
        unint64_t v458 = *(void *)(a2 + v457);
        if (v458 <= 0xFFFFFFFFFFFFFFF7 && v458 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v458);
          *(void *)(a2 + v457) = v458 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 776;
        goto LABEL_2418;
      case 0xA0u:
        *(void *)(a1 + 2976) |= 0x200000000uLL;
        uint64_t v459 = *v3;
        unint64_t v460 = *(void *)(a2 + v459);
        if (v460 <= 0xFFFFFFFFFFFFFFF7 && v460 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v460);
          *(void *)(a2 + v459) = v460 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 784;
        goto LABEL_2418;
      case 0xA1u:
        *(void *)(a1 + 2976) |= 0x400000000uLL;
        uint64_t v461 = *v3;
        unint64_t v462 = *(void *)(a2 + v461);
        if (v462 <= 0xFFFFFFFFFFFFFFF7 && v462 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v462);
          *(void *)(a2 + v461) = v462 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 792;
        goto LABEL_2418;
      case 0xA2u:
        *(void *)(a1 + 2976) |= 0x800000000uLL;
        uint64_t v463 = *v3;
        unint64_t v464 = *(void *)(a2 + v463);
        if (v464 <= 0xFFFFFFFFFFFFFFF7 && v464 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v464);
          *(void *)(a2 + v463) = v464 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 800;
        goto LABEL_2418;
      case 0xA3u:
        *(void *)(a1 + 2976) |= 0x1000000000uLL;
        uint64_t v465 = *v3;
        unint64_t v466 = *(void *)(a2 + v465);
        if (v466 <= 0xFFFFFFFFFFFFFFF7 && v466 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v466);
          *(void *)(a2 + v465) = v466 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 808;
        goto LABEL_2418;
      case 0xA4u:
        char v467 = 0;
        unsigned int v468 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x400000000uLL;
        while (2)
        {
          uint64_t v469 = *v3;
          unint64_t v470 = *(void *)(a2 + v469);
          if (v470 == -1 || v470 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v471 = *(unsigned char *)(*(void *)(a2 + *v7) + v470);
            *(void *)(a2 + v469) = v470 + 1;
            v288 |= (unint64_t)(v471 & 0x7F) << v467;
            if (v471 < 0)
            {
              v467 += 7;
              BOOL v14 = v468++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1646;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1646:
        uint64_t v1037 = 2812;
        goto LABEL_1756;
      case 0xA5u:
        char v472 = 0;
        unsigned int v473 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x800000000uLL;
        while (2)
        {
          uint64_t v474 = *v3;
          unint64_t v475 = *(void *)(a2 + v474);
          if (v475 == -1 || v475 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v476 = *(unsigned char *)(*(void *)(a2 + *v7) + v475);
            *(void *)(a2 + v474) = v475 + 1;
            v288 |= (unint64_t)(v476 & 0x7F) << v472;
            if (v476 < 0)
            {
              v472 += 7;
              BOOL v14 = v473++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1650;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1650:
        uint64_t v1037 = 2816;
        goto LABEL_1756;
      case 0xA6u:
        char v477 = 0;
        unsigned int v478 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x1000000000uLL;
        while (2)
        {
          uint64_t v479 = *v3;
          unint64_t v480 = *(void *)(a2 + v479);
          if (v480 == -1 || v480 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v481 = *(unsigned char *)(*(void *)(a2 + *v7) + v480);
            *(void *)(a2 + v479) = v480 + 1;
            v288 |= (unint64_t)(v481 & 0x7F) << v477;
            if (v481 < 0)
            {
              v477 += 7;
              BOOL v14 = v478++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1654;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1654:
        uint64_t v1037 = 2820;
        goto LABEL_1756;
      case 0xA7u:
        char v482 = 0;
        unsigned int v483 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x2000000000uLL;
        while (2)
        {
          uint64_t v484 = *v3;
          unint64_t v485 = *(void *)(a2 + v484);
          if (v485 == -1 || v485 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v486 = *(unsigned char *)(*(void *)(a2 + *v7) + v485);
            *(void *)(a2 + v484) = v485 + 1;
            v288 |= (unint64_t)(v486 & 0x7F) << v482;
            if (v486 < 0)
            {
              v482 += 7;
              BOOL v14 = v483++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1658;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1658:
        uint64_t v1037 = 2824;
        goto LABEL_1756;
      case 0xA8u:
        char v487 = 0;
        unsigned int v488 = 0;
        uint64_t v489 = 0;
        *(_WORD *)(a1 + 3016) |= 0x80u;
        while (2)
        {
          uint64_t v490 = *v3;
          unint64_t v491 = *(void *)(a2 + v490);
          if (v491 == -1 || v491 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v492 = *(unsigned char *)(*(void *)(a2 + *v7) + v491);
            *(void *)(a2 + v490) = v491 + 1;
            v489 |= (unint64_t)(v492 & 0x7F) << v487;
            if (v492 < 0)
            {
              v487 += 7;
              BOOL v14 = v488++ >= 9;
              if (v14)
              {
                uint64_t v489 = 0;
                goto LABEL_1662;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v489 = 0;
        }
LABEL_1662:
        BOOL v1035 = v489 != 0;
        uint64_t v1036 = 2961;
        goto LABEL_1747;
      case 0xA9u:
        char v493 = 0;
        unsigned int v494 = 0;
        uint64_t v495 = 0;
        *(_WORD *)(a1 + 3016) |= 0x100u;
        while (2)
        {
          uint64_t v496 = *v3;
          unint64_t v497 = *(void *)(a2 + v496);
          if (v497 == -1 || v497 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v498 = *(unsigned char *)(*(void *)(a2 + *v7) + v497);
            *(void *)(a2 + v496) = v497 + 1;
            v495 |= (unint64_t)(v498 & 0x7F) << v493;
            if (v498 < 0)
            {
              v493 += 7;
              BOOL v14 = v494++ >= 9;
              if (v14)
              {
                uint64_t v495 = 0;
                goto LABEL_1666;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v495 = 0;
        }
LABEL_1666:
        BOOL v1035 = v495 != 0;
        uint64_t v1036 = 2962;
        goto LABEL_1747;
      case 0xAAu:
        char v499 = 0;
        unsigned int v500 = 0;
        uint64_t v501 = 0;
        *(_WORD *)(a1 + 3016) |= 0x10u;
        while (2)
        {
          uint64_t v502 = *v3;
          unint64_t v503 = *(void *)(a2 + v502);
          if (v503 == -1 || v503 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v504 = *(unsigned char *)(*(void *)(a2 + *v7) + v503);
            *(void *)(a2 + v502) = v503 + 1;
            v501 |= (unint64_t)(v504 & 0x7F) << v499;
            if (v504 < 0)
            {
              v499 += 7;
              BOOL v14 = v500++ >= 9;
              if (v14)
              {
                uint64_t v501 = 0;
                goto LABEL_1670;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v501 = 0;
        }
LABEL_1670:
        BOOL v1035 = v501 != 0;
        uint64_t v1036 = 2958;
        goto LABEL_1747;
      case 0xABu:
        char v505 = 0;
        unsigned int v506 = 0;
        uint64_t v507 = 0;
        *(_WORD *)(a1 + 3016) |= 8u;
        while (2)
        {
          uint64_t v508 = *v3;
          unint64_t v509 = *(void *)(a2 + v508);
          if (v509 == -1 || v509 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v510 = *(unsigned char *)(*(void *)(a2 + *v7) + v509);
            *(void *)(a2 + v508) = v509 + 1;
            v507 |= (unint64_t)(v510 & 0x7F) << v505;
            if (v510 < 0)
            {
              v505 += 7;
              BOOL v14 = v506++ >= 9;
              if (v14)
              {
                uint64_t v507 = 0;
                goto LABEL_1674;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v507 = 0;
        }
LABEL_1674:
        BOOL v1035 = v507 != 0;
        uint64_t v1036 = 2957;
        goto LABEL_1747;
      case 0xACu:
        char v511 = 0;
        unsigned int v512 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x4000000000000000uLL;
        while (2)
        {
          uint64_t v513 = *v3;
          unint64_t v514 = *(void *)(a2 + v513);
          if (v514 == -1 || v514 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v515 = *(unsigned char *)(*(void *)(a2 + *v7) + v514);
            *(void *)(a2 + v513) = v514 + 1;
            v288 |= (unint64_t)(v515 & 0x7F) << v511;
            if (v515 < 0)
            {
              v511 += 7;
              BOOL v14 = v512++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1678;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1678:
        uint64_t v1037 = 2924;
        goto LABEL_1756;
      case 0xADu:
        char v516 = 0;
        unsigned int v517 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x2000000000000000uLL;
        while (2)
        {
          uint64_t v518 = *v3;
          unint64_t v519 = *(void *)(a2 + v518);
          if (v519 == -1 || v519 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v520 = *(unsigned char *)(*(void *)(a2 + *v7) + v519);
            *(void *)(a2 + v518) = v519 + 1;
            v288 |= (unint64_t)(v520 & 0x7F) << v516;
            if (v520 < 0)
            {
              v516 += 7;
              BOOL v14 = v517++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1682;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1682:
        uint64_t v1037 = 2920;
        goto LABEL_1756;
      case 0xAEu:
        char v521 = 0;
        unsigned int v522 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x1000000000000000uLL;
        while (2)
        {
          uint64_t v523 = *v3;
          unint64_t v524 = *(void *)(a2 + v523);
          if (v524 == -1 || v524 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v525 = *(unsigned char *)(*(void *)(a2 + *v7) + v524);
            *(void *)(a2 + v523) = v524 + 1;
            v288 |= (unint64_t)(v525 & 0x7F) << v521;
            if (v525 < 0)
            {
              v521 += 7;
              BOOL v14 = v522++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1686;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1686:
        uint64_t v1037 = 2916;
        goto LABEL_1756;
      case 0xAFu:
        char v526 = 0;
        unsigned int v527 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x800000000000000uLL;
        while (2)
        {
          uint64_t v528 = *v3;
          unint64_t v529 = *(void *)(a2 + v528);
          if (v529 == -1 || v529 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v530 = *(unsigned char *)(*(void *)(a2 + *v7) + v529);
            *(void *)(a2 + v528) = v529 + 1;
            v288 |= (unint64_t)(v530 & 0x7F) << v526;
            if (v530 < 0)
            {
              v526 += 7;
              BOOL v14 = v527++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1690;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1690:
        uint64_t v1037 = 2912;
        goto LABEL_1756;
      case 0xB0u:
        *(void *)(a1 + 3000) |= 0x2000000000000000uLL;
        uint64_t v531 = *v3;
        unint64_t v532 = *(void *)(a2 + v531);
        if (v532 <= 0xFFFFFFFFFFFFFFF7 && v532 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v532);
          *(void *)(a2 + v531) = v532 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2544;
        goto LABEL_2418;
      case 0xB1u:
        *(void *)(a1 + 3000) |= 0x4000000000000000uLL;
        uint64_t v533 = *v3;
        unint64_t v534 = *(void *)(a2 + v533);
        if (v534 <= 0xFFFFFFFFFFFFFFF7 && v534 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v534);
          *(void *)(a2 + v533) = v534 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2552;
        goto LABEL_2418;
      case 0xB2u:
        char v535 = 0;
        unsigned int v536 = 0;
        uint64_t v537 = 0;
        *(_WORD *)(a1 + 3016) |= 0x800u;
        while (2)
        {
          uint64_t v538 = *v3;
          unint64_t v539 = *(void *)(a2 + v538);
          if (v539 == -1 || v539 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v540 = *(unsigned char *)(*(void *)(a2 + *v7) + v539);
            *(void *)(a2 + v538) = v539 + 1;
            v537 |= (unint64_t)(v540 & 0x7F) << v535;
            if (v540 < 0)
            {
              v535 += 7;
              BOOL v14 = v536++ >= 9;
              if (v14)
              {
                uint64_t v537 = 0;
                goto LABEL_1694;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v537 = 0;
        }
LABEL_1694:
        BOOL v1035 = v537 != 0;
        uint64_t v1036 = 2965;
        goto LABEL_1747;
      case 0xB3u:
        *(void *)(a1 + 3000) |= 0x10uLL;
        uint64_t v541 = *v3;
        unint64_t v542 = *(void *)(a2 + v541);
        if (v542 <= 0xFFFFFFFFFFFFFFF7 && v542 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v542);
          *(void *)(a2 + v541) = v542 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2088;
        goto LABEL_2418;
      case 0xB4u:
        *(void *)(a1 + 3000) |= 8uLL;
        uint64_t v543 = *v3;
        unint64_t v544 = *(void *)(a2 + v543);
        if (v544 <= 0xFFFFFFFFFFFFFFF7 && v544 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v544);
          *(void *)(a2 + v543) = v544 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2080;
        goto LABEL_2418;
      case 0xB5u:
        *(void *)(a1 + 2992) |= 0x200000000000000uLL;
        uint64_t v545 = *v3;
        unint64_t v546 = *(void *)(a2 + v545);
        if (v546 <= 0xFFFFFFFFFFFFFFF7 && v546 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v546);
          *(void *)(a2 + v545) = v546 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2000;
        goto LABEL_2418;
      case 0xB6u:
        *(void *)(a1 + 2992) |= 0x100000000000000uLL;
        uint64_t v547 = *v3;
        unint64_t v548 = *(void *)(a2 + v547);
        if (v548 <= 0xFFFFFFFFFFFFFFF7 && v548 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v548);
          *(void *)(a2 + v547) = v548 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1992;
        goto LABEL_2418;
      case 0xB7u:
        *(void *)(a1 + 2992) |= 0x4000000000000000uLL;
        uint64_t v549 = *v3;
        unint64_t v550 = *(void *)(a2 + v549);
        if (v550 <= 0xFFFFFFFFFFFFFFF7 && v550 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v550);
          *(void *)(a2 + v549) = v550 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2040;
        goto LABEL_2418;
      case 0xB8u:
        *(void *)(a1 + 2992) |= 0x2000000000000000uLL;
        uint64_t v551 = *v3;
        unint64_t v552 = *(void *)(a2 + v551);
        if (v552 <= 0xFFFFFFFFFFFFFFF7 && v552 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v552);
          *(void *)(a2 + v551) = v552 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2032;
        goto LABEL_2418;
      case 0xB9u:
        *(void *)(a1 + 2968) |= 0x4000uLL;
        uint64_t v553 = *v3;
        unint64_t v554 = *(void *)(a2 + v553);
        if (v554 <= 0xFFFFFFFFFFFFFFF7 && v554 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v554);
          *(void *)(a2 + v553) = v554 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 120;
        goto LABEL_2418;
      case 0xBAu:
        *(void *)(a1 + 2968) |= 0x2000uLL;
        uint64_t v555 = *v3;
        unint64_t v556 = *(void *)(a2 + v555);
        if (v556 <= 0xFFFFFFFFFFFFFFF7 && v556 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v556);
          *(void *)(a2 + v555) = v556 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 112;
        goto LABEL_2418;
      case 0xBBu:
        *(void *)(a1 + 2984) |= 0x800000uLL;
        uint64_t v557 = *v3;
        unint64_t v558 = *(void *)(a2 + v557);
        if (v558 <= 0xFFFFFFFFFFFFFFF7 && v558 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v558);
          *(void *)(a2 + v557) = v558 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1216;
        goto LABEL_2418;
      case 0xBCu:
        *(void *)(a1 + 3000) |= 0x80000000000000uLL;
        uint64_t v559 = *v3;
        unint64_t v560 = *(void *)(a2 + v559);
        if (v560 <= 0xFFFFFFFFFFFFFFF7 && v560 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v560);
          *(void *)(a2 + v559) = v560 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2496;
        goto LABEL_2418;
      case 0xBDu:
        *(void *)(a1 + 2984) |= 0x200000uLL;
        uint64_t v561 = *v3;
        unint64_t v562 = *(void *)(a2 + v561);
        if (v562 <= 0xFFFFFFFFFFFFFFF7 && v562 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v562);
          *(void *)(a2 + v561) = v562 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1200;
        goto LABEL_2418;
      case 0xBEu:
        *(void *)(a1 + 3000) |= 0x20000000000000uLL;
        uint64_t v563 = *v3;
        unint64_t v564 = *(void *)(a2 + v563);
        if (v564 <= 0xFFFFFFFFFFFFFFF7 && v564 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v564);
          *(void *)(a2 + v563) = v564 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2480;
        goto LABEL_2418;
      case 0xBFu:
        *(void *)(a1 + 2984) |= 0x1000000uLL;
        uint64_t v565 = *v3;
        unint64_t v566 = *(void *)(a2 + v565);
        if (v566 <= 0xFFFFFFFFFFFFFFF7 && v566 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v566);
          *(void *)(a2 + v565) = v566 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1224;
        goto LABEL_2418;
      case 0xC0u:
        *(void *)(a1 + 3000) |= 0x100000000000000uLL;
        uint64_t v567 = *v3;
        unint64_t v568 = *(void *)(a2 + v567);
        if (v568 <= 0xFFFFFFFFFFFFFFF7 && v568 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v568);
          *(void *)(a2 + v567) = v568 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2504;
        goto LABEL_2418;
      case 0xC1u:
        *(void *)(a1 + 2984) |= 0x400000uLL;
        uint64_t v569 = *v3;
        unint64_t v570 = *(void *)(a2 + v569);
        if (v570 <= 0xFFFFFFFFFFFFFFF7 && v570 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v570);
          *(void *)(a2 + v569) = v570 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1208;
        goto LABEL_2418;
      case 0xC2u:
        *(void *)(a1 + 3000) |= 0x40000000000000uLL;
        uint64_t v571 = *v3;
        unint64_t v572 = *(void *)(a2 + v571);
        if (v572 <= 0xFFFFFFFFFFFFFFF7 && v572 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v572);
          *(void *)(a2 + v571) = v572 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2488;
        goto LABEL_2418;
      case 0xC3u:
        *(void *)(a1 + 2992) |= 0x2000000uLL;
        uint64_t v573 = *v3;
        unint64_t v574 = *(void *)(a2 + v573);
        if (v574 <= 0xFFFFFFFFFFFFFFF7 && v574 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v574);
          *(void *)(a2 + v573) = v574 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1744;
        goto LABEL_2418;
      case 0xC4u:
        *(void *)(a1 + 2984) |= 0x2000000uLL;
        uint64_t v575 = *v3;
        unint64_t v576 = *(void *)(a2 + v575);
        if (v576 <= 0xFFFFFFFFFFFFFFF7 && v576 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v576);
          *(void *)(a2 + v575) = v576 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1232;
        goto LABEL_2418;
      case 0xC5u:
        *(void *)(a1 + 2976) |= 0x80000000000000uLL;
        uint64_t v577 = *v3;
        unint64_t v578 = *(void *)(a2 + v577);
        if (v578 <= 0xFFFFFFFFFFFFFFF7 && v578 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v578);
          *(void *)(a2 + v577) = v578 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 960;
        goto LABEL_2418;
      case 0xC6u:
        *(void *)(a1 + 2992) |= 8uLL;
        uint64_t v579 = *v3;
        unint64_t v580 = *(void *)(a2 + v579);
        if (v580 <= 0xFFFFFFFFFFFFFFF7 && v580 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v580);
          *(void *)(a2 + v579) = v580 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1568;
        goto LABEL_2418;
      case 0xC7u:
        *(void *)(a1 + 2992) |= 4uLL;
        uint64_t v581 = *v3;
        unint64_t v582 = *(void *)(a2 + v581);
        if (v582 <= 0xFFFFFFFFFFFFFFF7 && v582 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v582);
          *(void *)(a2 + v581) = v582 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1560;
        goto LABEL_2418;
      case 0xC8u:
        *(void *)(a1 + 2992) |= 1uLL;
        uint64_t v583 = *v3;
        unint64_t v584 = *(void *)(a2 + v583);
        if (v584 <= 0xFFFFFFFFFFFFFFF7 && v584 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v584);
          *(void *)(a2 + v583) = v584 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1544;
        goto LABEL_2418;
      case 0xC9u:
        *(void *)(a1 + 2992) |= 2uLL;
        uint64_t v585 = *v3;
        unint64_t v586 = *(void *)(a2 + v585);
        if (v586 <= 0xFFFFFFFFFFFFFFF7 && v586 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v586);
          *(void *)(a2 + v585) = v586 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1552;
        goto LABEL_2418;
      case 0xCAu:
        *(void *)(a1 + 2992) |= 0x400000uLL;
        uint64_t v587 = *v3;
        unint64_t v588 = *(void *)(a2 + v587);
        if (v588 <= 0xFFFFFFFFFFFFFFF7 && v588 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v588);
          *(void *)(a2 + v587) = v588 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1720;
        goto LABEL_2418;
      case 0xCBu:
        *(void *)(a1 + 2992) |= 0x1000000uLL;
        uint64_t v589 = *v3;
        unint64_t v590 = *(void *)(a2 + v589);
        if (v590 <= 0xFFFFFFFFFFFFFFF7 && v590 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v590);
          *(void *)(a2 + v589) = v590 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1736;
        goto LABEL_2418;
      case 0xCCu:
        *(void *)(a1 + 2992) |= 0x100000uLL;
        uint64_t v591 = *v3;
        unint64_t v592 = *(void *)(a2 + v591);
        if (v592 <= 0xFFFFFFFFFFFFFFF7 && v592 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v592);
          *(void *)(a2 + v591) = v592 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1704;
        goto LABEL_2418;
      case 0xCDu:
        *(void *)(a1 + 2968) |= 0x400uLL;
        uint64_t v593 = *v3;
        unint64_t v594 = *(void *)(a2 + v593);
        if (v594 <= 0xFFFFFFFFFFFFFFF7 && v594 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v594);
          *(void *)(a2 + v593) = v594 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 88;
        goto LABEL_2418;
      case 0xCEu:
        *(void *)(a1 + 2968) |= 0x1000uLL;
        uint64_t v595 = *v3;
        unint64_t v596 = *(void *)(a2 + v595);
        if (v596 <= 0xFFFFFFFFFFFFFFF7 && v596 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v596);
          *(void *)(a2 + v595) = v596 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 104;
        goto LABEL_2418;
      case 0xCFu:
        *(void *)(a1 + 2968) |= 0x100uLL;
        uint64_t v597 = *v3;
        unint64_t v598 = *(void *)(a2 + v597);
        if (v598 <= 0xFFFFFFFFFFFFFFF7 && v598 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v598);
          *(void *)(a2 + v597) = v598 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 72;
        goto LABEL_2418;
      case 0xD0u:
        *(void *)(a1 + 2968) |= 0x40000uLL;
        uint64_t v599 = *v3;
        unint64_t v600 = *(void *)(a2 + v599);
        if (v600 <= 0xFFFFFFFFFFFFFFF7 && v600 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v600);
          *(void *)(a2 + v599) = v600 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 152;
        goto LABEL_2418;
      case 0xD1u:
        *(void *)(a1 + 2968) |= 0x80000uLL;
        uint64_t v601 = *v3;
        unint64_t v602 = *(void *)(a2 + v601);
        if (v602 <= 0xFFFFFFFFFFFFFFF7 && v602 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v602);
          *(void *)(a2 + v601) = v602 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 160;
        goto LABEL_2418;
      case 0xD2u:
        *(void *)(a1 + 2968) |= 0x100000uLL;
        uint64_t v603 = *v3;
        unint64_t v604 = *(void *)(a2 + v603);
        if (v604 <= 0xFFFFFFFFFFFFFFF7 && v604 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v604);
          *(void *)(a2 + v603) = v604 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 168;
        goto LABEL_2418;
      case 0xD3u:
        *(void *)(a1 + 2968) |= 0x8000uLL;
        uint64_t v605 = *v3;
        unint64_t v606 = *(void *)(a2 + v605);
        if (v606 <= 0xFFFFFFFFFFFFFFF7 && v606 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v606);
          *(void *)(a2 + v605) = v606 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 128;
        goto LABEL_2418;
      case 0xD4u:
        *(void *)(a1 + 2968) |= 0x10000uLL;
        uint64_t v607 = *v3;
        unint64_t v608 = *(void *)(a2 + v607);
        if (v608 <= 0xFFFFFFFFFFFFFFF7 && v608 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v608);
          *(void *)(a2 + v607) = v608 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 136;
        goto LABEL_2418;
      case 0xD5u:
        *(void *)(a1 + 2968) |= 0x20000uLL;
        uint64_t v609 = *v3;
        unint64_t v610 = *(void *)(a2 + v609);
        if (v610 <= 0xFFFFFFFFFFFFFFF7 && v610 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v610);
          *(void *)(a2 + v609) = v610 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 144;
        goto LABEL_2418;
      case 0xD6u:
        *(void *)(a1 + 2968) |= 0x800000000uLL;
        uint64_t v611 = *v3;
        unint64_t v612 = *(void *)(a2 + v611);
        if (v612 <= 0xFFFFFFFFFFFFFFF7 && v612 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v612);
          *(void *)(a2 + v611) = v612 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 288;
        goto LABEL_2418;
      case 0xD7u:
        char v613 = 0;
        unsigned int v614 = 0;
        uint64_t v288 = 0;
        *(_WORD *)(a1 + 3016) |= 1u;
        while (2)
        {
          uint64_t v615 = *v3;
          unint64_t v616 = *(void *)(a2 + v615);
          if (v616 == -1 || v616 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v617 = *(unsigned char *)(*(void *)(a2 + *v7) + v616);
            *(void *)(a2 + v615) = v616 + 1;
            v288 |= (unint64_t)(v617 & 0x7F) << v613;
            if (v617 < 0)
            {
              v613 += 7;
              BOOL v14 = v614++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1698;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1698:
        uint64_t v1037 = 2940;
        goto LABEL_1756;
      case 0xD8u:
        char v618 = 0;
        unsigned int v619 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x8000000000000000;
        while (2)
        {
          uint64_t v620 = *v3;
          unint64_t v621 = *(void *)(a2 + v620);
          if (v621 == -1 || v621 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v622 = *(unsigned char *)(*(void *)(a2 + *v7) + v621);
            *(void *)(a2 + v620) = v621 + 1;
            v288 |= (unint64_t)(v622 & 0x7F) << v618;
            if (v622 < 0)
            {
              v618 += 7;
              BOOL v14 = v619++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1702;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1702:
        uint64_t v1037 = 2936;
        goto LABEL_1756;
      case 0xD9u:
        *(void *)(a1 + 2984) |= 0x8000000000000uLL;
        uint64_t v623 = *v3;
        unint64_t v624 = *(void *)(a2 + v623);
        if (v624 <= 0xFFFFFFFFFFFFFFF7 && v624 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v624);
          *(void *)(a2 + v623) = v624 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1440;
        goto LABEL_2418;
      case 0xDAu:
        *(void *)(a1 + 2968) |= 0x40000000000uLL;
        uint64_t v625 = *v3;
        unint64_t v626 = *(void *)(a2 + v625);
        if (v626 <= 0xFFFFFFFFFFFFFFF7 && v626 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v626);
          *(void *)(a2 + v625) = v626 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 344;
        goto LABEL_2418;
      case 0xDBu:
        *(void *)(a1 + 2968) |= 0x200000000000uLL;
        uint64_t v627 = *v3;
        unint64_t v628 = *(void *)(a2 + v627);
        if (v628 <= 0xFFFFFFFFFFFFFFF7 && v628 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v628);
          *(void *)(a2 + v627) = v628 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 368;
        goto LABEL_2418;
      case 0xDCu:
        *(void *)(a1 + 2968) |= 0x800000000000uLL;
        uint64_t v629 = *v3;
        unint64_t v630 = *(void *)(a2 + v629);
        if (v630 <= 0xFFFFFFFFFFFFFFF7 && v630 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v630);
          *(void *)(a2 + v629) = v630 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 384;
        goto LABEL_2418;
      case 0xDDu:
        *(void *)(a1 + 2968) |= 0x800000uLL;
        uint64_t v631 = *v3;
        unint64_t v632 = *(void *)(a2 + v631);
        if (v632 <= 0xFFFFFFFFFFFFFFF7 && v632 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v632);
          *(void *)(a2 + v631) = v632 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 192;
        goto LABEL_2418;
      case 0xDEu:
        *(void *)(a1 + 2968) |= 0x4000000uLL;
        uint64_t v633 = *v3;
        unint64_t v634 = *(void *)(a2 + v633);
        if (v634 <= 0xFFFFFFFFFFFFFFF7 && v634 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v634);
          *(void *)(a2 + v633) = v634 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 216;
        goto LABEL_2418;
      case 0xDFu:
        *(void *)(a1 + 2968) |= 0x8000000uLL;
        uint64_t v635 = *v3;
        unint64_t v636 = *(void *)(a2 + v635);
        if (v636 <= 0xFFFFFFFFFFFFFFF7 && v636 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v636);
          *(void *)(a2 + v635) = v636 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 224;
        goto LABEL_2418;
      case 0xE0u:
        *(void *)(a1 + 2968) |= 0x200000000uLL;
        uint64_t v637 = *v3;
        unint64_t v638 = *(void *)(a2 + v637);
        if (v638 <= 0xFFFFFFFFFFFFFFF7 && v638 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v638);
          *(void *)(a2 + v637) = v638 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 272;
        goto LABEL_2418;
      case 0xE1u:
        *(void *)(a1 + 2968) |= 0x100000000uLL;
        uint64_t v639 = *v3;
        unint64_t v640 = *(void *)(a2 + v639);
        if (v640 <= 0xFFFFFFFFFFFFFFF7 && v640 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v640);
          *(void *)(a2 + v639) = v640 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 264;
        goto LABEL_2418;
      case 0xE2u:
        *(void *)(a1 + 2976) |= 0x40000000uLL;
        uint64_t v641 = *v3;
        unint64_t v642 = *(void *)(a2 + v641);
        if (v642 <= 0xFFFFFFFFFFFFFFF7 && v642 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v642);
          *(void *)(a2 + v641) = v642 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 760;
        goto LABEL_2418;
      case 0xE3u:
        *(void *)(a1 + 2976) |= 0x100000000000000uLL;
        uint64_t v643 = *v3;
        unint64_t v644 = *(void *)(a2 + v643);
        if (v644 <= 0xFFFFFFFFFFFFFFF7 && v644 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v644);
          *(void *)(a2 + v643) = v644 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 968;
        goto LABEL_2418;
      case 0xE4u:
        *(void *)(a1 + 3008) |= 0x40000uLL;
        uint64_t v645 = *v3;
        unint64_t v646 = *(void *)(a2 + v645);
        if (v646 <= 0xFFFFFFFFFFFFFFF7 && v646 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v646);
          *(void *)(a2 + v645) = v646 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2712;
        goto LABEL_2418;
      case 0xE5u:
        *(void *)(a1 + 3008) |= 0x20000uLL;
        uint64_t v647 = *v3;
        unint64_t v648 = *(void *)(a2 + v647);
        if (v648 <= 0xFFFFFFFFFFFFFFF7 && v648 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v648);
          *(void *)(a2 + v647) = v648 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2704;
        goto LABEL_2418;
      case 0xE6u:
        *(void *)(a1 + 3008) |= 0x10000uLL;
        uint64_t v649 = *v3;
        unint64_t v650 = *(void *)(a2 + v649);
        if (v650 <= 0xFFFFFFFFFFFFFFF7 && v650 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v650);
          *(void *)(a2 + v649) = v650 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2696;
        goto LABEL_2418;
      case 0xE7u:
        *(void *)(a1 + 3008) |= 0x8000uLL;
        uint64_t v651 = *v3;
        unint64_t v652 = *(void *)(a2 + v651);
        if (v652 <= 0xFFFFFFFFFFFFFFF7 && v652 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v652);
          *(void *)(a2 + v651) = v652 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2688;
        goto LABEL_2418;
      case 0xE8u:
        *(void *)(a1 + 3008) |= 0x4000uLL;
        uint64_t v653 = *v3;
        unint64_t v654 = *(void *)(a2 + v653);
        if (v654 <= 0xFFFFFFFFFFFFFFF7 && v654 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v654);
          *(void *)(a2 + v653) = v654 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2680;
        goto LABEL_2418;
      case 0xE9u:
        *(void *)(a1 + 3008) |= 0x2000uLL;
        uint64_t v655 = *v3;
        unint64_t v656 = *(void *)(a2 + v655);
        if (v656 <= 0xFFFFFFFFFFFFFFF7 && v656 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v656);
          *(void *)(a2 + v655) = v656 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2672;
        goto LABEL_2418;
      case 0xEAu:
        *(void *)(a1 + 3008) |= 0x1000uLL;
        uint64_t v657 = *v3;
        unint64_t v658 = *(void *)(a2 + v657);
        if (v658 <= 0xFFFFFFFFFFFFFFF7 && v658 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v658);
          *(void *)(a2 + v657) = v658 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2664;
        goto LABEL_2418;
      case 0xEBu:
        *(void *)(a1 + 3008) |= 0x800uLL;
        uint64_t v659 = *v3;
        unint64_t v660 = *(void *)(a2 + v659);
        if (v660 <= 0xFFFFFFFFFFFFFFF7 && v660 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v660);
          *(void *)(a2 + v659) = v660 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2656;
        goto LABEL_2418;
      case 0xECu:
        *(void *)(a1 + 2992) |= 0x800000000000000uLL;
        uint64_t v661 = *v3;
        unint64_t v662 = *(void *)(a2 + v661);
        if (v662 <= 0xFFFFFFFFFFFFFFF7 && v662 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v662);
          *(void *)(a2 + v661) = v662 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2016;
        goto LABEL_2418;
      case 0xEDu:
        *(void *)(a1 + 2992) |= 0x400000000000000uLL;
        uint64_t v663 = *v3;
        unint64_t v664 = *(void *)(a2 + v663);
        if (v664 <= 0xFFFFFFFFFFFFFFF7 && v664 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v664);
          *(void *)(a2 + v663) = v664 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2008;
        goto LABEL_2418;
      case 0xEEu:
        *(void *)(a1 + 3000) |= 1uLL;
        uint64_t v665 = *v3;
        unint64_t v666 = *(void *)(a2 + v665);
        if (v666 <= 0xFFFFFFFFFFFFFFF7 && v666 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v666);
          *(void *)(a2 + v665) = v666 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2056;
        goto LABEL_2418;
      case 0xEFu:
        *(void *)(a1 + 2992) |= 0x8000000000000000;
        uint64_t v667 = *v3;
        unint64_t v668 = *(void *)(a2 + v667);
        if (v668 <= 0xFFFFFFFFFFFFFFF7 && v668 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v668);
          *(void *)(a2 + v667) = v668 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2048;
        goto LABEL_2418;
      case 0xF0u:
        *(void *)(a1 + 3000) |= 0x100uLL;
        uint64_t v669 = *v3;
        unint64_t v670 = *(void *)(a2 + v669);
        if (v670 <= 0xFFFFFFFFFFFFFFF7 && v670 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v670);
          *(void *)(a2 + v669) = v670 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2120;
        goto LABEL_2418;
      case 0xF1u:
        *(void *)(a1 + 3000) |= 0x80uLL;
        uint64_t v671 = *v3;
        unint64_t v672 = *(void *)(a2 + v671);
        if (v672 <= 0xFFFFFFFFFFFFFFF7 && v672 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v672);
          *(void *)(a2 + v671) = v672 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2112;
        goto LABEL_2418;
      case 0xF2u:
        *(void *)(a1 + 2984) |= 0x10000000000uLL;
        uint64_t v673 = *v3;
        unint64_t v674 = *(void *)(a2 + v673);
        if (v674 <= 0xFFFFFFFFFFFFFFF7 && v674 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v674);
          *(void *)(a2 + v673) = v674 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1352;
        goto LABEL_2418;
      case 0xF3u:
        *(void *)(a1 + 2968) |= 0x2000000uLL;
        uint64_t v675 = *v3;
        unint64_t v676 = *(void *)(a2 + v675);
        if (v676 <= 0xFFFFFFFFFFFFFFF7 && v676 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v676);
          *(void *)(a2 + v675) = v676 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 208;
        goto LABEL_2418;
      case 0xF4u:
        *(void *)(a1 + 2968) |= 0x20000000uLL;
        uint64_t v677 = *v3;
        unint64_t v678 = *(void *)(a2 + v677);
        if (v678 <= 0xFFFFFFFFFFFFFFF7 && v678 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v678);
          *(void *)(a2 + v677) = v678 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 240;
        goto LABEL_2418;
      case 0xF5u:
        *(void *)(a1 + 2968) |= 0x1000000uLL;
        uint64_t v679 = *v3;
        unint64_t v680 = *(void *)(a2 + v679);
        if (v680 <= 0xFFFFFFFFFFFFFFF7 && v680 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v680);
          *(void *)(a2 + v679) = v680 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 200;
        goto LABEL_2418;
      case 0xF6u:
        *(void *)(a1 + 2968) |= 0x10000000uLL;
        uint64_t v681 = *v3;
        unint64_t v682 = *(void *)(a2 + v681);
        if (v682 <= 0xFFFFFFFFFFFFFFF7 && v682 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v682);
          *(void *)(a2 + v681) = v682 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 232;
        goto LABEL_2418;
      case 0xF7u:
        *(void *)(a1 + 2984) |= 0x80000000000uLL;
        uint64_t v683 = *v3;
        unint64_t v684 = *(void *)(a2 + v683);
        if (v684 <= 0xFFFFFFFFFFFFFFF7 && v684 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v684);
          *(void *)(a2 + v683) = v684 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1376;
        goto LABEL_2418;
      case 0xF8u:
        *(void *)(a1 + 2984) |= 0x100000000000uLL;
        uint64_t v685 = *v3;
        unint64_t v686 = *(void *)(a2 + v685);
        if (v686 <= 0xFFFFFFFFFFFFFFF7 && v686 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v686);
          *(void *)(a2 + v685) = v686 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1384;
        goto LABEL_2418;
      case 0xF9u:
        v687 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        [(id)a1 addPortraitTagThresholds:v687];
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v687, a2) & 1) != 0)
        {
          goto LABEL_974;
        }
        goto LABEL_2421;
      case 0xFAu:
        *(void *)(a1 + 2984) |= 0x400000000000uLL;
        uint64_t v688 = *v3;
        unint64_t v689 = *(void *)(a2 + v688);
        if (v689 <= 0xFFFFFFFFFFFFFFF7 && v689 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v689);
          *(void *)(a2 + v688) = v689 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1400;
        goto LABEL_2418;
      case 0xFBu:
        *(void *)(a1 + 2984) |= 0x200000000000uLL;
        uint64_t v690 = *v3;
        unint64_t v691 = *(void *)(a2 + v690);
        if (v691 <= 0xFFFFFFFFFFFFFFF7 && v691 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v691);
          *(void *)(a2 + v690) = v691 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1392;
        goto LABEL_2418;
      case 0xFCu:
        *(void *)(a1 + 2984) |= 0x2000000000000uLL;
        uint64_t v692 = *v3;
        unint64_t v693 = *(void *)(a2 + v692);
        if (v693 <= 0xFFFFFFFFFFFFFFF7 && v693 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v693);
          *(void *)(a2 + v692) = v693 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1424;
        goto LABEL_2418;
      case 0xFDu:
        *(void *)(a1 + 2984) |= 0x1000000000000uLL;
        uint64_t v694 = *v3;
        unint64_t v695 = *(void *)(a2 + v694);
        if (v695 <= 0xFFFFFFFFFFFFFFF7 && v695 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v695);
          *(void *)(a2 + v694) = v695 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1416;
        goto LABEL_2418;
      case 0xFEu:
        *(void *)(a1 + 2984) |= 0x200000000uLL;
        uint64_t v696 = *v3;
        unint64_t v697 = *(void *)(a2 + v696);
        if (v697 <= 0xFFFFFFFFFFFFFFF7 && v697 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v697);
          *(void *)(a2 + v696) = v697 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1296;
        goto LABEL_2418;
      case 0xFFu:
        *(void *)(a1 + 2984) |= 0x100000000uLL;
        uint64_t v698 = *v3;
        unint64_t v699 = *(void *)(a2 + v698);
        if (v699 <= 0xFFFFFFFFFFFFFFF7 && v699 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v699);
          *(void *)(a2 + v698) = v699 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1288;
        goto LABEL_2418;
      case 0x100u:
        *(void *)(a1 + 2984) |= 0x80000000uLL;
        uint64_t v700 = *v3;
        unint64_t v701 = *(void *)(a2 + v700);
        if (v701 <= 0xFFFFFFFFFFFFFFF7 && v701 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v701);
          *(void *)(a2 + v700) = v701 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1280;
        goto LABEL_2418;
      case 0x101u:
        *(void *)(a1 + 2984) |= 0x40000000uLL;
        uint64_t v702 = *v3;
        unint64_t v703 = *(void *)(a2 + v702);
        if (v703 <= 0xFFFFFFFFFFFFFFF7 && v703 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v703);
          *(void *)(a2 + v702) = v703 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1272;
        goto LABEL_2418;
      case 0x102u:
        *(void *)(a1 + 2984) |= 0x20000000uLL;
        uint64_t v704 = *v3;
        unint64_t v705 = *(void *)(a2 + v704);
        if (v705 <= 0xFFFFFFFFFFFFFFF7 && v705 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v705);
          *(void *)(a2 + v704) = v705 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1264;
        goto LABEL_2418;
      case 0x103u:
        *(void *)(a1 + 2984) |= 0x10000000uLL;
        uint64_t v706 = *v3;
        unint64_t v707 = *(void *)(a2 + v706);
        if (v707 <= 0xFFFFFFFFFFFFFFF7 && v707 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v707);
          *(void *)(a2 + v706) = v707 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1256;
        goto LABEL_2418;
      case 0x104u:
        *(void *)(a1 + 2984) |= 0x8000000uLL;
        uint64_t v708 = *v3;
        unint64_t v709 = *(void *)(a2 + v708);
        if (v709 <= 0xFFFFFFFFFFFFFFF7 && v709 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v709);
          *(void *)(a2 + v708) = v709 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1248;
        goto LABEL_2418;
      case 0x105u:
        *(void *)(a1 + 2984) |= 0x4000000uLL;
        uint64_t v710 = *v3;
        unint64_t v711 = *(void *)(a2 + v710);
        if (v711 <= 0xFFFFFFFFFFFFFFF7 && v711 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v711);
          *(void *)(a2 + v710) = v711 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1240;
        goto LABEL_2418;
      case 0x106u:
        *(void *)(a1 + 2984) |= 0x2000000000uLL;
        uint64_t v712 = *v3;
        unint64_t v713 = *(void *)(a2 + v712);
        if (v713 <= 0xFFFFFFFFFFFFFFF7 && v713 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v713);
          *(void *)(a2 + v712) = v713 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1328;
        goto LABEL_2418;
      case 0x107u:
        *(void *)(a1 + 2984) |= 0x1000000000uLL;
        uint64_t v714 = *v3;
        unint64_t v715 = *(void *)(a2 + v714);
        if (v715 <= 0xFFFFFFFFFFFFFFF7 && v715 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v715);
          *(void *)(a2 + v714) = v715 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1320;
        goto LABEL_2418;
      case 0x108u:
        *(void *)(a1 + 2984) |= 0x800000000uLL;
        uint64_t v716 = *v3;
        unint64_t v717 = *(void *)(a2 + v716);
        if (v717 <= 0xFFFFFFFFFFFFFFF7 && v717 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v717);
          *(void *)(a2 + v716) = v717 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1312;
        goto LABEL_2418;
      case 0x109u:
        *(void *)(a1 + 2984) |= 0x400000000uLL;
        uint64_t v718 = *v3;
        unint64_t v719 = *(void *)(a2 + v718);
        if (v719 <= 0xFFFFFFFFFFFFFFF7 && v719 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v719);
          *(void *)(a2 + v718) = v719 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1304;
        goto LABEL_2418;
      case 0x10Au:
        *(void *)(a1 + 2968) |= 0x1000000000000000uLL;
        uint64_t v720 = *v3;
        unint64_t v721 = *(void *)(a2 + v720);
        if (v721 <= 0xFFFFFFFFFFFFFFF7 && v721 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v721);
          *(void *)(a2 + v720) = v721 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 488;
        goto LABEL_2418;
      case 0x10Bu:
        *(void *)(a1 + 2968) |= 0x4000000000000uLL;
        uint64_t v722 = *v3;
        unint64_t v723 = *(void *)(a2 + v722);
        if (v723 <= 0xFFFFFFFFFFFFFFF7 && v723 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v723);
          *(void *)(a2 + v722) = v723 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 408;
        goto LABEL_2418;
      case 0x10Cu:
        *(void *)(a1 + 2968) |= 0x200000000000000uLL;
        uint64_t v724 = *v3;
        unint64_t v725 = *(void *)(a2 + v724);
        if (v725 <= 0xFFFFFFFFFFFFFFF7 && v725 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v725);
          *(void *)(a2 + v724) = v725 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 464;
        goto LABEL_2418;
      case 0x10Du:
        *(void *)(a1 + 2968) |= 0x40000000000000uLL;
        uint64_t v726 = *v3;
        unint64_t v727 = *(void *)(a2 + v726);
        if (v727 <= 0xFFFFFFFFFFFFFFF7 && v727 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v727);
          *(void *)(a2 + v726) = v727 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 440;
        goto LABEL_2418;
      case 0x10Eu:
        *(void *)(a1 + 2968) |= 0x800000000000000uLL;
        uint64_t v728 = *v3;
        unint64_t v729 = *(void *)(a2 + v728);
        if (v729 <= 0xFFFFFFFFFFFFFFF7 && v729 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v729);
          *(void *)(a2 + v728) = v729 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 480;
        goto LABEL_2418;
      case 0x10Fu:
        *(void *)(a1 + 2968) |= 0x2000000000000uLL;
        uint64_t v730 = *v3;
        unint64_t v731 = *(void *)(a2 + v730);
        if (v731 <= 0xFFFFFFFFFFFFFFF7 && v731 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v731);
          *(void *)(a2 + v730) = v731 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 400;
        goto LABEL_2418;
      case 0x110u:
        *(void *)(a1 + 2968) |= 0x100000000000000uLL;
        uint64_t v732 = *v3;
        unint64_t v733 = *(void *)(a2 + v732);
        if (v733 <= 0xFFFFFFFFFFFFFFF7 && v733 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v733);
          *(void *)(a2 + v732) = v733 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 456;
        goto LABEL_2418;
      case 0x111u:
        *(void *)(a1 + 2968) |= 0x20000000000000uLL;
        uint64_t v734 = *v3;
        unint64_t v735 = *(void *)(a2 + v734);
        if (v735 <= 0xFFFFFFFFFFFFFFF7 && v735 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v735);
          *(void *)(a2 + v734) = v735 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 432;
        goto LABEL_2418;
      case 0x112u:
        *(void *)(a1 + 2968) |= 0x400000000000000uLL;
        uint64_t v736 = *v3;
        unint64_t v737 = *(void *)(a2 + v736);
        if (v737 <= 0xFFFFFFFFFFFFFFF7 && v737 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v737);
          *(void *)(a2 + v736) = v737 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 472;
        goto LABEL_2418;
      case 0x113u:
        *(void *)(a1 + 2968) |= 0x1000000000000uLL;
        uint64_t v738 = *v3;
        unint64_t v739 = *(void *)(a2 + v738);
        if (v739 <= 0xFFFFFFFFFFFFFFF7 && v739 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v739);
          *(void *)(a2 + v738) = v739 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 392;
        goto LABEL_2418;
      case 0x114u:
        *(void *)(a1 + 2968) |= 0x80000000000000uLL;
        uint64_t v740 = *v3;
        unint64_t v741 = *(void *)(a2 + v740);
        if (v741 <= 0xFFFFFFFFFFFFFFF7 && v741 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v741);
          *(void *)(a2 + v740) = v741 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 448;
        goto LABEL_2418;
      case 0x115u:
        *(void *)(a1 + 2968) |= 0x10000000000000uLL;
        uint64_t v742 = *v3;
        unint64_t v743 = *(void *)(a2 + v742);
        if (v743 <= 0xFFFFFFFFFFFFFFF7 && v743 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v743);
          *(void *)(a2 + v742) = v743 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 424;
        goto LABEL_2418;
      case 0x116u:
        *(void *)(a1 + 2968) |= 0x400000000uLL;
        uint64_t v744 = *v3;
        unint64_t v745 = *(void *)(a2 + v744);
        if (v745 <= 0xFFFFFFFFFFFFFFF7 && v745 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v745);
          *(void *)(a2 + v744) = v745 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 280;
        goto LABEL_2418;
      case 0x117u:
        *(void *)(a1 + 2992) |= 0x20uLL;
        uint64_t v746 = *v3;
        unint64_t v747 = *(void *)(a2 + v746);
        if (v747 <= 0xFFFFFFFFFFFFFFF7 && v747 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v747);
          *(void *)(a2 + v746) = v747 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1584;
        goto LABEL_2418;
      case 0x118u:
        *(void *)(a1 + 2976) |= 0x20000000uLL;
        uint64_t v748 = *v3;
        unint64_t v749 = *(void *)(a2 + v748);
        if (v749 <= 0xFFFFFFFFFFFFFFF7 && v749 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v749);
          *(void *)(a2 + v748) = v749 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 752;
        goto LABEL_2418;
      case 0x119u:
        *(void *)(a1 + 2976) |= 0x10000000uLL;
        uint64_t v750 = *v3;
        unint64_t v751 = *(void *)(a2 + v750);
        if (v751 <= 0xFFFFFFFFFFFFFFF7 && v751 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v751);
          *(void *)(a2 + v750) = v751 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 744;
        goto LABEL_2418;
      case 0x11Au:
        *(void *)(a1 + 2968) |= 0x1000000000uLL;
        uint64_t v752 = *v3;
        unint64_t v753 = *(void *)(a2 + v752);
        if (v753 <= 0xFFFFFFFFFFFFFFF7 && v753 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v753);
          *(void *)(a2 + v752) = v753 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 296;
        goto LABEL_2418;
      case 0x11Bu:
        *(void *)(a1 + 2968) |= 0x80uLL;
        uint64_t v754 = *v3;
        unint64_t v755 = *(void *)(a2 + v754);
        if (v755 <= 0xFFFFFFFFFFFFFFF7 && v755 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v755);
          *(void *)(a2 + v754) = v755 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 64;
        goto LABEL_2418;
      case 0x11Cu:
        *(void *)(a1 + 2968) |= 0x40uLL;
        uint64_t v756 = *v3;
        unint64_t v757 = *(void *)(a2 + v756);
        if (v757 <= 0xFFFFFFFFFFFFFFF7 && v757 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v757);
          *(void *)(a2 + v756) = v757 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 56;
        goto LABEL_2418;
      case 0x11Du:
        *(void *)(a1 + 2968) |= 0x20uLL;
        uint64_t v758 = *v3;
        unint64_t v759 = *(void *)(a2 + v758);
        if (v759 <= 0xFFFFFFFFFFFFFFF7 && v759 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v759);
          *(void *)(a2 + v758) = v759 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 48;
        goto LABEL_2418;
      case 0x11Eu:
        *(void *)(a1 + 2968) |= 0x10uLL;
        uint64_t v760 = *v3;
        unint64_t v761 = *(void *)(a2 + v760);
        if (v761 <= 0xFFFFFFFFFFFFFFF7 && v761 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v761);
          *(void *)(a2 + v760) = v761 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 40;
        goto LABEL_2418;
      case 0x11Fu:
        *(void *)(a1 + 2968) |= 8uLL;
        uint64_t v762 = *v3;
        unint64_t v763 = *(void *)(a2 + v762);
        if (v763 <= 0xFFFFFFFFFFFFFFF7 && v763 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v763);
          *(void *)(a2 + v762) = v763 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 32;
        goto LABEL_2418;
      case 0x120u:
        *(void *)(a1 + 2968) |= 4uLL;
        uint64_t v764 = *v3;
        unint64_t v765 = *(void *)(a2 + v764);
        if (v765 <= 0xFFFFFFFFFFFFFFF7 && v765 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v765);
          *(void *)(a2 + v764) = v765 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 24;
        goto LABEL_2418;
      case 0x121u:
        *(void *)(a1 + 2968) |= 2uLL;
        uint64_t v766 = *v3;
        unint64_t v767 = *(void *)(a2 + v766);
        if (v767 <= 0xFFFFFFFFFFFFFFF7 && v767 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v767);
          *(void *)(a2 + v766) = v767 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 16;
        goto LABEL_2418;
      case 0x122u:
        *(void *)(a1 + 2968) |= 1uLL;
        uint64_t v768 = *v3;
        unint64_t v769 = *(void *)(a2 + v768);
        if (v769 <= 0xFFFFFFFFFFFFFFF7 && v769 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v769);
          *(void *)(a2 + v768) = v769 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 8;
        goto LABEL_2418;
      case 0x123u:
        *(void *)(a1 + 2992) |= 0x80000uLL;
        uint64_t v770 = *v3;
        unint64_t v771 = *(void *)(a2 + v770);
        if (v771 <= 0xFFFFFFFFFFFFFFF7 && v771 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v771);
          *(void *)(a2 + v770) = v771 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1696;
        goto LABEL_2418;
      case 0x124u:
        *(void *)(a1 + 2992) |= 0x40000uLL;
        uint64_t v772 = *v3;
        unint64_t v773 = *(void *)(a2 + v772);
        if (v773 <= 0xFFFFFFFFFFFFFFF7 && v773 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v773);
          *(void *)(a2 + v772) = v773 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1688;
        goto LABEL_2418;
      case 0x125u:
        *(void *)(a1 + 2992) |= 0x20000uLL;
        uint64_t v774 = *v3;
        unint64_t v775 = *(void *)(a2 + v774);
        if (v775 <= 0xFFFFFFFFFFFFFFF7 && v775 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v775);
          *(void *)(a2 + v774) = v775 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1680;
        goto LABEL_2418;
      case 0x126u:
        *(void *)(a1 + 2992) |= 0x10000uLL;
        uint64_t v776 = *v3;
        unint64_t v777 = *(void *)(a2 + v776);
        if (v777 <= 0xFFFFFFFFFFFFFFF7 && v777 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v777);
          *(void *)(a2 + v776) = v777 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1672;
        goto LABEL_2418;
      case 0x127u:
        *(void *)(a1 + 3008) |= 4uLL;
        uint64_t v778 = *v3;
        unint64_t v779 = *(void *)(a2 + v778);
        if (v779 <= 0xFFFFFFFFFFFFFFF7 && v779 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v779);
          *(void *)(a2 + v778) = v779 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2584;
        goto LABEL_2418;
      case 0x128u:
        *(void *)(a1 + 3008) |= 2uLL;
        uint64_t v780 = *v3;
        unint64_t v781 = *(void *)(a2 + v780);
        if (v781 <= 0xFFFFFFFFFFFFFFF7 && v781 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v781);
          *(void *)(a2 + v780) = v781 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2576;
        goto LABEL_2418;
      case 0x129u:
        *(void *)(a1 + 3008) |= 1uLL;
        uint64_t v782 = *v3;
        unint64_t v783 = *(void *)(a2 + v782);
        if (v783 <= 0xFFFFFFFFFFFFFFF7 && v783 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v783);
          *(void *)(a2 + v782) = v783 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2568;
        goto LABEL_2418;
      case 0x12Au:
        *(void *)(a1 + 3000) |= 0x8000000000000000;
        uint64_t v784 = *v3;
        unint64_t v785 = *(void *)(a2 + v784);
        if (v785 <= 0xFFFFFFFFFFFFFFF7 && v785 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v785);
          *(void *)(a2 + v784) = v785 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2560;
        goto LABEL_2418;
      case 0x12Bu:
        *(void *)(a1 + 3008) |= 0x40uLL;
        uint64_t v786 = *v3;
        unint64_t v787 = *(void *)(a2 + v786);
        if (v787 <= 0xFFFFFFFFFFFFFFF7 && v787 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v787);
          *(void *)(a2 + v786) = v787 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2616;
        goto LABEL_2418;
      case 0x12Cu:
        *(void *)(a1 + 3008) |= 0x20uLL;
        uint64_t v788 = *v3;
        unint64_t v789 = *(void *)(a2 + v788);
        if (v789 <= 0xFFFFFFFFFFFFFFF7 && v789 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v789);
          *(void *)(a2 + v788) = v789 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2608;
        goto LABEL_2418;
      case 0x12Du:
        *(void *)(a1 + 3008) |= 0x10uLL;
        uint64_t v790 = *v3;
        unint64_t v791 = *(void *)(a2 + v790);
        if (v791 <= 0xFFFFFFFFFFFFFFF7 && v791 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v791);
          *(void *)(a2 + v790) = v791 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2600;
        goto LABEL_2418;
      case 0x12Eu:
        *(void *)(a1 + 3008) |= 8uLL;
        uint64_t v792 = *v3;
        unint64_t v793 = *(void *)(a2 + v792);
        if (v793 <= 0xFFFFFFFFFFFFFFF7 && v793 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v793);
          *(void *)(a2 + v792) = v793 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2592;
        goto LABEL_2418;
      case 0x12Fu:
        *(void *)(a1 + 3008) |= 0x400uLL;
        uint64_t v794 = *v3;
        unint64_t v795 = *(void *)(a2 + v794);
        if (v795 <= 0xFFFFFFFFFFFFFFF7 && v795 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v795);
          *(void *)(a2 + v794) = v795 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2648;
        goto LABEL_2418;
      case 0x130u:
        *(void *)(a1 + 3008) |= 0x200uLL;
        uint64_t v796 = *v3;
        unint64_t v797 = *(void *)(a2 + v796);
        if (v797 <= 0xFFFFFFFFFFFFFFF7 && v797 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v797);
          *(void *)(a2 + v796) = v797 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2640;
        goto LABEL_2418;
      case 0x131u:
        *(void *)(a1 + 3008) |= 0x100uLL;
        uint64_t v798 = *v3;
        unint64_t v799 = *(void *)(a2 + v798);
        if (v799 <= 0xFFFFFFFFFFFFFFF7 && v799 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v799);
          *(void *)(a2 + v798) = v799 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2632;
        goto LABEL_2418;
      case 0x132u:
        *(void *)(a1 + 3008) |= 0x80uLL;
        uint64_t v800 = *v3;
        unint64_t v801 = *(void *)(a2 + v800);
        if (v801 <= 0xFFFFFFFFFFFFFFF7 && v801 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v801);
          *(void *)(a2 + v800) = v801 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2624;
        goto LABEL_2418;
      case 0x133u:
        *(void *)(a1 + 2968) |= 0x400000uLL;
        uint64_t v802 = *v3;
        unint64_t v803 = *(void *)(a2 + v802);
        if (v803 <= 0xFFFFFFFFFFFFFFF7 && v803 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v803);
          *(void *)(a2 + v802) = v803 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 184;
        goto LABEL_2418;
      case 0x134u:
        *(void *)(a1 + 2976) |= 0x2000000uLL;
        uint64_t v804 = *v3;
        unint64_t v805 = *(void *)(a2 + v804);
        if (v805 <= 0xFFFFFFFFFFFFFFF7 && v805 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v805);
          *(void *)(a2 + v804) = v805 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 720;
        goto LABEL_2418;
      case 0x135u:
        *(void *)(a1 + 2976) |= 0x4000000uLL;
        uint64_t v806 = *v3;
        unint64_t v807 = *(void *)(a2 + v806);
        if (v807 <= 0xFFFFFFFFFFFFFFF7 && v807 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v807);
          *(void *)(a2 + v806) = v807 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 728;
        goto LABEL_2418;
      case 0x136u:
        char v808 = 0;
        unsigned int v809 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x20000000000000uLL;
        while (2)
        {
          uint64_t v810 = *v3;
          unint64_t v811 = *(void *)(a2 + v810);
          if (v811 == -1 || v811 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v812 = *(unsigned char *)(*(void *)(a2 + *v7) + v811);
            *(void *)(a2 + v810) = v811 + 1;
            v288 |= (unint64_t)(v812 & 0x7F) << v808;
            if (v812 < 0)
            {
              v808 += 7;
              BOOL v14 = v809++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1706;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1706:
        uint64_t v1037 = 2888;
        goto LABEL_1756;
      case 0x137u:
        char v813 = 0;
        unsigned int v814 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x200000000000uLL;
        while (2)
        {
          uint64_t v815 = *v3;
          unint64_t v816 = *(void *)(a2 + v815);
          if (v816 == -1 || v816 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v817 = *(unsigned char *)(*(void *)(a2 + *v7) + v816);
            *(void *)(a2 + v815) = v816 + 1;
            v288 |= (unint64_t)(v817 & 0x7F) << v813;
            if (v817 < 0)
            {
              v813 += 7;
              BOOL v14 = v814++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1710;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1710:
        uint64_t v1037 = 2856;
        goto LABEL_1756;
      case 0x138u:
        char v818 = 0;
        unsigned int v819 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x200000000000000uLL;
        while (2)
        {
          uint64_t v820 = *v3;
          unint64_t v821 = *(void *)(a2 + v820);
          if (v821 == -1 || v821 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v822 = *(unsigned char *)(*(void *)(a2 + *v7) + v821);
            *(void *)(a2 + v820) = v821 + 1;
            v288 |= (unint64_t)(v822 & 0x7F) << v818;
            if (v822 < 0)
            {
              v818 += 7;
              BOOL v14 = v819++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1714;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1714:
        uint64_t v1037 = 2904;
        goto LABEL_1756;
      case 0x139u:
        char v823 = 0;
        unsigned int v824 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x2000000000000uLL;
        while (2)
        {
          uint64_t v825 = *v3;
          unint64_t v826 = *(void *)(a2 + v825);
          if (v826 == -1 || v826 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v827 = *(unsigned char *)(*(void *)(a2 + *v7) + v826);
            *(void *)(a2 + v825) = v826 + 1;
            v288 |= (unint64_t)(v827 & 0x7F) << v823;
            if (v827 < 0)
            {
              v823 += 7;
              BOOL v14 = v824++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1718;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1718:
        uint64_t v1037 = 2872;
        goto LABEL_1756;
      case 0x13Au:
        char v828 = 0;
        unsigned int v829 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x8000000000000uLL;
        while (2)
        {
          uint64_t v830 = *v3;
          unint64_t v831 = *(void *)(a2 + v830);
          if (v831 == -1 || v831 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v832 = *(unsigned char *)(*(void *)(a2 + *v7) + v831);
            *(void *)(a2 + v830) = v831 + 1;
            v288 |= (unint64_t)(v832 & 0x7F) << v828;
            if (v832 < 0)
            {
              v828 += 7;
              BOOL v14 = v829++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1722;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1722:
        uint64_t v1037 = 2880;
        goto LABEL_1756;
      case 0x13Bu:
        char v833 = 0;
        unsigned int v834 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x80000000000uLL;
        while (2)
        {
          uint64_t v835 = *v3;
          unint64_t v836 = *(void *)(a2 + v835);
          if (v836 == -1 || v836 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v837 = *(unsigned char *)(*(void *)(a2 + *v7) + v836);
            *(void *)(a2 + v835) = v836 + 1;
            v288 |= (unint64_t)(v837 & 0x7F) << v833;
            if (v837 < 0)
            {
              v833 += 7;
              BOOL v14 = v834++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1726;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1726:
        uint64_t v1037 = 2848;
        goto LABEL_1756;
      case 0x13Cu:
        char v838 = 0;
        unsigned int v839 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x80000000000000uLL;
        while (2)
        {
          uint64_t v840 = *v3;
          unint64_t v841 = *(void *)(a2 + v840);
          if (v841 == -1 || v841 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v842 = *(unsigned char *)(*(void *)(a2 + *v7) + v841);
            *(void *)(a2 + v840) = v841 + 1;
            v288 |= (unint64_t)(v842 & 0x7F) << v838;
            if (v842 < 0)
            {
              v838 += 7;
              BOOL v14 = v839++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1730;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1730:
        uint64_t v1037 = 2896;
        goto LABEL_1756;
      case 0x13Du:
        char v843 = 0;
        unsigned int v844 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x800000000000uLL;
        while (2)
        {
          uint64_t v845 = *v3;
          unint64_t v846 = *(void *)(a2 + v845);
          if (v846 == -1 || v846 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v847 = *(unsigned char *)(*(void *)(a2 + *v7) + v846);
            *(void *)(a2 + v845) = v846 + 1;
            v288 |= (unint64_t)(v847 & 0x7F) << v843;
            if (v847 < 0)
            {
              v843 += 7;
              BOOL v14 = v844++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1734;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1734:
        uint64_t v1037 = 2864;
        goto LABEL_1756;
      case 0x13Eu:
        *(void *)(a1 + 2992) |= 0x80000000000000uLL;
        uint64_t v848 = *v3;
        unint64_t v849 = *(void *)(a2 + v848);
        if (v849 <= 0xFFFFFFFFFFFFFFF7 && v849 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v849);
          *(void *)(a2 + v848) = v849 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1984;
        goto LABEL_2418;
      case 0x13Fu:
        *(void *)(a1 + 2992) |= 0x40000000000000uLL;
        uint64_t v850 = *v3;
        unint64_t v851 = *(void *)(a2 + v850);
        if (v851 <= 0xFFFFFFFFFFFFFFF7 && v851 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v851);
          *(void *)(a2 + v850) = v851 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1976;
        goto LABEL_2418;
      case 0x140u:
        char v852 = 0;
        unsigned int v853 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2984) |= 0x10uLL;
        while (2)
        {
          uint64_t v854 = *v3;
          unint64_t v855 = *(void *)(a2 + v854);
          if (v855 == -1 || v855 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v856 = *(unsigned char *)(*(void *)(a2 + *v7) + v855);
            *(void *)(a2 + v854) = v855 + 1;
            v19 |= (unint64_t)(v856 & 0x7F) << v852;
            if (v856 < 0)
            {
              v852 += 7;
              BOOL v14 = v853++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1738;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1738:
        uint64_t v1034 = 1064;
        goto LABEL_1761;
      case 0x141u:
        *(void *)(a1 + 2968) |= 0x400000000000uLL;
        uint64_t v857 = *v3;
        unint64_t v858 = *(void *)(a2 + v857);
        if (v858 <= 0xFFFFFFFFFFFFFFF7 && v858 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v858);
          *(void *)(a2 + v857) = v858 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 376;
        goto LABEL_2418;
      case 0x142u:
        *(void *)(a1 + 2968) |= 0x100000000000uLL;
        uint64_t v859 = *v3;
        unint64_t v860 = *(void *)(a2 + v859);
        if (v860 <= 0xFFFFFFFFFFFFFFF7 && v860 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v860);
          *(void *)(a2 + v859) = v860 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 360;
        goto LABEL_2418;
      case 0x143u:
        *(void *)(a1 + 2968) |= 0x80000000000uLL;
        uint64_t v861 = *v3;
        unint64_t v862 = *(void *)(a2 + v861);
        if (v862 <= 0xFFFFFFFFFFFFFFF7 && v862 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v862);
          *(void *)(a2 + v861) = v862 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 352;
        goto LABEL_2418;
      case 0x144u:
        *(void *)(a1 + 2992) |= 0x8000uLL;
        uint64_t v863 = *v3;
        unint64_t v864 = *(void *)(a2 + v863);
        if (v864 <= 0xFFFFFFFFFFFFFFF7 && v864 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v864);
          *(void *)(a2 + v863) = v864 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1664;
        goto LABEL_2418;
      case 0x145u:
        *(void *)(a1 + 2968) |= 0x10000000000uLL;
        uint64_t v865 = *v3;
        unint64_t v866 = *(void *)(a2 + v865);
        if (v866 <= 0xFFFFFFFFFFFFFFF7 && v866 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v866);
          *(void *)(a2 + v865) = v866 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 328;
        goto LABEL_2418;
      case 0x146u:
        *(void *)(a1 + 2992) |= 0x40uLL;
        uint64_t v867 = *v3;
        unint64_t v868 = *(void *)(a2 + v867);
        if (v868 <= 0xFFFFFFFFFFFFFFF7 && v868 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v868);
          *(void *)(a2 + v867) = v868 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1592;
        goto LABEL_2418;
      case 0x147u:
        *(void *)(a1 + 2968) |= 0x80000000uLL;
        uint64_t v869 = *v3;
        unint64_t v870 = *(void *)(a2 + v869);
        if (v870 <= 0xFFFFFFFFFFFFFFF7 && v870 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v870);
          *(void *)(a2 + v869) = v870 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 256;
        goto LABEL_2418;
      case 0x148u:
        *(void *)(a1 + 2968) |= 0x40000000uLL;
        uint64_t v871 = *v3;
        unint64_t v872 = *(void *)(a2 + v871);
        if (v872 <= 0xFFFFFFFFFFFFFFF7 && v872 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v872);
          *(void *)(a2 + v871) = v872 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 248;
        goto LABEL_2418;
      case 0x149u:
        *(void *)(a1 + 3000) |= 0x10000000000000uLL;
        uint64_t v873 = *v3;
        unint64_t v874 = *(void *)(a2 + v873);
        if (v874 <= 0xFFFFFFFFFFFFFFF7 && v874 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v874);
          *(void *)(a2 + v873) = v874 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2472;
        goto LABEL_2418;
      case 0x14Au:
        char v875 = 0;
        unsigned int v876 = 0;
        uint64_t v877 = 0;
        *(_WORD *)(a1 + 3016) |= 0x400u;
        while (2)
        {
          uint64_t v878 = *v3;
          unint64_t v879 = *(void *)(a2 + v878);
          if (v879 == -1 || v879 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v880 = *(unsigned char *)(*(void *)(a2 + *v7) + v879);
            *(void *)(a2 + v878) = v879 + 1;
            v877 |= (unint64_t)(v880 & 0x7F) << v875;
            if (v880 < 0)
            {
              v875 += 7;
              BOOL v14 = v876++ >= 9;
              if (v14)
              {
                uint64_t v877 = 0;
                goto LABEL_1742;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v877 = 0;
        }
LABEL_1742:
        BOOL v1035 = v877 != 0;
        uint64_t v1036 = 2964;
        goto LABEL_1747;
      case 0x14Bu:
        *(void *)(a1 + 2992) |= 0x800000uLL;
        uint64_t v881 = *v3;
        unint64_t v882 = *(void *)(a2 + v881);
        if (v882 <= 0xFFFFFFFFFFFFFFF7 && v882 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v882);
          *(void *)(a2 + v881) = v882 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1728;
        goto LABEL_2418;
      case 0x14Cu:
        *(void *)(a1 + 2992) |= 0x200000uLL;
        uint64_t v883 = *v3;
        unint64_t v884 = *(void *)(a2 + v883);
        if (v884 <= 0xFFFFFFFFFFFFFFF7 && v884 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v884);
          *(void *)(a2 + v883) = v884 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1712;
        goto LABEL_2418;
      case 0x14Du:
        *(void *)(a1 + 2968) |= 0x800uLL;
        uint64_t v885 = *v3;
        unint64_t v886 = *(void *)(a2 + v885);
        if (v886 <= 0xFFFFFFFFFFFFFFF7 && v886 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v886);
          *(void *)(a2 + v885) = v886 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 96;
        goto LABEL_2418;
      case 0x14Eu:
        *(void *)(a1 + 2968) |= 0x200uLL;
        uint64_t v887 = *v3;
        unint64_t v888 = *(void *)(a2 + v887);
        if (v888 <= 0xFFFFFFFFFFFFFFF7 && v888 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v888);
          *(void *)(a2 + v887) = v888 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 80;
        goto LABEL_2418;
      case 0x14Fu:
        *(void *)(a1 + 2984) |= 0x4000000000000uLL;
        uint64_t v889 = *v3;
        unint64_t v890 = *(void *)(a2 + v889);
        if (v890 <= 0xFFFFFFFFFFFFFFF7 && v890 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v890);
          *(void *)(a2 + v889) = v890 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1432;
        goto LABEL_2418;
      case 0x150u:
        *(void *)(a1 + 2984) |= 0x800000000000uLL;
        uint64_t v891 = *v3;
        unint64_t v892 = *(void *)(a2 + v891);
        if (v892 <= 0xFFFFFFFFFFFFFFF7 && v892 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v892);
          *(void *)(a2 + v891) = v892 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1408;
        goto LABEL_2418;
      case 0x151u:
        *(void *)(a1 + 2976) |= 0x200000000000000uLL;
        uint64_t v893 = *v3;
        unint64_t v894 = *(void *)(a2 + v893);
        if (v894 <= 0xFFFFFFFFFFFFFFF7 && v894 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v894);
          *(void *)(a2 + v893) = v894 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 976;
        goto LABEL_2418;
      case 0x152u:
        char v895 = 0;
        unsigned int v896 = 0;
        uint64_t v897 = 0;
        *(_WORD *)(a1 + 3016) |= 0x20u;
        while (2)
        {
          uint64_t v898 = *v3;
          unint64_t v899 = *(void *)(a2 + v898);
          if (v899 == -1 || v899 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v900 = *(unsigned char *)(*(void *)(a2 + *v7) + v899);
            *(void *)(a2 + v898) = v899 + 1;
            v897 |= (unint64_t)(v900 & 0x7F) << v895;
            if (v900 < 0)
            {
              v895 += 7;
              BOOL v14 = v896++ >= 9;
              if (v14)
              {
                uint64_t v897 = 0;
                goto LABEL_1746;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v897 = 0;
        }
LABEL_1746:
        BOOL v1035 = v897 != 0;
        uint64_t v1036 = 2959;
LABEL_1747:
        *(unsigned char *)(a1 + v1036) = v1035;
        goto LABEL_2419;
      case 0x153u:
        char v901 = 0;
        unsigned int v902 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2984) |= 0x4000000000uLL;
        while (2)
        {
          uint64_t v903 = *v3;
          unint64_t v904 = *(void *)(a2 + v903);
          if (v904 == -1 || v904 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v905 = *(unsigned char *)(*(void *)(a2 + *v7) + v904);
            *(void *)(a2 + v903) = v904 + 1;
            v19 |= (unint64_t)(v905 & 0x7F) << v901;
            if (v905 < 0)
            {
              v901 += 7;
              BOOL v14 = v902++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1751;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1751:
        uint64_t v1034 = 1336;
        goto LABEL_1761;
      case 0x154u:
        *(void *)(a1 + 2984) |= 0x80uLL;
        uint64_t v906 = *v3;
        unint64_t v907 = *(void *)(a2 + v906);
        if (v907 <= 0xFFFFFFFFFFFFFFF7 && v907 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v907);
          *(void *)(a2 + v906) = v907 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1088;
        goto LABEL_2418;
      case 0x155u:
        *(void *)(a1 + 2984) |= 0x40uLL;
        uint64_t v908 = *v3;
        unint64_t v909 = *(void *)(a2 + v908);
        if (v909 <= 0xFFFFFFFFFFFFFFF7 && v909 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v909);
          *(void *)(a2 + v908) = v909 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1080;
        goto LABEL_2418;
      case 0x156u:
        *(void *)(a1 + 2984) |= 0x200uLL;
        uint64_t v910 = *v3;
        unint64_t v911 = *(void *)(a2 + v910);
        if (v911 <= 0xFFFFFFFFFFFFFFF7 && v911 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v911);
          *(void *)(a2 + v910) = v911 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1104;
        goto LABEL_2418;
      case 0x157u:
        *(void *)(a1 + 2984) |= 0x20uLL;
        uint64_t v912 = *v3;
        unint64_t v913 = *(void *)(a2 + v912);
        if (v913 <= 0xFFFFFFFFFFFFFFF7 && v913 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v913);
          *(void *)(a2 + v912) = v913 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1072;
        goto LABEL_2418;
      case 0x158u:
        *(void *)(a1 + 2984) |= 0x100uLL;
        uint64_t v914 = *v3;
        unint64_t v915 = *(void *)(a2 + v914);
        if (v915 <= 0xFFFFFFFFFFFFFFF7 && v915 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v915);
          *(void *)(a2 + v914) = v915 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1096;
        goto LABEL_2418;
      case 0x159u:
        v687 = objc_alloc_init(NTPBWeightedTagID);
        [(id)a1 addRealTimeUserFeedbackTagCoefficients:v687];
        if PBReaderPlaceMark() && (NTPBWeightedTagIDReadFrom((uint64_t)v687, a2))
        {
LABEL_974:
          PBReaderRecallMark();

LABEL_2419:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_2421:

        return 0;
      case 0x15Au:
        *(void *)(a1 + 2976) |= 0x8000uLL;
        uint64_t v916 = *v3;
        unint64_t v917 = *(void *)(a2 + v916);
        if (v917 <= 0xFFFFFFFFFFFFFFF7 && v917 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v917);
          *(void *)(a2 + v916) = v917 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 640;
        goto LABEL_2418;
      case 0x15Bu:
        *(void *)(a1 + 2976) |= 0x4000uLL;
        uint64_t v918 = *v3;
        unint64_t v919 = *(void *)(a2 + v918);
        if (v919 <= 0xFFFFFFFFFFFFFFF7 && v919 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v919);
          *(void *)(a2 + v918) = v919 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 632;
        goto LABEL_2418;
      case 0x15Cu:
        *(void *)(a1 + 2984) |= 8uLL;
        uint64_t v920 = *v3;
        unint64_t v921 = *(void *)(a2 + v920);
        if (v921 <= 0xFFFFFFFFFFFFFFF7 && v921 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v921);
          *(void *)(a2 + v920) = v921 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1056;
        goto LABEL_2418;
      case 0x15Du:
        *(void *)(a1 + 2968) |= 0x200000uLL;
        uint64_t v922 = *v3;
        unint64_t v923 = *(void *)(a2 + v922);
        if (v923 <= 0xFFFFFFFFFFFFFFF7 && v923 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v923);
          *(void *)(a2 + v922) = v923 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 176;
        goto LABEL_2418;
      case 0x15Eu:
        char v924 = 0;
        unsigned int v925 = 0;
        uint64_t v288 = 0;
        *(void *)(a1 + 3008) |= 0x8000000uLL;
        while (2)
        {
          uint64_t v926 = *v3;
          unint64_t v927 = *(void *)(a2 + v926);
          if (v927 == -1 || v927 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v928 = *(unsigned char *)(*(void *)(a2 + *v7) + v927);
            *(void *)(a2 + v926) = v927 + 1;
            v288 |= (unint64_t)(v928 & 0x7F) << v924;
            if (v928 < 0)
            {
              v924 += 7;
              BOOL v14 = v925++ >= 9;
              if (v14)
              {
                LODWORD(v288) = 0;
                goto LABEL_1755;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v288) = 0;
        }
LABEL_1755:
        uint64_t v1037 = 2784;
LABEL_1756:
        *(_DWORD *)(a1 + v1037) = v288;
        goto LABEL_2419;
      case 0x15Fu:
        char v929 = 0;
        unsigned int v930 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 2984) |= 0x8000000000uLL;
        while (2)
        {
          uint64_t v931 = *v3;
          unint64_t v932 = *(void *)(a2 + v931);
          if (v932 == -1 || v932 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v933 = *(unsigned char *)(*(void *)(a2 + *v7) + v932);
            *(void *)(a2 + v931) = v932 + 1;
            v19 |= (unint64_t)(v933 & 0x7F) << v929;
            if (v933 < 0)
            {
              v929 += 7;
              BOOL v14 = v930++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_1760;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_1760:
        uint64_t v1034 = 1344;
LABEL_1761:
        *(void *)(a1 + v1034) = v19;
        goto LABEL_2419;
      case 0x160u:
        *(void *)(a1 + 2984) |= 0x1000000000000000uLL;
        uint64_t v934 = *v3;
        unint64_t v935 = *(void *)(a2 + v934);
        if (v935 <= 0xFFFFFFFFFFFFFFF7 && v935 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v935);
          *(void *)(a2 + v934) = v935 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1512;
        goto LABEL_2418;
      case 0x161u:
        *(void *)(a1 + 2976) |= 8uLL;
        uint64_t v936 = *v3;
        unint64_t v937 = *(void *)(a2 + v936);
        if (v937 <= 0xFFFFFFFFFFFFFFF7 && v937 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v937);
          *(void *)(a2 + v936) = v937 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 544;
        goto LABEL_2418;
      case 0x162u:
        *(void *)(a1 + 2976) |= 0x20uLL;
        uint64_t v938 = *v3;
        unint64_t v939 = *(void *)(a2 + v938);
        if (v939 <= 0xFFFFFFFFFFFFFFF7 && v939 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v939);
          *(void *)(a2 + v938) = v939 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 560;
        goto LABEL_2418;
      case 0x163u:
        *(void *)(a1 + 2968) |= 0x8000000000uLL;
        uint64_t v940 = *v3;
        unint64_t v941 = *(void *)(a2 + v940);
        if (v941 <= 0xFFFFFFFFFFFFFFF7 && v941 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v941);
          *(void *)(a2 + v940) = v941 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 320;
        goto LABEL_2418;
      case 0x164u:
        *(void *)(a1 + 2968) |= 0x20000000000uLL;
        uint64_t v942 = *v3;
        unint64_t v943 = *(void *)(a2 + v942);
        if (v943 <= 0xFFFFFFFFFFFFFFF7 && v943 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v943);
          *(void *)(a2 + v942) = v943 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 336;
        goto LABEL_2418;
      case 0x165u:
        *(void *)(a1 + 2984) |= 0x2000000000000000uLL;
        uint64_t v944 = *v3;
        unint64_t v945 = *(void *)(a2 + v944);
        if (v945 <= 0xFFFFFFFFFFFFFFF7 && v945 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v945);
          *(void *)(a2 + v944) = v945 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1520;
        goto LABEL_2418;
      case 0x166u:
        *(void *)(a1 + 2984) |= 0x8000000000000000;
        uint64_t v946 = *v3;
        unint64_t v947 = *(void *)(a2 + v946);
        if (v947 <= 0xFFFFFFFFFFFFFFF7 && v947 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v947);
          *(void *)(a2 + v946) = v947 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1536;
        goto LABEL_2418;
      case 0x167u:
        *(void *)(a1 + 2984) |= 0x800uLL;
        uint64_t v948 = *v3;
        unint64_t v949 = *(void *)(a2 + v948);
        if (v949 <= 0xFFFFFFFFFFFFFFF7 && v949 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v949);
          *(void *)(a2 + v948) = v949 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1120;
        goto LABEL_2418;
      case 0x168u:
        *(void *)(a1 + 2984) |= 0x1000uLL;
        uint64_t v950 = *v3;
        unint64_t v951 = *(void *)(a2 + v950);
        if (v951 <= 0xFFFFFFFFFFFFFFF7 && v951 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v951);
          *(void *)(a2 + v950) = v951 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1128;
        goto LABEL_2418;
      case 0x169u:
        *(void *)(a1 + 2992) |= 0x800000000000uLL;
        uint64_t v952 = *v3;
        unint64_t v953 = *(void *)(a2 + v952);
        if (v953 <= 0xFFFFFFFFFFFFFFF7 && v953 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v953);
          *(void *)(a2 + v952) = v953 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1920;
        goto LABEL_2418;
      case 0x16Au:
        *(void *)(a1 + 2992) |= 0x1000000000000uLL;
        uint64_t v954 = *v3;
        unint64_t v955 = *(void *)(a2 + v954);
        if (v955 <= 0xFFFFFFFFFFFFFFF7 && v955 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v955);
          *(void *)(a2 + v954) = v955 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 1928;
        goto LABEL_2418;
      case 0x16Bu:
        *(void *)(a1 + 3000) |= 0x4000uLL;
        uint64_t v956 = *v3;
        unint64_t v957 = *(void *)(a2 + v956);
        if (v957 <= 0xFFFFFFFFFFFFFFF7 && v957 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v957);
          *(void *)(a2 + v956) = v957 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2168;
        goto LABEL_2418;
      case 0x16Cu:
        *(void *)(a1 + 3000) |= 0x80000000uLL;
        uint64_t v958 = *v3;
        unint64_t v959 = *(void *)(a2 + v958);
        if (v959 <= 0xFFFFFFFFFFFFFFF7 && v959 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v959);
          *(void *)(a2 + v958) = v959 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2304;
        goto LABEL_2418;
      case 0x16Du:
        *(void *)(a1 + 3000) |= 0x100000000uLL;
        uint64_t v960 = *v3;
        unint64_t v961 = *(void *)(a2 + v960);
        if (v961 <= 0xFFFFFFFFFFFFFFF7 && v961 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v961);
          *(void *)(a2 + v960) = v961 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2312;
        goto LABEL_2418;
      case 0x16Eu:
        *(void *)(a1 + 3000) |= 0x20000000000uLL;
        uint64_t v962 = *v3;
        unint64_t v963 = *(void *)(a2 + v962);
        if (v963 <= 0xFFFFFFFFFFFFFFF7 && v963 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v963);
          *(void *)(a2 + v962) = v963 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2384;
        goto LABEL_2418;
      case 0x16Fu:
        *(void *)(a1 + 3000) |= 0x2000000000000uLL;
        uint64_t v964 = *v3;
        unint64_t v965 = *(void *)(a2 + v964);
        if (v965 <= 0xFFFFFFFFFFFFFFF7 && v965 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v965);
          *(void *)(a2 + v964) = v965 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2448;
        goto LABEL_2418;
      case 0x170u:
        *(void *)(a1 + 3000) |= 0x100000000000uLL;
        uint64_t v966 = *v3;
        unint64_t v967 = *(void *)(a2 + v966);
        if (v967 <= 0xFFFFFFFFFFFFFFF7 && v967 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v967);
          *(void *)(a2 + v966) = v967 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2408;
        goto LABEL_2418;
      case 0x171u:
        *(void *)(a1 + 3000) |= 0x200000000000uLL;
        uint64_t v968 = *v3;
        unint64_t v969 = *(void *)(a2 + v968);
        if (v969 <= 0xFFFFFFFFFFFFFFF7 && v969 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v969);
          *(void *)(a2 + v968) = v969 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2416;
        goto LABEL_2418;
      case 0x172u:
        *(void *)(a1 + 3000) |= 0x400000000000uLL;
        uint64_t v970 = *v3;
        unint64_t v971 = *(void *)(a2 + v970);
        if (v971 <= 0xFFFFFFFFFFFFFFF7 && v971 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v971);
          *(void *)(a2 + v970) = v971 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2424;
        goto LABEL_2418;
      case 0x173u:
        *(void *)(a1 + 3000) |= 0x1000000000uLL;
        uint64_t v972 = *v3;
        unint64_t v973 = *(void *)(a2 + v972);
        if (v973 <= 0xFFFFFFFFFFFFFFF7 && v973 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v973);
          *(void *)(a2 + v972) = v973 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2344;
        goto LABEL_2418;
      case 0x174u:
        *(void *)(a1 + 3000) |= 0x2000000000uLL;
        uint64_t v974 = *v3;
        unint64_t v975 = *(void *)(a2 + v974);
        if (v975 <= 0xFFFFFFFFFFFFFFF7 && v975 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v975);
          *(void *)(a2 + v974) = v975 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2352;
        goto LABEL_2418;
      case 0x175u:
        *(void *)(a1 + 3000) |= 0x4000000000uLL;
        uint64_t v976 = *v3;
        unint64_t v977 = *(void *)(a2 + v976);
        if (v977 <= 0xFFFFFFFFFFFFFFF7 && v977 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v977);
          *(void *)(a2 + v976) = v977 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2360;
        goto LABEL_2418;
      case 0x176u:
        *(void *)(a1 + 3000) |= 0x8000000000uLL;
        uint64_t v978 = *v3;
        unint64_t v979 = *(void *)(a2 + v978);
        if (v979 <= 0xFFFFFFFFFFFFFFF7 && v979 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v979);
          *(void *)(a2 + v978) = v979 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2368;
        goto LABEL_2418;
      case 0x177u:
        *(void *)(a1 + 3000) |= 0x10000000000uLL;
        uint64_t v980 = *v3;
        unint64_t v981 = *(void *)(a2 + v980);
        if (v981 <= 0xFFFFFFFFFFFFFFF7 && v981 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v981);
          *(void *)(a2 + v980) = v981 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2376;
        goto LABEL_2418;
      case 0x178u:
        *(void *)(a1 + 3000) |= 0x40000000000uLL;
        uint64_t v982 = *v3;
        unint64_t v983 = *(void *)(a2 + v982);
        if (v983 <= 0xFFFFFFFFFFFFFFF7 && v983 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v983);
          *(void *)(a2 + v982) = v983 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2392;
        goto LABEL_2418;
      case 0x179u:
        *(void *)(a1 + 3000) |= 0x80000000000uLL;
        uint64_t v984 = *v3;
        unint64_t v985 = *(void *)(a2 + v984);
        if (v985 <= 0xFFFFFFFFFFFFFFF7 && v985 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v985);
          *(void *)(a2 + v984) = v985 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2400;
        goto LABEL_2418;
      case 0x17Au:
        *(void *)(a1 + 3000) |= 0x800000000000uLL;
        uint64_t v986 = *v3;
        unint64_t v987 = *(void *)(a2 + v986);
        if (v987 <= 0xFFFFFFFFFFFFFFF7 && v987 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v987);
          *(void *)(a2 + v986) = v987 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2432;
        goto LABEL_2418;
      case 0x17Bu:
        *(void *)(a1 + 3000) |= 0x1000000000000uLL;
        uint64_t v988 = *v3;
        unint64_t v989 = *(void *)(a2 + v988);
        if (v989 <= 0xFFFFFFFFFFFFFFF7 && v989 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v989);
          *(void *)(a2 + v988) = v989 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2440;
        goto LABEL_2418;
      case 0x17Cu:
        *(void *)(a1 + 3000) |= 0x40000uLL;
        uint64_t v990 = *v3;
        unint64_t v991 = *(void *)(a2 + v990);
        if (v991 <= 0xFFFFFFFFFFFFFFF7 && v991 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v991);
          *(void *)(a2 + v990) = v991 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2200;
        goto LABEL_2418;
      case 0x17Du:
        *(void *)(a1 + 3000) |= 0x80000uLL;
        uint64_t v992 = *v3;
        unint64_t v993 = *(void *)(a2 + v992);
        if (v993 <= 0xFFFFFFFFFFFFFFF7 && v993 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v993);
          *(void *)(a2 + v992) = v993 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2208;
        goto LABEL_2418;
      case 0x17Eu:
        *(void *)(a1 + 3000) |= 0x100000uLL;
        uint64_t v994 = *v3;
        unint64_t v995 = *(void *)(a2 + v994);
        if (v995 <= 0xFFFFFFFFFFFFFFF7 && v995 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v995);
          *(void *)(a2 + v994) = v995 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2216;
        goto LABEL_2418;
      case 0x17Fu:
        *(void *)(a1 + 3000) |= 0x200000uLL;
        uint64_t v996 = *v3;
        unint64_t v997 = *(void *)(a2 + v996);
        if (v997 <= 0xFFFFFFFFFFFFFFF7 && v997 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v997);
          *(void *)(a2 + v996) = v997 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2224;
        goto LABEL_2418;
      case 0x180u:
        *(void *)(a1 + 3000) |= 0x4000000000000uLL;
        uint64_t v998 = *v3;
        unint64_t v999 = *(void *)(a2 + v998);
        if (v999 <= 0xFFFFFFFFFFFFFFF7 && v999 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v999);
          *(void *)(a2 + v998) = v999 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2456;
        goto LABEL_2418;
      case 0x181u:
        *(void *)(a1 + 3000) |= 0x40000000uLL;
        uint64_t v1000 = *v3;
        unint64_t v1001 = *(void *)(a2 + v1000);
        if (v1001 <= 0xFFFFFFFFFFFFFFF7 && v1001 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1001);
          *(void *)(a2 + v1000) = v1001 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2296;
        goto LABEL_2418;
      case 0x182u:
        *(void *)(a1 + 3000) |= 0x800000uLL;
        uint64_t v1002 = *v3;
        unint64_t v1003 = *(void *)(a2 + v1002);
        if (v1003 <= 0xFFFFFFFFFFFFFFF7 && v1003 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1003);
          *(void *)(a2 + v1002) = v1003 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2240;
        goto LABEL_2418;
      case 0x183u:
        *(void *)(a1 + 3000) |= 0x10000000uLL;
        uint64_t v1004 = *v3;
        unint64_t v1005 = *(void *)(a2 + v1004);
        if (v1005 <= 0xFFFFFFFFFFFFFFF7 && v1005 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1005);
          *(void *)(a2 + v1004) = v1005 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2280;
        goto LABEL_2418;
      case 0x184u:
        *(void *)(a1 + 3000) |= 0x4000000uLL;
        uint64_t v1006 = *v3;
        unint64_t v1007 = *(void *)(a2 + v1006);
        if (v1007 <= 0xFFFFFFFFFFFFFFF7 && v1007 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1007);
          *(void *)(a2 + v1006) = v1007 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2264;
        goto LABEL_2418;
      case 0x185u:
        *(void *)(a1 + 3000) |= 0x2000uLL;
        uint64_t v1008 = *v3;
        unint64_t v1009 = *(void *)(a2 + v1008);
        if (v1009 <= 0xFFFFFFFFFFFFFFF7 && v1009 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1009);
          *(void *)(a2 + v1008) = v1009 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2160;
        goto LABEL_2418;
      case 0x186u:
        *(void *)(a1 + 3000) |= 0x20000000uLL;
        uint64_t v1010 = *v3;
        unint64_t v1011 = *(void *)(a2 + v1010);
        if (v1011 <= 0xFFFFFFFFFFFFFFF7 && v1011 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1011);
          *(void *)(a2 + v1010) = v1011 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2288;
        goto LABEL_2418;
      case 0x187u:
        *(void *)(a1 + 3000) |= 0x400000uLL;
        uint64_t v1012 = *v3;
        unint64_t v1013 = *(void *)(a2 + v1012);
        if (v1013 <= 0xFFFFFFFFFFFFFFF7 && v1013 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1013);
          *(void *)(a2 + v1012) = v1013 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2232;
        goto LABEL_2418;
      case 0x188u:
        *(void *)(a1 + 3000) |= 0x8000000uLL;
        uint64_t v1014 = *v3;
        unint64_t v1015 = *(void *)(a2 + v1014);
        if (v1015 <= 0xFFFFFFFFFFFFFFF7 && v1015 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1015);
          *(void *)(a2 + v1014) = v1015 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2272;
        goto LABEL_2418;
      case 0x189u:
        *(void *)(a1 + 3000) |= 0x2000000uLL;
        uint64_t v1016 = *v3;
        unint64_t v1017 = *(void *)(a2 + v1016);
        if (v1017 <= 0xFFFFFFFFFFFFFFF7 && v1017 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1017);
          *(void *)(a2 + v1016) = v1017 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2256;
        goto LABEL_2418;
      case 0x18Au:
        *(void *)(a1 + 3000) |= 0x200000000uLL;
        uint64_t v1018 = *v3;
        unint64_t v1019 = *(void *)(a2 + v1018);
        if (v1019 <= 0xFFFFFFFFFFFFFFF7 && v1019 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1019);
          *(void *)(a2 + v1018) = v1019 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2320;
        goto LABEL_2418;
      case 0x18Bu:
        *(void *)(a1 + 3000) |= 0x400000000uLL;
        uint64_t v1020 = *v3;
        unint64_t v1021 = *(void *)(a2 + v1020);
        if (v1021 <= 0xFFFFFFFFFFFFFFF7 && v1021 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1021);
          *(void *)(a2 + v1020) = v1021 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2328;
        goto LABEL_2418;
      case 0x18Cu:
        *(void *)(a1 + 3000) |= 0x800000000uLL;
        uint64_t v1022 = *v3;
        unint64_t v1023 = *(void *)(a2 + v1022);
        if (v1023 <= 0xFFFFFFFFFFFFFFF7 && v1023 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1023);
          *(void *)(a2 + v1022) = v1023 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2336;
        goto LABEL_2418;
      case 0x18Du:
        *(void *)(a1 + 3000) |= 0x8000uLL;
        uint64_t v1024 = *v3;
        unint64_t v1025 = *(void *)(a2 + v1024);
        if (v1025 <= 0xFFFFFFFFFFFFFFF7 && v1025 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1025);
          *(void *)(a2 + v1024) = v1025 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2176;
        goto LABEL_2418;
      case 0x18Eu:
        *(void *)(a1 + 3000) |= 0x10000uLL;
        uint64_t v1026 = *v3;
        unint64_t v1027 = *(void *)(a2 + v1026);
        if (v1027 <= 0xFFFFFFFFFFFFFFF7 && v1027 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1027);
          *(void *)(a2 + v1026) = v1027 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2184;
        goto LABEL_2418;
      case 0x18Fu:
        *(void *)(a1 + 3000) |= 0x20000uLL;
        uint64_t v1028 = *v3;
        unint64_t v1029 = *(void *)(a2 + v1028);
        if (v1029 <= 0xFFFFFFFFFFFFFFF7 && v1029 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1029);
          *(void *)(a2 + v1028) = v1029 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2192;
        goto LABEL_2418;
      case 0x190u:
        *(void *)(a1 + 2968) |= 0x8000000000000uLL;
        uint64_t v1030 = *v3;
        unint64_t v1031 = *(void *)(a2 + v1030);
        if (v1031 <= 0xFFFFFFFFFFFFFFF7 && v1031 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1031);
          *(void *)(a2 + v1030) = v1031 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 416;
        goto LABEL_2418;
      case 0x191u:
        *(void *)(a1 + 3000) |= 0x1000000uLL;
        uint64_t v1032 = *v3;
        unint64_t v1033 = *(void *)(a2 + v1032);
        if (v1033 <= 0xFFFFFFFFFFFFFFF7 && v1033 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + *v7) + v1033);
          *(void *)(a2 + v1032) = v1033 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v26 = 0;
        }
        uint64_t v1038 = 2248;
LABEL_2418:
        *(void *)(a1 + v1038) = v26;
        goto LABEL_2419;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_2419;
    }
  }
}

uint64_t NTPBShareSheetIapFailReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_31;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          break;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
          goto LABEL_31;
        case 4u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
LABEL_31:
          uint64_t v26 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v23 = *v3;
        unint64_t v24 = *(void *)(a2 + v23);
        if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
        *(void *)(a2 + v23) = v24 + 1;
        v22 |= (unint64_t)(v25 & 0x7F) << v20;
        if ((v25 & 0x80) == 0) {
          goto LABEL_33;
        }
        v20 += 7;
        BOOL v14 = v21++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_35;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v22) = 0;
      }
LABEL_35:
      *(_DWORD *)(a1 + 24) = v22;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBNotificationSubscribeUnsubscribeReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 4u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_55;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_57;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_57:
          uint64_t v43 = 48;
          goto LABEL_70;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 2u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_61:
          uint64_t v43 = 44;
          goto LABEL_70;
        case 3u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 24;
          goto LABEL_46;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          *(unsigned char *)(a1 + 56) |= 8u;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  uint64_t v33 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v33 = 0;
          }
LABEL_65:
          *(unsigned char *)(a1 + 52) = v33 != 0;
          continue;
        case 5u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 8;
          goto LABEL_46;
        case 6u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 16;
          goto LABEL_46;
        case 7u:
          uint64_t v29 = PBReaderReadString();
          uint64_t v30 = 32;
LABEL_46:
          uint64_t v37 = *(void **)(a1 + v30);
          *(void *)(a1 + v30) = v29;

          continue;
        case 8u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 56) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v40 = *v3;
        unint64_t v41 = *(void *)(a2 + v40);
        if (v41 == -1 || v41 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
        *(void *)(a2 + v40) = v41 + 1;
        v19 |= (unint64_t)(v42 & 0x7F) << v38;
        if ((v42 & 0x80) == 0) {
          goto LABEL_67;
        }
        v38 += 7;
        BOOL v14 = v39++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_69;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_67:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_69:
      uint64_t v43 = 40;
LABEL_70:
      *(_DWORD *)(a1 + v43) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPrivateRecordSyncStateReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t String = (void *)PBReaderReadString();

        id v18 = String;
        uint64_t v19 = 3;
        goto LABEL_23;
      case 2u:
        unint64_t v21 = (void *)PBReaderReadString();

        id v18 = v21;
        uint64_t v19 = 4;
LABEL_23:
        a1[v19] = v18;
        goto LABEL_29;
      case 3u:
        char v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 1;
        goto LABEL_26;
      case 4u:
        char v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 2;
LABEL_26:
        a1[v23] = v22;
        if PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2))
        {
          PBReaderRecallMark();
LABEL_29:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_29;
    }
  }
}

uint64_t COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSPurchaseOffersItemReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 16) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        id v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBHeadlineAdElementReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 40;
          goto LABEL_52;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 48;
          goto LABEL_52;
        case 3u:
          unsigned int v20 = PBReaderReadString();
          if (v20) {
            [(id)a1 addArticleIAdCategories:v20];
          }
          goto LABEL_64;
        case 4u:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 92) |= 4u;
          while (2)
          {
            uint64_t v24 = *v3;
            unint64_t v25 = *(void *)(a2 + v24);
            if (v25 == -1 || v25 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
              *(void *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                BOOL v14 = v22++ >= 9;
                if (v14)
                {
                  uint64_t v23 = 0;
                  goto LABEL_68;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
LABEL_68:
          BOOL v46 = v23 != 0;
          uint64_t v47 = 89;
          goto LABEL_77;
        case 5u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          *(unsigned char *)(a1 + 92) |= 8u;
          while (2)
          {
            uint64_t v30 = *v3;
            unint64_t v31 = *(void *)(a2 + v30);
            if (v31 == -1 || v31 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v31 + 1;
              v29 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                BOOL v14 = v28++ >= 9;
                if (v14)
                {
                  uint64_t v29 = 0;
                  goto LABEL_72;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v29 = 0;
          }
LABEL_72:
          BOOL v46 = v29 != 0;
          uint64_t v47 = 90;
          goto LABEL_77;
        case 6u:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v35 = 0;
          *(unsigned char *)(a1 + 92) |= 2u;
          while (2)
          {
            uint64_t v36 = *v3;
            unint64_t v37 = *(void *)(a2 + v36);
            if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
              *(void *)(a2 + v36) = v37 + 1;
              v35 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v14 = v34++ >= 9;
                if (v14)
                {
                  uint64_t v35 = 0;
                  goto LABEL_76;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
LABEL_76:
          BOOL v46 = v35 != 0;
          uint64_t v47 = 88;
LABEL_77:
          *(unsigned char *)(a1 + v47) = v46;
          continue;
        case 7u:
          unsigned int v20 = PBReaderReadString();
          if (v20) {
            [(id)a1 addArticleIAdSectionIDs:v20];
          }
          goto LABEL_64;
        case 8u:
          unsigned int v20 = PBReaderReadString();
          if (v20) {
            [(id)a1 addChannelIAdKeywords:v20];
          }
          goto LABEL_64;
        case 9u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 72;
          goto LABEL_52;
        case 0xAu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 80;
LABEL_52:
          unsigned int v39 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        case 0xBu:
          unsigned int v20 = PBReaderReadString();
          if (v20) {
            [(id)a1 addChannelIAdCategories:v20];
          }
          goto LABEL_64;
        case 0xCu:
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v42 = 0;
          *(unsigned char *)(a1 + 92) |= 1u;
          break;
        case 0xDu:
          unsigned int v20 = PBReaderReadString();
          if (v20) {
            [(id)a1 addArticleIAdKeywords:v20];
          }
LABEL_64:

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v43 = *v3;
        unint64_t v44 = *(void *)(a2 + v43);
        if (v44 == -1 || v44 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
        *(void *)(a2 + v43) = v44 + 1;
        v42 |= (unint64_t)(v45 & 0x7F) << v40;
        if ((v45 & 0x80) == 0) {
          goto LABEL_79;
        }
        v40 += 7;
        BOOL v14 = v41++ >= 9;
        if (v14)
        {
          uint64_t v42 = 0;
          goto LABEL_81;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_79:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v42 = 0;
      }
LABEL_81:
      *(void *)(a1 + 8) = v42;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBColorPairReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v17 = &OBJC_IVAR___NTPBColorPair__dark;
LABEL_22:
        uint64_t String = (void *)PBReaderReadString();

        *(void *)(a1 + *v17) = String;
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = &OBJC_IVAR___NTPBColorPair__light;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAppSessionEndWatchReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 16) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        *(void *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBWidgetSectionsArticleCountPairReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      int v16 = v10 & 7;
      if (v15 || v16 == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        if (v16 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            while (1)
            {
              uint64_t v26 = *v3;
              unint64_t v27 = *(void *)(a2 + v26);
              if (v27 == -1 || v27 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v25 |= (unint64_t)(v28 & 0x7F) << v23;
              if (v28 < 0)
              {
                v23 += 7;
                BOOL v14 = v24++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_36;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_36:
            PBRepeatedInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            uint64_t v32 = *v3;
            unint64_t v33 = *(void *)(a2 + v32);
            if (v33 == -1 || v33 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 1;
            v31 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              BOOL v14 = v30++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_48;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_48:
          PBRepeatedInt64Add();
        }
        goto LABEL_49;
      }
      if (v18 == 1)
      {
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 32;
LABEL_23:
        unint64_t v21 = *(void **)(a1 + v20);
        *(void *)(a1 + v20) = v19;

        goto LABEL_49;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_49:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v19 = PBReaderReadString();
    uint64_t v20 = 40;
    goto LABEL_23;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTodayWidgetExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 84) |= 4u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_75;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_77;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_75:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_77:
        uint64_t v54 = 44;
        goto LABEL_98;
      case 2u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 84) |= 0x10u;
        while (2)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
            *(void *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_81:
        uint64_t v54 = 52;
        goto LABEL_98;
      case 3u:
        char v29 = objc_alloc_init(NTPBWidgetSectionsArticleCountPair);
        [(id)a1 addWidgetSectionsArticleCountPair:v29];
        if (!PBReaderPlaceMark()
          || (NTPBWidgetSectionsArticleCountPairReadFrom((uint64_t)v29, a2) & 1) == 0)
        {
          goto LABEL_101;
        }
        goto LABEL_40;
      case 4u:
        char v29 = objc_alloc_init(NTPBWidgetPersonalizationFeatureCTRPair);
        [(id)a1 addWidgetPersonalizationFeatureCTRPair:v29];
        if (PBReaderPlaceMark()
          && (NTPBWidgetPersonalizationFeatureCTRPairReadFrom((uint64_t)v29, a2) & 1) != 0)
        {
LABEL_40:
          PBReaderRecallMark();

LABEL_99:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_101:

        return 0;
      case 5u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v32 = *v3;
          unint64_t v33 = *(void *)(a2 + v32);
          if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_85:
        uint64_t v54 = 40;
        goto LABEL_98;
      case 6u:
        uint64_t v35 = PBReaderReadString();
        uint64_t v36 = 56;
        goto LABEL_73;
      case 7u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v40 = *v3;
          unint64_t v41 = *(void *)(a2 + v40);
          if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              BOOL v14 = v38++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
LABEL_89:
        *(void *)(a1 + 8) = v39;
        goto LABEL_99;
      case 8u:
        uint64_t v35 = PBReaderReadString();
        uint64_t v36 = 24;
        goto LABEL_73;
      case 9u:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 84) |= 8u;
        while (2)
        {
          uint64_t v45 = *v3;
          unint64_t v46 = *(void *)(a2 + v45);
          if (v46 == -1 || v46 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v46 + 1;
            v19 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              BOOL v14 = v44++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_93:
        uint64_t v54 = 48;
        goto LABEL_98;
      case 0xAu:
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 84) |= 0x20u;
        while (2)
        {
          uint64_t v50 = *v3;
          unint64_t v51 = *(void *)(a2 + v50);
          if (v51 == -1 || v51 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v51 + 1;
            v19 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              BOOL v14 = v49++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_97:
        uint64_t v54 = 80;
LABEL_98:
        *(_DWORD *)(a1 + v54) = v19;
        goto LABEL_99;
      case 0xBu:
        uint64_t v35 = PBReaderReadString();
        uint64_t v36 = 32;
        goto LABEL_73;
      case 0xCu:
        uint64_t v35 = PBReaderReadString();
        uint64_t v36 = 16;
LABEL_73:
        unint64_t v53 = *(void **)(a1 + v36);
        *(void *)(a1 + v36) = v35;

        goto LABEL_99;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_99;
    }
  }
}

uint64_t NTPBTodayWidgetConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 80) |= 1u;
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_72;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_74;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_72:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_74:
          uint64_t v65 = 8;
          goto LABEL_91;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 80) |= 0x10u;
          while (2)
          {
            uint64_t v28 = *v3;
            uint64_t v29 = *(void *)(a2 + v28);
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if (v31 < 0)
              {
                v25 += 7;
                BOOL v15 = v26++ >= 9;
                if (v15)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v27) = 0;
          }
LABEL_78:
          *(_DWORD *)(a1 + 72) = v27;
          continue;
        case 3u:
          *(unsigned char *)(a1 + 80) |= 2u;
          uint64_t v32 = *v3;
          unint64_t v33 = *(void *)(a2 + v32);
          if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v34 = *(void *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v34 = 0;
          }
          *(void *)(a1 + 16) = v34;
          continue;
        case 4u:
          uint64_t v35 = PBReaderReadData();
          uint64_t v36 = 64;
          goto LABEL_49;
        case 6u:
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 56;
          goto LABEL_49;
        case 7u:
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 48;
          goto LABEL_49;
        case 8u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          *(unsigned char *)(a1 + 80) |= 0x20u;
          while (2)
          {
            uint64_t v41 = *v3;
            uint64_t v42 = *(void *)(a2 + v41);
            unint64_t v43 = v42 + 1;
            if (v42 == -1 || v43 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
              *(void *)(a2 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                BOOL v15 = v39++ >= 9;
                if (v15)
                {
                  uint64_t v40 = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v40 = 0;
          }
LABEL_82:
          BOOL v66 = v40 != 0;
          uint64_t v67 = 76;
          goto LABEL_96;
        case 9u:
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 40;
LABEL_49:
          uint64_t v45 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v35;

          continue;
        case 0xAu:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 80) |= 4u;
          while (2)
          {
            uint64_t v48 = *v3;
            uint64_t v49 = *(void *)(a2 + v48);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
              *(void *)(a2 + v48) = v50;
              v20 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v15 = v47++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_86:
          uint64_t v65 = 24;
          goto LABEL_91;
        case 0xBu:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 80) |= 8u;
          while (2)
          {
            uint64_t v54 = *v3;
            uint64_t v55 = *(void *)(a2 + v54);
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v56;
              v20 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                BOOL v15 = v53++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_90:
          uint64_t v65 = 32;
LABEL_91:
          *(void *)(a1 + v65) = v20;
          continue;
        case 0xCu:
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v60 = 0;
          *(unsigned char *)(a1 + 80) |= 0x40u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v61 = *v3;
        uint64_t v62 = *(void *)(a2 + v61);
        unint64_t v63 = v62 + 1;
        if (v62 == -1 || v63 > *(void *)(a2 + *v4)) {
          break;
        }
        char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
        *(void *)(a2 + v61) = v63;
        v60 |= (unint64_t)(v64 & 0x7F) << v58;
        if ((v64 & 0x80) == 0) {
          goto LABEL_93;
        }
        v58 += 7;
        BOOL v15 = v59++ >= 9;
        if (v15)
        {
          uint64_t v60 = 0;
          goto LABEL_95;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_93:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v60 = 0;
      }
LABEL_95:
      BOOL v66 = v60 != 0;
      uint64_t v67 = 77;
LABEL_96:
      *(unsigned char *)(a1 + v67) = v66;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBDiscoverMoreInterstitialExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_44;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_46;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_46:
          uint64_t v37 = 24;
          goto LABEL_55;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 32) |= 4u;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_50:
          *(unsigned char *)(a1 + 28) = v26 != 0;
          continue;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          break;
        case 4u:
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v35;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v32 = *v3;
        unint64_t v33 = *(void *)(a2 + v32);
        if (v33 == -1 || v33 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
        *(void *)(a2 + v32) = v33 + 1;
        v19 |= (unint64_t)(v34 & 0x7F) << v30;
        if ((v34 & 0x80) == 0) {
          goto LABEL_52;
        }
        v30 += 7;
        BOOL v14 = v31++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_54;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_52:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_54:
      uint64_t v37 = 8;
LABEL_55:
      *(_DWORD *)(a1 + v37) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAVAssetKeyReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t String = (void *)PBReaderReadString();

        id v18 = String;
        uint64_t v19 = 3;
        goto LABEL_23;
      case 2u:
        Data = (void *)PBReaderReadData();

        id v18 = Data;
        uint64_t v19 = 4;
LABEL_23:
        a1[v19] = v18;
        goto LABEL_29;
      case 3u:
        char v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 1;
        goto LABEL_26;
      case 4u:
        char v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 2;
LABEL_26:
        a1[v23] = v22;
        if PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2))
        {
          PBReaderRecallMark();
LABEL_29:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_29;
    }
  }
}

uint64_t NTPBTelemetryNetworkEventReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 76) |= 0x80u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_85;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_87;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_85:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_87:
          uint64_t v65 = 64;
          goto LABEL_120;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 76) |= 2u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_91:
          uint64_t v65 = 16;
          goto LABEL_120;
        case 3u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 76) |= 1u;
          while (2)
          {
            uint64_t v31 = *v3;
            unint64_t v32 = *(void *)(a2 + v31);
            if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
              *(void *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                BOOL v14 = v30++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_95:
          uint64_t v65 = 8;
          goto LABEL_120;
        case 4u:
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 76) |= 0x10u;
          while (2)
          {
            uint64_t v36 = *v3;
            unint64_t v37 = *(void *)(a2 + v36);
            if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
              *(void *)(a2 + v36) = v37 + 1;
              v19 |= (unint64_t)(v38 & 0x7F) << v34;
              if (v38 < 0)
              {
                v34 += 7;
                BOOL v14 = v35++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_99:
          uint64_t v65 = 40;
          goto LABEL_120;
        case 5u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 76) |= 0x20u;
          while (2)
          {
            uint64_t v41 = *v3;
            unint64_t v42 = *(void *)(a2 + v41);
            if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
              *(void *)(a2 + v41) = v42 + 1;
              v19 |= (unint64_t)(v43 & 0x7F) << v39;
              if (v43 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_103:
          uint64_t v65 = 48;
          goto LABEL_120;
        case 6u:
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 76) |= 0x40u;
          while (2)
          {
            uint64_t v46 = *v3;
            unint64_t v47 = *(void *)(a2 + v46);
            if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v47 + 1;
              v19 |= (unint64_t)(v48 & 0x7F) << v44;
              if (v48 < 0)
              {
                v44 += 7;
                BOOL v14 = v45++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_107;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_107:
          uint64_t v65 = 56;
          goto LABEL_120;
        case 7u:
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v51 = 0;
          *(_WORD *)(a1 + 76) |= 0x100u;
          while (2)
          {
            uint64_t v52 = *v3;
            unint64_t v53 = *(void *)(a2 + v52);
            if (v53 == -1 || v53 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
              *(void *)(a2 + v52) = v53 + 1;
              v51 |= (unint64_t)(v54 & 0x7F) << v49;
              if (v54 < 0)
              {
                v49 += 7;
                BOOL v14 = v50++ >= 9;
                if (v14)
                {
                  LODWORD(v51) = 0;
                  goto LABEL_111;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v51) = 0;
          }
LABEL_111:
          *(_DWORD *)(a1 + 72) = v51;
          continue;
        case 8u:
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 76) |= 8u;
          while (2)
          {
            uint64_t v57 = *v3;
            unint64_t v58 = *(void *)(a2 + v57);
            if (v58 == -1 || v58 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v58);
              *(void *)(a2 + v57) = v58 + 1;
              v19 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                BOOL v14 = v56++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_115;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_115:
          uint64_t v65 = 32;
          goto LABEL_120;
        case 9u:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 76) |= 4u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v62 = *v3;
        unint64_t v63 = *(void *)(a2 + v62);
        if (v63 == -1 || v63 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
        *(void *)(a2 + v62) = v63 + 1;
        v19 |= (unint64_t)(v64 & 0x7F) << v60;
        if ((v64 & 0x80) == 0) {
          goto LABEL_117;
        }
        v60 += 7;
        BOOL v14 = v61++ >= 9;
        if (v14)
        {
          uint64_t v19 = 0;
          goto LABEL_119;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_117:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v19 = 0;
      }
LABEL_119:
      uint64_t v65 = 24;
LABEL_120:
      *(void *)(a1 + v65) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBBucketGroupConfigResponseReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(NTPBBucketGroupConfig);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark() || (NTPBBucketGroupConfigReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_30;
        }
LABEL_25:
        PBReaderRecallMark();

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(NTPBBloomFilterInfo);
    objc_storeStrong((id *)(a1 + 16), v17);
    if (!PBReaderPlaceMark() || (NTPBBloomFilterInfoReadFrom((uint64_t)v17, a2) & 1) == 0)
    {
LABEL_30:

      return 0;
    }
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleFeedbackReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
          goto LABEL_25;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
          goto LABEL_25;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 40;
          goto LABEL_25;
        case 4u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 24;
LABEL_25:
          uint64_t v20 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        case 5u:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 48) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v24 = *v3;
        unint64_t v25 = *(void *)(a2 + v24);
        if (v25 == -1 || v25 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
        *(void *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0) {
          goto LABEL_34;
        }
        v21 += 7;
        BOOL v14 = v22++ >= 9;
        if (v14)
        {
          LODWORD(v23) = 0;
          goto LABEL_36;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v23) = 0;
      }
LABEL_36:
      *(_DWORD *)(a1 + 16) = v23;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAnfComponentExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 48;
        goto LABEL_52;
      case 2u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 112;
        goto LABEL_52;
      case 3u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 40;
        goto LABEL_52;
      case 4u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 24;
        goto LABEL_52;
      case 5u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 32;
        goto LABEL_52;
      case 6u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 104;
        goto LABEL_52;
      case 7u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 56;
        goto LABEL_52;
      case 8u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 120) |= 2u;
        while (2)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v14 = v21++ >= 9;
              if (v14)
              {
                uint64_t v22 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_59:
        uint64_t v33 = 16;
        goto LABEL_64;
      case 9u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 120) |= 1u;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v22 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v22 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_63:
        uint64_t v33 = 8;
LABEL_64:
        *(void *)(a1 + v33) = v22;
        goto LABEL_65;
      case 0xAu:
        uint64_t v31 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 80), v31);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v31, a2) & 1) == 0) {
          goto LABEL_67;
        }
        goto LABEL_55;
      case 0xBu:
        uint64_t v31 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 88), v31);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v31, a2) & 1) == 0) {
          goto LABEL_67;
        }
        goto LABEL_55;
      case 0xCu:
        uint64_t v31 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 96), v31);
        if (!PBReaderPlaceMark() || (NTPBIssueViewDataReadFrom((uint64_t)v31, a2) & 1) == 0) {
          goto LABEL_67;
        }
        goto LABEL_55;
      case 0xDu:
        uint64_t v17 = PBReaderReadData();
        uint64_t v18 = 64;
LABEL_52:
        unint64_t v32 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_65;
      case 0xEu:
        uint64_t v31 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        [(id)a1 addFractionalCohortMembership:v31];
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v31, a2) & 1) != 0)
        {
LABEL_55:
          PBReaderRecallMark();

LABEL_65:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_67:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_65;
    }
  }
}

uint64_t NTPBShareSheetExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_39;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_41;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_41:
          uint64_t v32 = 16;
          goto LABEL_46;
        case 2u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 8;
          goto LABEL_30;
        case 3u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 24;
LABEL_30:
          char v26 = *(void **)(a1 + v25);
          *(void *)(a1 + v25) = v24;

          continue;
        case 4u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 36) |= 2u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
        *(void *)(a2 + v29) = v30 + 1;
        v19 |= (unint64_t)(v31 & 0x7F) << v27;
        if ((v31 & 0x80) == 0) {
          goto LABEL_43;
        }
        v27 += 7;
        BOOL v14 = v28++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_45;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_45:
      uint64_t v32 = 32;
LABEL_46:
      *(_DWORD *)(a1 + v32) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagExpirationReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            uint64_t v21 = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_33:
        *(void *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        unsigned int v18 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBRelativePersonalizedSectionPresenceConfigReadFrom(void *a1, void *a2)
{
  v3 = a1;
  v4 = a2;
  v5 = (int *)MEMORY[0x263F62298];
  v6 = (int *)MEMORY[0x263F62288];
  int v7 = (int *)MEMORY[0x263F62270];
  if (*(void *)&v4[*MEMORY[0x263F62298]] < *(void *)&v4[*MEMORY[0x263F62288]])
  {
    char v8 = (int *)MEMORY[0x263F62268];
    do
    {
      if (v4[*v7]) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v5;
        uint64_t v13 = *(void *)&v4[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v4[*v6]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v4[*v8] + v13);
        *(void *)&v4[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          int v17 = v4[*v7];
          goto LABEL_14;
        }
      }
      v4[*v7] = 1;
LABEL_12:
      int v17 = v4[*v7];
      if (v4[*v7]) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v17 || (v11 & 7) == 4) {
        break;
      }
      if ((v11 >> 3) == 1)
      {
        v3[16] |= 1u;
        uint64_t v19 = *v5;
        unint64_t v20 = *(void *)&v4[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)&v4[*v6])
        {
          uint64_t v21 = *(void *)(*(void *)&v4[*v8] + v20);
          *(void *)&v4[v19] = v20 + 8;
        }
        else
        {
          v4[*v7] = 1;
          uint64_t v21 = 0;
        }
        *((void *)v3 + 1) = v21;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        BOOL v23 = 0;
        goto LABEL_28;
      }
    }
    while (*(void *)&v4[*v5] < *(void *)&v4[*v6]);
  }
  BOOL v23 = v4[*v7] == 0;
LABEL_28:

  return v23;
}

uint64_t NTPBIssueViewDataReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        unsigned int v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBUserOnboardingScreenViewReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 60) |= 4u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_68;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_70;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_68:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_70:
          uint64_t v53 = 16;
          goto LABEL_91;
        case 2u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 24;
          goto LABEL_31;
        case 3u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 32;
          goto LABEL_31;
        case 4u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 48;
LABEL_31:
          char v26 = *(void **)(a1 + v25);
          *(void *)(a1 + v25) = v24;

          continue;
        case 5u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 60) |= 0x10u;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v19 |= (unint64_t)(v31 & 0x7F) << v27;
              if (v31 < 0)
              {
                v27 += 7;
                BOOL v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_74:
          uint64_t v53 = 40;
          goto LABEL_91;
        case 6u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 60) |= 2u;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v19 |= (unint64_t)(v36 & 0x7F) << v32;
              if (v36 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_78:
          uint64_t v53 = 12;
          goto LABEL_91;
        case 7u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 60) |= 8u;
          while (2)
          {
            uint64_t v39 = *v3;
            unint64_t v40 = *(void *)(a2 + v39);
            if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
              *(void *)(a2 + v39) = v40 + 1;
              v19 |= (unint64_t)(v41 & 0x7F) << v37;
              if (v41 < 0)
              {
                v37 += 7;
                BOOL v14 = v38++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_82:
          uint64_t v53 = 20;
          goto LABEL_91;
        case 8u:
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v44 = 0;
          *(unsigned char *)(a1 + 60) |= 0x20u;
          while (2)
          {
            uint64_t v45 = *v3;
            unint64_t v46 = *(void *)(a2 + v45);
            if (v46 == -1 || v46 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
              *(void *)(a2 + v45) = v46 + 1;
              v44 |= (unint64_t)(v47 & 0x7F) << v42;
              if (v47 < 0)
              {
                v42 += 7;
                BOOL v14 = v43++ >= 9;
                if (v14)
                {
                  uint64_t v44 = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v44 = 0;
          }
LABEL_86:
          *(unsigned char *)(a1 + 56) = v44 != 0;
          continue;
        case 9u:
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 60) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v50 = *v3;
        unint64_t v51 = *(void *)(a2 + v50);
        if (v51 == -1 || v51 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
        *(void *)(a2 + v50) = v51 + 1;
        v19 |= (unint64_t)(v52 & 0x7F) << v48;
        if ((v52 & 0x80) == 0) {
          goto LABEL_88;
        }
        v48 += 7;
        BOOL v14 = v49++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_90;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_88:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_90:
      uint64_t v53 = 8;
LABEL_91:
      *(_DWORD *)(a1 + v53) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPersonalizationChangeGroupReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 32) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_35;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            uint64_t v21 = 0;
            goto LABEL_37;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_37:
        *(void *)(a1 + 8) = v21;
      }
      else if (v17 == 1)
      {
        uint64_t String = (void *)PBReaderReadString();

        *(void *)(a1 + 24) = String;
      }
      else if (v17)
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
      else
      {
        unsigned int v18 = objc_alloc_init(NTPBPersonalizationAggregateDelta);
        [(id)a1 addDeltas:v18];

        if (!PBReaderPlaceMark()
          || (NTPBPersonalizationAggregateDeltaReadFrom((uint64_t)v18, a2) & 1) == 0)
        {
          return 0;
        }
        PBReaderRecallMark();
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBIssueDataReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          unsigned int v18 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v17;

          continue;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 36) |= 2u;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  uint64_t v22 = 0;
                  goto LABEL_42;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_42:
          *(unsigned char *)(a1 + 32) = v22 != 0;
          continue;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          break;
        case 4u:
          char v32 = PBReaderReadString();
          if (v32) {
            [(id)a1 addTopicIds:v32];
          }

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
        *(void *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0) {
          goto LABEL_44;
        }
        v26 += 7;
        BOOL v14 = v27++ >= 9;
        if (v14)
        {
          LODWORD(v28) = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v28) = 0;
      }
LABEL_46:
      *(_DWORD *)(a1 + 16) = v28;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBSectionDisplayDescriptorReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 48;
          goto LABEL_30;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 72;
          goto LABEL_30;
        case 6u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 40;
          goto LABEL_30;
        case 9u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
          goto LABEL_30;
        case 0xAu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_30;
        case 0xCu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 64;
          goto LABEL_30;
        case 0xDu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 56;
          goto LABEL_30;
        case 0xEu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
          goto LABEL_30;
        case 0xFu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 24;
LABEL_30:
          char v19 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          goto LABEL_31;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_31:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAppleIdSignInResultReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v24 = PBReaderReadData();
        char v25 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v24;
      }
      else
      {
        if (v17 == 2)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v20 |= (unint64_t)(v30 & 0x7F) << v26;
            if ((v30 & 0x80) == 0) {
              goto LABEL_43;
            }
            v26 += 7;
            BOOL v14 = v27++ >= 9;
            if (v14)
            {
              LODWORD(v20) = 0;
              goto LABEL_45;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v20) = 0;
          }
LABEL_45:
          uint64_t v32 = 8;
        }
        else
        {
          if (v17 != 1)
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v3;
            unint64_t v22 = *(void *)(a2 + v21);
            if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0) {
              goto LABEL_39;
            }
            v18 += 7;
            BOOL v14 = v19++ >= 9;
            if (v14)
            {
              LODWORD(v20) = 0;
              goto LABEL_41;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v20) = 0;
          }
LABEL_41:
          uint64_t v32 = 12;
        }
        *(_DWORD *)(a1 + v32) = v20;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBErrorResponseReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(NTPBError);
        [a1 addErrors:v17];
        if (!PBReaderPlaceMark() || (NTPBErrorReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBScoreProfileReadFrom(uint64_t a1, unsigned char *a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)&a2[*MEMORY[0x263F62298]] >= *(void *)&a2[*MEMORY[0x263F62288]]) {
    return a2[*v5] == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (a2[*v5]) {
      return a2[*v5] == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)&a2[v11];
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)&a2[*v4]) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)&a2[*v7] + v12);
      *(void *)&a2[v11] = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = a2[*v5];
        goto LABEL_14;
      }
    }
    a2[*v5] = 1;
LABEL_12:
    int v16 = a2[*v5];
    if (a2[*v5]) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return a2[*v5] == 0;
    }
    switch((v10 >> 3))
    {
      case 0xAu:
        *(_DWORD *)(a1 + 252) |= 0x100u;
        uint64_t v18 = *v3;
        unint64_t v19 = *(void *)&a2[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v19);
          *(void *)&a2[v18] = v19 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 72;
        goto LABEL_193;
      case 0xBu:
        *(_DWORD *)(a1 + 252) |= 0x800000u;
        uint64_t v23 = *v3;
        unint64_t v24 = *(void *)&a2[v23];
        if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v24);
          *(void *)&a2[v23] = v24 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 192;
        goto LABEL_193;
      case 0xCu:
        *(_DWORD *)(a1 + 252) |= 0x800u;
        uint64_t v25 = *v3;
        unint64_t v26 = *(void *)&a2[v25];
        if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v26);
          *(void *)&a2[v25] = v26 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 96;
        goto LABEL_193;
      case 0xDu:
        *(_DWORD *)(a1 + 252) |= 2u;
        uint64_t v27 = *v3;
        unint64_t v28 = *(void *)&a2[v27];
        if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v28);
          *(void *)&a2[v27] = v28 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 16;
        goto LABEL_193;
      case 0xEu:
        *(_DWORD *)(a1 + 252) |= 4u;
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)&a2[v29];
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v30);
          *(void *)&a2[v29] = v30 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 24;
        goto LABEL_193;
      case 0xFu:
        *(_DWORD *)(a1 + 252) |= 0x2000000u;
        uint64_t v31 = *v3;
        unint64_t v32 = *(void *)&a2[v31];
        if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v32);
          *(void *)&a2[v31] = v32 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 208;
        goto LABEL_193;
      case 0x10u:
        *(_DWORD *)(a1 + 252) |= 0x20000u;
        uint64_t v33 = *v3;
        unint64_t v34 = *(void *)&a2[v33];
        if (v34 <= 0xFFFFFFFFFFFFFFF7 && v34 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v34);
          *(void *)&a2[v33] = v34 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 144;
        goto LABEL_193;
      case 0x11u:
        *(_DWORD *)(a1 + 252) |= 0x10000u;
        uint64_t v35 = *v3;
        unint64_t v36 = *(void *)&a2[v35];
        if (v36 <= 0xFFFFFFFFFFFFFFF7 && v36 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v36);
          *(void *)&a2[v35] = v36 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 136;
        goto LABEL_193;
      case 0x12u:
        *(_DWORD *)(a1 + 252) |= 0x1000u;
        uint64_t v37 = *v3;
        unint64_t v38 = *(void *)&a2[v37];
        if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v38);
          *(void *)&a2[v37] = v38 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 104;
        goto LABEL_193;
      case 0x13u:
      case 0x15u:
        goto LABEL_26;
      case 0x14u:
        *(_DWORD *)(a1 + 252) |= 1u;
        uint64_t v39 = *v3;
        unint64_t v40 = *(void *)&a2[v39];
        if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v40);
          *(void *)&a2[v39] = v40 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 8;
        goto LABEL_193;
      case 0x16u:
        *(_DWORD *)(a1 + 252) |= 0x10u;
        uint64_t v41 = *v3;
        unint64_t v42 = *(void *)&a2[v41];
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v42);
          *(void *)&a2[v41] = v42 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 40;
        goto LABEL_193;
      case 0x17u:
        *(_DWORD *)(a1 + 252) |= 0x20u;
        uint64_t v43 = *v3;
        unint64_t v44 = *(void *)&a2[v43];
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v44);
          *(void *)&a2[v43] = v44 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 48;
        goto LABEL_193;
      case 0x18u:
        *(_DWORD *)(a1 + 252) |= 0x400000u;
        uint64_t v45 = *v3;
        unint64_t v46 = *(void *)&a2[v45];
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v46);
          *(void *)&a2[v45] = v46 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 184;
        goto LABEL_193;
      case 0x19u:
        *(_DWORD *)(a1 + 252) |= 0x8000u;
        uint64_t v47 = *v3;
        unint64_t v48 = *(void *)&a2[v47];
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v48);
          *(void *)&a2[v47] = v48 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 128;
        goto LABEL_193;
      case 0x1Au:
        unsigned int v49 = objc_alloc_init(NTPBCohortMembership);
        [(id)a1 addCohortMemberships:v49];

        if PBReaderPlaceMark() && (NTPBCohortMembershipReadFrom((uint64_t)v49, (uint64_t)a2)) {
          goto LABEL_69;
        }
        return 0;
      case 0x1Bu:
        *(_DWORD *)(a1 + 252) |= 0x80u;
        uint64_t v50 = *v3;
        unint64_t v51 = *(void *)&a2[v50];
        if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v51);
          *(void *)&a2[v50] = v51 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 64;
        goto LABEL_193;
      case 0x1Cu:
        *(_DWORD *)(a1 + 252) |= 0x2000u;
        uint64_t v52 = *v3;
        unint64_t v53 = *(void *)&a2[v52];
        if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v53);
          *(void *)&a2[v52] = v53 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 112;
        goto LABEL_193;
      case 0x1Du:
        *(_DWORD *)(a1 + 252) |= 0x1000000u;
        uint64_t v54 = *v3;
        unint64_t v55 = *(void *)&a2[v54];
        if (v55 <= 0xFFFFFFFFFFFFFFF7 && v55 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v55);
          *(void *)&a2[v54] = v55 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 200;
        goto LABEL_193;
      case 0x1Eu:
        *(_DWORD *)(a1 + 252) |= 0x4000u;
        uint64_t v56 = *v3;
        unint64_t v57 = *(void *)&a2[v56];
        if (v57 <= 0xFFFFFFFFFFFFFFF7 && v57 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v57);
          *(void *)&a2[v56] = v57 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 120;
        goto LABEL_193;
      case 0x1Fu:
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v60 = 0;
        *(_DWORD *)(a1 + 252) |= 0x8000000u;
        while (2)
        {
          uint64_t v61 = *v3;
          uint64_t v62 = *(void *)&a2[v61];
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)&a2[*v7] + v62);
            *(void *)&a2[v61] = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              BOOL v15 = v59++ >= 9;
              if (v15)
              {
                uint64_t v60 = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v60 = 0;
        }
LABEL_133:
        BOOL v95 = v60 != 0;
        uint64_t v96 = 249;
        goto LABEL_142;
      case 0x20u:
        uint64_t v65 = objc_alloc_init(NTPBScoringCohort);

        *(void *)(a1 + 240) = v65;
        if (!PBReaderPlaceMark() || (NTPBScoringCohortReadFrom((uint64_t)v65, (uint64_t)a2) & 1) == 0) {
          return 0;
        }
        goto LABEL_69;
      case 0x21u:
        BOOL v66 = objc_alloc_init(NTPBCoefficients);

        *(void *)(a1 + 216) = v66;
        if (PBReaderPlaceMark() && NTPBCoefficientsReadFrom(v66, a2)) {
          goto LABEL_69;
        }
        return 0;
      case 0x22u:
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v69 = 0;
        *(_DWORD *)(a1 + 252) |= 0x40000u;
        while (2)
        {
          uint64_t v70 = *v3;
          uint64_t v71 = *(void *)&a2[v70];
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)&a2[*v7] + v71);
            *(void *)&a2[v70] = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              BOOL v15 = v68++ >= 9;
              if (v15)
              {
                uint64_t v69 = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v69 = 0;
        }
LABEL_137:
        *(void *)(a1 + 152) = v69;
        goto LABEL_194;
      case 0x23u:
        *(_DWORD *)(a1 + 252) |= 0x200000u;
        uint64_t v74 = *v3;
        unint64_t v75 = *(void *)&a2[v74];
        if (v75 <= 0xFFFFFFFFFFFFFFF7 && v75 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v75);
          *(void *)&a2[v74] = v75 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 176;
        goto LABEL_193;
      case 0x24u:
        *(_DWORD *)(a1 + 252) |= 0x100000u;
        uint64_t v76 = *v3;
        unint64_t v77 = *(void *)&a2[v76];
        if (v77 <= 0xFFFFFFFFFFFFFFF7 && v77 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v77);
          *(void *)&a2[v76] = v77 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 168;
        goto LABEL_193;
      case 0x25u:
        *(_DWORD *)(a1 + 252) |= 0x200u;
        uint64_t v78 = *v3;
        unint64_t v79 = *(void *)&a2[v78];
        if (v79 <= 0xFFFFFFFFFFFFFFF7 && v79 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v79);
          *(void *)&a2[v78] = v79 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 80;
        goto LABEL_193;
      case 0x26u:
        *(_DWORD *)(a1 + 252) |= 0x40u;
        uint64_t v80 = *v3;
        unint64_t v81 = *(void *)&a2[v80];
        if (v81 <= 0xFFFFFFFFFFFFFFF7 && v81 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v81);
          *(void *)&a2[v80] = v81 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 56;
        goto LABEL_193;
      case 0x27u:
        *(_DWORD *)(a1 + 252) |= 0x400u;
        uint64_t v82 = *v3;
        unint64_t v83 = *(void *)&a2[v82];
        if (v83 <= 0xFFFFFFFFFFFFFFF7 && v83 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v83);
          *(void *)&a2[v82] = v83 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 88;
        goto LABEL_193;
      case 0x28u:
        *(_DWORD *)(a1 + 252) |= 8u;
        uint64_t v84 = *v3;
        unint64_t v85 = *(void *)&a2[v84];
        if (v85 <= 0xFFFFFFFFFFFFFFF7 && v85 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v85);
          *(void *)&a2[v84] = v85 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 32;
        goto LABEL_193;
      case 0x29u:
        *(_DWORD *)(a1 + 252) |= 0x80000u;
        uint64_t v86 = *v3;
        unint64_t v87 = *(void *)&a2[v86];
        if (v87 <= 0xFFFFFFFFFFFFFFF7 && v87 + 8 <= *(void *)&a2[*v4])
        {
          uint64_t v20 = *(void *)(*(void *)&a2[*v7] + v87);
          *(void *)&a2[v86] = v87 + 8;
        }
        else
        {
          a2[*v5] = 1;
          uint64_t v20 = 0;
        }
        uint64_t v97 = 160;
LABEL_193:
        *(void *)(a1 + v97) = v20;
        goto LABEL_194;
      case 0x2Au:
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v90 = 0;
        *(_DWORD *)(a1 + 252) |= 0x4000000u;
        while (2)
        {
          uint64_t v91 = *v3;
          uint64_t v92 = *(void *)&a2[v91];
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)&a2[*v7] + v92);
            *(void *)&a2[v91] = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              BOOL v15 = v89++ >= 9;
              if (v15)
              {
                uint64_t v90 = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5]) {
          uint64_t v90 = 0;
        }
LABEL_141:
        BOOL v95 = v90 != 0;
        uint64_t v96 = 248;
LABEL_142:
        *(unsigned char *)(a1 + v96) = v95;
        goto LABEL_194;
      default:
        if ((v10 >> 3) != 100)
        {
LABEL_26:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          goto LABEL_194;
        }
        uint64_t v21 = objc_alloc_init(NTPBScoreProfileDebug);

        *(void *)(a1 + 232) = v21;
        if PBReaderPlaceMark() && (NTPBScoreProfileDebugReadFrom((uint64_t)v21, (uint64_t)a2))
        {
LABEL_69:
          PBReaderRecallMark();
LABEL_194:
          if (*(void *)&a2[*v3] >= *(void *)&a2[*v4]) {
            return a2[*v5] == 0;
          }
          continue;
        }
        return 0;
    }
  }
}

uint64_t NTPBReadingListShowReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 12) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_31:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBEnvelopeReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_53;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_55;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_55:
          uint64_t v42 = 28;
          goto LABEL_68;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_59:
          uint64_t v42 = 16;
          goto LABEL_68;
        case 3u:
          uint64_t v29 = PBReaderReadData();
          uint64_t v30 = 8;
          goto LABEL_51;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_63:
          uint64_t v42 = 20;
          goto LABEL_68;
        case 5u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          break;
        case 6u:
          uint64_t v29 = PBReaderReadData();
          uint64_t v30 = 32;
LABEL_51:
          uint64_t v41 = *(void **)(a1 + v30);
          *(void *)(a1 + v30) = v29;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v38 = *v3;
        unint64_t v39 = *(void *)(a2 + v38);
        if (v39 == -1 || v39 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
        *(void *)(a2 + v38) = v39 + 1;
        v19 |= (unint64_t)(v40 & 0x7F) << v36;
        if ((v40 & 0x80) == 0) {
          goto LABEL_65;
        }
        v36 += 7;
        BOOL v14 = v37++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_67;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_65:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_67:
      uint64_t v42 = 24;
LABEL_68:
      *(_DWORD *)(a1 + v42) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAudioPlaylistItemReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t String = (void *)PBReaderReadString();

        id v18 = String;
        uint64_t v19 = 32;
        goto LABEL_23;
      case 2u:
        unint64_t v21 = (void *)PBReaderReadString();

        id v18 = v21;
        uint64_t v19 = 16;
LABEL_23:
        *(void *)(a1 + v19) = v18;
        goto LABEL_38;
      case 3u:
        char v22 = objc_alloc_init(NTPBDate);

        *(void *)(a1 + 24) = v22;
        if PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2))
        {
          PBReaderRecallMark();
LABEL_38:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      case 4u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        *(unsigned char *)(a1 + 40) |= 1u;
        while (2)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
            *(void *)(a2 + v26) = v27 + 1;
            v25 |= (unint64_t)(v28 & 0x7F) << v23;
            if (v28 < 0)
            {
              v23 += 7;
              BOOL v14 = v24++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_37;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
LABEL_37:
        *(void *)(a1 + 8) = v25;
        goto LABEL_38;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_38;
    }
  }
}

BOOL NTPBPaidSubscriptionSheetIapFailReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 8;
        goto LABEL_24;
      }
      if (v17 == 1)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 16;
LABEL_24:
        uint64_t v20 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v18 = PBReaderReadString();
    uint64_t v19 = 24;
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSWidgetEngagementReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x80u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_123;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_125;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_123:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_125:
          uint64_t v84 = 128;
          goto LABEL_170;
        case 2u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 16;
          goto LABEL_121;
        case 3u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 72;
          goto LABEL_121;
        case 4u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 144;
          goto LABEL_121;
        case 5u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x200u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v19 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_129;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_129:
          uint64_t v84 = 136;
          goto LABEL_170;
        case 6u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x10u;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_133;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_133:
          uint64_t v84 = 108;
          goto LABEL_170;
        case 7u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 8u;
          while (2)
          {
            uint64_t v38 = *v3;
            unint64_t v39 = *(void *)(a2 + v38);
            if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_137;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_137:
          uint64_t v84 = 104;
          goto LABEL_170;
        case 8u:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 2u;
          while (2)
          {
            uint64_t v43 = *v3;
            unint64_t v44 = *(void *)(a2 + v43);
            if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
              *(void *)(a2 + v43) = v44 + 1;
              v19 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                BOOL v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_141;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_141:
          uint64_t v84 = 96;
          goto LABEL_170;
        case 9u:
          unint64_t v46 = PBReaderReadString();
          if (v46) {
            [(id)a1 addOtherVisibleSections:v46];
          }

          continue;
        case 0xAu:
          uint64_t v24 = PBReaderReadData();
          uint64_t v25 = 24;
          goto LABEL_121;
        case 0xBu:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x800u;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v19 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                BOOL v14 = v48++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_145:
          uint64_t v84 = 176;
          goto LABEL_170;
        case 0xCu:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 4u;
          while (2)
          {
            uint64_t v54 = *v3;
            unint64_t v55 = *(void *)(a2 + v54);
            if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v55 + 1;
              v19 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                BOOL v14 = v53++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_149:
          uint64_t v84 = 100;
          goto LABEL_170;
        case 0xDu:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 168;
          goto LABEL_121;
        case 0xEu:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x20u;
          while (2)
          {
            uint64_t v59 = *v3;
            unint64_t v60 = *(void *)(a2 + v59);
            if (v60 == -1 || v60 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
              *(void *)(a2 + v59) = v60 + 1;
              v19 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                BOOL v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_153:
          uint64_t v84 = 120;
          goto LABEL_170;
        case 0xFu:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 88;
          goto LABEL_121;
        case 0x10u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 48;
          goto LABEL_121;
        case 0x11u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 32;
          goto LABEL_121;
        case 0x12u:
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v64 = 0;
          *(_WORD *)(a1 + 180) |= 1u;
          while (2)
          {
            uint64_t v65 = *v3;
            unint64_t v66 = *(void *)(a2 + v65);
            if (v66 == -1 || v66 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
              *(void *)(a2 + v65) = v66 + 1;
              v64 |= (unint64_t)(v67 & 0x7F) << v62;
              if (v67 < 0)
              {
                v62 += 7;
                BOOL v14 = v63++ >= 9;
                if (v14)
                {
                  uint64_t v64 = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v64 = 0;
          }
LABEL_157:
          *(void *)(a1 + 8) = v64;
          continue;
        case 0x13u:
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x40u;
          while (2)
          {
            uint64_t v70 = *v3;
            unint64_t v71 = *(void *)(a2 + v70);
            if (v71 == -1 || v71 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
              *(void *)(a2 + v70) = v71 + 1;
              v19 |= (unint64_t)(v72 & 0x7F) << v68;
              if (v72 < 0)
              {
                v68 += 7;
                BOOL v14 = v69++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_161;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_161:
          uint64_t v84 = 124;
          goto LABEL_170;
        case 0x14u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 112;
          goto LABEL_121;
        case 0x15u:
          char v73 = 0;
          unsigned int v74 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x100u;
          while (2)
          {
            uint64_t v75 = *v3;
            unint64_t v76 = *(void *)(a2 + v75);
            if (v76 == -1 || v76 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
              *(void *)(a2 + v75) = v76 + 1;
              v19 |= (unint64_t)(v77 & 0x7F) << v73;
              if (v77 < 0)
              {
                v73 += 7;
                BOOL v14 = v74++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_165;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_165:
          uint64_t v84 = 132;
          goto LABEL_170;
        case 0x16u:
          char v78 = 0;
          unsigned int v79 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x400u;
          break;
        case 0x17u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 152;
          goto LABEL_121;
        case 0x18u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 80;
          goto LABEL_121;
        case 0x19u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 40;
          goto LABEL_121;
        case 0x1Au:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 56;
LABEL_121:
          unint64_t v83 = *(void **)(a1 + v25);
          *(void *)(a1 + v25) = v24;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v80 = *v3;
        unint64_t v81 = *(void *)(a2 + v80);
        if (v81 == -1 || v81 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v82 = *(unsigned char *)(*(void *)(a2 + *v7) + v81);
        *(void *)(a2 + v80) = v81 + 1;
        v19 |= (unint64_t)(v82 & 0x7F) << v78;
        if ((v82 & 0x80) == 0) {
          goto LABEL_167;
        }
        v78 += 7;
        BOOL v14 = v79++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_169;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_167:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_169:
      uint64_t v84 = 160;
LABEL_170:
      *(_DWORD *)(a1 + v84) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBSubscriptionDetectionScreenViewReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 12) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_31:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBWrappingKeyRequestReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = PBReaderReadData();
        if (v17) {
          [a1 addWrappingKeyIds:v17];
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBLRUCacheReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(NTPBLRUCacheEntry);
        [a1 addEntries:v17];

        if (!PBReaderPlaceMark() || (NTPBLRUCacheEntryReadFrom((uint64_t)v17, a2) & 1) == 0) {
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleInfoListResponseReadFrom(unsigned char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v23 = objc_alloc_init(NTPBArticleInfoList);
        [a1 addArticleInfoList:v23];
        if (!PBReaderPlaceMark() || !NTPBArticleInfoListReadFrom(v23, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_35:
        a1[16] = v19 != 0;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBWidgetConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x4000u;
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_182;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_184;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_182:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_184:
          uint64_t v158 = 120;
          goto LABEL_261;
        case 2u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x40u;
          while (2)
          {
            uint64_t v28 = *v3;
            uint64_t v29 = *(void *)(a2 + v28);
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v30;
              v20 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v15 = v27++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_188;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_188:
          uint64_t v158 = 56;
          goto LABEL_261;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x80000u;
          while (2)
          {
            uint64_t v34 = *v3;
            uint64_t v35 = *(void *)(a2 + v34);
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v36;
              v20 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v15 = v33++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_192;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_192:
          uint64_t v158 = 160;
          goto LABEL_261;
        case 4u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          *(_DWORD *)(a1 + 212) |= 0x800000u;
          while (2)
          {
            uint64_t v41 = *v3;
            uint64_t v42 = *(void *)(a2 + v41);
            unint64_t v43 = v42 + 1;
            if (v42 == -1 || v43 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
              *(void *)(a2 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                BOOL v15 = v39++ >= 9;
                if (v15)
                {
                  LODWORD(v40) = 0;
                  goto LABEL_196;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v40) = 0;
          }
LABEL_196:
          uint64_t v159 = 192;
          goto LABEL_268;
        case 5u:
          *(_DWORD *)(a1 + 212) |= 0x800u;
          uint64_t v45 = *v3;
          unint64_t v46 = *(void *)(a2 + v45);
          if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v47 = *(void *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v46 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v47 = 0;
          }
          uint64_t v160 = 96;
          goto LABEL_277;
        case 6u:
          *(_DWORD *)(a1 + 212) |= 0x400u;
          uint64_t v48 = *v3;
          unint64_t v49 = *(void *)(a2 + v48);
          if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v47 = *(void *)(*(void *)(a2 + *v7) + v49);
            *(void *)(a2 + v48) = v49 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v47 = 0;
          }
          uint64_t v160 = 88;
          goto LABEL_277;
        case 7u:
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x100u;
          while (2)
          {
            uint64_t v52 = *v3;
            uint64_t v53 = *(void *)(a2 + v52);
            unint64_t v54 = v53 + 1;
            if (v53 == -1 || v54 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
              *(void *)(a2 + v52) = v54;
              v20 |= (unint64_t)(v55 & 0x7F) << v50;
              if (v55 < 0)
              {
                v50 += 7;
                BOOL v15 = v51++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_200;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_200:
          uint64_t v158 = 72;
          goto LABEL_261;
        case 8u:
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x10u;
          while (2)
          {
            uint64_t v58 = *v3;
            uint64_t v59 = *(void *)(a2 + v58);
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v59);
              *(void *)(a2 + v58) = v60;
              v20 |= (unint64_t)(v61 & 0x7F) << v56;
              if (v61 < 0)
              {
                v56 += 7;
                BOOL v15 = v57++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_204;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_204:
          uint64_t v158 = 40;
          goto LABEL_261;
        case 9u:
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x8000u;
          while (2)
          {
            uint64_t v64 = *v3;
            uint64_t v65 = *(void *)(a2 + v64);
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
              *(void *)(a2 + v64) = v66;
              v20 |= (unint64_t)(v67 & 0x7F) << v62;
              if (v67 < 0)
              {
                v62 += 7;
                BOOL v15 = v63++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_208;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_208:
          uint64_t v158 = 128;
          goto LABEL_261;
        case 0xAu:
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x2000u;
          while (2)
          {
            uint64_t v70 = *v3;
            uint64_t v71 = *(void *)(a2 + v70);
            unint64_t v72 = v71 + 1;
            if (v71 == -1 || v72 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v73 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
              *(void *)(a2 + v70) = v72;
              v20 |= (unint64_t)(v73 & 0x7F) << v68;
              if (v73 < 0)
              {
                v68 += 7;
                BOOL v15 = v69++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_212;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_212:
          uint64_t v158 = 112;
          goto LABEL_261;
        case 0xBu:
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x80u;
          while (2)
          {
            uint64_t v76 = *v3;
            uint64_t v77 = *(void *)(a2 + v76);
            unint64_t v78 = v77 + 1;
            if (v77 == -1 || v78 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
              *(void *)(a2 + v76) = v78;
              v20 |= (unint64_t)(v79 & 0x7F) << v74;
              if (v79 < 0)
              {
                v74 += 7;
                BOOL v15 = v75++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_216;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_216:
          uint64_t v158 = 64;
          goto LABEL_261;
        case 0xCu:
          char v80 = 0;
          unsigned int v81 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x20u;
          while (2)
          {
            uint64_t v82 = *v3;
            uint64_t v83 = *(void *)(a2 + v82);
            unint64_t v84 = v83 + 1;
            if (v83 == -1 || v84 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v85 = *(unsigned char *)(*(void *)(a2 + *v7) + v83);
              *(void *)(a2 + v82) = v84;
              v20 |= (unint64_t)(v85 & 0x7F) << v80;
              if (v85 < 0)
              {
                v80 += 7;
                BOOL v15 = v81++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_220;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_220:
          uint64_t v158 = 48;
          goto LABEL_261;
        case 0xDu:
          char v86 = 0;
          unsigned int v87 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x100000u;
          while (2)
          {
            uint64_t v88 = *v3;
            uint64_t v89 = *(void *)(a2 + v88);
            unint64_t v90 = v89 + 1;
            if (v89 == -1 || v90 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v91 = *(unsigned char *)(*(void *)(a2 + *v7) + v89);
              *(void *)(a2 + v88) = v90;
              v20 |= (unint64_t)(v91 & 0x7F) << v86;
              if (v91 < 0)
              {
                v86 += 7;
                BOOL v15 = v87++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_224;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_224:
          uint64_t v158 = 168;
          goto LABEL_261;
        case 0xEu:
          char v92 = 0;
          unsigned int v93 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x10000u;
          while (2)
          {
            uint64_t v94 = *v3;
            uint64_t v95 = *(void *)(a2 + v94);
            unint64_t v96 = v95 + 1;
            if (v95 == -1 || v96 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v97 = *(unsigned char *)(*(void *)(a2 + *v7) + v95);
              *(void *)(a2 + v94) = v96;
              v20 |= (unint64_t)(v97 & 0x7F) << v92;
              if (v97 < 0)
              {
                v92 += 7;
                BOOL v15 = v93++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_228;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_228:
          uint64_t v158 = 136;
          goto LABEL_261;
        case 0xFu:
          *(_DWORD *)(a1 + 212) |= 2u;
          uint64_t v98 = *v3;
          unint64_t v99 = *(void *)(a2 + v98);
          if (v99 <= 0xFFFFFFFFFFFFFFF7 && v99 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v47 = *(void *)(*(void *)(a2 + *v7) + v99);
            *(void *)(a2 + v98) = v99 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v47 = 0;
          }
          uint64_t v160 = 16;
          goto LABEL_277;
        case 0x10u:
          *(_DWORD *)(a1 + 212) |= 1u;
          uint64_t v100 = *v3;
          unint64_t v101 = *(void *)(a2 + v100);
          if (v101 <= 0xFFFFFFFFFFFFFFF7 && v101 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v47 = *(void *)(*(void *)(a2 + *v7) + v101);
            *(void *)(a2 + v100) = v101 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v47 = 0;
          }
          uint64_t v160 = 8;
LABEL_277:
          *(void *)(a1 + v160) = v47;
          continue;
        case 0x11u:
          char v102 = 0;
          unsigned int v103 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x1000u;
          while (2)
          {
            uint64_t v104 = *v3;
            uint64_t v105 = *(void *)(a2 + v104);
            unint64_t v106 = v105 + 1;
            if (v105 == -1 || v106 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v107 = *(unsigned char *)(*(void *)(a2 + *v7) + v105);
              *(void *)(a2 + v104) = v106;
              v20 |= (unint64_t)(v107 & 0x7F) << v102;
              if (v107 < 0)
              {
                v102 += 7;
                BOOL v15 = v103++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_232;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_232:
          uint64_t v158 = 104;
          goto LABEL_261;
        case 0x12u:
          uint64_t v108 = PBReaderReadString();
          uint64_t v109 = *(void **)(a1 + 200);
          *(void *)(a1 + 200) = v108;

          continue;
        case 0x13u:
          char v110 = 0;
          unsigned int v111 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 8u;
          while (2)
          {
            uint64_t v112 = *v3;
            uint64_t v113 = *(void *)(a2 + v112);
            unint64_t v114 = v113 + 1;
            if (v113 == -1 || v114 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v115 = *(unsigned char *)(*(void *)(a2 + *v7) + v113);
              *(void *)(a2 + v112) = v114;
              v20 |= (unint64_t)(v115 & 0x7F) << v110;
              if (v115 < 0)
              {
                v110 += 7;
                BOOL v15 = v111++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_236;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_236:
          uint64_t v158 = 32;
          goto LABEL_261;
        case 0x14u:
          char v116 = 0;
          unsigned int v117 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 4u;
          while (2)
          {
            uint64_t v118 = *v3;
            uint64_t v119 = *(void *)(a2 + v118);
            unint64_t v120 = v119 + 1;
            if (v119 == -1 || v120 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v121 = *(unsigned char *)(*(void *)(a2 + *v7) + v119);
              *(void *)(a2 + v118) = v120;
              v20 |= (unint64_t)(v121 & 0x7F) << v116;
              if (v121 < 0)
              {
                v116 += 7;
                BOOL v15 = v117++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_240;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_240:
          uint64_t v158 = 24;
          goto LABEL_261;
        case 0x15u:
          char v122 = 0;
          unsigned int v123 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x40000u;
          while (2)
          {
            uint64_t v124 = *v3;
            uint64_t v125 = *(void *)(a2 + v124);
            unint64_t v126 = v125 + 1;
            if (v125 == -1 || v126 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v127 = *(unsigned char *)(*(void *)(a2 + *v7) + v125);
              *(void *)(a2 + v124) = v126;
              v20 |= (unint64_t)(v127 & 0x7F) << v122;
              if (v127 < 0)
              {
                v122 += 7;
                BOOL v15 = v123++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_244;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_244:
          uint64_t v158 = 152;
          goto LABEL_261;
        case 0x16u:
          char v128 = 0;
          unsigned int v129 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x20000u;
          while (2)
          {
            uint64_t v130 = *v3;
            uint64_t v131 = *(void *)(a2 + v130);
            unint64_t v132 = v131 + 1;
            if (v131 == -1 || v132 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v133 = *(unsigned char *)(*(void *)(a2 + *v7) + v131);
              *(void *)(a2 + v130) = v132;
              v20 |= (unint64_t)(v133 & 0x7F) << v128;
              if (v133 < 0)
              {
                v128 += 7;
                BOOL v15 = v129++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_248;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_248:
          uint64_t v158 = 144;
          goto LABEL_261;
        case 0x17u:
          char v134 = 0;
          unsigned int v135 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x400000u;
          while (2)
          {
            uint64_t v136 = *v3;
            uint64_t v137 = *(void *)(a2 + v136);
            unint64_t v138 = v137 + 1;
            if (v137 == -1 || v138 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v139 = *(unsigned char *)(*(void *)(a2 + *v7) + v137);
              *(void *)(a2 + v136) = v138;
              v20 |= (unint64_t)(v139 & 0x7F) << v134;
              if (v139 < 0)
              {
                v134 += 7;
                BOOL v15 = v135++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_252;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_252:
          uint64_t v158 = 184;
          goto LABEL_261;
        case 0x18u:
          char v140 = 0;
          unsigned int v141 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x200000u;
          while (2)
          {
            uint64_t v142 = *v3;
            uint64_t v143 = *(void *)(a2 + v142);
            unint64_t v144 = v143 + 1;
            if (v143 == -1 || v144 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v145 = *(unsigned char *)(*(void *)(a2 + *v7) + v143);
              *(void *)(a2 + v142) = v144;
              v20 |= (unint64_t)(v145 & 0x7F) << v140;
              if (v145 < 0)
              {
                v140 += 7;
                BOOL v15 = v141++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_256;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_256:
          uint64_t v158 = 176;
          goto LABEL_261;
        case 0x19u:
          char v146 = 0;
          unsigned int v147 = 0;
          uint64_t v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x200u;
          while (2)
          {
            uint64_t v148 = *v3;
            uint64_t v149 = *(void *)(a2 + v148);
            unint64_t v150 = v149 + 1;
            if (v149 == -1 || v150 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v151 = *(unsigned char *)(*(void *)(a2 + *v7) + v149);
              *(void *)(a2 + v148) = v150;
              v20 |= (unint64_t)(v151 & 0x7F) << v146;
              if (v151 < 0)
              {
                v146 += 7;
                BOOL v15 = v147++ >= 9;
                if (v15)
                {
                  uint64_t v20 = 0;
                  goto LABEL_260;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_260:
          uint64_t v158 = 80;
LABEL_261:
          *(void *)(a1 + v158) = v20;
          continue;
        case 0x1Au:
          char v152 = 0;
          unsigned int v153 = 0;
          uint64_t v40 = 0;
          *(_DWORD *)(a1 + 212) |= 0x1000000u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v154 = *v3;
        uint64_t v155 = *(void *)(a2 + v154);
        unint64_t v156 = v155 + 1;
        if (v155 == -1 || v156 > *(void *)(a2 + *v4)) {
          break;
        }
        char v157 = *(unsigned char *)(*(void *)(a2 + *v7) + v155);
        *(void *)(a2 + v154) = v156;
        v40 |= (unint64_t)(v157 & 0x7F) << v152;
        if ((v157 & 0x80) == 0) {
          goto LABEL_265;
        }
        v152 += 7;
        BOOL v15 = v153++ >= 9;
        if (v15)
        {
          LODWORD(v40) = 0;
          goto LABEL_267;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_265:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v40) = 0;
      }
LABEL_267:
      uint64_t v159 = 208;
LABEL_268:
      *(_DWORD *)(a1 + v159) = v40;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBSearchBeginReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = 0;
              unsigned int v18 = 0;
              uint64_t v19 = 0;
              *(unsigned char *)(a1 + 36) |= 1u;
              break;
            case 2u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 8;
              goto LABEL_31;
            case 3u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 16;
              goto LABEL_31;
            case 4u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 24;
LABEL_31:
              char v26 = *(void **)(a1 + v25);
              *(void *)(a1 + v25) = v24;

              goto LABEL_36;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_36:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_33;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_35;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_35:
          *(_DWORD *)(a1 + 32) = v19;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBABConfigBucketReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v24 = objc_alloc_init(NTPBConfig);
        objc_storeStrong((id *)(a1 + 24), v24);
        if (!PBReaderPlaceMark() || (NTPBConfigReadFrom((uint64_t)v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v20 |= (unint64_t)(v29 & 0x7F) << v25;
            if ((v29 & 0x80) == 0) {
              goto LABEL_45;
            }
            v25 += 7;
            BOOL v14 = v26++ >= 9;
            if (v14)
            {
              uint64_t v20 = 0;
              goto LABEL_47;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_47:
          uint64_t v31 = 8;
        }
        else
        {
          if (v17 != 1)
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (1)
          {
            uint64_t v21 = *v3;
            unint64_t v22 = *(void *)(a2 + v21);
            if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0) {
              goto LABEL_41;
            }
            v18 += 7;
            BOOL v14 = v19++ >= 9;
            if (v14)
            {
              uint64_t v20 = 0;
              goto LABEL_43;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_43:
          uint64_t v31 = 16;
        }
        *(void *)(a1 + v31) = v20;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAudioEngagementCompletedReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 24;
        goto LABEL_83;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 128;
        goto LABEL_83;
      case 3u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 144) |= 0x40u;
        while (2)
        {
          uint64_t v24 = *v3;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              BOOL v15 = v22++ >= 9;
              if (v15)
              {
                uint64_t v23 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
LABEL_94:
        BOOL v72 = v23 != 0;
        uint64_t v73 = 140;
        goto LABEL_121;
      case 4u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        *(unsigned char *)(a1 + 144) |= 8u;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v30) = 0;
        }
LABEL_98:
        uint64_t v74 = 80;
        goto LABEL_111;
      case 5u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 72;
        goto LABEL_83;
      case 6u:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 88;
        goto LABEL_83;
      case 7u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v30 = 0;
        *(unsigned char *)(a1 + 144) |= 4u;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v30 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              BOOL v15 = v36++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v30) = 0;
        }
LABEL_102:
        uint64_t v74 = 64;
        goto LABEL_111;
      case 8u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 56;
        goto LABEL_83;
      case 9u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(unsigned char *)(a1 + 144) |= 2u;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
LABEL_106:
        uint64_t v75 = 16;
        goto LABEL_116;
      case 0xAu:
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v30 = 0;
        *(unsigned char *)(a1 + 144) |= 0x20u;
        while (2)
        {
          uint64_t v50 = *v3;
          uint64_t v51 = *(void *)(a2 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v52;
            v30 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              BOOL v15 = v49++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v30) = 0;
        }
LABEL_110:
        uint64_t v74 = 136;
LABEL_111:
        *(_DWORD *)(a1 + v74) = v30;
        goto LABEL_124;
      case 0xBu:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 32;
        goto LABEL_83;
      case 0xCu:
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v43 = 0;
        *(unsigned char *)(a1 + 144) |= 1u;
        while (2)
        {
          uint64_t v56 = *v3;
          uint64_t v57 = *(void *)(a2 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
            *(void *)(a2 + v56) = v58;
            v43 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v15 = v55++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
LABEL_115:
        uint64_t v75 = 8;
LABEL_116:
        *(void *)(a1 + v75) = v43;
        goto LABEL_124;
      case 0xDu:
        unint64_t v60 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 96), v60);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v60, a2) & 1) == 0) {
          goto LABEL_126;
        }
        goto LABEL_77;
      case 0xEu:
        unint64_t v60 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 104), v60);
        if (!PBReaderPlaceMark() || (NTPBIssueViewDataReadFrom((uint64_t)v60, a2) & 1) == 0) {
          goto LABEL_126;
        }
        goto LABEL_77;
      case 0xFu:
        unint64_t v60 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 40), v60);
        if PBReaderPlaceMark() && (NTPBChannelDataReadFrom((uint64_t)v60, a2))
        {
LABEL_77:
          PBReaderRecallMark();

LABEL_124:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_126:

        return 0;
      case 0x10u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 112;
        goto LABEL_83;
      case 0x11u:
        *(unsigned char *)(a1 + 144) |= 0x10u;
        uint64_t v61 = *v3;
        unint64_t v62 = *(void *)(a2 + v61);
        if (v62 <= 0xFFFFFFFFFFFFFFFBLL && v62 + 4 <= *(void *)(a2 + *v4))
        {
          int v63 = *(_DWORD *)(*(void *)(a2 + *v7) + v62);
          *(void *)(a2 + v61) = v62 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v63 = 0;
        }
        *(_DWORD *)(a1 + 120) = v63;
        goto LABEL_124;
      case 0x12u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 48;
LABEL_83:
        uint64_t v64 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_124;
      case 0x13u:
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v67 = 0;
        *(unsigned char *)(a1 + 144) |= 0x80u;
        while (2)
        {
          uint64_t v68 = *v3;
          uint64_t v69 = *(void *)(a2 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v69);
            *(void *)(a2 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              BOOL v15 = v66++ >= 9;
              if (v15)
              {
                uint64_t v67 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v67 = 0;
        }
LABEL_120:
        BOOL v72 = v67 != 0;
        uint64_t v73 = 141;
LABEL_121:
        *(unsigned char *)(a1 + v73) = v72;
        goto LABEL_124;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_124;
    }
  }
}

uint64_t NTPBPersonalizedTodaySectionSpecificConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 32) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_36;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            uint64_t v21 = 0;
            goto LABEL_38;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_36:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_38:
        *(void *)(a1 + 8) = v21;
      }
      else
      {
        if (v17 == 1)
        {
          uint64_t v18 = objc_alloc_init(NTPBTodaySectionConfigArticle);
          [(id)a1 addPersonalizedArticles:v18];
        }
        else
        {
          if (v17)
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          uint64_t v18 = objc_alloc_init(NTPBTodaySectionConfigArticle);
          [(id)a1 addMandatoryArticles:v18];
        }

        if (!PBReaderPlaceMark()
          || (NTPBTodaySectionConfigArticleReadFrom((id *)&v18->super.super.isa, a2) & 1) == 0)
        {
          return 0;
        }
        PBReaderRecallMark();
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBMultiABConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v18 = objc_alloc_init(NTPBABConfig);
        [(id)a1 addAbConfigs:v18];
        if (!PBReaderPlaceMark() || (NTPBABConfigReadFrom((uint64_t)v18, a2) & 1) == 0)
        {
LABEL_42:

          return 0;
        }
      }
      else
      {
        if (v17 == 2)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_37;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              uint64_t v21 = 0;
              goto LABEL_39;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v21 = 0;
          }
LABEL_39:
          *(void *)(a1 + 8) = v21;
          continue;
        }
        if (v17 != 1)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        uint64_t v18 = objc_alloc_init(NTPBConfig);
        objc_storeStrong((id *)(a1 + 24), v18);
        if (!PBReaderPlaceMark() || (NTPBConfigReadFrom((uint64_t)v18, a2) & 1) == 0) {
          goto LABEL_42;
        }
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBHeadlineAnalyticsElementReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_38;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 44) |= 1u;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  uint64_t v22 = 0;
                  goto LABEL_42;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_42:
          *(void *)(a1 + 8) = v22;
          continue;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 44) |= 2u;
          break;
        case 4u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 24;
          goto LABEL_38;
        case 5u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
LABEL_38:
          uint64_t v32 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
        *(void *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0) {
          goto LABEL_44;
        }
        v26 += 7;
        BOOL v14 = v27++ >= 9;
        if (v14)
        {
          uint64_t v28 = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v28 = 0;
      }
LABEL_46:
      *(unsigned char *)(a1 + 40) = v28 != 0;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBReadingHistoryItemReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t String = (void *)PBReaderReadString();

        id v19 = String;
        uint64_t v20 = 48;
        goto LABEL_49;
      case 2u:
        uint64_t v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 96;
        goto LABEL_59;
      case 3u:
        *(unsigned char *)(a1 + 136) |= 0x20u;
        uint64_t v24 = *v3;
        unint64_t v25 = *(void *)(a2 + v24);
        if (v25 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v26 = v25 + 4, v25 + 4 <= *(void *)(a2 + *v4)))
        {
          int v27 = *(_DWORD *)(*(void *)(a2 + *v7) + v25);
          *(void *)(a2 + v24) = v26;
        }
        else
        {
          int v27 = 0;
          *(unsigned char *)(a2 + *v5) = 1;
        }
        *(_DWORD *)(a1 + 80) = v27;
        goto LABEL_90;
      case 4u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        *(unsigned char *)(a1 + 136) |= 4u;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_72:
        uint64_t v59 = 24;
        goto LABEL_85;
      case 5u:
        uint64_t v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 64;
        goto LABEL_59;
      case 6u:
        uint64_t v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 72;
        goto LABEL_59;
      case 7u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v30 = 0;
        *(unsigned char *)(a1 + 136) |= 8u;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v30 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              BOOL v15 = v36++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_76:
        uint64_t v59 = 32;
        goto LABEL_85;
      case 8u:
        char v41 = (void *)PBReaderReadString();

        id v19 = v41;
        uint64_t v20 = 128;
        goto LABEL_49;
      case 9u:
        unsigned int v42 = (void *)PBReaderReadString();

        id v19 = v42;
        uint64_t v20 = 56;
        goto LABEL_49;
      case 0xAu:
        *(unsigned char *)(a1 + 136) |= 2u;
        uint64_t v43 = *v3;
        unint64_t v44 = *(void *)(a2 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v45 = *(void *)(*(void *)(a2 + *v7) + v44);
          *(void *)(a2 + v43) = v44 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v45 = 0;
        }
        *(void *)(a1 + 16) = v45;
        goto LABEL_90;
      case 0xBu:
        uint64_t v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 88;
        goto LABEL_59;
      case 0xCu:
        unint64_t v46 = (void *)PBReaderReadString();

        id v19 = v46;
        uint64_t v20 = 112;
LABEL_49:
        *(void *)(a1 + v20) = v19;
        goto LABEL_90;
      case 0xDu:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v30 = 0;
        *(unsigned char *)(a1 + 136) |= 0x10u;
        while (2)
        {
          uint64_t v49 = *v3;
          uint64_t v50 = *(void *)(a2 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v51;
            v30 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v15 = v48++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_80:
        uint64_t v59 = 40;
        goto LABEL_85;
      case 0xEu:
        uint64_t v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 104;
        goto LABEL_59;
      case 0xFu:
        uint64_t v22 = objc_alloc_init(NTPBDate);

        uint64_t v23 = 120;
LABEL_59:
        *(void *)(a1 + v23) = v22;
        if PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2))
        {
          PBReaderRecallMark();
LABEL_90:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        return 0;
      case 0x10u:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v30 = 0;
        *(unsigned char *)(a1 + 136) |= 1u;
        while (2)
        {
          uint64_t v55 = *v3;
          uint64_t v56 = *(void *)(a2 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
            *(void *)(a2 + v55) = v57;
            v30 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v15 = v54++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_84:
        uint64_t v59 = 8;
LABEL_85:
        *(void *)(a1 + v59) = v30;
        goto LABEL_90;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_90;
    }
  }
}

uint64_t NTPBPersonalizationConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(NTPBBinningConfig);
        objc_storeStrong((id *)(a1 + 16), v17);
        if PBReaderPlaceMark() && (NTPBBinningConfigReadFrom((uint64_t)v17, a2)) {
          goto LABEL_38;
        }
        goto LABEL_45;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_42;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_42:
        *(void *)(a1 + 8) = v21;
        goto LABEL_43;
      case 3u:
        uint64_t v17 = objc_alloc_init(NTPBPersonalizationTreatment);
        objc_storeStrong((id *)(a1 + 24), v17);
        goto LABEL_36;
      case 4u:
        uint64_t v17 = objc_alloc_init(NTPBPersonalizationBucket);
        [(id)a1 addPersonalizationBuckets:v17];
        if (!PBReaderPlaceMark() || !NTPBPersonalizationBucketReadFrom((uint64_t)v17, a2)) {
          goto LABEL_45;
        }
        goto LABEL_38;
      case 5u:
        uint64_t v17 = objc_alloc_init(NTPBPersonalizationTreatment);
        [(id)a1 addPersonalizationTreatments:v17];
LABEL_36:
        if PBReaderPlaceMark() && (NTPBPersonalizationTreatmentReadFrom((uint64_t)v17, a2))
        {
LABEL_38:
          PBReaderRecallMark();

LABEL_43:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_45:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_43;
    }
  }
}

uint64_t NTPBAdExposureOpportunityReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(_WORD *)(a1 + 124) |= 0x200u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_114;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_116;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_114:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_116:
          BOOL v86 = v19 != 0;
          uint64_t v87 = 120;
          goto LABEL_141;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(_WORD *)(a1 + 124) |= 0x400u;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_120:
          BOOL v86 = v26 != 0;
          uint64_t v87 = 121;
          goto LABEL_141;
        case 3u:
          uint64_t v30 = PBReaderReadString();
          uint64_t v31 = 40;
          goto LABEL_91;
        case 4u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          *(_WORD *)(a1 + 124) |= 8u;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_124;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v34) = 0;
          }
LABEL_124:
          uint64_t v88 = 64;
          goto LABEL_162;
        case 5u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v34 = 0;
          *(_WORD *)(a1 + 124) |= 0x80u;
          while (2)
          {
            uint64_t v40 = *v3;
            unint64_t v41 = *(void *)(a2 + v40);
            if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
              *(void *)(a2 + v40) = v41 + 1;
              v34 |= (unint64_t)(v42 & 0x7F) << v38;
              if (v42 < 0)
              {
                v38 += 7;
                BOOL v14 = v39++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_128;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v34) = 0;
          }
LABEL_128:
          uint64_t v88 = 112;
          goto LABEL_162;
        case 6u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v34 = 0;
          *(_WORD *)(a1 + 124) |= 0x100u;
          while (2)
          {
            uint64_t v45 = *v3;
            unint64_t v46 = *(void *)(a2 + v45);
            if (v46 == -1 || v46 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
              *(void *)(a2 + v45) = v46 + 1;
              v34 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                BOOL v14 = v44++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_132;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v34) = 0;
          }
LABEL_132:
          uint64_t v88 = 116;
          goto LABEL_162;
        case 7u:
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v34 = 0;
          *(_WORD *)(a1 + 124) |= 0x10u;
          while (2)
          {
            uint64_t v50 = *v3;
            unint64_t v51 = *(void *)(a2 + v50);
            if (v51 == -1 || v51 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
              *(void *)(a2 + v50) = v51 + 1;
              v34 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                BOOL v14 = v49++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_136;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v34) = 0;
          }
LABEL_136:
          uint64_t v88 = 68;
          goto LABEL_162;
        case 8u:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          *(_WORD *)(a1 + 124) |= 0x800u;
          while (2)
          {
            uint64_t v56 = *v3;
            unint64_t v57 = *(void *)(a2 + v56);
            if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
              *(void *)(a2 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                BOOL v14 = v54++ >= 9;
                if (v14)
                {
                  uint64_t v55 = 0;
                  goto LABEL_140;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v55 = 0;
          }
LABEL_140:
          BOOL v86 = v55 != 0;
          uint64_t v87 = 122;
LABEL_141:
          *(unsigned char *)(a1 + v87) = v86;
          continue;
        case 9u:
          char v59 = 0;
          unsigned int v60 = 0;
          uint64_t v34 = 0;
          *(_WORD *)(a1 + 124) |= 0x20u;
          while (2)
          {
            uint64_t v61 = *v3;
            unint64_t v62 = *(void *)(a2 + v61);
            if (v62 == -1 || v62 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v63 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
              *(void *)(a2 + v61) = v62 + 1;
              v34 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                BOOL v14 = v60++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v34) = 0;
          }
LABEL_145:
          uint64_t v88 = 80;
          goto LABEL_162;
        case 0xAu:
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v34 = 0;
          *(_WORD *)(a1 + 124) |= 0x40u;
          while (2)
          {
            uint64_t v66 = *v3;
            unint64_t v67 = *(void *)(a2 + v66);
            if (v67 == -1 || v67 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v68 = *(unsigned char *)(*(void *)(a2 + *v7) + v67);
              *(void *)(a2 + v66) = v67 + 1;
              v34 |= (unint64_t)(v68 & 0x7F) << v64;
              if (v68 < 0)
              {
                v64 += 7;
                BOOL v14 = v65++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v34) = 0;
          }
LABEL_149:
          uint64_t v88 = 96;
          goto LABEL_162;
        case 0xBu:
          uint64_t v30 = PBReaderReadString();
          uint64_t v31 = 88;
          goto LABEL_91;
        case 0xCu:
          uint64_t v30 = PBReaderReadString();
          uint64_t v31 = 16;
          goto LABEL_91;
        case 0xDu:
          uint64_t v30 = PBReaderReadData();
          uint64_t v31 = 104;
          goto LABEL_91;
        case 0xEu:
          uint64_t v30 = PBReaderReadData();
          uint64_t v31 = 56;
          goto LABEL_91;
        case 0xFu:
          uint64_t v30 = PBReaderReadString();
          uint64_t v31 = 32;
          goto LABEL_91;
        case 0x10u:
          uint64_t v30 = PBReaderReadString();
          uint64_t v31 = 72;
LABEL_91:
          uint64_t v69 = *(void **)(a1 + v31);
          *(void *)(a1 + v31) = v30;

          continue;
        case 0x11u:
          char v70 = 0;
          unsigned int v71 = 0;
          uint64_t v72 = 0;
          *(_WORD *)(a1 + 124) |= 1u;
          while (2)
          {
            uint64_t v73 = *v3;
            unint64_t v74 = *(void *)(a2 + v73);
            if (v74 == -1 || v74 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v75 = *(unsigned char *)(*(void *)(a2 + *v7) + v74);
              *(void *)(a2 + v73) = v74 + 1;
              v72 |= (unint64_t)(v75 & 0x7F) << v70;
              if (v75 < 0)
              {
                v70 += 7;
                BOOL v14 = v71++ >= 9;
                if (v14)
                {
                  uint64_t v72 = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v72 = 0;
          }
LABEL_153:
          *(void *)(a1 + 8) = v72;
          continue;
        case 0x12u:
          char v76 = 0;
          unsigned int v77 = 0;
          uint64_t v34 = 0;
          *(_WORD *)(a1 + 124) |= 4u;
          while (2)
          {
            uint64_t v78 = *v3;
            unint64_t v79 = *(void *)(a2 + v78);
            if (v79 == -1 || v79 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v80 = *(unsigned char *)(*(void *)(a2 + *v7) + v79);
              *(void *)(a2 + v78) = v79 + 1;
              v34 |= (unint64_t)(v80 & 0x7F) << v76;
              if (v80 < 0)
              {
                v76 += 7;
                BOOL v14 = v77++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v34) = 0;
          }
LABEL_157:
          uint64_t v88 = 48;
          goto LABEL_162;
        case 0x13u:
          char v81 = 0;
          unsigned int v82 = 0;
          uint64_t v34 = 0;
          *(_WORD *)(a1 + 124) |= 2u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v83 = *v3;
        unint64_t v84 = *(void *)(a2 + v83);
        if (v84 == -1 || v84 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v85 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
        *(void *)(a2 + v83) = v84 + 1;
        v34 |= (unint64_t)(v85 & 0x7F) << v81;
        if ((v85 & 0x80) == 0) {
          goto LABEL_159;
        }
        v81 += 7;
        BOOL v14 = v82++ >= 9;
        if (v14)
        {
          LODWORD(v34) = 0;
          goto LABEL_161;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_159:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v34) = 0;
      }
LABEL_161:
      uint64_t v88 = 24;
LABEL_162:
      *(_DWORD *)(a1 + v88) = v34;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBColorGradientReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v20 = objc_alloc_init(NTPBColorStop);
        [a1 addColorStops:v20];

        if (!PBReaderPlaceMark() || (NTPBColorStopReadFrom((uint64_t)v20, a2) & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v17 == 2)
        {
          unsigned int v18 = objc_alloc_init(NTPBPoint);

          uint64_t v19 = 2;
        }
        else
        {
          if (v17 != 1)
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          unsigned int v18 = objc_alloc_init(NTPBPoint);

          uint64_t v19 = 3;
        }
        a1[v19] = v18;
        if (!PBReaderPlaceMark() || (NTPBPointReadFrom((uint64_t)v18, a2) & 1) == 0) {
          return 0;
        }
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBColorStopReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_31;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 16) = v20;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t String = (void *)PBReaderReadString();

        *(void *)(a1 + 8) = String;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBABConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 40) |= 2u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_42;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_44:
        uint64_t v30 = 16;
        goto LABEL_49;
      case 2u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 40) |= 1u;
        while (2)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
            *(void *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                uint64_t v19 = 0;
                goto LABEL_48;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_48:
        uint64_t v30 = 8;
LABEL_49:
        *(void *)(a1 + v30) = v19;
        goto LABEL_50;
      case 3u:
        char v29 = objc_alloc_init(NTPBConfig);
        objc_storeStrong((id *)(a1 + 32), v29);
        if (!PBReaderPlaceMark() || (NTPBConfigReadFrom((uint64_t)v29, a2) & 1) == 0) {
          goto LABEL_52;
        }
        goto LABEL_40;
      case 4u:
        char v29 = objc_alloc_init(NTPBABConfigBucket);
        [(id)a1 addConfigBuckets:v29];
        if PBReaderPlaceMark() && (NTPBABConfigBucketReadFrom((uint64_t)v29, a2))
        {
LABEL_40:
          PBReaderRecallMark();

LABEL_50:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_52:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_50;
    }
  }
}

uint64_t NTPBSearchResultSelectReadFrom(_WORD *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 44;
          goto LABEL_122;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          a1[102] |= 2u;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_126;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_126:
          uint64_t v80 = 34;
          goto LABEL_168;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v22 = 0;
          a1[102] |= 0x40u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v22 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_130;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_130:
          uint64_t v80 = 68;
          goto LABEL_168;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v22 = 0;
          a1[102] |= 8u;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v22 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_134;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_134:
          uint64_t v80 = 48;
          goto LABEL_168;
        case 5u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v22 = 0;
          a1[102] |= 0x20u;
          while (2)
          {
            uint64_t v38 = *v3;
            unint64_t v39 = *(void *)(a2 + v38);
            if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v39 + 1;
              v22 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_138;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_138:
          uint64_t v80 = 62;
          goto LABEL_168;
        case 6u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 64;
          goto LABEL_122;
        case 7u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 56;
          goto LABEL_122;
        case 8u:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v22 = 0;
          a1[102] |= 0x10u;
          while (2)
          {
            uint64_t v43 = *v3;
            unint64_t v44 = *(void *)(a2 + v43);
            if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
              *(void *)(a2 + v43) = v44 + 1;
              v22 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                BOOL v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_142;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_142:
          uint64_t v80 = 60;
          goto LABEL_168;
        case 9u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          a1[102] |= 0x400u;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v14 = v47++ >= 9;
                if (v14)
                {
                  uint64_t v48 = 0;
                  goto LABEL_146;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v48 = 0;
          }
LABEL_146:
          BOOL v81 = v48 != 0;
          uint64_t v82 = 201;
          goto LABEL_163;
        case 0xAu:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v22 = 0;
          a1[102] |= 1u;
          while (2)
          {
            uint64_t v54 = *v3;
            unint64_t v55 = *(void *)(a2 + v54);
            if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v55 + 1;
              v22 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                BOOL v14 = v53++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_150;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_150:
          uint64_t v80 = 32;
          goto LABEL_168;
        case 0xBu:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v22 = 0;
          a1[102] |= 0x80u;
          while (2)
          {
            uint64_t v59 = *v3;
            unint64_t v60 = *(void *)(a2 + v59);
            if (v60 == -1 || v60 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
              *(void *)(a2 + v59) = v60 + 1;
              v22 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                BOOL v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_154;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_154:
          uint64_t v80 = 96;
          goto LABEL_168;
        case 0xCu:
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v22 = 0;
          a1[102] |= 0x100u;
          while (2)
          {
            uint64_t v64 = *v3;
            unint64_t v65 = *(void *)(a2 + v64);
            if (v65 == -1 || v65 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v66 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
              *(void *)(a2 + v64) = v65 + 1;
              v22 |= (unint64_t)(v66 & 0x7F) << v62;
              if (v66 < 0)
              {
                v62 += 7;
                BOOL v14 = v63++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_158;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_158:
          uint64_t v80 = 98;
          goto LABEL_168;
        case 0xDu:
          unint64_t v67 = PBReaderReadString();
          if (v67) {
            [a1 addNonSelectedResultFeedId:v67];
          }
          goto LABEL_117;
        case 0xEu:
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v70 = 0;
          a1[102] |= 0x200u;
          while (2)
          {
            uint64_t v71 = *v3;
            unint64_t v72 = *(void *)(a2 + v71);
            if (v72 == -1 || v72 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v73 = *(unsigned char *)(*(void *)(a2 + *v7) + v72);
              *(void *)(a2 + v71) = v72 + 1;
              v70 |= (unint64_t)(v73 & 0x7F) << v68;
              if (v73 < 0)
              {
                v68 += 7;
                BOOL v14 = v69++ >= 9;
                if (v14)
                {
                  uint64_t v70 = 0;
                  goto LABEL_162;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v70 = 0;
          }
LABEL_162:
          BOOL v81 = v70 != 0;
          uint64_t v82 = 200;
LABEL_163:
          *((unsigned char *)a1 + v82) = v81;
          continue;
        case 0xFu:
          unint64_t v67 = PBReaderReadString();
          if (v67) {
            [a1 addSearchResults:v67];
          }
          goto LABEL_117;
        case 0x10u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 84;
          goto LABEL_122;
        case 0x11u:
          unint64_t v67 = PBReaderReadString();
          if (v67) {
            [a1 addTopicResultFeedIds:v67];
          }
          goto LABEL_117;
        case 0x12u:
          unint64_t v67 = PBReaderReadString();
          if (v67) {
            [a1 addChannelResultFeedIds:v67];
          }
          goto LABEL_117;
        case 0x13u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 72;
          goto LABEL_122;
        case 0x14u:
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v22 = 0;
          a1[102] |= 4u;
          break;
        case 0x15u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
          goto LABEL_122;
        case 0x16u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 12;
          goto LABEL_122;
        case 0x17u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 24;
          goto LABEL_122;
        case 0x18u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 52;
          goto LABEL_122;
        case 0x19u:
          unint64_t v67 = PBReaderReadString();
          if (v67) {
            [a1 addArticleResultArticleIds:v67];
          }
LABEL_117:

          continue;
        case 0x1Au:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 76;
          goto LABEL_122;
        case 0x1Bu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 80;
          goto LABEL_122;
        case 0x1Cu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 88;
          goto LABEL_122;
        case 0x1Du:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 20;
LABEL_122:
          unint64_t v79 = *(void **)&a1[v18];
          *(void *)&a1[v18] = v17;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v76 = *v3;
        unint64_t v77 = *(void *)(a2 + v76);
        if (v77 == -1 || v77 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
        *(void *)(a2 + v76) = v77 + 1;
        v22 |= (unint64_t)(v78 & 0x7F) << v74;
        if ((v78 & 0x80) == 0) {
          goto LABEL_165;
        }
        v74 += 7;
        BOOL v14 = v75++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_167;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_165:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v22) = 0;
      }
LABEL_167:
      uint64_t v80 = 36;
LABEL_168:
      *(_DWORD *)&a1[v80] = v22;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedViewExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x40u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_156;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_158;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_156:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_158:
          uint64_t v114 = 72;
          goto LABEL_224;
        case 2u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 64;
          goto LABEL_140;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(_DWORD *)(a1 + 200) |= 0x10000u;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v28 = 0;
                  goto LABEL_162;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_162:
          BOOL v115 = v28 != 0;
          uint64_t v116 = 197;
          goto LABEL_207;
        case 4u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x100u;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v19 |= (unint64_t)(v36 & 0x7F) << v32;
              if (v36 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_166;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_166:
          uint64_t v114 = 104;
          goto LABEL_224;
        case 5u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 112;
          goto LABEL_140;
        case 6u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 184;
          goto LABEL_140;
        case 7u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x20u;
          while (2)
          {
            uint64_t v39 = *v3;
            unint64_t v40 = *(void *)(a2 + v39);
            if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
              *(void *)(a2 + v39) = v40 + 1;
              v19 |= (unint64_t)(v41 & 0x7F) << v37;
              if (v41 < 0)
              {
                v37 += 7;
                BOOL v14 = v38++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_170;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_170:
          uint64_t v114 = 60;
          goto LABEL_224;
        case 8u:
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x10u;
          while (2)
          {
            uint64_t v44 = *v3;
            unint64_t v45 = *(void *)(a2 + v44);
            if (v45 == -1 || v45 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
              *(void *)(a2 + v44) = v45 + 1;
              v19 |= (unint64_t)(v46 & 0x7F) << v42;
              if (v46 < 0)
              {
                v42 += 7;
                BOOL v14 = v43++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_174;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_174:
          uint64_t v114 = 56;
          goto LABEL_224;
        case 9u:
          uint64_t v24 = PBReaderReadData();
          uint64_t v25 = 80;
          goto LABEL_140;
        case 0xAu:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v49 = 0;
          *(_DWORD *)(a1 + 200) |= 0x2000u;
          while (2)
          {
            uint64_t v50 = *v3;
            unint64_t v51 = *(void *)(a2 + v50);
            if (v51 == -1 || v51 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
              *(void *)(a2 + v50) = v51 + 1;
              v49 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                BOOL v14 = v48++ >= 9;
                if (v14)
                {
                  uint64_t v49 = 0;
                  goto LABEL_178;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v49 = 0;
          }
LABEL_178:
          BOOL v115 = v49 != 0;
          uint64_t v116 = 194;
          goto LABEL_207;
        case 0xBu:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 168;
          goto LABEL_140;
        case 0xCu:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 144;
          goto LABEL_140;
        case 0xDu:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 152;
          goto LABEL_140;
        case 0xEu:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 176;
          goto LABEL_140;
        case 0xFu:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          *(_DWORD *)(a1 + 200) |= 0x1000u;
          while (2)
          {
            uint64_t v56 = *v3;
            unint64_t v57 = *(void *)(a2 + v56);
            if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
              *(void *)(a2 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                BOOL v14 = v54++ >= 9;
                if (v14)
                {
                  uint64_t v55 = 0;
                  goto LABEL_182;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v55 = 0;
          }
LABEL_182:
          BOOL v115 = v55 != 0;
          uint64_t v116 = 193;
          goto LABEL_207;
        case 0x10u:
          char v59 = 0;
          unsigned int v60 = 0;
          uint64_t v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x80u;
          while (2)
          {
            uint64_t v61 = *v3;
            unint64_t v62 = *(void *)(a2 + v61);
            if (v62 == -1 || v62 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v63 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
              *(void *)(a2 + v61) = v62 + 1;
              v19 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                BOOL v14 = v60++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_186;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_186:
          uint64_t v114 = 88;
          goto LABEL_224;
        case 0x11u:
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v66 = 0;
          *(_DWORD *)(a1 + 200) |= 0x8000u;
          while (2)
          {
            uint64_t v67 = *v3;
            unint64_t v68 = *(void *)(a2 + v67);
            if (v68 == -1 || v68 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v69 = *(unsigned char *)(*(void *)(a2 + *v7) + v68);
              *(void *)(a2 + v67) = v68 + 1;
              v66 |= (unint64_t)(v69 & 0x7F) << v64;
              if (v69 < 0)
              {
                v64 += 7;
                BOOL v14 = v65++ >= 9;
                if (v14)
                {
                  uint64_t v66 = 0;
                  goto LABEL_190;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v66 = 0;
          }
LABEL_190:
          BOOL v115 = v66 != 0;
          uint64_t v116 = 196;
          goto LABEL_207;
        case 0x12u:
          char v70 = 0;
          unsigned int v71 = 0;
          uint64_t v19 = 0;
          *(_DWORD *)(a1 + 200) |= 4u;
          while (2)
          {
            uint64_t v72 = *v3;
            unint64_t v73 = *(void *)(a2 + v72);
            if (v73 == -1 || v73 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v74 = *(unsigned char *)(*(void *)(a2 + *v7) + v73);
              *(void *)(a2 + v72) = v73 + 1;
              v19 |= (unint64_t)(v74 & 0x7F) << v70;
              if (v74 < 0)
              {
                v70 += 7;
                BOOL v14 = v71++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_194;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_194:
          uint64_t v114 = 40;
          goto LABEL_224;
        case 0x13u:
          char v75 = 0;
          unsigned int v76 = 0;
          uint64_t v19 = 0;
          *(_DWORD *)(a1 + 200) |= 8u;
          while (2)
          {
            uint64_t v77 = *v3;
            unint64_t v78 = *(void *)(a2 + v77);
            if (v78 == -1 || v78 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
              *(void *)(a2 + v77) = v78 + 1;
              v19 |= (unint64_t)(v79 & 0x7F) << v75;
              if (v79 < 0)
              {
                v75 += 7;
                BOOL v14 = v76++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_198;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_198:
          uint64_t v114 = 44;
          goto LABEL_224;
        case 0x14u:
          char v80 = 0;
          unsigned int v81 = 0;
          uint64_t v82 = 0;
          *(_DWORD *)(a1 + 200) |= 0x4000u;
          while (2)
          {
            uint64_t v83 = *v3;
            unint64_t v84 = *(void *)(a2 + v83);
            if (v84 == -1 || v84 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v85 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
              *(void *)(a2 + v83) = v84 + 1;
              v82 |= (unint64_t)(v85 & 0x7F) << v80;
              if (v85 < 0)
              {
                v80 += 7;
                BOOL v14 = v81++ >= 9;
                if (v14)
                {
                  uint64_t v82 = 0;
                  goto LABEL_202;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v82 = 0;
          }
LABEL_202:
          BOOL v115 = v82 != 0;
          uint64_t v116 = 195;
          goto LABEL_207;
        case 0x15u:
          char v86 = 0;
          unsigned int v87 = 0;
          uint64_t v88 = 0;
          *(_DWORD *)(a1 + 200) |= 0x800u;
          while (2)
          {
            uint64_t v89 = *v3;
            unint64_t v90 = *(void *)(a2 + v89);
            if (v90 == -1 || v90 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v91 = *(unsigned char *)(*(void *)(a2 + *v7) + v90);
              *(void *)(a2 + v89) = v90 + 1;
              v88 |= (unint64_t)(v91 & 0x7F) << v86;
              if (v91 < 0)
              {
                v86 += 7;
                BOOL v14 = v87++ >= 9;
                if (v14)
                {
                  uint64_t v88 = 0;
                  goto LABEL_206;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v88 = 0;
          }
LABEL_206:
          BOOL v115 = v88 != 0;
          uint64_t v116 = 192;
LABEL_207:
          *(unsigned char *)(a1 + v116) = v115;
          continue;
        case 0x16u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 24;
          goto LABEL_140;
        case 0x17u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 32;
          goto LABEL_140;
        case 0x18u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 48;
          goto LABEL_140;
        case 0x19u:
          char v92 = 0;
          unsigned int v93 = 0;
          uint64_t v19 = 0;
          *(_DWORD *)(a1 + 200) |= 2u;
          while (2)
          {
            uint64_t v94 = *v3;
            unint64_t v95 = *(void *)(a2 + v94);
            if (v95 == -1 || v95 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v96 = *(unsigned char *)(*(void *)(a2 + *v7) + v95);
              *(void *)(a2 + v94) = v95 + 1;
              v19 |= (unint64_t)(v96 & 0x7F) << v92;
              if (v96 < 0)
              {
                v92 += 7;
                BOOL v14 = v93++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_211;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_211:
          uint64_t v114 = 16;
          goto LABEL_224;
        case 0x1Au:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 120;
          goto LABEL_140;
        case 0x1Bu:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 128;
          goto LABEL_140;
        case 0x1Cu:
          char v97 = 0;
          unsigned int v98 = 0;
          uint64_t v99 = 0;
          *(_DWORD *)(a1 + 200) |= 1u;
          while (2)
          {
            uint64_t v100 = *v3;
            unint64_t v101 = *(void *)(a2 + v100);
            if (v101 == -1 || v101 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v102 = *(unsigned char *)(*(void *)(a2 + *v7) + v101);
              *(void *)(a2 + v100) = v101 + 1;
              v99 |= (unint64_t)(v102 & 0x7F) << v97;
              if (v102 < 0)
              {
                v97 += 7;
                BOOL v14 = v98++ >= 9;
                if (v14)
                {
                  uint64_t v99 = 0;
                  goto LABEL_215;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v99 = 0;
          }
LABEL_215:
          *(void *)(a1 + 8) = v99;
          continue;
        case 0x1Du:
          uint64_t v24 = PBReaderReadData();
          uint64_t v25 = 96;
LABEL_140:
          unsigned int v103 = *(void **)(a1 + v25);
          *(void *)(a1 + v25) = v24;

          continue;
        case 0x1Eu:
          char v104 = 0;
          unsigned int v105 = 0;
          uint64_t v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x200u;
          while (2)
          {
            uint64_t v106 = *v3;
            unint64_t v107 = *(void *)(a2 + v106);
            if (v107 == -1 || v107 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v108 = *(unsigned char *)(*(void *)(a2 + *v7) + v107);
              *(void *)(a2 + v106) = v107 + 1;
              v19 |= (unint64_t)(v108 & 0x7F) << v104;
              if (v108 < 0)
              {
                v104 += 7;
                BOOL v14 = v105++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_219;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_219:
          uint64_t v114 = 136;
          goto LABEL_224;
        case 0x1Fu:
          char v109 = 0;
          unsigned int v110 = 0;
          uint64_t v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x400u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v111 = *v3;
        unint64_t v112 = *(void *)(a2 + v111);
        if (v112 == -1 || v112 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v113 = *(unsigned char *)(*(void *)(a2 + *v7) + v112);
        *(void *)(a2 + v111) = v112 + 1;
        v19 |= (unint64_t)(v113 & 0x7F) << v109;
        if ((v113 & 0x80) == 0) {
          goto LABEL_221;
        }
        v109 += 7;
        BOOL v14 = v110++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_223;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_221:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_223:
      uint64_t v114 = 160;
LABEL_224:
      *(_DWORD *)(a1 + v114) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBBackgroundSubscriptionValidationReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = 0;
              unsigned int v18 = 0;
              uint64_t v19 = 0;
              *(unsigned char *)(a1 + 40) |= 1u;
              break;
            case 2u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 16;
              goto LABEL_31;
            case 3u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 8;
              goto LABEL_31;
            case 4u:
              uint64_t v24 = PBReaderReadString();
              uint64_t v25 = 32;
LABEL_31:
              char v26 = *(void **)(a1 + v25);
              *(void *)(a1 + v25) = v24;

              goto LABEL_36;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_36:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_33;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_35;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_35:
          *(_DWORD *)(a1 + 24) = v19;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedLoadReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 24;
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_34;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                LODWORD(v20) = 0;
                goto LABEL_36;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              LODWORD(v20) = 0;
            }
LABEL_36:
            *(_DWORD *)(a1 + 16) = v20;
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 8;
      }
      char v26 = *(void **)(a1 + v25);
      *(void *)(a1 + v25) = v24;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTopStoriesConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 52) |= 8u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_61;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_63;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_61:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_63:
        BOOL v49 = v19 != 0;
        uint64_t v50 = 48;
        goto LABEL_68;
      case 2u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        *(unsigned char *)(a1 + 52) |= 0x10u;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_67:
        BOOL v49 = v26 != 0;
        uint64_t v50 = 49;
LABEL_68:
        *(unsigned char *)(a1 + v50) = v49;
        goto LABEL_82;
      case 3u:
        uint64_t v30 = PBReaderReadString();
        char v31 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v30;

        goto LABEL_82;
      case 4u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        *(unsigned char *)(a1 + 52) |= 4u;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_72:
        uint64_t v51 = 24;
        goto LABEL_81;
      case 5u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v34 = 0;
        *(unsigned char *)(a1 + 52) |= 2u;
        while (2)
        {
          uint64_t v40 = *v3;
          unint64_t v41 = *(void *)(a2 + v40);
          if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v41 + 1;
            v34 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_76:
        uint64_t v51 = 16;
        goto LABEL_81;
      case 6u:
        unsigned int v43 = objc_alloc_init(NTPBTopStoriesStyleConfig);
        [(id)a1 addStyleConfigs:v43];
        if (PBReaderPlaceMark() && NTPBTopStoriesStyleConfigReadFrom((uint64_t)v43, a2))
        {
          PBReaderRecallMark();

LABEL_82:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 7u:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v34 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (2)
        {
          uint64_t v46 = *v3;
          unint64_t v47 = *(void *)(a2 + v46);
          if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v47 + 1;
            v34 |= (unint64_t)(v48 & 0x7F) << v44;
            if (v48 < 0)
            {
              v44 += 7;
              BOOL v14 = v45++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_80:
        uint64_t v51 = 8;
LABEL_81:
        *(void *)(a1 + v51) = v34;
        goto LABEL_82;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_82;
    }
  }
}

uint64_t NTPBPaidSubscriptionResultReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 188) |= 0x20u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_113;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_115;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_113:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_115:
        uint64_t v76 = 124;
        goto LABEL_153;
      case 2u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 136;
        goto LABEL_104;
      case 3u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 128;
        goto LABEL_104;
      case 4u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 16;
        goto LABEL_104;
      case 5u:
        uint64_t v24 = PBReaderReadData();
        uint64_t v25 = 24;
        goto LABEL_104;
      case 6u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 188) |= 4u;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v19 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_119:
        uint64_t v76 = 88;
        goto LABEL_153;
      case 7u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 188) |= 8u;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v19 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_123:
        uint64_t v76 = 104;
        goto LABEL_153;
      case 8u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 188) |= 0x200u;
        while (2)
        {
          uint64_t v39 = *v3;
          unint64_t v40 = *(void *)(a2 + v39);
          if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v40 + 1;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              BOOL v14 = v37++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
LABEL_127:
        BOOL v77 = v38 != 0;
        uint64_t v78 = 186;
        goto LABEL_136;
      case 9u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 188) |= 0x80u;
        while (2)
        {
          uint64_t v45 = *v3;
          unint64_t v46 = *(void *)(a2 + v45);
          if (v46 == -1 || v46 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v46 + 1;
            v44 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              BOOL v14 = v43++ >= 9;
              if (v14)
              {
                uint64_t v44 = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
LABEL_131:
        BOOL v77 = v44 != 0;
        uint64_t v78 = 184;
        goto LABEL_136;
      case 0xAu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 72;
        goto LABEL_104;
      case 0xBu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 32;
        goto LABEL_104;
      case 0xCu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 40;
        goto LABEL_104;
      case 0xDu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 48;
        goto LABEL_104;
      case 0xEu:
        uint64_t v24 = PBReaderReadData();
        uint64_t v25 = 152;
        goto LABEL_104;
      case 0xFu:
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(_WORD *)(a1 + 188) |= 0x100u;
        while (2)
        {
          uint64_t v51 = *v3;
          unint64_t v52 = *(void *)(a2 + v51);
          if (v52 == -1 || v52 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
            *(void *)(a2 + v51) = v52 + 1;
            v50 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              BOOL v14 = v49++ >= 9;
              if (v14)
              {
                uint64_t v50 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v50 = 0;
        }
LABEL_135:
        BOOL v77 = v50 != 0;
        uint64_t v78 = 185;
LABEL_136:
        *(unsigned char *)(a1 + v78) = v77;
        goto LABEL_154;
      case 0x10u:
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 188) |= 2u;
        while (2)
        {
          uint64_t v56 = *v3;
          unint64_t v57 = *(void *)(a2 + v56);
          if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
            *(void *)(a2 + v56) = v57 + 1;
            v19 |= (unint64_t)(v58 & 0x7F) << v54;
            if (v58 < 0)
            {
              v54 += 7;
              BOOL v14 = v55++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_140:
        uint64_t v76 = 64;
        goto LABEL_153;
      case 0x11u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 112;
        goto LABEL_104;
      case 0x12u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 56;
        goto LABEL_104;
      case 0x13u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 96;
        goto LABEL_104;
      case 0x14u:
        char v59 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 80), v59);
        if PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v59, a2))
        {
          PBReaderRecallMark();
LABEL_101:

LABEL_154:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 0x15u:
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 188) |= 0x40u;
        while (2)
        {
          uint64_t v62 = *v3;
          unint64_t v63 = *(void *)(a2 + v62);
          if (v63 == -1 || v63 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
            *(void *)(a2 + v62) = v63 + 1;
            v19 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              BOOL v14 = v61++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_144:
        uint64_t v76 = 144;
        goto LABEL_153;
      case 0x16u:
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 188) |= 1u;
        while (2)
        {
          uint64_t v67 = *v3;
          unint64_t v68 = *(void *)(a2 + v67);
          if (v68 == -1 || v68 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(a2 + *v7) + v68);
            *(void *)(a2 + v67) = v68 + 1;
            v19 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              BOOL v14 = v66++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_148:
        uint64_t v76 = 8;
        goto LABEL_153;
      case 0x17u:
        PBReaderReadString();
        char v59 = (NTPBIssueData *)objc_claimAutoreleasedReturnValue();
        if (v59) {
          [(id)a1 addTopicIds:v59];
        }
        goto LABEL_101;
      case 0x18u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 168;
        goto LABEL_104;
      case 0x19u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 160;
LABEL_104:
        char v70 = *(void **)(a1 + v25);
        *(void *)(a1 + v25) = v24;

        goto LABEL_154;
      case 0x1Au:
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 188) |= 0x10u;
        while (2)
        {
          uint64_t v73 = *v3;
          unint64_t v74 = *(void *)(a2 + v73);
          if (v74 == -1 || v74 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(a2 + *v7) + v74);
            *(void *)(a2 + v73) = v74 + 1;
            v19 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v71 += 7;
              BOOL v14 = v72++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_152:
        uint64_t v76 = 120;
LABEL_153:
        *(_DWORD *)(a1 + v76) = v19;
        goto LABEL_154;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_154;
    }
  }
}

BOOL NTPBPaidSubscriptionConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 32) |= 4u;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            uint64_t v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxTimesHeadlineInGroup;
            goto LABEL_48;
          }
          v26 += 7;
          BOOL v24 = v27++ > 8;
          if (v24)
          {
            uint64_t v20 = 0;
            uint64_t v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxTimesHeadlineInGroup;
            goto LABEL_50;
          }
        }
        uint64_t v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxTimesHeadlineInGroup;
LABEL_47:
        *(unsigned char *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 32) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4))
          {
            uint64_t v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxGroupSizeIPad;
            goto LABEL_47;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            break;
          }
          v18 += 7;
          BOOL v24 = v19++ > 8;
          if (v24)
          {
            uint64_t v20 = 0;
            uint64_t v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxGroupSizeIPad;
            goto LABEL_50;
          }
        }
        uint64_t v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxGroupSizeIPad;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_51:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v31 = 0;
    unsigned int v32 = 0;
    uint64_t v20 = 0;
    *(unsigned char *)(a1 + 32) |= 2u;
    while (1)
    {
      uint64_t v33 = *v3;
      unint64_t v34 = *(void *)(a2 + v33);
      if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
      {
        uint64_t v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxGroupSizeIPhone;
        goto LABEL_47;
      }
      char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
      *(void *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0) {
        break;
      }
      v31 += 7;
      BOOL v24 = v32++ > 8;
      if (v24)
      {
        uint64_t v20 = 0;
        uint64_t v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxGroupSizeIPhone;
        goto LABEL_50;
      }
    }
    uint64_t v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxGroupSizeIPhone;
LABEL_48:
    if (*(unsigned char *)(a2 + *v5)) {
      uint64_t v20 = 0;
    }
LABEL_50:
    *(void *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBCoverArticlesConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        char v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleIDsTodaySectionSpecificConfigReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3))
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
      else
      {
        char v18 = objc_alloc_init(NTPBTodaySectionConfigArticle);
        [a1 addArticles:v18];

        if (!PBReaderPlaceMark()
          || (NTPBTodaySectionConfigArticleReadFrom((id *)&v18->super.super.isa, a2) & 1) == 0)
        {
          return 0;
        }
        PBReaderRecallMark();
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBPushNotifySubscriptionRequestReadFrom(id *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 3;
        goto LABEL_29;
      case 2u:
        unsigned int v19 = objc_alloc_init(NTPBDeviceInfo);
        objc_storeStrong(a1 + 1, v19);
        if (!PBReaderPlaceMark() || (NTPBDeviceInfoReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_37;
        }
        goto LABEL_32;
      case 3u:
        unsigned int v19 = objc_alloc_init(NTPBNotificationEntity);
        [a1 addNotificationEntity:v19];
        if (!PBReaderPlaceMark() || (NTPBNotificationEntityReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_37;
        }
        goto LABEL_32;
      case 4u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 5;
LABEL_29:
        unsigned int v19 = (NTPBDeviceInfo *)a1[v18];
        a1[v18] = (id)v17;
        goto LABEL_33;
      case 5u:
        unsigned int v19 = objc_alloc_init(NTPBTopicsFollowed);
        [a1 addTopicsFollowed:v19];
        if (PBReaderPlaceMark() && NTPBTopicsFollowedReadFrom(v19, a2))
        {
LABEL_32:
          PBReaderRecallMark();
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_37:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

uint64_t NTPBScoreProfileDebugReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = &OBJC_IVAR___NTPBNotificationSubscribeUnsubscribe__creativeId;
    char v8 = &OBJC_IVAR___NTPBNotificationSubscribeUnsubscribe__creativeId;
    unsigned int v9 = (int *)MEMORY[0x263F62268];
    unint64_t v10 = &OBJC_IVAR___NTPBNotificationSubscribeUnsubscribe__creativeId;
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        uint64_t v14 = *v3;
        uint64_t v15 = *(void *)(a2 + v14);
        unint64_t v16 = v15 + 1;
        if (v15 == -1 || v16 > *(void *)(a2 + *v4)) {
          break;
        }
        char v17 = *(unsigned char *)(*(void *)(a2 + *v9) + v15);
        *(void *)(a2 + v14) = v16;
        v13 |= (unint64_t)(v17 & 0x7F) << v11;
        if ((v17 & 0x80) == 0) {
          goto LABEL_12;
        }
        v11 += 7;
        BOOL v18 = v12++ >= 9;
        if (v18)
        {
          unint64_t v13 = 0;
          int v19 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v19 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v13 = 0;
      }
LABEL_14:
      if (v19 || (v13 & 7) == 4) {
        break;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + v7[498]) |= 0x8000u;
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v22);
            *(void *)(a2 + v21) = v22 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = v8[499];
          goto LABEL_121;
        case 2u:
          *(_WORD *)(a1 + v7[498]) |= 4u;
          uint64_t v24 = *v3;
          unint64_t v25 = *(void *)(a2 + v24);
          if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v25);
            *(void *)(a2 + v24) = v25 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = v10[500];
          goto LABEL_121;
        case 3u:
          *(_WORD *)(a1 + v7[498]) |= 2u;
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v27);
            *(void *)(a2 + v26) = v27 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = 16;
          goto LABEL_121;
        case 4u:
          *(_WORD *)(a1 + v7[498]) |= 0x10u;
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v29);
            *(void *)(a2 + v28) = v29 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = 40;
          goto LABEL_121;
        case 5u:
          *(_WORD *)(a1 + v7[498]) |= 1u;
          uint64_t v30 = *v3;
          unint64_t v31 = *(void *)(a2 + v30);
          if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v31);
            *(void *)(a2 + v30) = v31 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = 8;
          goto LABEL_121;
        case 6u:
          *(_WORD *)(a1 + v7[498]) |= 8u;
          uint64_t v32 = *v3;
          unint64_t v33 = *(void *)(a2 + v32);
          if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v33);
            *(void *)(a2 + v32) = v33 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = 32;
          goto LABEL_121;
        case 7u:
          *(_WORD *)(a1 + v7[498]) |= 0x1000u;
          uint64_t v34 = *v3;
          unint64_t v35 = *(void *)(a2 + v34);
          if (v35 <= 0xFFFFFFFFFFFFFFF7 && v35 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v35);
            *(void *)(a2 + v34) = v35 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = 104;
          goto LABEL_121;
        case 8u:
          *(_WORD *)(a1 + v7[498]) |= 0x200u;
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 <= 0xFFFFFFFFFFFFFFF7 && v37 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v37);
            *(void *)(a2 + v36) = v37 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = 80;
          goto LABEL_121;
        case 9u:
          *(_WORD *)(a1 + v7[498]) |= 0x2000u;
          uint64_t v38 = *v3;
          unint64_t v39 = *(void *)(a2 + v38);
          if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v39);
            *(void *)(a2 + v38) = v39 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = 112;
          goto LABEL_121;
        case 0xAu:
          *(_WORD *)(a1 + v7[498]) |= 0x4000u;
          uint64_t v40 = *v3;
          unint64_t v41 = *(void *)(a2 + v40);
          if (v41 <= 0xFFFFFFFFFFFFFFF7 && v41 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v41);
            *(void *)(a2 + v40) = v41 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = 120;
          goto LABEL_121;
        case 0xEu:
          *(_WORD *)(a1 + v7[498]) |= 0x80u;
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v44);
            *(void *)(a2 + v43) = v44 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = 64;
          goto LABEL_121;
        case 0xFu:
          *(_WORD *)(a1 + v7[498]) |= 0x100u;
          uint64_t v45 = *v3;
          unint64_t v46 = *(void *)(a2 + v45);
          if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v46);
            *(void *)(a2 + v45) = v46 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = 72;
          goto LABEL_121;
        case 0x10u:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v49 = 0;
          *(_WORD *)(a1 + v7[498]) |= 0x800u;
          while (2)
          {
            uint64_t v50 = *v3;
            uint64_t v51 = *(void *)(a2 + v50);
            unint64_t v52 = v51 + 1;
            if (v51 == -1 || v52 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v53 = *(unsigned char *)(*(void *)(a2 + *v9) + v51);
              *(void *)(a2 + v50) = v52;
              v49 |= (unint64_t)(v53 & 0x7F) << v47;
              if (v53 < 0)
              {
                v47 += 7;
                BOOL v18 = v48++ >= 9;
                if (v18)
                {
                  uint64_t v49 = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v49 = 0;
          }
LABEL_85:
          uint64_t v73 = 96;
          goto LABEL_94;
        case 0x11u:
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v49 = 0;
          *(_WORD *)(a1 + v7[498]) |= 0x20u;
          while (2)
          {
            uint64_t v56 = *v3;
            uint64_t v57 = *(void *)(a2 + v56);
            unint64_t v58 = v57 + 1;
            if (v57 == -1 || v58 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v59 = *(unsigned char *)(*(void *)(a2 + *v9) + v57);
              *(void *)(a2 + v56) = v58;
              v49 |= (unint64_t)(v59 & 0x7F) << v54;
              if (v59 < 0)
              {
                v54 += 7;
                BOOL v18 = v55++ >= 9;
                if (v18)
                {
                  uint64_t v49 = 0;
                  goto LABEL_89;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v49 = 0;
          }
LABEL_89:
          uint64_t v73 = 48;
          goto LABEL_94;
        case 0x12u:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v49 = 0;
          *(_WORD *)(a1 + v7[498]) |= 0x400u;
          break;
        case 0x13u:
          *(_WORD *)(a1 + v7[498]) |= 0x40u;
          uint64_t v66 = *v3;
          unint64_t v67 = *(void *)(a2 + v66);
          if (v67 <= 0xFFFFFFFFFFFFFFF7 && v67 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v23 = *(void *)(*(void *)(a2 + *v9) + v67);
            *(void *)(a2 + v66) = v67 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v23 = 0;
          }
          uint64_t v74 = 56;
LABEL_121:
          *(void *)(a1 + v74) = v23;
          continue;
        case 0x14u:
          unint64_t v68 = v7;
          char v69 = v10;
          char v70 = v8;
          uint64_t String = (void *)PBReaderReadString();

          id v72 = String;
          char v8 = v70;
          unint64_t v10 = v69;
          int v7 = v68;
          *(void *)(a1 + 136) = v72;
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v62 = *v3;
        uint64_t v63 = *(void *)(a2 + v62);
        unint64_t v64 = v63 + 1;
        if (v63 == -1 || v64 > *(void *)(a2 + *v4)) {
          break;
        }
        char v65 = *(unsigned char *)(*(void *)(a2 + *v9) + v63);
        *(void *)(a2 + v62) = v64;
        v49 |= (unint64_t)(v65 & 0x7F) << v60;
        if ((v65 & 0x80) == 0) {
          goto LABEL_91;
        }
        v60 += 7;
        BOOL v18 = v61++ >= 9;
        if (v18)
        {
          uint64_t v49 = 0;
          goto LABEL_93;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_91:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v49 = 0;
      }
LABEL_93:
      uint64_t v73 = 88;
LABEL_94:
      *(void *)(a1 + v73) = v49;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBNotificationChannelReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        BOOL v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBTrendingLanguageConfigReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        BOOL v18 = (void *)a1[1];
        a1[1] = v17;
LABEL_23:

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    BOOL v18 = PBReaderReadString();
    if (v18) {
      [a1 addTrendingTopics:v18];
    }
    goto LABEL_23;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTodaySectionConfigItemReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 2)
      {
        uint64_t v24 = objc_alloc_init(NTPBTodaySectionConfigWebEmbed);

        *(void *)(a1 + 24) = v24;
        if (!PBReaderPlaceMark() || (NTPBTodaySectionConfigWebEmbedReadFrom((uint64_t)v24, a2) & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v17 != 1)
        {
          if (v17)
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          else
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_37;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                LODWORD(v20) = 0;
                goto LABEL_39;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
            if (*(unsigned char *)(a2 + *v5)) {
              LODWORD(v20) = 0;
            }
LABEL_39:
            *(_DWORD *)(a1 + 16) = v20;
          }
          continue;
        }
        unint64_t v25 = objc_alloc_init(NTPBTodaySectionConfigArticle);

        *(void *)(a1 + 8) = v25;
        if (!PBReaderPlaceMark()
          || (NTPBTodaySectionConfigArticleReadFrom((id *)&v25->super.super.isa, a2) & 1) == 0)
        {
          return 0;
        }
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTagExpirationReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            uint64_t v21 = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_33:
        *(void *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        char v18 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBGroupViewExposureReadFrom(_WORD *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 44;
          goto LABEL_147;
        case 2u:
          unsigned int v20 = PBReaderReadString();
          if (v20) {
            [a1 addGroupedArticleIds:v20];
          }
          goto LABEL_150;
        case 3u:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          a1[90] |= 0x10u;
          while (2)
          {
            uint64_t v24 = *v3;
            unint64_t v25 = *(void *)(a2 + v24);
            if (v25 == -1 || v25 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
              *(void *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                BOOL v14 = v22++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_154;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_154:
          uint64_t v106 = 32;
          goto LABEL_211;
        case 4u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v23 = 0;
          a1[90] |= 4u;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v23 |= (unint64_t)(v31 & 0x7F) << v27;
              if (v31 < 0)
              {
                v27 += 7;
                BOOL v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_158;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_158:
          uint64_t v106 = 28;
          goto LABEL_211;
        case 5u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v23 = 0;
          a1[90] |= 0x200u;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v23 |= (unint64_t)(v36 & 0x7F) << v32;
              if (v36 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_162;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_162:
          uint64_t v106 = 56;
          goto LABEL_211;
        case 6u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          a1[90] |= 0x4000u;
          while (2)
          {
            uint64_t v40 = *v3;
            unint64_t v41 = *(void *)(a2 + v40);
            if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
              *(void *)(a2 + v40) = v41 + 1;
              v39 |= (unint64_t)(v42 & 0x7F) << v37;
              if (v42 < 0)
              {
                v37 += 7;
                BOOL v14 = v38++ >= 9;
                if (v14)
                {
                  uint64_t v39 = 0;
                  goto LABEL_166;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v39 = 0;
          }
LABEL_166:
          BOOL v107 = v39 != 0;
          uint64_t v108 = 177;
          goto LABEL_218;
        case 7u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 24;
          goto LABEL_147;
        case 8u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v23 = 0;
          a1[90] |= 0x800u;
          while (2)
          {
            uint64_t v45 = *v3;
            unint64_t v46 = *(void *)(a2 + v45);
            if (v46 == -1 || v46 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
              *(void *)(a2 + v45) = v46 + 1;
              v23 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                BOOL v14 = v44++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_170;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_170:
          uint64_t v106 = 84;
          goto LABEL_211;
        case 9u:
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v23 = 0;
          a1[90] |= 0x1000u;
          while (2)
          {
            uint64_t v50 = *v3;
            unint64_t v51 = *(void *)(a2 + v50);
            if (v51 == -1 || v51 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
              *(void *)(a2 + v50) = v51 + 1;
              v23 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                BOOL v14 = v49++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_174;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_174:
          uint64_t v106 = 86;
          goto LABEL_211;
        case 0xAu:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v23 = 0;
          a1[90] |= 0x100u;
          while (2)
          {
            uint64_t v55 = *v3;
            unint64_t v56 = *(void *)(a2 + v55);
            if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
              *(void *)(a2 + v55) = v56 + 1;
              v23 |= (unint64_t)(v57 & 0x7F) << v53;
              if (v57 < 0)
              {
                v53 += 7;
                BOOL v14 = v54++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_178;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_178:
          uint64_t v106 = 54;
          goto LABEL_211;
        case 0xBu:
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v23 = 0;
          a1[90] |= 0x20u;
          while (2)
          {
            uint64_t v60 = *v3;
            unint64_t v61 = *(void *)(a2 + v60);
            if (v61 == -1 || v61 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
              *(void *)(a2 + v60) = v61 + 1;
              v23 |= (unint64_t)(v62 & 0x7F) << v58;
              if (v62 < 0)
              {
                v58 += 7;
                BOOL v14 = v59++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_182;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_182:
          uint64_t v106 = 48;
          goto LABEL_211;
        case 0xCu:
          char v63 = 0;
          unsigned int v64 = 0;
          uint64_t v23 = 0;
          a1[90] |= 2u;
          while (2)
          {
            uint64_t v65 = *v3;
            unint64_t v66 = *(void *)(a2 + v65);
            if (v66 == -1 || v66 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
              *(void *)(a2 + v65) = v66 + 1;
              v23 |= (unint64_t)(v67 & 0x7F) << v63;
              if (v67 < 0)
              {
                v63 += 7;
                BOOL v14 = v64++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_186;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_186:
          uint64_t v106 = 20;
          goto LABEL_211;
        case 0xDu:
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v70 = 0;
          a1[90] |= 0x8000u;
          while (2)
          {
            uint64_t v71 = *v3;
            unint64_t v72 = *(void *)(a2 + v71);
            if (v72 == -1 || v72 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v73 = *(unsigned char *)(*(void *)(a2 + *v7) + v72);
              *(void *)(a2 + v71) = v72 + 1;
              v70 |= (unint64_t)(v73 & 0x7F) << v68;
              if (v73 < 0)
              {
                v68 += 7;
                BOOL v14 = v69++ >= 9;
                if (v14)
                {
                  uint64_t v70 = 0;
                  goto LABEL_190;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v70 = 0;
          }
LABEL_190:
          BOOL v107 = v70 != 0;
          uint64_t v108 = 178;
          goto LABEL_218;
        case 0xEu:
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v23 = 0;
          a1[90] |= 1u;
          while (2)
          {
            uint64_t v76 = *v3;
            unint64_t v77 = *(void *)(a2 + v76);
            if (v77 == -1 || v77 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
              *(void *)(a2 + v76) = v77 + 1;
              v23 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                BOOL v14 = v75++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_194;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_194:
          uint64_t v106 = 12;
          goto LABEL_211;
        case 0xFu:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 60;
          goto LABEL_147;
        case 0x10u:
          char v79 = 0;
          unsigned int v80 = 0;
          uint64_t v23 = 0;
          a1[90] |= 8u;
          while (2)
          {
            uint64_t v81 = *v3;
            unint64_t v82 = *(void *)(a2 + v81);
            if (v82 == -1 || v82 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v83 = *(unsigned char *)(*(void *)(a2 + *v7) + v82);
              *(void *)(a2 + v81) = v82 + 1;
              v23 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                BOOL v14 = v80++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_198;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_198:
          uint64_t v106 = 30;
          goto LABEL_211;
        case 0x11u:
          char v84 = 0;
          unsigned int v85 = 0;
          uint64_t v23 = 0;
          a1[90] |= 0x40u;
          while (2)
          {
            uint64_t v86 = *v3;
            unint64_t v87 = *(void *)(a2 + v86);
            if (v87 == -1 || v87 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v88 = *(unsigned char *)(*(void *)(a2 + *v7) + v87);
              *(void *)(a2 + v86) = v87 + 1;
              v23 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                BOOL v14 = v85++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_202;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_202:
          uint64_t v106 = 50;
          goto LABEL_211;
        case 0x12u:
          char v89 = 0;
          unsigned int v90 = 0;
          uint64_t v23 = 0;
          a1[90] |= 0x80u;
          while (2)
          {
            uint64_t v91 = *v3;
            unint64_t v92 = *(void *)(a2 + v91);
            if (v92 == -1 || v92 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v93 = *(unsigned char *)(*(void *)(a2 + *v7) + v92);
              *(void *)(a2 + v91) = v92 + 1;
              v23 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                BOOL v14 = v90++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_206;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_206:
          uint64_t v106 = 52;
          goto LABEL_211;
        case 0x13u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 36;
          goto LABEL_147;
        case 0x14u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 40;
          goto LABEL_147;
        case 0x15u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 4;
          goto LABEL_147;
        case 0x16u:
          char v94 = 0;
          unsigned int v95 = 0;
          uint64_t v23 = 0;
          a1[90] |= 0x400u;
          while (2)
          {
            uint64_t v96 = *v3;
            unint64_t v97 = *(void *)(a2 + v96);
            if (v97 == -1 || v97 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v98 = *(unsigned char *)(*(void *)(a2 + *v7) + v97);
              *(void *)(a2 + v96) = v97 + 1;
              v23 |= (unint64_t)(v98 & 0x7F) << v94;
              if (v98 < 0)
              {
                v94 += 7;
                BOOL v14 = v95++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_210;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_210:
          uint64_t v106 = 76;
LABEL_211:
          *(_DWORD *)&a1[v106] = v23;
          continue;
        case 0x17u:
          unsigned int v20 = PBReaderReadString();
          if (v20) {
            [a1 addGroupedIssueIds:v20];
          }
          goto LABEL_150;
        case 0x18u:
          char v99 = 0;
          unsigned int v100 = 0;
          uint64_t v101 = 0;
          a1[90] |= 0x2000u;
          break;
        case 0x19u:
          unsigned int v20 = PBReaderReadString();
          if (v20) {
            [a1 addSectionIds:v20];
          }
          goto LABEL_150;
        case 0x1Au:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_147;
        case 0x1Bu:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
LABEL_147:
          unsigned int v105 = *(void **)&a1[v18];
          *(void *)&a1[v18] = v17;

          continue;
        case 0x1Cu:
          unsigned int v20 = PBReaderReadString();
          if (v20) {
            [a1 addLayoutIds:v20];
          }
LABEL_150:

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v102 = *v3;
        unint64_t v103 = *(void *)(a2 + v102);
        if (v103 == -1 || v103 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v104 = *(unsigned char *)(*(void *)(a2 + *v7) + v103);
        *(void *)(a2 + v102) = v103 + 1;
        v101 |= (unint64_t)(v104 & 0x7F) << v99;
        if ((v104 & 0x80) == 0) {
          goto LABEL_215;
        }
        v99 += 7;
        BOOL v14 = v100++ >= 9;
        if (v14)
        {
          uint64_t v101 = 0;
          goto LABEL_217;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_215:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v101 = 0;
      }
LABEL_217:
      BOOL v107 = v101 != 0;
      uint64_t v108 = 176;
LABEL_218:
      *((unsigned char *)a1 + v108) = v107;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBTagRecommendationReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        uint64_t v20 = *v3;
        unint64_t v21 = *(void *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v22 = *(void *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v22 = 0;
        }
        *(void *)(a1 + 8) = v22;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v18 = PBReaderReadString();
        char v19 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v18;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPaidSubscriptionConversionPointExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = &OBJC_IVAR___NTPBNotificationSubscribeUnsubscribe__creativeId;
  char v8 = &OBJC_IVAR___NTPBNotificationSubscribeUnsubscribe__creativeId;
  unsigned int v9 = (int *)MEMORY[0x263F62268];
  unint64_t v10 = &OBJC_IVAR___NTPBNotificationSubscribeUnsubscribe__creativeId;
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v11 = 0;
    unsigned int v12 = 0;
    unint64_t v13 = 0;
    while (1)
    {
      uint64_t v14 = *v3;
      unint64_t v15 = *(void *)(a2 + v14);
      if (v15 == -1 || v15 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v16 = *(unsigned char *)(*(void *)(a2 + *v9) + v15);
      *(void *)(a2 + v14) = v15 + 1;
      v13 |= (unint64_t)(v16 & 0x7F) << v11;
      if ((v16 & 0x80) == 0) {
        goto LABEL_12;
      }
      v11 += 7;
      BOOL v17 = v12++ >= 9;
      if (v17)
      {
        unint64_t v13 = 0;
        int v18 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v18 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v13 = 0;
    }
LABEL_14:
    if (v18 || (v13 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v13 >> 3))
    {
      case 1u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(_WORD *)(a1 + v7[558]) |= 8u;
        while (1)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v9) + v24);
          *(void *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0) {
            goto LABEL_99;
          }
          v20 += 7;
          BOOL v17 = v21++ >= 9;
          if (v17)
          {
            LODWORD(v22) = 0;
            goto LABEL_101;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_99:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_101:
        uint64_t v76 = v8[559];
        goto LABEL_135;
      case 2u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v22 = 0;
        *(_WORD *)(a1 + v7[558]) |= 0x40u;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v9) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v22 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v17 = v28++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_105:
        uint64_t v76 = v10[560];
        goto LABEL_135;
      case 3u:
        uint64_t v32 = PBReaderReadString();
        uint64_t v33 = 120;
        goto LABEL_87;
      case 4u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v22 = 0;
        *(_WORD *)(a1 + v7[558]) |= 2u;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v9) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v22 |= (unint64_t)(v38 & 0x7F) << v34;
            if (v38 < 0)
            {
              v34 += 7;
              BOOL v17 = v35++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_109:
        uint64_t v76 = 64;
        goto LABEL_135;
      case 5u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v22 = 0;
        *(_WORD *)(a1 + v7[558]) |= 4u;
        while (2)
        {
          uint64_t v41 = *v3;
          unint64_t v42 = *(void *)(a2 + v41);
          if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v9) + v42);
            *(void *)(a2 + v41) = v42 + 1;
            v22 |= (unint64_t)(v43 & 0x7F) << v39;
            if (v43 < 0)
            {
              v39 += 7;
              BOOL v17 = v40++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_113:
        uint64_t v76 = 68;
        goto LABEL_135;
      case 6u:
        uint64_t v32 = PBReaderReadString();
        uint64_t v33 = 112;
        goto LABEL_87;
      case 7u:
        uint64_t v32 = PBReaderReadString();
        uint64_t v33 = 8;
        goto LABEL_87;
      case 8u:
        uint64_t v32 = PBReaderReadData();
        uint64_t v33 = 16;
        goto LABEL_87;
      case 9u:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v22 = 0;
        *(_WORD *)(a1 + v7[558]) |= 0x10u;
        while (2)
        {
          uint64_t v46 = *v3;
          unint64_t v47 = *(void *)(a2 + v46);
          if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v9) + v47);
            *(void *)(a2 + v46) = v47 + 1;
            v22 |= (unint64_t)(v48 & 0x7F) << v44;
            if (v48 < 0)
            {
              v44 += 7;
              BOOL v17 = v45++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_117:
        uint64_t v76 = 88;
        goto LABEL_135;
      case 0xAu:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        *(_WORD *)(a1 + v7[558]) |= 0x100u;
        while (2)
        {
          uint64_t v52 = *v3;
          unint64_t v53 = *(void *)(a2 + v52);
          if (v53 == -1 || v53 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(a2 + *v9) + v53);
            *(void *)(a2 + v52) = v53 + 1;
            v51 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v17 = v50++ >= 9;
              if (v17)
              {
                uint64_t v51 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v51 = 0;
        }
LABEL_121:
        BOOL v77 = v51 != 0;
        uint64_t v78 = 141;
        goto LABEL_126;
      case 0xBu:
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        *(_WORD *)(a1 + v7[558]) |= 0x80u;
        while (2)
        {
          uint64_t v58 = *v3;
          unint64_t v59 = *(void *)(a2 + v58);
          if (v59 == -1 || v59 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(a2 + *v9) + v59);
            *(void *)(a2 + v58) = v59 + 1;
            v57 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v17 = v56++ >= 9;
              if (v17)
              {
                uint64_t v57 = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v57 = 0;
        }
LABEL_125:
        BOOL v77 = v57 != 0;
        uint64_t v78 = 140;
LABEL_126:
        *(unsigned char *)(a1 + v78) = v77;
        goto LABEL_136;
      case 0xCu:
        uint64_t v32 = PBReaderReadString();
        uint64_t v33 = 48;
        goto LABEL_87;
      case 0xDu:
        uint64_t v32 = PBReaderReadData();
        uint64_t v33 = 128;
        goto LABEL_87;
      case 0xEu:
        uint64_t v32 = PBReaderReadData();
        uint64_t v33 = 24;
        goto LABEL_87;
      case 0xFu:
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v22 = 0;
        *(_WORD *)(a1 + v7[558]) |= 1u;
        while (2)
        {
          uint64_t v63 = *v3;
          unint64_t v64 = *(void *)(a2 + v63);
          if (v64 == -1 || v64 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(a2 + *v9) + v64);
            *(void *)(a2 + v63) = v64 + 1;
            v22 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v61 += 7;
              BOOL v17 = v62++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_130:
        uint64_t v76 = 40;
        goto LABEL_135;
      case 0x10u:
        uint64_t v32 = PBReaderReadString();
        uint64_t v33 = 96;
        goto LABEL_87;
      case 0x11u:
        uint64_t v32 = PBReaderReadString();
        uint64_t v33 = 32;
        goto LABEL_87;
      case 0x12u:
        uint64_t v32 = PBReaderReadString();
        uint64_t v33 = 80;
LABEL_87:
        unint64_t v66 = *(void **)(a1 + v33);
        *(void *)(a1 + v33) = v32;

        goto LABEL_136;
      case 0x13u:
        char v67 = v7;
        char v68 = v10;
        unsigned int v69 = v8;
        uint64_t v70 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 56), v70);
        if PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v70, a2))
        {
          PBReaderRecallMark();

          char v8 = v69;
          unint64_t v10 = v68;
          int v7 = v67;
LABEL_136:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 0x14u:
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v22 = 0;
        *(_WORD *)(a1 + v7[558]) |= 0x20u;
        while (2)
        {
          uint64_t v73 = *v3;
          unint64_t v74 = *(void *)(a2 + v73);
          if (v74 == -1 || v74 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(a2 + *v9) + v74);
            *(void *)(a2 + v73) = v74 + 1;
            v22 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v71 += 7;
              BOOL v17 = v72++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_134;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_134:
        uint64_t v76 = 104;
LABEL_135:
        *(_DWORD *)(a1 + v76) = v22;
        goto LABEL_136;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_136;
    }
  }
}

uint64_t NTPBViewInfoReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v23 = PBReaderReadString();
        unint64_t v24 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v23;
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 16) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL COMAPPLEFELDSPARPROTOCOLVersionedPersonalizationVectorReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 24;
          goto LABEL_27;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 48;
          goto LABEL_27;
        case 3u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 8;
          goto LABEL_27;
        case 4u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_27;
        case 5u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 40;
          goto LABEL_27;
        case 6u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 32;
LABEL_27:
          uint64_t v19 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          goto LABEL_28;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_28:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBAnalyticsEnvelopeContentTypeConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 0u:
          uint64_t String = (void *)PBReaderReadString();

          id v18 = String;
          uint64_t v19 = 40;
          goto LABEL_31;
        case 1u:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 56) |= 2u;
          while (2)
          {
            uint64_t v24 = *v3;
            unint64_t v25 = *(void *)(a2 + v24);
            if (v25 == -1 || v25 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
              *(void *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                BOOL v14 = v22++ >= 9;
                if (v14)
                {
                  uint64_t v23 = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
LABEL_56:
          uint64_t v45 = 16;
          goto LABEL_70;
        case 2u:
          char v27 = (void *)PBReaderReadString();

          id v18 = v27;
          uint64_t v19 = 24;
          goto LABEL_31;
        case 3u:
          unsigned int v28 = (void *)PBReaderReadString();

          id v18 = v28;
          uint64_t v19 = 32;
LABEL_31:
          *(void *)(a1 + v19) = v18;
          continue;
        case 4u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          *(unsigned char *)(a1 + 56) |= 8u;
          while (2)
          {
            uint64_t v32 = *v3;
            unint64_t v33 = *(void *)(a2 + v32);
            if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
              *(void *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                BOOL v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v31) = 0;
          }
LABEL_60:
          uint64_t v46 = 52;
          goto LABEL_65;
        case 5u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v31 = 0;
          *(unsigned char *)(a1 + 56) |= 4u;
          while (2)
          {
            uint64_t v37 = *v3;
            unint64_t v38 = *(void *)(a2 + v37);
            if (v38 == -1 || v38 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
              *(void *)(a2 + v37) = v38 + 1;
              v31 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                BOOL v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_64;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v31) = 0;
          }
LABEL_64:
          uint64_t v46 = 48;
LABEL_65:
          *(_DWORD *)(a1 + v46) = v31;
          continue;
        case 6u:
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 56) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v42 = *v3;
        unint64_t v43 = *(void *)(a2 + v42);
        if (v43 == -1 || v43 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
        *(void *)(a2 + v42) = v43 + 1;
        v23 |= (unint64_t)(v44 & 0x7F) << v40;
        if ((v44 & 0x80) == 0) {
          goto LABEL_67;
        }
        v40 += 7;
        BOOL v14 = v41++ >= 9;
        if (v14)
        {
          uint64_t v23 = 0;
          goto LABEL_69;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_67:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v23 = 0;
      }
LABEL_69:
      uint64_t v45 = 8;
LABEL_70:
      *(void *)(a1 + v45) = v23;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBEmailOptInInviteReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 8u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_53;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_55;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_55:
          uint64_t v42 = 36;
          goto LABEL_68;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          while (2)
          {
            uint64_t v26 = *v3;
            unint64_t v27 = *(void *)(a2 + v26);
            if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
              *(void *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_59:
          uint64_t v42 = 16;
          goto LABEL_68;
        case 3u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 4u;
          while (2)
          {
            uint64_t v31 = *v3;
            unint64_t v32 = *(void *)(a2 + v31);
            if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
              *(void *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                BOOL v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_63:
          uint64_t v42 = 32;
          goto LABEL_68;
        case 4u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 24;
          goto LABEL_44;
        case 5u:
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 8;
LABEL_44:
          unsigned int v36 = *(void **)(a1 + v35);
          *(void *)(a1 + v35) = v34;

          continue;
        case 6u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v39 = *v3;
        unint64_t v40 = *(void *)(a2 + v39);
        if (v40 == -1 || v40 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
        *(void *)(a2 + v39) = v40 + 1;
        v19 |= (unint64_t)(v41 & 0x7F) << v37;
        if ((v41 & 0x80) == 0) {
          goto LABEL_65;
        }
        v37 += 7;
        BOOL v14 = v38++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_67;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_65:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_67:
      uint64_t v42 = 20;
LABEL_68:
      *(_DWORD *)(a1 + v42) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBCategoryReadFrom(char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 32;
        goto LABEL_23;
      case 2u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 24;
LABEL_23:
        uint64_t v19 = *(NTPBCategory **)&a1[v18];
        *(void *)&a1[v18] = v17;
        goto LABEL_33;
      case 3u:
        PBReaderReadString();
        uint64_t v19 = (NTPBCategory *)objc_claimAutoreleasedReturnValue();
        if (v19) {
          [a1 addRecommendedTopics:v19];
        }
        goto LABEL_33;
      case 4u:
        PBReaderReadString();
        uint64_t v19 = (NTPBCategory *)objc_claimAutoreleasedReturnValue();
        if (v19) {
          [a1 addRecommendedChannels:v19];
        }
        goto LABEL_33;
      case 5u:
        uint64_t v19 = objc_alloc_init(NTPBCategory);
        [a1 addCategoryHierarchy:v19];
        if PBReaderPlaceMark() && (NTPBCategoryReadFrom(v19, a2))
        {
          PBReaderRecallMark();
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 6u:
        PBReaderReadString();
        uint64_t v19 = (NTPBCategory *)objc_claimAutoreleasedReturnValue();
        if (v19) {
          [a1 addCuratedTagIds:v19];
        }
        goto LABEL_33;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

uint64_t NTPBBlindedTokenReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v23 = PBReaderReadData();
        char v24 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v23;
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NTPBWrappingKeyMapEntryReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        uint64_t v18 = 16;
LABEL_22:
        uint64_t v19 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadData();
    uint64_t v18 = 8;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBChannelMembershipRecordReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = objc_alloc_init(NTPBRecordBase);

          *(void *)(a1 + 8) = v17;
          if PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2))
          {
            PBReaderRecallMark();
            continue;
          }
          return 0;
        case 2u:
          uint64_t String = (void *)PBReaderReadString();

          id v20 = String;
          uint64_t v21 = 16;
          goto LABEL_34;
        case 3u:
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          *(unsigned char *)(a1 + 44) |= 1u;
          break;
        case 4u:
          char v28 = (void *)PBReaderReadString();

          id v20 = v28;
          uint64_t v21 = 24;
          goto LABEL_34;
        case 5u:
          char v29 = (void *)PBReaderReadString();

          id v20 = v29;
          uint64_t v21 = 32;
LABEL_34:
          *(void *)(a1 + v21) = v20;
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v25 = *v3;
        unint64_t v26 = *(void *)(a2 + v25);
        if (v26 == -1 || v26 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
        *(void *)(a2 + v25) = v26 + 1;
        v24 |= (unint64_t)(v27 & 0x7F) << v22;
        if ((v27 & 0x80) == 0) {
          goto LABEL_36;
        }
        v22 += 7;
        BOOL v14 = v23++ >= 9;
        if (v14)
        {
          uint64_t v24 = 0;
          goto LABEL_38;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_36:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v24 = 0;
      }
LABEL_38:
      *(unsigned char *)(a1 + 40) = v24 != 0;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleListTodaySectionSpecificConfigReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3))
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
      else
      {
        uint64_t String = (void *)PBReaderReadString();

        *(void *)(a1 + 8) = String;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NTPBPaywallButtonTapReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = &OBJC_IVAR___NTPBNotificationSubscribeUnsubscribe__creativeId;
  char v8 = &OBJC_IVAR___NTPBNotificationSubscribeUnsubscribe__creativeId;
  unsigned int v9 = &OBJC_IVAR___NTPBNotificationSubscribeUnsubscribe__creativeId;
  unint64_t v10 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v11 = 0;
    unsigned int v12 = 0;
    unint64_t v13 = 0;
    while (1)
    {
      uint64_t v14 = *v3;
      unint64_t v15 = *(void *)(a2 + v14);
      if (v15 == -1 || v15 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v16 = *(unsigned char *)(*(void *)(a2 + *v10) + v15);
      *(void *)(a2 + v14) = v15 + 1;
      v13 |= (unint64_t)(v16 & 0x7F) << v11;
      if ((v16 & 0x80) == 0) {
        goto LABEL_12;
      }
      v11 += 7;
      BOOL v17 = v12++ >= 9;
      if (v17)
      {
        unint64_t v13 = 0;
        int v18 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v18 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v13 = 0;
    }
LABEL_14:
    if (v18 || (v13 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v13 >> 3))
    {
      case 1u:
        uint64_t v20 = PBReaderReadString();
        uint64_t v21 = v7[711];
        goto LABEL_47;
      case 2u:
        uint64_t v20 = PBReaderReadString();
        uint64_t v21 = v8[712];
        goto LABEL_47;
      case 3u:
        uint64_t v20 = PBReaderReadString();
        uint64_t v21 = v9[713];
        goto LABEL_47;
      case 4u:
        uint64_t v20 = PBReaderReadData();
        uint64_t v21 = 16;
        goto LABEL_47;
      case 5u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        *(unsigned char *)(a1 + 84) |= 4u;
        while (2)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v10) + v27);
            *(void *)(a2 + v26) = v27 + 1;
            v25 |= (unint64_t)(v28 & 0x7F) << v23;
            if (v28 < 0)
            {
              v23 += 7;
              BOOL v17 = v24++ >= 9;
              if (v17)
              {
                LODWORD(v25) = 0;
                goto LABEL_68;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v25) = 0;
        }
LABEL_68:
        uint64_t v54 = 44;
        goto LABEL_85;
      case 6u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v25 = 0;
        *(unsigned char *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v31 = *v3;
          unint64_t v32 = *(void *)(a2 + v31);
          if (v32 == -1 || v32 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v10) + v32);
            *(void *)(a2 + v31) = v32 + 1;
            v25 |= (unint64_t)(v33 & 0x7F) << v29;
            if (v33 < 0)
            {
              v29 += 7;
              BOOL v17 = v30++ >= 9;
              if (v17)
              {
                LODWORD(v25) = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v25) = 0;
        }
LABEL_72:
        uint64_t v54 = 24;
        goto LABEL_85;
      case 7u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v25 = 0;
        *(unsigned char *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v10) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v25 |= (unint64_t)(v38 & 0x7F) << v34;
            if (v38 < 0)
            {
              v34 += 7;
              BOOL v17 = v35++ >= 9;
              if (v17)
              {
                LODWORD(v25) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v25) = 0;
        }
LABEL_76:
        uint64_t v54 = 40;
        goto LABEL_85;
      case 8u:
        uint64_t v20 = PBReaderReadString();
        uint64_t v21 = 48;
LABEL_47:
        uint64_t v39 = *(void **)(a1 + v21);
        *(void *)(a1 + v21) = v20;

        goto LABEL_86;
      case 9u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v25 = 0;
        *(unsigned char *)(a1 + 84) |= 0x10u;
        while (2)
        {
          uint64_t v42 = *v3;
          unint64_t v43 = *(void *)(a2 + v42);
          if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + *v10) + v43);
            *(void *)(a2 + v42) = v43 + 1;
            v25 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              BOOL v17 = v41++ >= 9;
              if (v17)
              {
                LODWORD(v25) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v25) = 0;
        }
LABEL_80:
        uint64_t v54 = 80;
        goto LABEL_85;
      case 0xAu:
        uint64_t v45 = v9;
        uint64_t v46 = v8;
        unint64_t v47 = v7;
        char v48 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 32), v48);
        if PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v48, a2))
        {
          PBReaderRecallMark();

          int v7 = v47;
          char v8 = v46;
          unsigned int v9 = v45;
LABEL_86:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 0xBu:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v25 = 0;
        *(unsigned char *)(a1 + 84) |= 8u;
        while (2)
        {
          uint64_t v51 = *v3;
          unint64_t v52 = *(void *)(a2 + v51);
          if (v52 == -1 || v52 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(a2 + *v10) + v52);
            *(void *)(a2 + v51) = v52 + 1;
            v25 |= (unint64_t)(v53 & 0x7F) << v49;
            if (v53 < 0)
            {
              v49 += 7;
              BOOL v17 = v50++ >= 9;
              if (v17)
              {
                LODWORD(v25) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v25) = 0;
        }
LABEL_84:
        uint64_t v54 = 56;
LABEL_85:
        *(_DWORD *)(a1 + v54) = v25;
        goto LABEL_86;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_86;
    }
  }
}

uint64_t NTPBAppSessionEndReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 120) |= 0x100u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_127;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_129;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_127:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_129:
        uint64_t v89 = 96;
        goto LABEL_174;
      case 2u:
        unsigned int v24 = objc_alloc_init(NTPBViewInfo);
        [(id)a1 addLastVisibleViews:v24];
        if PBReaderPlaceMark() && (NTPBViewInfoReadFrom((uint64_t)v24, a2))
        {
          PBReaderRecallMark();
LABEL_90:

LABEL_180:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 3u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 120) |= 4u;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_133:
        uint64_t v89 = 32;
        goto LABEL_174;
      case 4u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 120) |= 0x200u;
        while (2)
        {
          uint64_t v32 = *v3;
          unint64_t v33 = *(void *)(a2 + v32);
          if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_137:
        uint64_t v89 = 112;
        goto LABEL_174;
      case 5u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(_WORD *)(a1 + 120) |= 1u;
        while (2)
        {
          uint64_t v38 = *v3;
          unint64_t v39 = *(void *)(a2 + v38);
          if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v39 + 1;
            v37 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              BOOL v14 = v36++ >= 9;
              if (v14)
              {
                uint64_t v37 = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v37 = 0;
        }
LABEL_141:
        *(void *)(a1 + 8) = v37;
        goto LABEL_180;
      case 6u:
        PBReaderReadString();
        unsigned int v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24) {
          [(id)a1 addPaidSubscriptionChannelIds:v24];
        }
        goto LABEL_90;
      case 7u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 120) |= 0x20u;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v19 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v41 += 7;
              BOOL v14 = v42++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_145:
        uint64_t v89 = 76;
        goto LABEL_174;
      case 8u:
        PBReaderReadString();
        unsigned int v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24) {
          [(id)a1 addNotificationChannelIds:v24];
        }
        goto LABEL_90;
      case 9u:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 120) |= 0x10u;
        while (2)
        {
          uint64_t v48 = *v3;
          unint64_t v49 = *(void *)(a2 + v48);
          if (v49 == -1 || v49 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
            *(void *)(a2 + v48) = v49 + 1;
            v19 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v46 += 7;
              BOOL v14 = v47++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_149:
        uint64_t v89 = 72;
        goto LABEL_174;
      case 0xAu:
        PBReaderReadString();
        unsigned int v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24) {
          [(id)a1 addSubscribedFeedIds:v24];
        }
        goto LABEL_90;
      case 0xBu:
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(_WORD *)(a1 + 120) |= 0x400u;
        while (2)
        {
          uint64_t v54 = *v3;
          unint64_t v55 = *(void *)(a2 + v54);
          if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
            *(void *)(a2 + v54) = v55 + 1;
            v53 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v14 = v52++ >= 9;
              if (v14)
              {
                uint64_t v53 = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v53 = 0;
        }
LABEL_153:
        BOOL v90 = v53 != 0;
        uint64_t v91 = 116;
        goto LABEL_179;
      case 0xCu:
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v59 = 0;
        *(_WORD *)(a1 + 120) |= 0x800u;
        while (2)
        {
          uint64_t v60 = *v3;
          unint64_t v61 = *(void *)(a2 + v60);
          if (v61 == -1 || v61 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
            *(void *)(a2 + v60) = v61 + 1;
            v59 |= (unint64_t)(v62 & 0x7F) << v57;
            if (v62 < 0)
            {
              v57 += 7;
              BOOL v14 = v58++ >= 9;
              if (v14)
              {
                uint64_t v59 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v59 = 0;
        }
LABEL_157:
        BOOL v90 = v59 != 0;
        uint64_t v91 = 117;
        goto LABEL_179;
      case 0xDu:
        PBReaderReadString();
        unsigned int v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24) {
          [(id)a1 addAutoSubscribedFeedIds:v24];
        }
        goto LABEL_90;
      case 0xEu:
        PBReaderReadString();
        unsigned int v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24) {
          [(id)a1 addGroupableFeedIds:v24];
        }
        goto LABEL_90;
      case 0xFu:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 120) |= 0x40u;
        while (2)
        {
          uint64_t v65 = *v3;
          unint64_t v66 = *(void *)(a2 + v65);
          if (v66 == -1 || v66 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
            *(void *)(a2 + v65) = v66 + 1;
            v19 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              BOOL v14 = v64++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_161:
        uint64_t v89 = 88;
        goto LABEL_174;
      case 0x10u:
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 120) |= 0x80u;
        while (2)
        {
          uint64_t v70 = *v3;
          unint64_t v71 = *(void *)(a2 + v70);
          if (v71 == -1 || v71 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
            *(void *)(a2 + v70) = v71 + 1;
            v19 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              BOOL v14 = v69++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_165:
        uint64_t v89 = 92;
        goto LABEL_174;
      case 0x11u:
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 120) |= 2u;
        while (2)
        {
          uint64_t v75 = *v3;
          unint64_t v76 = *(void *)(a2 + v75);
          if (v76 == -1 || v76 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
            *(void *)(a2 + v75) = v76 + 1;
            v19 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v73 += 7;
              BOOL v14 = v74++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_169:
        uint64_t v89 = 16;
        goto LABEL_174;
      case 0x12u:
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 120) |= 8u;
        while (2)
        {
          uint64_t v80 = *v3;
          unint64_t v81 = *(void *)(a2 + v80);
          if (v81 == -1 || v81 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v82 = *(unsigned char *)(*(void *)(a2 + *v7) + v81);
            *(void *)(a2 + v80) = v81 + 1;
            v19 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v78 += 7;
              BOOL v14 = v79++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_173:
        uint64_t v89 = 48;
LABEL_174:
        *(_DWORD *)(a1 + v89) = v19;
        goto LABEL_180;
      case 0x13u:
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v85 = 0;
        *(_WORD *)(a1 + 120) |= 0x1000u;
        while (2)
        {
          uint64_t v86 = *v3;
          unint64_t v87 = *(void *)(a2 + v86);
          if (v87 == -1 || v87 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(a2 + *v7) + v87);
            *(void *)(a2 + v86) = v87 + 1;
            v85 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              BOOL v14 = v84++ >= 9;
              if (v14)
              {
                uint64_t v85 = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v85 = 0;
        }
LABEL_178:
        BOOL v90 = v85 != 0;
        uint64_t v91 = 118;
LABEL_179:
        *(unsigned char *)(a1 + v91) = v90;
        goto LABEL_180;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_180;
    }
  }
}

uint64_t COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSArticleHostViewExposureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x20000uLL;
        while (1)
        {
          uint64_t v20 = *v3;
          uint64_t v21 = *(void *)(a2 + v20);
          unint64_t v22 = v21 + 1;
          if (v21 == -1 || v22 > *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v22;
          v19 |= (unint64_t)(v23 & 0x7F) << v17;
          if ((v23 & 0x80) == 0) {
            goto LABEL_658;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_660;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_658:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_660:
        uint64_t v520 = 156;
        goto LABEL_950;
      case 2u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 160;
        goto LABEL_636;
      case 3u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 616;
        goto LABEL_636;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x10000000000000uLL;
        while (2)
        {
          uint64_t v28 = *v3;
          uint64_t v29 = *(void *)(a2 + v28);
          unint64_t v30 = v29 + 1;
          if (v29 == -1 || v30 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v30;
            v19 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_664;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_664:
        uint64_t v520 = 596;
        goto LABEL_950;
      case 5u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x200000uLL;
        while (2)
        {
          uint64_t v34 = *v3;
          uint64_t v35 = *(void *)(a2 + v34);
          unint64_t v36 = v35 + 1;
          if (v35 == -1 || v36 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v36;
            v19 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_668;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_668:
        uint64_t v520 = 200;
        goto LABEL_950;
      case 6u:
        uint64_t v24 = PBReaderReadData();
        uint64_t v25 = 168;
        goto LABEL_636;
      case 7u:
        uint64_t v24 = PBReaderReadData();
        uint64_t v25 = 192;
        goto LABEL_636;
      case 8u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x10000000uLL;
        while (2)
        {
          uint64_t v40 = *v3;
          uint64_t v41 = *(void *)(a2 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v42;
            v19 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_672;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_672:
        uint64_t v520 = 276;
        goto LABEL_950;
      case 9u:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x100000uLL;
        while (2)
        {
          uint64_t v46 = *v3;
          uint64_t v47 = *(void *)(a2 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v48;
            v19 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v14 = v45++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_676;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_676:
        uint64_t v520 = 184;
        goto LABEL_950;
      case 0xAu:
        uint64_t v24 = PBReaderReadData();
        uint64_t v25 = 328;
        goto LABEL_636;
      case 0xBu:
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x80000000uLL;
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v19 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              BOOL v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_680;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_680:
        uint64_t v520 = 304;
        goto LABEL_950;
      case 0xCu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 312;
        goto LABEL_636;
      case 0xDu:
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x40000000uLL;
        while (2)
        {
          uint64_t v58 = *v3;
          uint64_t v59 = *(void *)(a2 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v59);
            *(void *)(a2 + v58) = v60;
            v19 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v14 = v57++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_684;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_684:
        uint64_t v520 = 300;
        goto LABEL_950;
      case 0xEu:
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x2000000000000uLL;
        while (2)
        {
          uint64_t v64 = *v3;
          uint64_t v65 = *(void *)(a2 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
            *(void *)(a2 + v64) = v66;
            v19 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              BOOL v14 = v63++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_688;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_688:
        uint64_t v520 = 560;
        goto LABEL_950;
      case 0xFu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 552;
        goto LABEL_636;
      case 0x10u:
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v70 = 0;
        unsigned int v71 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x80000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v71;
        while (2)
        {
          uint64_t v72 = *v3;
          uint64_t v73 = *(void *)(a2 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(a2 + *v7) + v73);
            *(void *)(a2 + v72) = v74;
            v70 |= (unint64_t)(v75 & 0x7F) << v68;
            if (v75 < 0)
            {
              v68 += 7;
              BOOL v14 = v69++ >= 9;
              if (v14)
              {
                uint64_t v70 = 0;
                goto LABEL_692;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v70 = 0;
        }
LABEL_692:
        BOOL v521 = v70 != 0;
        uint64_t v522 = 806;
        goto LABEL_959;
      case 0x13u:
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x8000uLL;
        while (2)
        {
          uint64_t v79 = *v3;
          uint64_t v80 = *(void *)(a2 + v79);
          unint64_t v81 = v80 + 1;
          if (v80 == -1 || v81 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v82 = *(unsigned char *)(*(void *)(a2 + *v7) + v80);
            *(void *)(a2 + v79) = v81;
            v19 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              BOOL v14 = v78++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_696;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_696:
        uint64_t v520 = 128;
        goto LABEL_950;
      case 0x14u:
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x20000000000uLL;
        while (2)
        {
          uint64_t v85 = *v3;
          uint64_t v86 = *(void *)(a2 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(a2 + *v7) + v86);
            *(void *)(a2 + v85) = v87;
            v19 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              BOOL v14 = v84++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_700;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_700:
        uint64_t v520 = 468;
        goto LABEL_950;
      case 0x15u:
        char v89 = 0;
        unsigned int v90 = 0;
        uint64_t v91 = 0;
        *(_WORD *)(a1 + 820) |= 1u;
        while (2)
        {
          uint64_t v92 = *v3;
          uint64_t v93 = *(void *)(a2 + v92);
          unint64_t v94 = v93 + 1;
          if (v93 == -1 || v94 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v95 = *(unsigned char *)(*(void *)(a2 + *v7) + v93);
            *(void *)(a2 + v92) = v94;
            v91 |= (unint64_t)(v95 & 0x7F) << v89;
            if (v95 < 0)
            {
              v89 += 7;
              BOOL v14 = v90++ >= 9;
              if (v14)
              {
                uint64_t v91 = 0;
                goto LABEL_704;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v91 = 0;
        }
LABEL_704:
        BOOL v521 = v91 != 0;
        uint64_t v522 = 787;
        goto LABEL_959;
      case 0x16u:
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v98 = 0;
        *(_WORD *)(a1 + 820) |= 0x1000u;
        while (2)
        {
          uint64_t v99 = *v3;
          uint64_t v100 = *(void *)(a2 + v99);
          unint64_t v101 = v100 + 1;
          if (v100 == -1 || v101 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v102 = *(unsigned char *)(*(void *)(a2 + *v7) + v100);
            *(void *)(a2 + v99) = v101;
            v98 |= (unint64_t)(v102 & 0x7F) << v96;
            if (v102 < 0)
            {
              v96 += 7;
              BOOL v14 = v97++ >= 9;
              if (v14)
              {
                uint64_t v98 = 0;
                goto LABEL_708;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v98 = 0;
        }
LABEL_708:
        BOOL v521 = v98 != 0;
        uint64_t v522 = 799;
        goto LABEL_959;
      case 0x17u:
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v105 = 0;
        *(_WORD *)(a1 + 820) |= 4u;
        while (2)
        {
          uint64_t v106 = *v3;
          uint64_t v107 = *(void *)(a2 + v106);
          unint64_t v108 = v107 + 1;
          if (v107 == -1 || v108 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v109 = *(unsigned char *)(*(void *)(a2 + *v7) + v107);
            *(void *)(a2 + v106) = v108;
            v105 |= (unint64_t)(v109 & 0x7F) << v103;
            if (v109 < 0)
            {
              v103 += 7;
              BOOL v14 = v104++ >= 9;
              if (v14)
              {
                uint64_t v105 = 0;
                goto LABEL_712;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v105 = 0;
        }
LABEL_712:
        BOOL v521 = v105 != 0;
        uint64_t v522 = 789;
        goto LABEL_959;
      case 0x18u:
        char v110 = 0;
        unsigned int v111 = 0;
        uint64_t v112 = 0;
        *(_WORD *)(a1 + 820) |= 0x100u;
        while (2)
        {
          uint64_t v113 = *v3;
          uint64_t v114 = *(void *)(a2 + v113);
          unint64_t v115 = v114 + 1;
          if (v114 == -1 || v115 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v116 = *(unsigned char *)(*(void *)(a2 + *v7) + v114);
            *(void *)(a2 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              BOOL v14 = v111++ >= 9;
              if (v14)
              {
                uint64_t v112 = 0;
                goto LABEL_716;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v112 = 0;
        }
LABEL_716:
        BOOL v521 = v112 != 0;
        uint64_t v522 = 795;
        goto LABEL_959;
      case 0x19u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 656;
        goto LABEL_636;
      case 0x1Au:
        char v117 = 0;
        unsigned int v118 = 0;
        uint64_t v119 = 0;
        *(void *)(a1 + 812) |= 0x2000000000000000uLL;
        while (2)
        {
          uint64_t v120 = *v3;
          uint64_t v121 = *(void *)(a2 + v120);
          unint64_t v122 = v121 + 1;
          if (v121 == -1 || v122 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v123 = *(unsigned char *)(*(void *)(a2 + *v7) + v121);
            *(void *)(a2 + v120) = v122;
            v119 |= (unint64_t)(v123 & 0x7F) << v117;
            if (v123 < 0)
            {
              v117 += 7;
              BOOL v14 = v118++ >= 9;
              if (v14)
              {
                uint64_t v119 = 0;
                goto LABEL_720;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v119 = 0;
        }
LABEL_720:
        BOOL v521 = v119 != 0;
        uint64_t v522 = 784;
        goto LABEL_959;
      case 0x1Bu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 664;
        goto LABEL_636;
      case 0x1Cu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 744;
        goto LABEL_636;
      case 0x1Du:
        char v124 = 0;
        unsigned int v125 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x1000000uLL;
        while (2)
        {
          uint64_t v126 = *v3;
          uint64_t v127 = *(void *)(a2 + v126);
          unint64_t v128 = v127 + 1;
          if (v127 == -1 || v128 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v129 = *(unsigned char *)(*(void *)(a2 + *v7) + v127);
            *(void *)(a2 + v126) = v128;
            v19 |= (unint64_t)(v129 & 0x7F) << v124;
            if (v129 < 0)
            {
              v124 += 7;
              BOOL v14 = v125++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_724;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_724:
        uint64_t v520 = 240;
        goto LABEL_950;
      case 0x1Eu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 456;
        goto LABEL_636;
      case 0x1Fu:
        PBReaderReadString();
        uint64_t v130 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v130) {
          [(id)a1 addNamedEntities:v130];
        }
        goto LABEL_656;
      case 0x20u:
        char v131 = 0;
        unsigned int v132 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x80000uLL;
        while (2)
        {
          uint64_t v133 = *v3;
          uint64_t v134 = *(void *)(a2 + v133);
          unint64_t v135 = v134 + 1;
          if (v134 == -1 || v135 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v136 = *(unsigned char *)(*(void *)(a2 + *v7) + v134);
            *(void *)(a2 + v133) = v135;
            v19 |= (unint64_t)(v136 & 0x7F) << v131;
            if (v136 < 0)
            {
              v131 += 7;
              BOOL v14 = v132++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_728;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_728:
        uint64_t v520 = 180;
        goto LABEL_950;
      case 0x21u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 680;
        goto LABEL_636;
      case 0x22u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 688;
        goto LABEL_636;
      case 0x23u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 704;
        goto LABEL_636;
      case 0x24u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 648;
        goto LABEL_636;
      case 0x25u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 624;
        goto LABEL_636;
      case 0x26u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 632;
        goto LABEL_636;
      case 0x27u:
        char v137 = 0;
        unsigned int v138 = 0;
        uint64_t v139 = 0;
        *(_WORD *)(a1 + 820) |= 0x80u;
        while (2)
        {
          uint64_t v140 = *v3;
          uint64_t v141 = *(void *)(a2 + v140);
          unint64_t v142 = v141 + 1;
          if (v141 == -1 || v142 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v143 = *(unsigned char *)(*(void *)(a2 + *v7) + v141);
            *(void *)(a2 + v140) = v142;
            v139 |= (unint64_t)(v143 & 0x7F) << v137;
            if (v143 < 0)
            {
              v137 += 7;
              BOOL v14 = v138++ >= 9;
              if (v14)
              {
                uint64_t v139 = 0;
                goto LABEL_732;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v139 = 0;
        }
LABEL_732:
        BOOL v521 = v139 != 0;
        uint64_t v522 = 794;
        goto LABEL_959;
      case 0x28u:
        char v144 = 0;
        unsigned int v145 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x4000000000000uLL;
        while (2)
        {
          uint64_t v146 = *v3;
          uint64_t v147 = *(void *)(a2 + v146);
          unint64_t v148 = v147 + 1;
          if (v147 == -1 || v148 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v149 = *(unsigned char *)(*(void *)(a2 + *v7) + v147);
            *(void *)(a2 + v146) = v148;
            v19 |= (unint64_t)(v149 & 0x7F) << v144;
            if (v149 < 0)
            {
              v144 += 7;
              BOOL v14 = v145++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_736;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_736:
        uint64_t v520 = 564;
        goto LABEL_950;
      case 0x29u:
        char v150 = 0;
        unsigned int v151 = 0;
        uint64_t v152 = 0;
        unsigned int v153 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x100000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v153;
        while (2)
        {
          uint64_t v154 = *v3;
          uint64_t v155 = *(void *)(a2 + v154);
          unint64_t v156 = v155 + 1;
          if (v155 == -1 || v156 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v157 = *(unsigned char *)(*(void *)(a2 + *v7) + v155);
            *(void *)(a2 + v154) = v156;
            v152 |= (unint64_t)(v157 & 0x7F) << v150;
            if (v157 < 0)
            {
              v150 += 7;
              BOOL v14 = v151++ >= 9;
              if (v14)
              {
                uint64_t v152 = 0;
                goto LABEL_740;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v152 = 0;
        }
LABEL_740:
        BOOL v521 = v152 != 0;
        uint64_t v522 = 807;
        goto LABEL_959;
      case 0x2Au:
        char v158 = 0;
        unsigned int v159 = 0;
        uint64_t v160 = 0;
        unsigned int v161 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x40000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v161;
        while (2)
        {
          uint64_t v162 = *v3;
          uint64_t v163 = *(void *)(a2 + v162);
          unint64_t v164 = v163 + 1;
          if (v163 == -1 || v164 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v165 = *(unsigned char *)(*(void *)(a2 + *v7) + v163);
            *(void *)(a2 + v162) = v164;
            v160 |= (unint64_t)(v165 & 0x7F) << v158;
            if (v165 < 0)
            {
              v158 += 7;
              BOOL v14 = v159++ >= 9;
              if (v14)
              {
                uint64_t v160 = 0;
                goto LABEL_744;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v160 = 0;
        }
LABEL_744:
        BOOL v521 = v160 != 0;
        uint64_t v522 = 805;
        goto LABEL_959;
      case 0x2Bu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 672;
        goto LABEL_636;
      case 0x2Cu:
        char v166 = 0;
        unsigned int v167 = 0;
        uint64_t v168 = 0;
        *(void *)(a1 + 812) |= 0x400uLL;
        while (2)
        {
          uint64_t v169 = *v3;
          uint64_t v170 = *(void *)(a2 + v169);
          unint64_t v171 = v170 + 1;
          if (v170 == -1 || v171 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v172 = *(unsigned char *)(*(void *)(a2 + *v7) + v170);
            *(void *)(a2 + v169) = v171;
            v168 |= (unint64_t)(v172 & 0x7F) << v166;
            if (v172 < 0)
            {
              v166 += 7;
              BOOL v14 = v167++ >= 9;
              if (v14)
              {
                uint64_t v168 = 0;
                goto LABEL_748;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v168 = 0;
        }
LABEL_748:
        uint64_t v523 = 88;
        goto LABEL_893;
      case 0x2Du:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 736;
        goto LABEL_636;
      case 0x2Eu:
        char v173 = 0;
        unsigned int v174 = 0;
        uint64_t v175 = 0;
        *(_WORD *)(a1 + 820) |= 0x400u;
        while (2)
        {
          uint64_t v176 = *v3;
          uint64_t v177 = *(void *)(a2 + v176);
          unint64_t v178 = v177 + 1;
          if (v177 == -1 || v178 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v179 = *(unsigned char *)(*(void *)(a2 + *v7) + v177);
            *(void *)(a2 + v176) = v178;
            v175 |= (unint64_t)(v179 & 0x7F) << v173;
            if (v179 < 0)
            {
              v173 += 7;
              BOOL v14 = v174++ >= 9;
              if (v14)
              {
                uint64_t v175 = 0;
                goto LABEL_752;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v175 = 0;
        }
LABEL_752:
        BOOL v521 = v175 != 0;
        uint64_t v522 = 797;
        goto LABEL_959;
      case 0x2Fu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 352;
        goto LABEL_636;
      case 0x30u:
        char v180 = 0;
        unsigned int v181 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x4000000000uLL;
        while (2)
        {
          uint64_t v182 = *v3;
          uint64_t v183 = *(void *)(a2 + v182);
          unint64_t v184 = v183 + 1;
          if (v183 == -1 || v184 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v185 = *(unsigned char *)(*(void *)(a2 + *v7) + v183);
            *(void *)(a2 + v182) = v184;
            v19 |= (unint64_t)(v185 & 0x7F) << v180;
            if (v185 < 0)
            {
              v180 += 7;
              BOOL v14 = v181++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_756;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_756:
        uint64_t v520 = 372;
        goto LABEL_950;
      case 0x31u:
        char v186 = 0;
        unsigned int v187 = 0;
        uint64_t v188 = 0;
        unsigned int v189 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x10000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v189;
        while (2)
        {
          uint64_t v190 = *v3;
          uint64_t v191 = *(void *)(a2 + v190);
          unint64_t v192 = v191 + 1;
          if (v191 == -1 || v192 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v193 = *(unsigned char *)(*(void *)(a2 + *v7) + v191);
            *(void *)(a2 + v190) = v192;
            v188 |= (unint64_t)(v193 & 0x7F) << v186;
            if (v193 < 0)
            {
              v186 += 7;
              BOOL v14 = v187++ >= 9;
              if (v14)
              {
                uint64_t v188 = 0;
                goto LABEL_760;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v188 = 0;
        }
LABEL_760:
        BOOL v521 = v188 != 0;
        uint64_t v522 = 803;
        goto LABEL_959;
      case 0x32u:
        char v194 = 0;
        unsigned int v195 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x10000uLL;
        while (2)
        {
          uint64_t v196 = *v3;
          uint64_t v197 = *(void *)(a2 + v196);
          unint64_t v198 = v197 + 1;
          if (v197 == -1 || v198 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v199 = *(unsigned char *)(*(void *)(a2 + *v7) + v197);
            *(void *)(a2 + v196) = v198;
            v19 |= (unint64_t)(v199 & 0x7F) << v194;
            if (v199 < 0)
            {
              v194 += 7;
              BOOL v14 = v195++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_764;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_764:
        uint64_t v520 = 152;
        goto LABEL_950;
      case 0x33u:
        char v200 = 0;
        unsigned int v201 = 0;
        uint64_t v202 = 0;
        unsigned int v203 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x200000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v203;
        while (2)
        {
          uint64_t v204 = *v3;
          uint64_t v205 = *(void *)(a2 + v204);
          unint64_t v206 = v205 + 1;
          if (v205 == -1 || v206 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v207 = *(unsigned char *)(*(void *)(a2 + *v7) + v205);
            *(void *)(a2 + v204) = v206;
            v202 |= (unint64_t)(v207 & 0x7F) << v200;
            if (v207 < 0)
            {
              v200 += 7;
              BOOL v14 = v201++ >= 9;
              if (v14)
              {
                uint64_t v202 = 0;
                goto LABEL_768;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v202 = 0;
        }
LABEL_768:
        BOOL v521 = v202 != 0;
        uint64_t v522 = 808;
        goto LABEL_959;
      case 0x34u:
        char v208 = 0;
        unsigned int v209 = 0;
        uint64_t v210 = 0;
        *(_WORD *)(a1 + 820) |= 0x8000u;
        while (2)
        {
          uint64_t v211 = *v3;
          uint64_t v212 = *(void *)(a2 + v211);
          unint64_t v213 = v212 + 1;
          if (v212 == -1 || v213 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v214 = *(unsigned char *)(*(void *)(a2 + *v7) + v212);
            *(void *)(a2 + v211) = v213;
            v210 |= (unint64_t)(v214 & 0x7F) << v208;
            if (v214 < 0)
            {
              v208 += 7;
              BOOL v14 = v209++ >= 9;
              if (v14)
              {
                uint64_t v210 = 0;
                goto LABEL_772;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v210 = 0;
        }
LABEL_772:
        BOOL v521 = v210 != 0;
        uint64_t v522 = 802;
        goto LABEL_959;
      case 0x35u:
        char v215 = 0;
        unsigned int v216 = 0;
        uint64_t v217 = 0;
        *(_WORD *)(a1 + 820) |= 0x200u;
        while (2)
        {
          uint64_t v218 = *v3;
          uint64_t v219 = *(void *)(a2 + v218);
          unint64_t v220 = v219 + 1;
          if (v219 == -1 || v220 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v221 = *(unsigned char *)(*(void *)(a2 + *v7) + v219);
            *(void *)(a2 + v218) = v220;
            v217 |= (unint64_t)(v221 & 0x7F) << v215;
            if (v221 < 0)
            {
              v215 += 7;
              BOOL v14 = v216++ >= 9;
              if (v14)
              {
                uint64_t v217 = 0;
                goto LABEL_776;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v217 = 0;
        }
LABEL_776:
        BOOL v521 = v217 != 0;
        uint64_t v522 = 796;
        goto LABEL_959;
      case 0x36u:
        char v222 = 0;
        unsigned int v223 = 0;
        uint64_t v224 = 0;
        *(_WORD *)(a1 + 820) |= 0x2000u;
        while (2)
        {
          uint64_t v225 = *v3;
          uint64_t v226 = *(void *)(a2 + v225);
          unint64_t v227 = v226 + 1;
          if (v226 == -1 || v227 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v228 = *(unsigned char *)(*(void *)(a2 + *v7) + v226);
            *(void *)(a2 + v225) = v227;
            v224 |= (unint64_t)(v228 & 0x7F) << v222;
            if (v228 < 0)
            {
              v222 += 7;
              BOOL v14 = v223++ >= 9;
              if (v14)
              {
                uint64_t v224 = 0;
                goto LABEL_780;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v224 = 0;
        }
LABEL_780:
        BOOL v521 = v224 != 0;
        uint64_t v522 = 800;
        goto LABEL_959;
      case 0x37u:
        char v229 = 0;
        unsigned int v230 = 0;
        uint64_t v231 = 0;
        *(_WORD *)(a1 + 820) |= 0x40u;
        while (2)
        {
          uint64_t v232 = *v3;
          uint64_t v233 = *(void *)(a2 + v232);
          unint64_t v234 = v233 + 1;
          if (v233 == -1 || v234 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v235 = *(unsigned char *)(*(void *)(a2 + *v7) + v233);
            *(void *)(a2 + v232) = v234;
            v231 |= (unint64_t)(v235 & 0x7F) << v229;
            if (v235 < 0)
            {
              v229 += 7;
              BOOL v14 = v230++ >= 9;
              if (v14)
              {
                uint64_t v231 = 0;
                goto LABEL_784;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v231 = 0;
        }
LABEL_784:
        BOOL v521 = v231 != 0;
        uint64_t v522 = 793;
        goto LABEL_959;
      case 0x38u:
        char v236 = 0;
        unsigned int v237 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x2000000uLL;
        while (2)
        {
          uint64_t v238 = *v3;
          uint64_t v239 = *(void *)(a2 + v238);
          unint64_t v240 = v239 + 1;
          if (v239 == -1 || v240 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v241 = *(unsigned char *)(*(void *)(a2 + *v7) + v239);
            *(void *)(a2 + v238) = v240;
            v19 |= (unint64_t)(v241 & 0x7F) << v236;
            if (v241 < 0)
            {
              v236 += 7;
              BOOL v14 = v237++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_788;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_788:
        uint64_t v520 = 244;
        goto LABEL_950;
      case 0x39u:
        char v242 = 0;
        unsigned int v243 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x4000000uLL;
        while (2)
        {
          uint64_t v244 = *v3;
          uint64_t v245 = *(void *)(a2 + v244);
          unint64_t v246 = v245 + 1;
          if (v245 == -1 || v246 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v247 = *(unsigned char *)(*(void *)(a2 + *v7) + v245);
            *(void *)(a2 + v244) = v246;
            v19 |= (unint64_t)(v247 & 0x7F) << v242;
            if (v247 < 0)
            {
              v242 += 7;
              BOOL v14 = v243++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_792;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_792:
        uint64_t v520 = 248;
        goto LABEL_950;
      case 0x3Au:
        char v248 = 0;
        unsigned int v249 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x1000000000000uLL;
        while (2)
        {
          uint64_t v250 = *v3;
          uint64_t v251 = *(void *)(a2 + v250);
          unint64_t v252 = v251 + 1;
          if (v251 == -1 || v252 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v253 = *(unsigned char *)(*(void *)(a2 + *v7) + v251);
            *(void *)(a2 + v250) = v252;
            v19 |= (unint64_t)(v253 & 0x7F) << v248;
            if (v253 < 0)
            {
              v248 += 7;
              BOOL v14 = v249++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_796;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_796:
        uint64_t v520 = 544;
        goto LABEL_950;
      case 0x3Bu:
        char v254 = 0;
        unsigned int v255 = 0;
        uint64_t v256 = 0;
        *(_WORD *)(a1 + 820) |= 0x4000u;
        while (2)
        {
          uint64_t v257 = *v3;
          uint64_t v258 = *(void *)(a2 + v257);
          unint64_t v259 = v258 + 1;
          if (v258 == -1 || v259 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v260 = *(unsigned char *)(*(void *)(a2 + *v7) + v258);
            *(void *)(a2 + v257) = v259;
            v256 |= (unint64_t)(v260 & 0x7F) << v254;
            if (v260 < 0)
            {
              v254 += 7;
              BOOL v14 = v255++ >= 9;
              if (v14)
              {
                uint64_t v256 = 0;
                goto LABEL_800;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v256 = 0;
        }
LABEL_800:
        BOOL v521 = v256 != 0;
        uint64_t v522 = 801;
        goto LABEL_959;
      case 0x3Cu:
        *(void *)(a1 + 812) |= 0x40000000000uLL;
        uint64_t v261 = *v3;
        unint64_t v262 = *(void *)(a2 + v261);
        if (v262 <= 0xFFFFFFFFFFFFFFFBLL && v262 + 4 <= *(void *)(a2 + *v4))
        {
          int v263 = *(_DWORD *)(*(void *)(a2 + *v7) + v262);
          *(void *)(a2 + v261) = v262 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v263 = 0;
        }
        *(_DWORD *)(a1 + 472) = v263;
        goto LABEL_985;
      case 0x3Du:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 216;
        goto LABEL_636;
      case 0x3Eu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 224;
        goto LABEL_636;
      case 0x3Fu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 256;
        goto LABEL_636;
      case 0x40u:
        char v264 = 0;
        unsigned int v265 = 0;
        uint64_t v266 = 0;
        unsigned int v267 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x400000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v267;
        while (2)
        {
          uint64_t v268 = *v3;
          uint64_t v269 = *(void *)(a2 + v268);
          unint64_t v270 = v269 + 1;
          if (v269 == -1 || v270 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v271 = *(unsigned char *)(*(void *)(a2 + *v7) + v269);
            *(void *)(a2 + v268) = v270;
            v266 |= (unint64_t)(v271 & 0x7F) << v264;
            if (v271 < 0)
            {
              v264 += 7;
              BOOL v14 = v265++ >= 9;
              if (v14)
              {
                uint64_t v266 = 0;
                goto LABEL_804;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v266 = 0;
        }
LABEL_804:
        BOOL v521 = v266 != 0;
        uint64_t v522 = 809;
        goto LABEL_959;
      case 0x41u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 536;
        goto LABEL_636;
      case 0x42u:
        char v272 = 0;
        unsigned int v273 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x800000000000uLL;
        while (2)
        {
          uint64_t v274 = *v3;
          uint64_t v275 = *(void *)(a2 + v274);
          unint64_t v276 = v275 + 1;
          if (v275 == -1 || v276 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v277 = *(unsigned char *)(*(void *)(a2 + *v7) + v275);
            *(void *)(a2 + v274) = v276;
            v19 |= (unint64_t)(v277 & 0x7F) << v272;
            if (v277 < 0)
            {
              v272 += 7;
              BOOL v14 = v273++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_808;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_808:
        uint64_t v520 = 520;
        goto LABEL_950;
      case 0x43u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 528;
        goto LABEL_636;
      case 0x44u:
        char v278 = 0;
        unsigned int v279 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x200000000uLL;
        while (2)
        {
          uint64_t v280 = *v3;
          uint64_t v281 = *(void *)(a2 + v280);
          unint64_t v282 = v281 + 1;
          if (v281 == -1 || v282 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v283 = *(unsigned char *)(*(void *)(a2 + *v7) + v281);
            *(void *)(a2 + v280) = v282;
            v19 |= (unint64_t)(v283 & 0x7F) << v278;
            if (v283 < 0)
            {
              v278 += 7;
              BOOL v14 = v279++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_812;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_812:
        uint64_t v520 = 344;
        goto LABEL_950;
      case 0x45u:
        char v284 = 0;
        unsigned int v285 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x400000000uLL;
        while (2)
        {
          uint64_t v286 = *v3;
          uint64_t v287 = *(void *)(a2 + v286);
          unint64_t v288 = v287 + 1;
          if (v287 == -1 || v288 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v289 = *(unsigned char *)(*(void *)(a2 + *v7) + v287);
            *(void *)(a2 + v286) = v288;
            v19 |= (unint64_t)(v289 & 0x7F) << v284;
            if (v289 < 0)
            {
              v284 += 7;
              BOOL v14 = v285++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_816;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_816:
        uint64_t v520 = 348;
        goto LABEL_950;
      case 0x46u:
        char v290 = 0;
        unsigned int v291 = 0;
        uint64_t v292 = 0;
        *(void *)(a1 + 812) |= 0x4000000000000000uLL;
        while (2)
        {
          uint64_t v293 = *v3;
          uint64_t v294 = *(void *)(a2 + v293);
          unint64_t v295 = v294 + 1;
          if (v294 == -1 || v295 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v296 = *(unsigned char *)(*(void *)(a2 + *v7) + v294);
            *(void *)(a2 + v293) = v295;
            v292 |= (unint64_t)(v296 & 0x7F) << v290;
            if (v296 < 0)
            {
              v290 += 7;
              BOOL v14 = v291++ >= 9;
              if (v14)
              {
                uint64_t v292 = 0;
                goto LABEL_820;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v292 = 0;
        }
LABEL_820:
        BOOL v521 = v292 != 0;
        uint64_t v522 = 785;
        goto LABEL_959;
      case 0x47u:
        char v297 = 0;
        unsigned int v298 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x10000000000uLL;
        while (2)
        {
          uint64_t v299 = *v3;
          uint64_t v300 = *(void *)(a2 + v299);
          unint64_t v301 = v300 + 1;
          if (v300 == -1 || v301 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v302 = *(unsigned char *)(*(void *)(a2 + *v7) + v300);
            *(void *)(a2 + v299) = v301;
            v19 |= (unint64_t)(v302 & 0x7F) << v297;
            if (v302 < 0)
            {
              v297 += 7;
              BOOL v14 = v298++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_824;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_824:
        uint64_t v520 = 464;
        goto LABEL_950;
      case 0x48u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 568;
        goto LABEL_636;
      case 0x49u:
        char v303 = 0;
        unsigned int v304 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x800000000000000uLL;
        while (2)
        {
          uint64_t v305 = *v3;
          uint64_t v306 = *(void *)(a2 + v305);
          unint64_t v307 = v306 + 1;
          if (v306 == -1 || v307 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v308 = *(unsigned char *)(*(void *)(a2 + *v7) + v306);
            *(void *)(a2 + v305) = v307;
            v19 |= (unint64_t)(v308 & 0x7F) << v303;
            if (v308 < 0)
            {
              v303 += 7;
              BOOL v14 = v304++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_828;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_828:
        uint64_t v520 = 776;
        goto LABEL_950;
      case 0x4Au:
        char v309 = 0;
        unsigned int v310 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x1000000000000000uLL;
        while (2)
        {
          uint64_t v311 = *v3;
          uint64_t v312 = *(void *)(a2 + v311);
          unint64_t v313 = v312 + 1;
          if (v312 == -1 || v313 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v314 = *(unsigned char *)(*(void *)(a2 + *v7) + v312);
            *(void *)(a2 + v311) = v313;
            v19 |= (unint64_t)(v314 & 0x7F) << v309;
            if (v314 < 0)
            {
              v309 += 7;
              BOOL v14 = v310++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_832;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_832:
        uint64_t v520 = 780;
        goto LABEL_950;
      case 0x4Bu:
        char v315 = 0;
        unsigned int v316 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x400000000000000uLL;
        while (2)
        {
          uint64_t v317 = *v3;
          uint64_t v318 = *(void *)(a2 + v317);
          unint64_t v319 = v318 + 1;
          if (v318 == -1 || v319 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v320 = *(unsigned char *)(*(void *)(a2 + *v7) + v318);
            *(void *)(a2 + v317) = v319;
            v19 |= (unint64_t)(v320 & 0x7F) << v315;
            if (v320 < 0)
            {
              v315 += 7;
              BOOL v14 = v316++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_836;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_836:
        uint64_t v520 = 760;
        goto LABEL_950;
      case 0x4Cu:
        uint64_t v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        [(id)a1 addFractionalCohortMembership:v130];
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x4Du:
        char v321 = 0;
        unsigned int v322 = 0;
        uint64_t v323 = 0;
        *(_WORD *)(a1 + 820) |= 0x20u;
        while (2)
        {
          uint64_t v324 = *v3;
          uint64_t v325 = *(void *)(a2 + v324);
          unint64_t v326 = v325 + 1;
          if (v325 == -1 || v326 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v327 = *(unsigned char *)(*(void *)(a2 + *v7) + v325);
            *(void *)(a2 + v324) = v326;
            v323 |= (unint64_t)(v327 & 0x7F) << v321;
            if (v327 < 0)
            {
              v321 += 7;
              BOOL v14 = v322++ >= 9;
              if (v14)
              {
                uint64_t v323 = 0;
                goto LABEL_840;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v323 = 0;
        }
LABEL_840:
        BOOL v521 = v323 != 0;
        uint64_t v522 = 792;
        goto LABEL_959;
      case 0x4Eu:
        char v328 = 0;
        unsigned int v329 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x800000uLL;
        while (2)
        {
          uint64_t v330 = *v3;
          uint64_t v331 = *(void *)(a2 + v330);
          unint64_t v332 = v331 + 1;
          if (v331 == -1 || v332 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v333 = *(unsigned char *)(*(void *)(a2 + *v7) + v331);
            *(void *)(a2 + v330) = v332;
            v19 |= (unint64_t)(v333 & 0x7F) << v328;
            if (v333 < 0)
            {
              v328 += 7;
              BOOL v14 = v329++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_844;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_844:
        uint64_t v520 = 208;
        goto LABEL_950;
      case 0x4Fu:
        char v334 = 0;
        unsigned int v335 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x400000uLL;
        while (2)
        {
          uint64_t v336 = *v3;
          uint64_t v337 = *(void *)(a2 + v336);
          unint64_t v338 = v337 + 1;
          if (v337 == -1 || v338 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v339 = *(unsigned char *)(*(void *)(a2 + *v7) + v337);
            *(void *)(a2 + v336) = v338;
            v19 |= (unint64_t)(v339 & 0x7F) << v334;
            if (v339 < 0)
            {
              v334 += 7;
              BOOL v14 = v335++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_848;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_848:
        uint64_t v520 = 204;
        goto LABEL_950;
      case 0x50u:
        char v340 = 0;
        unsigned int v341 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x200000000000000uLL;
        while (2)
        {
          uint64_t v342 = *v3;
          uint64_t v343 = *(void *)(a2 + v342);
          unint64_t v344 = v343 + 1;
          if (v343 == -1 || v344 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v345 = *(unsigned char *)(*(void *)(a2 + *v7) + v343);
            *(void *)(a2 + v342) = v344;
            v19 |= (unint64_t)(v345 & 0x7F) << v340;
            if (v345 < 0)
            {
              v340 += 7;
              BOOL v14 = v341++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_852;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_852:
        uint64_t v520 = 720;
        goto LABEL_950;
      case 0x51u:
        char v346 = 0;
        unsigned int v347 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x80000000000000uLL;
        while (2)
        {
          uint64_t v348 = *v3;
          uint64_t v349 = *(void *)(a2 + v348);
          unint64_t v350 = v349 + 1;
          if (v349 == -1 || v350 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v351 = *(unsigned char *)(*(void *)(a2 + *v7) + v349);
            *(void *)(a2 + v348) = v350;
            v19 |= (unint64_t)(v351 & 0x7F) << v346;
            if (v351 < 0)
            {
              v346 += 7;
              BOOL v14 = v347++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_856;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_856:
        uint64_t v520 = 712;
        goto LABEL_950;
      case 0x52u:
        char v352 = 0;
        unsigned int v353 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x100000000000000uLL;
        while (2)
        {
          uint64_t v354 = *v3;
          uint64_t v355 = *(void *)(a2 + v354);
          unint64_t v356 = v355 + 1;
          if (v355 == -1 || v356 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v357 = *(unsigned char *)(*(void *)(a2 + *v7) + v355);
            *(void *)(a2 + v354) = v356;
            v19 |= (unint64_t)(v357 & 0x7F) << v352;
            if (v357 < 0)
            {
              v352 += 7;
              BOOL v14 = v353++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_860;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_860:
        uint64_t v520 = 716;
        goto LABEL_950;
      case 0x53u:
        char v358 = 0;
        unsigned int v359 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x2000000000uLL;
        while (2)
        {
          uint64_t v360 = *v3;
          uint64_t v361 = *(void *)(a2 + v360);
          unint64_t v362 = v361 + 1;
          if (v361 == -1 || v362 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v363 = *(unsigned char *)(*(void *)(a2 + *v7) + v361);
            *(void *)(a2 + v360) = v362;
            v19 |= (unint64_t)(v363 & 0x7F) << v358;
            if (v363 < 0)
            {
              v358 += 7;
              BOOL v14 = v359++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_864;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_864:
        uint64_t v520 = 368;
        goto LABEL_950;
      case 0x54u:
        *(void *)(a1 + 812) |= 0x200uLL;
        uint64_t v364 = *v3;
        unint64_t v365 = *(void *)(a2 + v364);
        if (v365 <= 0xFFFFFFFFFFFFFFF7 && v365 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v365);
          *(void *)(a2 + v364) = v365 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 80;
        goto LABEL_984;
      case 0x55u:
        char v367 = 0;
        unsigned int v368 = 0;
        uint64_t v369 = 0;
        unsigned int v370 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x20000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(unsigned char *)(a1 + 822) = v370;
        while (2)
        {
          uint64_t v371 = *v3;
          uint64_t v372 = *(void *)(a2 + v371);
          unint64_t v373 = v372 + 1;
          if (v372 == -1 || v373 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v374 = *(unsigned char *)(*(void *)(a2 + *v7) + v372);
            *(void *)(a2 + v371) = v373;
            v369 |= (unint64_t)(v374 & 0x7F) << v367;
            if (v374 < 0)
            {
              v367 += 7;
              BOOL v14 = v368++ >= 9;
              if (v14)
              {
                uint64_t v369 = 0;
                goto LABEL_868;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v369 = 0;
        }
LABEL_868:
        BOOL v521 = v369 != 0;
        uint64_t v522 = 804;
        goto LABEL_959;
      case 0x56u:
        char v375 = 0;
        unsigned int v376 = 0;
        uint64_t v377 = 0;
        *(_WORD *)(a1 + 820) |= 0x800u;
        while (2)
        {
          uint64_t v378 = *v3;
          uint64_t v379 = *(void *)(a2 + v378);
          unint64_t v380 = v379 + 1;
          if (v379 == -1 || v380 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v381 = *(unsigned char *)(*(void *)(a2 + *v7) + v379);
            *(void *)(a2 + v378) = v380;
            v377 |= (unint64_t)(v381 & 0x7F) << v375;
            if (v381 < 0)
            {
              v375 += 7;
              BOOL v14 = v376++ >= 9;
              if (v14)
              {
                uint64_t v377 = 0;
                goto LABEL_872;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v377 = 0;
        }
LABEL_872:
        BOOL v521 = v377 != 0;
        uint64_t v522 = 798;
        goto LABEL_959;
      case 0x57u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 512;
        goto LABEL_636;
      case 0x58u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 576;
        goto LABEL_636;
      case 0x59u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 144;
        goto LABEL_636;
      case 0x5Au:
        char v382 = 0;
        unsigned int v383 = 0;
        uint64_t v384 = 0;
        *(void *)(a1 + 812) |= 0x8000000000000000;
        while (2)
        {
          uint64_t v385 = *v3;
          uint64_t v386 = *(void *)(a2 + v385);
          unint64_t v387 = v386 + 1;
          if (v386 == -1 || v387 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v388 = *(unsigned char *)(*(void *)(a2 + *v7) + v386);
            *(void *)(a2 + v385) = v387;
            v384 |= (unint64_t)(v388 & 0x7F) << v382;
            if (v388 < 0)
            {
              v382 += 7;
              BOOL v14 = v383++ >= 9;
              if (v14)
              {
                uint64_t v384 = 0;
                goto LABEL_876;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v384 = 0;
        }
LABEL_876:
        BOOL v521 = v384 != 0;
        uint64_t v522 = 786;
        goto LABEL_959;
      case 0x5Bu:
        uint64_t v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSWidgetEngagement);
        objc_storeStrong((id *)(a1 + 768), v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSWidgetEngagementReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x5Cu:
        char v389 = 0;
        unsigned int v390 = 0;
        uint64_t v168 = 0;
        *(void *)(a1 + 812) |= 0x1000uLL;
        while (2)
        {
          uint64_t v391 = *v3;
          uint64_t v392 = *(void *)(a2 + v391);
          unint64_t v393 = v392 + 1;
          if (v392 == -1 || v393 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v394 = *(unsigned char *)(*(void *)(a2 + *v7) + v392);
            *(void *)(a2 + v391) = v393;
            v168 |= (unint64_t)(v394 & 0x7F) << v389;
            if (v394 < 0)
            {
              v389 += 7;
              BOOL v14 = v390++ >= 9;
              if (v14)
              {
                uint64_t v168 = 0;
                goto LABEL_880;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v168 = 0;
        }
LABEL_880:
        uint64_t v523 = 104;
        goto LABEL_893;
      case 0x5Du:
        char v395 = 0;
        unsigned int v396 = 0;
        uint64_t v168 = 0;
        *(void *)(a1 + 812) |= 8uLL;
        while (2)
        {
          uint64_t v397 = *v3;
          uint64_t v398 = *(void *)(a2 + v397);
          unint64_t v399 = v398 + 1;
          if (v398 == -1 || v399 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v400 = *(unsigned char *)(*(void *)(a2 + *v7) + v398);
            *(void *)(a2 + v397) = v399;
            v168 |= (unint64_t)(v400 & 0x7F) << v395;
            if (v400 < 0)
            {
              v395 += 7;
              BOOL v14 = v396++ >= 9;
              if (v14)
              {
                uint64_t v168 = 0;
                goto LABEL_884;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v168 = 0;
        }
LABEL_884:
        uint64_t v523 = 32;
        goto LABEL_893;
      case 0x5Eu:
        char v401 = 0;
        unsigned int v402 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x100000000uLL;
        while (2)
        {
          uint64_t v403 = *v3;
          uint64_t v404 = *(void *)(a2 + v403);
          unint64_t v405 = v404 + 1;
          if (v404 == -1 || v405 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v406 = *(unsigned char *)(*(void *)(a2 + *v7) + v404);
            *(void *)(a2 + v403) = v405;
            v19 |= (unint64_t)(v406 & 0x7F) << v401;
            if (v406 < 0)
            {
              v401 += 7;
              BOOL v14 = v402++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_888;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_888:
        uint64_t v520 = 320;
        goto LABEL_950;
      case 0x5Fu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 400;
        goto LABEL_636;
      case 0x60u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 416;
        goto LABEL_636;
      case 0x61u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 392;
        goto LABEL_636;
      case 0x62u:
        char v407 = 0;
        unsigned int v408 = 0;
        uint64_t v168 = 0;
        *(void *)(a1 + 812) |= 0x800uLL;
        while (2)
        {
          uint64_t v409 = *v3;
          uint64_t v410 = *(void *)(a2 + v409);
          unint64_t v411 = v410 + 1;
          if (v410 == -1 || v411 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v412 = *(unsigned char *)(*(void *)(a2 + *v7) + v410);
            *(void *)(a2 + v409) = v411;
            v168 |= (unint64_t)(v412 & 0x7F) << v407;
            if (v412 < 0)
            {
              v407 += 7;
              BOOL v14 = v408++ >= 9;
              if (v14)
              {
                uint64_t v168 = 0;
                goto LABEL_892;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v168 = 0;
        }
LABEL_892:
        uint64_t v523 = 96;
LABEL_893:
        *(void *)(a1 + v523) = v168;
        goto LABEL_985;
      case 0x63u:
        char v413 = 0;
        unsigned int v414 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x800000000uLL;
        while (2)
        {
          uint64_t v415 = *v3;
          uint64_t v416 = *(void *)(a2 + v415);
          unint64_t v417 = v416 + 1;
          if (v416 == -1 || v417 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v418 = *(unsigned char *)(*(void *)(a2 + *v7) + v416);
            *(void *)(a2 + v415) = v417;
            v19 |= (unint64_t)(v418 & 0x7F) << v413;
            if (v418 < 0)
            {
              v413 += 7;
              BOOL v14 = v414++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_897;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_897:
        uint64_t v520 = 360;
        goto LABEL_950;
      case 0x64u:
        char v419 = 0;
        unsigned int v420 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x20000000uLL;
        while (2)
        {
          uint64_t v421 = *v3;
          uint64_t v422 = *(void *)(a2 + v421);
          unint64_t v423 = v422 + 1;
          if (v422 == -1 || v423 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v424 = *(unsigned char *)(*(void *)(a2 + *v7) + v422);
            *(void *)(a2 + v421) = v423;
            v19 |= (unint64_t)(v424 & 0x7F) << v419;
            if (v424 < 0)
            {
              v419 += 7;
              BOOL v14 = v420++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_901;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_901:
        uint64_t v520 = 296;
        goto LABEL_950;
      case 0x65u:
        *(void *)(a1 + 812) |= 0x40uLL;
        uint64_t v425 = *v3;
        unint64_t v426 = *(void *)(a2 + v425);
        if (v426 <= 0xFFFFFFFFFFFFFFF7 && v426 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v426);
          *(void *)(a2 + v425) = v426 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 56;
        goto LABEL_984;
      case 0x66u:
        *(void *)(a1 + 812) |= 0x100uLL;
        uint64_t v427 = *v3;
        unint64_t v428 = *(void *)(a2 + v427);
        if (v428 <= 0xFFFFFFFFFFFFFFF7 && v428 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v428);
          *(void *)(a2 + v427) = v428 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 72;
        goto LABEL_984;
      case 0x67u:
        *(void *)(a1 + 812) |= 4uLL;
        uint64_t v429 = *v3;
        unint64_t v430 = *(void *)(a2 + v429);
        if (v430 <= 0xFFFFFFFFFFFFFFF7 && v430 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v430);
          *(void *)(a2 + v429) = v430 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 24;
        goto LABEL_984;
      case 0x68u:
        *(void *)(a1 + 812) |= 0x10uLL;
        uint64_t v431 = *v3;
        unint64_t v432 = *(void *)(a2 + v431);
        if (v432 <= 0xFFFFFFFFFFFFFFF7 && v432 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v432);
          *(void *)(a2 + v431) = v432 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 40;
        goto LABEL_984;
      case 0x69u:
        *(void *)(a1 + 812) |= 0x80uLL;
        uint64_t v433 = *v3;
        unint64_t v434 = *(void *)(a2 + v433);
        if (v434 <= 0xFFFFFFFFFFFFFFF7 && v434 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v434);
          *(void *)(a2 + v433) = v434 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 64;
        goto LABEL_984;
      case 0x6Au:
        *(void *)(a1 + 812) |= 0x4000uLL;
        uint64_t v435 = *v3;
        unint64_t v436 = *(void *)(a2 + v435);
        if (v436 <= 0xFFFFFFFFFFFFFFF7 && v436 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v436);
          *(void *)(a2 + v435) = v436 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 120;
        goto LABEL_984;
      case 0x6Bu:
        *(void *)(a1 + 812) |= 2uLL;
        uint64_t v437 = *v3;
        unint64_t v438 = *(void *)(a2 + v437);
        if (v438 <= 0xFFFFFFFFFFFFFFF7 && v438 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v438);
          *(void *)(a2 + v437) = v438 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 16;
        goto LABEL_984;
      case 0x6Cu:
        *(void *)(a1 + 812) |= 1uLL;
        uint64_t v439 = *v3;
        unint64_t v440 = *(void *)(a2 + v439);
        if (v440 <= 0xFFFFFFFFFFFFFFF7 && v440 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v440);
          *(void *)(a2 + v439) = v440 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 8;
        goto LABEL_984;
      case 0x6Du:
        *(void *)(a1 + 812) |= 0x20uLL;
        uint64_t v441 = *v3;
        unint64_t v442 = *(void *)(a2 + v441);
        if (v442 <= 0xFFFFFFFFFFFFFFF7 && v442 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v442);
          *(void *)(a2 + v441) = v442 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 48;
        goto LABEL_984;
      case 0x6Eu:
        char v443 = 0;
        unsigned int v444 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x80000000000uLL;
        while (2)
        {
          uint64_t v445 = *v3;
          uint64_t v446 = *(void *)(a2 + v445);
          unint64_t v447 = v446 + 1;
          if (v446 == -1 || v447 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v448 = *(unsigned char *)(*(void *)(a2 + *v7) + v446);
            *(void *)(a2 + v445) = v447;
            v19 |= (unint64_t)(v448 & 0x7F) << v443;
            if (v448 < 0)
            {
              v443 += 7;
              BOOL v14 = v444++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_905;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_905:
        uint64_t v520 = 476;
        goto LABEL_950;
      case 0x6Fu:
        char v449 = 0;
        unsigned int v450 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x400000000000uLL;
        while (2)
        {
          uint64_t v451 = *v3;
          unint64_t v452 = *(void *)(a2 + v451);
          if (v452 == -1 || v452 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v453 = *(unsigned char *)(*(void *)(a2 + *v7) + v452);
            *(void *)(a2 + v451) = v452 + 1;
            v19 |= (unint64_t)(v453 & 0x7F) << v449;
            if (v453 < 0)
            {
              v449 += 7;
              BOOL v14 = v450++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_909;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_909:
        uint64_t v520 = 496;
        goto LABEL_950;
      case 0x70u:
        char v454 = 0;
        unsigned int v455 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x100000000000uLL;
        while (2)
        {
          uint64_t v456 = *v3;
          unint64_t v457 = *(void *)(a2 + v456);
          if (v457 == -1 || v457 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v458 = *(unsigned char *)(*(void *)(a2 + *v7) + v457);
            *(void *)(a2 + v456) = v457 + 1;
            v19 |= (unint64_t)(v458 & 0x7F) << v454;
            if (v458 < 0)
            {
              v454 += 7;
              BOOL v14 = v455++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_913;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_913:
        uint64_t v520 = 488;
        goto LABEL_950;
      case 0x71u:
        char v459 = 0;
        unsigned int v460 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x200000000000uLL;
        while (2)
        {
          uint64_t v461 = *v3;
          unint64_t v462 = *(void *)(a2 + v461);
          if (v462 == -1 || v462 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v463 = *(unsigned char *)(*(void *)(a2 + *v7) + v462);
            *(void *)(a2 + v461) = v462 + 1;
            v19 |= (unint64_t)(v463 & 0x7F) << v459;
            if (v463 < 0)
            {
              v459 += 7;
              BOOL v14 = v460++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_917;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_917:
        uint64_t v520 = 492;
        goto LABEL_950;
      case 0x72u:
        uint64_t v24 = PBReaderReadData();
        uint64_t v25 = 480;
        goto LABEL_636;
      case 0x73u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 584;
        goto LABEL_636;
      case 0x74u:
        char v464 = 0;
        unsigned int v465 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x8000000000000uLL;
        while (2)
        {
          uint64_t v466 = *v3;
          unint64_t v467 = *(void *)(a2 + v466);
          if (v467 == -1 || v467 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v468 = *(unsigned char *)(*(void *)(a2 + *v7) + v467);
            *(void *)(a2 + v466) = v467 + 1;
            v19 |= (unint64_t)(v468 & 0x7F) << v464;
            if (v468 < 0)
            {
              v464 += 7;
              BOOL v14 = v465++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_921;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_921:
        uint64_t v520 = 592;
        goto LABEL_950;
      case 0x75u:
        PBReaderReadString();
        uint64_t v130 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v130) {
          [(id)a1 addSurfacedByTagIds:v130];
        }
        goto LABEL_656;
      case 0x76u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 408;
        goto LABEL_636;
      case 0x77u:
        char v469 = 0;
        unsigned int v470 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x8000000uLL;
        while (2)
        {
          uint64_t v471 = *v3;
          unint64_t v472 = *(void *)(a2 + v471);
          if (v472 == -1 || v472 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v473 = *(unsigned char *)(*(void *)(a2 + *v7) + v472);
            *(void *)(a2 + v471) = v472 + 1;
            v19 |= (unint64_t)(v473 & 0x7F) << v469;
            if (v473 < 0)
            {
              v469 += 7;
              BOOL v14 = v470++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_925;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_925:
        uint64_t v520 = 272;
        goto LABEL_950;
      case 0x78u:
        char v474 = 0;
        unsigned int v475 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x1000000000uLL;
        while (2)
        {
          uint64_t v476 = *v3;
          unint64_t v477 = *(void *)(a2 + v476);
          if (v477 == -1 || v477 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v478 = *(unsigned char *)(*(void *)(a2 + *v7) + v477);
            *(void *)(a2 + v476) = v477 + 1;
            v19 |= (unint64_t)(v478 & 0x7F) << v474;
            if (v478 < 0)
            {
              v474 += 7;
              BOOL v14 = v475++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_929;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_929:
        uint64_t v520 = 364;
        goto LABEL_950;
      case 0x79u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 288;
        goto LABEL_636;
      case 0x7Au:
        uint64_t v24 = PBReaderReadData();
        uint64_t v25 = 376;
        goto LABEL_636;
      case 0x7Bu:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 280;
        goto LABEL_636;
      case 0x7Cu:
        char v479 = 0;
        unsigned int v480 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x40000uLL;
        while (2)
        {
          uint64_t v481 = *v3;
          unint64_t v482 = *(void *)(a2 + v481);
          if (v482 == -1 || v482 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v483 = *(unsigned char *)(*(void *)(a2 + *v7) + v482);
            *(void *)(a2 + v481) = v482 + 1;
            v19 |= (unint64_t)(v483 & 0x7F) << v479;
            if (v483 < 0)
            {
              v479 += 7;
              BOOL v14 = v480++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_933;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_933:
        uint64_t v520 = 176;
        goto LABEL_950;
      case 0x7Du:
        char v484 = 0;
        unsigned int v485 = 0;
        uint64_t v486 = 0;
        *(_WORD *)(a1 + 820) |= 2u;
        while (2)
        {
          uint64_t v487 = *v3;
          unint64_t v488 = *(void *)(a2 + v487);
          if (v488 == -1 || v488 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v489 = *(unsigned char *)(*(void *)(a2 + *v7) + v488);
            *(void *)(a2 + v487) = v488 + 1;
            v486 |= (unint64_t)(v489 & 0x7F) << v484;
            if (v489 < 0)
            {
              v484 += 7;
              BOOL v14 = v485++ >= 9;
              if (v14)
              {
                uint64_t v486 = 0;
                goto LABEL_937;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v486 = 0;
        }
LABEL_937:
        BOOL v521 = v486 != 0;
        uint64_t v522 = 788;
        goto LABEL_959;
      case 0x7Eu:
        *(void *)(a1 + 812) |= 0x2000uLL;
        uint64_t v490 = *v3;
        unint64_t v491 = *(void *)(a2 + v490);
        if (v491 <= 0xFFFFFFFFFFFFFFF7 && v491 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v366 = *(void *)(*(void *)(a2 + *v7) + v491);
          *(void *)(a2 + v490) = v491 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v366 = 0;
        }
        uint64_t v524 = 112;
LABEL_984:
        *(void *)(a1 + v524) = v366;
        goto LABEL_985;
      case 0x7Fu:
        uint64_t v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSAlternateHeadline);
        objc_storeStrong((id *)(a1 + 136), v130);
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSAlternateHeadlineReadFrom((uint64_t)v130, a2))
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x80u:
        char v492 = 0;
        unsigned int v493 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x20000000000000uLL;
        while (2)
        {
          uint64_t v494 = *v3;
          unint64_t v495 = *(void *)(a2 + v494);
          if (v495 == -1 || v495 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v496 = *(unsigned char *)(*(void *)(a2 + *v7) + v495);
            *(void *)(a2 + v494) = v495 + 1;
            v19 |= (unint64_t)(v496 & 0x7F) << v492;
            if (v496 < 0)
            {
              v492 += 7;
              BOOL v14 = v493++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_941;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_941:
        uint64_t v520 = 608;
        goto LABEL_950;
      case 0x81u:
        uint64_t v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueData);
        objc_storeStrong((id *)(a1 + 424), v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueDataReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x82u:
        uint64_t v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueExposureData);
        objc_storeStrong((id *)(a1 + 432), v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueExposureDataReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x83u:
        uint64_t v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueViewData);
        objc_storeStrong((id *)(a1 + 448), v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueViewDataReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x84u:
        char v497 = 0;
        unsigned int v498 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x40000000000000uLL;
        while (2)
        {
          uint64_t v499 = *v3;
          unint64_t v500 = *(void *)(a2 + v499);
          if (v500 == -1 || v500 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v501 = *(unsigned char *)(*(void *)(a2 + *v7) + v500);
            *(void *)(a2 + v499) = v500 + 1;
            v19 |= (unint64_t)(v501 & 0x7F) << v497;
            if (v501 < 0)
            {
              v497 += 7;
              BOOL v14 = v498++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_945;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_945:
        uint64_t v520 = 640;
        goto LABEL_950;
      case 0x85u:
        uint64_t v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSChannelData);
        objc_storeStrong((id *)(a1 + 232), v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSChannelDataReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x86u:
        uint64_t v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueViewContextData);
        objc_storeStrong((id *)(a1 + 440), v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueViewContextDataReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x87u:
        char v502 = 0;
        unsigned int v503 = 0;
        uint64_t v19 = 0;
        *(void *)(a1 + 812) |= 0x8000000000uLL;
        while (2)
        {
          uint64_t v504 = *v3;
          unint64_t v505 = *(void *)(a2 + v504);
          if (v505 == -1 || v505 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v506 = *(unsigned char *)(*(void *)(a2 + *v7) + v505);
            *(void *)(a2 + v504) = v505 + 1;
            v19 |= (unint64_t)(v506 & 0x7F) << v502;
            if (v506 < 0)
            {
              v502 += 7;
              BOOL v14 = v503++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_949;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_949:
        uint64_t v520 = 384;
LABEL_950:
        *(_DWORD *)(a1 + v520) = v19;
        goto LABEL_985;
      case 0x88u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 752;
        goto LABEL_636;
      case 0x89u:
        uint64_t v24 = PBReaderReadString();
        uint64_t v25 = 264;
LABEL_636:
        uint64_t v507 = *(void **)(a1 + v25);
        *(void *)(a1 + v25) = v24;

        goto LABEL_985;
      case 0x8Au:
        char v508 = 0;
        unsigned int v509 = 0;
        uint64_t v510 = 0;
        *(_WORD *)(a1 + 820) |= 8u;
        while (2)
        {
          uint64_t v511 = *v3;
          unint64_t v512 = *(void *)(a2 + v511);
          if (v512 == -1 || v512 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v513 = *(unsigned char *)(*(void *)(a2 + *v7) + v512);
            *(void *)(a2 + v511) = v512 + 1;
            v510 |= (unint64_t)(v513 & 0x7F) << v508;
            if (v513 < 0)
            {
              v508 += 7;
              BOOL v14 = v509++ >= 9;
              if (v14)
              {
                uint64_t v510 = 0;
                goto LABEL_954;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v510 = 0;
        }
LABEL_954:
        BOOL v521 = v510 != 0;
        uint64_t v522 = 790;
        goto LABEL_959;
      case 0x8Bu:
        char v514 = 0;
        unsigned int v515 = 0;
        uint64_t v516 = 0;
        *(_WORD *)(a1 + 820) |= 0x10u;
        while (2)
        {
          uint64_t v517 = *v3;
          unint64_t v518 = *(void *)(a2 + v517);
          if (v518 == -1 || v518 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v519 = *(unsigned char *)(*(void *)(a2 + *v7) + v518);
            *(void *)(a2 + v517) = v518 + 1;
            v516 |= (unint64_t)(v519 & 0x7F) << v514;
            if (v519 < 0)
            {
              v514 += 7;
              BOOL v14 = v515++ >= 9;
              if (v14)
              {
                uint64_t v516 = 0;
                goto LABEL_958;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v516 = 0;
        }
LABEL_958:
        BOOL v521 = v516 != 0;
        uint64_t v522 = 791;
LABEL_959:
        *(unsigned char *)(a1 + v522) = v521;
        goto LABEL_985;
      case 0x8Cu:
        PBReaderReadString();
        uint64_t v130 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v130) {
          [(id)a1 addTopicIds:v130];
        }
        goto LABEL_656;
      case 0x8Du:
        uint64_t v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSPurchaseOffersItem);
        [(id)a1 addPurchaseOffersItem:v130];
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSPurchaseOffersItemReadFrom((uint64_t)v130, a2) & 1) != 0)
        {
LABEL_655:
          PBReaderRecallMark();
LABEL_656:

LABEL_985:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_987:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_985;
    }
  }
}