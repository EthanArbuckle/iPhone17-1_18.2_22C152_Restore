unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *result = *a2;
  return result;
}

uint64_t objectdestroyTm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  sub_1E3C19A5C();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  v1 = (int *)(type metadata accessor for JSPackageFetcher() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = sub_1E3E7C810();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);

  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_5()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);

  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_6()
{
  long long v8 = *(_OWORD *)(v0 + 16);
  v1 = (int *)(type metadata accessor for SelectionConfirmingPicker() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  uint64_t v3 = sub_1E3E7B6D0();
  v4 = *(void (**)(uint64_t, void))(*(void *)(v8 - 8) + 8);
  v4(v2 + *(int *)(v3 + 32), v8);
  v4(v2 + v1[15], v8);
  sub_1E3E7B640();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v2 + v1[20];
  uint64_t v6 = sub_1E3E7AE50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  if (*(void *)(v2 + v1[22])) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_7()
{
  uint64_t v1 = sub_1E3E78E70();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t objectdestroyTm_8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = (int *)type metadata accessor for AsyncSelectionConfirmingPicker();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  swift_release();
  swift_release();
  uint64_t v4 = sub_1E3E7B6D0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
  v5(v3 + *(int *)(v4 + 32), v1);
  swift_release();
  swift_release();
  v5(v3 + v2[16], v1);
  sub_1E3E7B640();
  swift_release();
  uint64_t v6 = v3 + v2[17];
  uint64_t v7 = type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v6 + *(int *)(v7 + 60), v1);
    v5(v6 + *(int *)(v7 + 64), v1);
  }
  sub_1E3E7DB90();
  sub_1E3E7B640();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = v3 + v2[22];
  uint64_t v9 = sub_1E3E7AE50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_9(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);

  return swift_deallocObject();
}

uint64_t objectdestroyTm_10()
{
  swift_unknownObjectWeakDestroy();
  if (*(unsigned __int8 *)(v0 + 64) != 255) {

  }
  if (*(void *)(v0 + 72)) {
    swift_release();
  }

  if (*(void *)(v0 + 120)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t objectdestroyTm_11()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_12()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

id debuggingInfoForTask(void *a1)
{
  id v1 = a1;
  unint64_t v2 = [v1 state];
  if (v2 > 3) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = off_1E6E20B48[v2];
  }
  uint64_t v4 = NSString;
  uint64_t v5 = [v1 taskIdentifier];
  uint64_t v6 = [v1 currentRequest];

  uint64_t v7 = [v6 URL];
  uint64_t v8 = [v4 stringWithFormat:@"NSURLSessionTask %ld <%@> { %@ }", v5, v7, v3];

  return v8;
}

void sub_1E3BCAD78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t AMPGetBidiClass(uint64_t a1, uint64_t a2)
{
  if (a1 == 65532) {
    return 12;
  }
  unsigned int v3 = MEMORY[0x1E4E796E0](a1, a2);
  if (v3 > 0x16) {
    return 0;
  }
  else {
    return qword_1E3E853A8[v3];
  }
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

id MapImageNameNumberAware(void *a1)
{
  id v1 = a1;
  if (MapImageNameNumberAware_onceToken != -1) {
    dispatch_once(&MapImageNameNumberAware_onceToken, &__block_literal_global_5);
  }
  if ([(id)MapImageNameNumberAware_sDigitAwareSet containsObject:v1])
  {
    uint64_t v2 = [MEMORY[0x1E4F1CA20] currentLocale];
    uint64_t v3 = [v2 languageCode];

    if (([v3 isEqualToString:@"ar"] & 1) != 0
      || [v3 isEqualToString:@"hi"])
    {
      uint64_t v4 = [MEMORY[0x1E4F1CA20] currentLocale];
      uint64_t v5 = [v4 numberingSystem];

      if ([v5 isEqualToString:@"latn"])
      {
        uint64_t v6 = [v1 stringByAppendingFormat:@".westernarabic"];
      }
      else
      {
        uint64_t v6 = 0;
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t isMulticore()
{
  if (isMulticore_onceToken != -1) {
    dispatch_once(&isMulticore_onceToken, &__block_literal_global_40);
  }
  return isMulticore_result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_1E3E775E0();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

void sub_1E3BCCEF4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

uint64_t physicalMemory()
{
  if (physicalMemory_onceToken != -1) {
    dispatch_once(&physicalMemory_onceToken, &__block_literal_global_43);
  }
  return physicalMemory_physicalMemory;
}

uint64_t __MapImageNameNumberAware_block_invoke()
{
  MapImageNameNumberAware_sDigitAwareSet = [MEMORY[0x1E4F1CAD0] setWithArray:&unk_1F3F6F8D0];

  return MEMORY[0x1F41817F8]();
}

uint64_t objectdestroy_42Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t __physicalMemory_block_invoke()
{
  v2[1] = *MEMORY[0x1E4F143B8];
  int v1 = 0;
  v2[0] = 4;
  uint64_t result = sysctlbyname("hw.physmem", &v1, v2, 0, 0);
  physicalMemory_physicalMemory = v1;
  return result;
}

uint64_t __isMulticore_block_invoke()
{
  v2[1] = *MEMORY[0x1E4F143B8];
  int v1 = 1;
  v2[0] = 4;
  uint64_t result = sysctlbyname("hw.ncpu", &v1, v2, 0, 0);
  isMulticore_uint64_t result = v1 != 1;
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t objectdestroy_3Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t isTV()
{
  if (isTV_onceToken != -1) {
    dispatch_once(&isTV_onceToken, &__block_literal_global_0);
  }
  return isTV___isTV;
}

void __isTV_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4FB16C8] currentDevice];
  uint64_t v1 = [v0 userInterfaceIdiom];

  isTV___isTV = v1 == 2;
}

uint64_t isPad()
{
  if (isPad_onceToken != -1) {
    dispatch_once(&isPad_onceToken, &__block_literal_global_2);
  }
  return isPad___isPad;
}

void __isPad_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4FB16C8] currentDevice];
  uint64_t v1 = [v0 userInterfaceIdiom];

  isPad___isPad = v1 == 1;
}

uint64_t isPhone()
{
  if (isPhone_onceToken != -1) {
    dispatch_once(&isPhone_onceToken, &__block_literal_global_4);
  }
  return isPhone___isPhone;
}

void __isPhone_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4FB16C8] currentDevice];
  uint64_t v1 = [v0 userInterfaceIdiom];

  isPhone___isPhone = v1 == 0;
}

uint64_t isMac()
{
  if (isMac_onceToken != -1) {
    dispatch_once(&isMac_onceToken, &__block_literal_global_6);
  }
  return isMac___isMac;
}

void __isMac_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4FB16C8] currentDevice];
  uint64_t v1 = [v0 userInterfaceIdiom];

  isMac___isMac = v1 == 5;
}

BOOL isTouch()
{
  if (isTouch_onceToken != -1) {
    dispatch_once(&isTouch_onceToken, &__block_literal_global_8);
  }
  return isTouch_result == 0;
}

uint64_t __isTouch_block_invoke()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  memset(&v1, 0, 512);
  uname(&v1);
  uint64_t result = strncmp(v1.machine, "iPod", 4uLL);
  isTouch_uint64_t result = result;
  return result;
}

BOOL isTallPhone()
{
  if (isPhone_onceToken != -1) {
    dispatch_once(&isPhone_onceToken, &__block_literal_global_4);
  }
  if (!isPhone___isPhone) {
    return 0;
  }
  uint64_t v0 = [MEMORY[0x1E4FB1BA8] mainScreen];
  [v0 nativeBounds];
  double Height = CGRectGetHeight(v6);
  uint64_t v2 = [MEMORY[0x1E4FB1BA8] mainScreen];
  [v2 nativeScale];
  BOOL v4 = Height / v3 >= 568.0;

  return v4;
}

BOOL isShortPhone()
{
  if (isPhone_onceToken != -1) {
    dispatch_once(&isPhone_onceToken, &__block_literal_global_4);
  }
  return isPhone___isPhone && !isTallPhone();
}

uint64_t isMultitaskingSupported()
{
  if ((isMultitaskingSupported___checked & 1) == 0)
  {
    uint64_t v0 = [MEMORY[0x1E4FB16C8] currentDevice];
    if (objc_opt_respondsToSelector()) {
      isMultitaskingSupported___isMultitaskingSupported = [v0 isMultitaskingSupported];
    }
    isMultitaskingSupported___checked = 1;
  }
  return isMultitaskingSupported___isMultitaskingSupported;
}

BOOL isWildcatOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x75F9;
}

BOOL isWildcat()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 30200;
}

BOOL isWildcatOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version >> 3 > 0xEBE;
}

BOOL isApexOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x9C41;
}

BOOL isApex()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 40000;
}

BOOL isApexOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version >> 6 > 0x270;
}

BOOL isBakerOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x9CA5;
}

BOOL isBaker()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 40100;
}

BOOL isBakerOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x9CA3;
}

BOOL isJasperOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x9D09;
}

BOOL isJasper()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 40200;
}

BOOL isJasperOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x9D07;
}

BOOL isDurangoOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x9D6D;
}

BOOL isDurango()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 40300;
}

BOOL isDurangoOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x9D6B;
}

BOOL isTellurideOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0xC351;
}

BOOL isTelluride()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 50000;
}

BOOL isTellurideOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version >> 4 > 0xC34;
}

BOOL isHoodooOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0xC3B5;
}

BOOL isHoodoo()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 50100;
}

BOOL isHoodooOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0xC3B3;
}

BOOL isSundanceOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0xEA61;
}

BOOL isSundance()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 60000;
}

BOOL isSundanceOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version >> 5 > 0x752;
}

BOOL isBrightonOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0xEE49;
}

BOOL isBrighton()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 61000;
}

BOOL isBrightonOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0xEE47;
}

BOOL isInnsbruckOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x11171;
}

BOOL isInnsbruck()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 70000;
}

BOOL isInnsbruckOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x1116F;
}

BOOL isSochiOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x111D5;
}

BOOL isSochi()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 70100;
}

BOOL isSochiOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x111D3;
}

BOOL isOkemoOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x13881;
}

BOOL isOkemo()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 80000;
}

BOOL isOkemoOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version >> 7 > 0x270;
}

BOOL isOkemoTaosOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x138E5;
}

BOOL isOkemoTaos()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 80100;
}

BOOL isOkemoTaosOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x138E3;
}

BOOL isOkemoZursOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x13949;
}

BOOL isOkemoZurs()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 80200;
}

BOOL isOkemoZursOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x13947;
}

BOOL isStoweOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x139AD;
}

BOOL isStowe()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 80300;
}

BOOL isStoweOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x139AB;
}

BOOL isCopperOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x13A11;
}

BOOL isCopper()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 80400;
}

BOOL isCopperOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x13A0F;
}

BOOL isMonarchOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x15F91;
}

BOOL isMonarch()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 90000;
}

BOOL isMonarchOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x15F8F;
}

BOOL isBoulderOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x15FF5;
}

BOOL isBoulder()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 90100;
}

BOOL isBoulderOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x15FF3;
}

BOOL isCastlerockOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x16059;
}

BOOL isCastlerock()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 90200;
}

BOOL isCastlerockOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x16057;
}

BOOL isEagleOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x160BD;
}

BOOL isEagle()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 90300;
}

BOOL isEagleOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version > 0x160BB;
}

BOOL isWhitetailOrEarlier()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version < 0x186A1;
}

BOOL isWhitetail()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version == 100000;
}

BOOL isWhitetailOrLater()
{
  if (deviceVersion_onceToken != -1) {
    dispatch_once(&deviceVersion_onceToken, &__block_literal_global_52);
  }
  return deviceVersion_version >> 5 > 0xC34;
}

BOOL isRetina()
{
  uint64_t v0 = [MEMORY[0x1E4FB1BA8] mainScreen];
  if (objc_opt_respondsToSelector())
  {
    [v0 scale];
    BOOL v2 = v1 > 1.0;
  }
  else
  {
    BOOL v2 = 0;
  }

  return v2;
}

BOOL isARMv6()
{
  int v2 = 0;
  size_t v1 = 4;
  sysctlbyname("hw.cpusubtype", &v2, &v1, 0, 0);
  return v2 == 6;
}

BOOL isK48()
{
  if (isK48_onceToken != -1) {
    dispatch_once(&isK48_onceToken, &__block_literal_global_15);
  }
  return isK48_result == 0;
}

uint64_t __isK48_block_invoke()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  memset(&v1, 0, 512);
  uname(&v1);
  uint64_t result = strncmp(v1.machine, "iPad1,1", 7uLL);
  isK48_uint64_t result = result;
  return result;
}

BOOL isN18()
{
  if (isN18_onceToken != -1) {
    dispatch_once(&isN18_onceToken, &__block_literal_global_18);
  }
  return isN18_result == 0;
}

uint64_t __isN18_block_invoke()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  memset(&v1, 0, 512);
  uname(&v1);
  uint64_t result = strncmp(v1.machine, "iPod3,1", 7uLL);
  isN18_uint64_t result = result;
  return result;
}

BOOL isN88()
{
  if (isN88_onceToken != -1) {
    dispatch_once(&isN88_onceToken, &__block_literal_global_21);
  }
  return isN88_result == 0;
}

uint64_t __isN88_block_invoke()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  memset(&v1, 0, 512);
  uname(&v1);
  uint64_t result = strncmp(v1.machine, "iPhone2,1", 9uLL);
  isN88_uint64_t result = result;
  return result;
}

BOOL isN56()
{
  if (isN56_onceToken != -1) {
    dispatch_once(&isN56_onceToken, &__block_literal_global_24);
  }
  return isN56_result == 0;
}

uint64_t __isN56_block_invoke()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  memset(&v1, 0, 512);
  uname(&v1);
  uint64_t result = strncmp(v1.machine, "iPhone7,1", 9uLL);
  isN56_uint64_t result = result;
  return result;
}

BOOL isN61()
{
  if (isN61_onceToken != -1) {
    dispatch_once(&isN61_onceToken, &__block_literal_global_27);
  }
  return isN61_result == 0;
}

uint64_t __isN61_block_invoke()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  memset(&v1, 0, 512);
  uname(&v1);
  uint64_t result = strncmp(v1.machine, "iPhone7,2", 9uLL);
  isN61_uint64_t result = result;
  return result;
}

BOOL isN66()
{
  if (isN66_onceToken != -1) {
    dispatch_once(&isN66_onceToken, &__block_literal_global_30);
  }
  return isN66_result == 0;
}

uint64_t __isN66_block_invoke()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  memset(&v1, 0, 512);
  uname(&v1);
  uint64_t result = strncmp(v1.machine, "iPhone8,2", 9uLL);
  isN66_uint64_t result = result;
  return result;
}

BOOL isN71()
{
  if (isN71_onceToken != -1) {
    dispatch_once(&isN71_onceToken, &__block_literal_global_33);
  }
  return isN71_result == 0;
}

uint64_t __isN71_block_invoke()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  memset(&v1, 0, 512);
  uname(&v1);
  uint64_t result = strncmp(v1.machine, "iPhone8,1", 9uLL);
  isN71_uint64_t result = result;
  return result;
}

uint64_t isN56Width()
{
  if (isN56Width_onceToken != -1) {
    dispatch_once(&isN56Width_onceToken, &__block_literal_global_36);
  }
  return isN56Width_result;
}

void __isN56Width_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4FB1BA8] mainScreen];
  utsname v1 = [v0 currentMode];
  [v1 size];
  double v3 = v2;

  id v5 = [MEMORY[0x1E4FB1BA8] mainScreen];
  [v5 scale];
  isN56Width_uint64_t result = v3 >= v4 * 414.0 + -0.00000011920929;
}

uint64_t isN61Width()
{
  if (isN61Width_onceToken != -1) {
    dispatch_once(&isN61Width_onceToken, &__block_literal_global_38);
  }
  return isN61Width_result;
}

void __isN61Width_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4FB1BA8] mainScreen];
  utsname v1 = [v0 currentMode];
  [v1 size];
  double v3 = v2;

  id v7 = [MEMORY[0x1E4FB1BA8] mainScreen];
  [v7 scale];
  if (v3 >= v4 * 375.0 + -0.00000011920929)
  {
    id v5 = [MEMORY[0x1E4FB1BA8] mainScreen];
    [v5 scale];
    isN61Width_uint64_t result = v3 < v6 * 414.0 + -0.00000011920929;
  }
  else
  {
    isN61Width_uint64_t result = 0;
  }
}

uint64_t isH4()
{
  if (isH4_onceToken != -1) {
    dispatch_once(&isH4_onceToken, &__block_literal_global_46);
  }
  return isH4_isLowEndHardware;
}

void __isH4_block_invoke()
{
  uint64_t v0 = (void *)MGCopyAnswer();
  utsname v1 = v0;
  if (v0)
  {
    isH4_isLowEndHardware = [v0 BOOLValue];
  }
  else
  {
    uint64_t valuePtr = 0;
    CFNumberRef v2 = (const __CFNumber *)MGCopyAnswer();
    if (v2)
    {
      CFNumberRef v3 = v2;
      CFNumberGetValue(v2, kCFNumberSInt64Type, &valuePtr);
      CFRelease(v3);
      BOOL v4 = (valuePtr & 0xFFF0) == 35136;
    }
    else
    {
      BOOL v4 = 0;
    }
    isH4_isLowEndHardware = v4;
  }
}

void __deviceVersion_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4FB16C8] currentDevice];
  id v4 = [v0 systemVersion];

  if ([v4 compare:@"3.2" options:64] == -1)
  {
    int v1 = 0;
    goto LABEL_36;
  }
  if ([v4 compare:@"4.0" options:64] == -1)
  {
    int v1 = 30200;
    goto LABEL_36;
  }
  if ([v4 compare:@"4.1" options:64] == -1)
  {
    int v1 = 40000;
    goto LABEL_36;
  }
  if ([v4 compare:@"4.2" options:64] == -1)
  {
    int v1 = 40100;
    goto LABEL_36;
  }
  if ([v4 compare:@"4.3" options:64] == -1)
  {
    int v1 = 40200;
    goto LABEL_36;
  }
  if ([v4 compare:@"5.0" options:64] == -1)
  {
    int v1 = 40300;
    goto LABEL_36;
  }
  if ([v4 compare:@"5.1" options:64] == -1)
  {
    int v1 = 50000;
    goto LABEL_36;
  }
  if ([v4 compare:@"6.0" options:64] == -1)
  {
    int v1 = 50100;
    goto LABEL_36;
  }
  if ([v4 compare:@"6.1" options:64] == -1)
  {
    int v1 = 60000;
    goto LABEL_36;
  }
  if ([v4 compare:@"6.2" options:64] == -1)
  {
    int v1 = 61000;
    goto LABEL_36;
  }
  int v1 = 70000;
  if ([v4 compare:@"7.1" options:64] == -1) {
    goto LABEL_36;
  }
  if ([v4 compare:@"8.0" options:64] == -1) {
    goto LABEL_35;
  }
  int v1 = 80000;
  if ([v4 compare:@"8.1" options:64] == -1) {
    goto LABEL_36;
  }
  if ([v4 compare:@"8.2" options:64] == -1)
  {
LABEL_35:
    v1 += 100;
    goto LABEL_36;
  }
  if ([v4 compare:@"8.3" options:64] == -1)
  {
LABEL_40:
    v1 += 200;
    goto LABEL_36;
  }
  if ([v4 compare:@"8.4" options:64] == -1)
  {
LABEL_41:
    v1 += 300;
    goto LABEL_36;
  }
  if ([v4 compare:@"9.0" options:64] == -1)
  {
    int v1 = 80400;
    goto LABEL_36;
  }
  int v1 = 90000;
  if ([v4 compare:@"9.1" options:64] == -1)
  {
LABEL_36:
    CFNumberRef v3 = v4;
    goto LABEL_37;
  }
  if ([v4 compare:@"9.2" options:64] == -1) {
    goto LABEL_35;
  }
  if ([v4 compare:@"9.3" options:64] == -1) {
    goto LABEL_40;
  }
  if ([v4 compare:@"10.0" options:64] == -1) {
    goto LABEL_41;
  }
  BOOL v2 = [v4 compare:@"10.1" options:64] == -1;
  CFNumberRef v3 = v4;
  if (v2) {
    int v1 = 100000;
  }
  else {
    int v1 = 999999;
  }
LABEL_37:
  deviceVersion_version = v1;
}

uint64_t MTMPUDeviceGetGraphicsQuality()
{
  if (MTMPUDeviceGetGraphicsQuality_sOnceToken != -1) {
    dispatch_once(&MTMPUDeviceGetGraphicsQuality_sOnceToken, &__block_literal_global_1);
  }
  return MTMPUDeviceGetGraphicsQuality_sGraphicsQuality;
}

void __MTMPUDeviceGetGraphicsQuality_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4FB16C8] currentDevice];
  uint64_t v1 = [v0 _graphicsQuality];

  if (v1 == 10)
  {
    uint64_t v2 = 100;
LABEL_6:
    MTMPUDeviceGetGraphicsQuality_sGraphicsQuality = v2;
    return;
  }
  uint64_t v2 = 500;
  uint64_t v3 = MGGetProductType();
  if (v3 == 1517755655 || v3 == 3953847432 || v3 == 1549248876) {
    goto LABEL_6;
  }
}

void sub_1E3BD26A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_1E3BD4120(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1E3BD63C4(void *a1)
{
}

void sub_1E3BD6498(void *a1)
{
}

void sub_1E3BD8E8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1E3BD9650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

CGImageSource *CGImageCreateWithURL(const __CFURL *a1)
{
  uint64_t result = CGImageSourceCreateWithURL(a1, 0);
  if (result)
  {
    uint64_t v2 = result;
    CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(result, 0, 0);
    CFRelease(v2);
    return ImageAtIndex;
  }
  return result;
}

CGContext *CGBitmapContextCreateWithImage(CGImage *a1)
{
  unint64_t Width = CGImageGetWidth(a1);
  unint64_t Height = CGImageGetHeight(a1);
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  if (!DeviceRGB) {
    return 0;
  }
  id v5 = DeviceRGB;
  double v6 = CGBitmapContextCreate(0, Width, Height, 8uLL, 4 * Width, DeviceRGB, 1u);
  CGColorSpaceRelease(v5);
  if (v6)
  {
    v8.size.width = (double)Width;
    v8.size.height = (double)Height;
    v8.origin.x = 0.0;
    v8.origin.y = 0.0;
    CGContextDrawImage(v6, v8, a1);
  }
  return v6;
}

CGImageRef CGImageCreateFromImageAdjustingHSL(CGImage *a1, float a2, float a3, float a4)
{
  float v4 = a2 / 360.0;
  float v5 = a3 / 100.0;
  float v6 = a4 / 100.0;
  if (v4 >= 0.0) {
    float v7 = v4;
  }
  else {
    float v7 = v4 + 1.0;
  }
  BOOL v8 = v7 == 0.0;
  if (v7 == 1.0) {
    BOOL v8 = 1;
  }
  if (v6 == 0.0 && v5 == 0.0 && v8)
  {
    return CGImageRetain(a1);
  }
  else
  {
    CGImageRef result = CGBitmapContextCreateWithImage(a1);
    if (result)
    {
      v10 = result;
      Data = (unsigned int *)CGBitmapContextGetData(result);
      size_t Width = CGBitmapContextGetWidth(v10);
      size_t Height = CGBitmapContextGetHeight(v10);
      if (Height)
      {
        for (uint64_t i = 0; i != Height; ++i)
        {
          if (Width)
          {
            v15 = Data;
            size_t v16 = Width;
            do
            {
              unsigned int v17 = *v15;
              int v18 = *v15;
              float v19 = (float)v18 / 255.0;
              float v20 = (float)BYTE1(*v15) / 255.0;
              float v21 = (float)BYTE2(*v15) / 255.0;
              if (v19 < v20 || v19 < v21)
              {
                if (v20 >= v19) {
                  float v23 = (float)v18 / 255.0;
                }
                else {
                  float v23 = (float)BYTE1(v17) / 255.0;
                }
                if (v19 >= v21) {
                  float v24 = (float)BYTE2(v17) / 255.0;
                }
                else {
                  float v24 = (float)v18 / 255.0;
                }
                BOOL v25 = v20 < v19 || v20 < v21;
                if (v25) {
                  float v26 = (float)BYTE2(v17) / 255.0;
                }
                else {
                  float v26 = (float)BYTE1(v17) / 255.0;
                }
                if (v25) {
                  float v27 = v23;
                }
                else {
                  float v27 = v24;
                }
              }
              else
              {
                if (v20 >= v21) {
                  float v27 = (float)BYTE2(v17) / 255.0;
                }
                else {
                  float v27 = (float)BYTE1(v17) / 255.0;
                }
                float v26 = (float)v18 / 255.0;
              }
              float v28 = 0.0;
              if (v26 <= 0.0)
              {
                float v30 = 0.0;
              }
              else
              {
                float v29 = v26 - v27;
                float v30 = (float)(v26 - v27) / v26;
                if (v30 != 0.0)
                {
                  float v31 = (float)(v26 - v20) / v29;
                  float v32 = (float)(v26 - v21) / v29;
                  if (v26 == v19)
                  {
                    if (v27 == v20) {
                      float v28 = v32 + 5.0;
                    }
                    else {
                      float v28 = 1.0 - v31;
                    }
                  }
                  else
                  {
                    float v44 = (float)(v26 - v19) / v29;
                    if (v26 == v20)
                    {
                      if (v27 == v21) {
                        float v28 = v44 + 1.0;
                      }
                      else {
                        float v28 = 3.0 - v32;
                      }
                    }
                    else if (v27 == v19)
                    {
                      float v28 = v31 + 3.0;
                    }
                    else
                    {
                      float v28 = 5.0 - v44;
                    }
                  }
                }
              }
              float v33 = v7 + (float)(v28 / 6.0);
              if (v33 > 1.0) {
                float v33 = v33 + -1.0;
              }
              if (v5 >= 0.0)
              {
                if (v5 > 0.0) {
                  float v30 = v30 + (float)((float)(1.0 - v30) * v5);
                }
              }
              else
              {
                float v30 = (float)(v5 + 1.0) * v30;
              }
              float v34 = v26 + (float)((float)(1.0 - v26) * v6);
              if (v6 <= 0.0) {
                float v34 = v26;
              }
              float v35 = (float)(v6 + 1.0) * v26;
              if (v6 >= 0.0) {
                float v35 = v34;
              }
              if (v33 == 1.0) {
                float v36 = 0.0;
              }
              else {
                float v36 = v33 * 6.0;
              }
              int v37 = (int)v36;
              float v38 = v36 - (float)(int)v36;
              float v39 = (float)(1.0 - v30) * v35;
              float v40 = (float)(1.0 - (float)(v30 * v38)) * v35;
              float v41 = (float)(1.0 - (float)(v30 * (float)(1.0 - v38))) * v35;
              float v42 = v35;
              float v43 = v41;
              switch(v37)
              {
                case 1:
                  float v42 = v40;
                  float v43 = v35;
                  break;
                case 2:
                  float v42 = v39;
                  float v43 = v35;
                  float v39 = v41;
                  break;
                case 3:
                  float v42 = v39;
                  float v43 = v40;
                  goto LABEL_65;
                case 4:
                  float v42 = v41;
                  float v43 = v39;
LABEL_65:
                  float v39 = v35;
                  break;
                case 5:
                  float v42 = v35;
                  float v43 = v39;
                  float v39 = v40;
                  break;
                default:
                  break;
              }
              *v15++ = v17 & 0xFF000000 | (int)(float)(v42 * 255.0) | ((int)(float)(v43 * 255.0) << 8) | ((int)(float)(v39 * 255.0) << 16);
              --v16;
            }
            while (v16);
          }
          Data += Width;
        }
      }
      CGImageRef Image = CGBitmapContextCreateImage(v10);
      CFRelease(v10);
      return Image;
    }
  }
  return result;
}

uint64_t CGImageSourcePixelSize(CGImageSource *a1)
{
  CFDictionaryRef v1 = CGImageSourceCopyPropertiesAtIndex(a1, 0, 0);
  if (v1)
  {
    CFDictionaryRef v2 = v1;
    CFNumberRef Value = (const __CFNumber *)CFDictionaryGetValue(v1, (const void *)*MEMORY[0x1E4F2FD00]);
    CFNumberRef v4 = (const __CFNumber *)CFDictionaryGetValue(v2, (const void *)*MEMORY[0x1E4F2FCE8]);
    long long v8 = 0uLL;
    if (Value) {
      BOOL v5 = v4 == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
      CFNumberRef v6 = v4;
      CFNumberGetValue(Value, kCFNumberNSIntegerType, &v8);
      CFNumberGetValue(v6, kCFNumberNSIntegerType, (char *)&v8 + 8);
    }
    CFRelease(v2);
  }
  else
  {
    return CGPixelSizeZero;
  }
  return v8;
}

BOOL CGImageSourceIsSquare(CGImageSource *a1)
{
  uint64_t v1 = CGImageSourcePixelSize(a1);
  return v1 == v2;
}

double *MTMPU::Point3D::Point3D(double *this, double a2, double a3, double a4)
{
  *this = a2;
  this[1] = a3;
  this[2] = a4;
  return this;
}

{
  *this = a2;
  this[1] = a3;
  this[2] = a4;
  return this;
}

BOOL MTMPU::Point3D::operator==(double *a1, double *a2)
{
  if (!MTMPUFloatEqualToFloat(*a1, *a2) || !MTMPUFloatEqualToFloat(a1[1], a2[1])) {
    return 0;
  }
  double v4 = a1[2];
  double v5 = a2[2];

  return MTMPUFloatEqualToFloat(v4, v5);
}

BOOL MTMPU::Point3D::operator!=(double *a1, double *a2)
{
  return !MTMPU::Point3D::operator==(a1, a2);
}

BOOL MTMPU::Point3D::resolveEquationOfPlaneDefinedByFirstThreePointsInVector(double **a1, double *a2, double *a3, double *a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  double v15 = **a1;
  double v16 = (*a1)[1];
  double v17 = (*a1)[2];
  double v18 = (*a1)[4];
  double v19 = (*a1)[5];
  double v20 = (*a1)[6];
  double v21 = (*a1)[7];
  double v22 = (*a1)[8];
  double v34 = (*a1)[3];
  return MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(a2, a3, a4, v15, v16, v17, v34, v18, v19, a11, a12, v20, v21, v22)|| MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(a2, a3, a4, v15,
           v16,
           v17,
           v20,
           v21,
           v22,
           v23,
           v24,
           v34,
           v18,
           v19)
      || MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(a2, a3, a4, v34, v18, v19, v15, v16, v17, v25, v26, v20, v21, v22)|| MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(a2, a3, a4, v34,
           v18,
           v19,
           v20,
           v21,
           v22,
           v27,
           v28,
           v15,
           v16,
           v17)
      || MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(a2, a3, a4, v20, v21, v22, v15, v16, v17, v29, v30, v34, v18, v19)|| MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(a2, a3, a4, v20,
           v21,
           v22,
           v34,
           v18,
           v19,
           v31,
           v32,
           v15,
           v16,
           v17);
}

BOOL MTMPU::_ResolveEquationOfPlaneDefinedBy3DPoints(double *a1, double *a2, double *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14)
{
  double v26 = a8 - a5;
  if (MTMPUFloatEqualToFloat(a8 - a5, 0.0)) {
    return 0;
  }
  double v28 = a13 - a8;
  double v29 = a7 - a4;
  double v30 = -v28 / v26;
  double v31 = a12 - a7 + v30 * (a7 - a4);
  BOOL v32 = MTMPUFloatEqualToFloat(v31, 0.0);
  if (!v32)
  {
    double v33 = (a14 - a9 + v30 * (a9 - a6)) / v31;
    if (a1) {
      *a1 = v33;
    }
    double v34 = (a9 - a6 - v33 * v29) / v26;
    if (a2) {
      *a2 = v34;
    }
    if (a3) {
      *a3 = a6 - v33 * a4 - v34 * a5;
    }
  }
  return !v32;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void sub_1E3BE071C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1E3BE12A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getkCTFontDescriptorTextStyleRegularSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CoreTextLibrary();
  CGImageRef result = dlsym(v2, "kCTFontDescriptorTextStyleRegular");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCTFontDescriptorTextStyleRegularSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t CoreTextLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!CoreTextLibraryCore_frameworkLibrary)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __CoreTextLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_1E6E1FE38;
    uint64_t v5 = 0;
    CoreTextLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = CoreTextLibraryCore_frameworkLibrary;
  uint64_t v1 = (void *)v3[0];
  if (!CoreTextLibraryCore_frameworkLibrary)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __CoreTextLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CoreTextLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getkCTFontDescriptorTextStyleEmphasizedSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CoreTextLibrary();
  uint64_t result = dlsym(v2, "kCTFontDescriptorTextStyleEmphasized");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCTFontDescriptorTextStyleEmphasizedSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1E3BE16C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  _Unwind_Resume(a1);
}

void sub_1E3BE1754(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1E3BE19BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::insert(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  long long v4 = (char *)a2;
  uint64_t v7 = *a1;
  unint64_t v6 = a1[1];
  uint64_t v8 = (a2 - *a1) >> 5;
  unint64_t v11 = a1[2];
  uint64_t v9 = (uint64_t)(a1 + 2);
  unint64_t v10 = v11;
  if (v6 >= v11)
  {
    unint64_t v12 = ((uint64_t)(v6 - v7) >> 5) + 1;
    if (v12 >> 59) {
      std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v13 = v10 - v7;
    if (v13 >> 4 > v12) {
      unint64_t v12 = v13 >> 4;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v14 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    uint64_t v21 = v9;
    if (v14) {
      double v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>>(v9, v14);
    }
    else {
      double v15 = 0;
    }
    double v17 = v15;
    double v18 = &v15[32 * v8];
    double v19 = v18;
    double v20 = &v15[32 * v14];
    std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::push_back[abi:ne180100](&v17, a3);
    long long v4 = (char *)std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__swap_out_circular_buffer(a1, &v17, v4);
    std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::~__split_buffer((uint64_t)&v17);
  }
  else if (a2 == v6)
  {
    std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__construct_one_at_end[abi:ne180100]<MTMPU::LayoutInterpolator::EntriesContainer const&>((uint64_t)a1, a3);
  }
  else
  {
    std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__move_range((uint64_t)a1, a2, v6, a2 + 32);
    if ((unint64_t)v4 <= a3) {
      a3 += 32 * (a1[1] > a3);
    }
    if (v4 != (char *)a3) {
      std::vector<MTMPU::LayoutInterpolator::Entry>::__assign_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>(v4, *(char **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 4);
    }
    *(void *)(v7 + 32 * v8 + 24) = *(void *)(a3 + 24);
  }
  return v4;
}

void sub_1E3BE1B40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1E3BE1E2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double MTMPULayoutInterpolatorScaledValueFromTraitEnvironment(void *a1, void *a2, double a3)
{
  id v5 = a2;
  [a1 valueForReferenceMetric:a3];
  double v7 = v6;
  uint64_t v8 = [v5 traitCollection];
  [v8 displayScale];
  double v10 = v9;

  double v11 = MTMPUFloatRoundForScale(v7, v10);
  return v11;
}

void sub_1E3BE1F24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1E3BE22EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,void *a28,uint64_t a29)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1E3BE24EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  double v15 = *(void **)v13;
  if (*(void *)v13)
  {
    *(void *)(v13 + 8) = v15;
    operator delete(v15);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<MTMPU::Point3D>::insert(uint64_t a1, char *__src, unint64_t a3)
{
  unint64_t v3 = a3;
  long long v4 = __src;
  double v6 = *(char **)(a1 + 8);
  uint64_t v8 = a1 + 16;
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    uint64_t v13 = *(char **)a1;
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v6[-*(void *)a1] >> 3) + 1;
    if (v14 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v15 = __src - v13;
    int64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((__src - v13) >> 3);
    unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - (void)v13) >> 3);
    if (2 * v17 > v14) {
      unint64_t v14 = 2 * v17;
    }
    if (v17 >= 0x555555555555555) {
      unint64_t v18 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v18 = v14;
    }
    uint64_t v33 = a1 + 16;
    if (v18) {
      double v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::Point3D>>(a1 + 16, v18);
    }
    else {
      double v19 = 0;
    }
    double v22 = &v19[24 * v16];
    __p = v19;
    double v30 = v22;
    double v31 = v22;
    BOOL v32 = &v19[24 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4) {
          unint64_t v24 = 1;
        }
        else {
          unint64_t v24 = 2 * v16;
        }
        double v25 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::Point3D>>(v8, v24);
        double v22 = &v25[24 * (v24 >> 2)];
        __p = v25;
        double v30 = v22;
        BOOL v32 = &v25[24 * v26];
        if (v19) {
          operator delete(v19);
        }
      }
      else
      {
        uint64_t v23 = v16 + 2;
        if (v16 >= -1) {
          uint64_t v23 = v16 + 1;
        }
        v22 -= 24 * (v23 >> 1);
        double v30 = v22;
      }
    }
    long long v27 = *(_OWORD *)v3;
    *((void *)v22 + 2) = *(void *)(v3 + 16);
    *(_OWORD *)double v22 = v27;
    double v31 = v22 + 24;
    long long v4 = (char *)std::vector<MTMPU::Point3D>::__swap_out_circular_buffer((void **)a1, (uint64_t)&__p, v4);
    if (v31 != v30) {
      double v31 = &v30[(v31 - v30 - 24) % 0x18uLL];
    }
    if (__p) {
      operator delete(__p);
    }
  }
  else if (__src == v6)
  {
    long long v21 = *(_OWORD *)a3;
    *((void *)__src + 2) = *(void *)(a3 + 16);
    *(_OWORD *)__src = v21;
    *(void *)(a1 + 8) = __src + 24;
  }
  else
  {
    double v9 = __src + 24;
    double v10 = v6 - 24;
    uint64_t v11 = *(void *)(a1 + 8);
    while (v10 < v6)
    {
      long long v12 = *(_OWORD *)v10;
      *(void *)(v11 + 16) = *((void *)v10 + 2);
      *(_OWORD *)uint64_t v11 = v12;
      v11 += 24;
      v10 += 24;
    }
    *(void *)(a1 + 8) = v11;
    if (v6 != v9) {
      memmove(__src + 24, __src, v6 - v9);
    }
    if ((unint64_t)v4 <= v3) {
      v3 += 24 * (*(void *)(a1 + 8) > v3);
    }
    long long v20 = *(_OWORD *)v3;
    *((void *)v4 + 2) = *(void *)(v3 + 16);
    *(_OWORD *)long long v4 = v20;
  }
  return v4;
}

void sub_1E3BE2798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void __clang_call_terminate(void *a1)
{
}

void std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__assign_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*>(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  uint64_t v9 = *(void *)a1;
  if (a4 > (uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 5)
  {
    std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__vdeallocate((uint64_t *)a1);
    if (a4 >> 59) {
      std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = *(void *)(a1 + 16) - *(void *)a1;
    uint64_t v11 = v10 >> 4;
    if (v10 >> 4 <= a4) {
      uint64_t v11 = a4;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v12 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__vallocate[abi:ne180100]((void *)a1, v12);
    uint64_t v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*>(v8, a2, a3, *(void **)(a1 + 8));
    goto LABEL_11;
  }
  unint64_t v14 = (*(void *)(a1 + 8) - v9) >> 5;
  if (v14 < a4)
  {
    uint64_t v15 = a2 + 32 * v14;
    std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *>((int)&v22, a2, v15, v9);
    uint64_t v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*>(v8, v15, a3, *(void **)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = v13;
    return;
  }
  std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *>((int)&v23, a2, a3, v9);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18 != v16)
  {
    uint64_t v19 = *(void *)(a1 + 8);
    do
    {
      long long v21 = *(void **)(v19 - 32);
      v19 -= 32;
      long long v20 = v21;
      if (v21)
      {
        *(void *)(v18 - 24) = v20;
        operator delete(v20);
      }
      uint64_t v18 = v19;
    }
    while (v19 != v17);
  }
  *(void *)(a1 + 8) = v17;
}

void sub_1E3BE29E0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1E3BE29E8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__vdeallocate(uint64_t *a1)
{
  if (*a1)
  {
    std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__clear[abi:ne180100](a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

char *std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 59) {
    std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[32 * v4];
  return result;
}

void *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*>(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *uint64_t v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      std::vector<MTMPU::LayoutInterpolator::Entry>::__init_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>(v4, *(const void **)v6, *(void *)(v6 + 8), (uint64_t)(*(void *)(v6 + 8) - *(void *)v6) >> 4);
      v4[3] = *(void *)(v6 + 24);
      uint64_t v4 = v11 + 4;
      v11 += 4;
      v6 += 32;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_1E3BE2B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *std::vector<MTMPU::LayoutInterpolator::Entry>::__init_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = std::vector<MTMPU::LayoutInterpolator::Entry>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1E3BE2B8C(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<MTMPU::LayoutInterpolator::Entry>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::Entry>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

void std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]()
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::Entry>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a2);
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E6E1F608, MEMORY[0x1E4FBA1C8]);
}

void sub_1E3BE2C84(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  if (v1 != v2)
  {
    uint64_t v3 = **(void **)(a1 + 16);
    do
    {
      id v5 = *(void **)(v3 - 32);
      v3 -= 32;
      uint64_t v4 = v5;
      if (v5)
      {
        *(void *)(v1 - 24) = v4;
        operator delete(v4);
      }
      uint64_t v1 = v3;
    }
    while (v3 != v2);
  }
}

uint64_t std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *>(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (v5 != a4) {
        std::vector<MTMPU::LayoutInterpolator::Entry>::__assign_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>((char *)a4, *(char **)v5, *(void *)(v5 + 8), (uint64_t)(*(void *)(v5 + 8) - *(void *)v5) >> 4);
      }
      *(void *)(a4 + 24) = *(void *)(v5 + 24);
      v5 += 32;
      a4 += 32;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

char *std::vector<MTMPU::LayoutInterpolator::Entry>::__assign_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  char v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 4)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 60) {
      std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 3;
    if (v8 >> 3 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = std::vector<MTMPU::LayoutInterpolator::Entry>::__vallocate[abi:ne180100](v7, v11);
    uint64_t v13 = (char *)v7[1];
    unint64_t v12 = (void **)(v7 + 1);
    char v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      uint64_t v18 = v9;
      uint64_t v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  unint64_t v12 = (void **)(result + 8);
  unint64_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 4;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  uint64_t v16 = &__src[16 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    char v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    uint64_t v18 = v9;
    uint64_t v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *unint64_t v12 = &v9[v17];
  return result;
}

void std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (v2 != *a1)
  {
    uint64_t v4 = a1[1];
    do
    {
      uint64_t v6 = *(void **)(v4 - 32);
      v4 -= 32;
      uint64_t v5 = v6;
      if (v6)
      {
        *(void *)(v2 - 24) = v5;
        operator delete(v5);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(32 * a2);
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

double std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__construct_one_at_end[abi:ne180100]<MTMPU::LayoutInterpolator::EntriesContainer const&>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)uint64_t v4 = 0;
  *(void *)(v4 + 8) = 0;
  *(void *)(v4 + 16) = 0;
  std::vector<MTMPU::LayoutInterpolator::Entry>::__init_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>((void *)v4, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 4);
  double result = *(double *)(a2 + 24);
  *(double *)(v4 + 24) = result;
  *(void *)(a1 + 8) = v4 + 32;
  return result;
}

void sub_1E3BE30C8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__move_range(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = (void *)v6;
  if (v7 < a3)
  {
    unint64_t v9 = v7;
    uint64_t v8 = *(void **)(a1 + 8);
    do
    {
      *uint64_t v8 = 0;
      v8[1] = 0;
      v8[2] = 0;
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      v8[2] = *(void *)(v9 + 16);
      *(void *)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      *(void *)(v9 + 16) = 0;
      void v8[3] = *(void *)(v9 + 24);
      v8 += 4;
      v9 += 32;
    }
    while (v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_backward_loop<std::_ClassicAlgPolicy>,std::__move_backward_trivial>,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,0>(a2, v7, v6);
}

double std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::push_back[abi:ne180100](void *a1, uint64_t a2)
{
  uint64_t v4 = (__n128 *)a1[2];
  if (v4 == (__n128 *)a1[3])
  {
    uint64_t v6 = *a1;
    size_t v5 = (__n128 *)a1[1];
    uint64_t v7 = (uint64_t)v5 - *a1;
    if ((unint64_t)v5 <= *a1)
    {
      uint64_t v15 = (uint64_t)v4 - v6;
      BOOL v14 = v15 == 0;
      uint64_t v16 = v15 >> 4;
      if (v14) {
        unint64_t v17 = 1;
      }
      else {
        unint64_t v17 = v16;
      }
      uint64_t v31 = a1[4];
      uint64_t v18 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>>(v31, v17);
      long long v20 = &v18[32 * (v17 >> 2)];
      unint64_t v21 = a1[1];
      unint64_t v22 = a1[2] - v21;
      if (v22)
      {
        char v23 = &v20[v22];
        unint64_t v24 = &v18[32 * (v17 >> 2)];
        do
        {
          *(void *)unint64_t v24 = 0;
          *((void *)v24 + 1) = 0;
          *((void *)v24 + 2) = 0;
          *(_OWORD *)unint64_t v24 = *(_OWORD *)v21;
          *((void *)v24 + 2) = *(void *)(v21 + 16);
          *(void *)unint64_t v21 = 0;
          *(void *)(v21 + 8) = 0;
          *(void *)(v21 + 16) = 0;
          *((void *)v24 + 3) = *(void *)(v21 + 24);
          v24 += 32;
          v21 += 32;
        }
        while (v24 != v23);
        int64x2_t v25 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v25 = vdupq_n_s64(v21);
        char v23 = &v18[32 * (v17 >> 2)];
      }
      uint64_t v28 = *a1;
      *a1 = v18;
      a1[1] = v20;
      int64x2_t v29 = v25;
      uint64_t v26 = a1[3];
      a1[2] = v23;
      a1[3] = &v18[32 * v19];
      uint64_t v30 = v26;
      std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::~__split_buffer((uint64_t)&v28);
      uint64_t v4 = (__n128 *)a1[2];
    }
    else
    {
      uint64_t v8 = v7 >> 5;
      BOOL v9 = v7 >> 5 < -1;
      uint64_t v10 = (v7 >> 5) + 2;
      if (v9) {
        unint64_t v11 = v10;
      }
      else {
        unint64_t v11 = v8 + 1;
      }
      unint64_t v12 = v11 >> 1;
      std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,0>(v5, v4, (uint64_t)&v5[-2 * (v11 >> 1)]);
      uint64_t v4 = v13;
      a1[1] -= 32 * v12;
      a1[2] = v13;
    }
  }
  v4->n128_u64[0] = 0;
  v4->n128_u64[1] = 0;
  v4[1].n128_u64[0] = 0;
  std::vector<MTMPU::LayoutInterpolator::Entry>::__init_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>(v4, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 4);
  double result = *(double *)(a2 + 24);
  v4[1].n128_f64[1] = result;
  a1[2] += 32;
  return result;
}

uint64_t std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__swap_out_circular_buffer(uint64_t *a1, void *a2, void *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = (uint64_t)(a1 + 2);
  std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>>((uint64_t)(a1 + 2), (uint64_t)a3, a3, *a1, (void *)*a1, v6, v6);
  a2[1] = v8;
  a2[2] = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*>(v7, (uint64_t)a3, a1[1], (void *)a2[2]);
  uint64_t v9 = *a1;
  *a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = a1[1];
  a1[1] = a2[2];
  a2[2] = v10;
  uint64_t v11 = a1[2];
  a1[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_backward_loop<std::_ClassicAlgPolicy>,std::__move_backward_trivial>,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,0>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a1)
  {
    uint64_t v6 = a2;
    do
    {
      std::vector<MTMPU::LayoutInterpolator::Entry>::__move_assign(a3 - 32, (__n128 *)(v6 - 32));
      *(void *)(a3 - 8) = *(void *)(v6 - 8);
      a3 -= 32;
      v6 -= 32;
    }
    while (v6 != a1);
  }
  return a2;
}

__n128 std::vector<MTMPU::LayoutInterpolator::Entry>::__move_assign(uint64_t a1, __n128 *a2)
{
  uint64_t v4 = *(void **)a1;
  if (v4)
  {
    *(void *)(a1 + 8) = v4;
    operator delete(v4);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  __n128 result = *a2;
  *(__n128 *)a1 = *a2;
  *(void *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

__n128 *std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,MTMPU::LayoutInterpolator::EntriesContainer *,0>(__n128 *a1, __n128 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 == a2) {
    return a1;
  }
  size_t v5 = a2;
  do
  {
    std::vector<MTMPU::LayoutInterpolator::Entry>::__move_assign(a3, v4);
    *(void *)(a3 + 24) = v4[1].n128_u64[1];
    a3 += 32;
    v4 += 2;
  }
  while (v4 != v5);
  return v5;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 32) = 0;
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      long long v8 = *((_OWORD *)a3 - 2);
      a3 -= 4;
      *(_OWORD *)(v7 - 32) = v8;
      *(void *)(v7 - 16) = a3[2];
      a3[1] = 0;
      a3[2] = 0;
      *a3 = 0;
      *(void *)(v7 - 8) = a3[3];
      uint64_t v7 = *((void *)&v14 + 1) - 32;
      *((void *)&v14 + 1) -= 32;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v11);
  return v9;
}

void *std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*,MTMPU::LayoutInterpolator::EntriesContainer*>(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v9 = a4;
  long long v8 = a4;
  v6[0] = a1;
  v6[1] = &v8;
  v6[2] = &v9;
  if (a2 != a3)
  {
    do
    {
      *uint64_t v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
      v4[2] = *(void *)(a2 + 16);
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      v4[3] = *(void *)(a2 + 24);
      v4 += 4;
      a2 += 32;
    }
    while (a2 != a3);
    uint64_t v9 = v4;
  }
  char v7 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,MTMPU::LayoutInterpolator::EntriesContainer*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v6);
  return v4;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<MTMPU::LayoutInterpolator::EntriesContainer>,std::reverse_iterator<MTMPU::LayoutInterpolator::EntriesContainer*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)v1;
    if (*(void *)v1)
    {
      *(void *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 32;
  }
}

uint64_t std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::~__split_buffer(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__split_buffer<MTMPU::LayoutInterpolator::EntriesContainer>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    size_t v5 = *(void **)(v2 - 32);
    *(void *)(a1 + 16) = v2 - 32;
    if (v5)
    {
      *(void *)(v2 - 24) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 32;
    }
  }
}

void *std::vector<MTMPU::Point3D>::__swap_out_circular_buffer(void **a1, uint64_t a2, char *__src)
{
  size_t v5 = *(void **)(a2 + 8);
  uint64_t v6 = (char *)*a1;
  char v7 = v5;
  if (*a1 != __src)
  {
    long long v8 = __src;
    uint64_t v9 = *(void *)(a2 + 8);
    do
    {
      long long v10 = *(_OWORD *)(v8 - 24);
      char v7 = (void *)(v9 - 24);
      *(void *)(v9 - 8) = *((void *)v8 - 1);
      *(_OWORD *)(v9 - 24) = v10;
      v8 -= 24;
      v9 -= 24;
    }
    while (v8 != v6);
  }
  *(void *)(a2 + 8) = v7;
  uint64_t v11 = a1[1];
  uint64_t v12 = *(void *)(a2 + 16);
  int64_t v13 = v11 - __src;
  if (v11 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v11 - __src);
    char v7 = *(void **)(a2 + 8);
  }
  *(void *)(a2 + 16) = v12 + v13;
  long long v14 = (char *)*a1;
  *a1 = v7;
  *(void *)(a2 + 8) = v14;
  uint64_t v15 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v15;
  uint64_t v16 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + 24) = v16;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::Point3D>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a2);
}

__n128 std::__sort5_maybe_branchless[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_2 &,MTMPU::Point3D *,0>(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, __n128 *a5, double *a6)
{
  std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_2 &,MTMPU::Point3D *>((uint64_t)a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)a4, a6);
  double v12 = a6[1];
  result.n128_f64[0] = (v12 - a5->n128_f64[1]) * (v12 - a5->n128_f64[1])
                     + (*a6 - a5->n128_f64[0]) * (*a6 - a5->n128_f64[0]);
  if (result.n128_f64[0] < (v12 - a4->n128_f64[1]) * (v12 - a4->n128_f64[1])
                          + (*a6 - a4->n128_f64[0]) * (*a6 - a4->n128_f64[0]))
  {
    unint64_t v14 = a4[1].n128_u64[0];
    __n128 result = *a4;
    unint64_t v15 = a5[1].n128_u64[0];
    *a4 = *a5;
    a4[1].n128_u64[0] = v15;
    *a5 = result;
    a5[1].n128_u64[0] = v14;
    double v16 = a6[1];
    result.n128_f64[0] = (v16 - a4->n128_f64[1]) * (v16 - a4->n128_f64[1])
                       + (*a6 - a4->n128_f64[0]) * (*a6 - a4->n128_f64[0]);
    if (result.n128_f64[0] < (v16 - a3->n128_f64[1]) * (v16 - a3->n128_f64[1])
                            + (*a6 - a3->n128_f64[0]) * (*a6 - a3->n128_f64[0]))
    {
      unint64_t v17 = a3[1].n128_u64[0];
      __n128 result = *a3;
      unint64_t v18 = a4[1].n128_u64[0];
      *a3 = *a4;
      a3[1].n128_u64[0] = v18;
      *a4 = result;
      a4[1].n128_u64[0] = v17;
      double v19 = a6[1];
      result.n128_f64[0] = (v19 - a3->n128_f64[1]) * (v19 - a3->n128_f64[1])
                         + (*a6 - a3->n128_f64[0]) * (*a6 - a3->n128_f64[0]);
      if (result.n128_f64[0] < (v19 - a2->n128_f64[1]) * (v19 - a2->n128_f64[1])
                              + (*a6 - a2->n128_f64[0]) * (*a6 - a2->n128_f64[0]))
      {
        unint64_t v20 = a2[1].n128_u64[0];
        __n128 result = *a2;
        unint64_t v21 = a3[1].n128_u64[0];
        *a2 = *a3;
        a2[1].n128_u64[0] = v21;
        *a3 = result;
        a3[1].n128_u64[0] = v20;
        double v22 = a6[1];
        result.n128_f64[0] = (v22 - a2->n128_f64[1]) * (v22 - a2->n128_f64[1])
                           + (*a6 - a2->n128_f64[0]) * (*a6 - a2->n128_f64[0]);
        if (result.n128_f64[0] < (v22 - a1->n128_f64[1]) * (v22 - a1->n128_f64[1])
                                + (*a6 - a1->n128_f64[0]) * (*a6 - a1->n128_f64[0]))
        {
          unint64_t v23 = a1[1].n128_u64[0];
          __n128 result = *a1;
          unint64_t v24 = a2[1].n128_u64[0];
          *a1 = *a2;
          a1[1].n128_u64[0] = v24;
          *a2 = result;
          a2[1].n128_u64[0] = v23;
        }
      }
    }
  }
  return result;
}

long long *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_2 &,MTMPU::Point3D *>(long long *result, double *a2, double *a3, double *a4)
{
  double v4 = a4[1];
  double v5 = (v4 - a2[1]) * (v4 - a2[1]) + (*a4 - *a2) * (*a4 - *a2);
  double v6 = (v4 - a3[1]) * (v4 - a3[1]) + (*a4 - *a3) * (*a4 - *a3);
  if (v5 >= (v4 - *((double *)result + 1)) * (v4 - *((double *)result + 1))
           + (*a4 - *(double *)result) * (*a4 - *(double *)result))
  {
    if (v6 < v5)
    {
      uint64_t v10 = *((void *)a2 + 2);
      long long v11 = *(_OWORD *)a2;
      uint64_t v12 = *((void *)a3 + 2);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *((void *)a2 + 2) = v12;
      *(_OWORD *)a3 = v11;
      *((void *)a3 + 2) = v10;
      double v13 = a4[1];
      if ((v13 - a2[1]) * (v13 - a2[1]) + (*a4 - *a2) * (*a4 - *a2) < (v13 - *((double *)result + 1))
                                                                     * (v13 - *((double *)result + 1))
                                                                     + (*a4 - *(double *)result)
                                                                     * (*a4 - *(double *)result))
      {
        uint64_t v14 = *((void *)result + 2);
        long long v15 = *result;
        uint64_t v16 = *((void *)a2 + 2);
        *__n128 result = *(_OWORD *)a2;
        *((void *)result + 2) = v16;
        *(_OWORD *)a2 = v15;
        *((void *)a2 + 2) = v14;
      }
    }
  }
  else
  {
    if (v6 >= v5)
    {
      uint64_t v17 = *((void *)result + 2);
      long long v18 = *result;
      uint64_t v19 = *((void *)a2 + 2);
      *__n128 result = *(_OWORD *)a2;
      *((void *)result + 2) = v19;
      *(_OWORD *)a2 = v18;
      *((void *)a2 + 2) = v17;
      double v20 = a4[1];
      if ((v20 - a3[1]) * (v20 - a3[1]) + (*a4 - *a3) * (*a4 - *a3) >= (v20 - a2[1]) * (v20 - a2[1])
                                                                      + (*a4 - *a2) * (*a4 - *a2))
        return result;
      uint64_t v7 = *((void *)a2 + 2);
      long long v8 = *(_OWORD *)a2;
      uint64_t v21 = *((void *)a3 + 2);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *((void *)a2 + 2) = v21;
    }
    else
    {
      uint64_t v7 = *((void *)result + 2);
      long long v8 = *result;
      uint64_t v9 = *((void *)a3 + 2);
      *__n128 result = *(_OWORD *)a3;
      *((void *)result + 2) = v9;
    }
    *(_OWORD *)a3 = v8;
    *((void *)a3 + 2) = v7;
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_2 &,MTMPU::Point3D *>(uint64_t a1, uint64_t a2, double *a3)
{
  uint64_t v6 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xAAAAAAAAAAAAAAABLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      long long v8 = (long long *)(a2 - 24);
      double v9 = a3[1];
      if ((v9 - *(double *)(a2 - 16)) * (v9 - *(double *)(a2 - 16))
         + (*a3 - *(double *)(a2 - 24)) * (*a3 - *(double *)(a2 - 24)) < (v9 - *(double *)(a1 + 8))
                                                                       * (v9 - *(double *)(a1 + 8))
                                                                       + (*a3 - *(double *)a1) * (*a3 - *(double *)a1))
      {
        uint64_t v10 = *(void *)(a1 + 16);
        long long v11 = *(_OWORD *)a1;
        uint64_t v12 = *(void *)(a2 - 8);
        *(_OWORD *)a1 = *v8;
        *(void *)(a1 + 16) = v12;
        *long long v8 = v11;
        *(void *)(a2 - 8) = v10;
      }
      return result;
    case 3uLL:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,[(MTMPULayoutInterpolator *)(long long *)a1 _sortPointsFor3DInterpolation:(double *)(a2 - 24) usingQueriedPoint:a3];
      return 1;
    case 4uLL:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_2 &,MTMPU::Point3D *>(a1, a1 + 24, a1 + 48, a2 - 24, a3);
      return 1;
    case 5uLL:
      std::__sort5_maybe_branchless[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_2 &,MTMPU::Point3D *,0>((__n128 *)a1, (__n128 *)(a1 + 24), (__n128 *)(a1 + 48), (__n128 *)(a1 + 72), (__n128 *)(a2 - 24), a3);
      return 1;
    default:
      double v13 = (double *)(a1 + 48);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,[(MTMPULayoutInterpolator *)(long long *)a1 _sortPointsFor3DInterpolation:(double *)(a1 + 48) usingQueriedPoint:a3];
      uint64_t v14 = a1 + 72;
      if (a1 + 72 == a2) {
        return 1;
      }
      uint64_t v15 = 0;
      int v16 = 0;
      break;
  }
  while (1)
  {
    double v17 = *(double *)v14;
    long long v18 = *(_OWORD *)(v14 + 8);
    double v19 = a3[1];
    if ((v19 - *(double *)&v18) * (v19 - *(double *)&v18) + (*a3 - *(double *)v14) * (*a3 - *(double *)v14) < (v19 - v13[1]) * (v19 - v13[1]) + (*a3 - *v13) * (*a3 - *v13))
    {
      uint64_t v20 = v15;
      while (1)
      {
        uint64_t v21 = a1 + v20;
        *(_OWORD *)(v21 + 72) = *(_OWORD *)(a1 + v20 + 48);
        *(void *)(v21 + 88) = *(void *)(a1 + v20 + 64);
        if (v20 == -48) {
          break;
        }
        double v22 = a3[1];
        v20 -= 24;
        if ((v22 - *(double *)&v18) * (v22 - *(double *)&v18) + (*a3 - v17) * (*a3 - v17) >= (v22
                                                                                             - *(double *)(v21 + 32))
                                                                                            * (v22
                                                                                             - *(double *)(v21 + 32))
                                                                                            + (*a3
                                                                                             - *(double *)(v21 + 24))
                                                                                            * (*a3
                                                                                             - *(double *)(v21 + 24)))
        {
          uint64_t v23 = a1 + v20 + 72;
          goto LABEL_12;
        }
      }
      uint64_t v23 = a1;
LABEL_12:
      *(double *)uint64_t v23 = v17;
      *(_OWORD *)(v23 + 8) = v18;
      if (++v16 == 8) {
        return v14 + 24 == a2;
      }
    }
    double v13 = (double *)v14;
    v15 += 24;
    v14 += 24;
    if (v14 == a2) {
      return 1;
    }
  }
}

__n128 std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[MTMPULayoutInterpolator _sortPointsFor3DInterpolation:usingQueriedPoint:]::$_2 &,MTMPU::Point3D *>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double *a5)
{
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,[(MTMPULayoutInterpolator *)(long long *)a1 _sortPointsFor3DInterpolation:(double *)a3 usingQueriedPoint:a5];
  double v10 = a5[1];
  result.n128_f64[0] = (v10 - *(double *)(a4 + 8)) * (v10 - *(double *)(a4 + 8))
                     + (*a5 - *(double *)a4) * (*a5 - *(double *)a4);
  if (result.n128_f64[0] < (v10 - *(double *)(a3 + 8)) * (v10 - *(double *)(a3 + 8))
                          + (*a5 - *(double *)a3) * (*a5 - *(double *)a3))
  {
    uint64_t v12 = *(void *)(a3 + 16);
    __n128 result = *(__n128 *)a3;
    uint64_t v13 = *(void *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(void *)(a3 + 16) = v13;
    *(__n128 *)a4 = result;
    *(void *)(a4 + 16) = v12;
    double v14 = a5[1];
    result.n128_f64[0] = (v14 - *(double *)(a3 + 8)) * (v14 - *(double *)(a3 + 8))
                       + (*a5 - *(double *)a3) * (*a5 - *(double *)a3);
    if (result.n128_f64[0] < (v14 - *(double *)(a2 + 8)) * (v14 - *(double *)(a2 + 8))
                            + (*a5 - *(double *)a2) * (*a5 - *(double *)a2))
    {
      uint64_t v15 = *(void *)(a2 + 16);
      __n128 result = *(__n128 *)a2;
      uint64_t v16 = *(void *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(void *)(a2 + 16) = v16;
      *(__n128 *)a3 = result;
      *(void *)(a3 + 16) = v15;
      double v17 = a5[1];
      result.n128_f64[0] = (v17 - *(double *)(a2 + 8)) * (v17 - *(double *)(a2 + 8))
                         + (*a5 - *(double *)a2) * (*a5 - *(double *)a2);
      if (result.n128_f64[0] < (v17 - *(double *)(a1 + 8)) * (v17 - *(double *)(a1 + 8))
                              + (*a5 - *(double *)a1) * (*a5 - *(double *)a1))
      {
        uint64_t v18 = *(void *)(a1 + 16);
        __n128 result = *(__n128 *)a1;
        uint64_t v19 = *(void *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = v19;
        *(__n128 *)a2 = result;
        *(void *)(a2 + 16) = v18;
      }
    }
  }
  return result;
}

void std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<MTMPU::LayoutInterpolator::EntriesContainer>::__clear[abi:ne180100]((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_1E3BE53F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void sub_1E3BE63E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

void sub_1E3BE802C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1E3BE823C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1E3BE8BF8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 72));
  _Unwind_Resume(a1);
}

BOOL MTMPUFloatEqualToFloat(double a1, double a2)
{
  return vabdd_f64(a2, a1) < 0.00000011920929;
}

BOOL MTMPUFloatGreaterThanOrEqualToFloat(double a1, double a2)
{
  return vabdd_f64(a2, a1) < 0.00000011920929 || a1 > a2;
}

BOOL MTMPUFloatLessThanOrEqualToFloat(double a1, double a2)
{
  return vabdd_f64(a2, a1) < 0.00000011920929 || a1 < a2;
}

double MTMPUFloatGetSafeScaleForValue(double result)
{
  if (vabdd_f64(0.0, result) < 0.00000011920929)
  {
    uint64_t v1 = [MEMORY[0x1E4FB1BA8] mainScreen];
    [v1 scale];
    double v3 = v2;

    return v3;
  }
  return result;
}

double MTMPUFloatFloorForScale(double a1, double a2)
{
  SafeScaleForCFNumberRef Value = MTMPUFloatGetSafeScaleForValue(a2);
  return floor(SafeScaleForValue * a1) / SafeScaleForValue;
}

double MTMPUFloatRoundForScale(double a1, double a2)
{
  SafeScaleForCFNumberRef Value = MTMPUFloatGetSafeScaleForValue(a2);
  return round(SafeScaleForValue * a1) / SafeScaleForValue;
}

double MTMPUFloatCeilForScale(double a1, double a2)
{
  SafeScaleForCFNumberRef Value = MTMPUFloatGetSafeScaleForValue(a2);
  return ceil(SafeScaleForValue * a1) / SafeScaleForValue;
}

BOOL MTMPUSizeEqualToSize(double a1, double a2, double a3, double a4)
{
  BOOL v4 = vabdd_f64(a3, a1) < 0.00000011920929;
  return vabdd_f64(a4, a2) < 0.00000011920929 && v4;
}

CGFloat MTMPURectByApplyingUserInterfaceLayoutDirectionInRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  if (primaryLayoutDirection() == 1)
  {
    v20.origin.x = a5;
    v20.origin.y = a6;
    v20.size.width = a7;
    v20.size.height = a8;
    double MaxX = CGRectGetMaxX(v20);
    v21.origin.x = a1;
    v21.origin.y = a2;
    v21.size.width = a3;
    v21.size.height = a4;
    double v17 = MaxX - CGRectGetMinX(v21);
    v22.origin.x = a1;
    v22.origin.y = a2;
    v22.size.width = a3;
    v22.size.height = a4;
    double v18 = v17 - CGRectGetWidth(v22);
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    CGRectGetMinY(v23);
    v24.origin.x = a1;
    v24.origin.y = a2;
    v24.size.width = a3;
    v24.size.height = a4;
    CGRectGetWidth(v24);
    v25.origin.x = a1;
    v25.origin.y = a2;
    v25.size.width = a3;
    v25.size.height = a4;
    CGRectGetHeight(v25);
    return v18;
  }
  return a1;
}

uint64_t primaryLayoutDirection()
{
  uint64_t v0 = [NSClassFromString(&cfstr_Uiapplication.isa) sharedApplication];
  uint64_t v1 = v0;
  if (v0) {
    uint64_t v2 = [v0 userInterfaceLayoutDirection];
  }
  else {
    uint64_t v2 = 0;
  }

  return v2;
}

CGFloat MTMPURectByRemovingUserInterfaceLayoutDirectionInRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  if (primaryLayoutDirection() == 1)
  {
    v19.origin.x = a5;
    v19.origin.y = a6;
    v19.size.width = a7;
    v19.size.height = a8;
    double MaxX = CGRectGetMaxX(v19);
    v20.origin.x = a1;
    v20.origin.y = a2;
    v20.size.width = a3;
    v20.size.height = a4;
    double v17 = MaxX - CGRectGetMaxX(v20);
    v21.origin.x = a1;
    v21.origin.y = a2;
    v21.size.width = a3;
    v21.size.height = a4;
    CGRectGetMinY(v21);
    v22.origin.x = a1;
    v22.origin.y = a2;
    v22.size.width = a3;
    v22.size.height = a4;
    CGRectGetWidth(v22);
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    CGRectGetHeight(v23);
    return v17;
  }
  return a1;
}

BOOL MTMPURectEqualToRect(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return vabdd_f64(a5, a1) < 0.00000011920929
      && vabdd_f64(a6, a2) < 0.00000011920929
      && vabdd_f64(a7, a3) < 0.00000011920929
      && vabdd_f64(a8, a4) < 0.00000011920929;
}

double MTMPUEdgeInsetsOutsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 - a6;
}

CGFloat MTMPUEdgeInsetsRectInsets(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  CGFloat v18 = a6 - a2;
  CGRectGetMaxY(*(CGRect *)&a1);
  v19.origin.x = a5;
  v19.origin.y = a6;
  v19.size.width = a7;
  v19.size.height = a8;
  CGRectGetMaxY(v19);
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  CGRectGetMaxX(v20);
  v21.origin.x = a5;
  v21.origin.y = a6;
  v21.size.width = a7;
  v21.size.height = a8;
  CGRectGetMaxX(v21);
  return v18;
}

double MTMPULayoutLinearRelationMake(double a1, double a2, double a3, double a4)
{
  return (a4 - a2) / (a3 - a1);
}

double MTMPULayoutLinearRelationEvaluate(double a1, double a2, double a3)
{
  return a2 + a1 * a3;
}

id MTImageDownloaderArtworkDidLoadCacheKeys(void *a1)
{
  uint64_t v1 = [a1 userInfo];
  uint64_t v2 = [v1 objectForKeyedSubscript:@"keys"];

  return v2;
}

id MTImageDownloaderArtworkDidLoadEntityUuids(void *a1)
{
  uint64_t v1 = [a1 userInfo];
  uint64_t v2 = [v1 objectForKeyedSubscript:@"uuids"];

  return v2;
}

void sub_1E3BEB068(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1E3BEC314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1E3BEC5BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void IMEnsureCanInitiatePlaybackInBackground()
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = [MEMORY[0x1E4F28B50] mainBundle];
  uint64_t v1 = [v0 bundleIdentifier];

  uint64_t v2 = [MEMORY[0x1E4F74F68] sharedAVSystemController];
  uint64_t v3 = *MEMORY[0x1E4F74AA8];
  id v8 = 0;
  int v4 = [v2 setAttribute:v1 forKey:v3 error:&v8];
  id v5 = v8;

  if (v4) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (!v6)
  {
    uint64_t v7 = [MEMORY[0x1E4F91F08] player];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      double v10 = v1;
      __int16 v11 = 2112;
      id v12 = v5;
      _os_log_impl(&dword_1E3BC5000, v7, OS_LOG_TYPE_ERROR, "Error temporarily blessing %@ for playback initialization. %@", buf, 0x16u);
    }
  }
}

void IMRegisterAVSystemControllerNotifications(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x1E4F74F68] sharedAVSystemController];
  uint64_t v3 = *MEMORY[0x1E4F74EA8];
  id v8 = 0;
  int v4 = [v2 setAttribute:v1 forKey:v3 error:&v8];
  id v5 = v8;

  if (v4) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (!v6)
  {
    uint64_t v7 = [MEMORY[0x1E4F91F08] player];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      id v10 = v1;
      __int16 v11 = 2112;
      id v12 = v5;
      _os_log_impl(&dword_1E3BC5000, v7, OS_LOG_TYPE_ERROR, "Error registering for notifications: %@. %@", buf, 0x16u);
    }
  }
}

uint64_t MTMPU::LayoutInterpolator::_EntriesContainerMakeInsertionError@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D2>)
{
  *(_DWORD *)a3 = 0;
  uint64_t v10 = a3 + 8;
  std::string::basic_string[abi:ne180100]<0>((void *)(a3 + 8), "");
  *(_DWORD *)a3 = a2;
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v18);
  switch(a2)
  {
    case 1:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v18, (uint64_t)"Found perfect duplicate entry while trying to insert ", 53);
      MTMPU::LayoutInterpolator::_EntriesContainerAppendEntryDescriptionToStringStream(a4, a1, &v18);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v18, (uint64_t)". ", 2);
      __int16 v11 = "Doing nothing.";
      uint64_t v12 = 14;
      goto LABEL_7;
    case 2:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v18, (uint64_t)"Error: Found inconsistent duplicate entry while trying to insert ", 65);
      MTMPU::LayoutInterpolator::_EntriesContainerAppendEntryDescriptionToStringStream(a4, a1, &v18);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v18, (uint64_t)". ", 2);
      uint64_t v13 = "Already have ";
      uint64_t v14 = 13;
      goto LABEL_6;
    case 3:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v18, (uint64_t)"Error: Attempting to insert ", 28);
      MTMPU::LayoutInterpolator::_EntriesContainerAppendEntryDescriptionToStringStream(a4, a1, &v18);
      uint64_t v13 = " with a specified secondary reference metric with another entry present that does not have a specified secon"
            "dary reference metric: ";
      uint64_t v14 = 131;
      goto LABEL_6;
    case 4:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v18, (uint64_t)"Error: Attempting to insert ", 28);
      MTMPU::LayoutInterpolator::_EntriesContainerAppendEntryDescriptionToStringStream(a4, a1, &v18);
      uint64_t v13 = " without a specified secondary reference metric with another entry present that does have a specified second"
            "ary reference metric: ";
      uint64_t v14 = 130;
LABEL_6:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v18, (uint64_t)v13, v14);
      MTMPU::LayoutInterpolator::_EntriesContainerAppendEntryDescriptionToStringStream(a5, a1, &v18);
      __int16 v11 = ".";
      uint64_t v12 = 1;
LABEL_7:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v18, (uint64_t)v11, v12);
      break;
    default:
      break;
  }
  std::stringbuf::str[abi:ne180100]<std::allocator<char>>((uint64_t)v19, &v16);
  if (*(char *)(a3 + 31) < 0) {
    operator delete(*(void **)v10);
  }
  *(_OWORD *)uint64_t v10 = v16;
  *(void *)(v10 + 16) = v17;
  uint64_t v18 = *MEMORY[0x1E4FBA418];
  *(void *)((char *)&v19[-1] + *(void *)(v18 - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v19[0] = MEMORY[0x1E4FBA470] + 16;
  if (v20 < 0) {
    operator delete((void *)v19[8]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x1E4E786A0](&v21);
}

void sub_1E3BF00D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  std::ostringstream::~ostringstream((uint64_t)va);
  if (*(char *)(v6 + 31) < 0) {
    operator delete(*v5);
  }
  _Unwind_Resume(a1);
}

uint64_t std::ostringstream::basic_ostringstream[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA498] + 64;
  *(void *)(a1 + 112) = MEMORY[0x1E4FBA498] + 64;
  uint64_t v3 = *(void *)(MEMORY[0x1E4FBA418] + 16);
  uint64_t v4 = *(void *)(MEMORY[0x1E4FBA418] + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + *(void *)(v4 - 24)) = v3;
  id v5 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v5, (void *)(a1 + 8));
  uint64_t v6 = MEMORY[0x1E4FBA498] + 24;
  v5[1].__vftable = 0;
  v5[1].__fmtflags_ = -1;
  *(void *)a1 = v6;
  *(void *)(a1 + 112) = v2;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 8) = MEMORY[0x1E4FBA470] + 16;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_1E3BF0284(_Unwind_Exception *a1)
{
  std::ostream::~ostream();
  MEMORY[0x1E4E786A0](v1);
  _Unwind_Resume(a1);
}

void *MTMPU::LayoutInterpolator::_EntriesContainerAppendEntryDescriptionToStringStream(double a1, uint64_t a2, void *a3)
{
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a3, (uint64_t)"(referenceMetric: ", 18);
  std::ostream::operator<<();
  if (!MTMPUFloatEqualToFloat(a1, -1.13427449e38))
  {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a3, (uint64_t)", secondaryReferenceMetric: ", 28);
    std::ostream::operator<<();
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a3, (uint64_t)", value: ", 9);
  id v5 = (void *)std::ostream::operator<<();

  return std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)")", 1);
}

uint64_t std::ostringstream::~ostringstream(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA418];
  uint64_t v3 = *MEMORY[0x1E4FBA418];
  *(void *)a1 = *MEMORY[0x1E4FBA418];
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  *(void *)(a1 + 8) = MEMORY[0x1E4FBA470] + 16;
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1E4E786A0](a1 + 112);
  return a1;
}

uint64_t MTMPU::LayoutInterpolator::EntriesContainer::EntriesContainer(uint64_t this, double a2)
{
  *(void *)this = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(double *)(this + 24) = a2;
  return this;
}

{
  *(void *)this = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(double *)(this + 24) = a2;
  return this;
}

void *MTMPU::LayoutInterpolator::EntriesContainer::copyEntriesVector@<X0>(MTMPU::LayoutInterpolator::EntriesContainer *this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return std::vector<MTMPU::LayoutInterpolator::Entry>::__init_with_size[abi:ne180100]<MTMPU::LayoutInterpolator::Entry*,MTMPU::LayoutInterpolator::Entry*>(a2, *(const void **)this, *((void *)this + 1), (uint64_t)(*((void *)this + 1) - *(void *)this) >> 4);
}

uint64_t MTMPU::LayoutInterpolator::EntriesContainer::entriesCount(MTMPU::LayoutInterpolator::EntriesContainer *this)
{
  return (uint64_t)(*((void *)this + 1) - *(void *)this) >> 4;
}

double MTMPU::LayoutInterpolator::EntriesContainer::primaryReferenceMetric(MTMPU::LayoutInterpolator::EntriesContainer *this)
{
  return *((double *)this + 3);
}

void MTMPU::LayoutInterpolator::EntriesContainer::insertEntry(MTMPU::LayoutInterpolator::EntriesContainer *this@<X0>, Entry a2@<0:D0, 8:D1>, uint64_t a3@<X8>)
{
  double var1 = a2.var1;
  double var0 = a2.var0;
  Entry v25 = a2;
  *(_DWORD *)a3 = 0;
  uint64_t v7 = a3 + 8;
  std::string::basic_string[abi:ne180100]<0>((void *)(a3 + 8), "");
  uint64_t v9 = *(void *)this;
  uint64_t v8 = *((void *)this + 1);
  if (MTMPUFloatEqualToFloat(var0, -1.13427449e38))
  {
    if (v8 == v9) {
      goto LABEL_15;
    }
    double v11 = **(double **)this;
    double v10 = *(double *)(*(void *)this + 8);
    if (MTMPUFloatEqualToFloat(v11, -1.13427449e38))
    {
      if (MTMPUFloatEqualToFloat(v10, var1)) {
        int v12 = 1;
      }
      else {
        int v12 = 2;
      }
      MTMPU::LayoutInterpolator::_EntriesContainerMakeInsertionError((uint64_t)this, v12, (uint64_t)&v22, var0, v11);
    }
    else
    {
      MTMPU::LayoutInterpolator::_EntriesContainerMakeInsertionError((uint64_t)this, 4, (uint64_t)&v22, var0, v11);
    }
  }
  else
  {
    if (v8 == v9) {
      goto LABEL_15;
    }
    double v13 = **(double **)this;
    if (!MTMPUFloatEqualToFloat(v13, -1.13427449e38)) {
      goto LABEL_15;
    }
    MTMPU::LayoutInterpolator::_EntriesContainerMakeInsertionError((uint64_t)this, 3, (uint64_t)&v22, var0, v13);
  }
  *(_DWORD *)a3 = v22;
  if (*(char *)(a3 + 31) < 0) {
    operator delete(*(void **)v7);
  }
  *(_OWORD *)uint64_t v7 = v23;
  *(void *)(v7 + 16) = v24;
LABEL_15:
  if (!*(_DWORD *)a3)
  {
    uint64_t v15 = *(double **)this;
    uint64_t v14 = (double *)*((void *)this + 1);
    if (v14 == *(double **)this)
    {
      uint64_t v15 = (double *)*((void *)this + 1);
    }
    else
    {
      unint64_t v16 = ((uint64_t)v14 - *(void *)this) >> 4;
      do
      {
        unint64_t v17 = v16 >> 1;
        uint64_t v18 = &v15[2 * (v16 >> 1)];
        double v20 = *v18;
        CGRect v19 = v18 + 2;
        v16 += ~(v16 >> 1);
        if (v20 < var0) {
          uint64_t v15 = v19;
        }
        else {
          unint64_t v16 = v17;
        }
      }
      while (v16);
    }
    if (v14 == v15 || !MTMPUFloatEqualToFloat(*v15, var0))
    {
      std::vector<MTMPU::LayoutInterpolator::Entry>::insert((uint64_t)this, (char *)v15, (char *)&v25);
    }
    else
    {
      if (MTMPUFloatEqualToFloat(v15[1], v25.var1)) {
        int v21 = 1;
      }
      else {
        int v21 = 2;
      }
      MTMPU::LayoutInterpolator::_EntriesContainerMakeInsertionError((uint64_t)this, v21, (uint64_t)&v22, v25.var0, *v15);
      *(_DWORD *)a3 = v22;
      if (*(char *)(a3 + 31) < 0) {
        operator delete(*(void **)v7);
      }
      *(_OWORD *)uint64_t v7 = v23;
      *(void *)(v7 + 16) = v24;
    }
  }
}

char *std::vector<MTMPU::LayoutInterpolator::Entry>::insert(uint64_t a1, char *__src, char *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = __src;
  uint64_t v6 = *(char **)(a1 + 8);
  uint64_t v8 = a1 + 16;
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    double v13 = *(char **)a1;
    unint64_t v14 = ((uint64_t)&v6[-*(void *)a1] >> 4) + 1;
    if (v14 >> 60) {
      std::vector<MTMPU::LayoutInterpolator::Entry>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v15 = __src - v13;
    uint64_t v16 = (__src - v13) >> 4;
    uint64_t v17 = v7 - (void)v13;
    if (v17 >> 3 > v14) {
      unint64_t v14 = v17 >> 3;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v18 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v14;
    }
    uint64_t v30 = a1 + 16;
    if (v18) {
      CGRect v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::Entry>>(a1 + 16, v18);
    }
    else {
      CGRect v19 = 0;
    }
    double v20 = &v19[16 * v16];
    __p = v19;
    long long v27 = v20;
    uint64_t v28 = v20;
    int64x2_t v29 = &v19[16 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4) {
          unint64_t v22 = 1;
        }
        else {
          unint64_t v22 = v15 >> 3;
        }
        long long v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MTMPU::LayoutInterpolator::Entry>>(v8, v22);
        double v20 = &v23[16 * (v22 >> 2)];
        __p = v23;
        long long v27 = v20;
        int64x2_t v29 = &v23[16 * v24];
        if (v19) {
          operator delete(v19);
        }
      }
      else
      {
        unint64_t v21 = v16 + 2;
        if (v16 >= -1) {
          unint64_t v21 = v16 + 1;
        }
        v20 -= 16 * (v21 >> 1);
        long long v27 = v20;
      }
    }
    *(_OWORD *)double v20 = *(_OWORD *)v3;
    uint64_t v28 = v20 + 16;
    uint64_t v4 = (char *)std::vector<MTMPU::LayoutInterpolator::Entry>::__swap_out_circular_buffer((void **)a1, (uint64_t)&__p, v4);
    if (v28 != v27) {
      v28 += (v27 - v28 + 15) & 0xFFFFFFFFFFFFFFF0;
    }
    if (__p) {
      operator delete(__p);
    }
  }
  else if (__src == v6)
  {
    *(_OWORD *)__src = *(_OWORD *)a3;
    *(void *)(a1 + 8) = __src + 16;
  }
  else
  {
    uint64_t v9 = __src + 16;
    double v10 = v6 - 16;
    double v11 = *(_OWORD **)(a1 + 8);
    while (v10 < v6)
    {
      long long v12 = *(_OWORD *)v10;
      v10 += 16;
      *v11++ = v12;
    }
    *(void *)(a1 + 8) = v11;
    if (v6 != v9) {
      memmove(&v6[-16 * ((v6 - v9) >> 4)], __src, v6 - v9);
    }
    if (v4 <= v3) {
      v3 += 16 * (*(void *)(a1 + 8) > (unint64_t)v3);
    }
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v3;
  }
  return v4;
}

void sub_1E3BF0924(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double MTMPU::LayoutInterpolator::EntriesContainer::valueForSecondaryReferenceMetric(double **this, double a2)
{
  uint64_t v3 = *this;
  uint64_t v2 = this[1];
  unint64_t v4 = ((char *)v2 - (char *)*this) >> 4;
  if (v4 == 1) {
    return v3[1];
  }
  if (!v4)
  {
    exception = __cxa_allocate_exception(0x18uLL);
    std::string::basic_string[abi:ne180100]<0>(exception, "Can't query value from empty entries container.");
  }
  if (v2 == v3) {
    goto LABEL_11;
  }
  do
  {
    unint64_t v7 = v4 >> 1;
    uint64_t v8 = &v3[2 * (v4 >> 1)];
    double v10 = *v8;
    uint64_t v9 = v8 + 2;
    v4 += ~(v4 >> 1);
    if (v10 < a2) {
      uint64_t v3 = v9;
    }
    else {
      unint64_t v4 = v7;
    }
  }
  while (v4);
  if (v3 == v2)
  {
LABEL_11:
    double v12 = *(v2 - 4);
    double v13 = *(v2 - 3);
    double v14 = *(v2 - 2);
    double v15 = *(v2 - 1);
  }
  else
  {
    if (MTMPUFloatEqualToFloat(*v3, a2)) {
      return v3[1];
    }
    if (v3 == *this)
    {
      double v12 = *v3;
      double v13 = v3[1];
      double v14 = v3[2];
      double v15 = v3[3];
    }
    else
    {
      double v12 = *(v3 - 2);
      double v13 = *(v3 - 1);
      double v14 = *v3;
      double v15 = v3[1];
    }
  }
  double v16 = MTMPULayoutLinearRelationMake(v12, v13, v14, v15);

  return MTMPULayoutLinearRelationEvaluate(v16, v17, a2);
}

void sub_1E3BF0A78(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *std::vector<MTMPU::LayoutInterpolator::Entry>::__swap_out_circular_buffer(void **a1, uint64_t a2, char *__src)
{
  id v5 = *(void **)(a2 + 8);
  uint64_t v6 = (char *)*a1;
  unint64_t v7 = v5;
  if (*a1 != __src)
  {
    uint64_t v8 = __src;
    uint64_t v9 = *(void *)(a2 + 8);
    do
    {
      unint64_t v7 = (void *)(v9 - 16);
      *(_OWORD *)(v9 - 16) = *((_OWORD *)v8 - 1);
      v8 -= 16;
      v9 -= 16;
    }
    while (v8 != v6);
  }
  *(void *)(a2 + 8) = v7;
  double v10 = a1[1];
  uint64_t v11 = *(void *)(a2 + 16);
  int64_t v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    unint64_t v7 = *(void **)(a2 + 8);
  }
  *(void *)(a2 + 16) = v11 + v12;
  double v13 = (char *)*a1;
  *a1 = v7;
  *(void *)(a2 + 8) = v13;
  double v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v14;
  double v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + 24) = v15;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

void *std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(void *a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1E4E78600](v13, a1);
  if (v13[0])
  {
    uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *(void *)(v6 + 40);
    int v8 = *(_DWORD *)(v6 + 8);
    int v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      double v10 = std::locale::use_facet(&v14, MEMORY[0x1E4FBA258]);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v11 = a2 + a3;
    }
    else {
      uint64_t v11 = a2;
    }
    if (!std::__pad_and_output[abi:ne180100]<char,std::char_traits<char>>(v7, a2, v11, a2 + a3, v6, (char)v9)) {
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  MEMORY[0x1E4E78610](v13);
  return a1;
}

void sub_1E3BF0CA4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  MEMORY[0x1E4E78610](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(void *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x1E3BF0C84);
}

void sub_1E3BF0CF8(_Unwind_Exception *a1)
{
}

uint64_t std::__pad_and_output[abi:ne180100]<char,std::char_traits<char>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6 = a1;
  if (a1)
  {
    uint64_t v11 = *(void *)(a5 + 24);
    if (v11 <= a4 - a2) {
      int64_t v12 = 0;
    }
    else {
      int64_t v12 = v11 - (a4 - a2);
    }
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1) != a3 - a2) {
      return 0;
    }
    if (v12 >= 1)
    {
      std::string::basic_string[abi:ne180100](__p, v12, __c);
      double v13 = v18 >= 0 ? __p : (void **)__p[0];
      uint64_t v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(void *)v6 + 96))(v6, v13, v12);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if (v14 != v12) {
        return 0;
      }
    }
    uint64_t v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 96))(v6, a3, v15) == v15) {
      *(void *)(a5 + 24) = 0;
    }
    else {
      return 0;
    }
  }
  return v6;
}

void sub_1E3BF0E78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::string::basic_string[abi:ne180100](void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((unsigned char *)__b + 23) = __len;
    uint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memset(v6, __c, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __b;
}

uint64_t std::stringbuf::str[abi:ne180100]<std::allocator<char>>@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = std::stringbuf::view[abi:ne180100](a1);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  id v5 = (const void *)result;
  size_t v6 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    int v9 = operator new(v7 + 1);
    a2[1] = v6;
    a2[2] = v8 | 0x8000000000000000;
    *a2 = v9;
    a2 = v9;
  }
  else
  {
    *((unsigned char *)a2 + 23) = v4;
    if (!v4) {
      goto LABEL_9;
    }
  }
  uint64_t result = (uint64_t)memmove(a2, v5, v6);
LABEL_9:
  *((unsigned char *)a2 + v6) = 0;
  return result;
}

uint64_t std::stringbuf::view[abi:ne180100](uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 96);
  if ((v1 & 0x10) != 0)
  {
    unint64_t v3 = *(void *)(a1 + 48);
    if (*(void *)(a1 + 88) < v3) {
      *(void *)(a1 + 88) = v3;
    }
    return *(void *)(a1 + 40);
  }
  else if ((v1 & 8) != 0)
  {
    return *(void *)(a1 + 16);
  }
  else
  {
    return 0;
  }
}

void sub_1E3BF2A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *MTMPUFontTextStyleGetDescription(uint64_t a1)
{
  return _MTMPUFontTextStyleGetDescriptionAndCustomStyleStatus(a1, 0);
}

__CFString *_MTMPUFontTextStyleGetDescriptionAndCustomStyleStatus(uint64_t a1, char *a2)
{
  switch(a1)
  {
    case 0:
      char v2 = 0;
      uint64_t result = @"body";
      break;
    case 1:
      char v2 = 0;
      uint64_t result = @"headline";
      break;
    case 2:
      char v2 = 0;
      uint64_t result = @"subheadline";
      break;
    case 3:
      char v2 = 0;
      uint64_t result = @"footnote";
      break;
    case 4:
      char v2 = 0;
      uint64_t result = @"caption-1";
      break;
    case 5:
      char v2 = 0;
      uint64_t result = @"caption-2";
      break;
    case 6:
      char v2 = 0;
      uint64_t result = @"title-0";
      break;
    case 7:
      char v2 = 0;
      uint64_t result = @"title-1";
      break;
    case 8:
      char v2 = 0;
      uint64_t result = @"title-2";
      break;
    case 9:
      char v2 = 0;
      uint64_t result = @"title-3";
      break;
    case 10:
      char v2 = 0;
      uint64_t result = @"headline-1";
      break;
    case 11:
      char v2 = 0;
      uint64_t result = @"headline-2";
      break;
    case 12:
      char v2 = 0;
      uint64_t result = @"subheadline-1";
      break;
    case 13:
      char v2 = 0;
      uint64_t result = @"subheadline-2";
      break;
    case 14:
      char v2 = 0;
      uint64_t result = @"callout";
      break;
    case 15:
      char v2 = 0;
      uint64_t result = @"footnote-1";
      break;
    case 16:
      char v2 = 0;
      uint64_t result = @"footnote-2";
      break;
    case 17:
      char v2 = 1;
      uint64_t result = @"subheadline-3";
      break;
    case 18:
      char v2 = 1;
      uint64_t result = @"now-playing-title-1";
      break;
    case 19:
      char v2 = 0;
      uint64_t result = @"music-title-2";
      break;
    case 20:
      char v2 = 0;
      uint64_t result = @"music-title-2-multiline";
      break;
    case 21:
      char v2 = 1;
      uint64_t result = @"page-header";
      break;
    case 22:
      char v2 = 1;
      uint64_t result = @"page-header-large";
      break;
    case 23:
      char v2 = 1;
      uint64_t result = @"page-header-mid-large";
      break;
    case 24:
      char v2 = 1;
      uint64_t result = @"page-header-small";
      break;
    case 25:
      char v2 = 1;
      uint64_t result = @"page-header-compact-supertitle";
      break;
    case 26:
      char v2 = 1;
      uint64_t result = @"page-header-compact-subtitle";
      break;
    case 27:
      char v2 = 1;
      uint64_t result = @"page-header-regular-subtitle";
      break;
    default:
      BOOL v4 = a1 == 1000;
      if (a1 == 1000) {
        uint64_t result = @"system-font";
      }
      else {
        uint64_t result = 0;
      }
      char v2 = v4;
      break;
  }
  if (a2) {
    *a2 = v2;
  }
  return result;
}

__CFString *MTMPUFontWeightGetDescription(unint64_t a1)
{
  if (a1 > 8) {
    return 0;
  }
  else {
    return off_1E6E20488[a1];
  }
}

__CFString *MTMPUFontLeadingAdjustmentGetDescription(unint64_t a1)
{
  if (a1 > 2) {
    return 0;
  }
  else {
    return off_1E6E204D0[a1];
  }
}

void sub_1E3BF5394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getkCTFontDescriptorTextStyleHeavySymbolLoc_block_invoke(uint64_t a1)
{
  char v2 = (void *)CoreTextLibrary_0();
  uint64_t result = dlsym(v2, "kCTFontDescriptorTextStyleHeavy");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCTFontDescriptorTextStyleHeavySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t CoreTextLibrary_0()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!CoreTextLibraryCore_frameworkLibrary_0)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __CoreTextLibraryCore_block_invoke_0;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_1E6E20470;
    uint64_t v5 = 0;
    CoreTextLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  }
  uint64_t v0 = CoreTextLibraryCore_frameworkLibrary_0;
  int v1 = (void *)v3[0];
  if (!CoreTextLibraryCore_frameworkLibrary_0)
  {
    int v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __CoreTextLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  CoreTextLibraryCore_frameworkLibrary_0 = result;
  return result;
}

void *__getkCTFontDescriptorTextStyleBoldSymbolLoc_block_invoke(uint64_t a1)
{
  char v2 = (void *)CoreTextLibrary_0();
  uint64_t result = dlsym(v2, "kCTFontDescriptorTextStyleBold");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCTFontDescriptorTextStyleBoldSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCTFontDescriptorTextStyleSemiboldSymbolLoc_block_invoke(uint64_t a1)
{
  char v2 = (void *)CoreTextLibrary_0();
  uint64_t result = dlsym(v2, "kCTFontDescriptorTextStyleSemibold");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCTFontDescriptorTextStyleSemiboldSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCTFontDescriptorTextStyleMediumSymbolLoc_block_invoke(uint64_t a1)
{
  char v2 = (void *)CoreTextLibrary_0();
  uint64_t result = dlsym(v2, "kCTFontDescriptorTextStyleMedium");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCTFontDescriptorTextStyleMediumSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCTFontDescriptorTextStyleRegularSymbolLoc_block_invoke_0(uint64_t a1)
{
  char v2 = (void *)CoreTextLibrary_0();
  uint64_t result = dlsym(v2, "kCTFontDescriptorTextStyleRegular");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCTFontDescriptorTextStyleRegularSymbolLoc_ptr_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCTFontDescriptorTextStyleLightSymbolLoc_block_invoke(uint64_t a1)
{
  char v2 = (void *)CoreTextLibrary_0();
  uint64_t result = dlsym(v2, "kCTFontDescriptorTextStyleLight");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCTFontDescriptorTextStyleLightSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCTFontDescriptorTextStyleUltraLightSymbolLoc_block_invoke(uint64_t a1)
{
  char v2 = (void *)CoreTextLibrary_0();
  uint64_t result = dlsym(v2, "kCTFontDescriptorTextStyleUltraLight");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCTFontDescriptorTextStyleUltraLightSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCTFontDescriptorTextStyleThinSymbolLoc_block_invoke(uint64_t a1)
{
  char v2 = (void *)CoreTextLibrary_0();
  uint64_t result = dlsym(v2, "kCTFontDescriptorTextStyleThin");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCTFontDescriptorTextStyleThinSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t _MPUApplicationDefaultsDidChangeNotification(uint64_t a1, void *a2)
{
  return [a2 _defaultsDidChange];
}

void sub_1E3BF6CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void sub_1E3BF7014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1E3BF72F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1E3BF7648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t IMAccessibilitySetShouldInstallCategories(uint64_t result)
{
  _AXShouldInstallIMCategories = result;
  return result;
}

void IMAccessibilityInitialize()
{
  if (_AXShouldInstallIMCategories)
  {
    IMAccessibilityInstallSafeCategory(&cfstr_Imuiviewaccess.isa);
    IMAccessibilityInstallSafeCategory(&cfstr_Imaccessibilit.isa);
    IMAccessibilityInstallSafeCategory(&cfstr_Imexpandinglab.isa);
    IMAccessibilityInstallSafeCategory(&cfstr_Imsearchfielda.isa);
  }
}

double IMAXFrameToBounds(void *a1, double a2, double a3, double a4, double a5)
{
  id v9 = a1;
  double v10 = [v9 window];
  objc_msgSend(v10, "convertRect:fromWindow:", 0, a2, a3, a4, a5);
  objc_msgSend(v9, "convertRect:fromView:", v10);
  double v12 = v11;

  return v12;
}

void IMAXPerformSafeBlock(void *a1)
{
  int v1 = a1;
  v1[2]();
}

void sub_1E3BF7F80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, int a10, __int16 a11, __int16 a12, uint64_t a13)
{
  if (a2 == 1)
  {
    id v13 = objc_begin_catch(exception_object);
    uint64_t v14 = [MEMORY[0x1E4F91F08] accessibility];
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      id v15 = [v13 name];
      id v16 = [v13 reason];
      double v17 = [v13 callStackSymbols];
      LODWORD(a9) = 138412802;
      *(void *)((char *)&a9 + 4) = v15;
      WORD6(a9) = 2112;
      *(void *)((char *)&a9 + 14) = v16;
      a12 = 2112;
      a13 = (uint64_t)v17;
      _os_log_impl(&dword_1E3BC5000, v14, OS_LOG_TYPE_ERROR, "Caught exception '%@' while performing safe block; reason: '%@'. Stacktrace: %@.",
        (uint8_t *)&a9,
        0x20u);
    }
    objc_end_catch();
    JUMPOUT(0x1E3BF7F48);
  }
  _Unwind_Resume(exception_object);
}

double CGPointMultiply(double a1, double a2, double a3)
{
  return a1 * a3;
}

double CGRectFitRectInRect(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8 = *MEMORY[0x1E4F1DB28];
  double v9 = *(double *)(MEMORY[0x1E4F1DB28] + 8);
  double v10 = 0.0;
  if (a3 != *MEMORY[0x1E4F1DB30] || a4 != *(double *)(MEMORY[0x1E4F1DB30] + 8))
  {
    float v12 = a7;
    float v13 = a8;
    float v14 = a3;
    float v15 = a4;
    double v10 = fminf(v12 / v14, v13 / v15);
  }
  double v16 = a3 * v10;
  double v17 = a4 * v10;
  if (a7 > v16) {
    double v8 = (a7 - v16) * 0.5;
  }
  if (a8 > v17) {
    double v9 = (a8 - v17) * 0.5;
  }
  *(void *)&double result = (unint64_t)CGRectIntegral(*(CGRect *)&v8);
  return result;
}

double CGSizeScaleThatFitsInCGSize(double result, double a2, double a3, double a4)
{
  if (result == *MEMORY[0x1E4F1DB30] && a2 == *(double *)(MEMORY[0x1E4F1DB30] + 8)) {
    return 0.0;
  }
  float v5 = a3;
  float v6 = a4;
  float v7 = result;
  float v8 = a2;
  *(float *)&double result = fminf(v5 / v7, v6 / v8);
  return result;
}

double CGRectCenterRectInRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  v19.origin.x = a5;
  v19.origin.y = a6;
  v19.size.width = a7;
  v19.size.height = a8;
  double MidX = CGRectGetMidX(v19);
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  double v16 = MidX - CGRectGetWidth(v20) * 0.5;
  v21.origin.x = a5;
  v21.origin.y = a6;
  v21.size.width = a7;
  v21.size.height = a8;
  CGRectGetMidY(v21);
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  CGRectGetHeight(v22);
  return v16;
}

double CGRectGetCenter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v8 = ceil(CGRectGetMidX(*(CGRect *)&a1));
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetMidY(v10);
  return v8;
}

double CGRectMultiply(double result, double a2, double a3, double a4, double a5)
{
  if (a5 != 1.0) {
    return result * a5;
  }
  return result;
}

double CGRectRoundUp(double a1)
{
  return ceil(a1);
}

double CGSizeScaleThatFillsInCGSize(double result, double a2, double a3, double a4)
{
  if (result == *MEMORY[0x1E4F1DB30] && a2 == *(double *)(MEMORY[0x1E4F1DB30] + 8)) {
    return 0.0;
  }
  float v5 = a3;
  float v6 = a4;
  float v7 = result;
  float v8 = a2;
  *(float *)&double result = fmaxf(v5 / v7, v6 / v8);
  return result;
}

double CGSizeScaledToFitInSize(double a1, double a2, double a3, double a4)
{
  double v4 = 0.0;
  if (a1 != *MEMORY[0x1E4F1DB30] || a2 != *(double *)(MEMORY[0x1E4F1DB30] + 8))
  {
    float v6 = a3;
    float v7 = a4;
    float v8 = a1;
    float v9 = a2;
    double v4 = fminf(v6 / v8, v7 / v9);
  }
  return a1 * v4;
}

double CGSizeScale(double a1, double a2, double a3)
{
  return a1 * a3;
}

double CGSizeScaledToFillInSize(double a1, double a2, double a3, double a4)
{
  double v4 = 0.0;
  if (a1 != *MEMORY[0x1E4F1DB30] || a2 != *(double *)(MEMORY[0x1E4F1DB30] + 8))
  {
    float v6 = a3;
    float v7 = a4;
    float v8 = a1;
    float v9 = a2;
    double v4 = fmaxf(v6 / v8, v7 / v9);
  }
  return a1 * v4;
}

double CGSizeRound(double a1)
{
  return round(a1);
}

double CGSizeMakeEvenSize(double result)
{
  if ((int)result) {
    return result + -1.0;
  }
  return result;
}

double CGSizeRotate(double a1, double a2)
{
  return a2;
}

double CGSizeMin(double result, double a2, double a3, double a4)
{
  BOOL v4 = a3 > result;
  if (a4 > a2) {
    BOOL v4 = 1;
  }
  if (!v4) {
    return a3;
  }
  return result;
}

double CGRectByReplacingX(double a1, double a2, double a3, double a4, double a5)
{
  return a5;
}

double CGRectByReplacingOrigin(double a1, double a2, double a3, double a4, double a5)
{
  return a5;
}

void IMImageWrite(UIImage *a1)
{
}

double IMDegreeToRadian(double a1)
{
  return a1 * 3.14159265 / 180.0;
}

double IMRadianToDegree(double a1)
{
  return a1 * 180.0 / 3.14159265;
}

double IMRoundToPixel(double a1)
{
  double v2 = *(double *)&IMRoundToPixel_scale;
  if (*(double *)&IMRoundToPixel_scale == -1.0)
  {
    unint64_t v3 = objc_msgSend(MEMORY[0x1E4FB1BA8], "mainScreen", *(double *)&IMRoundToPixel_scale);
    [v3 scale];
    IMRoundToPixel_scale = v4;

    double v2 = *(double *)&IMRoundToPixel_scale;
  }
  return round(v2 * a1) / v2;
}

void CGRectEdgePointAtAngle(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5)
{
  CGRectGetMidX(*(CGRect *)&a1);
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.width = a3;
  v11.size.height = a4;
  CGRectGetMidY(v11);
  __double2 v10 = __sincos_stret(a5);
  if (v10.__sinval <= 0.0000999999975)
  {
    if (v10.__sinval < -0.0000999999975)
    {
      v14.origin.x = a1;
      v14.origin.y = a2;
      v14.size.width = a3;
      v14.size.height = a4;
      CGRectGetMinY(v14);
      v15.origin.x = a1;
      v15.origin.y = a2;
      v15.size.width = a3;
      v15.size.height = a4;
      CGRectGetMinY(v15);
    }
  }
  else
  {
    v12.origin.x = a1;
    v12.origin.y = a2;
    v12.size.width = a3;
    v12.size.height = a4;
    CGRectGetMaxY(v12);
    v13.origin.x = a1;
    v13.origin.y = a2;
    v13.size.width = a3;
    v13.size.height = a4;
    CGRectGetMaxY(v13);
  }
  if (v10.__cosval <= 0.0000999999975)
  {
    if (v10.__cosval < -0.0000999999975)
    {
      v18.origin.x = a1;
      v18.origin.y = a2;
      v18.size.width = a3;
      v18.size.height = a4;
      CGRectGetMinX(v18);
      v19.origin.x = a1;
      v19.origin.y = a2;
      v19.size.width = a3;
      v19.size.height = a4;
      CGRectGetMinX(v19);
    }
  }
  else
  {
    v16.origin.x = a1;
    v16.origin.y = a2;
    v16.size.width = a3;
    v16.size.height = a4;
    CGRectGetMaxX(v16);
    v17.origin.x = a1;
    v17.origin.y = a2;
    v17.size.width = a3;
    v17.size.height = a4;
    CGRectGetMaxX(v17);
  }
}

double IMRectCenteredIntegralRectScale(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v16 = a5 + (a7 - a3) * 0.5;
  double v17 = fabs(a9);
  double v18 = a9;
  if (v17 < 0.00000011920929)
  {
    if (IMAdjustToScale_onceToken != -1) {
      dispatch_once(&IMAdjustToScale_onceToken, &__block_literal_global_11);
    }
    double v18 = *(double *)&IMAdjustToScale___s;
  }
  BOOL v19 = v18 == 1.0;
  double v20 = round(v16 * v18) / v18;
  double v21 = round(v16);
  if (v19) {
    double v22 = v21;
  }
  else {
    double v22 = v20;
  }
  if (v17 < 0.00000011920929 && IMAdjustToScale_onceToken != -1) {
    dispatch_once(&IMAdjustToScale_onceToken, &__block_literal_global_11);
  }
  return v22;
}

void IMRectCenteredXInRectScale(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  if (fabs(a9) < 0.00000011920929 && IMAdjustToScale_onceToken != -1) {
    dispatch_once(&IMAdjustToScale_onceToken, &__block_literal_global_11);
  }
}

double IMRectCenteredYInRectScale(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  if (fabs(a9) < 0.00000011920929 && IMAdjustToScale_onceToken != -1) {
    dispatch_once(&IMAdjustToScale_onceToken, &__block_literal_global_11);
  }
  return a1;
}

void IMRectCenteredAboutPointScale(double a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  double v7 = fabs(a7);
  if (v7 < 0.00000011920929 && IMAdjustToScale_onceToken != -1) {
    dispatch_once(&IMAdjustToScale_onceToken, &__block_literal_global_11);
  }
  if (v7 < 0.00000011920929 && IMAdjustToScale_onceToken != -1) {
    dispatch_once(&IMAdjustToScale_onceToken, &__block_literal_global_11);
  }
}

void __IMAdjustToScale_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4FB1BA8] mainScreen];
  [v0 scale];
  uint64_t v2 = v1;

  IMAdjustToScale___s = v2;
}

void sub_1E3BFAF7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
}

void sub_1E3BFB598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_1E3BFB6A8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1E3BFD454(_Unwind_Exception *a1)
{
}

void sub_1E3BFD474(void *a1)
{
}

void sub_1E3BFD964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1E3BFDE1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __IMAccessibilityValidateInstanceMethodArguments(objc_method *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v12 = a2;
  id v13 = a3;
  if (method_getNumberOfArguments(a1) - 2 != a4)
  {
    [NSString stringWithFormat:@"Argument count is different for method: -[%@ %@]. Actual: %d, Stated: %d", v12, v13, a4, method_getNumberOfArguments(a1)];
  }
  uint64_t v24 = (const char **)&a9;
  if ((int)a4 >= 1)
  {
    int v14 = 0;
    do
    {
      CGRect v15 = v24++;
      double v16 = *v15;
      double v17 = [NSString stringWithUTF8String:*v15];
      double v18 = [NSString stringWithFormat:@"@\"%@\"", v17];

      BOOL v19 = method_copyArgumentType(a1, v14 + 2);
      double v20 = v19;
      if (v16) {
        BOOL v21 = v19 == 0;
      }
      else {
        BOOL v21 = 1;
      }
      BOOL v22 = v21 || v18 == 0;
      if (v22 || strcmp(v16, v19) && strcmp((const char *)[v18 UTF8String], v20))
      {
        long long v23 = "_";
        if (v20) {
          long long v23 = v20;
        }
        [NSString stringWithFormat:@"Argument type is different for method: -[%@ %@]. Actual: '%s', Stated: '%s'", v12, v13, v23, v16];
      }
      free(v20);

      ++v14;
    }
    while (a4 != v14);
  }
}

Class IMAccessibilityInstallSafeCategory(NSString *a1)
{
  Class result = NSClassFromString(a1);
  if (result)
  {
    return (Class)[(objc_class *)result performSelector:sel__initializeSafeCategory];
  }
  return result;
}

void sub_1E3BFED90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void sub_1E3BFF610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void __IMAdjustToScale_block_invoke_0()
{
  uint64_t v0 = [MEMORY[0x1E4FB1BA8] mainScreen];
  [v0 scale];
  uint64_t v2 = v1;

  IMAdjustToScale___s_0 = v2;
}

void sub_1E3C02AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1E3C02ED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1E3C03620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void sub_1E3C03840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  objc_destroyWeak(v9);
  _Unwind_Resume(a1);
}

void __Block_byref_object_copy__52(uint64_t a1, uint64_t a2)
{
}

void __Block_byref_object_dispose__53(uint64_t a1)
{
}

void sub_1E3C042CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1E3C04498(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1E3C07BA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1E3C080EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1E3C08CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void AMPAddOverridesForSupportingLayoutDirectionOnUIView()
{
  if (sOverride_UIView_traitCollection != -1) {
    dispatch_once(&sOverride_UIView_traitCollection, &__block_literal_global_20);
  }
}

id swizzle_UIView_traitCollection(void *a1)
{
  v10[2] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = sOriginal_UIView_traitCollection();
  unint64_t v3 = [v1 _layoutDirectionValue];
  if (v3
    && (uint64_t v4 = [v1 _layoutDirectionFromLayoutDirectionValue:v3], v4 != objc_msgSend(v2, "layoutDirection")))
  {
    float v6 = [MEMORY[0x1E4FB1E20] traitCollectionWithLayoutDirection:v4];
    v10[0] = v2;
    v10[1] = v6;
    uint64_t v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:2];
    id v5 = [MEMORY[0x1E4FB1E20] traitCollectionWithTraitsFromCollections:v7];
  }
  else
  {
    id v5 = v2;
  }
  id v8 = v5;

  return v8;
}

id MTImageDownloadErrorWithUnderlyingError(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  float v6 = (void *)MEMORY[0x1E4F1CA60];
  id v7 = a2;
  id v8 = [v6 dictionary];
  float v9 = [NSString stringWithFormat:@"An underlying %@ error occurred", v7];

  [v8 setObject:v9 forKeyedSubscript:*MEMORY[0x1E4F28228]];
  if (v5) {
    [v8 setObject:v5 forKeyedSubscript:*MEMORY[0x1E4F28A50]];
  }
  __double2 v10 = [MEMORY[0x1E4F28C58] errorWithDomain:@"com.apple.podcasts.MTImageDownloader" code:a1 userInfo:v8];

  return v10;
}

id MTImageDownloadErrorWithCode(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2)
  {
    __double2 v10 = (objc_class *)NSString;
    id v11 = a2;
    id v12 = (__CFString *)[[v10 alloc] initWithFormat:v11 arguments:&a9];
  }
  else
  {
    id v12 = @"An unknown error occurred";
  }
  id v13 = [MEMORY[0x1E4F1CA60] dictionary];
  [v13 setObject:v12 forKeyedSubscript:*MEMORY[0x1E4F28228]];
  int v14 = [MEMORY[0x1E4F28C58] errorWithDomain:@"com.apple.podcasts.MTImageDownloader" code:a1 userInfo:v13];

  return v14;
}

id UIPurchaseDelegate.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id UIPurchaseDelegate.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI18UIPurchaseDelegate_senderWindow] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIPurchaseDelegate();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for UIPurchaseDelegate()
{
  return self;
}

id sub_1E3C0B1F4(void *a1)
{
  unint64_t v3 = self;
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_sharedInstance);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DDF0]), sel_initWithPurchase_bag_, v4, v5);

  objc_msgSend(v6, sel_setDelegate_, v1);
  return v6;
}

id UIPurchaseDelegate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIPurchaseDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1E3C0B2E0(void *a1)
{
  uint64_t v3 = *v1;
  id v4 = self;
  id v5 = a1;
  id v6 = objc_msgSend(v4, sel_sharedInstance);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DDF0]), sel_initWithPurchase_bag_, v5, v6);

  objc_msgSend(v7, sel_setDelegate_, v3);
  return v7;
}

uint64_t sub_1E3C0B43C(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(id, id, uint64_t, uint64_t))
{
  id v13 = _Block_copy(aBlock);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  id v15 = a3;
  id v16 = a4;
  id v17 = a1;
  a8(v15, v16, a7, v14);

  return swift_release();
}

uint64_t sub_1E3C0B4FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = 0;
    id v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & ~v4) == 0) {
        int v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1E3C0B554@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    id v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1E3C0B5AC(uint64_t a1, uint64_t a2)
{
  return sub_1E3C0C0A4(a1, a2, MEMORY[0x1E4F27EB8]);
}

void sub_1E3C0B5D0(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void sub_1E3C0B5DC(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1E3C0B5E4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1E3C0B5F8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_1E3C0B60C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1E3C0B638@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1E3C0B65C(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1E3C0B670@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1E3C0B684(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1E3C0B698()
{
  return *v0 == 0;
}

uint64_t sub_1E3C0B6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1E3C0B6C0(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1E3C0B6D8(uint64_t a1, uint64_t a2)
{
  return sub_1E3C0B90C(a1, a2, MEMORY[0x1E4FBC3C0]);
}

uint64_t sub_1E3C0B6F0()
{
  return sub_1E3E7E2A0();
}

uint64_t sub_1E3C0B71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3C0B990(a1, a2, a3, MEMORY[0x1E4FBC3C0]);
}

void sub_1E3C0B734(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_1E3C0B73C(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1E3C0B76C(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

uint64_t sub_1E3C0B788(uint64_t a1, id *a2)
{
  uint64_t result = sub_1E3E7CD10();
  *a2 = 0;
  return result;
}

uint64_t sub_1E3C0B800(uint64_t a1, id *a2)
{
  char v3 = sub_1E3E7CD20();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1E3C0B880@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E7CD30();
  uint64_t v2 = sub_1E3E7CCF0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1E3C0B8C4(uint64_t a1, uint64_t a2)
{
  return sub_1E3C0C0A4(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1E3C0B8DC(uint64_t a1, uint64_t a2)
{
  return sub_1E3C0B90C(a1, a2, MEMORY[0x1E4FBC3B8]);
}

uint64_t sub_1E3C0B8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3C0B990(a1, a2, a3, MEMORY[0x1E4FBC3B8]);
}

uint64_t sub_1E3C0B90C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1E3E7E270();
  a3(v5);
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3C0B964()
{
  return sub_1E3E7E280();
}

uint64_t sub_1E3C0B990(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1E3E7E270();
  a4(v6);
  return sub_1E3E7E2B0();
}

void *sub_1E3C0B9E4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_1E3C0B9F0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

BOOL sub_1E3C0BA00(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

uint64_t sub_1E3C0BA30()
{
  return sub_1E3E78140();
}

uint64_t sub_1E3C0BA7C()
{
  return sub_1E3E78130();
}

uint64_t sub_1E3C0BAD4()
{
  return sub_1E3E7E2B0();
}

void *sub_1E3C0BB3C(void *result)
{
  *v1 |= *result;
  return result;
}

uint64_t sub_1E3C0BB50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1E3C0D214(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

BOOL sub_1E3C0BB94(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_1E3C0BBA8(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_1E3C0BBB4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1E3C0BBC8(void *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_1E3C0BBDC(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1E3C0BBF0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

uint64_t sub_1E3C0BC04()
{
  swift_getWitnessTable();

  return sub_1E3E78120();
}

uint64_t sub_1E3C0BC70(uint64_t a1)
{
  uint64_t v2 = sub_1E3C0CEC4((unint64_t *)&qword_1EBFDEEC0, type metadata accessor for Key);
  uint64_t v3 = sub_1E3C0CEC4(&qword_1EAE24AF8, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1E3C0BD2C(uint64_t a1)
{
  uint64_t v2 = sub_1E3C0CEC4(&qword_1EAE24B00, type metadata accessor for AMSBagKey);
  uint64_t v3 = sub_1E3C0CEC4(&qword_1EAE24B08, type metadata accessor for AMSBagKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1E3C0BDE8(uint64_t a1)
{
  uint64_t v2 = sub_1E3C0CEC4(&qword_1EAE24AE0, type metadata accessor for Name);
  uint64_t v3 = sub_1E3C0CEC4((unint64_t *)&unk_1EAE24AE8, type metadata accessor for Name);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1E3C0BEA4(uint64_t a1)
{
  uint64_t v2 = sub_1E3C0CEC4((unint64_t *)&qword_1EBFE60A8, type metadata accessor for AttributeName);
  uint64_t v3 = sub_1E3C0CEC4(&qword_1EAE24990, type metadata accessor for AttributeName);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1E3C0BF60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1E3E7CCF0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1E3C0BFA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3E7CD30();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1E3C0BFD4(uint64_t a1)
{
  uint64_t v2 = sub_1E3C0CEC4(&qword_1EAE24AD0, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_1E3C0CEC4(&qword_1EAE24AD8, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

BOOL sub_1E3C0C090(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1E3C0C0A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1E3E7CD30();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1E3C0C0E8()
{
  sub_1E3E7CD30();
  sub_1E3E7CE50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3C0C13C()
{
  sub_1E3E7CD30();
  sub_1E3E7E270();
  sub_1E3E7CE50();
  uint64_t v0 = sub_1E3E7E2B0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1E3C0C1B0()
{
  uint64_t v0 = sub_1E3E7CD30();
  uint64_t v2 = v1;
  if (v0 == sub_1E3E7CD30() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1E3E7E150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t _s10PodcastsUI18UIPurchaseDelegateC8purchase_6handle10completionySo11AMSPurchaseC_So22AMSAuthenticateRequestCySo0I6ResultCSg_s5Error_pSgtctF_0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1E3E7A880();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C0D28C();
  sub_1E3E7DB80();
  id v12 = a1;
  id v13 = sub_1E3E7A860();
  os_log_type_t v14 = sub_1E3E7D500();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v26 = a2;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v8;
    id v16 = (uint8_t *)v15;
    id v17 = (void *)swift_slowAlloc();
    uint64_t v24 = a3;
    uint64_t v25 = a4;
    *(_DWORD *)id v16 = 138412290;
    id v18 = [v12 buyParams];
    id v27 = v18;
    a3 = v24;
    a4 = v25;
    sub_1E3E7DBD0();
    *id v17 = v18;
    a2 = v26;

    _os_log_impl(&dword_1E3BC5000, v13, v14, "Got authentication request for purchase with buyParams: %@", v16, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v17, -1, -1);
    BOOL v19 = v16;
    uint64_t v8 = v23;
    MEMORY[0x1E4E79510](v19, -1, -1);
  }
  else
  {

    id v13 = v12;
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a3;
  *(void *)(v20 + 24) = a4;
  sub_1E3E775E0();
  sub_1E3C8DABC(a2, (uint64_t)sub_1E3C0D740, v20);
  return swift_release();
}

uint64_t _s10PodcastsUI18UIPurchaseDelegateC8purchase_6handle10completionySo11AMSPurchaseC_So16AMSDialogRequestCySo0I6ResultCSg_s5Error_pSgtctF_0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1E3E7A880();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C0D28C();
  sub_1E3E7DB80();
  id v12 = a1;
  id v13 = sub_1E3E7A860();
  os_log_type_t v14 = sub_1E3E7D500();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v26 = a2;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v8;
    id v16 = (uint8_t *)v15;
    id v17 = (void *)swift_slowAlloc();
    uint64_t v24 = a3;
    uint64_t v25 = a4;
    *(_DWORD *)id v16 = 138412290;
    id v18 = [v12 buyParams];
    id v27 = v18;
    a3 = v24;
    a4 = v25;
    sub_1E3E7DBD0();
    *id v17 = v18;
    a2 = v26;

    _os_log_impl(&dword_1E3BC5000, v13, v14, "Got dialog request for purchase with buyParams: %@", v16, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v17, -1, -1);
    BOOL v19 = v16;
    uint64_t v8 = v23;
    MEMORY[0x1E4E79510](v19, -1, -1);
  }
  else
  {

    id v13 = v12;
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a3;
  *(void *)(v20 + 24) = a4;
  sub_1E3E775E0();
  sub_1E3C8DAE4(a2, (uint64_t)sub_1E3C0D304, v20);
  return swift_release();
}

uint64_t _s10PodcastsUI18UIPurchaseDelegateC8purchase_6handle10completionySo11AMSPurchaseC_So20AMSEngagementRequestCySo0I6ResultCSg_s5Error_pSgtctF_0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1E3E7A880();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C0D28C();
  sub_1E3E7DB80();
  id v12 = a1;
  id v13 = sub_1E3E7A860();
  os_log_type_t v14 = sub_1E3E7D500();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v26 = a2;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v8;
    id v16 = (uint8_t *)v15;
    id v17 = (void *)swift_slowAlloc();
    uint64_t v24 = a3;
    uint64_t v25 = a4;
    *(_DWORD *)id v16 = 138412290;
    id v18 = [v12 buyParams];
    id v27 = v18;
    a3 = v24;
    a4 = v25;
    sub_1E3E7DBD0();
    *id v17 = v18;
    a2 = v26;

    _os_log_impl(&dword_1E3BC5000, v13, v14, "Got engagementRequest request for purchase with buyParams: %@", v16, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v17, -1, -1);
    BOOL v19 = v16;
    uint64_t v8 = v23;
    MEMORY[0x1E4E79510](v19, -1, -1);
  }
  else
  {

    id v13 = v12;
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a3;
  *(void *)(v20 + 24) = a4;
  sub_1E3E775E0();
  sub_1E3C8DB0C(a2, (uint64_t)sub_1E3C0D740, v20);
  return swift_release();
}

uint64_t method lookup function for UIPurchaseDelegate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UIPurchaseDelegate);
}

uint64_t dispatch thunk of UIPurchaseDelegate.handle(_:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of UIPurchaseDelegate.createAMSUIPurchaseTask(from:senderWindow:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

void type metadata accessor for MTEpisodePlayState(uint64_t a1)
{
}

void type metadata accessor for SymbolScale(uint64_t a1)
{
}

void type metadata accessor for SymbolWeight(uint64_t a1)
{
}

void type metadata accessor for MRMediaRemoteError(uint64_t a1)
{
}

void type metadata accessor for AMSDialogActionStyle(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for FairPlayDebugView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  sub_1E3E775E0();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for PlayStateDataSource.Config(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PlayStateDataSource.Config(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for ContentMode(uint64_t a1)
{
}

void type metadata accessor for UIPopoverArrowDirection(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for NSWritingDirection(uint64_t a1)
{
}

void type metadata accessor for MTEpisodeDownloadBehavior(uint64_t a1)
{
}

void type metadata accessor for MTPodcastEpisodeLimit(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for MPCPlayerChangeRequestOptions(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceLayoutDirection(uint64_t a1)
{
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1E3C0CC98(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_1E3C0CCEC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for MPCPlayerItemDurationSnapshot(uint64_t a1)
{
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PageRenderState.ResourceCounter(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PageRenderState.ResourceCounter(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for PlaybackController.PreferredJumpInterval(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PlaybackController.PreferredJumpInterval(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_1E3C0CE34()
{
  return sub_1E3C0CEC4(&qword_1EAE24938, type metadata accessor for MPCPlayerChangeRequestOptions);
}

uint64_t sub_1E3C0CE7C()
{
  return sub_1E3C0CEC4(&qword_1EAE24940, type metadata accessor for MPCPlayerChangeRequestOptions);
}

uint64_t sub_1E3C0CEC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3C0CF0C()
{
  return sub_1E3C0CEC4(&qword_1EAE24948, type metadata accessor for MPCPlayerChangeRequestOptions);
}

uint64_t sub_1E3C0CF54()
{
  return sub_1E3C0CEC4(&qword_1EAE24950, type metadata accessor for MPCPlayerChangeRequestOptions);
}

uint64_t sub_1E3C0CF9C()
{
  return sub_1E3C0CEC4(&qword_1EAE24958, type metadata accessor for AttributeName);
}

uint64_t sub_1E3C0CFE4()
{
  return sub_1E3C0CEC4(&qword_1EAE24960, type metadata accessor for AttributeName);
}

uint64_t sub_1E3C0D02C()
{
  return sub_1E3C0CEC4(&qword_1EBFE63A8, type metadata accessor for CFString);
}

uint64_t sub_1E3C0D074()
{
  return sub_1E3C0CEC4((unint64_t *)&qword_1EBFE63A0, type metadata accessor for CFString);
}

uint64_t sub_1E3C0D0BC()
{
  return sub_1E3C0CEC4(&qword_1EAE24968, type metadata accessor for SymbolWeight);
}

uint64_t sub_1E3C0D104()
{
  return sub_1E3C0CEC4((unint64_t *)&unk_1EAE24970, type metadata accessor for SymbolScale);
}

uint64_t sub_1E3C0D14C()
{
  return sub_1E3C0CEC4((unint64_t *)&unk_1EBFE60B8, type metadata accessor for AttributeName);
}

uint64_t sub_1E3C0D194()
{
  return sub_1E3C0CEC4((unint64_t *)&unk_1EAE24980, type metadata accessor for MTEpisodeDownloadBehavior);
}

uint64_t sub_1E3C0D1DC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  char v3 = (unsigned __int8 *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    uint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1E3C0D214(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  int v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1E3C0D24C()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1E3C0D284(uint64_t a1, uint64_t a2)
{
  return sub_1E3C8CF20(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_1E3C0D28C()
{
  unint64_t result = qword_1EBFDEE98;
  if (!qword_1EBFDEE98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBFDEE98);
  }
  return result;
}

uint64_t sub_1E3C0D2CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C0D304()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for Name(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for AMSBagKey(uint64_t a1)
{
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void sub_1E3C0D390(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1E3C0D3D8()
{
  return sub_1E3C0CEC4(&qword_1EAE24A70, type metadata accessor for AMSBagKey);
}

uint64_t sub_1E3C0D420()
{
  return sub_1E3C0CEC4(&qword_1EAE24A78, type metadata accessor for AMSBagKey);
}

uint64_t sub_1E3C0D468()
{
  return sub_1E3C0CEC4(&qword_1EAE24A80, type metadata accessor for AMSBagKey);
}

uint64_t sub_1E3C0D4B0()
{
  return sub_1E3C0CEC4(&qword_1EAE24A88, type metadata accessor for Key);
}

uint64_t sub_1E3C0D4F8()
{
  return sub_1E3C0CEC4(&qword_1EAE24A90, type metadata accessor for Key);
}

uint64_t sub_1E3C0D540()
{
  return sub_1E3C0CEC4(&qword_1EAE24A98, type metadata accessor for Name);
}

uint64_t sub_1E3C0D588()
{
  return sub_1E3C0CEC4(&qword_1EAE24AA0, type metadata accessor for Name);
}

uint64_t sub_1E3C0D5D0()
{
  return sub_1E3C0CEC4(&qword_1EAE24AA8, type metadata accessor for Name);
}

uint64_t sub_1E3C0D618()
{
  return sub_1E3C0CEC4(&qword_1EAE24AB0, type metadata accessor for URLResourceKey);
}

uint64_t sub_1E3C0D660()
{
  return sub_1E3C0CEC4(&qword_1EAE24AB8, type metadata accessor for URLResourceKey);
}

uint64_t sub_1E3C0D6A8()
{
  return sub_1E3C0CEC4((unint64_t *)&unk_1EAE24AC0, type metadata accessor for URLResourceKey);
}

uint64_t sub_1E3C0D6F0()
{
  return sub_1E3C0CEC4((unint64_t *)&unk_1EBFDEEC8, type metadata accessor for Key);
}

uint64_t sub_1E3C0D798()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6008);
  __swift_allocate_value_buffer(v0, qword_1EBFE54B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBFE54B8);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBFE4F30);
  sub_1E3C10DE8(&qword_1EBFE57F8, &qword_1EBFE6008);
  return sub_1E3E78210();
}

uint64_t sub_1E3C0D850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v90 = a1;
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5808);
  uint64_t v91 = *(void *)(v89 - 8);
  uint64_t v1 = MEMORY[0x1F4188790](v89);
  v88 = (char *)v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  v103 = (char *)v78 - v3;
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B90);
  uint64_t v109 = *(void *)(v94 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v94);
  v100 = (char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  v84 = (char *)v78 - v7;
  MEMORY[0x1F4188790](v6);
  v108 = (char *)v78 - v8;
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B68);
  uint64_t v112 = *(void *)(v101 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v101);
  v86 = (char *)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v105 = (char *)v78 - v12;
  MEMORY[0x1F4188790](v11);
  v110 = (char *)v78 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2BC0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  id v18 = (char *)v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  BOOL v21 = (char *)v78 - v20;
  MEMORY[0x1F4188790](v19);
  v96 = (char *)v78 - v22;
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5818);
  uint64_t v87 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  v104 = (char *)v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1E3E781D0();
  uint64_t v113 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v25 = (char *)v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B80);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57F0);
  uint64_t v106 = *(void *)(v29 - 8);
  uint64_t v107 = v29;
  uint64_t v30 = MEMORY[0x1F4188790](v29);
  BOOL v32 = (char *)v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  v111 = (char *)v78 - v33;
  uint64_t v34 = sub_1E3E78200();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v28, 1, 1, v34);
  sub_1E3E780D0();
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C40);
  uint64_t v99 = MEMORY[0x1E4FBD2D8];
  uint64_t v35 = sub_1E3C10DE8(&qword_1EBFE2BB8, &qword_1EBFE2BC0);
  sub_1E3E78210();
  MEMORY[0x1E4E719C0](v18, v14, v35);
  float v36 = *(void (**)(char *, uint64_t))(v15 + 8);
  v36(v18, v14);
  sub_1E3E780B0();
  v36(v21, v14);
  int v37 = v96;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v96, v18, v14);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D98);
  float v39 = v104;
  sub_1E3E781C0();
  sub_1E3C10CE0((uint64_t)v28, &qword_1EBFE2B80);
  v36(v37, v14);
  v93 = *(void (**)(char *, uint64_t))(v113 + 8);
  v113 += 8;
  uint64_t v40 = v97;
  v93(v25, v97);
  MEMORY[0x1E4E719E0](v39, v38);
  uint64_t v83 = sub_1E3C10DE8(&qword_1EBFE57E8, &qword_1EBFE57F0);
  uint64_t v41 = v107;
  MEMORY[0x1E4E719C0](v32, v107, v83);
  float v42 = *(uint64_t (**)(char *, uint64_t))(v106 + 8);
  v106 += 8;
  v85 = v42;
  v42(v32, v41);
  sub_1E3E780D0();
  uint64_t v43 = sub_1E3C10DE8(&qword_1EBFE2B88, &qword_1EBFE2B90);
  float v44 = v100;
  uint64_t v45 = v94;
  sub_1E3E78210();
  v46 = v84;
  MEMORY[0x1E4E719C0](v44, v45, v43);
  uint64_t v47 = v109;
  uint64_t v48 = v109 + 8;
  v49 = *(void (**)(char *, uint64_t))(v109 + 8);
  v49(v44, v45);
  uint64_t v50 = v48;
  sub_1E3E780B0();
  v49(v46, v45);
  v51 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  uint64_t v109 = v47 + 32;
  v81 = v51;
  v52 = v108;
  v51(v108, v44, v45);
  v53 = v96;
  uint64_t v54 = v95;
  sub_1E3E781A0();
  v49(v52, v45);
  v93(v25, v40);
  v55 = v105;
  v56 = v53;
  MEMORY[0x1E4E71A20](v53, v54);
  uint64_t v92 = sub_1E3C10DE8(&qword_1EBFE2B60, &qword_1EBFE2B68);
  uint64_t v57 = v101;
  MEMORY[0x1E4E719C0](v55, v101, v92);
  v58 = *(void (**)(char *, uint64_t))(v112 + 8);
  v112 += 8;
  v98 = v58;
  v58(v55, v57);
  uint64_t v114 = 58;
  unint64_t v115 = 0xE100000000000000;
  unint64_t v82 = sub_1E3C10D3C();
  MEMORY[0x1E4E719C0](v116, &v114, MEMORY[0x1E4FBB1A0], v82);
  sub_1E3E780D0();
  v59 = v100;
  sub_1E3E78210();
  MEMORY[0x1E4E719C0](v59, v45, v43);
  v49(v59, v45);
  v78[1] = v43;
  sub_1E3E780B0();
  v49(v46, v45);
  uint64_t v80 = v50;
  v79 = v49;
  v60 = v108;
  v81(v108, v59, v45);
  uint64_t v61 = v95;
  sub_1E3E781A0();
  v49(v60, v45);
  uint64_t v62 = v97;
  v63 = v93;
  v93(v25, v97);
  v64 = v86;
  MEMORY[0x1E4E71A20](v56, v61);
  MEMORY[0x1E4E719C0](v64, v57, v92);
  v98(v64, v57);
  sub_1E3E780B0();
  sub_1E3E780D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D90);
  sub_1E3C10DE8(&qword_1EBFE5810, &qword_1EBFE5818);
  sub_1E3E78180();
  v65 = v63;
  v63(v25, v62);
  uint64_t v67 = v116[0];
  unint64_t v66 = v116[1];
  sub_1E3E780D0();
  uint64_t v114 = v67;
  unint64_t v115 = v66;
  v68 = v108;
  sub_1E3E78190();
  sub_1E3C10DE8(&qword_1EBFE5800, &qword_1EBFE5808);
  v69 = v88;
  uint64_t v70 = v89;
  uint64_t v71 = v94;
  sub_1E3E78180();
  v79(v68, v71);
  uint64_t v72 = v62;
  v65(v25, v62);
  swift_bridgeObjectRelease();
  sub_1E3E780D0();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBFE4F30);
  v73 = v105;
  uint64_t v74 = v101;
  sub_1E3E78180();
  v65(v25, v72);
  v75 = *(void (**)(char *, uint64_t))(v91 + 8);
  v75(v69, v70);
  v75(v103, v70);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v104, v102);
  v76 = v98;
  v98(v73, v74);
  v76(v110, v74);
  return v85(v111, v107);
}

uint64_t sub_1E3C0E598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B90);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v37 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2BC0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  uint64_t v44 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v41 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1E3E781D0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v48 = v14;
  uint64_t v49 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B68);
  uint64_t v50 = *(void *)(v47 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v47);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  v46 = (char *)&v37 - v21;
  sub_1E3E780D0();
  uint64_t v42 = MEMORY[0x1E4FBD2D8];
  uint64_t v22 = sub_1E3C10DE8(&qword_1EBFE2B88, &qword_1EBFE2B90);
  sub_1E3E78210();
  MEMORY[0x1E4E719C0](v5, v1, v22);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v2 + 8);
  v23(v5, v1);
  sub_1E3E780B0();
  v23(v8, v1);
  uint64_t v24 = v23;
  uint64_t v40 = v23;
  uint64_t v25 = v10;
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v10, v5, v1);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C40);
  uint64_t v27 = v41;
  uint64_t v37 = v26;
  sub_1E3E781A0();
  v24(v25, v1);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v49 + 8);
  v49 += 8;
  float v39 = v28;
  v28(v17, v48);
  MEMORY[0x1E4E71A20](v27, v26);
  uint64_t v29 = sub_1E3C10DE8(&qword_1EBFE2B60, &qword_1EBFE2B68);
  uint64_t v30 = v47;
  MEMORY[0x1E4E719C0](v20, v47, v29);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t))(v50 + 8);
  v50 += 8;
  uint64_t v38 = v31;
  v31(v20, v30);
  uint64_t v51 = 58;
  unint64_t v52 = 0xE100000000000000;
  unint64_t v32 = sub_1E3C10D3C();
  MEMORY[0x1E4E719C0](v53, &v51, MEMORY[0x1E4FBB1A0], v32);
  sub_1E3E780B0();
  uint64_t v34 = v53[0];
  unint64_t v33 = v53[1];
  sub_1E3E780D0();
  uint64_t v51 = v34;
  unint64_t v52 = v33;
  sub_1E3E78190();
  sub_1E3C10DE8(&qword_1EBFE2BB8, &qword_1EBFE2BC0);
  uint64_t v35 = v43;
  sub_1E3E78180();
  v40(v25, v1);
  v39(v17, v48);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v35);
  return v38(v46, v47);
}

uint64_t sub_1E3C0EB0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B90);
  uint64_t v48 = *(void *)(v46 - 8);
  uint64_t v1 = MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v44 = (char *)&v36 - v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v36 - v5;
  uint64_t v51 = sub_1E3E781D0();
  uint64_t v53 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B80);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E780E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v43 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57E0);
  uint64_t v52 = *(void *)(v50 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v50);
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v36 - v21;
  sub_1E3E780F0();
  uint64_t v23 = sub_1E3E78200();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 1, 1, v23);
  sub_1E3E780D0();
  unint64_t v38 = sub_1E3C10D90();
  uint64_t v24 = MEMORY[0x1E4FBB7A8];
  uint64_t v49 = v6;
  sub_1E3E781C0();
  sub_1E3C10CE0((uint64_t)v11, &qword_1EBFE2B80);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v13 + 8);
  v37(v17, v12);
  uint64_t v40 = v13 + 8;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v53 + 8);
  v53 += 8;
  uint64_t v42 = v25;
  v25(v8, v51);
  MEMORY[0x1E4E719E0](v6, v24);
  uint64_t v26 = sub_1E3C10DE8(&qword_1EBFE57D8, &qword_1EBFE57E0);
  float v39 = v22;
  uint64_t v27 = v50;
  MEMORY[0x1E4E719C0](v20, v50, v26);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t))(v52 + 8);
  v52 += 8;
  uint64_t v41 = v28;
  v28(v20, v27);
  uint64_t v29 = v43;
  sub_1E3E780F0();
  MEMORY[0x1E4E719C0](v29, v12, v38);
  uint64_t v30 = v37;
  v37(v29, v12);
  sub_1E3E780B0();
  sub_1E3E780D0();
  sub_1E3C10DE8(&qword_1EBFE2B88, &qword_1EBFE2B90);
  uint64_t v31 = v44;
  uint64_t v32 = v46;
  sub_1E3E78190();
  unint64_t v33 = v45;
  sub_1E3E78190();
  sub_1E3E78180();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v48 + 8);
  v34(v33, v32);
  v34(v31, v32);
  v42(v8, v51);
  v34(v49, v32);
  v30(v17, v12);
  return v41(v39, v50);
}

uint64_t sub_1E3C0F104@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_1E3E781D0();
  uint64_t v31 = *(void *)(v1 - 8);
  uint64_t v32 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B90);
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v28 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v27 = (char *)&v26 - v8;
  MEMORY[0x1F4188790](v7);
  unint64_t v33 = (char *)&v26 - v9;
  uint64_t v10 = sub_1E3E780E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v26 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v26 - v18;
  sub_1E3E780F0();
  unint64_t v20 = sub_1E3C10D90();
  uint64_t v26 = v19;
  MEMORY[0x1E4E719C0](v17, v10, v20);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v17, v10);
  sub_1E3E780F0();
  MEMORY[0x1E4E719C0](v14, v10, v20);
  v21(v14, v10);
  sub_1E3E780B0();
  sub_1E3E780D0();
  sub_1E3C10DE8(&qword_1EBFE2B88, &qword_1EBFE2B90);
  uint64_t v22 = v27;
  sub_1E3E78190();
  uint64_t v23 = v28;
  sub_1E3E78190();
  sub_1E3E78180();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v29 + 8);
  v24(v23, v4);
  v24(v22, v4);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v3, v32);
  v24(v33, v4);
  v21(v17, v10);
  return ((uint64_t (*)(char *, uint64_t))v21)(v26, v10);
}

uint64_t sub_1E3C0F4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v102 = a2;
  uint64_t v3 = sub_1E3E77D00();
  uint64_t v104 = *(void *)(v3 - 8);
  uint64_t v105 = v3;
  MEMORY[0x1F4188790](v3);
  v103 = (void (*)(char *, unint64_t, uint64_t))((char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1E3E77A30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v95 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v107 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1E3E779F0();
  uint64_t v97 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  v98 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v89 = (char *)&v83 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v90 = (char *)&v83 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v83 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v83 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (char *)&v83 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v83 - v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24C38);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v30 = (char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  sub_1E3E77A10();
  uint64_t v96 = v6;
  uint64_t v34 = *(uint64_t (**)(void (*)(void, void), uint64_t, uint64_t))(v6 + 48);
  uint64_t v32 = v6 + 48;
  unint64_t v33 = v34;
  if (v34((void (*)(void, void))v30, 1, v5)) {
    goto LABEL_53;
  }
  unint64_t v91 = (unint64_t)v25;
  v86 = v22;
  uint64_t v101 = v19;
  uint64_t v92 = v33;
  uint64_t v99 = v5;
  uint64_t v100 = v31;
  uint64_t v87 = v30;
  uint64_t v35 = (void (*)(unsigned char *, void))sub_1E3E77A00();
  uint64_t v36 = v35;
  uint64_t v106 = (unint64_t *)v37;
  unint64_t v38 = *v37;
  if (!*v37)
  {
    v35(v114, 0);
    uint64_t v31 = v100;
    goto LABEL_52;
  }
  uint64_t v39 = v38[2];
  if (!v39)
  {
    uint64_t v54 = 0;
    uint64_t v31 = v100;
    goto LABEL_51;
  }
  v85 = v35;
  uint64_t v88 = v32;
  uint64_t v41 = v97 + 16;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
  unint64_t v42 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  uint64_t v43 = *(void *)(v97 + 72);
  uint64_t v109 = v38;
  v110 = (void (**)(unint64_t, uint64_t))(v97 + 8);
  swift_bridgeObjectRetain();
  uint64_t v44 = v109;
  unint64_t v45 = 0;
  unint64_t v84 = v42;
  uint64_t v111 = v41;
  unint64_t v46 = v91;
  uint64_t v94 = v43;
  uint64_t v93 = v10;
  unint64_t v108 = v39;
  do
  {
    v40(v27, (char *)v44 + v42, v10);
    if (sub_1E3E779E0() == 116 && v47 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      v40((char *)v46, v27, v10);
      uint64_t v48 = 1;
    }
    else
    {
      uint64_t v49 = (void (*)(unint64_t, char *, uint64_t))v40;
      char v50 = sub_1E3E7E150();
      swift_bridgeObjectRelease();
      v49(v46, v27, v10);
      if (v50)
      {
        uint64_t v48 = 1;
        uint64_t v40 = (void (*)(char *, char *, uint64_t))v49;
        uint64_t v43 = v94;
        uint64_t v10 = v93;
      }
      else
      {
        if (sub_1E3E779E0() == 114 && v51 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
          uint64_t v48 = 1;
        }
        else
        {
          uint64_t v48 = sub_1E3E7E150();
          swift_bridgeObjectRelease();
        }
        uint64_t v40 = (void (*)(char *, char *, uint64_t))v49;
        uint64_t v43 = v94;
        uint64_t v10 = v93;
        unint64_t v46 = v91;
      }
    }
    uint64_t v52 = (void (*)(char *, uint64_t))*v110;
    (*v110)(v46, v10);
    v52(v27, v10);
    if (v48)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v54 = v45 + 1;
      if (__OFADD__(v45, 1)) {
        goto LABEL_72;
      }
      unint64_t v55 = *v106;
      unint64_t v56 = *(void *)(*v106 + 16);
      if (v54 == v56)
      {
        uint64_t v39 = v45;
        goto LABEL_23;
      }
      uint64_t v57 = (void (*)(char *, unint64_t, uint64_t))v40;
      unint64_t v58 = v43 + v42;
      unint64_t v59 = v45 + 1;
      uint64_t v109 = (uint64_t *)(v97 + 40);
      v60 = v86;
      while (1)
      {
        if (v59 >= v56)
        {
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          unint64_t v45 = sub_1E3CB720C(0, *(void *)(v45 + 16) + 1, 1, v45);
          *(void *)uint64_t v48 = v45;
LABEL_56:
          unint64_t v76 = *(void *)(v45 + 16);
          unint64_t v75 = *(void *)(v45 + 24);
          if (v76 >= v75 >> 1)
          {
            unint64_t v45 = sub_1E3CB720C(v75 > 1, v76 + 1, 1, v45);
            *(void *)uint64_t v48 = v45;
          }
          uint64_t v5 = v99;
          *(void *)(v45 + 16) = v76 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v97 + 32))(v45+ ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80))+ *(void *)(v97 + 72) * v76, v98, v10);
          ((void (*)(unsigned char *, void))v43)(v114, 0);
          uint64_t v31 = v100;
          uint64_t v72 = (uint64_t)v107;
          uint64_t v71 = (uint64_t)v52;
          int v77 = v92((void (*)(void, void))v52, 1, v5);
          goto LABEL_61;
        }
        v57(v60, v55 + v58, v10);
        if (sub_1E3E779E0() == 116 && v61 == 0xE100000000000000) {
          break;
        }
        char v63 = sub_1E3E7E150();
        swift_bridgeObjectRelease();
        uint64_t v62 = v101;
        v57(v101, (unint64_t)v60, v10);
        if (v63) {
          goto LABEL_33;
        }
        if (sub_1E3E779E0() == 114 && v64 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
          uint64_t v62 = v101;
          goto LABEL_33;
        }
        char v66 = sub_1E3E7E150();
        swift_bridgeObjectRelease();
        uint64_t v48 = (uint64_t)v110;
        v52(v101, v10);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v52)(v60, v10);
        if ((v66 & 1) == 0)
        {
          if (v59 != v45)
          {
            if ((v45 & 0x8000000000000000) != 0) {
              goto LABEL_74;
            }
            unint64_t v67 = *v106;
            unint64_t v108 = *(void *)(*v106 + 16);
            uint64_t result = (uint64_t)v90;
            if (v45 >= v108) {
              goto LABEL_75;
            }
            unint64_t v91 = v45 * v43;
            uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v57)(v90, v67 + v84 + v45 * v43, v10);
            if (v59 >= v108) {
              goto LABEL_76;
            }
            v57(v89, v67 + v58, v10);
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            *uint64_t v106 = v67;
            v60 = v86;
            if ((result & 1) == 0)
            {
              uint64_t result = sub_1E3E1294C(v67);
              unint64_t v67 = result;
              *uint64_t v106 = result;
            }
            if (v45 >= *(void *)(v67 + 16)) {
              goto LABEL_77;
            }
            unint64_t v68 = v67 + v84 + v91;
            uint64_t v48 = *v109;
            uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v109)(v68, v89, v10);
            if (v59 >= *(void *)(*v106 + 16)) {
              goto LABEL_78;
            }
            uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v48)(*v106 + v58, v90, v10);
          }
          if (__OFADD__(v45++, 1)) {
            goto LABEL_73;
          }
        }
LABEL_34:
        uint64_t v54 = v59 + 1;
        if (__OFADD__(v59, 1)) {
          goto LABEL_69;
        }
        unint64_t v55 = *v106;
        unint64_t v56 = *(void *)(*v106 + 16);
        ++v59;
        v58 += v43;
        if (v54 == v56)
        {
          uint64_t v39 = v45;
          uint64_t v36 = v85;
          uint64_t v32 = v88;
          goto LABEL_50;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v62 = v101;
      v57(v101, (unint64_t)v60, v10);
LABEL_33:
      v65 = v62;
      uint64_t v48 = (uint64_t)v110;
      v52(v65, v10);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v52)(v60, v10);
      goto LABEL_34;
    }
    ++v45;
    v42 += v43;
    uint64_t v39 = v108;
    uint64_t v44 = v109;
  }
  while (v108 != v45);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v54 = *(void *)(*v106 + 16);
LABEL_23:
  uint64_t v32 = v88;
  uint64_t v36 = v85;
LABEL_50:
  uint64_t v31 = v100;
  if (v54 < v39)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    return result;
  }
LABEL_51:
  sub_1E3CBE1C4(v39, v54);
  v36(v114, 0);
LABEL_52:
  uint64_t v5 = v99;
  uint64_t v30 = v87;
  unint64_t v33 = v92;
LABEL_53:
  int v70 = v33((void (*)(void, void))v30, 1, v5);
  uint64_t v71 = (uint64_t)v30;
  uint64_t v57 = v103;
  uint64_t v72 = (uint64_t)v107;
  if (!v70)
  {
    uint64_t v99 = v5;
    uint64_t v100 = v31;
    uint64_t v43 = sub_1E3E77A00();
    if (*v73)
    {
      uint64_t v48 = (uint64_t)v73;
      uint64_t v88 = v32;
      uint64_t v112 = 0;
      unint64_t v113 = 0xE000000000000000;
      sub_1E3E7D2E0();
      sub_1E3E779D0();
      swift_bridgeObjectRelease();
      unint64_t v45 = *(void *)v48;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)uint64_t v48 = v45;
      uint64_t v92 = v33;
      uint64_t v52 = (void (*)(char *, uint64_t))v71;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        goto LABEL_70;
      }
      goto LABEL_56;
    }
    ((void (*)(unsigned char *, void))v43)(v114, 0);
    uint64_t v5 = v99;
    uint64_t v31 = v100;
    uint64_t v72 = (uint64_t)v107;
  }
  int v77 = v33((void (*)(void, void))v30, 1, v5);
LABEL_61:
  if (v77)
  {
    uint64_t v79 = v104;
    uint64_t v78 = v105;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v72, 1, 1, v105);
  }
  else
  {
    uint64_t v80 = v71;
    uint64_t v81 = v96;
    unint64_t v82 = v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v95, v80, v5);
    sub_1E3E77A20();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v5);
    uint64_t v71 = v80;
    uint64_t v79 = v104;
    uint64_t v78 = v105;
  }
  (*(void (**)(void, uint64_t, uint64_t))(v79 + 16))(v57, v31, v78);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v72, 1, v78) == 1)
  {
    (*(void (**)(uint64_t, void, uint64_t))(v79 + 32))(v102, v57, v78);
    sub_1E3C10CE0(v72, &qword_1EBFE6070);
  }
  else
  {
    (*(void (**)(void (*)(char *, unint64_t, uint64_t), uint64_t))(v79 + 8))(v57, v78);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 32))(v102, v72, v78);
  }
  return sub_1E3C10CE0(v71, &qword_1EAE24C38);
}

uint64_t sub_1E3C1018C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v29 = a5;
  uint64_t v30 = a1;
  v28[2] = a17;
  uint64_t v38 = a16;
  uint64_t v39 = a15;
  uint64_t v37 = a14;
  v28[1] = a13;
  uint64_t v36 = sub_1E3E77D00();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v31 = (uint64_t)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a2;
  v42[0] = a2;
  v42[1] = a3;
  uint64_t v33 = a3;
  uint64_t v24 = v29;
  uint64_t v35 = a4;
  v42[2] = a4;
  v42[3] = v29;
  v42[4] = a6;
  v42[5] = a7;
  v42[6] = a8;
  v42[7] = a9;
  v42[8] = a10;
  v42[9] = a11;
  v42[10] = a12;
  v42[11] = a13;
  v42[12] = a14;
  v42[13] = a15;
  v42[14] = a16;
  v42[15] = a17;
  sub_1E3C10C34((uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a9) {
    sub_1E3E7D2F0();
  }
  sub_1E3C10C34((uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E3E7D2F0();
  sub_1E3C10C34((uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E3E7D2F0();
  uint64_t v25 = v31;
  sub_1E3C0F4F8(v30, v31);
  uint64_t v40 = 0;
  unint64_t v41 = 0xE000000000000000;
  sub_1E3E7DDD0();
  swift_bridgeObjectRelease();
  uint64_t v40 = 0x3D6665726820613CLL;
  unint64_t v41 = 0xE900000000000022;
  sub_1E3E77C00();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  MEMORY[0x1E4E766D0](v32, v33, v35, v24);
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  uint64_t v26 = v40;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v25, v36);
  return v26;
}

uint64_t sub_1E3C10540@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  type metadata accessor for TimestampParser();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24C30);
  sub_1E3E78230();
  uint64_t v4 = sub_1E3C1018C(a1, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v6;
  return result;
}

id static TimestampParser.addTimestampAttributions(to:episodeURL:)(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, a1);
  id v5 = objc_msgSend(a1, sel_string);
  sub_1E3E7CD30();

  if (qword_1EBFE4DD0 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6008);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBFE54B8);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBFE4F30);
  sub_1E3C10824();
  sub_1E3C10DE8(&qword_1EBFE57F8, &qword_1EBFE6008);
  uint64_t v7 = sub_1E3E7CC60();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24C30) - 8);
    uint64_t v10 = v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1E3C10878(v10, v4, a2, a1);
      v10 += v11;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_1E3C10824()
{
  unint64_t result = qword_1EBFE26B0;
  if (!qword_1EBFE26B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE26B0);
  }
  return result;
}

void sub_1E3C10878(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v23 = a4;
  uint64_t v18 = a3;
  id v25 = a2;
  uint64_t v5 = sub_1E3E77D00();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v19 = (uint64_t)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *MEMORY[0x1E4FB0720];
  v17[6] = type metadata accessor for TimestampParser();
  v17[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24C30);
  uint64_t v22 = a1;
  sub_1E3E78230();
  uint64_t v7 = v34;
  long long v43 = v28;
  uint64_t v44 = v29;
  uint64_t v45 = v30;
  uint64_t v46 = v31;
  uint64_t v47 = v32;
  uint64_t v48 = v33;
  uint64_t v49 = v34;
  v17[1] = v36;
  v17[2] = v35;
  uint64_t v50 = v35;
  uint64_t v51 = v36;
  uint64_t v52 = v37;
  uint64_t v53 = v38;
  v17[4] = v40;
  v17[5] = v39;
  uint64_t v54 = v39;
  uint64_t v55 = v40;
  v17[3] = v41;
  uint64_t v56 = v41;
  uint64_t v57 = v42;
  sub_1E3C10C34((uint64_t)&v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7) {
    sub_1E3E7D2F0();
  }
  sub_1E3C10C34((uint64_t)&v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E3E7D2F0();
  sub_1E3C10C34((uint64_t)&v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E3E7D2F0();
  uint64_t v8 = v19;
  sub_1E3C0F4F8(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_1E3E77C40();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v8, v21);
  *(void *)&long long v28 = sub_1E3E78220();
  *((void *)&v28 + 1) = v10;
  id v11 = objc_msgSend(v23, sel_string);
  uint64_t v12 = sub_1E3E7CD30();
  uint64_t v14 = v13;

  uint64_t v26 = v12;
  uint64_t v27 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24C40);
  sub_1E3C10DE8(&qword_1EAE24C48, &qword_1EAE24C40);
  sub_1E3C10C8C();
  uint64_t v15 = sub_1E3E7DAB0();
  objc_msgSend(v25, sel_addAttribute_value_range_, v24, v9, v15, v16);
}

uint64_t TimestampParser.deinit()
{
  return v0;
}

uint64_t TimestampParser.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TimestampParser()
{
  return self;
}

uint64_t method lookup function for TimestampParser(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TimestampParser);
}

uint64_t sub_1E3C10C34(uint64_t a1)
{
  return a1;
}

unint64_t sub_1E3C10C8C()
{
  unint64_t result = qword_1EBFE6080;
  if (!qword_1EBFE6080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE6080);
  }
  return result;
}

uint64_t sub_1E3C10CE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1E3C10D3C()
{
  unint64_t result = qword_1EBFE26A8;
  if (!qword_1EBFE26A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE26A8);
  }
  return result;
}

unint64_t sub_1E3C10D90()
{
  unint64_t result = qword_1EBFE2B58;
  if (!qword_1EBFE2B58)
  {
    sub_1E3E780E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE2B58);
  }
  return result;
}

uint64_t sub_1E3C10DE8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3C10E2C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DF8);
  sub_1E3E7C030();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1E3E86640;
  sub_1E3E7C020();
  sub_1E3E7BFD0();
  sub_1E3E7BF70();
  sub_1E3E7C000();
  sub_1E3E7BFE0();
  sub_1E3E7BFB0();
  sub_1E3E7BF80();
  sub_1E3E7BFF0();
  sub_1E3E7BFC0();
  sub_1E3E7BF50();
  sub_1E3E7C010();
  uint64_t v1 = sub_1E3CA1ED8(v0);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  qword_1EAE24C50 = v1;
  return result;
}

uint64_t static Set<>.clickstream.getter()
{
  return sub_1E3C11208(&qword_1EAE23FF8);
}

uint64_t sub_1E3C10FC8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DF8);
  sub_1E3E7C030();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1E3E86650;
  sub_1E3E7BF90();
  sub_1E3E7BFA0();
  uint64_t v1 = sub_1E3CA1ED8(v0);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  qword_1EAE24C58 = v1;
  return result;
}

uint64_t static Set<>.paf.getter()
{
  return sub_1E3C11208(&qword_1EAE24000);
}

uint64_t sub_1E3C110EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DF8);
  sub_1E3E7C030();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1E3E86660;
  sub_1E3E7BF60();
  uint64_t v1 = sub_1E3CA1ED8(v0);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  qword_1EAE24C60 = v1;
  return result;
}

uint64_t static Set<>.performance.getter()
{
  return sub_1E3C11208(&qword_1EAE24008);
}

uint64_t sub_1E3C11208(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3C11258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5CD0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C114A4(a1, (uint64_t)v12);
  if (!swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_5;
  }
  v12[0] = v11[0];
  v12[1] = v11[1];
  uint64_t v7 = sub_1E3E7C030();
  sub_1E3C11500();
  swift_bridgeObjectRetain();
  sub_1E3E7CFE0();
  __swift_destroy_boxed_opaque_existential_0(a1);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1E3C11558((uint64_t)v6);
LABEL_5:
    uint64_t v9 = sub_1E3E7C030();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

uint64_t sub_1E3C11448@<X0>(void *a1@<X8>)
{
  sub_1E3C11500();
  uint64_t result = sub_1E3E7CFD0();
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1E3C114A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1E3C11500()
{
  unint64_t result = qword_1EBFE5CC8;
  if (!qword_1EBFE5CC8)
  {
    sub_1E3E7C030();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE5CC8);
  }
  return result;
}

uint64_t sub_1E3C11558(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5CD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t static UnfollowShowIntent.kind.getter()
{
  return 0xD000000000000012;
}

id UnfollowShowIntent.showID.getter()
{
  id v1 = *(id *)v0;
  sub_1E3C1161C(*(id *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  return v1;
}

id sub_1E3C1161C(id result, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return (id)swift_bridgeObjectRetain();
  }
  if (a3 == 1) {
    return result;
  }
  return result;
}

uint64_t UnfollowShowIntent.init(showID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  return result;
}

void sub_1E3C1164C(void *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001E3E86690;
}

void destroy for UnfollowShowIntent(uint64_t a1)
{
}

void sub_1E3C1168C(void *a1, uint64_t a2, char a3)
{
  if (a3 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a3 == 1)
  {
  }
}

uint64_t _s10PodcastsUI18UnfollowShowIntentVwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1E3C1161C(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for UnfollowShowIntent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1E3C1161C(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1E3C1168C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for UnfollowShowIntent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1E3C1168C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnfollowShowIntent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UnfollowShowIntent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnfollowShowIntent()
{
  return &type metadata for UnfollowShowIntent;
}

unint64_t static RemoveEpisodesDownloadIntent.kind.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t RemoveEpisodesDownloadIntent.episodeIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoveEpisodesDownloadIntent.init(episodeIdentifiers:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_1E3C11878(void *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x80000001E3E86710;
}

ValueMetadata *type metadata accessor for RemoveEpisodesDownloadIntent()
{
  return &type metadata for RemoveEpisodesDownloadIntent;
}

uint64_t WidgetImageProvider.diskCache.getter()
{
  return sub_1E3E775E0();
}

uint64_t WidgetImageProvider.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6370);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1E3E77D00();
  MEMORY[0x1F4188790](v6 - 8);
  id v7 = objc_msgSend(self, sel_artworkAssetURL);
  sub_1E3E77C90();

  sub_1E3E7AA40();
  sub_1E3C10DE8(&qword_1EBFE6368, &qword_1EBFE6370);
  uint64_t v8 = sub_1E3E7AB70();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6348);
  swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF600);
  sub_1E3C10DE8(&qword_1EBFE2AB0, &qword_1EBFDF600);
  sub_1E3E79630();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  sub_1E3E7D6A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6358);
  swift_allocObject();
  v10[4] = 0;
  uint64_t result = sub_1E3E78EB0();
  *a1 = result;
  return result;
}

uint64_t WidgetImageProvider.load(artwork:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBFDF608);
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6408);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6410);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v1;
  id v14 = sub_1E3C11EA4(a1);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v20 = (uint64_t)v14;
    sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE63D0);
    id v16 = v15;
    sub_1E3E7AA30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    sub_1E3E7AA20();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1E3C10DE8(&qword_1EBFE2AC0, &qword_1EBFE6410);
    uint64_t v17 = sub_1E3E7AB70();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    sub_1E3C12ABC();
    uint64_t v20 = swift_allocError();
    sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE63D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    sub_1E3E7AA10();
    sub_1E3C10DE8(&qword_1EBFE2AB8, qword_1EBFDF608);
    uint64_t v17 = sub_1E3E7AB70();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  }
  return v17;
}

id sub_1E3C11EA4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v109 = (uint64_t)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E77D00();
  uint64_t v112 = *(void *)(v5 - 8);
  uint64_t v113 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v111 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E785A0();
  uint64_t v118 = *(void *)(v7 - 8);
  uint64_t v119 = v7;
  MEMORY[0x1F4188790](v7);
  v117 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_1E3E7A880();
  uint64_t v9 = *(void *)(v123 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v123);
  v110 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unint64_t v108 = (char *)&v105 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unint64_t v115 = (char *)&v105 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  v122 = (char *)&v105 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v105 - v18;
  uint64_t v20 = type metadata accessor for PreparedArtworkRequest();
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v107 = (uint64_t)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  v116 = (void (*)(char *, uint64_t))((char *)&v105 - v24);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v114 = (uint64_t)&v105 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v120 = (uint64_t)&v105 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v105 - v30;
  uint64_t v32 = MEMORY[0x1F4188790](v29);
  uint64_t v34 = (char *)&v105 - v33;
  uint64_t v35 = MEMORY[0x1F4188790](v32);
  uint64_t v37 = (char *)&v105 - v36;
  MEMORY[0x1F4188790](v35);
  uint64_t v39 = (char *)&v105 - v38;
  uint64_t v40 = *v1;
  uint64_t v41 = sub_1E3E78E70();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v39, a1, v41);
  sub_1E3E78AC0();
  _s10PodcastsUI22PreparedArtworkRequestV4with6formatAC0A10Foundation0D6FormatO_tF_0();
  sub_1E3E7A7F0();
  uint64_t v42 = sub_1E3E7A860();
  os_log_type_t v43 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = v37;
    uint64_t v45 = v39;
    uint64_t v46 = v9;
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v47 = 0;
    _os_log_impl(&dword_1E3BC5000, v42, v43, "Checking for exact request...", v47, 2u);
    uint64_t v48 = v47;
    uint64_t v9 = v46;
    uint64_t v39 = v45;
    uint64_t v37 = v44;
    MEMORY[0x1E4E79510](v48, -1, -1);
  }

  uint64_t v49 = *(void (**)(char *, uint64_t))(v9 + 8);
  v49(v19, v123);
  sub_1E3C13DF4();
  sub_1E3E78ED0();
  id v50 = (id)v125[1];
  sub_1E3C13E4C((uint64_t)v39, (uint64_t)v34);
  uint64_t v121 = v9 + 8;
  if (v50)
  {
    sub_1E3C13EB0((uint64_t)v34);
    id v126 = v50;
LABEL_6:
    uint64_t v51 = v122;
    sub_1E3E7A7F0();
    sub_1E3C13E4C((uint64_t)v39, (uint64_t)v31);
    uint64_t v52 = v120;
    sub_1E3C13E4C((uint64_t)v39, v120);
    uint64_t v53 = sub_1E3E7A860();
    os_log_type_t v54 = sub_1E3E7D4C0();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      v116 = v49;
      uint64_t v114 = v56;
      v125[0] = v56;
      *(_DWORD *)uint64_t v55 = 136315394;
      uint64_t v106 = v37;
      uint64_t v57 = _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0();
      uint64_t v124 = sub_1E3C150B8(v57, v58, v125);
      unint64_t v115 = v39;
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      sub_1E3C13EB0((uint64_t)v31);
      *(_WORD *)(v55 + 12) = 2080;
      uint64_t v59 = v52;
      v60 = v117;
      _s10PodcastsUI22PreparedArtworkRequestV10fileFormat0A10Foundation04FileG0Ovg_0();
      uint64_t v61 = sub_1E3E78590();
      unint64_t v63 = v62;
      (*(void (**)(char *, uint64_t))(v118 + 8))(v60, v119);
      uint64_t v124 = sub_1E3C150B8(v61, v63, v125);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      sub_1E3C13EB0(v59);
      _os_log_impl(&dword_1E3BC5000, v53, v54, "Found exact match: %s.%s", (uint8_t *)v55, 0x16u);
      uint64_t v64 = v114;
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v64, -1, -1);
      MEMORY[0x1E4E79510](v55, -1, -1);

      v116(v122, v123);
      sub_1E3C13EB0((uint64_t)v106);
      uint64_t v65 = (uint64_t)v115;
LABEL_10:
      sub_1E3C13EB0(v65);
      return v50;
    }

    sub_1E3C13EB0(v52);
    sub_1E3C13EB0((uint64_t)v31);
    v49(v51, v123);
LABEL_9:
    sub_1E3C13EB0((uint64_t)v37);
    uint64_t v65 = (uint64_t)v39;
    goto LABEL_10;
  }
  sub_1E3E78ED0();
  sub_1E3C13EB0((uint64_t)v34);
  id v50 = v126;
  if (v126) {
    goto LABEL_6;
  }
  uint64_t v67 = v40;
  unint64_t v68 = v115;
  sub_1E3E7A7F0();
  uint64_t v69 = v114;
  sub_1E3C13E4C((uint64_t)v39, v114);
  int v70 = v116;
  sub_1E3C13E4C((uint64_t)v39, (uint64_t)v116);
  uint64_t v71 = sub_1E3E7A860();
  os_log_type_t v72 = sub_1E3E7D4C0();
  int v73 = v72;
  BOOL v74 = os_log_type_enabled(v71, v72);
  uint64_t v105 = v67;
  if (v74)
  {
    uint64_t v75 = swift_slowAlloc();
    v122 = (char *)swift_slowAlloc();
    v125[0] = (uint64_t)v122;
    *(_DWORD *)uint64_t v75 = 136315394;
    uint64_t v106 = v37;
    LODWORD(v120) = v73;
    uint64_t v76 = _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0();
    uint64_t v124 = sub_1E3C150B8(v76, v77, v125);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    sub_1E3C13EB0(v69);
    *(_WORD *)(v75 + 12) = 2080;
    uint64_t v78 = v117;
    _s10PodcastsUI22PreparedArtworkRequestV10fileFormat0A10Foundation04FileG0Ovg_0();
    uint64_t v79 = sub_1E3E78590();
    unint64_t v81 = v80;
    (*(void (**)(char *, uint64_t))(v118 + 8))(v78, v119);
    uint64_t v124 = sub_1E3C150B8(v79, v81, v125);
    uint64_t v37 = v106;
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    sub_1E3C13EB0((uint64_t)v116);
    _os_log_impl(&dword_1E3BC5000, v71, (os_log_type_t)v120, "Failed to find exact request: %s.%s, checking for original", (uint8_t *)v75, 0x16u);
    unint64_t v82 = v122;
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v82, -1, -1);
    MEMORY[0x1E4E79510](v75, -1, -1);
  }
  else
  {
    sub_1E3C13EB0(v69);
    sub_1E3C13EB0((uint64_t)v70);
  }

  v49(v68, v123);
  uint64_t v84 = v112;
  uint64_t v83 = v113;
  uint64_t v85 = v109;
  v125[0] = v105;
  sub_1E3C12B4C(v109);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v85, 1, v83) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v111, v85, v83);
    sub_1E3E7A7F0();
    uint64_t v94 = sub_1E3E7A860();
    os_log_type_t v95 = sub_1E3E7D4C0();
    if (os_log_type_enabled(v94, v95))
    {
      uint64_t v96 = v37;
      uint64_t v97 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v97 = 0;
      _os_log_impl(&dword_1E3BC5000, v94, v95, "Found original artwork, performing in-place resize before returning", v97, 2u);
      v98 = v97;
      uint64_t v37 = v96;
      MEMORY[0x1E4E79510](v98, -1, -1);
    }

    v49(v108, v123);
    sub_1E3E78D20();
    double v100 = v99;
    double v102 = v101;
    sub_1E3E78D40();
    v103 = v111;
    id v50 = ThumbnailImageResizer.resizedImage(at:to:displayScale:)(v100, v102, v104);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v103, v83);
    goto LABEL_9;
  }
  sub_1E3C13F0C(v85);
  sub_1E3E7A7F0();
  uint64_t v86 = v107;
  sub_1E3C13E4C((uint64_t)v39, v107);
  uint64_t v87 = sub_1E3E7A860();
  os_log_type_t v88 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v89 = (uint8_t *)swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    uint64_t v106 = v37;
    unint64_t v91 = (void *)v90;
    v116 = v49;
    *(_DWORD *)uint64_t v89 = 138412290;
    uint64_t v92 = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
    v125[0] = v92;
    uint64_t v49 = v116;
    sub_1E3E7DBD0();
    *unint64_t v91 = v92;
    sub_1E3C13EB0(v86);
    _os_log_impl(&dword_1E3BC5000, v87, v88, "Failed to find widget image in cache for %@", v89, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    uint64_t v93 = v91;
    uint64_t v37 = v106;
    MEMORY[0x1E4E79510](v93, -1, -1);
    MEMORY[0x1E4E79510](v89, -1, -1);
  }
  else
  {

    sub_1E3C13EB0(v86);
  }
  v49(v110, v123);
  sub_1E3C13EB0((uint64_t)v37);
  sub_1E3C13EB0((uint64_t)v39);
  return 0;
}

unint64_t sub_1E3C12ABC()
{
  unint64_t result = qword_1EBFE2AA8;
  if (!qword_1EBFE2AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE2AA8);
  }
  return result;
}

uint64_t sub_1E3C12B10(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1E3C12B4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v131 = a1;
  uint64_t v1 = sub_1E3E785A0();
  uint64_t v118 = *(void *)(v1 - 8);
  uint64_t v119 = v1;
  MEMORY[0x1F4188790](v1);
  v117 = (char *)&v110 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E7A880();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v127 = v3;
  uint64_t v128 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  unint64_t v115 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  v116 = (char *)&v110 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v124 = (char *)&v110 - v9;
  uint64_t v10 = sub_1E3E78E70();
  uint64_t v122 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v114 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v112 = (char *)&v110 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v113 = (char *)&v110 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v111 = (char *)&v110 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v123 = (char *)&v110 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v110 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v110 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v110 - v27;
  uint64_t v29 = sub_1E3E77D00();
  uint64_t v129 = *(void *)(v29 - 8);
  uint64_t v130 = v29;
  uint64_t v30 = MEMORY[0x1F4188790](v29);
  uint64_t v32 = (char *)&v110 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v30);
  uint64_t v35 = (char *)&v110 - v34;
  MEMORY[0x1F4188790](v33);
  uint64_t v37 = (char *)&v110 - v36;
  sub_1E3E78EA0();
  sub_1E3E78DA0();
  sub_1E3E78AC0();
  _s10PodcastsUI22PreparedArtworkRequestV4with6formatAC0A10Foundation0D6FormatO_tF_0();
  sub_1E3E79BC0();
  id v126 = v37;
  v132 = v28;
  sub_1E3E79BC0();
  uint64_t v38 = self;
  id v39 = objc_msgSend(v38, sel_defaultManager);
  v125 = v35;
  sub_1E3E77CC0();
  uint64_t v40 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  unsigned int v41 = objc_msgSend(v39, sel_fileExistsAtPath_, v40);

  if (v41)
  {
    uint64_t v120 = v32;
    sub_1E3E7A7F0();
    uint64_t v42 = v122;
    os_log_type_t v43 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
    v43(v23, v26, v10);
    v43(v123, v26, v10);
    uint64_t v44 = sub_1E3E7A860();
    os_log_type_t v45 = sub_1E3E7D4C0();
    int v46 = v45;
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v47 = swift_slowAlloc();
      v116 = (char *)swift_slowAlloc();
      v134[0] = (uint64_t)v116;
      *(_DWORD *)uint64_t v47 = 136315394;
      uint64_t v48 = _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0();
      uint64_t v133 = sub_1E3C150B8(v48, v49, v134);
      uint64_t v121 = v26;
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      unint64_t v115 = *(char **)(v42 + 8);
      ((void (*)(char *, uint64_t))v115)(v23, v10);
      *(_WORD *)(v47 + 12) = 2080;
      id v50 = v117;
      LODWORD(v122) = v46;
      uint64_t v51 = v123;
      _s10PodcastsUI22PreparedArtworkRequestV10fileFormat0A10Foundation04FileG0Ovg_0();
      uint64_t v52 = sub_1E3E78590();
      unint64_t v54 = v53;
      (*(void (**)(char *, uint64_t))(v118 + 8))(v50, v119);
      uint64_t v133 = sub_1E3C150B8(v52, v54, v134);
      uint64_t v55 = v131;
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      uint64_t v56 = v115;
      ((void (*)(char *, uint64_t))v115)(v51, v10);
      _os_log_impl(&dword_1E3BC5000, v44, (os_log_type_t)v122, "Found preferred artwork: %s.%s", (uint8_t *)v47, 0x16u);
      uint64_t v57 = v116;
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v57, -1, -1);
      MEMORY[0x1E4E79510](v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v128 + 8))(v124, v127);
      uint64_t v59 = v129;
      uint64_t v58 = v130;
      v60 = *(void (**)(char *, uint64_t))(v129 + 8);
      v60(v120, v130);
      ((void (*)(char *, uint64_t))v56)(v121, v10);
      ((void (*)(char *, uint64_t))v56)(v132, v10);
      v60(v126, v58);
    }
    else
    {

      uint64_t v86 = *(void (**)(char *, uint64_t))(v42 + 8);
      v86(v123, v10);
      v86(v23, v10);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v124, v127);
      uint64_t v59 = v129;
      uint64_t v58 = v130;
      uint64_t v87 = *(void (**)(char *, uint64_t))(v129 + 8);
      v87(v120, v130);
      v86(v26, v10);
      v86(v132, v10);
      v87(v126, v58);
      uint64_t v55 = v131;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v55, v125, v58);
LABEL_13:
    uint64_t v106 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v55, v106, 1, v58);
  }
  uint64_t v121 = v26;
  id v61 = objc_msgSend(v38, sel_defaultManager);
  sub_1E3E77CC0();
  unint64_t v62 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  unsigned int v63 = objc_msgSend(v61, sel_fileExistsAtPath_, v62);

  uint64_t v64 = v122;
  uint64_t v65 = (void (**)(char *, char *, uint64_t))(v122 + 16);
  char v66 = v32;
  if (v63)
  {
    uint64_t v67 = v116;
    sub_1E3E7A7F0();
    unint64_t v68 = *v65;
    uint64_t v69 = v111;
    int v70 = v132;
    (*v65)(v111, v132, v10);
    uint64_t v71 = v113;
    v68(v113, v70, v10);
    os_log_type_t v72 = sub_1E3E7A860();
    os_log_type_t v73 = sub_1E3E7D4C0();
    int v74 = v73;
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v75 = swift_slowAlloc();
      uint64_t v124 = (char *)swift_slowAlloc();
      v134[0] = (uint64_t)v124;
      *(_DWORD *)uint64_t v75 = 136315394;
      LODWORD(v123) = v74;
      uint64_t v76 = _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0();
      uint64_t v133 = sub_1E3C150B8(v76, v77, v134);
      uint64_t v120 = v66;
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      uint64_t v78 = *(void (**)(char *, uint64_t))(v64 + 8);
      v78(v69, v10);
      *(_WORD *)(v75 + 12) = 2080;
      uint64_t v122 = v75 + 14;
      uint64_t v79 = v117;
      unint64_t v80 = v113;
      _s10PodcastsUI22PreparedArtworkRequestV10fileFormat0A10Foundation04FileG0Ovg_0();
      uint64_t v81 = sub_1E3E78590();
      unint64_t v83 = v82;
      (*(void (**)(char *, uint64_t))(v118 + 8))(v79, v119);
      uint64_t v133 = sub_1E3C150B8(v81, v83, v134);
      char v66 = v120;
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      v78(v80, v10);
      _os_log_impl(&dword_1E3BC5000, v72, (os_log_type_t)v123, "Found original artwork: %s.%s", (uint8_t *)v75, 0x16u);
      uint64_t v84 = v124;
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v84, -1, -1);
      MEMORY[0x1E4E79510](v75, -1, -1);

      (*(void (**)(char *, uint64_t))(v128 + 8))(v116, v127);
      uint64_t v59 = v129;
      uint64_t v58 = v130;
      uint64_t v85 = *(void (**)(char *, uint64_t))(v129 + 8);
      v85(v125, v130);
      v78(v121, v10);
      v78(v132, v10);
      v85(v126, v58);
    }
    else
    {

      double v104 = *(void (**)(char *, uint64_t))(v64 + 8);
      v104(v71, v10);
      v104(v69, v10);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v67, v127);
      uint64_t v59 = v129;
      uint64_t v58 = v130;
      uint64_t v105 = *(void (**)(char *, uint64_t))(v129 + 8);
      v105(v125, v130);
      v104(v121, v10);
      v104(v70, v10);
      v105(v126, v58);
    }
    uint64_t v55 = v131;
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v131, v66, v58);
    goto LABEL_13;
  }
  os_log_type_t v88 = v115;
  sub_1E3E7A7F0();
  uint64_t v89 = *v65;
  uint64_t v90 = v112;
  (*v65)(v112, v121, v10);
  unint64_t v91 = v114;
  uint64_t v92 = v132;
  v89(v114, v132, v10);
  uint64_t v93 = sub_1E3E7A860();
  os_log_type_t v94 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v93, v94))
  {
    uint64_t v95 = swift_slowAlloc();
    uint64_t v124 = (char *)swift_slowAlloc();
    v134[0] = (uint64_t)v124;
    *(_DWORD *)uint64_t v95 = 136315394;
    uint64_t v96 = _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0();
    uint64_t v133 = sub_1E3C150B8(v96, v97, v134);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    uint64_t v120 = v66;
    v98 = *(void (**)(char *, uint64_t))(v64 + 8);
    v98(v90, v10);
    *(_WORD *)(v95 + 12) = 2080;
    double v99 = v114;
    uint64_t v100 = _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0();
    uint64_t v133 = sub_1E3C150B8(v100, v101, v134);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    v98(v99, v10);
    _os_log_impl(&dword_1E3BC5000, v93, v94, "Failed to find original artwork for either:\n\tPreferred: '%s'\n\tOriginal: %s", (uint8_t *)v95, 0x16u);
    double v102 = v124;
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v102, -1, -1);
    MEMORY[0x1E4E79510](v95, -1, -1);

    (*(void (**)(char *, uint64_t))(v128 + 8))(v115, v127);
    uint64_t v59 = v129;
    uint64_t v58 = v130;
    v103 = *(void (**)(char *, uint64_t))(v129 + 8);
    v103(v120, v130);
    v103(v125, v58);
    v98(v121, v10);
    v98(v132, v10);
    v103(v126, v58);
  }
  else
  {

    uint64_t v107 = *(void (**)(char *, uint64_t))(v64 + 8);
    v107(v91, v10);
    v107(v90, v10);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v88, v127);
    uint64_t v59 = v129;
    uint64_t v58 = v130;
    unint64_t v108 = *(void (**)(char *, uint64_t))(v129 + 8);
    v108(v66, v130);
    v108(v125, v58);
    v107(v121, v10);
    v107(v92, v10);
    v108(v126, v58);
  }
  uint64_t v106 = 1;
  uint64_t v55 = v131;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v55, v106, 1, v58);
}

uint64_t static WidgetImageProvider.WidgetImageError.== infix(_:_:)()
{
  return 1;
}

uint64_t WidgetImageProvider.WidgetImageError.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t WidgetImageProvider.WidgetImageError.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3C13A5C()
{
  return 1;
}

uint64_t sub_1E3C13A64()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3C13AA8()
{
  return sub_1E3E7E280();
}

uint64_t sub_1E3C13AD0()
{
  return sub_1E3E7E2B0();
}

unint64_t sub_1E3C13B14()
{
  unint64_t result = qword_1EAE24C68;
  if (!qword_1EAE24C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24C68);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for WidgetImageProvider(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1E3E775E0();
  return a1;
}

uint64_t destroy for WidgetImageProvider()
{
  return swift_release();
}

void *assignWithCopy for WidgetImageProvider(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1E3E775E0();
  swift_release();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for WidgetImageProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetImageProvider(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetImageProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetImageProvider()
{
  return &type metadata for WidgetImageProvider;
}

uint64_t getEnumTagSinglePayload for WidgetImageProvider.WidgetImageError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for WidgetImageProvider.WidgetImageError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3C13DB4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1E3C13DDC()
{
  return 0;
}

ValueMetadata *type metadata accessor for WidgetImageProvider.WidgetImageError()
{
  return &type metadata for WidgetImageProvider.WidgetImageError;
}

unint64_t sub_1E3C13DF4()
{
  unint64_t result = qword_1EBFE6330;
  if (!qword_1EBFE6330)
  {
    type metadata accessor for PreparedArtworkRequest();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE6330);
  }
  return result;
}

uint64_t sub_1E3C13E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreparedArtworkRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C13EB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PreparedArtworkRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3C13F0C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1E3C13F70()
{
  type metadata accessor for ThinClientPushController();
  uint64_t v0 = swift_allocObject();
  id result = objc_msgSend(objc_allocWithZone((Class)sub_1E3E79E80()), sel_init);
  *(void *)(v0 + 16) = result;
  qword_1EAE24C70 = v0;
  return result;
}

uint64_t static ThinClientPushController.shared.getter()
{
  if (qword_1EAE24010 != -1) {
    swift_once();
  }

  return sub_1E3E775E0();
}

uint64_t ThinClientPushController.deinit()
{
  return v0;
}

uint64_t ThinClientPushController.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall ThinClientPushController.register()()
{
  uint64_t v0 = sub_1E3E7A880();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1E3E783E0())
  {
    sub_1E3E7A850();
    uint64_t v4 = sub_1E3E7A860();
    os_log_type_t v5 = sub_1E3E7D500();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1E3BC5000, v4, v5, "[Push] Trying to register for remote notifications", v6, 2u);
      MEMORY[0x1E4E79510](v6, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    id v7 = objc_msgSend(self, sel_sharedApplication);
    objc_msgSend(v7, sel_registerForRemoteNotifications);
  }
}

uint64_t ThinClientPushController.subscribeToPushes(using:)(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  sub_1E3E77D00();
  v3[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C1427C, 0, 0);
}

uint64_t sub_1E3C1427C()
{
  if (sub_1E3E783E0())
  {
    id v1 = objc_msgSend(self, sel_sharedInstance);
    id v2 = objc_msgSend(v1, sel_pushNotificationRegistration);

    id v3 = objc_msgSend(v2, sel_asyncValuePromise);
    v0[20] = v3;

    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_1E3C1442C;
    uint64_t v4 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_1E3C146B4;
    v0[13] = &block_descriptor;
    v0[14] = v4;
    objc_msgSend(v3, sel_resultWithCompletion_, v0 + 10);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1E3C1442C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    id v2 = sub_1E3C14638;
  }
  else {
    id v2 = sub_1E3C1453C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C1453C()
{
  unint64_t v1 = *(void *)(v0 + 136);
  id v2 = *(void **)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);

  sub_1E3E77C90();
  sub_1E3E7CD30();
  id v4 = objc_allocWithZone((Class)sub_1E3E79E60());
  sub_1E3C14F74(v3, v1);
  uint64_t v5 = (void *)sub_1E3E79E50();
  sub_1E3E79E70();

  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1E3C14638()
{
  unint64_t v1 = *(void **)(v0 + 160);
  swift_willThrow();

  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3C146B4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x1F4188200](a1);
  }
}

uint64_t ThinClientPushController.handlePushNotification(_:objectGraph:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 88) = a2;
  uint64_t v4 = sub_1E3E7A880();
  *(void *)(v2 + 96) = v4;
  *(void *)(v2 + 104) = *(void *)(v4 - 8);
  *(void *)(v2 + 112) = swift_task_alloc();
  *(void *)(v2 + 120) = swift_task_alloc();
  *(_OWORD *)(v2 + 128) = *(_OWORD *)a1;
  *(unsigned char *)(v2 + 33) = *(unsigned char *)(a1 + 16);
  return MEMORY[0x1F4188298](sub_1E3C14858, 0, 0);
}

uint64_t sub_1E3C14858()
{
  uint64_t v49 = v0;
  if ((sub_1E3E783E0() & 1) == 0) {
    goto LABEL_13;
  }
  unint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_ams_sharedAccountStore);
  id v3 = objc_msgSend(v2, sel_ams_activeiTunesAccount);

  if (!v3
    || (id v4 = objc_msgSend(v3, sel_ams_DSID), v3, !v4)
    || (id v5 = *(id *)(v0 + 128), v6 = objc_msgSend(v4, sel_longLongValue), v4, v5 != v6))
  {
    sub_1E3E7A850();
    uint64_t v9 = sub_1E3E7A860();
    os_log_type_t v10 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = *(void *)(v0 + 128);
      uint64_t v12 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v48 = v44;
      *(_DWORD *)uint64_t v12 = 136380931;
      *(void *)(v0 + 56) = v11;
      uint64_t v13 = sub_1E3E7E0E0();
      *(void *)(v0 + 64) = sub_1E3C150B8(v13, v14, &v48);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2081;
      id v15 = objc_msgSend(v1, sel_ams_sharedAccountStore);
      id v16 = objc_msgSend(v15, sel_ams_activeiTunesAccount);

      if (v16 && (id v17 = objc_msgSend(v16, sel_ams_DSID), v16, v17))
      {
        id v18 = objc_msgSend(v17, sel_longLongValue);

        char v19 = 0;
      }
      else
      {
        id v18 = 0;
        char v19 = 1;
      }
      uint64_t v24 = *(void *)(v0 + 104);
      uint64_t v23 = *(void *)(v0 + 112);
      uint64_t v25 = *(void *)(v0 + 96);
      *(void *)(v0 + 40) = v18;
      *(unsigned char *)(v0 + 48) = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24C88);
      uint64_t v26 = sub_1E3E7CD90();
      *(void *)(v0 + 72) = sub_1E3C150B8(v26, v27, &v48);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v9, v10, "[Push] Push for user different than current %{private}s vs %{private}s", (uint8_t *)v12, 0x16u);
      uint64_t v8 = 2;
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v44, -1, -1);
      MEMORY[0x1E4E79510](v12, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
      goto LABEL_16;
    }
    uint64_t v21 = *(void *)(v0 + 104);
    uint64_t v20 = *(void *)(v0 + 112);
    uint64_t v22 = *(void *)(v0 + 96);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v0 + 88);
  if (!v7)
  {
    sub_1E3E7A850();
    uint64_t v30 = sub_1E3E7A860();
    os_log_type_t v31 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v30, v31))
    {
      char v43 = *(unsigned char *)(v0 + 33);
      uint64_t v32 = *(void *)(v0 + 128);
      uint64_t v33 = *(void *)(v0 + 136);
      uint64_t v45 = *(void *)(v0 + 104);
      uint64_t v46 = *(void *)(v0 + 96);
      uint64_t v47 = *(void *)(v0 + 120);
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136380675;
      uint64_t v48 = v35;
      *(void *)(v0 + 16) = v32;
      *(void *)(v0 + 24) = v33;
      *(unsigned char *)(v0 + 32) = v43;
      uint64_t v36 = sub_1E3E7CD90();
      *(void *)(v0 + 80) = sub_1E3C150B8(v36, v37, &v48);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v30, v31, "[Push] No objectGraph provided to handle push notification: %{private}s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v35, -1, -1);
      MEMORY[0x1E4E79510](v34, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v46);
    }
    else
    {
      uint64_t v40 = *(void *)(v0 + 120);
      uint64_t v41 = *(void *)(v0 + 96);
      uint64_t v42 = *(void *)(v0 + 104);

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
    }
LABEL_13:
    uint64_t v8 = 2;
    goto LABEL_16;
  }
  if (*(unsigned char *)(v0 + 33))
  {
    uint64_t v8 = 1;
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v28(v8);
  }
  sub_1E3E775E0();
  uint64_t v38 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v38;
  *uint64_t v38 = v0;
  v38[1] = sub_1E3C14DEC;
  uint64_t v39 = *(void *)(v0 + 136);
  return sub_1E3C156A8(v39, v7);
}

uint64_t sub_1E3C14DEC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1E3C14EEC, 0, 0);
}

uint64_t sub_1E3C14EEC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 152);
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3C14F64(uint64_t result, unsigned char **a2)
{
  id v2 = *a2;
  *id v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1E3C14F74(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    sub_1E3E775E0();
  }

  return sub_1E3E775E0();
}

uint64_t sub_1E3C14FCC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

unsigned char **sub_1E3C15008(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_1E3C15018(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1E3C15040(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1E3C150B8(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1E3E7DBD0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1E3C150B8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1E3C1518C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1E3C114A4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1E3C114A4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1E3C1518C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1E3E7DBE0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1E3C15348(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1E3E7DE50();
  if (!v8)
  {
    sub_1E3E7DF70();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1E3E7E010();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1E3C15348(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1E3C153E0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1E3C15558(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1E3C15558(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1E3C153E0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1E3CF4264(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1E3E7DDE0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1E3E7DF70();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1E3E7CEB0();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1E3E7E010();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1E3E7DF70();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1E3C15558(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63F8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1E3E7E010();
  __break(1u);
  return result;
}

uint64_t sub_1E3C156A8(uint64_t a1, uint64_t a2)
{
  v2[17] = a1;
  v2[18] = a2;
  uint64_t v3 = sub_1E3E7A880();
  v2[19] = v3;
  v2[20] = *(void *)(v3 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v4 = sub_1E3E79090();
  v2[22] = v4;
  v2[23] = *(void *)(v4 - 8);
  v2[24] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  unint64_t v6 = (void *)swift_task_alloc();
  v2[25] = v6;
  *unint64_t v6 = v2;
  v6[1] = sub_1E3C15828;
  return MEMORY[0x1F4127FF8](v2 + 2, v5, v5);
}

uint64_t sub_1E3C15828()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C16228;
  }
  else {
    uint64_t v2 = sub_1E3C1593C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C1593C()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[27] = v1;
  sub_1E3C16CCC();
  void *v1 = v0;
  v1[1] = sub_1E3C15A0C;
  uint64_t v2 = v0[24];
  return MEMORY[0x1F41281F8](v2);
}

uint64_t sub_1E3C15A0C()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C1642C;
  }
  else {
    uint64_t v2 = sub_1E3C15B20;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C15B20()
{
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v1 = sub_1E3E78400();
  v0[10] = v1;
  v0[11] = sub_1E3C16D20();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v1 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E4F91548], v1);
  LOBYTE(v1) = sub_1E3E78090();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 7));
  if (v1)
  {
    uint64_t v3 = v0 + 16;
    uint64_t v4 = sub_1E3E79CE0();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[29] = (uint64_t)v5;
    *uint64_t v5 = v0;
    unint64_t v6 = sub_1E3C15CB4;
  }
  else
  {
    uint64_t v3 = v0 + 14;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CA0);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[31] = (uint64_t)v5;
    *uint64_t v5 = v0;
    unint64_t v6 = sub_1E3C15E78;
  }
  v5[1] = v6;
  return MEMORY[0x1F4127FF8](v3, v4, v4);
}

uint64_t sub_1E3C15CB4()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C16638;
  }
  else {
    uint64_t v2 = sub_1E3C15DC8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C15DC8()
{
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  uint64_t v3 = v0[22];
  sub_1E3E79CA0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_1E3C15E78()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C16854;
  }
  else {
    uint64_t v2 = sub_1E3C15F8C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C15F8C()
{
  ThinClientStateRepository<>.overrideAllLibraryState(with:isInitialFetch:)();
  swift_release();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CA8);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C16064;
  return MEMORY[0x1F4127FF8](v0 + 120, v1, v1);
}

uint64_t sub_1E3C16064()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C16A74;
  }
  else {
    uint64_t v2 = sub_1E3C16178;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C16178()
{
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  uint64_t v3 = v0[22];
  ThinClientStateRepository<>.overrideAllLibraryState(with:isInitialFetch:)(v1, 0);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_1E3C16228()
{
  uint64_t v1 = (void *)v0[26];
  sub_1E3E7A850();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[17];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[13] = v6;
    sub_1E3E7DBD0();
    *(_WORD *)(v7 + 12) = 2112;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[12] = v10;
    sub_1E3E7DBD0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Unable to refresh state caches after bookkeeper push for version %ld: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v8, -1, -1);
    MEMORY[0x1E4E79510](v7, -1, -1);
  }
  else
  {
  }
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  size_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(2);
}

uint64_t sub_1E3C1642C()
{
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v1 = (void *)v0[28];
  sub_1E3E7A850();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[17];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[13] = v6;
    sub_1E3E7DBD0();
    *(_WORD *)(v7 + 12) = 2112;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[12] = v10;
    sub_1E3E7DBD0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Unable to refresh state caches after bookkeeper push for version %ld: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v8, -1, -1);
    MEMORY[0x1E4E79510](v7, -1, -1);
  }
  else
  {
  }
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  size_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(2);
}

uint64_t sub_1E3C16638()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  uint64_t v1 = (void *)v0[30];
  sub_1E3E7A850();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[17];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[13] = v6;
    sub_1E3E7DBD0();
    *(_WORD *)(v7 + 12) = 2112;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[12] = v10;
    sub_1E3E7DBD0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Unable to refresh state caches after bookkeeper push for version %ld: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v8, -1, -1);
    MEMORY[0x1E4E79510](v7, -1, -1);
  }
  else
  {
  }
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  size_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(2);
}

uint64_t sub_1E3C16854()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  uint64_t v1 = (void *)v0[32];
  sub_1E3E7A850();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[17];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[13] = v6;
    sub_1E3E7DBD0();
    *(_WORD *)(v7 + 12) = 2112;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[12] = v10;
    sub_1E3E7DBD0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Unable to refresh state caches after bookkeeper push for version %ld: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v8, -1, -1);
    MEMORY[0x1E4E79510](v7, -1, -1);
  }
  else
  {
  }
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  size_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(2);
}

uint64_t sub_1E3C16A74()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  uint64_t v1 = (void *)v0[34];
  sub_1E3E7A850();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[17];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[13] = v6;
    sub_1E3E7DBD0();
    *(_WORD *)(v7 + 12) = 2112;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[12] = v10;
    sub_1E3E7DBD0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Unable to refresh state caches after bookkeeper push for version %ld: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v8, -1, -1);
    MEMORY[0x1E4E79510](v7, -1, -1);
  }
  else
  {
  }
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  size_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(2);
}

uint64_t type metadata accessor for ThinClientPushController()
{
  return self;
}

uint64_t method lookup function for ThinClientPushController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ThinClientPushController);
}

unint64_t sub_1E3C16CCC()
{
  unint64_t result = qword_1EAE24C98;
  if (!qword_1EAE24C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24C98);
  }
  return result;
}

unint64_t sub_1E3C16D20()
{
  unint64_t result = qword_1EBFE20D8;
  if (!qword_1EBFE20D8)
  {
    sub_1E3E78400();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE20D8);
  }
  return result;
}

double static DynamicImpressionsTracker.Configuration.defaultImpressionTimeThreshold.getter()
{
  return 0.1;
}

uint64_t static DynamicImpressionsTracker.Configuration.defaultQueueName.getter()
{
  return 0x74656D2D61746164;
}

uint64_t static DynamicImpressionsTracker.Configuration.default.getter()
{
  return sub_1E3E7C590();
}

uint64_t DynamicImpressionsTracker.Configuration.init(impressionTimeThreshold:)()
{
  return sub_1E3E7C590();
}

uint64_t DynamicImpressionsTracker.init(configuration:)(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7C5A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  uint64_t v5 = sub_1E3E7C5E0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v5;
}

void *sub_1E3C16EE0(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1E3E7DFC0())
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E4E77720](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_uuid);
      if (v8)
      {
        id v9 = v8;
        uint64_t v10 = sub_1E3E7CD30();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1E3CB7240(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_1E3CB7240((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        id v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t RemoveEpisodesDownloadIntentImplementation.perform(_:objectGraph:)(uint64_t *a1, uint64_t a2)
{
  v2[9] = a2;
  uint64_t v4 = sub_1E3E7D8E0();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7D1E0();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *a1;
  v2[15] = v6;
  v2[16] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5828);
  id v9 = (void *)swift_task_alloc();
  v2[17] = v9;
  *id v9 = v2;
  v9[1] = sub_1E3C17204;
  return MEMORY[0x1F4127FF8](v2 + 2, v8, v8);
}

uint64_t sub_1E3C17204()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3C17AF0, 0, 0);
  }
  else
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 152) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_1E3C173A4;
    return MEMORY[0x1F4127FF8](v2 + 56, v3, v3);
  }
}

uint64_t sub_1E3C173A4()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C17B60;
  }
  else {
    uint64_t v2 = sub_1E3C174B8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C174B8()
{
  v0[21] = v0[7];
  uint64_t ObjectType = swift_getObjectType();
  sub_1E3E7D260();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[22] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C17580;
  uint64_t v3 = v0[15];
  return MEMORY[0x1F4145A40](v3, ObjectType);
}

uint64_t sub_1E3C17580(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  uint64_t v3 = *(void *)(*(void *)v1 + 112);
  uint64_t v4 = *(void *)(*(void *)v1 + 104);
  *(void *)(*(void *)v1 + 184) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x1F4188298](sub_1E3C176FC, 0, 0);
}

uint64_t sub_1E3C176FC()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[10];
  uint64_t v6 = swift_allocObject();
  v0[24] = v6;
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v2;
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, *MEMORY[0x1E4F1BD78], v5);
  id v7 = v1;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[25] = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6388);
  *uint64_t v8 = v0;
  v8[1] = sub_1E3C17844;
  uint64_t v10 = v0[12];
  return MEMORY[0x1F40D7080](v0 + 8, v10, sub_1E3C17D14, v6, v9);
}

uint64_t sub_1E3C17844()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1E3C17BD8;
  }
  else {
    uint64_t v5 = sub_1E3C179D8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3C179D8()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 40;
    do
    {
      __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
      swift_bridgeObjectRetain();
      sub_1E3E78520();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  uint64_t v4 = (void *)v0[23];
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5(0);
}

uint64_t sub_1E3C17AF0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C17B60()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C17BD8()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1E3C17C60@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_1E3E7D8D0();
  if (!v1)
  {
    uint64_t v4 = sub_1E3C16EE0(result);
    unint64_t result = swift_bridgeObjectRelease();
    *a1 = v4;
  }
  return result;
}

uint64_t sub_1E3C17CD4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_1E3C17D14@<X0>(void *a1@<X8>)
{
  return sub_1E3C17C60(a1);
}

unint64_t sub_1E3C17D34()
{
  unint64_t result = qword_1EBFE3C30;
  if (!qword_1EBFE3C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE3C30);
  }
  return result;
}

uint64_t sub_1E3C17D8C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1E3C17E2C;
  return RemoveEpisodesDownloadIntentImplementation.perform(_:objectGraph:)(a2, a3);
}

uint64_t sub_1E3C17E2C(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(unsigned char **)(v4 + 16) = a1 & 1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

ValueMetadata *type metadata accessor for RemoveEpisodesDownloadIntentImplementation()
{
  return &type metadata for RemoveEpisodesDownloadIntentImplementation;
}

uint64_t sub_1E3C17F50()
{
  return sub_1E3E2554C();
}

uint64_t FairPlayDebugView.body.getter@<X0>(uint64_t a1@<X8>)
{
  v24[1] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CC0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CC8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = v1[1];
  long long v29 = *v1;
  long long v30 = v9;
  char v31 = *((unsigned char *)v1 + 32);
  v24[4] = &v29;
  v24[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CD0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE24CD8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE24CE0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE24CE8);
  uint64_t v13 = sub_1E3C10DE8(&qword_1EAE24CF0, &qword_1EAE24CE8);
  uint64_t v25 = v12;
  uint64_t v26 = v13;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE24CF8);
  uint64_t v16 = sub_1E3C10DE8(&qword_1EAE24D00, &qword_1EAE24CF8);
  uint64_t v25 = v15;
  uint64_t v26 = v16;
  uint64_t v17 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = v10;
  uint64_t v26 = v11;
  uint64_t v27 = OpaqueTypeConformance2;
  uint64_t v28 = v17;
  swift_getOpaqueTypeConformance2();
  sub_1E3E7AF80();
  uint64_t v18 = swift_allocObject();
  long long v19 = v30;
  *(_OWORD *)(v18 + 16) = v29;
  *(_OWORD *)(v18 + 32) = v19;
  *(unsigned char *)(v18 + 48) = v31;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  uint64_t v20 = (uint64_t (**)())&v8[*(int *)(v6 + 36)];
  *uint64_t v20 = sub_1E3C19A64;
  v20[1] = (uint64_t (*)())v18;
  v20[2] = 0;
  v20[3] = 0;
  sub_1E3C1A35C((uint64_t)&v29, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v21 = swift_allocObject();
  long long v22 = v30;
  *(_OWORD *)(v21 + 16) = v29;
  *(_OWORD *)(v21 + 32) = v22;
  *(unsigned char *)(v21 + 48) = v31;
  sub_1E3C1A35C((uint64_t)&v29, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  sub_1E3C19EB8();
  sub_1E3E7B430();
  swift_release();
  return sub_1E3C19F58((uint64_t)v8);
}

uint64_t sub_1E3C18320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v18 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CE8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CD8);
  uint64_t v7 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  long long v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24D30);
  sub_1E3C10DE8(&qword_1EAE24D38, &qword_1EAE24D30);
  sub_1E3E7B380();
  sub_1E3E7B0E0();
  uint64_t v10 = sub_1E3C10DE8(&qword_1EAE24CF0, &qword_1EAE24CE8);
  sub_1E3E7B460();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v19 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CE0);
  uint64_t v21 = v3;
  uint64_t v22 = v10;
  swift_getOpaqueTypeConformance2();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE24CF8);
  uint64_t v12 = sub_1E3C10DE8(&qword_1EAE24D00, &qword_1EAE24CF8);
  uint64_t v21 = v11;
  uint64_t v22 = v12;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = v17;
  sub_1E3E7B4A0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v13);
}

uint64_t sub_1E3C18654@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C18320(*(void *)(v1 + 16), a1);
}

uint64_t sub_1E3C1865C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  unint64_t v37 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24D50);
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v36 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v35 = (char *)&v30 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v39 = (char *)&v30 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24D58);
  uint64_t v32 = *(void *)(v34 - 8);
  uint64_t v12 = v32;
  uint64_t v13 = MEMORY[0x1F4188790](v34);
  uint64_t v33 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v42 = a1;
  *(void *)&long long v43 = 0xD000000000000013;
  *((void *)&v43 + 1) = 0x80000001E3E9BBF0;
  char v44 = 0;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v45 = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24D60);
  sub_1E3C1A428();
  char v31 = v16;
  sub_1E3E7B6F0();
  uint64_t v41 = a1;
  long long v43 = xmmword_1E3E869D0;
  char v44 = 0;
  uint64_t v45 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24D78);
  sub_1E3C1A4F8();
  long long v30 = v11;
  sub_1E3E7B6F0();
  uint64_t v40 = a1;
  long long v43 = xmmword_1E3E869E0;
  char v44 = 0;
  uint64_t v45 = v17;
  uint64_t v18 = v39;
  sub_1E3E7B6F0();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v20 = v33;
  uint64_t v21 = v34;
  v19(v33, v16, v34);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  uint64_t v23 = v35;
  v22(v35, v11, v3);
  uint64_t v24 = v36;
  v22(v36, v18, v3);
  uint64_t v25 = v37;
  v19(v37, v20, v21);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24DB0);
  v22(&v25[*(int *)(v26 + 48)], v23, v3);
  v22(&v25[*(int *)(v26 + 64)], v24, v3);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v38 + 8);
  v27(v39, v3);
  v27(v30, v3);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v32 + 8);
  v28(v31, v21);
  v27(v24, v3);
  v27(v23, v3);
  return ((uint64_t (*)(char *, uint64_t))v28)(v20, v21);
}

uint64_t sub_1E3C18B0C(uint64_t a1)
{
  return sub_1E3E7B6E0();
}

uint64_t sub_1E3C18CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 41);
  uint64_t v7 = *(void **)(a1 + 48);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v2;
  *(void *)(a2 + 32) = v4;
  *(unsigned char *)(a2 + 40) = v5;
  *(unsigned char *)(a2 + 41) = v6;
  *(void *)(a2 + 48) = v7;
  id v8 = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3C18D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24D90);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  type metadata accessor for FairPlayDebugController();
  sub_1E3C1A64C(&qword_1EAE24D28, (void (*)(uint64_t))type metadata accessor for FairPlayDebugController);
  sub_1E3E7AE90();
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C1A3C4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A5C);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24DB8);
  type metadata accessor for FairPlayDebugKeyCell();
  sub_1E3C10DE8(&qword_1EAE24DC0, &qword_1EAE24DB8);
  sub_1E3C1A64C(&qword_1EAE24D98, (void (*)(uint64_t))type metadata accessor for FairPlayDebugKeyCell);
  sub_1E3C1A64C(&qword_1EAE24DC8, (void (*)(uint64_t))type metadata accessor for FairPlayKeyViewModel);
  sub_1E3E7B6E0();
  uint64_t v7 = swift_allocObject();
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v8;
  *(unsigned char *)(v7 + 48) = *(unsigned char *)(a1 + 32);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1E3C1A798;
  *(void *)(v9 + 24) = v7;
  uint64_t v10 = v13;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v13, v6, v3);
  uint64_t v11 = (uint64_t (**)())(v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24D78) + 36));
  *uint64_t v11 = sub_1E3C1A828;
  v11[1] = (uint64_t (*)())v9;
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1E3C190FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3C1A728(a1, a2);
}

uint64_t sub_1E3C19104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24D90);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  type metadata accessor for FairPlayDebugController();
  sub_1E3C1A64C(&qword_1EAE24D28, (void (*)(uint64_t))type metadata accessor for FairPlayDebugController);
  sub_1E3E7AE90();
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C1A3C4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A5C);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24DB8);
  type metadata accessor for FairPlayDebugKeyCell();
  sub_1E3C10DE8(&qword_1EAE24DC0, &qword_1EAE24DB8);
  sub_1E3C1A64C(&qword_1EAE24D98, (void (*)(uint64_t))type metadata accessor for FairPlayDebugKeyCell);
  sub_1E3C1A64C(&qword_1EAE24DC8, (void (*)(uint64_t))type metadata accessor for FairPlayKeyViewModel);
  sub_1E3E7B6E0();
  uint64_t v7 = swift_allocObject();
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v8;
  *(unsigned char *)(v7 + 48) = *(unsigned char *)(a1 + 32);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1E3C1A698;
  *(void *)(v9 + 24) = v7;
  uint64_t v10 = v13;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v13, v6, v3);
  uint64_t v11 = (uint64_t (**)())(v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24D78) + 36));
  *uint64_t v11 = sub_1E3C1A700;
  v11[1] = (uint64_t (*)())v9;
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1E3C194AC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  sub_1E3C1A35C(a2, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  type metadata accessor for FairPlayDebugController();
  sub_1E3C1A64C(&qword_1EAE24D28, (void (*)(uint64_t))type metadata accessor for FairPlayDebugController);
  uint64_t v5 = sub_1E3E7AE90();
  sub_1E3C1A35C(a2, (void (*)(void, void))sub_1E3C1A3C4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A5C);
  uint64_t v6 = sub_1E3E77FA0();
  if ((v7 & 1) == 0) {
    a3(v6, v5);
  }

  return swift_release();
}

uint64_t sub_1E3C195DC(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7B1B0();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1E3E7B1A0();
  uint64_t v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24D40);
  sub_1E3C10DE8(&qword_1EAE24D48, &qword_1EAE24D40);
  sub_1E3E7AEA0();
  uint64_t v7 = sub_1E3C10DE8(&qword_1EAE24D00, &qword_1EAE24CF8);
  MEMORY[0x1E4E74AE0](v6, v3, v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1E3C197A4(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(unsigned char *)(v2 + 48) = *(unsigned char *)(a1 + 32);
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);

  return sub_1E3E7B660();
}

uint64_t sub_1E3C1987C(uint64_t a1)
{
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  type metadata accessor for FairPlayDebugController();
  sub_1E3C1A64C(&qword_1EAE24D28, (void (*)(uint64_t))type metadata accessor for FairPlayDebugController);
  sub_1E3E7AE90();
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C1A3C4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A5C);
  sub_1E3E23838();
  swift_release();
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  sub_1E3E7AE90();
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C1A3C4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A5C);
  sub_1E3E23860();
  swift_release();
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  sub_1E3E7AE90();
  sub_1E3C1A35C(a1, (void (*)(void, void))sub_1E3C1A3C4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A5C);
  sub_1E3E23888();

  return swift_release();
}

uint64_t sub_1E3C19A5C()
{
  return swift_release();
}

uint64_t sub_1E3C19A64()
{
  return sub_1E3C1987C(v0 + 16);
}

uint64_t sub_1E3C19A6C(uint64_t result)
{
  if (result) {
    return sub_1E3E775E0();
  }
  return result;
}

uint64_t sub_1E3C19A7C()
{
  return sub_1E3E775E0();
}

uint64_t sub_1E3C19A84(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_1E3E7D1A0();
  *(void *)(v1 + 24) = sub_1E3E7D190();
  uint64_t v3 = sub_1E3E7D130();
  return MEMORY[0x1F4188298](sub_1E3C19B1C, v3, v2);
}

uint64_t sub_1E3C19B1C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  sub_1E3C1A35C(v1, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  type metadata accessor for FairPlayDebugController();
  sub_1E3C1A64C(&qword_1EAE24D28, (void (*)(uint64_t))type metadata accessor for FairPlayDebugController);
  sub_1E3E7AE90();
  sub_1E3C1A35C(v1, (void (*)(void, void))sub_1E3C1A3C4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A5C);
  sub_1E3E23838();
  swift_release();
  sub_1E3C1A35C(v1, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  sub_1E3E7AE90();
  sub_1E3C1A35C(v1, (void (*)(void, void))sub_1E3C1A3C4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A5C);
  sub_1E3E23860();
  swift_release();
  sub_1E3C1A35C(v1, (void (*)(void, void))sub_1E3C19A6C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A7C);
  sub_1E3E7AE90();
  sub_1E3C1A35C(v1, (void (*)(void, void))sub_1E3C1A3C4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1E3C19A5C);
  sub_1E3E23888();
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_1E3C19D30()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1E3C19DC4;
  return sub_1E3C19A84(v0 + 16);
}

uint64_t sub_1E3C19DC4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_1E3C19EB8()
{
  unint64_t result = qword_1EAE24D18;
  if (!qword_1EAE24D18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE24CC8);
    sub_1E3C10DE8(&qword_1EAE24D20, &qword_1EAE24CC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24D18);
  }
  return result;
}

uint64_t sub_1E3C19F58(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3C19FB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3C19FD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3E7B5C0();
  *a1 = result;
  return result;
}

uint64_t sub_1E3C1A01C()
{
  return sub_1E3E7B450();
}

uint64_t destroy for FairPlayDebugView(void *a1)
{
  if (*a1) {
    swift_release();
  }

  return sub_1E3C19A5C();
}

uint64_t initializeWithCopy for FairPlayDebugView(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    sub_1E3E775E0();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1E3C19A7C();
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FairPlayDebugView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*(void *)a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v6;
      sub_1E3E775E0();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_1E3E775E0();
  swift_release();
LABEL_8:
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  char v9 = *((unsigned char *)a2 + 32);
  sub_1E3C19A7C();
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  sub_1E3C19A5C();
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FairPlayDebugView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*(void *)a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v6;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  swift_release();
LABEL_8:
  char v7 = *((unsigned char *)a2 + 32);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1E3C19A5C();
  return a1;
}

uint64_t getEnumTagSinglePayload for FairPlayDebugView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FairPlayDebugView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FairPlayDebugView()
{
  return &type metadata for FairPlayDebugView;
}

uint64_t sub_1E3C1A300()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3C1A35C(uint64_t a1, void (*a2)(void, void), void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 32);
  a2(*(void *)a1, *(void *)(a1 + 8));
  a3(v5, v6, v7);
  return a1;
}

uint64_t sub_1E3C1A3C4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3C1A3D4@<X0>(char *a1@<X8>)
{
  return sub_1E3C1865C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1E3C1A3DC()
{
  return sub_1E3C195DC(*(void *)(v0 + 16));
}

uint64_t sub_1E3C1A3E4()
{
  return sub_1E3C197A4(*(void *)(v0 + 16));
}

uint64_t sub_1E3C1A3F0()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1E3C1A420()
{
  return sub_1E3C18B0C(*(void *)(v0 + 16));
}

unint64_t sub_1E3C1A428()
{
  unint64_t result = qword_1EAE24D68;
  if (!qword_1EAE24D68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE24D60);
    sub_1E3C1A49C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24D68);
  }
  return result;
}

unint64_t sub_1E3C1A49C()
{
  unint64_t result = qword_1EAE24D70;
  if (!qword_1EAE24D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24D70);
  }
  return result;
}

uint64_t sub_1E3C1A4F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C18D54(*(void *)(v1 + 16), a1);
}

unint64_t sub_1E3C1A4F8()
{
  unint64_t result = qword_1EAE24D80;
  if (!qword_1EAE24D80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE24D78);
    sub_1E3C1A598();
    sub_1E3C10DE8(&qword_1EAE24DA0, &qword_1EAE24DA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24D80);
  }
  return result;
}

unint64_t sub_1E3C1A598()
{
  unint64_t result = qword_1EAE24D88;
  if (!qword_1EAE24D88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE24D90);
    sub_1E3C1A64C(&qword_1EAE24D98, (void (*)(uint64_t))type metadata accessor for FairPlayDebugKeyCell);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24D88);
  }
  return result;
}

uint64_t sub_1E3C1A63C@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C19104(*(void *)(v1 + 16), a1);
}

uint64_t sub_1E3C1A64C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3C1A698(uint64_t a1)
{
  return sub_1E3C194AC(a1, v1 + 16, (void (*)(uint64_t, uint64_t))sub_1E3E24C2C);
}

uint64_t sub_1E3C1A6C8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C1A700()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1E3C1A728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FairPlayKeyViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C1A798(uint64_t a1)
{
  return sub_1E3C194AC(a1, v1 + 16, (void (*)(uint64_t, uint64_t))sub_1E3E24600);
}

unint64_t sub_1E3C1A7D0()
{
  unint64_t result = qword_1EAE24DE0;
  if (!qword_1EAE24DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24DE0);
  }
  return result;
}

uint64_t sub_1E3C1A830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1E3C20510(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

id AMSDialogRequest.init<A>(from:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  uint64_t v11 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  if (v12)
  {
    uint64_t v13 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  id v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithTitle_message_, v11, v13);

  id v15 = v14;
  objc_msgSend(v15, sel_setStyle_, a2);
  _s10PodcastsUI8TipModelPAAE4kindAA0C4KindVvg_0(a3, a4);
  uint64_t v16 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setIdentifier_, v16);

  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  uint64_t v17 = sub_1E3E77D00();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v17) != 1)
  {
    uint64_t v19 = (void *)sub_1E3E77C40();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v17);
  }
  objc_msgSend(v15, sel_setIconURL_, v19);

  (*(void (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  if (v20)
  {
    uint64_t v21 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = 0;
  }
  objc_msgSend(v15, sel_setTitleAccessibilityLabel_, v21);

  (*(void (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
  if (v22)
  {
    uint64_t v23 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = 0;
  }
  objc_msgSend(v15, sel_setMessageAccessibilityLabel_, v23);

  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 64))(a3, a4);
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    id v34 = v15;
    uint64_t v35 = a1;
    uint64_t v36 = a3;
    v42[18] = MEMORY[0x1E4FBC860];
    sub_1E3E7DEB0();
    id v37 = self;
    uint64_t v33 = v24;
    uint64_t v26 = v24 + 32;
    do
    {
      sub_1E3C1B260(v26, (uint64_t)v42);
      sub_1E3C1B260((uint64_t)v42, (uint64_t)v39);
      if (v39[3])
      {
        swift_bridgeObjectRetain();
        uint64_t v27 = (void *)sub_1E3E7CCF0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v27 = 0;
      }
      id v28 = objc_msgSend(v37, sel_actionWithTitle_style_, v27, v40[5], v33);

      id v29 = v28;
      long long v30 = (void *)sub_1E3E7CCF0();
      objc_msgSend(v29, sel_setIdentifier_, v30);

      sub_1E3C1B2BC((uint64_t)v40, (uint64_t)v38);
      sub_1E3C1ADE8((uint64_t)v38, 0xD000000000000033, 0x80000001E3E9BC10);
      sub_1E3C1B320((uint64_t)&v41, (uint64_t)v43);
      sub_1E3C1B534(v43, (void (*)(void, void, void, void, void, void, void, void))sub_1E3C1B388);
      sub_1E3C1B000(v43, 0xD00000000000003ALL, 0x80000001E3E9BC50);

      sub_1E3C1B3EC((uint64_t)v39);
      sub_1E3C1B3EC((uint64_t)v42);
      sub_1E3E7DE80();
      sub_1E3E7DEC0();
      sub_1E3E7DED0();
      sub_1E3E7DE90();
      v26 += 144;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    a1 = v35;
    a3 = v36;
    id v15 = v34;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1E3C1B440();
  char v31 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setButtonActions_, v31);

  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  return v15;
}

uint64_t sub_1E3C1ADE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = objc_msgSend(v3, sel_parameters);
  if (v8)
  {
    uint64_t v9 = v8;
    unint64_t v10 = sub_1E3E7CB60();
  }
  else
  {
    unint64_t v10 = sub_1E3C7EE44(MEMORY[0x1E4FBC860]);
  }
  unint64_t v20 = v10;
  sub_1E3C1B5DC(a1, (uint64_t)&v17);
  if (v18)
  {
    sub_1E3C1B644(&v17, (uint64_t)v19);
    *((void *)&v15 + 1) = a3;
    sub_1E3E7DD60();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5CA8);
    *(void *)&long long v15 = swift_allocObject();
    sub_1E3C1B2BC((uint64_t)v19, v15 + 16);
    sub_1E3C1B524(&v15, v14);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1E3E67B8C(v14, (uint64_t)&v17, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1E3C1B480((uint64_t)&v17);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v17, &qword_1EBFE5CB0);
    *(void *)&long long v17 = a2;
    *((void *)&v17 + 1) = a3;
    sub_1E3E7DD60();
    sub_1E3D5A36C((uint64_t)v19, &v17);
    sub_1E3C1B480((uint64_t)v19);
    sub_1E3C10CE0((uint64_t)&v17, &qword_1EBFE6190);
  }
  uint64_t v12 = (void *)sub_1E3E7CB50();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setParameters_, v12);

  return sub_1E3C10CE0(a1, &qword_1EBFE5CB0);
}

void sub_1E3C1B000(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1E3C1B320((uint64_t)a1, (uint64_t)v28);
  uint64_t v8 = v28[0];
  uint64_t v9 = v28[1];
  uint64_t v10 = v28[3];
  uint64_t v11 = v28[5];
  uint64_t v20 = v28[4];
  uint64_t v21 = v28[2];
  uint64_t v12 = v28[7];
  uint64_t v19 = v28[6];
  id v22 = v4;
  id v13 = objc_msgSend(v4, sel_parameters);
  if (v13)
  {
    id v14 = v13;
    unint64_t v15 = sub_1E3E7CB60();
  }
  else
  {
    unint64_t v15 = sub_1E3C7EE44(MEMORY[0x1E4FBC860]);
  }
  unint64_t v27 = v15;
  sub_1E3C1B320((uint64_t)a1, (uint64_t)v29);
  if (v30)
  {
    *((void *)&v25 + 1) = a3;
    sub_1E3E7DD60();
    uint64_t v26 = &type metadata for ClickLocationElement;
    uint64_t v16 = (void *)swift_allocObject();
    *(void *)&long long v25 = v16;
    v16[2] = v8;
    v16[3] = v9;
    v16[4] = v21;
    v16[5] = v10;
    v16[6] = v20;
    v16[7] = v11;
    v16[8] = v19;
    v16[9] = v12;
    sub_1E3C1B524(&v25, v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1E3E67B8C(v23, (uint64_t)v24, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1E3C1B480((uint64_t)v24);
    sub_1E3C1B534(a1, (void (*)(void, void, void, void, void, void, void, void))sub_1E3C1B578);
  }
  else
  {
    *(void *)&long long v25 = a2;
    *((void *)&v25 + 1) = a3;
    sub_1E3E7DD60();
    sub_1E3D5A36C((uint64_t)v24, &v25);
    sub_1E3C1B480((uint64_t)v24);
    sub_1E3C10CE0((uint64_t)&v25, &qword_1EBFE6190);
  }
  uint64_t v18 = (void *)sub_1E3E7CB50();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setParameters_, v18);
}

uint64_t sub_1E3C1B260(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1E3C1B2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1E3C1B320(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C1B388(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1E3C1B3EC(uint64_t a1)
{
  return a1;
}

unint64_t sub_1E3C1B440()
{
  unint64_t result = qword_1EBFE5D80;
  if (!qword_1EBFE5D80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBFE5D80);
  }
  return result;
}

uint64_t sub_1E3C1B480(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3C1B4D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

_OWORD *sub_1E3C1B524(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void *sub_1E3C1B534(void *a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1E3C1B578(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1E3C1B5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C1B644(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1E3C1B65C()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t UserSettings.isPersonalizationDisabled.getter()
{
  sub_1E3E78A90();
  return v1;
}

uint64_t sub_1E3C1B6C8@<X0>(unsigned char *a1@<X8>)
{
  sub_1E3E775E0();
  sub_1E3E78A90();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

void sub_1E3C1B71C(uint64_t a1, os_unfair_lock_s **a2)
{
  long long v2 = *a2 + 4;
  char v3 = *a2 + 5;
  os_unfair_lock_lock(v3);
  sub_1E3C1B97C(v2);
  os_unfair_lock_unlock(v3);
}

void UserSettings.isPersonalizationDisabled.setter()
{
  unsigned __int8 v1 = *v0 + 4;
  long long v2 = *v0 + 5;
  os_unfair_lock_lock(v2);
  sub_1E3C1B7D8(v1);
  os_unfair_lock_unlock(v2);
}

unsigned char *sub_1E3C1B7D8(unsigned char *result)
{
  *uint64_t result = *(unsigned char *)(v1 + 16);
  return result;
}

void (*UserSettings.isPersonalizationDisabled.modify(uint64_t a1))(os_unfair_lock_s ***a1)
{
  *(void *)a1 = v1;
  sub_1E3E78A90();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_1E3C1B840;
}

void sub_1E3C1B840(os_unfair_lock_s ***a1)
{
  uint64_t v1 = **a1;
  long long v2 = v1 + 4;
  char v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1E3C1B97C(v2);
  os_unfair_lock_unlock(v3);
}

BOOL UserSettings.isPersonalizationEnabled.getter()
{
  sub_1E3E775E0();
  sub_1E3E78A90();
  swift_release();
  return (v1 & 1) == 0;
}

uint64_t UserSettings.init(isPersonalizationDisabled:)@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24DE8);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 20) = 0;
  *(unsigned char *)(result + 16) = a1;
  *a2 = result;
  return result;
}

ValueMetadata *type metadata accessor for UserSettings()
{
  return &type metadata for UserSettings;
}

unsigned char *sub_1E3C1B97C(unsigned char *a1)
{
  return sub_1E3C1B7D8(a1);
}

void ImageStore.asyncLocallyDiskCachedImage(forKey:size:completionHandler:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = *(void *)(a5 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  double v16 = MEMORY[0x1F4188790](a1);
  uint64_t v18 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v16 >= 1.0) {
    double v19 = v16;
  }
  else {
    double v19 = 1.0;
  }
  if (v17 >= 1.0) {
    double v20 = v17;
  }
  else {
    double v20 = 1.0;
  }
  uint64_t v29 = 0;
  __int16 v30 = 256;
  uint64_t v21 = (*(uint64_t (**)(double, double))(v15 + 24))(v19, v20);
  if (v21)
  {
    unint64_t v28 = v21;
    a3(v21, a1, a2);
    id v22 = (void *)v28;
  }
  else if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 48))(a1, a2, a5, a6))
  {
    uint64_t v29 = 0;
    __int16 v30 = 256;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v6, a5);
    unint64_t v27 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v28 = (v14 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = (char *)swift_allocObject();
    *((void *)v23 + 2) = a5;
    *((void *)v23 + 3) = a6;
    *((void *)v23 + 4) = a3;
    *((void *)v23 + 5) = a4;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v23[v27], v18, a5);
    uint64_t v24 = (double *)&v23[v28];
    *uint64_t v24 = v19;
    v24[1] = v20;
    long long v25 = *(void (**)(uint64_t, uint64_t, uint64_t *, void (*)(void *, uint64_t, uint64_t), char *, uint64_t, uint64_t, double, double))(a6 + 32);
    sub_1E3E775E0();
    v25(a1, a2, &v29, sub_1E3C1C07C, v23, a5, a6, v19, v20);
    swift_release();
  }
  else
  {
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = a3;
    v26[3] = a4;
    v26[4] = a1;
    v26[5] = a2;
    sub_1E3E775E0();
    swift_bridgeObjectRetain();
    sub_1E3C1BCB0((void (*)(void *))sub_1E3C1BCAC, (uint64_t)v26, a5, a6, v19, v20);
    swift_release();
  }
}

void sub_1E3C1BCB0(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  if (a5 >= 1.0) {
    double v10 = a5;
  }
  else {
    double v10 = 1.0;
  }
  if (a6 >= 1.0) {
    double v11 = a6;
  }
  else {
    double v11 = 1.0;
  }
  uint64_t v12 = sub_1E3E7CD30();
  uint64_t v20 = 0;
  __int16 v21 = 256;
  uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t, double, double))(a4 + 24))(v12, v10, v11);
  swift_bridgeObjectRelease();
  if (v13)
  {
    id v19 = v13;
    a1(v13);
  }
  else
  {
    uint64_t v14 = sub_1E3E7CD30();
    uint64_t v16 = v15;
    uint64_t v20 = 0;
    __int16 v21 = 256;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a1;
    *(void *)(v17 + 24) = a2;
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t (*)(), uint64_t, uint64_t, uint64_t, double, double))(a4 + 32);
    sub_1E3E775E0();
    v18(v14, v16, &v20, sub_1E3C1C280, v17, a3, a4, v10, v11);
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_1E3C1BE74(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t, uint64_t), uint64_t a5, double a6, double a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a1)
  {
    id v20 = a1;
    a4(a1, a2, a3);
  }
  else
  {
    id v19 = (void *)swift_allocObject();
    v19[2] = a4;
    v19[3] = a5;
    v19[4] = a2;
    v19[5] = a3;
    sub_1E3E775E0();
    swift_bridgeObjectRetain();
    sub_1E3C1BCB0((void (*)(void *))sub_1E3C1BCAC, (uint64_t)v19, a9, a10, a6, a7);
    swift_release();
  }
}

uint64_t sub_1E3C1BFAC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1E3C1C07C(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80);
  uint64_t v5 = (double *)(v3 + ((*(void *)(*(void *)(*(void *)(v3 + 16) - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1E3C1BE74(a1, a2, a3, *(void (**)(void *, uint64_t, uint64_t))(v3 + 32), *(void *)(v3 + 40), *v5, v5[1], v3 + v4, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t getEnumTagSinglePayload for ImageBlur(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ImageBlur(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1E3C1C13C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1E3C1C158(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageBlur()
{
  return &type metadata for ImageBlur;
}

uint64_t dispatch thunk of ImageStore.image(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ImageStore.image(forKey:size:imageBlur:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ImageStore.imageInMemory(forKey:size:imageBlur:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of ImageStore.asyncImage(forKey:size:imageBlur:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of ImageStore.hasItem(forKey:size:imageBlur:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of ImageStore.hasItem(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of ImageStore.invalidate(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_1E3C1C218(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void, void))(v1 + 16))(a1, *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1E3C1C248()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C1C280()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t MPCPlayerResponse.nextChapter.getter()
{
  unint64_t v0 = MPCPlayerResponse.remainingChapters.getter();
  if (!v0) {
    return 0;
  }
  unint64_t v1 = v0;
  uint64_t v2 = v0 & 0xFFFFFFFFFFFFFF8;
  if (!(v0 >> 62))
  {
    uint64_t result = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  uint64_t result = sub_1E3E7DFC0();
  if (!result)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_4:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1E4E77720](0, v1);
    goto LABEL_7;
  }
  if (*(void *)(v2 + 16))
  {
    id v4 = *(id *)(v1 + 32);
LABEL_7:
    id v5 = v4;
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t MPCPlayerResponse.remainingChapters.getter()
{
  return sub_1E3C1C420((uint64_t (*)(uint64_t, double))sub_1E3C1C594);
}

unint64_t MPCPlayerResponse.previousChapter.getter()
{
  unint64_t v0 = MPCPlayerResponse.previousChapters.getter();
  if (!v0) {
    return 0;
  }
  unint64_t v1 = v0;
  uint64_t v2 = v0 & 0xFFFFFFFFFFFFFF8;
  if (!(v0 >> 62))
  {
    uint64_t v3 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  uint64_t v3 = sub_1E3E7DFC0();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_4:
  BOOL v4 = __OFSUB__(v3, 1);
  unint64_t result = v3 - 1;
  if (v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_15:
    id v6 = (id)MEMORY[0x1E4E77720](result, v1);
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v2 + 16))
  {
    id v6 = *(id *)(v1 + 8 * result + 32);
LABEL_9:
    id v7 = v6;
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t MPCPlayerResponse.previousChapters.getter()
{
  return sub_1E3C1C420((uint64_t (*)(uint64_t, double))sub_1E3C1C740);
}

uint64_t sub_1E3C1C420(uint64_t (*a1)(uint64_t, double))
{
  id v3 = objc_msgSend(v1, sel_tracklist);
  id v4 = objc_msgSend(v3, sel_playingItem);

  if (!v4) {
    return 0;
  }
  objc_msgSend(v4, sel_duration);

  sub_1E3E77D90();
  double v6 = v17 + (v5 - v15) * v18;
  double v7 = v6 >= v16 ? v16 : v6;
  uint64_t v8 = (void *)MPCPlayerResponse.currentItem.getter();
  if (!v8) {
    return 0;
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_chapters);
  if (!v10)
  {

    return 0;
  }
  double v11 = v10;
  sub_1E3C1C554();
  uint64_t v12 = sub_1E3E7D060();

  uint64_t v13 = a1(v12, fmax(v7, 0.0));
  swift_bridgeObjectRelease();

  return v13;
}

unint64_t sub_1E3C1C554()
{
  unint64_t result = qword_1EAE24DF0;
  if (!qword_1EAE24DF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAE24DF0);
  }
  return result;
}

uint64_t sub_1E3C1C594(unint64_t a1, double a2)
{
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1E3E7DFC0();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1E4E77720](i, a1);
      }
      else {
        id v7 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      objc_msgSend(v7, sel_startTime);
      if (v9 > a2)
      {
        sub_1E3E7DE80();
        sub_1E3E7DEC0();
        sub_1E3E7DED0();
        sub_1E3E7DE90();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = v12;
    if (v12 < 0) {
      goto LABEL_19;
    }
LABEL_16:
    if ((v10 & 0x4000000000000000) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1E3E7E190();
      sub_1E3C1C554();
      uint64_t v11 = v10;
LABEL_18:
      swift_release();
      return v11;
    }
LABEL_19:
    sub_1E3C1C554();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1E3E7DF90();
    swift_release();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1E3C1C740(unint64_t a1, double a2)
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1E3E7DFC0();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1E4E77720](i, a1);
      }
      else {
        id v7 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      objc_msgSend(v7, sel_startTime);
      double v10 = v9;
      objc_msgSend(v8, sel_duration);
      if (v10 + v11 <= a2)
      {
        sub_1E3E7DE80();
        sub_1E3E7DEC0();
        sub_1E3E7DED0();
        sub_1E3E7DE90();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = v14;
    if (v14 < 0) {
      goto LABEL_19;
    }
LABEL_16:
    if ((v12 & 0x4000000000000000) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1E3E7E190();
      sub_1E3C1C554();
      uint64_t v13 = v12;
LABEL_18:
      swift_release();
      return v13;
    }
LABEL_19:
    sub_1E3C1C554();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1E3E7DF90();
    swift_release();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

id MPCPlayerResponse.currentChapter.getter()
{
  id v1 = objc_msgSend(v0, sel_tracklist);
  id v2 = objc_msgSend(v1, sel_playingItem);

  if (!v2) {
    return 0;
  }
  objc_msgSend(v2, sel_duration);

  sub_1E3E77D90();
  double v4 = v13 + (v3 - v11) * v14;
  double v5 = v4 >= v12 ? v12 : v4;
  double v6 = (void *)MPCPlayerResponse.currentItem.getter();
  if (!v6) {
    return 0;
  }
  id v7 = v6;
  id v8 = objc_msgSend(v6, sel_chapters);
  if (v8)
  {
    sub_1E3C1C554();
    unint64_t v9 = sub_1E3E7D060();

    id v8 = (id)sub_1E3C1CA34(v9, fmax(v5, 0.0));
    swift_bridgeObjectRelease();
  }

  return v8;
}

uint64_t sub_1E3C1CA34(unint64_t a1, double a2)
{
  unint64_t v2 = a1;
  unint64_t v16 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1E3E7DFC0();
    if (v4)
    {
LABEL_3:
      if (v4 < 1)
      {
        __break(1u);
        goto LABEL_27;
      }
      for (uint64_t i = 0; i != v4; ++i)
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v6 = (id)MEMORY[0x1E4E77720](i, v2);
        }
        else {
          id v6 = *(id *)(v2 + 8 * i + 32);
        }
        id v7 = v6;
        objc_msgSend(v6, sel_startTime);
        if (v8 > a2 || (objc_msgSend(v7, sel_startTime), double v10 = v9, objc_msgSend(v7, sel_duration), v10 + v11 <= a2))
        {
        }
        else
        {
          sub_1E3E7DE80();
          sub_1E3E7DEC0();
          sub_1E3E7DED0();
          sub_1E3E7DE90();
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v2 = v16;
      if ((v16 & 0x8000000000000000) != 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v2 = MEMORY[0x1E4FBC860];
  if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
    goto LABEL_23;
  }
LABEL_17:
  if ((v2 & 0x4000000000000000) != 0)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1E3E7DFC0();
    uint64_t result = swift_release();
    if (!v15) {
      goto LABEL_24;
    }
    goto LABEL_19;
  }
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    swift_release();
    return 0;
  }
LABEL_19:
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_27:
    id v13 = (id)MEMORY[0x1E4E77720](0, v2);
    goto LABEL_22;
  }
  if (*(void *)(v2 + 16))
  {
    id v13 = *(id *)(v2 + 32);
LABEL_22:
    id v14 = v13;
    swift_release();
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t MPCPlayerResponse.chapters.getter()
{
  unint64_t v0 = (void *)MPCPlayerResponse.currentItem.getter();
  if (!v0) {
    return 0;
  }
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_chapters);
  if (!v2)
  {

    return 0;
  }
  double v3 = v2;
  sub_1E3C1C554();
  uint64_t v4 = sub_1E3E7D060();

  return v4;
}

void sub_1E3C1CCB4()
{
  sub_1E3C1CE94();
  if (v0 <= 0x3F)
  {
    type metadata accessor for AsyncOnceValue.State();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t sub_1E3C1CD9C()
{
  sub_1E3C1DE20(v0 + qword_1EBFDFFE0);
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v2 = type metadata accessor for AsyncOnceValue.State();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1E3C1CE50()
{
  sub_1E3C1CD9C();

  return MEMORY[0x1F4188210](v0);
}

uint64_t type metadata accessor for AsyncOnceValue()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1E3C1CE94()
{
  if (!qword_1EBFE06B0)
  {
    sub_1E3E7D1E0();
    unint64_t v0 = sub_1E3E7DB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE06B0);
    }
  }
}

uint64_t type metadata accessor for AsyncOnceValue.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1E3C1CF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1E3C1CF0C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1E3C1CFA8(void *__dst, unsigned __int8 *a2, uint64_t a3)
{
  double v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *double v3 = *(void *)a2;
    double v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(void *))(v4 + 16))(__dst);
      *((unsigned char *)v3 + v5) = 1;
      return v3;
    }
    if (v9)
    {
      memcpy(__dst, a2, v5 + 1);
      return v3;
    }
    *__dst = *(void *)a2;
    *((unsigned char *)__dst + v5) = 0;
  }
  sub_1E3E775E0();
  return v3;
}

unsigned __int8 *sub_1E3C1D134(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = result[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *result;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)result;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  if (!v3) {
    return (unsigned __int8 *)swift_release();
  }
  return result;
}

unsigned char *sub_1E3C1D23C(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 0;
    sub_1E3E775E0();
  }
  return __dst;
}

unsigned __int8 *sub_1E3C1D38C(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    else if (!v8)
    {
      swift_release();
    }
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      *(void *)__dst = *(void *)__src;
      __dst[v7] = 0;
      sub_1E3E775E0();
    }
  }
  return __dst;
}

unsigned char *sub_1E3C1D5C4(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1E3C1D710(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    else if (!v8)
    {
      swift_release();
    }
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      *(void *)__dst = *(void *)__src;
      __dst[v7] = 0;
    }
  }
  return __dst;
}

uint64_t sub_1E3C1D944(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1E3C1DA78(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1E3C1DC40);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1E3C1DC68(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1E3C1DD20(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1E3C1DDF8()
{
  return v0;
}

uint64_t sub_1E3C1DE04()
{
  return sub_1E3C1DDF8();
}

uint64_t sub_1E3C1DE20(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1E3C1DF68(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE28B0);
    uint64_t v2 = (void *)sub_1E3E7E000();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  unsigned int v6 = &v37;
  int v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  unsigned int v10 = (uint64_t *)&unk_1EBFE26B8;
  uint64_t v11 = MEMORY[0x1E4FBC840] + 8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1E3C1E444();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (int64_t i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(v10);
    swift_dynamicCast();
    sub_1E3C1B524(v6, v7);
    sub_1E3C1B524(v7, v40);
    sub_1E3C1B524(v40, &v38);
    unint64_t result = sub_1E3C2E48C(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      int v12 = v7;
      unsigned int v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      int v16 = v10;
      int v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int v17 = v35;
      v17[1] = v36;
      unsigned int v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      unsigned int v6 = v13;
      int v7 = v12;
      int64_t i = v33;
      float v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      unint64_t result = (unint64_t)sub_1E3C1B524(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_1E3C1B524(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    size_t v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id sub_1E3C1E364()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s18JSPropertiesObjectCMa()
{
  return self;
}

uint64_t sub_1E3C1E404()
{
  return sub_1E3E7DA30();
}

uint64_t sub_1E3C1E428()
{
  return sub_1E3E7C540();
}

uint64_t sub_1E3C1E444()
{
  return swift_release();
}

unint64_t sub_1E3C1E44C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2900);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E3E86C70;
  *(void *)(inited + 32) = 0xD000000000000024;
  *(void *)(inited + 40) = 0x80000001E3E9BD50;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = 0xD000000000000014;
  *(void *)(inited + 64) = 0x80000001E3E9BD80;
  uint64_t v1 = sub_1E3E78400();
  uint64_t v13 = v1;
  unint64_t v2 = sub_1E3C16D20();
  unint64_t v14 = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  uint64_t v4 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v1 - 8) + 104);
  v4(boxed_opaque_existential_1, *MEMORY[0x1E4F91530], v1);
  char v5 = sub_1E3E78090();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  *(unsigned char *)(inited + 72) = v5 & 1;
  *(void *)(inited + 80) = 0xD000000000000018;
  *(void *)(inited + 88) = 0x80000001E3E9BDA0;
  *(unsigned char *)(inited + 96) = 1;
  *(void *)(inited + 104) = 0xD000000000000013;
  *(void *)(inited + 112) = 0x80000001E3E9BDC0;
  *(unsigned char *)(inited + 120) = sub_1E3E783F0() & 1;
  *(void *)(inited + 128) = 0xD00000000000001BLL;
  *(void *)(inited + 136) = 0x80000001E3E9BDE0;
  *(unsigned char *)(inited + 144) = 1;
  *(void *)(inited + 152) = 0x7374726F70707573;
  *(void *)(inited + 160) = 0xEF626154656D6F48;
  uint64_t v13 = v1;
  unint64_t v14 = v2;
  unsigned int v6 = __swift_allocate_boxed_opaque_existential_1(v12);
  v4(v6, *MEMORY[0x1E4F91560], v1);
  char v7 = sub_1E3E78090();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  *(unsigned char *)(inited + 168) = v7 & 1;
  strcpy((char *)(inited + 176), "supportsGingko");
  *(unsigned char *)(inited + 191) = -18;
  *(unsigned char *)(inited + 192) = sub_1E3E783B0() & 1;
  *(void *)(inited + 200) = 0xD000000000000011;
  *(void *)(inited + 208) = 0x80000001E3E9BE00;
  uint64_t v13 = v1;
  unint64_t v14 = v2;
  unsigned int v8 = __swift_allocate_boxed_opaque_existential_1(v12);
  v4(v8, *MEMORY[0x1E4F91568], v1);
  char v9 = sub_1E3E78090();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  *(unsigned char *)(inited + 216) = v9 & 1;
  *(void *)(inited + 224) = 0x7374726F70707573;
  *(void *)(inited + 232) = 0xEF73746948706F54;
  *(unsigned char *)(inited + 240) = sub_1E3E783C0() & 1;
  *(void *)(inited + 248) = 0xD00000000000001FLL;
  *(void *)(inited + 256) = 0x80000001E3E9BE20;
  *(unsigned char *)(inited + 264) = 1;
  *(void *)(inited + 272) = 0xD000000000000018;
  *(void *)(inited + 280) = 0x80000001E3E9BE40;
  *(unsigned char *)(inited + 288) = 1;
  *(void *)(inited + 296) = 0xD00000000000001ALL;
  *(void *)(inited + 304) = 0x80000001E3E9BE60;
  *(unsigned char *)(inited + 312) = 1;
  *(void *)(inited + 320) = 0xD000000000000025;
  *(void *)(inited + 328) = 0x80000001E3E9BE80;
  uint64_t v13 = v1;
  unint64_t v14 = v2;
  unsigned int v10 = __swift_allocate_boxed_opaque_existential_1(v12);
  v4(v10, *MEMORY[0x1E4F91558], v1);
  LOBYTE(v1) = sub_1E3E78090();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  *(unsigned char *)(inited + 336) = v1 & 1;
  return sub_1E3C7EF88(inited);
}

uint64_t DeclineEpisodeLimitRecommendationAction.init(recommendation:actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1E3C1E800(a1, a3);
  uint64_t v5 = a3 + *(int *)(type metadata accessor for DeclineEpisodeLimitRecommendationAction() + 20);
  uint64_t v6 = sub_1E3E7BD30();
  char v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a2, v6);
}

uint64_t sub_1E3C1E800(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeLimitRecommendation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DeclineEpisodeLimitRecommendationAction()
{
  uint64_t result = qword_1EAE24E60;
  if (!qword_1EAE24E60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DeclineEpisodeLimitRecommendationAction.recommendation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C1E8BC(v1, a1);
}

uint64_t sub_1E3C1E8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeLimitRecommendation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t DeclineEpisodeLimitRecommendationAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DeclineEpisodeLimitRecommendationAction() + 20);
  uint64_t v4 = sub_1E3E7BD30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1E3C1E998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_1E3E7BD30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t *initializeBufferWithCopyOfBuffer for DeclineEpisodeLimitRecommendationAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    *a1 = *a2;
    char v7 = (int *)type metadata accessor for EpisodeLimitRecommendation();
    uint64_t v8 = v7[5];
    char v9 = (char *)v4 + v8;
    unsigned int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1E3E78A70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)v4 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
    uint64_t v12 = v7[7];
    uint64_t v13 = (char *)v4 + v12;
    unint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1E3E799C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = v7[8];
    int v17 = (uint64_t *)((char *)v4 + v16);
    float v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *int v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v7[9];
    unint64_t v21 = (uint64_t *)((char *)v4 + v20);
    int64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *unint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = *(int *)(a3 + 20);
    unint64_t v25 = (char *)v4 + v24;
    char v26 = (char *)a2 + v24;
    uint64_t v27 = sub_1E3E7BD30();
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v25, v26, v27);
  }
  return v4;
}

uint64_t destroy for DeclineEpisodeLimitRecommendationAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_1E3E78A70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 28);
  uint64_t v8 = sub_1E3E799C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  uint64_t v10 = sub_1E3E7BD30();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

void *initializeWithCopy for DeclineEpisodeLimitRecommendationAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1E3E78A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1E3E799C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  int v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = v6[9];
  uint64_t v20 = (void *)((char *)a1 + v19);
  unint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (char *)a1 + v23;
  unint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_1E3E7BD30();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27(v24, v25, v26);
  return a1;
}

void *assignWithCopy for DeclineEpisodeLimitRecommendationAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1E3E78A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1E3E799C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  int v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v6[9];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = sub_1E3E7BD30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

void *initializeWithTake for DeclineEpisodeLimitRecommendationAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1E3E78A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1E3E799C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  int v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1E3E7BD30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

void *assignWithTake for DeclineEpisodeLimitRecommendationAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1E3E78A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1E3E799C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  int v17 = (void *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = v6[9];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_1E3E7BD30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeclineEpisodeLimitRecommendationAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C1F2C4);
}

uint64_t sub_1E3C1F2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1E3E7BD30();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for DeclineEpisodeLimitRecommendationAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C1F3D0);
}

uint64_t sub_1E3C1F3D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1E3E7BD30();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1E3C1F4D4()
{
  uint64_t result = type metadata accessor for EpisodeLimitRecommendation();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1E3E7BD30();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t RemoveDownloadedEpisodesAction.init(episodeIDs:actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for RemoveDownloadedEpisodesAction() + 20);
  uint64_t v5 = sub_1E3E7BD30();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t type metadata accessor for RemoveDownloadedEpisodesAction()
{
  uint64_t result = qword_1EAE24E70;
  if (!qword_1EAE24E70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RemoveDownloadedEpisodesAction.episodeIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoveDownloadedEpisodesAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveDownloadedEpisodesAction() + 20);
  uint64_t v4 = sub_1E3E7BD30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RemoveDownloadedEpisodesAction.intent.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3C1F6F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3C1F710@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoveDownloadedEpisodesAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1E3E7BD30();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for RemoveDownloadedEpisodesAction(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1E3E7BD30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for RemoveDownloadedEpisodesAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1E3E7BD30();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for RemoveDownloadedEpisodesAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E7BD30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for RemoveDownloadedEpisodesAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1E3E7BD30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for RemoveDownloadedEpisodesAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E7BD30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveDownloadedEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C1FAC0);
}

uint64_t sub_1E3C1FAC0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1E3E7BD30();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RemoveDownloadedEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C1FB84);
}

void *sub_1E3C1FB84(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1E3E7BD30();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1E3C1FC2C()
{
  uint64_t result = sub_1E3E7BD30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t RestorePurgedEpisodesAction.init(episodeIDs:actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for RestorePurgedEpisodesAction() + 20);
  uint64_t v5 = sub_1E3E7BD30();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t type metadata accessor for RestorePurgedEpisodesAction()
{
  uint64_t result = qword_1EAE24E80;
  if (!qword_1EAE24E80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RestorePurgedEpisodesAction.episodeIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RestorePurgedEpisodesAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RestorePurgedEpisodesAction() + 20);
  uint64_t v4 = sub_1E3E7BD30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t getEnumTagSinglePayload for RestorePurgedEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C1FE2C);
}

uint64_t sub_1E3C1FE2C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1E3E7BD30();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RestorePurgedEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C1FEF0);
}

void *sub_1E3C1FEF0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1E3E7BD30();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t RequestTipProviderRefreshAction.init(actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1E3E7BD30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t RequestTipProviderRefreshAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1E3E7BD30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_1E3C2006C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1E3E7BD30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for RequestTipProviderRefreshAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7BD30();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for RequestTipProviderRefreshAction(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7BD30();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for RequestTipProviderRefreshAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RequestTipProviderRefreshAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RequestTipProviderRefreshAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RequestTipProviderRefreshAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestTipProviderRefreshAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C20348);
}

uint64_t sub_1E3C20348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7BD30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RequestTipProviderRefreshAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C203C8);
}

uint64_t sub_1E3C203C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7BD30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RequestTipProviderRefreshAction()
{
  uint64_t result = qword_1EBFE5720;
  if (!qword_1EBFE5720) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3C20484()
{
  uint64_t result = sub_1E3E7BD30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1E3C20510(uint64_t a1, uint64_t a2)
{
  return sub_1E3C20544(a1, a2, (void (*)(void))sub_1E3C260A4, MEMORY[0x1E4F915E0]);
}

uint64_t sub_1E3C20544(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v37 = sub_1E3E7DE20();
  uint64_t v35 = *(void *)(v37 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v37);
  uint64_t v36 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = sub_1E3E7BBC0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  MEMORY[0x1E4E764E0](v16);
  a3();
  uint64_t v34 = a4;
  sub_1E3E7BA80();
  if (v4)
  {
    uint64_t v33 = a2;
    swift_bridgeObjectRelease();
    id v38 = v4;
    id v17 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v18 = v37;
    if (swift_dynamicCast())
    {

      uint64_t v19 = v35;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v36, v12, v18);
      uint64_t v20 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v22 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v23 = swift_allocObject();
      uint64_t v32 = a1;
      uint64_t v24 = v23;
      *(_OWORD *)(v23 + 16) = xmmword_1E3E86660;
      *(void *)(v23 + 32) = swift_allocError();
      uint64_t v25 = v36;
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(v26, v36, v18);
      *uint64_t v22 = v34;
      v22[1] = v24;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4F717E0], v20);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v33, v13);
      uint64_t v27 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v32, v27);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v33, v13);
      uint64_t v29 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a1, v29);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = v39;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
    uint64_t v28 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(a1, v28);
  }
  return v18;
}

ValueMetadata *sub_1E3C209B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1E3E7DE20();
  uint64_t v33 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v31 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = sub_1E3E7BBC0();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a2, v10, v12);
  MEMORY[0x1E4E764E0](v14);
  sub_1E3C26050();
  uint64_t v15 = &type metadata for SearchResultsGroupID;
  sub_1E3E7BA80();
  if (v2)
  {
    uint64_t v28 = v10;
    uint64_t v29 = a2;
    uint64_t v30 = a1;
    swift_bridgeObjectRelease();
    uint64_t v32 = v2;
    uint64_t v16 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    if (swift_dynamicCast())
    {

      uint64_t v17 = v33;
      uint64_t v18 = v31;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v31, v9, v5);
      uint64_t v19 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1E3E86660;
      *(void *)(v22 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v23, v18, v5);
      *uint64_t v21 = &type metadata for SearchResultsGroupID;
      v21[1] = v22;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4F717E0], v19);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v29, v28);
      uint64_t v24 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v30, v24);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v5);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v29, v28);
      uint64_t v26 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v30, v26);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = v32;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    uint64_t v25 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
  }
  return v15;
}

uint64_t sub_1E3C20E1C(uint64_t a1, uint64_t a2)
{
  return sub_1E3C20544(a1, a2, (void (*)(void))sub_1E3C25FFC, MEMORY[0x1E4F919B0]);
}

id sub_1E3C20E50(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1E3E7DE20();
  uint64_t v33 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v31 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = sub_1E3E7BBC0();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a2, v10, v12);
  MEMORY[0x1E4E764E0](v14);
  sub_1E3C25FA8();
  id v15 = (id)MEMORY[0x1E4F91D78];
  sub_1E3E7BA80();
  if (v2)
  {
    uint64_t v28 = v10;
    uint64_t v29 = a2;
    uint64_t v30 = a1;
    swift_bridgeObjectRelease();
    id v32 = v2;
    id v16 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    if (swift_dynamicCast())
    {

      uint64_t v17 = v33;
      uint64_t v18 = v31;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v31, v9, v5);
      uint64_t v19 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1E3E86660;
      *(void *)(v22 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v23, v18, v5);
      *uint64_t v21 = v15;
      v21[1] = v22;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4F717E0], v19);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v29, v28);
      uint64_t v24 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v30, v24);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v5);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v29, v28);
      uint64_t v26 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v30, v26);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    id v15 = v32;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    uint64_t v25 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
  }
  return v15;
}

uint64_t sub_1E3C212B8(uint64_t a1, uint64_t a2)
{
  return sub_1E3C21354(a1, a2, (void (*)(void))sub_1E3C25F54, MEMORY[0x1E4F91710]);
}

uint64_t sub_1E3C212EC(uint64_t a1, uint64_t a2)
{
  return sub_1E3C20544(a1, a2, (void (*)(void))sub_1E3C25F00, (uint64_t)&type metadata for SearchOrigin);
}

uint64_t sub_1E3C21320(uint64_t a1, uint64_t a2)
{
  return sub_1E3C21354(a1, a2, (void (*)(void))sub_1E3C25EAC, MEMORY[0x1E4F91DB8]);
}

uint64_t sub_1E3C21354(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v38 = sub_1E3E7DE20();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  double v12 = (char *)&v32 - v11;
  uint64_t v13 = sub_1E3E7BBC0();
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v17, a2, v13, v15);
  MEMORY[0x1E4E764E0](v17);
  a3();
  uint64_t v35 = a4;
  sub_1E3E7BA80();
  if (v4)
  {
    uint64_t v34 = a2;
    swift_bridgeObjectRelease();
    id v39 = v4;
    id v18 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v19 = v38;
    if (swift_dynamicCast())
    {

      uint64_t v20 = v36;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v37, v12, v19);
      uint64_t v21 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v24 = swift_allocObject();
      uint64_t v33 = a1;
      uint64_t v25 = v24;
      *(_OWORD *)(v24 + 16) = xmmword_1E3E86660;
      *(void *)(v24 + 32) = swift_allocError();
      uint64_t v26 = v37;
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v27, v37, v19);
      *uint64_t v23 = v35;
      v23[1] = v25;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x1E4F717E0], v21);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v34, v13);
      uint64_t v28 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v33, v28);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v19);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v34, v13);
      uint64_t v30 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(a1, v30);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = v40;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
    uint64_t v29 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a1, v29);
  }
  return v19;
}

void *sub_1E3C217C8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)sub_1E3E7DE20();
  uint64_t v28 = *(v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v29 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = sub_1E3E7BBC0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1E3E7A440();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  MEMORY[0x1E4E764E0](v13);
  sub_1E3C25E64(&qword_1EAE24EC8, MEMORY[0x1E4F91D50]);
  sub_1E3E7BA80();
  if (v2)
  {
    uint64_t v26 = a2;
    uint64_t v27 = a1;
    swift_bridgeObjectRelease();
    id v30 = v2;
    id v15 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    if (swift_dynamicCast())
    {

      uint64_t v16 = v28;
      (*(void (**)(char *, char *, void *))(v28 + 32))(v29, v9, v5);
      uint64_t v17 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1E3E86660;
      *(void *)(v20 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, void *))(v16 + 16))(v21, v29, v5);
      *uint64_t v19 = v14;
      v19[1] = v20;
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4F717E0], v17);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v26, v10);
      uint64_t v22 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v27, v22);
      (*(void (**)(char *, void *))(v16 + 8))(v29, v5);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v26, v10);
      uint64_t v24 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v27, v24);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v30;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    uint64_t v23 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(a1, v23);
  }
  return v5;
}

char *sub_1E3C21C58(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1E3E7DE20();
  uint64_t v33 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = sub_1E3E7BBC0();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a2, v10, v12);
  MEMORY[0x1E4E764E0](v14);
  sub_1E3C25E10();
  uint64_t v15 = MEMORY[0x1E4F91DC8];
  sub_1E3E7BA80();
  if (v2)
  {
    uint64_t v28 = v10;
    uint64_t v29 = a2;
    uint64_t v30 = a1;
    swift_bridgeObjectRelease();
    uint64_t v32 = v2;
    uint64_t v16 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    if (swift_dynamicCast())
    {

      uint64_t v17 = v33;
      id v18 = v31;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v31, v9, v5);
      uint64_t v9 = (char *)sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v20 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1E3E86660;
      *(void *)(v21 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v22, v18, v5);
      *uint64_t v20 = v15;
      v20[1] = v21;
      (*(void (**)(void *, void, char *))(*((void *)v9 - 1) + 104))(v20, *MEMORY[0x1E4F717E0], v9);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v29, v28);
      uint64_t v23 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v30, v23);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v5);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v29, v28);
      uint64_t v25 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v30, v25);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v32;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    uint64_t v24 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
  }
  return v9;
}

uint64_t sub_1E3C220C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1E3E7DE20();
  uint64_t v30 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = sub_1E3E7BBC0();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a2, v10, v12);
  MEMORY[0x1E4E764E0](v14);
  sub_1E3C25DBC();
  sub_1E3E7BA80();
  if (v2)
  {
    uint64_t v28 = a2;
    uint64_t v29 = a1;
    swift_bridgeObjectRelease();
    id v32 = v2;
    id v15 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    if (swift_dynamicCast())
    {

      uint64_t v16 = v30;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v31, v9, v5);
      uint64_t v17 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1E3E86660;
      *(void *)(v20 + 32) = swift_allocError();
      uint64_t v21 = v31;
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v22, v31, v5);
      *uint64_t v19 = MEMORY[0x1E4F91DA8];
      v19[1] = v20;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4F717E0], v17);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v28, v10);
      uint64_t v23 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v29, v23);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v5);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v28, v10);
      uint64_t v25 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v29, v25);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v33;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    uint64_t v24 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
  }
  return v5;
}

void sub_1E3C22528(uint64_t a1, void *a2)
{
}

uint64_t sub_1E3C22584(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1E3E7DE20();
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v30 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t)&v27 - v8;
  uint64_t v10 = sub_1E3E7BBC0();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a2, v10, v12);
  MEMORY[0x1E4E764E0](v14);
  sub_1E3C25D68();
  uint64_t v15 = MEMORY[0x1E4F919A0];
  sub_1E3E7BA80();
  if (v2)
  {
    uint64_t v27 = v10;
    uint64_t v28 = a2;
    uint64_t v29 = a1;
    swift_bridgeObjectRelease();
    id v31 = v2;
    id v16 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    if (swift_dynamicCast())
    {

      uint64_t v17 = v32;
      id v18 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v30, v9, v5);
      uint64_t v9 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v20 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1E3E86660;
      *(void *)(v21 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v22, v18, v5);
      *uint64_t v20 = v15;
      v20[1] = v21;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v9 - 8) + 104))(v20, *MEMORY[0x1E4F717E0], v9);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v28, v27);
      uint64_t v23 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v29, v23);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v5);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v28, v27);
      uint64_t v25 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v29, v25);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v31;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    uint64_t v24 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
  }
  return v9;
}

void sub_1E3C229F8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1E3E7DE20();
  uint64_t v47 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v38 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = sub_1E3E7BBC0();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, a2, v12, v14);
  MEMORY[0x1E4E764E0](v16);
  sub_1E3C25D14();
  sub_1E3E7BA80();
  if (v3)
  {
    uint64_t v36 = a1;
    uint64_t v37 = a2;
    swift_bridgeObjectRelease();
    id v39 = v3;
    id v17 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    if (swift_dynamicCast())
    {

      uint64_t v18 = v47;
      uint64_t v19 = v38;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v38, v11, v7);
      uint64_t v20 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v22 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1E3E86660;
      *(void *)(v23 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v24, v19, v7);
      *uint64_t v22 = MEMORY[0x1E4F91A10];
      v22[1] = v23;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4F717E0], v20);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v37, v12);
      uint64_t v25 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v36, v25);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v7);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v37, v12);
      uint64_t v34 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v36, v34);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
    uint64_t v26 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(a1, v26);
    char v27 = v40;
    uint64_t v28 = v41;
    char v29 = v42;
    uint64_t v30 = v43;
    char v31 = v44;
    uint64_t v32 = v45;
    char v33 = v46;
    *(void *)a3 = v39;
    *(unsigned char *)(a3 + 8) = v27;
    *(void *)(a3 + 16) = v28;
    *(unsigned char *)(a3 + 24) = v29;
    *(void *)(a3 + 32) = v30;
    *(unsigned char *)(a3 + 40) = v31;
    *(void *)(a3 + 48) = v32;
    *(unsigned char *)(a3 + 56) = v33;
  }
}

void sub_1E3C22E9C(uint64_t a1, void *a2)
{
}

void sub_1E3C22EF8(uint64_t a1, void *a2, uint64_t (*a3)(void, double), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v38 = a6;
  uint64_t v36 = a5;
  uint64_t v35 = sub_1E3E7DE20();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v34 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v33 - v12;
  double v14 = (void (*)(uint64_t))sub_1E3E7BBC0();
  uint64_t v15 = *((void *)v14 - 1);
  double v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a3(0, v16);
  (*(void (**)(char *, void *, void (*)(uint64_t)))(v15 + 16))(v18, a2, v14);
  MEMORY[0x1E4E764E0](v18);
  sub_1E3C25E64(a4, v36);
  uint64_t v38 = a1;
  uint64_t v20 = v37;
  sub_1E3E7BA80();
  if (v20)
  {
    uint64_t v36 = v14;
    uint64_t v37 = a2;
    swift_bridgeObjectRelease();
    id v39 = v20;
    id v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v22 = v35;
    if (swift_dynamicCast())
    {

      uint64_t v23 = v33;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v34, v13, v22);
      uint64_t v24 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v26 = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1E3E86660;
      *(void *)(v27 + 32) = swift_allocError();
      uint64_t v28 = v34;
      (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v29, v34, v22);
      *uint64_t v26 = v19;
      v26[1] = v27;
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, *MEMORY[0x1E4F717E0], v24);
      swift_willThrow();
      (*(void (**)(void *, void (*)(uint64_t)))(v15 + 8))(v37, v36);
      uint64_t v30 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v38, v30);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
    }
    else
    {
      (*(void (**)(void *, void (*)(uint64_t)))(v15 + 8))(v37, v36);
      uint64_t v32 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v38, v32);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(void *, void (*)(uint64_t)))(v15 + 8))(a2, v14);
    uint64_t v31 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v38, v31);
  }
}

void sub_1E3C23378(uint64_t a1, void *a2)
{
}

void *sub_1E3C233D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)sub_1E3E7DE20();
  uint64_t v29 = *(v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v30 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = sub_1E3E7BBC0();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x1F4188790](v10);
  double v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a2, v10, v12);
  MEMORY[0x1E4E764E0](v14);
  sub_1E3C25CC0();
  sub_1E3E7BA80();
  if (v2)
  {
    uint64_t v27 = a2;
    uint64_t v28 = a1;
    swift_bridgeObjectRelease();
    id v31 = v2;
    id v15 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    if (swift_dynamicCast())
    {

      uint64_t v16 = v29;
      (*(void (**)(char *, char *, void *))(v29 + 32))(v30, v9, v5);
      uint64_t v17 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1E3E86660;
      *(void *)(v20 + 32) = swift_allocError();
      id v21 = v30;
      (*(void (**)(uint64_t, char *, void *))(v16 + 16))(v22, v30, v5);
      *uint64_t v19 = &type metadata for LazyDate;
      v19[1] = v20;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4F717E0], v17);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v27, v10);
      uint64_t v23 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v28, v23);
      (*(void (**)(char *, void *))(v16 + 8))(v21, v5);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v27, v10);
      uint64_t v25 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v28, v25);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v31;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    uint64_t v24 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
  }
  return v5;
}

uint64_t sub_1E3C23838(uint64_t a1, uint64_t a2)
{
  return sub_1E3C20544(a1, a2, (void (*)(void))sub_1E3C25C6C, MEMORY[0x1E4F915D0]);
}

void *sub_1E3C2386C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)sub_1E3E7DE20();
  uint64_t v29 = *(v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v30 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = sub_1E3E7BBC0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MTPodcastEpisodeLimit(0);
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  MEMORY[0x1E4E764E0](v13);
  sub_1E3C25E64(&qword_1EBFE4B10, type metadata accessor for MTPodcastEpisodeLimit);
  sub_1E3E7BA80();
  if (v2)
  {
    uint64_t v27 = a2;
    uint64_t v28 = a1;
    swift_bridgeObjectRelease();
    id v31 = v2;
    id v16 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    if (swift_dynamicCast())
    {

      uint64_t v17 = v29;
      (*(void (**)(char *, char *, void *))(v29 + 32))(v30, v9, v5);
      uint64_t v18 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v20 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1E3E86660;
      *(void *)(v21 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, void *))(v17 + 16))(v22, v30, v5);
      *uint64_t v20 = v15;
      v20[1] = v21;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x1E4F717E0], v18);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v27, v10);
      uint64_t v23 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v28, v23);
      (*(void (**)(char *, void *))(v17 + 8))(v30, v5);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v27, v10);
      uint64_t v25 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v28, v25);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v31;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    uint64_t v24 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
  }
  return v5;
}

uint64_t sub_1E3C23CFC(uint64_t a1, uint64_t a2)
{
  return sub_1E3C20544(a1, a2, (void (*)(void))sub_1E3C25C18, (uint64_t)&type metadata for EpisodeLimitSuggestion.DisplayCondition);
}

void sub_1E3C23D30(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1E3E7DE20();
  uint64_t v35 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v32 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = sub_1E3E7BBC0();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, a2, v12, v14);
  MEMORY[0x1E4E764E0](v16);
  sub_1E3C25BC4();
  sub_1E3E7BA80();
  if (v3)
  {
    uint64_t v30 = a1;
    uint64_t v31 = a2;
    swift_bridgeObjectRelease();
    id v33 = v3;
    id v17 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    if (swift_dynamicCast())
    {

      uint64_t v18 = v35;
      uint64_t v19 = v32;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v11, v7);
      uint64_t v20 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v22 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2928);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1E3E86660;
      *(void *)(v23 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v24, v19, v7);
      *uint64_t v22 = &type metadata for EpisodeLimitSuggestion;
      v22[1] = v23;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4F717E0], v20);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v31, v12);
      uint64_t v25 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v30, v25);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v7);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v31, v12);
      uint64_t v28 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v30, v28);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
    uint64_t v26 = sub_1E3E7BAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(a1, v26);
    char v27 = v34;
    *(void *)a3 = v33;
    *(unsigned char *)(a3 + 8) = v27;
  }
}

uint64_t sub_1E3C241A4(uint64_t a1, uint64_t a2)
{
  return sub_1E3C20544(a1, a2, (void (*)(void))sub_1E3C25B70, MEMORY[0x1E4F915C0]);
}

uint64_t SearchAction.origin.getter()
{
  return *v0;
}

uint64_t SearchAction.term.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchAction.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchAction() + 24);

  return sub_1E3C242A0(v3, a1);
}

uint64_t type metadata accessor for SearchAction()
{
  uint64_t result = qword_1EBFE5490;
  if (!qword_1EBFE5490) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3C242A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SearchAction.hintIndex.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SearchAction() + 28));
}

uint64_t SearchAction.hintIndex.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for SearchAction();
  uint64_t v6 = v2 + *(int *)(result + 28);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SearchAction.hintIndex.modify())()
{
  return nullsub_1;
}

uint64_t SearchAction.activatesSearchBar.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SearchAction() + 32));
}

uint64_t SearchAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchAction() + 36);
  uint64_t v4 = sub_1E3E7BD30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SearchAction.init(origin:term:url:hintIndex:activatesSearchBar:actionMetrics:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  id v17 = (int *)type metadata accessor for SearchAction();
  uint64_t v18 = a9 + v17[7];
  *(unsigned char *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  sub_1E3C24558(a4, a9 + v17[6]);
  *(void *)uint64_t v18 = a5;
  *(unsigned char *)(v18 + 8) = a6 & 1;
  *(unsigned char *)(a9 + v17[8]) = a7;
  uint64_t v19 = a9 + v17[9];
  uint64_t v20 = sub_1E3E7BD30();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);

  return v21(v19, a8, v20);
}

uint64_t sub_1E3C24558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C245C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_1E3E7BD30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t SearchAction.with(hintIndex:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_1E3C24688(v3, a3);
  uint64_t result = type metadata accessor for SearchAction();
  uint64_t v8 = a3 + *(int *)(result + 28);
  *(void *)uint64_t v8 = a1;
  *(unsigned char *)(v8 + 8) = a2 & 1;
  return result;
}

uint64_t sub_1E3C24688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SearchAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v57 = a3;
  uint64_t v5 = sub_1E3E7BD30();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  MEMORY[0x1F4188790](v5);
  v60 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v61 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E7BBC0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  double v14 = (char *)&v47 - v13;
  uint64_t v62 = sub_1E3E7BAD0();
  uint64_t v65 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v58 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v47 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v47 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v47 - v23;
  uint64_t v64 = a1;
  sub_1E3E7BAE0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v25(v14, a2, v9);
  uint64_t v26 = v63;
  int v27 = sub_1E3C20544((uint64_t)v24, (uint64_t)v14, (void (*)(void))sub_1E3C25F00, (uint64_t)&type metadata for SearchOrigin);
  if (v26)
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v64, v62);
  }
  else
  {
    uint64_t v51 = v25;
    int v49 = v27;
    uint64_t v53 = v10;
    uint64_t v54 = v9;
    uint64_t v63 = a2;
    sub_1E3E7BAE0();
    uint64_t v29 = sub_1E3E7BAA0();
    uint64_t v31 = v30;
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    uint64_t v33 = v62;
    v65 += 8;
    uint64_t v52 = v32;
    v32((uint64_t)v21, v62);
    if (v31)
    {
      uint64_t v48 = v29;
      uint64_t v50 = v31;
      sub_1E3E7BAE0();
      sub_1E3E7BA70();
      char v34 = v18;
      uint64_t v35 = v52;
      v52((uint64_t)v34, v33);
      sub_1E3E7BAE0();
      uint64_t v36 = v63;
      uint64_t v37 = v54;
      v51(v59, v63, v54);
      uint64_t v38 = v60;
      sub_1E3E7BD00();
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v36, v37);
      v35(v64, v33);
      uint64_t v43 = (int *)type metadata accessor for SearchAction();
      char v44 = v57;
      uint64_t v45 = &v57[v43[7]];
      *uint64_t v57 = v49;
      uint64_t v46 = v50;
      *((void *)v44 + 1) = v48;
      *((void *)v44 + 2) = v46;
      sub_1E3C24558(v61, (uint64_t)&v44[v43[6]]);
      *(void *)uint64_t v45 = 0;
      v45[8] = 1;
      v44[v43[8]] = 0;
      return (*(uint64_t (**)(unsigned char *, char *, uint64_t))(v55 + 32))(&v44[v43[9]], v38, v56);
    }
    else
    {
      uint64_t v39 = sub_1E3E7CAC0();
      sub_1E3C25E64((unint64_t *)&qword_1EBFE2698, MEMORY[0x1E4F717F0]);
      swift_allocError();
      uint64_t v41 = v40;
      uint64_t v42 = type metadata accessor for SearchAction();
      *uint64_t v41 = 1836213620;
      v41[1] = 0xE400000000000000;
      v41[2] = v42;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v39 - 8) + 104))(v41, *MEMORY[0x1E4F717D8], v39);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v63, v54);
      return ((uint64_t (*)(uint64_t, uint64_t))v52)(v64, v33);
    }
  }
}

uint64_t sub_1E3C24D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return SearchAction.init(deserializing:using:)(a1, a2, a3);
}

void *initializeBufferWithCopyOfBuffer for SearchAction(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1E3E77D00();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (char *)v4 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(void *)uint64_t v18 = *(void *)v19;
    char v20 = *((unsigned char *)a2 + v17);
    v18[8] = v19[8];
    *((unsigned char *)v4 + v17) = v20;
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_1E3E7BD30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return v4;
}

uint64_t destroy for SearchAction(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1E3E77D00();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  uint64_t v8 = sub_1E3E7BD30();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for SearchAction(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1E3E77D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  char v18 = *(unsigned char *)(a2 + v15);
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  *(unsigned char *)(a1 + v15) = v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for SearchAction(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1E3E77D00();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  *(unsigned char *)(v16 + 8) = *((unsigned char *)v17 + 8);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for SearchAction(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1E3E77D00();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  char v16 = *(unsigned char *)(a2 + v13);
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  *(unsigned char *)(a1 + v13) = v16;
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for SearchAction(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1E3E77D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  char v20 = *(unsigned char *)(a2 + v17);
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(unsigned char *)(a1 + v17) = v20;
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C257B4);
}

uint64_t sub_1E3C257B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1E3E7BD30();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SearchAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C258F8);
}

uint64_t sub_1E3C258F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1E3E7BD30();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1E3C25A28()
{
  sub_1E3C25B18();
  if (v0 <= 0x3F)
  {
    sub_1E3E7BD30();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1E3C25B18()
{
  if (!qword_1EBFE0808)
  {
    sub_1E3E77D00();
    unint64_t v0 = sub_1E3E7DB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE0808);
    }
  }
}

unint64_t sub_1E3C25B70()
{
  unint64_t result = qword_1EAE24E90;
  if (!qword_1EAE24E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24E90);
  }
  return result;
}

unint64_t sub_1E3C25BC4()
{
  unint64_t result = qword_1EBFE3888;
  if (!qword_1EBFE3888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE3888);
  }
  return result;
}

unint64_t sub_1E3C25C18()
{
  unint64_t result = qword_1EBFE3880;
  if (!qword_1EBFE3880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE3880);
  }
  return result;
}

unint64_t sub_1E3C25C6C()
{
  unint64_t result = qword_1EBFE02E0;
  if (!qword_1EBFE02E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE02E0);
  }
  return result;
}

unint64_t sub_1E3C25CC0()
{
  unint64_t result = qword_1EBFE02D8;
  if (!qword_1EBFE02D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE02D8);
  }
  return result;
}

unint64_t sub_1E3C25D14()
{
  unint64_t result = qword_1EAE24EA8;
  if (!qword_1EAE24EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24EA8);
  }
  return result;
}

unint64_t sub_1E3C25D68()
{
  unint64_t result = qword_1EBFE5870;
  if (!qword_1EBFE5870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE5870);
  }
  return result;
}

unint64_t sub_1E3C25DBC()
{
  unint64_t result = qword_1EAE24EB8;
  if (!qword_1EAE24EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24EB8);
  }
  return result;
}

unint64_t sub_1E3C25E10()
{
  unint64_t result = qword_1EAE24EC0;
  if (!qword_1EAE24EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24EC0);
  }
  return result;
}

uint64_t sub_1E3C25E64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3C25EAC()
{
  unint64_t result = qword_1EBFE2150;
  if (!qword_1EBFE2150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE2150);
  }
  return result;
}

unint64_t sub_1E3C25F00()
{
  unint64_t result = qword_1EBFE54A8;
  if (!qword_1EBFE54A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE54A8);
  }
  return result;
}

unint64_t sub_1E3C25F54()
{
  unint64_t result = qword_1EBFE20E8;
  if (!qword_1EBFE20E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE20E8);
  }
  return result;
}

unint64_t sub_1E3C25FA8()
{
  unint64_t result = qword_1EBFE4460;
  if (!qword_1EBFE4460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE4460);
  }
  return result;
}

unint64_t sub_1E3C25FFC()
{
  unint64_t result = qword_1EBFE2100;
  if (!qword_1EBFE2100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE2100);
  }
  return result;
}

unint64_t sub_1E3C26050()
{
  unint64_t result = qword_1EAE24ED0;
  if (!qword_1EAE24ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE24ED0);
  }
  return result;
}

unint64_t sub_1E3C260A4()
{
  unint64_t result = qword_1EBFE20E0;
  if (!qword_1EBFE20E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE20E0);
  }
  return result;
}

uint64_t RemoveAbandonedDownloadsAction.init(episodeIDs:actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  unint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for RemoveAbandonedDownloadsAction() + 20);
  uint64_t v5 = sub_1E3E7BD30();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t type metadata accessor for RemoveAbandonedDownloadsAction()
{
  uint64_t result = qword_1EAE24ED8;
  if (!qword_1EAE24ED8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RemoveAbandonedDownloadsAction.episodeIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoveAbandonedDownloadsAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RemoveAbandonedDownloadsAction() + 20);
  uint64_t v4 = sub_1E3E7BD30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t getEnumTagSinglePayload for RemoveAbandonedDownloadsAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C26258);
}

uint64_t sub_1E3C26258(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1E3E7BD30();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RemoveAbandonedDownloadsAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C2631C);
}

void *sub_1E3C2631C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1E3E7BD30();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t DownloadEpisodesAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1E3E7BD30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t DownloadEpisodesAction.actionMetrics.setter(uint64_t a1)
{
  uint64_t v3 = sub_1E3E7BD30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*DownloadEpisodesAction.actionMetrics.modify())()
{
  return nullsub_1;
}

uint64_t DownloadEpisodesAction.episodeIDs.getter()
{
  type metadata accessor for DownloadEpisodesAction();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for DownloadEpisodesAction()
{
  uint64_t result = qword_1EAE24EE8;
  if (!qword_1EAE24EE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DownloadEpisodesAction.intent.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for DownloadEpisodesAction() + 20));

  return swift_bridgeObjectRetain();
}

uint64_t DownloadEpisodesAction.init(actionMetrics:episodeIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1E3E7BD10();
  *(void *)(a3 + *(int *)(type metadata accessor for DownloadEpisodesAction() + 20)) = a2;
  uint64_t v6 = sub_1E3E7BD30();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);

  return v7(a3, a1, v6);
}

unint64_t sub_1E3C26608()
{
  unint64_t result = qword_1EBFE3858;
  if (!qword_1EBFE3858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE3858);
  }
  return result;
}

uint64_t sub_1E3C2665C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(v2 + *(int *)(a1 + 20));
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadEpisodesAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v7 = sub_1E3E7BD30();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DownloadEpisodesAction(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DownloadEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DownloadEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DownloadEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DownloadEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C269D0);
}

uint64_t sub_1E3C269D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DownloadEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C26AA4);
}

uint64_t sub_1E3C26AA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1E3E7BD30();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1E3C26B60()
{
  uint64_t result = sub_1E3E7BD30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OpenAppLocationAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1E3E7BD30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t OpenAppLocationAction.location.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for OpenAppLocationAction() + 20));
}

uint64_t type metadata accessor for OpenAppLocationAction()
{
  uint64_t result = qword_1EAE24EF8;
  if (!qword_1EAE24EF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t OpenAppLocationAction.init(actionMetrics:location:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for OpenAppLocationAction();
  *(unsigned char *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

void *initializeBufferWithCopyOfBuffer for OpenAppLocationAction(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v7 = sub_1E3E7BD30();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for OpenAppLocationAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for OpenAppLocationAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for OpenAppLocationAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for OpenAppLocationAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenAppLocationAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C2701C);
}

uint64_t sub_1E3C2701C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xC) {
      return v10 - 11;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for OpenAppLocationAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C270EC);
}

uint64_t sub_1E3C270EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1E3E7BD30();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 11;
  }
  return result;
}

uint64_t sub_1E3C271A8()
{
  uint64_t result = sub_1E3E7BD30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OpenStoreURLAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1E3E7BD30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t OpenStoreURLAction.shareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for OpenStoreURLAction() + 20);
  uint64_t v4 = sub_1E3E77D00();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for OpenStoreURLAction()
{
  uint64_t result = qword_1EAE24F08;
  if (!qword_1EAE24F08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t OpenStoreURLAction.init(actionMetrics:shareURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for OpenStoreURLAction() + 20);
  uint64_t v8 = sub_1E3E77D00();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

uint64_t *initializeBufferWithCopyOfBuffer for OpenStoreURLAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v7 = sub_1E3E7BD30();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unsigned int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1E3E77D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for OpenStoreURLAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1E3E77D00();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for OpenStoreURLAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for OpenStoreURLAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for OpenStoreURLAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for OpenStoreURLAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenStoreURLAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C278D0);
}

uint64_t sub_1E3C278D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1E3E77D00();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for OpenStoreURLAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C279DC);
}

uint64_t sub_1E3C279DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1E3E7BD30();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1E3E77D00();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1E3C27AE0()
{
  uint64_t result = sub_1E3E7BD30();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1E3E77D00();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t AcceptEpisodeLimitRecommendationAction.init(recommendation:confirmationAction:actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1E3C1E800(a1, a4);
  uint64_t v7 = type metadata accessor for AcceptEpisodeLimitRecommendationAction();
  sub_1E3C27C98(a2, a4 + *(int *)(v7 + 20));
  uint64_t v8 = a4 + *(int *)(v7 + 24);
  uint64_t v9 = sub_1E3E7BD30();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);

  return v10(v8, a3, v9);
}

uint64_t type metadata accessor for AcceptEpisodeLimitRecommendationAction()
{
  uint64_t result = qword_1EAE24F18;
  if (!qword_1EAE24F18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3C27C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t AcceptEpisodeLimitRecommendationAction.recommendation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C1E8BC(v1, a1);
}

uint64_t AcceptEpisodeLimitRecommendationAction.confirmationAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AcceptEpisodeLimitRecommendationAction() + 20);

  return sub_1E3C1B5DC(v3, a1);
}

uint64_t AcceptEpisodeLimitRecommendationAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AcceptEpisodeLimitRecommendationAction() + 24);
  uint64_t v4 = sub_1E3E7BD30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1E3C27DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_1E3E7BD30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t *initializeBufferWithCopyOfBuffer for AcceptEpisodeLimitRecommendationAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = (int *)type metadata accessor for EpisodeLimitRecommendation();
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1E3E78A70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)v4 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
    uint64_t v12 = v7[7];
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1E3E799C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = v7[8];
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v7[9];
    uint64_t v21 = (uint64_t *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = *(int *)(a3 + 20);
    uint64_t v25 = (char *)v4 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = *(uint64_t *)((char *)a2 + v24 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27)
    {
      uint64_t v28 = *((void *)v26 + 4);
      *((void *)v25 + 3) = v27;
      *((void *)v25 + 4) = v28;
      (**(void (***)(char *, char *, uint64_t))(v27 - 8))(v25, v26, v27);
    }
    else
    {
      long long v30 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v30;
      *((void *)v25 + 4) = *((void *)v26 + 4);
    }
    uint64_t v31 = *(int *)(a3 + 24);
    uint64_t v32 = (char *)v4 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = sub_1E3E7BD30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return v4;
}

uint64_t destroy for AcceptEpisodeLimitRecommendationAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_1E3E78A70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 28);
  uint64_t v8 = sub_1E3E799C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  if (*(void *)(v9 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v9);
  }
  uint64_t v10 = a1 + *(int *)(a2 + 24);
  uint64_t v11 = sub_1E3E7BD30();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);

  return v12(v10, v11);
}

void *initializeWithCopy for AcceptEpisodeLimitRecommendationAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1E3E78A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1E3E799C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = v6[9];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)((char *)a2 + v23 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26)
  {
    uint64_t v27 = *((void *)v25 + 4);
    *((void *)v24 + 3) = v26;
    *((void *)v24 + 4) = v27;
    (**(void (***)(char *, char *, uint64_t))(v26 - 8))(v24, v25, v26);
  }
  else
  {
    long long v28 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v28;
    *((void *)v24 + 4) = *((void *)v25 + 4);
  }
  uint64_t v29 = *(int *)(a3 + 24);
  long long v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_1E3E7BD30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

void *assignWithCopy for AcceptEpisodeLimitRecommendationAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1E3E78A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1E3E799C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v6[9];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = (uint64_t)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)((char *)a2 + v21 + 24);
  if (!*(void *)((char *)a1 + v21 + 24))
  {
    if (v24)
    {
      *(void *)(v22 + 24) = v24;
      *(void *)(v22 + 32) = *((void *)v23 + 4);
      (**(void (***)(uint64_t, char *))(v24 - 8))(v22, v23);
      goto LABEL_8;
    }
LABEL_7:
    long long v25 = *(_OWORD *)v23;
    long long v26 = *((_OWORD *)v23 + 1);
    *(void *)(v22 + 32) = *((void *)v23 + 4);
    *(_OWORD *)uint64_t v22 = v25;
    *(_OWORD *)(v22 + 16) = v26;
    goto LABEL_8;
  }
  if (!v24)
  {
    __swift_destroy_boxed_opaque_existential_0(v22);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v22, (uint64_t *)v23);
LABEL_8:
  uint64_t v27 = *(int *)(a3 + 24);
  long long v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_1E3E7BD30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        sub_1E3E775E0();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          sub_1E3E775E0();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          sub_1E3E775E0();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

void *initializeWithTake for AcceptEpisodeLimitRecommendationAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  int v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1E3E78A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1E3E799C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  *((void *)v17 + 4) = *((void *)v18 + 4);
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  uint64_t v20 = (char *)a1 + v16;
  uint64_t v21 = (char *)a2 + v16;
  uint64_t v22 = sub_1E3E7BD30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

void *assignWithTake for AcceptEpisodeLimitRecommendationAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  int v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1E3E78A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1E3E799C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = v6[9];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(int *)(a3 + 20);
  long long v26 = (char *)a1 + v25;
  if (*(void *)((char *)a1 + v25 + 24)) {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + v25);
  }
  long long v27 = *(_OWORD *)((char *)a2 + v25 + 16);
  *(_OWORD *)long long v26 = *(_OWORD *)((char *)a2 + v25);
  *((_OWORD *)v26 + 1) = v27;
  *((void *)v26 + 4) = *(void *)((char *)a2 + v25 + 32);
  uint64_t v28 = *(int *)(a3 + 24);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_1E3E7BD30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  return a1;
}

uint64_t getEnumTagSinglePayload for AcceptEpisodeLimitRecommendationAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C28ABC);
}

uint64_t sub_1E3C28ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_1E3E7BD30();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for AcceptEpisodeLimitRecommendationAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C28C0C);
}

uint64_t sub_1E3C28C0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = a2;
  }
  else
  {
    uint64_t v11 = sub_1E3E7BD30();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1E3C28D3C()
{
  uint64_t result = type metadata accessor for EpisodeLimitRecommendation();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1E3E7BD30();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t IntentDelegatingActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1E3C2938C(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_1E3C28E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a5;
  v7[7] = a7;
  v7[4] = a3;
  v7[5] = a4;
  v7[2] = a1;
  v7[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[8] = AssociatedTypeWitness;
  v7[9] = *(void *)(AssociatedTypeWitness - 8);
  v7[10] = swift_task_alloc();
  v7[11] = swift_getAssociatedConformanceWitness();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  v7[12] = v9;
  v7[13] = *(void *)(v9 - 8);
  v7[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C28FB0, 0, 0);
}

uint64_t sub_1E3C28FB0()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 24), *(void *)(*(void *)(v0 + 24) + 24));
  (*(void (**)(uint64_t, uint64_t))(v1 + 24))(v2, v1);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1E3C290B4;
  uint64_t v4 = *(void *)(v0 + 112);
  return MEMORY[0x1F41281F8](v4);
}

uint64_t sub_1E3C290B4()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(*(void *)v1 + 72);
  uint64_t v5 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
  {
    uint64_t v6 = sub_1E3C2930C;
  }
  else
  {
    (*(void (**)(void, void))(v2[13] + 8))(v2[14], v2[12]);
    uint64_t v6 = sub_1E3C29244;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1E3C29244()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *MEMORY[0x1E4F711E8];
  uint64_t v3 = sub_1E3E7BD40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(v1, v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1E3C2930C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C2937C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1E3C2938C(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_1E3C2938C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a3 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  sub_1E3E7BE20();
  sub_1E3C1B2BC((uint64_t)v23, (uint64_t)v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = a3;
  *((void *)v17 + 3) = a4;
  *((void *)v17 + 4) = a5;
  sub_1E3C1B644(v22, (uint64_t)(v17 + 40));
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v17[v16], (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(void *)&v17[(v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24FB8);
  sub_1E3E775E0();
  uint64_t v18 = sub_1E3E7CA10();
  uint64_t v19 = sub_1E3E7D1E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = &unk_1EAE24FB0;
  v20[5] = v17;
  v20[6] = v18;
  sub_1E3E775E0();
  sub_1E3C8B220((uint64_t)v12, (uint64_t)&unk_1EAE24FC0, (uint64_t)v20);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  return v18;
}

uint64_t sub_1E3C29610(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t dispatch thunk of IntentDelegating.intent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1E3C2962C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t type metadata accessor for IntentDelegatingActionImplementation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1E3C2964C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C2972C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v8 = (uint64_t)(v1 + 5);
  uint64_t v9 = (uint64_t)v1 + v7;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1E3C19DC4;
  return sub_1E3C28E20(a1, v8, v9, v10, v4, v5, v6);
}

uint64_t sub_1E3C29860()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C298A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1E3C19DC4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EAE26308
                                                                                   + dword_1EAE26308);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t IgnorePurgedEpisodesAction.init(episodeIDs:actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for IgnorePurgedEpisodesAction() + 20);
  uint64_t v5 = sub_1E3E7BD30();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t type metadata accessor for IgnorePurgedEpisodesAction()
{
  uint64_t result = qword_1EAE24FC8;
  if (!qword_1EAE24FC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t IgnorePurgedEpisodesAction.episodeIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IgnorePurgedEpisodesAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for IgnorePurgedEpisodesAction() + 20);
  uint64_t v4 = sub_1E3E7BD30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t getEnumTagSinglePayload for IgnorePurgedEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C29AE4);
}

uint64_t sub_1E3C29AE4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1E3E7BD30();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for IgnorePurgedEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C29BA8);
}

void *sub_1E3C29BA8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1E3E7BD30();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t UpdateEpisodeDownloadBehaviorAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1E3E7BD30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t UpdateEpisodeDownloadBehaviorAction.contentIDs.getter()
{
  type metadata accessor for UpdateEpisodeDownloadBehaviorAction();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UpdateEpisodeDownloadBehaviorAction()
{
  uint64_t result = qword_1EAE24FD8;
  if (!qword_1EAE24FD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t UpdateEpisodeDownloadBehaviorAction.newBehavior.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for UpdateEpisodeDownloadBehaviorAction() + 24));
}

uint64_t UpdateEpisodeDownloadBehaviorAction.intent.getter@<X0>(void *a1@<X8>)
{
  uint64_t updated = type metadata accessor for UpdateEpisodeDownloadBehaviorAction();
  uint64_t v4 = *(void *)(v1 + *(int *)(updated + 24));
  *a1 = *(void *)(v1 + *(int *)(updated + 20));
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t UpdateEpisodeDownloadBehaviorAction.init(actionMetrics:contentIDs:newBehavior:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for UpdateEpisodeDownloadBehaviorAction();
  *(void *)(a4 + *(int *)(result + 20)) = a2;
  *(void *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t sub_1E3C29E2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3C29E48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + *(int *)(a1 + 24));
  *a2 = *(void *)(v2 + *(int *)(a1 + 20));
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for UpdateEpisodeDownloadBehaviorAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v7 = sub_1E3E7BD30();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for UpdateEpisodeDownloadBehaviorAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UpdateEpisodeDownloadBehaviorAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for UpdateEpisodeDownloadBehaviorAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for UpdateEpisodeDownloadBehaviorAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateEpisodeDownloadBehaviorAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C2A17C);
}

uint64_t sub_1E3C2A17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BD30();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for UpdateEpisodeDownloadBehaviorAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C2A250);
}

uint64_t sub_1E3C2A250(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1E3E7BD30();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1E3C2A30C()
{
  uint64_t result = sub_1E3E7BD30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1E3C2A3B8()
{
  unint64_t result = qword_1EBFE3D60;
  if (!qword_1EBFE3D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE3D60);
  }
  return result;
}

uint64_t IgnoreAbandonedDownloadsAction.init(episodeIDs:actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for IgnoreAbandonedDownloadsAction() + 20);
  uint64_t v5 = sub_1E3E7BD30();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t type metadata accessor for IgnoreAbandonedDownloadsAction()
{
  uint64_t result = qword_1EAE24FE8;
  if (!qword_1EAE24FE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t IgnoreAbandonedDownloadsAction.episodeIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IgnoreAbandonedDownloadsAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for IgnoreAbandonedDownloadsAction() + 20);
  uint64_t v4 = sub_1E3E7BD30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t getEnumTagSinglePayload for IgnoreAbandonedDownloadsAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C2A56C);
}

uint64_t sub_1E3C2A56C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1E3E7BD30();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for IgnoreAbandonedDownloadsAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C2A630);
}

void *sub_1E3C2A630(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1E3E7BD30();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1E3C2A6D8(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void **)(v2 + 16);
  sub_1E3C2ABC0(a1, (uint64_t)v15);
  uint64_t v6 = v16;
  if (v16)
  {
    uint64_t v7 = __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v8 = *(void *)(v6 - 8);
    double v9 = MEMORY[0x1F4188790](v7);
    uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    uint64_t v12 = sub_1E3E7E140();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  }
  else
  {
    uint64_t v12 = 0;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1E3E7BEE0();
  uint64_t v13 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setObject_forKey_, v12, v13);
  swift_unknownObjectRelease();

  sub_1E3C2AC28(a1);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
}

uint64_t sub_1E3C2A870()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UserPreferences()
{
  return self;
}

double sub_1E3C2A8CC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = *(void **)(v2 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3E7BEE0();
  uint64_t v5 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_objectForKey_, v5);

  if (v6)
  {
    sub_1E3E7DCA0();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

void (*sub_1E3C2A998(void *a1, void *a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = (char *)malloc(0x98uLL);
  *a1 = v5;
  id v6 = v5 + 80;
  *((void *)v5 + 18) = v2;
  sub_1E3C1B2BC((uint64_t)a2, (uint64_t)v5);
  uint64_t v7 = *(void **)(v2 + 16);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1E3E7BEE0();
  uint64_t v8 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_objectForKey_, v8);

  if (v9)
  {
    sub_1E3E7DCA0();
    swift_unknownObjectRelease();
  }
  else
  {
    *id v6 = 0u;
    v6[1] = 0u;
  }
  return sub_1E3C2AA90;
}

void sub_1E3C2AA90(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a1 + 80;
  if (a2)
  {
    sub_1E3C2ABC0(*a1 + 80, v2 + 112);
    sub_1E3C1B644((long long *)v2, v2 + 40);
    sub_1E3C2A6D8(v2 + 112, (void *)(v2 + 40));
    sub_1E3C2AC28(v3);
  }
  else
  {
    sub_1E3C2A6D8(*a1 + 80, (void *)v2);
  }

  free((void *)v2);
}

void sub_1E3C2AB28(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3E7BEE0();
  id v3 = (id)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_removeObjectForKey_, v3);
}

id sub_1E3C2ABB0()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_synchronize);
}

uint64_t sub_1E3C2ABC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C2AC28(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6190);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t static PlayEpisodeIntent.kind.getter()
{
  return 0xD000000000000011;
}

uint64_t PlayEpisodeIntent.episode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C2ACB0(v1, a1);
}

uint64_t sub_1E3C2ACB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PlayEpisodeIntent.init(episode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3C2AD1C(a1, a2);
}

uint64_t sub_1E3C2AD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1E3C2AD80(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001E3E87460;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlayEpisodeIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for EpisodeEntity(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v8 = (void *)a2[2];
    uint64_t v7 = a2[3];
    a1[2] = (uint64_t)v8;
    a1[3] = v7;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    uint64_t v73 = a2[11];
    a1[10] = a2[10];
    a1[11] = v73;
    uint64_t v12 = a2[13];
    a1[12] = a2[12];
    a1[13] = v12;
    uint64_t v13 = a2[15];
    a1[14] = a2[14];
    a1[15] = v13;
    uint64_t v14 = a2[17];
    a1[16] = a2[16];
    a1[17] = v14;
    uint64_t v76 = (int *)v4;
    uint64_t v15 = *(int *)(v4 + 80);
    __dst = (char *)a1 + v15;
    os_log_type_t v72 = (char *)a2 + v15;
    uint64_t v16 = sub_1E3E7A2E0();
    uint64_t v71 = *(void *)(v16 - 8);
    int v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
    uint64_t v17 = v16;
    swift_bridgeObjectRetain();
    id v18 = v8;
    swift_bridgeObjectRetain();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    if (v74(v72, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
      memcpy(__dst, v72, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(__dst, v72, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v21 = v76[21];
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = (int *)sub_1E3E78740();
    uint64_t v25 = *((void *)v24 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      uint64_t v27 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v27;
      int v28 = *((unsigned __int8 *)v23 + 32);
      swift_bridgeObjectRetain();
      if (v28 == 255)
      {
        *((_OWORD *)v22 + 1) = *((_OWORD *)v23 + 1);
        *((unsigned char *)v22 + 32) = *((unsigned char *)v23 + 32);
      }
      else
      {
        uint64_t v29 = v23[2];
        uint64_t v30 = v23[3];
        sub_1E3C2B454(v29, v30, v28);
        long long v22[2] = v29;
        v22[3] = v30;
        *((unsigned char *)v22 + 32) = v28;
      }
      *(_OWORD *)(v22 + 5) = *(_OWORD *)(v23 + 5);
      uint64_t v31 = (id *)(v23 + 7);
      int v32 = *((unsigned __int8 *)v23 + 64);
      if (v32 == 255)
      {
        v22[7] = *v31;
        *((unsigned char *)v22 + 64) = *((unsigned char *)v23 + 64);
      }
      else
      {
        id v33 = *v31;
        sub_1E3C2B46C(*v31, *((unsigned char *)v23 + 64));
        v22[7] = v33;
        *((unsigned char *)v22 + 64) = v32;
      }
      uint64_t v34 = (id *)(v23 + 9);
      int v35 = *((unsigned __int8 *)v23 + 80);
      if (v35 == 255)
      {
        v22[9] = *v34;
        *((unsigned char *)v22 + 80) = *((unsigned char *)v23 + 80);
      }
      else
      {
        id v36 = *v34;
        sub_1E3C2B46C(*v34, *((unsigned char *)v23 + 80));
        v22[9] = v36;
        *((unsigned char *)v22 + 80) = v35;
      }
      uint64_t v37 = (id *)(v23 + 11);
      int v38 = *((unsigned __int8 *)v23 + 96);
      if (v38 == 255)
      {
        v22[11] = *v37;
        *((unsigned char *)v22 + 96) = *((unsigned char *)v23 + 96);
      }
      else
      {
        id v39 = *v37;
        sub_1E3C2B46C(*v37, *((unsigned char *)v23 + 96));
        v22[11] = v39;
        *((unsigned char *)v22 + 96) = v38;
      }
      char v40 = (id *)(v23 + 13);
      int v41 = *((unsigned __int8 *)v23 + 112);
      if (v41 == 255)
      {
        v22[13] = *v40;
        *((unsigned char *)v22 + 112) = *((unsigned char *)v23 + 112);
      }
      else
      {
        id v42 = *v40;
        sub_1E3C2B46C(*v40, *((unsigned char *)v23 + 112));
        v22[13] = v42;
        *((unsigned char *)v22 + 112) = v41;
      }
      uint64_t v43 = (id *)(v23 + 15);
      int v44 = *((unsigned __int8 *)v23 + 128);
      if (v44 == 255)
      {
        v22[15] = *v43;
        *((unsigned char *)v22 + 128) = *((unsigned char *)v23 + 128);
      }
      else
      {
        id v45 = *v43;
        sub_1E3C2B46C(*v43, *((unsigned char *)v23 + 128));
        v22[15] = v45;
        *((unsigned char *)v22 + 128) = v44;
      }
      *((unsigned char *)v22 + 129) = *((unsigned char *)v23 + 129);
      uint64_t v46 = v24[11];
      uint64_t v47 = (char *)v22 + v46;
      uint64_t v48 = (char *)v23 + v46;
      uint64_t v49 = sub_1E3E78630();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      uint64_t v50 = v24[12];
      uint64_t v51 = (void *)((char *)v22 + v50);
      uint64_t v52 = (void *)((char *)v23 + v50);
      uint64_t v53 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v53;
      *((unsigned char *)v22 + v24[13]) = *((unsigned char *)v23 + v24[13]);
      *((unsigned char *)v22 + v24[14]) = *((unsigned char *)v23 + v24[14]);
      *((unsigned char *)v22 + v24[15]) = *((unsigned char *)v23 + v24[15]);
      uint64_t v54 = v24[16];
      uint64_t v55 = (void *)((char *)v22 + v54);
      uint64_t v56 = (void *)((char *)v23 + v54);
      uint64_t v57 = v56[1];
      void *v55 = *v56;
      v55[1] = v57;
      uint64_t v58 = *(void (**)(void *, void, uint64_t, int *))(v25 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58(v22, 0, 1, v24);
    }
    uint64_t v59 = v76[22];
    v60 = (char *)a1 + v59;
    uint64_t v61 = (char *)a2 + v59;
    unint64_t v62 = *((void *)v61 + 1);
    if (v62 >> 60 == 15)
    {
      *(_OWORD *)v60 = *(_OWORD *)v61;
    }
    else
    {
      uint64_t v63 = *(void *)v61;
      sub_1E3C14F74(*(void *)v61, *((void *)v61 + 1));
      *(void *)v60 = v63;
      *((void *)v60 + 1) = v62;
    }
    uint64_t v64 = v76[23];
    uint64_t v65 = (char *)a1 + v64;
    char v66 = (char *)a2 + v64;
    uint64_t v67 = sub_1E3E77D00();
    uint64_t v68 = *(void *)(v67 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
    {
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
    }
  }
  return a1;
}

uint64_t sub_1E3C2B454(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

id sub_1E3C2B46C(id result, char a2)
{
  if (a2 == 1) {
    return result;
  }
  return result;
}

uint64_t destroy for PlayEpisodeIntent(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = (int *)type metadata accessor for EpisodeEntity(0);
  uint64_t v3 = a1 + v2[20];
  uint64_t v4 = sub_1E3E7A2E0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v6 = a1 + v2[21];
  uint64_t v7 = sub_1E3E78740();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    int v8 = *(unsigned __int8 *)(v6 + 32);
    if (v8 != 255) {
      sub_1E3C2B7BC(*(void *)(v6 + 16), *(void *)(v6 + 24), v8);
    }
    int v9 = *(unsigned __int8 *)(v6 + 64);
    if (v9 != 255) {
      sub_1E3C2B7D4(*(id *)(v6 + 56), v9);
    }
    int v10 = *(unsigned __int8 *)(v6 + 80);
    if (v10 != 255) {
      sub_1E3C2B7D4(*(id *)(v6 + 72), v10);
    }
    int v11 = *(unsigned __int8 *)(v6 + 96);
    if (v11 != 255) {
      sub_1E3C2B7D4(*(id *)(v6 + 88), v11);
    }
    int v12 = *(unsigned __int8 *)(v6 + 112);
    if (v12 != 255) {
      sub_1E3C2B7D4(*(id *)(v6 + 104), v12);
    }
    int v13 = *(unsigned __int8 *)(v6 + 128);
    if (v13 != 255) {
      sub_1E3C2B7D4(*(id *)(v6 + 120), v13);
    }
    uint64_t v14 = v6 + *(int *)(v7 + 44);
    uint64_t v15 = sub_1E3E78630();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = (uint64_t *)(a1 + v2[22]);
  unint64_t v17 = v16[1];
  if (v17 >> 60 != 15) {
    sub_1E3C2B7E8(*v16, v17);
  }
  uint64_t v18 = a1 + v2[23];
  uint64_t v19 = sub_1E3E77D00();
  uint64_t v22 = *(void *)(v19 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v18, 1, v19);
  if (!result)
  {
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
    return v21(v18, v19);
  }
  return result;
}

uint64_t sub_1E3C2B7BC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1E3C2B7D4(id a1, char a2)
{
  if (a2 == 1) {
}
  }

uint64_t sub_1E3C2B7E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void *initializeWithCopy for PlayEpisodeIntent(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v6 = (void *)a2[2];
  uint64_t v5 = a2[3];
  a1[2] = v6;
  a1[3] = v5;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v68 = a2[11];
  a1[10] = a2[10];
  a1[11] = v68;
  uint64_t v69 = a2[13];
  a1[12] = a2[12];
  a1[13] = v69;
  uint64_t v70 = a2[15];
  a1[14] = a2[14];
  a1[15] = v70;
  uint64_t v71 = a2[17];
  a1[16] = a2[16];
  a1[17] = v71;
  uint64_t v73 = (int *)type metadata accessor for EpisodeEntity(0);
  uint64_t v10 = v73[20];
  __dst = (char *)a1 + v10;
  int v11 = (char *)a2 + v10;
  uint64_t v12 = sub_1E3E7A2E0();
  uint64_t v66 = *(void *)(v12 - 8);
  uint64_t v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  id v14 = v6;
  swift_bridgeObjectRetain();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  if (v67(v11, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
    memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(__dst, v11, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v16 = v73[21];
  unint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = (int *)sub_1E3E78740();
  uint64_t v20 = *((void *)v19 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = v18[1];
    *unint64_t v17 = *v18;
    v17[1] = v22;
    int v23 = *((unsigned __int8 *)v18 + 32);
    swift_bridgeObjectRetain();
    if (v23 == 255)
    {
      *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
      *((unsigned char *)v17 + 32) = *((unsigned char *)v18 + 32);
    }
    else
    {
      uint64_t v24 = v18[2];
      uint64_t v25 = v18[3];
      sub_1E3C2B454(v24, v25, v23);
      v17[2] = v24;
      v17[3] = v25;
      *((unsigned char *)v17 + 32) = v23;
    }
    *(_OWORD *)(v17 + 5) = *(_OWORD *)(v18 + 5);
    uint64_t v26 = (id *)(v18 + 7);
    int v27 = *((unsigned __int8 *)v18 + 64);
    if (v27 == 255)
    {
      v17[7] = *v26;
      *((unsigned char *)v17 + 64) = *((unsigned char *)v18 + 64);
    }
    else
    {
      id v28 = *v26;
      sub_1E3C2B46C(*v26, *((unsigned char *)v18 + 64));
      v17[7] = v28;
      *((unsigned char *)v17 + 64) = v27;
    }
    uint64_t v29 = (id *)(v18 + 9);
    int v30 = *((unsigned __int8 *)v18 + 80);
    if (v30 == 255)
    {
      v17[9] = *v29;
      *((unsigned char *)v17 + 80) = *((unsigned char *)v18 + 80);
    }
    else
    {
      id v31 = *v29;
      sub_1E3C2B46C(*v29, *((unsigned char *)v18 + 80));
      v17[9] = v31;
      *((unsigned char *)v17 + 80) = v30;
    }
    int v32 = (id *)(v18 + 11);
    int v33 = *((unsigned __int8 *)v18 + 96);
    if (v33 == 255)
    {
      v17[11] = *v32;
      *((unsigned char *)v17 + 96) = *((unsigned char *)v18 + 96);
    }
    else
    {
      id v34 = *v32;
      sub_1E3C2B46C(*v32, *((unsigned char *)v18 + 96));
      v17[11] = v34;
      *((unsigned char *)v17 + 96) = v33;
    }
    int v35 = (id *)(v18 + 13);
    int v36 = *((unsigned __int8 *)v18 + 112);
    if (v36 == 255)
    {
      v17[13] = *v35;
      *((unsigned char *)v17 + 112) = *((unsigned char *)v18 + 112);
    }
    else
    {
      id v37 = *v35;
      sub_1E3C2B46C(*v35, *((unsigned char *)v18 + 112));
      v17[13] = v37;
      *((unsigned char *)v17 + 112) = v36;
    }
    int v38 = (id *)(v18 + 15);
    int v39 = *((unsigned __int8 *)v18 + 128);
    if (v39 == 255)
    {
      v17[15] = *v38;
      *((unsigned char *)v17 + 128) = *((unsigned char *)v18 + 128);
    }
    else
    {
      id v40 = *v38;
      sub_1E3C2B46C(*v38, *((unsigned char *)v18 + 128));
      v17[15] = v40;
      *((unsigned char *)v17 + 128) = v39;
    }
    *((unsigned char *)v17 + 129) = *((unsigned char *)v18 + 129);
    uint64_t v41 = v19[11];
    id v42 = (char *)v17 + v41;
    uint64_t v43 = (char *)v18 + v41;
    uint64_t v44 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    uint64_t v45 = v19[12];
    uint64_t v46 = (void *)((char *)v17 + v45);
    uint64_t v47 = (void *)((char *)v18 + v45);
    uint64_t v48 = v47[1];
    void *v46 = *v47;
    v46[1] = v48;
    *((unsigned char *)v17 + v19[13]) = *((unsigned char *)v18 + v19[13]);
    *((unsigned char *)v17 + v19[14]) = *((unsigned char *)v18 + v19[14]);
    *((unsigned char *)v17 + v19[15]) = *((unsigned char *)v18 + v19[15]);
    uint64_t v49 = v19[16];
    uint64_t v50 = (void *)((char *)v17 + v49);
    uint64_t v51 = (void *)((char *)v18 + v49);
    uint64_t v52 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v52;
    uint64_t v53 = *(void (**)(void *, void, uint64_t, int *))(v20 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53(v17, 0, 1, v19);
  }
  uint64_t v54 = v73[22];
  uint64_t v55 = (char *)a1 + v54;
  uint64_t v56 = (char *)a2 + v54;
  unint64_t v57 = *((void *)v56 + 1);
  if (v57 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  }
  else
  {
    uint64_t v58 = *(void *)v56;
    sub_1E3C14F74(*(void *)v56, *((void *)v56 + 1));
    *(void *)uint64_t v55 = v58;
    *((void *)v55 + 1) = v57;
  }
  uint64_t v59 = v73[23];
  v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  uint64_t v62 = sub_1E3E77D00();
  uint64_t v63 = *(void *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  return a1;
}

void *assignWithCopy for PlayEpisodeIntent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1E3E775E0();
  swift_release();
  a1[7] = a2[7];
  sub_1E3E775E0();
  swift_release();
  a1[8] = a2[8];
  sub_1E3E775E0();
  swift_release();
  a1[9] = a2[9];
  sub_1E3E775E0();
  swift_release();
  a1[10] = a2[10];
  sub_1E3E775E0();
  swift_release();
  a1[11] = a2[11];
  sub_1E3E775E0();
  swift_release();
  a1[12] = a2[12];
  sub_1E3E775E0();
  swift_release();
  a1[13] = a2[13];
  sub_1E3E775E0();
  swift_release();
  a1[14] = a2[14];
  sub_1E3E775E0();
  swift_release();
  a1[15] = a2[15];
  sub_1E3E775E0();
  swift_release();
  a1[16] = a2[16];
  sub_1E3E775E0();
  swift_release();
  a1[17] = a2[17];
  sub_1E3E775E0();
  swift_release();
  uint64_t v7 = (int *)type metadata accessor for EpisodeEntity(0);
  uint64_t v8 = v7[20];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1E3E7A2E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = v7[21];
  uint64_t v18 = (uint64_t)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = (int *)sub_1E3E78740();
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22((uint64_t)v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      *(void *)uint64_t v18 = *(void *)v19;
      *(void *)(v18 + 8) = *((void *)v19 + 1);
      int v25 = v19[32];
      swift_bridgeObjectRetain();
      if (v25 == 255)
      {
        long long v37 = *((_OWORD *)v19 + 1);
        *(unsigned char *)(v18 + 32) = v19[32];
        *(_OWORD *)(v18 + 16) = v37;
      }
      else
      {
        uint64_t v26 = *((void *)v19 + 2);
        uint64_t v27 = *((void *)v19 + 3);
        sub_1E3C2B454(v26, v27, v25);
        *(void *)(v18 + 16) = v26;
        *(void *)(v18 + 24) = v27;
        *(unsigned char *)(v18 + 32) = v25;
      }
      *(void *)(v18 + 40) = *((void *)v19 + 5);
      *(void *)(v18 + 48) = *((void *)v19 + 6);
      int v38 = (id *)(v19 + 56);
      int v39 = v19[64];
      if (v39 == 255)
      {
        id v41 = *v38;
        *(unsigned char *)(v18 + 64) = v19[64];
        *(void *)(v18 + 56) = v41;
      }
      else
      {
        id v40 = *v38;
        sub_1E3C2B46C(*v38, v19[64]);
        *(void *)(v18 + 56) = v40;
        *(unsigned char *)(v18 + 64) = v39;
      }
      id v42 = (id *)(v19 + 72);
      int v43 = v19[80];
      if (v43 == 255)
      {
        id v45 = *v42;
        *(unsigned char *)(v18 + 80) = v19[80];
        *(void *)(v18 + 72) = v45;
      }
      else
      {
        id v44 = *v42;
        sub_1E3C2B46C(*v42, v19[80]);
        *(void *)(v18 + 72) = v44;
        *(unsigned char *)(v18 + 80) = v43;
      }
      uint64_t v46 = (id *)(v19 + 88);
      int v47 = v19[96];
      if (v47 == 255)
      {
        id v49 = *v46;
        *(unsigned char *)(v18 + 96) = v19[96];
        *(void *)(v18 + 88) = v49;
      }
      else
      {
        id v48 = *v46;
        sub_1E3C2B46C(*v46, v19[96]);
        *(void *)(v18 + 88) = v48;
        *(unsigned char *)(v18 + 96) = v47;
      }
      uint64_t v50 = (id *)(v19 + 104);
      int v51 = v19[112];
      if (v51 == 255)
      {
        id v53 = *v50;
        *(unsigned char *)(v18 + 112) = v19[112];
        *(void *)(v18 + 104) = v53;
      }
      else
      {
        id v52 = *v50;
        sub_1E3C2B46C(*v50, v19[112]);
        *(void *)(v18 + 104) = v52;
        *(unsigned char *)(v18 + 112) = v51;
      }
      uint64_t v54 = (id *)(v19 + 120);
      int v55 = v19[128];
      if (v55 == 255)
      {
        id v57 = *v54;
        *(unsigned char *)(v18 + 128) = v19[128];
        *(void *)(v18 + 120) = v57;
      }
      else
      {
        id v56 = *v54;
        sub_1E3C2B46C(*v54, v19[128]);
        *(void *)(v18 + 120) = v56;
        *(unsigned char *)(v18 + 128) = v55;
      }
      *(unsigned char *)(v18 + 129) = v19[129];
      uint64_t v58 = v20[11];
      uint64_t v59 = v18 + v58;
      v60 = &v19[v58];
      uint64_t v61 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
      uint64_t v62 = v20[12];
      uint64_t v63 = (void *)(v18 + v62);
      uint64_t v64 = &v19[v62];
      *uint64_t v63 = *(void *)v64;
      v63[1] = *((void *)v64 + 1);
      *(unsigned char *)(v18 + v20[13]) = v19[v20[13]];
      *(unsigned char *)(v18 + v20[14]) = v19[v20[14]];
      *(unsigned char *)(v18 + v20[15]) = v19[v20[15]];
      uint64_t v65 = v20[16];
      uint64_t v66 = (void *)(v18 + v65);
      uint64_t v67 = &v19[v65];
      *uint64_t v66 = *(void *)v67;
      v66[1] = *((void *)v67 + 1);
      uint64_t v68 = *(void (**)(uint64_t, void, uint64_t, int *))(v21 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68(v18, 0, 1, v20);
      goto LABEL_75;
    }
LABEL_13:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v18, v19, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_75;
  }
  if (v24)
  {
    sub_1E3C2CBF8(v18);
    goto LABEL_13;
  }
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = *((void *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = (long long *)(v18 + 16);
  int v30 = (long long *)(v19 + 16);
  int v31 = v19[32];
  if (*(unsigned __int8 *)(v18 + 32) == 255)
  {
    if (v31 == 255)
    {
      long long v72 = *v30;
      *(unsigned char *)(v18 + 32) = v19[32];
      *uint64_t v29 = v72;
    }
    else
    {
      uint64_t v69 = *((void *)v19 + 2);
      uint64_t v70 = *((void *)v19 + 3);
      sub_1E3C2B454(v69, v70, v19[32]);
      *(void *)(v18 + 16) = v69;
      *(void *)(v18 + 24) = v70;
      *(unsigned char *)(v18 + 32) = v31;
    }
  }
  else if (v31 == 255)
  {
    sub_1E3C2CB50(v18 + 16);
    char v71 = v19[32];
    *uint64_t v29 = *v30;
    *(unsigned char *)(v18 + 32) = v71;
  }
  else
  {
    uint64_t v32 = *((void *)v19 + 2);
    uint64_t v33 = *((void *)v19 + 3);
    sub_1E3C2B454(v32, v33, v19[32]);
    uint64_t v34 = *(void *)(v18 + 16);
    uint64_t v35 = *(void *)(v18 + 24);
    *(void *)(v18 + 16) = v32;
    *(void *)(v18 + 24) = v33;
    unsigned __int8 v36 = *(unsigned char *)(v18 + 32);
    *(unsigned char *)(v18 + 32) = v31;
    sub_1E3C2B7BC(v34, v35, v36);
  }
  *(void *)(v18 + 40) = *((void *)v19 + 5);
  *(void *)(v18 + 48) = *((void *)v19 + 6);
  uint64_t v73 = (id *)(v18 + 56);
  int v74 = (id *)(v19 + 56);
  int v75 = v19[64];
  if (*(unsigned __int8 *)(v18 + 64) == 255)
  {
    if (v75 == 255)
    {
      id v81 = *v74;
      *(unsigned char *)(v18 + 64) = v19[64];
      id *v73 = v81;
    }
    else
    {
      id v79 = *v74;
      sub_1E3C2B46C(*v74, v19[64]);
      *(void *)(v18 + 56) = v79;
      *(unsigned char *)(v18 + 64) = v75;
    }
  }
  else if (v75 == 255)
  {
    sub_1E3C2CBA4(v18 + 56);
    char v80 = v19[64];
    id *v73 = *v74;
    *(unsigned char *)(v18 + 64) = v80;
  }
  else
  {
    id v76 = *v74;
    sub_1E3C2B46C(*v74, v19[64]);
    unint64_t v77 = *(void **)(v18 + 56);
    *(void *)(v18 + 56) = v76;
    char v78 = *(unsigned char *)(v18 + 64);
    *(unsigned char *)(v18 + 64) = v75;
    sub_1E3C2B7D4(v77, v78);
  }
  unint64_t v82 = (id *)(v18 + 72);
  unint64_t v83 = (id *)(v19 + 72);
  int v84 = v19[80];
  if (*(unsigned __int8 *)(v18 + 80) == 255)
  {
    if (v84 == 255)
    {
      id v90 = *v83;
      *(unsigned char *)(v18 + 80) = v19[80];
      *unint64_t v82 = v90;
    }
    else
    {
      id v88 = *v83;
      sub_1E3C2B46C(*v83, v19[80]);
      *(void *)(v18 + 72) = v88;
      *(unsigned char *)(v18 + 80) = v84;
    }
  }
  else if (v84 == 255)
  {
    sub_1E3C2CBA4(v18 + 72);
    char v89 = v19[80];
    *unint64_t v82 = *v83;
    *(unsigned char *)(v18 + 80) = v89;
  }
  else
  {
    id v85 = *v83;
    sub_1E3C2B46C(*v83, v19[80]);
    uint64_t v86 = *(void **)(v18 + 72);
    *(void *)(v18 + 72) = v85;
    char v87 = *(unsigned char *)(v18 + 80);
    *(unsigned char *)(v18 + 80) = v84;
    sub_1E3C2B7D4(v86, v87);
  }
  unint64_t v91 = (id *)(v18 + 88);
  uint64_t v92 = (id *)(v19 + 88);
  int v93 = v19[96];
  if (*(unsigned __int8 *)(v18 + 96) == 255)
  {
    if (v93 == 255)
    {
      id v99 = *v92;
      *(unsigned char *)(v18 + 96) = v19[96];
      *unint64_t v91 = v99;
    }
    else
    {
      id v97 = *v92;
      sub_1E3C2B46C(*v92, v19[96]);
      *(void *)(v18 + 88) = v97;
      *(unsigned char *)(v18 + 96) = v93;
    }
  }
  else if (v93 == 255)
  {
    sub_1E3C2CBA4(v18 + 88);
    char v98 = v19[96];
    *unint64_t v91 = *v92;
    *(unsigned char *)(v18 + 96) = v98;
  }
  else
  {
    id v94 = *v92;
    sub_1E3C2B46C(*v92, v19[96]);
    uint64_t v95 = *(void **)(v18 + 88);
    *(void *)(v18 + 88) = v94;
    char v96 = *(unsigned char *)(v18 + 96);
    *(unsigned char *)(v18 + 96) = v93;
    sub_1E3C2B7D4(v95, v96);
  }
  uint64_t v100 = (id *)(v18 + 104);
  unint64_t v101 = (id *)(v19 + 104);
  int v102 = v19[112];
  if (*(unsigned __int8 *)(v18 + 112) == 255)
  {
    if (v102 == 255)
    {
      id v108 = *v101;
      *(unsigned char *)(v18 + 112) = v19[112];
      id *v100 = v108;
    }
    else
    {
      id v106 = *v101;
      sub_1E3C2B46C(*v101, v19[112]);
      *(void *)(v18 + 104) = v106;
      *(unsigned char *)(v18 + 112) = v102;
    }
  }
  else if (v102 == 255)
  {
    sub_1E3C2CBA4(v18 + 104);
    char v107 = v19[112];
    id *v100 = *v101;
    *(unsigned char *)(v18 + 112) = v107;
  }
  else
  {
    id v103 = *v101;
    sub_1E3C2B46C(*v101, v19[112]);
    double v104 = *(void **)(v18 + 104);
    *(void *)(v18 + 104) = v103;
    char v105 = *(unsigned char *)(v18 + 112);
    *(unsigned char *)(v18 + 112) = v102;
    sub_1E3C2B7D4(v104, v105);
  }
  uint64_t v109 = (id *)(v18 + 120);
  uint64_t v110 = (id *)(v19 + 120);
  int v111 = v19[128];
  if (*(unsigned __int8 *)(v18 + 128) == 255)
  {
    if (v111 == 255)
    {
      id v117 = *v110;
      *(unsigned char *)(v18 + 128) = v19[128];
      *uint64_t v109 = v117;
    }
    else
    {
      id v115 = *v110;
      sub_1E3C2B46C(*v110, v19[128]);
      *(void *)(v18 + 120) = v115;
      *(unsigned char *)(v18 + 128) = v111;
    }
  }
  else if (v111 == 255)
  {
    sub_1E3C2CBA4(v18 + 120);
    char v116 = v19[128];
    *uint64_t v109 = *v110;
    *(unsigned char *)(v18 + 128) = v116;
  }
  else
  {
    id v112 = *v110;
    sub_1E3C2B46C(*v110, v19[128]);
    uint64_t v113 = *(void **)(v18 + 120);
    *(void *)(v18 + 120) = v112;
    char v114 = *(unsigned char *)(v18 + 128);
    *(unsigned char *)(v18 + 128) = v111;
    sub_1E3C2B7D4(v113, v114);
  }
  *(unsigned char *)(v18 + 129) = v19[129];
  uint64_t v118 = v20[11];
  uint64_t v119 = v18 + v118;
  uint64_t v120 = &v19[v118];
  uint64_t v121 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v121 - 8) + 24))(v119, v120, v121);
  uint64_t v122 = v20[12];
  uint64_t v123 = (void *)(v18 + v122);
  uint64_t v124 = &v19[v122];
  *uint64_t v123 = *(void *)v124;
  v123[1] = *((void *)v124 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + v20[13]) = v19[v20[13]];
  *(unsigned char *)(v18 + v20[14]) = v19[v20[14]];
  *(unsigned char *)(v18 + v20[15]) = v19[v20[15]];
  uint64_t v125 = v20[16];
  id v126 = (void *)(v18 + v125);
  uint64_t v127 = &v19[v125];
  *id v126 = *(void *)v127;
  v126[1] = *((void *)v127 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_75:
  uint64_t v128 = v7[22];
  uint64_t v129 = (void *)((char *)a1 + v128);
  uint64_t v130 = (void *)((char *)a2 + v128);
  unint64_t v131 = *(void *)((char *)a2 + v128 + 8);
  if (*(void *)((char *)a1 + v128 + 8) >> 60 == 15)
  {
    if (v131 >> 60 != 15)
    {
      uint64_t v132 = *v130;
      sub_1E3C14F74(v132, v131);
      *uint64_t v129 = v132;
      v129[1] = v131;
      goto LABEL_82;
    }
    goto LABEL_80;
  }
  if (v131 >> 60 == 15)
  {
    sub_1E3C2CC54((uint64_t)v129);
LABEL_80:
    *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
    goto LABEL_82;
  }
  uint64_t v133 = *v130;
  sub_1E3C14F74(v133, v131);
  uint64_t v134 = *v129;
  unint64_t v135 = v129[1];
  *uint64_t v129 = v133;
  v129[1] = v131;
  sub_1E3C2B7E8(v134, v135);
LABEL_82:
  uint64_t v136 = v7[23];
  v137 = (char *)a1 + v136;
  v138 = (char *)a2 + v136;
  uint64_t v139 = sub_1E3E77D00();
  uint64_t v140 = *(void *)(v139 - 8);
  v141 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v140 + 48);
  int v142 = v141(v137, 1, v139);
  int v143 = v141(v138, 1, v139);
  if (!v142)
  {
    if (!v143)
    {
      (*(void (**)(char *, char *, uint64_t))(v140 + 24))(v137, v138, v139);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v140 + 8))(v137, v139);
    goto LABEL_87;
  }
  if (v143)
  {
LABEL_87:
    uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v137, v138, *(void *)(*(void *)(v144 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v137, v138, v139);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
  return a1;
}

uint64_t sub_1E3C2CB50(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3C2CBA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3C2CBF8(uint64_t a1)
{
  uint64_t v2 = sub_1E3E78740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3C2CC54(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for PlayEpisodeIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  uint64_t v7 = (int *)type metadata accessor for EpisodeEntity(0);
  uint64_t v8 = v7[20];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1E3E7A2E0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = v7[21];
  int v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  uint64_t v17 = (int *)sub_1E3E78740();
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    long long v20 = v16[1];
    _OWORD *v15 = *v16;
    v15[1] = v20;
    *((unsigned char *)v15 + 32) = *((unsigned char *)v16 + 32);
    *(_OWORD *)((char *)v15 + 40) = *(_OWORD *)((char *)v16 + 40);
    *((void *)v15 + 7) = *((void *)v16 + 7);
    *((unsigned char *)v15 + 64) = *((unsigned char *)v16 + 64);
    *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
    *(_OWORD *)((char *)v15 + 104) = *(_OWORD *)((char *)v16 + 104);
    *(_OWORD *)((char *)v15 + 88) = *(_OWORD *)((char *)v16 + 88);
    *(_OWORD *)((char *)v15 + 72) = *(_OWORD *)((char *)v16 + 72);
    *((unsigned char *)v15 + 129) = *((unsigned char *)v16 + 129);
    uint64_t v21 = v17[11];
    uint64_t v22 = (char *)v15 + v21;
    int v23 = (char *)v16 + v21;
    uint64_t v24 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    *(_OWORD *)((char *)v15 + v17[12]) = *(_OWORD *)((char *)v16 + v17[12]);
    *((unsigned char *)v15 + v17[13]) = *((unsigned char *)v16 + v17[13]);
    *((unsigned char *)v15 + v17[14]) = *((unsigned char *)v16 + v17[14]);
    *((unsigned char *)v15 + v17[15]) = *((unsigned char *)v16 + v17[15]);
    *(_OWORD *)((char *)v15 + v17[16]) = *(_OWORD *)((char *)v16 + v17[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  *(_OWORD *)(a1 + v7[22]) = *(_OWORD *)(a2 + v7[22]);
  uint64_t v25 = v7[23];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (const void *)(a2 + v25);
  uint64_t v28 = sub_1E3E77D00();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  return a1;
}

void *assignWithTake for PlayEpisodeIntent(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  long long v5 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v6 = a2[4];
  a1[3] = a2[3];
  a1[4] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  a1[10] = a2[10];
  swift_release();
  a1[11] = a2[11];
  swift_release();
  a1[12] = a2[12];
  swift_release();
  a1[13] = a2[13];
  swift_release();
  a1[14] = a2[14];
  swift_release();
  a1[15] = a2[15];
  swift_release();
  a1[16] = a2[16];
  swift_release();
  a1[17] = a2[17];
  swift_release();
  uint64_t v8 = (int *)type metadata accessor for EpisodeEntity(0);
  uint64_t v9 = v8[20];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1E3E7A2E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = v8[21];
  uint64_t v19 = (uint64_t)a1 + v18;
  long long v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_1E3E78740();
  uint64_t v22 = *((void *)v21 - 1);
  int v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23((uint64_t)v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      long long v26 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *(_OWORD *)(v19 + 16) = v26;
      *(unsigned char *)(v19 + 32) = v20[32];
      *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
      *(void *)(v19 + 56) = *((void *)v20 + 7);
      *(unsigned char *)(v19 + 64) = v20[64];
      *(_OWORD *)(v19 + 113) = *(_OWORD *)(v20 + 113);
      *(_OWORD *)(v19 + 104) = *(_OWORD *)(v20 + 104);
      *(_OWORD *)(v19 + 88) = *(_OWORD *)(v20 + 88);
      *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v27 = v21[11];
      uint64_t v28 = v19 + v27;
      uint64_t v29 = &v20[v27];
      uint64_t v30 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)(v19 + v21[12]) = *(_OWORD *)&v20[v21[12]];
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      *(_OWORD *)(v19 + v21[16]) = *(_OWORD *)&v20[v21[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    sub_1E3C2CBF8(v19);
LABEL_12:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v48 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = v48;
  swift_bridgeObjectRelease();
  id v49 = v20 + 16;
  int v50 = *(unsigned __int8 *)(v19 + 32);
  if (v50 != 255)
  {
    int v51 = v20[32];
    if (v51 != 255)
    {
      uint64_t v52 = *(void *)(v19 + 16);
      uint64_t v53 = *(void *)(v19 + 24);
      *(_OWORD *)(v19 + 16) = *v49;
      *(unsigned char *)(v19 + 32) = v51;
      sub_1E3C2B7BC(v52, v53, v50);
      goto LABEL_32;
    }
    sub_1E3C2CB50(v19 + 16);
  }
  *(_OWORD *)(v19 + 16) = *v49;
  *(unsigned char *)(v19 + 32) = v20[32];
LABEL_32:
  *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
  uint64_t v54 = v20 + 56;
  int v55 = *(unsigned __int8 *)(v19 + 64);
  if (v55 != 255)
  {
    int v56 = v20[64];
    if (v56 != 255)
    {
      id v57 = *(void **)(v19 + 56);
      *(void *)(v19 + 56) = *v54;
      *(unsigned char *)(v19 + 64) = v56;
      sub_1E3C2B7D4(v57, v55);
      goto LABEL_37;
    }
    sub_1E3C2CBA4(v19 + 56);
  }
  *(void *)(v19 + 56) = *v54;
  *(unsigned char *)(v19 + 64) = v20[64];
LABEL_37:
  uint64_t v58 = v20 + 72;
  int v59 = *(unsigned __int8 *)(v19 + 80);
  if (v59 != 255)
  {
    int v60 = v20[80];
    if (v60 != 255)
    {
      uint64_t v61 = *(void **)(v19 + 72);
      *(void *)(v19 + 72) = *v58;
      *(unsigned char *)(v19 + 80) = v60;
      sub_1E3C2B7D4(v61, v59);
      goto LABEL_42;
    }
    sub_1E3C2CBA4(v19 + 72);
  }
  *(void *)(v19 + 72) = *v58;
  *(unsigned char *)(v19 + 80) = v20[80];
LABEL_42:
  uint64_t v62 = v20 + 88;
  int v63 = *(unsigned __int8 *)(v19 + 96);
  if (v63 != 255)
  {
    int v64 = v20[96];
    if (v64 != 255)
    {
      uint64_t v65 = *(void **)(v19 + 88);
      *(void *)(v19 + 88) = *v62;
      *(unsigned char *)(v19 + 96) = v64;
      sub_1E3C2B7D4(v65, v63);
      goto LABEL_47;
    }
    sub_1E3C2CBA4(v19 + 88);
  }
  *(void *)(v19 + 88) = *v62;
  *(unsigned char *)(v19 + 96) = v20[96];
LABEL_47:
  uint64_t v66 = v20 + 104;
  int v67 = *(unsigned __int8 *)(v19 + 112);
  if (v67 != 255)
  {
    int v68 = v20[112];
    if (v68 != 255)
    {
      uint64_t v69 = *(void **)(v19 + 104);
      *(void *)(v19 + 104) = *v66;
      *(unsigned char *)(v19 + 112) = v68;
      sub_1E3C2B7D4(v69, v67);
      goto LABEL_52;
    }
    sub_1E3C2CBA4(v19 + 104);
  }
  *(void *)(v19 + 104) = *v66;
  *(unsigned char *)(v19 + 112) = v20[112];
LABEL_52:
  uint64_t v70 = v20 + 120;
  int v71 = *(unsigned __int8 *)(v19 + 128);
  if (v71 == 255)
  {
LABEL_56:
    *(void *)(v19 + 120) = *v70;
    *(unsigned char *)(v19 + 128) = v20[128];
    goto LABEL_57;
  }
  int v72 = v20[128];
  if (v72 == 255)
  {
    sub_1E3C2CBA4(v19 + 120);
    goto LABEL_56;
  }
  uint64_t v73 = *(void **)(v19 + 120);
  *(void *)(v19 + 120) = *v70;
  *(unsigned char *)(v19 + 128) = v72;
  sub_1E3C2B7D4(v73, v71);
LABEL_57:
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v74 = v21[11];
  uint64_t v75 = v19 + v74;
  id v76 = &v20[v74];
  uint64_t v77 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v77 - 8) + 40))(v75, v76, v77);
  uint64_t v78 = v21[12];
  id v79 = (void *)(v19 + v78);
  char v80 = &v20[v78];
  uint64_t v82 = *(void *)v80;
  uint64_t v81 = *((void *)v80 + 1);
  *id v79 = v82;
  v79[1] = v81;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v83 = v21[16];
  int v84 = (void *)(v19 + v83);
  id v85 = &v20[v83];
  uint64_t v87 = *(void *)v85;
  uint64_t v86 = *((void *)v85 + 1);
  void *v84 = v87;
  v84[1] = v86;
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v32 = v8[22];
  uint64_t v33 = (uint64_t)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  unint64_t v35 = *(void *)((char *)a1 + v32 + 8);
  if (v35 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    goto LABEL_18;
  }
  unint64_t v36 = *((void *)v34 + 1);
  if (v36 >> 60 == 15)
  {
    sub_1E3C2CC54(v33);
    goto LABEL_16;
  }
  uint64_t v37 = *(void *)v33;
  *(void *)uint64_t v33 = *(void *)v34;
  *(void *)(v33 + 8) = v36;
  sub_1E3C2B7E8(v37, v35);
LABEL_18:
  uint64_t v38 = v8[23];
  int v39 = (char *)a1 + v38;
  id v40 = (char *)a2 + v38;
  uint64_t v41 = sub_1E3E77D00();
  uint64_t v42 = *(void *)(v41 - 8);
  int v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  int v44 = v43(v39, 1, v41);
  int v45 = v43(v40, 1, v41);
  if (!v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v39, v40, v41);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
    goto LABEL_23;
  }
  if (v45)
  {
LABEL_23:
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v39, v40, *(void *)(*(void *)(v46 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayEpisodeIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C2D928);
}

uint64_t sub_1E3C2D928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeEntity(0);
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PlayEpisodeIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C2D9A8);
}

uint64_t sub_1E3C2D9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeEntity(0);
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PlayEpisodeIntent()
{
  uint64_t result = qword_1EBFE3388;
  if (!qword_1EBFE3388) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3C2DA64()
{
  uint64_t result = type metadata accessor for EpisodeEntity(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id AMSDialogAction.init(from:)(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_actionWithTitle_style_, v2, *(void *)(a1 + 72));

  id v4 = v3;
  long long v5 = (void *)sub_1E3E7CCF0();
  objc_msgSend(v4, sel_setIdentifier_, v5);

  sub_1E3C1B2BC(a1 + 32, (uint64_t)v7);
  sub_1E3C1ADE8((uint64_t)v7, 0xD000000000000033, 0x80000001E3E9BC10);
  sub_1E3C1B320(a1 + 80, (uint64_t)v7);
  sub_1E3C2DFC4(v7);
  sub_1E3C1B000(v7, 0xD00000000000003ALL, 0x80000001E3E9BC50);

  sub_1E3C1B3EC(a1);
  return v4;
}

uint64_t AMSDialogAction.ParameterKey.rawValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3C2DC6C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = AMSDialogAction.ParameterKey.init(rawValue:)(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1E3C2DC9C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3C2DCA8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1E3C2DD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1E3C2DD84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1E3C2DDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];

  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t AMSDialogAction.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v9 = objc_msgSend(v4, sel_parameters);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_1E3E7CB60();

    *(void *)&long long v17 = a1;
    *((void *)&v17 + 1) = a2;
    swift_bridgeObjectRetain();
    sub_1E3E7DD60();
    if (*(void *)(v11 + 16) && (unint64_t v12 = sub_1E3C2E448((uint64_t)v16), (v13 & 1) != 0))
    {
      sub_1E3C114A4(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v17);
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    sub_1E3C1B480((uint64_t)v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6190);
  int v14 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v14 ^ 1u, 1, a3);
}

uint64_t *sub_1E3C2DFC4(uint64_t *a1)
{
  return a1;
}

uint64_t AMSDialogAction.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1E3C307A8(a1, a2, a3, a4);
  uint64_t v5 = sub_1E3E7DB90();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(a1, v5);
}

void (*AMSDialogAction.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  id v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *id v9 = a2;
  v9[1] = a3;
  uint64_t v10 = sub_1E3E7DB90();
  v9[4] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v9[5] = v11;
  size_t v12 = *(void *)(v11 + 64);
  v9[6] = malloc(v12);
  char v13 = malloc(v12);
  v9[7] = v13;
  AMSDialogAction.subscript.getter(a2, a3, a4, (uint64_t)v13);
  return sub_1E3C2E170;
}

void sub_1E3C2E170(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a1)[6];
  uint64_t v4 = (void *)(*a1)[7];
  uint64_t v5 = (*a1)[4];
  uint64_t v6 = (*a1)[5];
  uint64_t v7 = (*a1)[2];
  uint64_t v9 = **a1;
  uint64_t v8 = (*a1)[1];
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[6], v4, v5);
    swift_bridgeObjectRetain();
    sub_1E3C307A8((uint64_t)v3, v9, v8, v7);
    uint64_t v10 = *(void (**)(void *, uint64_t))(v6 + 8);
    v10(v3, v5);
    v10(v4, v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1E3C307A8((uint64_t)v4, v9, v8, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

unint64_t static AMSDialogAction.ParameterKey<A>.action.getter()
{
  return 0xD000000000000033;
}

unint64_t static AMSDialogAction.ParameterKey<A>.clickLocation.getter()
{
  return 0xD00000000000003ALL;
}

unint64_t sub_1E3C2E2C0(uint64_t a1)
{
  sub_1E3E7E270();
  type metadata accessor for CFString(0);
  sub_1E3C30D34(&qword_1EBFE6398, type metadata accessor for CFString);
  sub_1E3E78130();
  uint64_t v2 = sub_1E3E7E2B0();

  return sub_1E3C2F240(a1, v2);
}

unint64_t sub_1E3C2E374(uint64_t a1)
{
  sub_1E3E7C030();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F71328];
  sub_1E3C30D34(&qword_1EBFE4808, MEMORY[0x1E4F71328]);
  uint64_t v3 = sub_1E3E7CC20();
  return sub_1E3C2F39C(a1, v3, MEMORY[0x1E4F71328], (unint64_t *)&unk_1EBFE4810, v2, MEMORY[0x1E4F71338]);
}

unint64_t sub_1E3C2E448(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7DD40();

  return sub_1E3C2F53C(a1, v2);
}

unint64_t sub_1E3C2E48C(uint64_t a1, uint64_t a2)
{
  sub_1E3E7E270();
  sub_1E3E7CE50();
  uint64_t v4 = sub_1E3E7E2B0();

  return sub_1E3C2F604(a1, a2, v4);
}

unint64_t sub_1E3C2E504(uint64_t a1)
{
  sub_1E3E7D560();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F91E60];
  sub_1E3C30D34((unint64_t *)&unk_1EBFE4AB0, MEMORY[0x1E4F91E60]);
  uint64_t v3 = sub_1E3E7CC20();
  return sub_1E3C2F39C(a1, v3, MEMORY[0x1E4F91E60], &qword_1EBFE4AC0, v2, MEMORY[0x1E4F91E70]);
}

unint64_t sub_1E3C2E5D8(unsigned __int8 a1)
{
  sub_1E3E7E270();
  sub_1E3E7CE50();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1E3E7E2B0();

  return sub_1E3C2F6E8(a1, v2);
}

uint64_t sub_1E3C2E728(uint64_t a1)
{
  return sub_1E3C2EC4C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1E3C2F9B0);
}

unint64_t sub_1E3C2E740(unsigned __int8 a1)
{
  sub_1E3E7E270();
  sub_1E3E7E280();
  uint64_t v2 = sub_1E3E7E2B0();

  return sub_1E3C2FA4C(a1, v2);
}

unint64_t sub_1E3C2E7AC(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7DA70();
  return sub_1E3C2FC6C(a1, v2, (unint64_t *)&qword_1EBFE4AD0);
}

unint64_t sub_1E3C2E7FC(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7E260();

  return sub_1E3C2F9B0(a1, v2);
}

unint64_t sub_1E3C2E840(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = a3 & 1;
  sub_1E3E7E270();
  sub_1E3E79BB0();
  uint64_t v6 = sub_1E3E7E2B0();

  return sub_1E3C2FAEC(a1, a2, v5, v6);
}

unint64_t sub_1E3C2E8CC(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7DA70();
  return sub_1E3C2FC6C(a1, v2, &qword_1EAE25080);
}

unint64_t sub_1E3C2E91C(uint64_t a1)
{
  sub_1E3E7E270();
  sub_1E3E78E70();
  sub_1E3C30D34(&qword_1EBFE42A8, MEMORY[0x1E4F917B8]);
  sub_1E3E7CC30();
  uint64_t v2 = sub_1E3E7E2B0();

  return sub_1E3C2FD80(a1, v2);
}

unint64_t sub_1E3C2E9D0(uint64_t a1)
{
  sub_1E3E78E70();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F917B8];
  sub_1E3C30D34(&qword_1EBFE42A8, MEMORY[0x1E4F917B8]);
  uint64_t v3 = sub_1E3E7CC20();
  return sub_1E3C2F39C(a1, v3, MEMORY[0x1E4F917B8], &qword_1EAE25098, v2, MEMORY[0x1E4F917D0]);
}

unint64_t sub_1E3C2EAA4(uint64_t a1)
{
  sub_1E3E77E50();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1E3C30D34(&qword_1EBFE5E10, MEMORY[0x1E4F27990]);
  uint64_t v3 = sub_1E3E7CC20();
  return sub_1E3C2F39C(a1, v3, MEMORY[0x1E4F27990], &qword_1EBFE5E18, v2, MEMORY[0x1E4F279B0]);
}

unint64_t sub_1E3C2EB78(uint64_t a1)
{
  sub_1E3E78790();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F91620];
  sub_1E3C30D34(&qword_1EAE25088, MEMORY[0x1E4F91620]);
  uint64_t v3 = sub_1E3E7CC20();
  return sub_1E3C2F39C(a1, v3, MEMORY[0x1E4F91620], &qword_1EAE29D10, v2, MEMORY[0x1E4F91630]);
}

uint64_t sub_1E3C2EC4C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  sub_1E3E7E270();
  sub_1E3E7E2A0();
  uint64_t v3 = sub_1E3E7E2B0();

  return a2(a1, v3);
}

unint64_t sub_1E3C2ECC4(char a1)
{
  sub_1E3E7E270();
  sub_1E3E7CE50();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1E3E7E2B0();

  return sub_1E3C2FEB8(a1 & 1, v2);
}

unint64_t sub_1E3C2ED70(uint64_t a1)
{
  sub_1E3E7CD30();
  sub_1E3E7E270();
  sub_1E3E7CE50();
  uint64_t v2 = sub_1E3E7E2B0();
  swift_bridgeObjectRelease();

  return sub_1E3C2FFFC(a1, v2);
}

unint64_t sub_1E3C2EE04(uint64_t a1)
{
  sub_1E3E79920();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F91B08];
  sub_1E3C30D34((unint64_t *)&qword_1EAE25E90, MEMORY[0x1E4F91B08]);
  uint64_t v3 = sub_1E3E7CC20();
  return sub_1E3C2F39C(a1, v3, MEMORY[0x1E4F91B08], &qword_1EAE25090, v2, MEMORY[0x1E4F91B18]);
}

unint64_t sub_1E3C2EED8(uint64_t a1, uint64_t a2)
{
  sub_1E3E7E270();
  sub_1E3E7E280();
  if (a2) {
    sub_1E3E7CE50();
  }
  uint64_t v4 = sub_1E3E7E2B0();

  return sub_1E3C30174(a1, a2, v4);
}

unint64_t sub_1E3C2EF6C(uint64_t a1)
{
  sub_1E3E7C100();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F71380];
  sub_1E3C30D34(&qword_1EBFE4838, MEMORY[0x1E4F71380]);
  uint64_t v3 = sub_1E3E7CC20();
  return sub_1E3C2F39C(a1, v3, MEMORY[0x1E4F71380], &qword_1EBFE4840, v2, MEMORY[0x1E4F71390]);
}

unint64_t sub_1E3C2F040(char a1)
{
  sub_1E3E7E270();
  sub_1E3E7CE50();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1E3E7E2B0();

  return sub_1E3C30240(a1 & 1, v2);
}

unint64_t sub_1E3C2F0E4(char a1)
{
  sub_1E3E7E270();
  AppLocation.rawValue.getter(a1);
  sub_1E3E7CE50();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1E3E7E2B0();

  return sub_1E3C30380(a1, v2);
}

unint64_t sub_1E3C2F16C(uint64_t a1)
{
  sub_1E3E77F10();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F27B30];
  sub_1E3C30D34(&qword_1EBFE2F20, MEMORY[0x1E4F27B30]);
  uint64_t v3 = sub_1E3E7CC20();
  return sub_1E3C2F39C(a1, v3, MEMORY[0x1E4F27B30], (unint64_t *)&qword_1EBFE0828, v2, MEMORY[0x1E4F27B40]);
}

unint64_t sub_1E3C2F240(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_1E3C30D34(&qword_1EBFE6398, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_1E3E78120();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_1E3E78120();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1E3C2F39C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  int v25 = a5;
  uint64_t v26 = a6;
  int v24 = a4;
  v22[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  v10.n128_f64[0] = MEMORY[0x1F4188790](v8);
  size_t v12 = (char *)v22 - v11;
  uint64_t v23 = v6;
  uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v14 = a2 & ~v13;
  v22[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v15 = ~v13;
    long long v18 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    uint64_t v17 = v9 + 16;
    int v16 = v18;
    uint64_t v19 = *(void *)(v17 + 56);
    do
    {
      v16(v12, *(void *)(v23 + 48) + v19 * v14, v8, v10);
      sub_1E3C30D34(v24, v25);
      char v20 = sub_1E3E7CCA0();
      (*(void (**)(char *, uint64_t))(v17 - 8))(v12, v8);
      if (v20) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v15;
    }
    while (((*(void *)(v22[0] + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_1E3C2F53C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1E3C30D7C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1E4E77670](v9, a1);
      sub_1E3C1B480((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1E3C2F604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    __n128 v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1E3E7E150() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1E3E7E150() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1E3C2F6E8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEA00000000006575;
      uint64_t v8 = 0x6575516F54646461;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x6B72616D6B6F6F62;
          break;
        case 2:
          uint64_t v8 = 0x6C5073416B72616DLL;
          unint64_t v7 = 0xEC00000064657961;
          break;
        case 3:
          uint64_t v8 = 0x6E5573416B72616DLL;
          unint64_t v7 = 0xEE00646579616C70;
          break;
        case 4:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x7478654E79616C70;
          break;
        case 5:
          unint64_t v7 = 0xEA00000000006B72;
          uint64_t v8 = 0x616D6B6F6F626E75;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x6575516F54646461;
      unint64_t v10 = 0xEA00000000006575;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE800000000000000;
          if (v8 == 0x6B72616D6B6F6F62) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v10 = 0xEC00000064657961;
          if (v8 != 0x6C5073416B72616DLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          unint64_t v10 = 0xEE00646579616C70;
          if (v8 != 0x6E5573416B72616DLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v9 = 0x7478654E79616C70;
          goto LABEL_17;
        case 5:
          unint64_t v10 = 0xEA00000000006B72;
          if (v8 != 0x616D6B6F6F626E75) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v9) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = sub_1E3E7E150();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1E3C2F9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1E3C2FA4C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1E3C2FAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t i = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v8 = *(void *)(v4 + 48) + 24 * i;
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *(void *)(v8 + 8);
    char v11 = *(unsigned char *)(v8 + 16);
    sub_1E3C30D14(*(void *)v8, v10, v11);
    char v12 = sub_1E3E79BA0();
    sub_1E3C30D24(v9, v10, v11);
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = ~v6;
      for (unint64_t i = (i + 1) & v13; ((*(void *)(v5 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v13)
      {
        uint64_t v14 = *(void *)(v4 + 48) + 24 * i;
        uint64_t v15 = *(void *)v14;
        uint64_t v16 = *(void *)(v14 + 8);
        char v17 = *(unsigned char *)(v14 + 16);
        sub_1E3C30D14(*(void *)v14, v16, v17);
        char v18 = sub_1E3E79BA0();
        sub_1E3C30D24(v15, v16, v17);
        if (v18) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1E3C2FC6C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1E3C12B10(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_1E3E7DA80();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_1E3E7DA80();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1E3C2FD80(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PreparedArtworkRequest() - 8;
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    do
    {
      sub_1E3C13E4C(*(void *)(v2 + 48) + v12 * v10, (uint64_t)v8);
      char v13 = MEMORY[0x1E4E726E0](v8, a1);
      sub_1E3C13EB0((uint64_t)v8);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1E3C2FEB8(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x616D6B6F6F626E75;
    }
    else {
      uint64_t v6 = 0x6B72616D6B6F6F62;
    }
    if (a1) {
      unint64_t v7 = 0xEA00000000006B72;
    }
    else {
      unint64_t v7 = 0xE800000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x616D6B6F6F626E75 : 0x6B72616D6B6F6F62;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xEA00000000006B72 : 0xE800000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = sub_1E3E7E150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1E3C2FFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1E3E7CD30();
    uint64_t v8 = v7;
    if (v6 == sub_1E3E7CD30() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1E3E7E150();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1E3E7CD30();
          uint64_t v15 = v14;
          if (v13 == sub_1E3E7CD30() && v15 == v16) {
            break;
          }
          char v18 = sub_1E3E7E150();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1E3C30174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = *(void *)(v3 + 48);
    do
    {
      char v11 = (void *)(v10 + 16 * v6);
      uint64_t v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          BOOL v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_1E3E7E150() & 1) != 0) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
      unint64_t v6 = (v6 + 1) & v9;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1E3C30240(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x776F6C6C6F666E75;
    }
    else {
      uint64_t v6 = 0x776F6C6C6F66;
    }
    if (a1) {
      unint64_t v7 = 0xE800000000000000;
    }
    else {
      unint64_t v7 = 0xE600000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x776F6C6C6F666E75 : 0x776F6C6C6F66;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE800000000000000 : 0xE600000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = sub_1E3E7E150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1E3C30380(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE400000000000000;
      uint64_t v8 = 1701670760;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x6573776F7262;
          break;
        case 2:
          uint64_t v8 = 0x7472616843706F74;
          unint64_t v7 = 0xE900000000000073;
          break;
        case 3:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x73776F6873;
          break;
        case 4:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x736C656E6E616863;
          break;
        case 5:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x6465766173;
          break;
        case 6:
          uint64_t v8 = 0x704574736574616CLL;
          unint64_t v7 = 0xEE007365646F7369;
          break;
        case 7:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x7972617262696CLL;
          break;
        case 8:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x686372616573;
          break;
        case 9:
          uint64_t v8 = 0x64616F6C6E776F64;
          unint64_t v7 = 0xEA00000000006465;
          break;
        case 0xA:
          uint64_t v8 = 0x796C746E65636572;
          unint64_t v7 = 0xEF64657461647055;
          break;
        case 0xB:
          unint64_t v7 = 0xEA0000000000676ELL;
          uint64_t v8 = 0x6979616C50776F6ELL;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE400000000000000;
      uint64_t v10 = 1701670760;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE600000000000000;
          if (v8 == 0x6573776F7262) {
            goto LABEL_36;
          }
          goto LABEL_37;
        case 2:
          unint64_t v9 = 0xE900000000000073;
          if (v8 != 0x7472616843706F74) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 3:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x73776F6873) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 4:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x736C656E6E616863) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 5:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x6465766173) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 6:
          unint64_t v9 = 0xEE007365646F7369;
          if (v8 != 0x704574736574616CLL) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 7:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x7972617262696CLL) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 8:
          unint64_t v9 = 0xE600000000000000;
          if (v8 != 0x686372616573) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 9:
          unint64_t v9 = 0xEA00000000006465;
          if (v8 != 0x64616F6C6E776F64) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 10:
          uint64_t v10 = 0x796C746E65636572;
          unint64_t v9 = 0xEF64657461647055;
          goto LABEL_35;
        case 11:
          unint64_t v9 = 0xEA0000000000676ELL;
          if (v8 != 0x6979616C50776F6ELL) {
            goto LABEL_37;
          }
          goto LABEL_36;
        default:
LABEL_35:
          if (v8 != v10) {
            goto LABEL_37;
          }
LABEL_36:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_37:
          char v11 = sub_1E3E7E150();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

void sub_1E3C307A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v27 = a3;
  uint64_t v9 = sub_1E3E7DB90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = *(void *)(a4 - 8);
  double v15 = MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v5;
  id v18 = objc_msgSend(v5, sel_parameters, v15);
  if (v18)
  {
    uint64_t v19 = v18;
    unint64_t v20 = sub_1E3E7CB60();
  }
  else
  {
    unint64_t v20 = sub_1E3C7EE44(MEMORY[0x1E4FBC860]);
  }
  unint64_t v34 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *(void *)&long long v32 = a2;
    *((void *)&v32 + 1) = v27;
    sub_1E3E7DD60();
    sub_1E3D5A36C((uint64_t)v31, &v32);
    sub_1E3C1B480((uint64_t)v31);
    sub_1E3C2AC28((uint64_t)&v32);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v12, a4);
    *(void *)&long long v32 = a2;
    *((void *)&v32 + 1) = v27;
    sub_1E3E7DD60();
    uint64_t v33 = a4;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v32);
    (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(boxed_opaque_existential_1, v17, a4);
    sub_1E3C1B524(&v32, v30);
    unint64_t v22 = v34;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v29 = v22;
    sub_1E3E67B8C(v30, (uint64_t)v31, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1E3C1B480((uint64_t)v31);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, a4);
  }
  int v24 = v28;
  int v25 = (void *)sub_1E3E7CB50();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setParameters_, v25);
}

uint64_t sub_1E3C30B08()
{
  return swift_getWitnessTable();
}

uint64_t sub_1E3C30B24@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return AMSDialogAction.subscript.getter(*a1, a1[1], *(uint64_t *)((char *)a1 + a2 - 8), a3);
}

void sub_1E3C30B54(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(uint64_t *)((char *)a3 + a4 - 8);
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  swift_bridgeObjectRetain();
  sub_1E3C307A8(a1, v6, v7, v5);
}

uint64_t sub_1E3C30BB0()
{
  return 8;
}

void *sub_1E3C30BBC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for SearchResultsGroupID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SearchResultsGroupID()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for SearchResultsGroupID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SearchResultsGroupID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsGroupID(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultsGroupID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AMSDialogAction.ParameterKey()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1E3C30D14(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1E3C30D24(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1E3C30D34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3C30D7C(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL sub_1E3C30DE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1E3C30DF8()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3C30E40()
{
  return sub_1E3E7E280();
}

uint64_t sub_1E3C30E6C()
{
  return sub_1E3E7E2B0();
}

uint64_t NowPlayingArtworkProvider.__allocating_init(imageProvider:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1E3C1B644(a1, v2 + 16);
  return v2;
}

uint64_t NowPlayingArtworkProvider.init(imageProvider:)(long long *a1)
{
  sub_1E3C1B644(a1, v1 + 16);
  return v1;
}

uint64_t NowPlayingArtworkProvider.fetch(for:dataProvider:at:of:)(unsigned __int8 *a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v10 - 8);
  int v45 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE250A0);
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v50 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v46 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE250A8);
  uint64_t v52 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v48 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE250B0);
  uint64_t v51 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  int v47 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1E3E7A880();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *a1;
  sub_1E3E7A7F0();
  unint64_t v22 = sub_1E3E7A860();
  os_log_type_t v23 = sub_1E3E7D4D0();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v53 = v14;
  if (v24)
  {
    uint64_t v43 = a2;
    uint64_t v44 = v16;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v56[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315394;
    id v55 = (id)sub_1E3C150B8(0xD00000000000001CLL, 0x80000001E3E9BF50, v56);
    sub_1E3E7DBD0();
    *(_WORD *)(v25 + 12) = 2082;
    unint64_t v27 = 0xE700000000000000;
    uint64_t v28 = 0x7972616D697270;
    switch(v54)
    {
      case 1:
        unint64_t v27 = 0xE800000000000000;
        uint64_t v28 = 0x617461646174656DLL;
        break;
      case 2:
        unint64_t v27 = 0xEA00000000007265;
        uint64_t v28 = 0x746E65436F666E69;
        break;
      case 3:
        unint64_t v27 = 0xEC0000006C6C6154;
        uint64_t v28 = 0x65676150776F6873;
        break;
      case 4:
        unint64_t v27 = 0xE800000000000000;
        uint64_t v28 = 0x706F72646B636162;
        break;
      default:
        break;
    }
    id v55 = (id)sub_1E3C150B8(v28, v27, v56);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E3BC5000, v22, v23, "%s Fetching artwork for placement: %{public}s.", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v26, -1, -1);
    MEMORY[0x1E4E79510](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    a2 = v43;
    uint64_t v16 = v44;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  char v29 = v54;
  LOBYTE(v56[0]) = v54;
  v56[0] = NowPlayingArtworkProvider.data(for:dataProvider:at:)((char *)v56, a2, a3);
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  id v55 = (id)sub_1E3E7D6A0();
  uint64_t v30 = sub_1E3E7D640();
  uint64_t v31 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v45, 1, 1, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE6058);
  sub_1E3C10DE8(&qword_1EBFE6050, (uint64_t *)&unk_1EBFE6058);
  sub_1E3C32D34();
  long long v32 = v46;
  sub_1E3E7AD10();
  sub_1E3C10CE0(v31, (uint64_t *)&unk_1EBFE27A0);

  swift_release();
  uint64_t v33 = swift_allocObject();
  swift_weakInit();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v33;
  *(unsigned char *)(v34 + 24) = v29;
  *(double *)(v34 + 32) = a4;
  *(double *)(v34 + 40) = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2408);
  sub_1E3C10DE8(&qword_1EAE250B8, &qword_1EAE250A0);
  unint64_t v35 = v48;
  uint64_t v36 = v50;
  sub_1E3E7ABF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v36);
  uint64_t v37 = sub_1E3C10DE8(&qword_1EAE250C0, &qword_1EAE250A8);
  uint64_t v38 = sub_1E3C10DE8(&qword_1EBFE2400, &qword_1EBFE2408);
  int v39 = v47;
  uint64_t v40 = v53;
  MEMORY[0x1E4E74480](v53, v37, v38);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v40);
  sub_1E3C10DE8(&qword_1EAE250C8, &qword_1EAE250B0);
  uint64_t v41 = sub_1E3E7AB70();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v16);
  return v41;
}

uint64_t NowPlayingArtworkProvider.data(for:dataProvider:at:)(char *a1, uint64_t a2, double a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE250D0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *a1;
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  sub_1E3C1B2BC(a2, (uint64_t)v20);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(unsigned char *)(v15 + 24) = v13;
  sub_1E3C1B644(v20, v15 + 32);
  *(double *)(v15 + 72) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C70);
  swift_allocObject();
  *(void *)&v20[0] = sub_1E3E7AA90();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  id v19 = (id)sub_1E3E7D6A0();
  uint64_t v16 = sub_1E3E7D640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  sub_1E3C10DE8(&qword_1EBFE2C68, &qword_1EBFE2C70);
  sub_1E3C32D34();
  sub_1E3E7AD10();
  sub_1E3C10CE0((uint64_t)v8, (uint64_t *)&unk_1EBFE27A0);

  swift_release();
  sub_1E3C10DE8(&qword_1EAE250D8, &qword_1EAE250D0);
  uint64_t v17 = sub_1E3E7AB70();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v17;
}

uint64_t sub_1E3C319C4@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBFDF608);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    LOBYTE(v19) = a2;
    uint64_t v15 = sub_1E3C32E70(a1, (unsigned __int8 *)&v19, (void *)(Strong + 16), a4, a5);
    uint64_t result = swift_release();
  }
  else
  {
    sub_1E3C33F5C();
    uint64_t v17 = swift_allocError();
    *uint64_t v18 = 0;
    uint64_t v19 = v17;
    sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE63D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    sub_1E3E7AA10();
    sub_1E3C10DE8(&qword_1EBFE2AB8, qword_1EBFDF608);
    uint64_t v15 = sub_1E3E7AB70();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  *a3 = v15;
  return result;
}

uint64_t NowPlayingArtworkProvider.fetch(for:placement:of:)(uint64_t a1, unsigned __int8 *a2, double a3, double a4)
{
  unsigned __int8 v6 = *a2;
  return sub_1E3C32E70(a1, &v6, (void *)(v4 + 16), a3, a4);
}

uint64_t sub_1E3C31BDC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, double a6)
{
  int v22 = a4;
  uint64_t v23 = a1;
  uint64_t v10 = sub_1E3E7B770();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = sub_1E3E7B7C0();
  uint64_t v14 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t v17 = (void *)sub_1E3E7D5D0();
  sub_1E3C1B2BC(a5, (uint64_t)v27);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a3;
  *(unsigned char *)(v18 + 24) = v22;
  sub_1E3C1B644(v27, v18 + 32);
  *(double *)(v18 + 72) = a6;
  *(void *)(v18 + 80) = v23;
  *(void *)(v18 + 88) = a2;
  aBlock[4] = sub_1E3C33EEC;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1E3CE65F8;
  aBlock[3] = &block_descriptor_2;
  uint64_t v19 = _Block_copy(aBlock);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E7B7A0();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1E3C33F04();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C10DE8((unint64_t *)&qword_1EBFDEE20, (uint64_t *)&unk_1EBFDEE10);
  sub_1E3E7DCC0();
  MEMORY[0x1E4E76FF0](0, v16, v13, v19);
  _Block_release(v19);

  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v24);
  return swift_release();
}

uint64_t sub_1E3C31EE0(uint64_t a1, char a2, uint64_t a3, void (*a4)(uint64_t *))
{
  uint64_t v20 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBFE2CA8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C60);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NowPlayingArtwork.Data();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    char v21 = a2;
    sub_1E3C321D8(&v21, a3, (uint64_t)v11);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      sub_1E3C33FB0((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
      sub_1E3C33E3C((uint64_t)v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
      swift_storeEnumTagMultiPayload();
      v20(v8);
      sub_1E3C10CE0((uint64_t)v8, qword_1EBFE2CA8);
      return sub_1E3C34018((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_1E3C10CE0((uint64_t)v11, &qword_1EBFE2C60);
  sub_1E3C33F5C();
  uint64_t v17 = swift_allocError();
  *uint64_t v18 = 1;
  *uint64_t v8 = v17;
  swift_storeEnumTagMultiPayload();
  v20(v8);
  return sub_1E3C10CE0((uint64_t)v8, qword_1EBFE2CA8);
}

uint64_t sub_1E3C321D8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v78 = a3;
  uint64_t v80 = sub_1E3E7A880();
  uint64_t v75 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v74 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v73 = (char *)&v70 - v7;
  uint64_t v8 = type metadata accessor for NowPlayingArtwork.Data();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C60);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v70 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v70 - v19;
  uint64_t v76 = *a1;
  uint64_t v21 = (uint64_t)*(&off_1E6E20D88 + v76);
  sub_1E3C1B2BC(a2, (uint64_t)v86);
  uint64_t v79 = a2;
  sub_1E3C1B2BC(a2, (uint64_t)v83);
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v77 = v9;
  uint64_t v81 = v21;
  if (!v22)
  {
    swift_bridgeObjectRetain();
LABEL_8:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
    uint64_t v30 = 1;
    uint64_t v31 = v79;
    uint64_t v32 = v80;
    uint64_t v33 = v78;
    goto LABEL_9;
  }
  int v71 = v17;
  int v72 = v14;
  uint64_t v70 = v11;
  uint64_t v23 = v21 + 32;
  uint64_t v24 = (uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  unint64_t v25 = 0;
  while (1)
  {
    char v26 = *(unsigned char *)(v23 + v25);
    uint64_t v27 = v84;
    uint64_t v28 = v85;
    __swift_project_boxed_opaque_existential_1(v83, v84);
    LOBYTE(v82) = v26;
    NowPlayingArtworkDataProviding.data(for:at:)(&v82, v27, v28);
    char v29 = *v24;
    LODWORD(v27) = (*v24)(v20, 1, v8);
    sub_1E3C10CE0((uint64_t)v20, &qword_1EBFE2C60);
    if (v27 != 1) {
      break;
    }
    if (v22 == ++v25) {
      goto LABEL_8;
    }
  }
  if (v22 == v25) {
    goto LABEL_8;
  }
  if (v25 >= *(void *)(v81 + 16))
  {
    __break(1u);
    goto LABEL_37;
  }
  char v50 = *(unsigned char *)(v23 + v25);
  uint64_t v51 = v87;
  uint64_t v52 = v88;
  __swift_project_boxed_opaque_existential_1(v86, v87);
  LOBYTE(v82) = v50;
  uint64_t v53 = (uint64_t)v71;
  NowPlayingArtworkDataProviding.data(for:at:)(&v82, v51, v52);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
  uint64_t v54 = (uint64_t)v72;
  sub_1E3C34078(v53, (uint64_t)v72, &qword_1EBFE2C60);
  if (v29((char *)v54, 1, v8) == 1)
  {
LABEL_37:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
    __break(1u);
    JUMPOUT(0x1E3C32C38);
  }
  uint64_t v55 = (uint64_t)v70;
  sub_1E3C33FB0(v54, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
  sub_1E3C10CE0(v53, &qword_1EBFE2C60);
  uint64_t v33 = v78;
  sub_1E3C33FB0(v55, v78, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
  uint64_t v30 = 0;
  uint64_t v31 = v79;
  uint64_t v32 = v80;
LABEL_9:
  uint64_t v34 = v77;
  uint64_t v35 = v76;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v33, v30, 1, v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v33, 1, v8) == 1)
  {
    uint64_t v36 = v74;
    sub_1E3E7A7F0();
    sub_1E3C1B2BC(v31, (uint64_t)v86);
    uint64_t v37 = sub_1E3E7A860();
    os_log_type_t v38 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = 0x7972616D697270;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v83[0] = v41;
      *(_DWORD *)uint64_t v40 = 136315907;
      uint64_t v82 = sub_1E3C150B8(0xD00000000000001CLL, 0x80000001E3E9BF50, v83);
      sub_1E3E7DBD0();
      *(_WORD *)(v40 + 12) = 2082;
      unint64_t v42 = 0xE700000000000000;
      switch(v35)
      {
        case 1:
          unint64_t v42 = 0xE800000000000000;
          uint64_t v39 = 0x617461646174656DLL;
          break;
        case 2:
          uint64_t v39 = 0x746E65436F666E69;
          unint64_t v42 = 0xEA00000000007265;
          break;
        case 3:
          uint64_t v39 = 0x65676150776F6873;
          unint64_t v42 = 0xEC0000006C6C6154;
          break;
        case 4:
          unint64_t v42 = 0xE800000000000000;
          uint64_t v39 = 0x706F72646B636162;
          break;
        default:
          break;
      }
      uint64_t v82 = sub_1E3C150B8(v39, v42, v83);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 22) = 2160;
      uint64_t v82 = 1752392040;
      sub_1E3E7DBD0();
      *(_WORD *)(v40 + 32) = 2081;
      uint64_t v56 = v87;
      id v57 = v88;
      __swift_project_boxed_opaque_existential_1(v86, v87);
      uint64_t v58 = v57[1](v56, v57);
      if (v59)
      {
        uint64_t v60 = 0x6D616441206F4E3CLL;
        unint64_t v62 = 0xEB000000003E4449;
      }
      else
      {
        uint64_t v82 = v58;
        sub_1E3C340DC();
        uint64_t v60 = sub_1E3E7DC90();
        unint64_t v62 = v61;
      }
      uint64_t v82 = sub_1E3C150B8(v60, v62, v83);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
      _os_log_impl(&dword_1E3BC5000, v37, v38, "%s Unable to find any artwork data for placement: %{public}s for item %{private,mask.hash}s.", (uint8_t *)v40, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v41, -1, -1);
      MEMORY[0x1E4E79510](v40, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v74, v32);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);

    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v36, v32);
  }
  uint64_t v36 = v73;
  sub_1E3E7A7F0();
  sub_1E3C1B2BC(v31, (uint64_t)v86);
  uint64_t v43 = sub_1E3E7A860();
  os_log_type_t v44 = sub_1E3E7D4D0();
  if (!os_log_type_enabled(v43, v44))
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);

    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v36, v32);
  }
  uint64_t v45 = 0x7972616D697270;
  uint64_t v46 = swift_slowAlloc();
  uint64_t v47 = swift_slowAlloc();
  v83[0] = v47;
  *(_DWORD *)uint64_t v46 = 136315907;
  uint64_t v82 = sub_1E3C150B8(0xD00000000000001CLL, 0x80000001E3E9BF50, v83);
  sub_1E3E7DBD0();
  *(_WORD *)(v46 + 12) = 2082;
  unint64_t v48 = 0xE700000000000000;
  switch(v35)
  {
    case 1:
      unint64_t v48 = 0xE800000000000000;
      uint64_t v45 = 0x617461646174656DLL;
      break;
    case 2:
      uint64_t v45 = 0x746E65436F666E69;
      unint64_t v48 = 0xEA00000000007265;
      break;
    case 3:
      uint64_t v45 = 0x65676150776F6873;
      unint64_t v48 = 0xEC0000006C6C6154;
      break;
    case 4:
      unint64_t v48 = 0xE800000000000000;
      uint64_t v45 = 0x706F72646B636162;
      break;
    default:
      break;
  }
  uint64_t v82 = sub_1E3C150B8(v45, v48, v83);
  sub_1E3E7DBD0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v46 + 22) = 2160;
  uint64_t v82 = 1752392040;
  sub_1E3E7DBD0();
  *(_WORD *)(v46 + 32) = 2081;
  uint64_t v63 = v87;
  int v64 = v88;
  __swift_project_boxed_opaque_existential_1(v86, v87);
  uint64_t v65 = v64[1](v63, v64);
  if (v66)
  {
    uint64_t v67 = 0x6D616441206F4E3CLL;
    unint64_t v69 = 0xEB000000003E4449;
  }
  else
  {
    uint64_t v82 = v65;
    sub_1E3C340DC();
    uint64_t v67 = sub_1E3E7DC90();
    unint64_t v69 = v68;
  }
  uint64_t v82 = sub_1E3C150B8(v67, v69, v83);
  sub_1E3E7DBD0();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
  _os_log_impl(&dword_1E3BC5000, v43, v44, "%s Found artwork data for placement: %{public}s for item %{private,mask.hash}s.", (uint8_t *)v46, 0x2Au);
  swift_arrayDestroy();
  MEMORY[0x1E4E79510](v47, -1, -1);
  MEMORY[0x1E4E79510](v46, -1, -1);

  return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v73, v32);
}

uint64_t NowPlayingArtworkProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t NowPlayingArtworkProvider.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1E3C32CB8(unsigned __int8 *a1, uint64_t a2, double a3, double a4, double a5)
{
  return NowPlayingArtworkProvider.fetch(for:dataProvider:at:of:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1E3C32CDC(uint64_t a1, unsigned __int8 *a2, double a3, double a4)
{
  uint64_t v5 = *v4;
  unsigned __int8 v7 = *a2;
  return sub_1E3C32E70(a1, &v7, (void *)(v5 + 16), a3, a4);
}

uint64_t sub_1E3C32D10(char *a1, uint64_t a2, double a3)
{
  return NowPlayingArtworkProvider.data(for:dataProvider:at:)(a1, a2, a3);
}

unint64_t sub_1E3C32D34()
{
  unint64_t result = qword_1EBFE27B0;
  if (!qword_1EBFE27B0)
  {
    sub_1E3C12B10(255, (unint64_t *)&qword_1EBFE60A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE27B0);
  }
  return result;
}

uint64_t sub_1E3C32D9C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3C32DD4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C32E0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1E3C319C4(a1, *(unsigned char *)(v2 + 24), a2, *(double *)(v2 + 32), *(double *)(v2 + 40));
}

uint64_t sub_1E3C32E1C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);

  return swift_deallocObject();
}

uint64_t sub_1E3C32E5C(uint64_t a1, uint64_t a2)
{
  return sub_1E3C31BDC(a1, a2, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), v2 + 32, *(double *)(v2 + 72));
}

uint64_t sub_1E3C32E70(uint64_t a1, unsigned __int8 *a2, void *a3, double Width, double Height)
{
  char v98 = a3;
  uint64_t v107 = a1;
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE20F0);
  id v103 = *(void (***)(char *, uint64_t))(v104 - 8);
  MEMORY[0x1F4188790](v104);
  int v102 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1E3E793D0();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  int v93 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6418);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v97 = (uint64_t)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  char v96 = (char *)&v88 - v13;
  uint64_t v101 = sub_1E3E78E70();
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  id v99 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E78740();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v91 = (uint64_t)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v92 = (uint64_t)&v88 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v89 = (uint64_t)&v88 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6408);
  uint64_t v90 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6410);
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (void (**)(char *, uint64_t))((char *)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v106 = sub_1E3E7A880();
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  char v29 = (char *)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v88 - v31;
  uint64_t v33 = type metadata accessor for NowPlayingArtwork.Data();
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (void **)((char *)&v88 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = *a2;
  sub_1E3C33E3C(v107, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v38 = v89;
      sub_1E3C33FB0((uint64_t)v35, v89, MEMORY[0x1E4F915F0]);
      sub_1E3E7A7F0();
      sub_1E3E7D4C0();
      sub_1E3E79930();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v29, v106);
      uint64_t v39 = v92;
      sub_1E3C33E3C(v38, v92, MEMORY[0x1E4F915F0]);
      uint64_t v40 = (uint64_t)v99;
      if (Width == 1.79769313e308 || Height == 1.79769313e308)
      {
        if (v36 == 3)
        {
          uint64_t v41 = self;
          id v42 = objc_msgSend(v41, sel_mainScreen);
          objc_msgSend(v42, sel_bounds);
          CGFloat v44 = v43;
          CGFloat v46 = v45;
          CGFloat v48 = v47;
          CGFloat v50 = v49;

          v111.origin.x = v44;
          v111.origin.y = v46;
          v111.size.width = v48;
          v111.size.height = v50;
          size_t Width = CGRectGetWidth(v111);
          id v51 = objc_msgSend(v41, sel_mainScreen);
          objc_msgSend(v51, sel_bounds);
          CGFloat v53 = v52;
          CGFloat v55 = v54;
          CGFloat v57 = v56;
          CGFloat v59 = v58;

          v112.origin.x = v53;
          v112.origin.y = v55;
          v112.size.width = v57;
          v112.size.height = v59;
          size_t Height = CGRectGetHeight(v112);
        }
        else
        {
          size_t Width = 600.0;
          size_t Height = 600.0;
        }
      }
      uint64_t v71 = sub_1E3E7A5A0();
      uint64_t v72 = (uint64_t)v96;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v96, 1, 1, v71);
      sub_1E3C1B2BC((uint64_t)v110, (uint64_t)v109);
      id v73 = objc_msgSend(self, sel_mainScreen);
      objc_msgSend(v73, sel_scale);

      uint64_t v74 = v91;
      sub_1E3C33E3C(v39, v91, MEMORY[0x1E4F915F0]);
      sub_1E3E78720();
      uint64_t v75 = v94;
      uint64_t v76 = (uint64_t)v93;
      uint64_t v77 = v95;
      (*(void (**)(char *, void, uint64_t))(v94 + 104))(v93, *MEMORY[0x1E4F91A00], v95);
      CGSize.fitting(_:aspectRule:)(v76, Width, Height);
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v76, v77);
      uint64_t v78 = v97;
      sub_1E3C34078(v72, v97, &qword_1EBFE6418);
      sub_1E3C34078((uint64_t)v109, (uint64_t)v108, &qword_1EBFE6360);
      sub_1E3DDA928(v74, 0, v78, 0, MEMORY[0x1E4FBC860], (uint64_t)v108, v40);
      sub_1E3C10CE0((uint64_t)v109, &qword_1EBFE6360);
      sub_1E3C10CE0(v72, &qword_1EBFE6418);
      sub_1E3C34018(v39, MEMORY[0x1E4F915F0]);
      uint64_t v79 = v98[3];
      uint64_t v80 = v98[4];
      __swift_project_boxed_opaque_existential_1(v98, v79);
      v108[0] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 8))(v40, v79, v80);
      sub_1E3C1B2BC((uint64_t)v110, (uint64_t)v109);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2408);
      sub_1E3C10DE8(&qword_1EBFE2400, &qword_1EBFE2408);
      sub_1E3E78B20();
      uint64_t v81 = v102;
      sub_1E3E7AB40();
      swift_bridgeObjectRelease();
      sub_1E3C10CE0((uint64_t)v109, &qword_1EBFE6360);
      swift_release();
      sub_1E3C10DE8(&qword_1EBFE6048, &qword_1EBFE20F0);
      uint64_t v82 = v104;
      uint64_t v70 = sub_1E3E7AB70();
      v103[1](v81, v82);
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v40, v101);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v110);
      sub_1E3C34018(v38, MEMORY[0x1E4F915F0]);
    }
    else
    {
      unint64_t v69 = *v35;
      swift_allocObject();
      swift_unknownObjectWeakInit();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6380);
      swift_allocObject();
      v110[0] = sub_1E3E7AA90();
      sub_1E3C10DE8(&qword_1EBFE6378, &qword_1EBFE6380);
      uint64_t v70 = sub_1E3E7AB70();
      swift_release();
    }
  }
  else
  {
    int v102 = v23;
    id v103 = v27;
    uint64_t v60 = v21;
    uint64_t v107 = v25;
    uint64_t v104 = v24;
    unint64_t v61 = *v35;
    sub_1E3E7A7F0();
    unint64_t v62 = sub_1E3E7A860();
    os_log_type_t v63 = sub_1E3E7D4D0();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v101 = v36;
      uint64_t v64 = swift_slowAlloc();
      uint64_t v100 = swift_slowAlloc();
      v110[0] = v100;
      *(_DWORD *)uint64_t v64 = 136315394;
      v109[0] = sub_1E3C150B8(0xD00000000000001CLL, 0x80000001E3E9BF50, v110);
      sub_1E3E7DBD0();
      *(_WORD *)(v64 + 12) = 2080;
      unint64_t v65 = 0xE700000000000000;
      char v66 = v102;
      uint64_t v67 = v60;
      uint64_t v68 = 0x7972616D697270;
      switch(v101)
      {
        case 1:
          unint64_t v65 = 0xE800000000000000;
          uint64_t v68 = 0x617461646174656DLL;
          break;
        case 2:
          uint64_t v68 = 0x746E65436F666E69;
          unint64_t v65 = 0xEA00000000007265;
          break;
        case 3:
          uint64_t v68 = 0x65676150776F6873;
          unint64_t v65 = 0xEC0000006C6C6154;
          break;
        case 4:
          unint64_t v65 = 0xE800000000000000;
          uint64_t v68 = 0x706F72646B636162;
          break;
        default:
          break;
      }
      v109[0] = sub_1E3C150B8(v68, v65, v110);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v62, v63, "%s Finished fetching chapter artwork for placement: %s.", (uint8_t *)v64, 0x16u);
      uint64_t v83 = v100;
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v83, -1, -1);
      MEMORY[0x1E4E79510](v64, -1, -1);

      (*(void (**)(char *, uint64_t))(v105 + 8))(v32, v106);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v105 + 8))(v32, v106);
      uint64_t v67 = v60;
      char v66 = v102;
    }
    v110[0] = (uint64_t)v61;
    sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE63D0);
    id v84 = v61;
    sub_1E3E7AA30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    id v85 = v103;
    sub_1E3E7AA20();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v66, v67);
    sub_1E3C10DE8(&qword_1EBFE2AC0, &qword_1EBFE6410);
    uint64_t v86 = v104;
    uint64_t v70 = sub_1E3E7AB70();

    (*(void (**)(void, uint64_t))(v107 + 8))(v85, v86);
  }
  return v70;
}

uint64_t type metadata accessor for NowPlayingArtworkProvider()
{
  return self;
}

uint64_t method lookup function for NowPlayingArtworkProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NowPlayingArtworkProvider);
}

uint64_t dispatch thunk of NowPlayingArtworkProvider.__allocating_init(imageProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1E3C33DFC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1E3C33E34(void (*a1)(void **), uint64_t a2)
{
  sub_1E3DC9BA0(a1, a2, v2);
}

uint64_t sub_1E3C33E3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E3C33EA4()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C33EEC()
{
  return sub_1E3C31EE0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), v0 + 32, *(void (**)(uint64_t *))(v0 + 80));
}

unint64_t sub_1E3C33F04()
{
  unint64_t result = qword_1EBFDEE00;
  if (!qword_1EBFDEE00)
  {
    sub_1E3E7B770();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFDEE00);
  }
  return result;
}

unint64_t sub_1E3C33F5C()
{
  unint64_t result = qword_1EAE250E0;
  if (!qword_1EAE250E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE250E0);
  }
  return result;
}

uint64_t sub_1E3C33FB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E3C34018(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1E3C34078(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1E3C340DC()
{
  unint64_t result = qword_1EBFE07F0;
  if (!qword_1EBFE07F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE07F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NowPlayingArtworkProvider.ArtworkError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NowPlayingArtworkProvider.ArtworkError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3C3428CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1E3C342B4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1E3C342BC(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingArtworkProvider.ArtworkError()
{
  return &type metadata for NowPlayingArtworkProvider.ArtworkError;
}

unint64_t sub_1E3C342DC()
{
  unint64_t result = qword_1EAE250E8;
  if (!qword_1EAE250E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE250E8);
  }
  return result;
}

Swift::Void __swiftcall UIStackView.addArrangedSubviews(_:)(Swift::OpaquePointer a1)
{
  if ((unint64_t)a1._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1E3E7DFC0();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if (((unint64_t)a1._rawValue & 0xC000000000000001) != 0) {
      id v5 = (id)MEMORY[0x1E4E77720](i, a1._rawValue);
    }
    else {
      id v5 = *((id *)a1._rawValue + i + 4);
    }
    unsigned int v6 = v5;
    objc_msgSend(v1, sel_addArrangedSubview_, v5);
  }
LABEL_10:

  swift_bridgeObjectRelease();
}

uint64_t sub_1E3C3441C()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE250F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE250F0);
  return sub_1E3E77B40();
}

uint64_t static FollowRSSFeedAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C34554(&qword_1EAE24018, MEMORY[0x1E4F27608], (uint64_t)qword_1EAE250F0, a1);
}

uint64_t sub_1E3C344B8()
{
  uint64_t v0 = sub_1E3E77740();
  __swift_allocate_value_buffer(v0, qword_1EAE25108);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25108);
  return sub_1E3E77730();
}

uint64_t static FollowRSSFeedAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C34554(&qword_1EAE24020, MEMORY[0x1E4F18510], (uint64_t)qword_1EAE25108, a1);
}

uint64_t sub_1E3C34554@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t static FollowRSSFeedAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static FollowRSSFeedAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static FollowRSSFeedAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25120);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25128);
  MEMORY[0x1F4188790](v1);
  sub_1E3C3479C();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25138);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

unint64_t sub_1E3C3479C()
{
  unint64_t result = qword_1EAE25130;
  if (!qword_1EAE25130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25130);
  }
  return result;
}

uint64_t FollowRSSFeedAppIntent.$feedURL.getter()
{
  return sub_1E3E77570();
}

uint64_t sub_1E3C34814@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E775E0();
  sub_1E3E775E0();
  uint64_t v2 = sub_1E3E77570();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t FollowRSSFeedAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t sub_1E3C348A4@<X0>(void *a1@<X8>)
{
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E772F0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3C34908()
{
  return swift_release();
}

uint64_t FollowRSSFeedAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*FollowRSSFeedAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t FollowRSSFeedAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t FollowRSSFeedAppIntent.feedURL.getter()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3C34A50()
{
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();

  return swift_release();
}

uint64_t sub_1E3C34AB0(uint64_t a1)
{
  uint64_t v2 = sub_1E3E77D00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  swift_release();
  return swift_release();
}

uint64_t FollowRSSFeedAppIntent.feedURL.setter(uint64_t a1)
{
  uint64_t v2 = sub_1E3E77D00();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_1E3E77560();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t (*FollowRSSFeedAppIntent.feedURL.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

void sub_1E3C34D58(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t FollowRSSFeedAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v20 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1E3E77B60();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v22 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v15 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25150);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  uint64_t v16 = sub_1E3E77D00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
  uint64_t v17 = sub_1E3E77430();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F186F0], v20);
  uint64_t result = sub_1E3E775C0();
  uint64_t v19 = v21;
  *uint64_t v21 = v15;
  v19[1] = result;
  return result;
}

unint64_t sub_1E3C3513C()
{
  unint64_t result = qword_1EAE25148;
  if (!qword_1EAE25148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25148);
  }
  return result;
}

uint64_t FollowRSSFeedAppIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25160);
  *(void *)(v2 + 48) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ShowEntity(0);
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = *(void *)(v3 - 8);
  *(void *)(v2 + 72) = swift_task_alloc();
  *(void *)(v2 + 80) = swift_task_alloc();
  *(void *)(v2 + 88) = swift_task_alloc();
  *(void *)(v2 + 96) = swift_task_alloc();
  *(void *)(v2 + 104) = type metadata accessor for FollowFeedIntent();
  *(void *)(v2 + 112) = swift_task_alloc();
  *(_OWORD *)(v2 + 120) = *v1;
  return MEMORY[0x1F4188298](sub_1E3C352E0, 0, 0);
}

uint64_t sub_1E3C352E0()
{
  uint64_t v2 = (int *)v0[13];
  uint64_t v1 = v0[14];
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  uint64_t v3 = sub_1E3E77D00();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 0, 1, v3);
  uint64_t v4 = v1 + v2[5];
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  uint64_t v5 = (void *)(v1 + v2[6]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(unsigned char *)(v1 + v2[7]) = 0;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE25168 + dword_1EAE25168);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[17] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1E3C35430;
  uint64_t v7 = v0[15];
  uint64_t v8 = v0[16];
  uint64_t v9 = v0[14];
  return v11(v9, v7, v8);
}

uint64_t sub_1E3C35430(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(*v4 + 112);
  *(void *)(v5 + 144) = a1;
  *(void *)(v5 + 152) = a2;
  *(unsigned char *)(v5 + 201) = a3;
  *(void *)(v5 + 160) = v3;
  swift_task_dealloc();
  sub_1E3C3A2AC(v6, (uint64_t (*)(void))type metadata accessor for FollowFeedIntent);
  if (v3) {
    uint64_t v7 = sub_1E3C35BB0;
  }
  else {
    uint64_t v7 = sub_1E3C35580;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3C35580()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1E3E7D270();
  char v2 = *(unsigned char *)(v0 + 201);
  uint64_t v4 = *(void **)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  if (v1)
  {
    sub_1E3C1168C(*(void **)(v0 + 144), *(void *)(v0 + 152), *(unsigned char *)(v0 + 201));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25170);
    uint64_t v7 = swift_allocObject();
    *(void *)(v0 + 168) = v7;
    *(_OWORD *)(v7 + 16) = xmmword_1E3E86660;
    *(void *)(v7 + 32) = v4;
    *(void *)(v7 + 40) = v3;
    *(unsigned char *)(v7 + 48) = v2;
    sub_1E3C1161C(v4, v3, v2);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAE25178 + dword_1EAE25178);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1E3C35724;
    uint64_t v9 = *(void *)(v0 + 120);
    return v10(v7, v9);
  }
}

uint64_t sub_1E3C35724(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 184) = a1;
  *(void *)(v3 + 192) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_1E3C35C58;
  }
  else {
    uint64_t v4 = sub_1E3C35858;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3C35858()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void *)(v0 + 184);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(unsigned __int8 *)(*(void *)(v0 + 64) + 80);
    sub_1E3C3A130(v1 + ((v2 + 32) & ~v2), *(void *)(v0 + 48));
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, v3, 1, v4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    uint64_t v7 = *(void **)(v0 + 144);
    uint64_t v8 = *(void *)(v0 + 152);
    char v9 = *(unsigned char *)(v0 + 201);
    sub_1E3C3A194(*(void *)(v0 + 48));
    sub_1E3C3A1F4();
    swift_allocError();
    unsigned char *v10 = 1;
    swift_willThrow();
    sub_1E3C1168C(v7, v8, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    uint64_t v21 = *(void **)(v0 + 144);
    uint64_t v22 = *(void *)(v0 + 152);
    uint64_t v12 = *(void *)(v0 + 88);
    uint64_t v13 = *(void *)(v0 + 96);
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v15 = *(void *)(v0 + 80);
    char v20 = *(unsigned char *)(v0 + 201);
    sub_1E3C3A248(*(void *)(v0 + 48), v13);
    sub_1E3C3A130(v13, v12);
    OpenShowAppIntent.init()(v23);
    uint64_t v16 = v23[0];
    uint64_t v17 = v23[1];
    uint64_t v18 = v23[2];
    sub_1E3C3A130(v12, v15);
    sub_1E3C3A130(v15, v14);
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E77560();
    sub_1E3C3A2AC(v15, type metadata accessor for ShowEntity);
    *(unsigned char *)(v0 + 200) = 2;
    sub_1E3E77560();
    swift_release();
    swift_release();
    swift_release();
    sub_1E3C3A2AC(v12, type metadata accessor for ShowEntity);
    *(void *)(v0 + 16) = v16;
    *(void *)(v0 + 24) = v17;
    *(void *)(v0 + 32) = v18;
    sub_1E3C3A874(&qword_1EBFE2F40, (void (*)(uint64_t))type metadata accessor for ShowEntity);
    sub_1E3C3A30C();
    sub_1E3E77460();
    sub_1E3C1168C(v21, v22, v20);
    sub_1E3C3A2AC(v13, type metadata accessor for ShowEntity);
    swift_release();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1E3C35BB0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C35C58()
{
  sub_1E3C1168C(*(void **)(v0 + 144), *(void *)(v0 + 152), *(unsigned char *)(v0 + 201));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C35D0C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return MEMORY[0x1F4188298](sub_1E3C35D2C, 0, 0);
}

uint64_t sub_1E3C35D2C()
{
  sub_1E3E772F0();
  v0[14] = v0[10];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C35DFC;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C35DFC()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A914;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C35F18;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C35F18()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[17] = v0[11];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  type metadata accessor for FollowFeedIntent();
  sub_1E3C3A874(&qword_1EAE25238, (void (*)(uint64_t))type metadata accessor for FollowFeedIntent);
  void *v1 = v0;
  v1[1] = sub_1E3C36054;
  return MEMORY[0x1F41281F8](v0 + 7);
}

uint64_t sub_1E3C36054()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A934;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C3A928;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C36170(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 88) = a2;
  *(void *)(v2 + 64) = a1;
  return MEMORY[0x1F4188298](sub_1E3C36194, 0, 0);
}

uint64_t sub_1E3C36194()
{
  sub_1E3E772F0();
  v0[12] = v0[9];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C36264;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C36264()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C365A4;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C36380;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C36380()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[15] = v0[10];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  sub_1E3C3A8BC();
  void *v1 = v0;
  v1[1] = sub_1E3C36488;
  return MEMORY[0x1F41281F8](v0 + 7);
}

uint64_t sub_1E3C36488()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C36670;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C36608;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C365A4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C36608()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3C36670()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C366E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  return MEMORY[0x1F4188298](sub_1E3C36704, 0, 0);
}

uint64_t sub_1E3C36704()
{
  sub_1E3E772F0();
  v0[12] = v0[7];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C367D4;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C367D4()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C365A4;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C368F0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C368F0()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[15] = v0[8];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  type metadata accessor for PlayEpisodeIntent();
  sub_1E3C3A874(qword_1EBFE54D0, (void (*)(uint64_t))type metadata accessor for PlayEpisodeIntent);
  void *v1 = v0;
  v1[1] = sub_1E3C36A1C;
  uint64_t v2 = v0[9];
  return MEMORY[0x1F41281F8](v2);
}

uint64_t sub_1E3C36A1C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C36670;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C36B38;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C36B38()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C36B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  return MEMORY[0x1F4188298](sub_1E3C36BC0, 0, 0);
}

uint64_t sub_1E3C36BC0()
{
  sub_1E3E772F0();
  v0[12] = v0[7];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C36C90;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C36C90()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A918;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C36DAC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C36DAC()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[15] = v0[8];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  type metadata accessor for OpenTranscriptIntent();
  sub_1E3C3A874(&qword_1EAE25280, (void (*)(uint64_t))type metadata accessor for OpenTranscriptIntent);
  void *v1 = v0;
  v1[1] = sub_1E3C36ED8;
  uint64_t v2 = v0[9];
  return MEMORY[0x1F41281F8](v2);
}

uint64_t sub_1E3C36ED8()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A92C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C3A924;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C36FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  return MEMORY[0x1F4188298](sub_1E3C37018, 0, 0);
}

uint64_t sub_1E3C37018()
{
  sub_1E3E772F0();
  v0[12] = v0[7];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C370E8;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C370E8()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A918;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C37204;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C37204()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[15] = v0[8];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  type metadata accessor for UpdateEpisodePlayStateIntent();
  sub_1E3C3A874(&qword_1EAE25258, (void (*)(uint64_t))type metadata accessor for UpdateEpisodePlayStateIntent);
  void *v1 = v0;
  v1[1] = sub_1E3C36ED8;
  uint64_t v2 = v0[9];
  return MEMORY[0x1F41281F8](v2);
}

uint64_t sub_1E3C37330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  v3[7] = a2;
  return MEMORY[0x1F4188298](sub_1E3C37354, 0, 0);
}

uint64_t sub_1E3C37354()
{
  sub_1E3E772F0();
  v0[12] = v0[8];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C37424;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C37424()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A918;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C37540;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C37540()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[15] = v0[9];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  sub_1E3C3A820();
  void *v1 = v0;
  v1[1] = sub_1E3C36ED8;
  uint64_t v2 = v0[10];
  return MEMORY[0x1F41281F8](v2);
}

uint64_t sub_1E3C3763C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  return MEMORY[0x1F4188298](sub_1E3C37660, 0, 0);
}

uint64_t sub_1E3C37660()
{
  sub_1E3E772F0();
  v0[12] = v0[7];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C37730;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C37730()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A918;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C3784C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C3784C()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[15] = v0[8];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  type metadata accessor for PlayStationIntent();
  sub_1E3C3A874(&qword_1EAE25248, (void (*)(uint64_t))type metadata accessor for PlayStationIntent);
  void *v1 = v0;
  v1[1] = sub_1E3C36ED8;
  uint64_t v2 = v0[9];
  return MEMORY[0x1F41281F8](v2);
}

uint64_t sub_1E3C37978(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return MEMORY[0x1F4188298](sub_1E3C37998, 0, 0);
}

uint64_t sub_1E3C37998()
{
  sub_1E3E772F0();
  v0[14] = v0[10];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C37A68;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C37A68()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C37DDC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C37B84;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C37B84()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[17] = v0[11];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  type metadata accessor for FollowFeedIntent();
  sub_1E3C3A874(&qword_1EAE25238, (void (*)(uint64_t))type metadata accessor for FollowFeedIntent);
  void *v1 = v0;
  v1[1] = sub_1E3C37CC0;
  return MEMORY[0x1F41281F8](v0 + 7);
}

uint64_t sub_1E3C37CC0()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C37EAC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C37E40;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C37DDC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C37E40()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 72);
  return v3(v1, v2, v4);
}

uint64_t sub_1E3C37EAC()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C37F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  v3[7] = a2;
  return MEMORY[0x1F4188298](sub_1E3C37F40, 0, 0);
}

uint64_t sub_1E3C37F40()
{
  sub_1E3E772F0();
  v0[12] = v0[8];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C38010;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C38010()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C365A4;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C3812C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C3812C()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[15] = v0[9];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  sub_1E3C3A7CC();
  void *v1 = v0;
  v1[1] = sub_1E3C36A1C;
  uint64_t v2 = v0[10];
  return MEMORY[0x1F41281F8](v2);
}

uint64_t sub_1E3C38228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = a3;
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 56) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 72) = v4;
  *(unsigned char *)(v3 + 88) = *(unsigned char *)(a2 + 32);
  return MEMORY[0x1F4188298](sub_1E3C3825C, 0, 0);
}

uint64_t sub_1E3C3825C()
{
  sub_1E3E772F0();
  v0[16] = v0[12];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[17] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C3832C;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C3832C()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C38660;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C38448;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C38448()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[19] = v0[13];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[20] = v1;
  sub_1E3C3A778();
  void *v1 = v0;
  v1[1] = sub_1E3C38544;
  uint64_t v2 = v0[14];
  return MEMORY[0x1F41281F8](v2);
}

uint64_t sub_1E3C38544()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C386C4;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C36B38;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C38660()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C386C4()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C38734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = a3;
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 56) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 72) = v4;
  *(unsigned char *)(v3 + 88) = *(unsigned char *)(a2 + 32);
  return MEMORY[0x1F4188298](sub_1E3C38768, 0, 0);
}

uint64_t sub_1E3C38768()
{
  sub_1E3E772F0();
  v0[16] = v0[12];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[17] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C38838;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C38838()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A91C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C38954;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C38954()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[19] = v0[13];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[20] = v1;
  sub_1E3C3A778();
  void *v1 = v0;
  v1[1] = sub_1E3C38A50;
  uint64_t v2 = v0[14];
  return MEMORY[0x1F41281F8](v2);
}

uint64_t sub_1E3C38A50()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A938;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C3A924;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C38B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  v3[7] = a2;
  return MEMORY[0x1F4188298](sub_1E3C38B90, 0, 0);
}

uint64_t sub_1E3C38B90()
{
  sub_1E3E772F0();
  v0[12] = v0[8];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C38C60;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C38C60()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A918;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C38D7C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C38D7C()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[15] = v0[9];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  sub_1E3C26608();
  void *v1 = v0;
  v1[1] = sub_1E3C36ED8;
  uint64_t v2 = v0[10];
  return MEMORY[0x1F41281F8](v2);
}

uint64_t sub_1E3C38E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  v3[7] = a2;
  return MEMORY[0x1F4188298](sub_1E3C38E9C, 0, 0);
}

uint64_t sub_1E3C38E9C()
{
  sub_1E3E772F0();
  v0[12] = v0[8];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C38F6C;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C38F6C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A918;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C39088;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C39088()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[15] = v0[9];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  sub_1E3C17D34();
  void *v1 = v0;
  v1[1] = sub_1E3C36ED8;
  uint64_t v2 = v0[10];
  return MEMORY[0x1F41281F8](v2);
}

uint64_t sub_1E3C39184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 80) = a1;
  *(void *)(v4 + 88) = a4;
  return MEMORY[0x1F4188298](sub_1E3C391A4, 0, 0);
}

uint64_t sub_1E3C391A4()
{
  sub_1E3E772F0();
  v0[12] = v0[8];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C39274;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C39274()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C365A4;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C39390;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C39390()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[15] = v0[9];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  type metadata accessor for FetchShowLatestEpisodesIntent();
  sub_1E3C3A874(&qword_1EAE251F8, (void (*)(uint64_t))type metadata accessor for FetchShowLatestEpisodesIntent);
  void *v1 = v0;
  v1[1] = sub_1E3C36488;
  return MEMORY[0x1F41281F8](v0 + 7);
}

uint64_t sub_1E3C394CC(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return MEMORY[0x1F4188298](sub_1E3C394EC, 0, 0);
}

uint64_t sub_1E3C394EC()
{
  sub_1E3E772F0();
  v0[11] = v0[8];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C395BC;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C395BC()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C398EC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C396D8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C396D8()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[14] = v0[9];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  sub_1E3C3A724();
  void *v1 = v0;
  v1[1] = sub_1E3C397D0;
  return MEMORY[0x1F41281F8](v0 + 7);
}

uint64_t sub_1E3C397D0()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C39950;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C36608;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C398EC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C39950()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C399C0(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return MEMORY[0x1F4188298](sub_1E3C399E0, 0, 0);
}

uint64_t sub_1E3C399E0()
{
  sub_1E3E772F0();
  v0[11] = v0[8];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C39AB0;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C39AB0()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A910;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C39BCC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C39BCC()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E772F0();
  v0[14] = v0[9];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  sub_1E3C3A6D0();
  void *v1 = v0;
  v1[1] = sub_1E3C39CC4;
  return MEMORY[0x1F41281F8](v0 + 7);
}

uint64_t sub_1E3C39CC4()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C3A920;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C3A930;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C39DE0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24018 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE250F0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C39E90()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25120);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25128);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25138);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3C3A024(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return FollowRSSFeedAppIntent.perform()(a1);
}

uint64_t sub_1E3C3A0C0(uint64_t a1)
{
  unint64_t v2 = sub_1E3C3479C();

  return MEMORY[0x1F40D3C90](a1, v2);
}

uint64_t sub_1E3C3A0FC()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t sub_1E3C3A130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShowEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C3A194(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25160);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1E3C3A1F4()
{
  unint64_t result = qword_1EAE25180;
  if (!qword_1EAE25180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25180);
  }
  return result;
}

uint64_t sub_1E3C3A248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShowEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C3A2AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1E3C3A30C()
{
  unint64_t result = qword_1EAE25188;
  if (!qword_1EAE25188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25188);
  }
  return result;
}

unint64_t sub_1E3C3A364()
{
  unint64_t result = qword_1EAE25190;
  if (!qword_1EAE25190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25190);
  }
  return result;
}

unint64_t sub_1E3C3A3BC()
{
  unint64_t result = qword_1EAE25198;
  if (!qword_1EAE25198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25198);
  }
  return result;
}

uint64_t sub_1E3C3A410()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C3A444()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for FollowRSSFeedAppIntent()
{
  swift_release();

  return swift_release();
}

void *_s10PodcastsUI22FollowRSSFeedAppIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1E3E775E0();
  sub_1E3E775E0();
  return a1;
}

void *assignWithCopy for FollowRSSFeedAppIntent(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1E3E775E0();
  swift_release();
  a1[1] = a2[1];
  sub_1E3E775E0();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FollowRSSFeedAppIntent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowRSSFeedAppIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowRSSFeedAppIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowRSSFeedAppIntent()
{
  return &type metadata for FollowRSSFeedAppIntent;
}

uint64_t sub_1E3C3A61C()
{
  return sub_1E3C10DE8(&qword_1EAE251A8, &qword_1EAE251B0);
}

uint64_t sub_1E3C3A658()
{
  return sub_1E3C10DE8(&qword_1EAE251B8, &qword_1EAE251C0);
}

uint64_t sub_1E3C3A694()
{
  return sub_1E3C10DE8(&qword_1EAE251C8, &qword_1EAE251C0);
}

unint64_t sub_1E3C3A6D0()
{
  unint64_t result = qword_1EAE251D8;
  if (!qword_1EAE251D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE251D8);
  }
  return result;
}

unint64_t sub_1E3C3A724()
{
  unint64_t result = qword_1EAE251E8;
  if (!qword_1EAE251E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE251E8);
  }
  return result;
}

unint64_t sub_1E3C3A778()
{
  unint64_t result = qword_1EBFE5650;
  if (!qword_1EBFE5650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE5650);
  }
  return result;
}

unint64_t sub_1E3C3A7CC()
{
  unint64_t result = qword_1EAE25228;
  if (!qword_1EAE25228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25228);
  }
  return result;
}

unint64_t sub_1E3C3A820()
{
  unint64_t result = qword_1EAE25268;
  if (!qword_1EAE25268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25268);
  }
  return result;
}

uint64_t sub_1E3C3A874(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3C3A8BC()
{
  unint64_t result = qword_1EAE25290;
  if (!qword_1EAE25290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25290);
  }
  return result;
}

uint64_t ThinClientGlobalStateRepository.init(asPartOf:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CA0);
  sub_1E3E7BE20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CA8);
  sub_1E3E7BE20();
  uint64_t v0 = sub_1E3E7A3A0();
  swift_release();
  return v0;
}

unint64_t static OpenTranscriptIntent.kind.getter()
{
  return 0xD000000000000014;
}

uint64_t OpenTranscriptIntent.episode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C2ACB0(v1, a1);
}

void sub_1E3C3A9F0(void *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x80000001E3E87840;
}

uint64_t getEnumTagSinglePayload for OpenTranscriptIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C3AA24);
}

uint64_t sub_1E3C3AA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeEntity(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OpenTranscriptIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C3AAA4);
}

uint64_t sub_1E3C3AAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeEntity(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for OpenTranscriptIntent()
{
  uint64_t result = qword_1EBFE37D0;
  if (!qword_1EBFE37D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3C3AB60(uint64_t a1)
{
  uint64_t v2 = sub_1E3E775F0();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v28 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE254B8);
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE254C0);
  MEMORY[0x1F4188790](v7);
  unint64_t v8 = sub_1E3C46390();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  unint64_t v32 = sub_1E3C469CC();
  uint64_t v33 = a1;
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v31 = sub_1E3E77610();
  uint64_t v9 = v35;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v34 + 8);
  v34 += 8;
  uint64_t v36 = v10;
  v10(v6, v35);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v12 = v28;
  uint64_t v11 = v29;
  uint64_t v13 = v30;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v28, *MEMORY[0x1E4F184E0], v30);
  sub_1E3E776A0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v13);
  sub_1E3E776C0();
  sub_1E3E776E0();
  v24[1] = v8;
  uint64_t v30 = sub_1E3E77610();
  uint64_t v14 = v36;
  v36(v6, v9);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v29 = sub_1E3E77610();
  v14(v6, v9);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v28 = (char *)sub_1E3E77610();
  uint64_t v15 = v35;
  v36(v6, v35);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  unint64_t v26 = 0xD000000000000018;
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v27 = sub_1E3E77610();
  v36(v6, v15);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v25 = sub_1E3E77610();
  uint64_t v16 = v36;
  v36(v6, v35);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v17 = sub_1E3E77610();
  v16(v6, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE254C8);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1E3E878E0;
  uint64_t v19 = v30;
  *(void *)(v18 + 32) = v31;
  *(void *)(v18 + 40) = v19;
  char v20 = v28;
  *(void *)(v18 + 48) = v29;
  *(void *)(v18 + 56) = v20;
  uint64_t v21 = v25;
  *(void *)(v18 + 64) = v27;
  *(void *)(v18 + 72) = v21;
  *(void *)(v18 + 80) = v17;
  uint64_t v22 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1E3C3B3E4(uint64_t a1)
{
  return sub_1E3C3F554(a1, (uint64_t)&unk_1E3E87BF0, (void (*)(uint64_t))sub_1E3C46390);
}

uint64_t sub_1E3C3B418()
{
  return sub_1E3C4088C();
}

uint64_t sub_1E3C3B444(uint64_t a1)
{
  uint64_t v16 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE254A0);
  uint64_t v18 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE254A8);
  MEMORY[0x1F4188790](v4);
  sub_1E3C463E4();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  v12[1] = sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v15 = sub_1E3E77610();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v18 + 8);
  v18 += 8;
  v12[0] = v1;
  v5(v3, v1);
  uint64_t v17 = v5;
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v14 = sub_1E3E77610();
  v5(v3, v1);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v13 = sub_1E3E77610();
  uint64_t v6 = v12[0];
  v17(v3, v12[0]);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v7 = sub_1E3E77610();
  v17(v3, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE254B0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1E3E878F0;
  uint64_t v9 = v14;
  *(void *)(v8 + 32) = v15;
  *(void *)(v8 + 40) = v9;
  *(void *)(v8 + 48) = v13;
  *(void *)(v8 + 56) = v7;
  uint64_t v10 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1E3C3B99C()
{
  uint64_t v0 = sub_1E3E77680();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3C463E4();
  sub_1E3E77670();
  uint64_t v4 = sub_1E3E77660();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25320);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E86660;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1E3E77650();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3C3BB34()
{
  return sub_1E3C4088C();
}

uint64_t sub_1E3C3BB60(uint64_t a1)
{
  uint64_t v36 = a1;
  uint64_t v1 = sub_1E3E775F0();
  uint64_t v30 = *(void *)(v1 - 8);
  uint64_t v31 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v28 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25488);
  uint64_t v3 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25490);
  MEMORY[0x1F4188790](v6);
  unint64_t v7 = sub_1E3C46438();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v8 = sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v32 = sub_1E3E77610();
  uint64_t v9 = v3 + 8;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v10 = v33;
  v34(v5, v33);
  uint64_t v35 = v9;
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v37 = v8;
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v29 = sub_1E3E77610();
  v34(v5, v10);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  v25[1] = v7;
  uint64_t v27 = sub_1E3E77610();
  uint64_t v12 = v33;
  uint64_t v11 = v34;
  v34(v5, v33);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v26 = sub_1E3E77610();
  v11(v5, v12);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v14 = v30;
  uint64_t v13 = v31;
  uint64_t v15 = v28;
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v28, *MEMORY[0x1E4F184E0], v31);
  sub_1E3E776A0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v13);
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v31 = sub_1E3E77610();
  uint64_t v17 = v33;
  uint64_t v16 = v34;
  v34(v5, v33);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v30 = sub_1E3E77610();
  v16(v5, v17);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v18 = sub_1E3E77610();
  v16(v5, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25498);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1E3E878E0;
  uint64_t v20 = v29;
  *(void *)(v19 + 32) = v32;
  *(void *)(v19 + 40) = v20;
  uint64_t v21 = v26;
  *(void *)(v19 + 48) = v27;
  *(void *)(v19 + 56) = v21;
  uint64_t v22 = v30;
  *(void *)(v19 + 64) = v31;
  *(void *)(v19 + 72) = v22;
  *(void *)(v19 + 80) = v18;
  uint64_t v23 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1E3C3C460()
{
  uint64_t v0 = sub_1E3E77680();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3C46438();
  sub_1E3E77670();
  uint64_t v4 = sub_1E3E77660();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25320);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E86660;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1E3E77650();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3C3C5F8(uint64_t a1)
{
  uint64_t v42 = sub_1E3E775F0();
  uint64_t v46 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25470);
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25478);
  MEMORY[0x1F4188790](v6);
  sub_1E3C4648C();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v7 = sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v44 = sub_1E3E77610();
  uint64_t v8 = v50 + 8;
  double v49 = *(void (**)(char *, uint64_t))(v50 + 8);
  v49(v5, v51);
  uint64_t v50 = v8;
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v47 = a1;
  uint64_t v48 = v7;
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v43 = sub_1E3E77610();
  v49(v5, v51);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v40 = sub_1E3E77610();
  uint64_t v9 = v51;
  uint64_t v10 = v49;
  v49(v5, v51);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v39 = sub_1E3E77610();
  v10(v5, v9);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v38 = sub_1E3E77610();
  v49(v5, v51);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  double v45 = v5;
  sub_1E3E776E0();
  uint64_t v37 = sub_1E3E77610();
  uint64_t v11 = v51;
  uint64_t v12 = v49;
  v49(v5, v51);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v13 = v45;
  sub_1E3E776E0();
  uint64_t v36 = sub_1E3E77610();
  v12(v13, v11);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v14 = *MEMORY[0x1E4F184E0];
  uint64_t v15 = v46;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 104);
  uint64_t v16 = v41;
  uint64_t v17 = v42;
  v34(v41, v14, v42);
  sub_1E3E776A0();
  uint64_t v18 = v15 + 8;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v46 = v18;
  v19(v16, v17);
  sub_1E3E776C0();
  uint64_t v20 = v45;
  sub_1E3E776E0();
  uint64_t v35 = sub_1E3E77610();
  v49(v20, v51);
  sub_1E3E776D0();
  sub_1E3E776C0();
  v34(v16, v14, v17);
  sub_1E3E776A0();
  v19(v16, v17);
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v21 = v45;
  sub_1E3E776E0();
  uint64_t v46 = sub_1E3E77610();
  uint64_t v22 = v21;
  uint64_t v23 = v21;
  uint64_t v24 = v51;
  uint64_t v25 = v49;
  v49(v22, v51);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v26 = sub_1E3E77610();
  v25(v23, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25480);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1E3E87900;
  uint64_t v28 = v43;
  *(void *)(v27 + 32) = v44;
  *(void *)(v27 + 40) = v28;
  uint64_t v29 = v39;
  *(void *)(v27 + 48) = v40;
  *(void *)(v27 + 56) = v29;
  uint64_t v30 = v37;
  *(void *)(v27 + 64) = v38;
  *(void *)(v27 + 72) = v30;
  uint64_t v31 = v35;
  *(void *)(v27 + 80) = v36;
  *(void *)(v27 + 88) = v31;
  *(void *)(v27 + 96) = v46;
  *(void *)(v27 + 104) = v26;
  uint64_t v32 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_1E3C3D188()
{
  uint64_t v0 = sub_1E3E77680();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3C4648C();
  sub_1E3E77670();
  uint64_t v4 = sub_1E3E77660();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25320);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E86660;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1E3E77650();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3C3D324(uint64_t a1)
{
  uint64_t v2 = sub_1E3E775F0();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v38 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25458);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25460);
  MEMORY[0x1F4188790](v8);
  sub_1E3C464E0();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v9 = sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  uint64_t v44 = a1;
  uint64_t v45 = v9;
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  uint64_t v33 = 0x80000001E3E9C8D0;
  uint64_t v34 = 0xD00000000000001ALL;
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v39 = sub_1E3E77610();
  uint64_t v10 = v46;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v47 + 8);
  v47 += 8;
  v43(v7, v46);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v37 = sub_1E3E77610();
  uint64_t v11 = v43;
  v43(v7, v10);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v42 = v7;
  sub_1E3E776E0();
  uint64_t v36 = sub_1E3E77610();
  v11(v7, v46);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v12 = v42;
  sub_1E3E776E0();
  uint64_t v35 = sub_1E3E77610();
  uint64_t v13 = v12;
  uint64_t v14 = v43;
  v43(v13, v46);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v15 = v42;
  sub_1E3E776E0();
  uint64_t v34 = sub_1E3E77610();
  uint64_t v16 = v15;
  uint64_t v17 = v46;
  v14(v16, v46);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v18 = v42;
  sub_1E3E776E0();
  uint64_t v33 = sub_1E3E77610();
  uint64_t v19 = v18;
  v14(v18, v17);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v21 = v40;
  uint64_t v20 = v41;
  uint64_t v22 = v38;
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v38, *MEMORY[0x1E4F184E0], v41);
  sub_1E3E776A0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v20);
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v41 = sub_1E3E77610();
  uint64_t v23 = v46;
  uint64_t v24 = v43;
  v43(v18, v46);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v25 = sub_1E3E77610();
  v24(v19, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25468);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1E3E87910;
  uint64_t v27 = v37;
  *(void *)(v26 + 32) = v39;
  *(void *)(v26 + 40) = v27;
  uint64_t v28 = v35;
  *(void *)(v26 + 48) = v36;
  *(void *)(v26 + 56) = v28;
  uint64_t v29 = v33;
  *(void *)(v26 + 64) = v34;
  *(void *)(v26 + 72) = v29;
  *(void *)(v26 + 80) = v41;
  *(void *)(v26 + 88) = v25;
  uint64_t v30 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1E3C3DCB8()
{
  uint64_t v0 = sub_1E3E77680();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3C464E0();
  sub_1E3E77670();
  uint64_t v4 = sub_1E3E77660();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25320);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E86660;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1E3E77650();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3C3DE50(uint64_t a1)
{
  uint64_t v45 = a1;
  uint64_t v1 = sub_1E3E775F0();
  uint64_t v40 = *(void *)(v1 - 8);
  uint64_t v41 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v39 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25440);
  uint64_t v3 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25448);
  MEMORY[0x1F4188790](v6);
  sub_1E3C46534();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v46 = sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v38 = sub_1E3E77610();
  uint64_t v8 = v3 + 8;
  uint64_t v7 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v9 = v47;
  v7(v5, v47);
  uint64_t v43 = v7;
  uint64_t v44 = v8;
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v37 = sub_1E3E77610();
  v7(v5, v9);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  uint64_t v32 = 0x80000001E3E9C880;
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v36 = sub_1E3E77610();
  uint64_t v10 = v47;
  v43(v5, v47);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v42 = v5;
  sub_1E3E776E0();
  uint64_t v35 = sub_1E3E77610();
  uint64_t v11 = v43;
  v43(v5, v10);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v12 = v42;
  sub_1E3E776E0();
  uint64_t v34 = sub_1E3E77610();
  v11(v12, v47);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v33 = sub_1E3E77610();
  uint64_t v13 = v47;
  v43(v12, v47);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v32 = sub_1E3E77610();
  uint64_t v14 = v43;
  v43(v12, v13);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v31 = sub_1E3E77610();
  v14(v12, v47);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v15 = v42;
  sub_1E3E776E0();
  uint64_t v30 = sub_1E3E77610();
  uint64_t v16 = v15;
  uint64_t v17 = v15;
  uint64_t v18 = v47;
  v14(v16, v47);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v20 = v39;
  uint64_t v19 = v40;
  uint64_t v21 = v41;
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v39, *MEMORY[0x1E4F184E0], v41);
  sub_1E3E776A0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v21);
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v22 = sub_1E3E77610();
  v14(v17, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25450);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1E3E87900;
  uint64_t v24 = v37;
  *(void *)(v23 + 32) = v38;
  *(void *)(v23 + 40) = v24;
  uint64_t v25 = v35;
  *(void *)(v23 + 48) = v36;
  *(void *)(v23 + 56) = v25;
  uint64_t v26 = v33;
  *(void *)(v23 + 64) = v34;
  *(void *)(v23 + 72) = v26;
  uint64_t v27 = v31;
  *(void *)(v23 + 80) = v32;
  *(void *)(v23 + 88) = v27;
  *(void *)(v23 + 96) = v30;
  *(void *)(v23 + 104) = v22;
  uint64_t v28 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1E3C3E9C8()
{
  uint64_t v0 = sub_1E3E77680();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3C46534();
  sub_1E3E77670();
  uint64_t v4 = sub_1E3E77660();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25320);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E86660;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1E3E77650();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3C3EB60(uint64_t a1)
{
  uint64_t v32 = a1;
  uint64_t v1 = sub_1E3E775F0();
  uint64_t v26 = *(void *)(v1 - 8);
  uint64_t v27 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v25 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25428);
  uint64_t v3 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25430);
  MEMORY[0x1F4188790](v6);
  unint64_t v7 = sub_1E3C46588();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  unint64_t v35 = sub_1E3C469CC();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v30 = sub_1E3E77610();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v9 = v33;
  v8(v5, v33);
  uint64_t v34 = v8;
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  uint64_t v24 = 0x80000001E3E9C7A0;
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v29 = sub_1E3E77610();
  v8(v5, v9);
  uint64_t v31 = v3 + 8;
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v28 = sub_1E3E77610();
  v34(v5, v33);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v11 = v25;
  uint64_t v10 = v26;
  uint64_t v12 = v27;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v25, *MEMORY[0x1E4F184E0], v27);
  sub_1E3E776A0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v11, v12);
  sub_1E3E776C0();
  sub_1E3E776E0();
  v23[1] = v7;
  uint64_t v27 = sub_1E3E77610();
  uint64_t v14 = v33;
  uint64_t v13 = v34;
  v34(v5, v33);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v26 = sub_1E3E77610();
  v13(v5, v14);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v25 = (char *)sub_1E3E77610();
  v34(v5, v14);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v24 = sub_1E3E77610();
  uint64_t v15 = v34;
  v34(v5, v14);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v16 = sub_1E3E77610();
  v15(v5, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25438);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1E3E87910;
  uint64_t v18 = v29;
  *(void *)(v17 + 32) = v30;
  *(void *)(v17 + 40) = v18;
  uint64_t v19 = v27;
  *(void *)(v17 + 48) = v28;
  *(void *)(v17 + 56) = v19;
  uint64_t v20 = v25;
  *(void *)(v17 + 64) = v26;
  *(void *)(v17 + 72) = v20;
  *(void *)(v17 + 80) = v24;
  *(void *)(v17 + 88) = v16;
  uint64_t v21 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1E3C3F520(uint64_t a1)
{
  return sub_1E3C3F554(a1, (uint64_t)&unk_1E3E87B00, (void (*)(uint64_t))sub_1E3C46588);
}

uint64_t sub_1E3C3F554(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = sub_1E3E77680();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1E3C469CC();
  sub_1E3E775E0();
  uint64_t v8 = swift_release();
  a3(v8);
  sub_1E3E77670();
  uint64_t v9 = sub_1E3E77660();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25320);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1E3E86660;
  *(void *)(v10 + 32) = v9;
  uint64_t v11 = sub_1E3E77650();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1E3C3F6C4()
{
  return sub_1E3C4088C();
}

uint64_t sub_1E3C3F6F0(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v1 = sub_1E3E775F0();
  uint64_t v29 = *(void *)(v1 - 8);
  uint64_t v30 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v28 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25410);
  uint64_t v3 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25418);
  MEMORY[0x1F4188790](v6);
  sub_1E3C465DC();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  unint64_t v33 = sub_1E3C469CC();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v27 = sub_1E3E77610();
  uint64_t v7 = v3 + 8;
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v9 = v35;
  v8(v5, v35);
  uint64_t v32 = v8;
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v26 = sub_1E3E77610();
  v8(v5, v9);
  uint64_t v31 = v7;
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v25 = sub_1E3E77610();
  v32(v5, v35);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v24 = sub_1E3E77610();
  uint64_t v10 = v35;
  uint64_t v11 = v32;
  v32(v5, v35);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v23 = sub_1E3E77610();
  v11(v5, v10);
  uint64_t v12 = v11;
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v14 = v28;
  uint64_t v13 = v29;
  uint64_t v15 = v30;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v28, *MEMORY[0x1E4F184E0], v30);
  sub_1E3E776A0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v15);
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v16 = sub_1E3E77610();
  v12(v5, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25420);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1E3E87920;
  uint64_t v18 = v26;
  *(void *)(v17 + 32) = v27;
  *(void *)(v17 + 40) = v18;
  uint64_t v19 = v24;
  *(void *)(v17 + 48) = v25;
  *(void *)(v17 + 56) = v19;
  *(void *)(v17 + 64) = v23;
  *(void *)(v17 + 72) = v16;
  uint64_t v20 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1E3C3FE98(uint64_t a1)
{
  return sub_1E3C3F554(a1, (uint64_t)&unk_1E3E87AD8, (void (*)(uint64_t))sub_1E3C465DC);
}

uint64_t sub_1E3C3FECC(uint64_t a1)
{
  uint64_t v32 = a1;
  uint64_t v1 = sub_1E3E775F0();
  uint64_t v30 = *(void *)(v1 - 8);
  uint64_t v31 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v29 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE253F8);
  uint64_t v36 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25400);
  MEMORY[0x1F4188790](v6);
  sub_1E3C46630();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  unint64_t v33 = sub_1E3C469CC();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v28 = sub_1E3E77610();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v36 + 8);
  v36 += 8;
  v34(v5, v3);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v27 = sub_1E3E77610();
  uint64_t v35 = v3;
  v34(v5, v3);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  uint64_t v24 = 0x80000001E3E9C6B0;
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v26 = sub_1E3E77610();
  v34(v5, v3);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v25 = sub_1E3E77610();
  uint64_t v7 = v34;
  v34(v5, v35);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v24 = sub_1E3E77610();
  uint64_t v8 = v35;
  v7(v5, v35);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v23 = sub_1E3E77610();
  uint64_t v9 = v8;
  uint64_t v10 = v34;
  v34(v5, v9);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v22 = sub_1E3E77610();
  v10(v5, v35);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v11 = v29;
  uint64_t v12 = v30;
  uint64_t v13 = v31;
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, *MEMORY[0x1E4F184E0], v31);
  sub_1E3E776A0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v13);
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v14 = sub_1E3E77610();
  v10(v5, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25408);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1E3E87910;
  uint64_t v16 = v27;
  *(void *)(v15 + 32) = v28;
  *(void *)(v15 + 40) = v16;
  uint64_t v17 = v25;
  *(void *)(v15 + 48) = v26;
  *(void *)(v15 + 56) = v17;
  uint64_t v18 = v23;
  *(void *)(v15 + 64) = v24;
  *(void *)(v15 + 72) = v18;
  *(void *)(v15 + 80) = v22;
  *(void *)(v15 + 88) = v14;
  uint64_t v19 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1E3C40858(uint64_t a1)
{
  return sub_1E3C3F554(a1, (uint64_t)&unk_1E3E87AB0, (void (*)(uint64_t))sub_1E3C46630);
}

uint64_t sub_1E3C4088C()
{
  uint64_t v0 = sub_1E3E77630();
  uint64_t v1 = sub_1E3E77630();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25328);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1E3E86650;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v3 = sub_1E3E77620();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1E3C4091C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE253D8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C46684();
  sub_1E3E77690();
  uint64_t v14 = sub_1E3E77610();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v13 = sub_1E3E77610();
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v5 = sub_1E3E77610();
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v6 = sub_1E3E77610();
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v7 = sub_1E3E77610();
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v8 = sub_1E3E77610();
  v4(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE253E0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1E3E87920;
  uint64_t v10 = v13;
  *(void *)(v9 + 32) = v14;
  *(void *)(v9 + 40) = v10;
  *(void *)(v9 + 48) = v5;
  *(void *)(v9 + 56) = v6;
  *(void *)(v9 + 64) = v7;
  *(void *)(v9 + 72) = v8;
  uint64_t v11 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1E3C40C2C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE253C8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C466D8();
  sub_1E3E77690();
  uint64_t v20 = sub_1E3E77610();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v19 = sub_1E3E77610();
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v18 = sub_1E3E77610();
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v17 = sub_1E3E77610();
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v16 = sub_1E3E77610();
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v15 = sub_1E3E77610();
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v5 = sub_1E3E77610();
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v6 = sub_1E3E77610();
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v7 = sub_1E3E77610();
  v4(v3, v0);
  sub_1E3E77690();
  uint64_t v8 = sub_1E3E77610();
  v4(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE253D0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1E3E87900;
  uint64_t v10 = v19;
  *(void *)(v9 + 32) = v20;
  *(void *)(v9 + 40) = v10;
  uint64_t v11 = v17;
  *(void *)(v9 + 48) = v18;
  *(void *)(v9 + 56) = v11;
  uint64_t v12 = v15;
  *(void *)(v9 + 64) = v16;
  *(void *)(v9 + 72) = v12;
  *(void *)(v9 + 80) = v5;
  *(void *)(v9 + 88) = v6;
  *(void *)(v9 + 96) = v7;
  *(void *)(v9 + 104) = v8;
  uint64_t v13 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1E3C41088(uint64_t a1)
{
  uint64_t v46 = a1;
  uint64_t v41 = sub_1E3E775F0();
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v38 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE253B0);
  uint64_t v47 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE253B8);
  MEMORY[0x1F4188790](v4);
  sub_1E3C4672C();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v45 = sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v40 = sub_1E3E77610();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v47 + 8);
  v47 += 8;
  uint64_t v6 = v44;
  v5(v3, v44);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v37 = sub_1E3E77610();
  v5(v3, v6);
  uint64_t v43 = v5;
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v42 = v3;
  sub_1E3E776E0();
  uint64_t v36 = sub_1E3E77610();
  uint64_t v7 = v3;
  uint64_t v8 = v44;
  v5(v7, v44);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v9 = v42;
  sub_1E3E776E0();
  uint64_t v35 = sub_1E3E77610();
  v43(v9, v8);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v34 = sub_1E3E77610();
  uint64_t v10 = v9;
  uint64_t v11 = v43;
  uint64_t v12 = v44;
  v43(v10, v44);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v13 = v42;
  sub_1E3E776E0();
  uint64_t v33 = sub_1E3E77610();
  v11(v13, v12);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v32 = sub_1E3E77610();
  uint64_t v15 = v43;
  uint64_t v14 = v44;
  v43(v13, v44);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v31 = sub_1E3E77610();
  v15(v13, v14);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v16 = v38;
  uint64_t v17 = v39;
  uint64_t v18 = v41;
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, *MEMORY[0x1E4F184E0], v41);
  sub_1E3E776A0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v18);
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v41 = sub_1E3E77610();
  uint64_t v19 = v13;
  uint64_t v20 = v43;
  uint64_t v21 = v44;
  v43(v13, v44);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v22 = sub_1E3E77610();
  v20(v19, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE253C0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1E3E87900;
  uint64_t v24 = v37;
  *(void *)(v23 + 32) = v40;
  *(void *)(v23 + 40) = v24;
  uint64_t v25 = v35;
  *(void *)(v23 + 48) = v36;
  *(void *)(v23 + 56) = v25;
  uint64_t v26 = v33;
  *(void *)(v23 + 64) = v34;
  *(void *)(v23 + 72) = v26;
  uint64_t v27 = v31;
  *(void *)(v23 + 80) = v32;
  *(void *)(v23 + 88) = v27;
  *(void *)(v23 + 96) = v41;
  *(void *)(v23 + 104) = v22;
  uint64_t v28 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1E3C41C20()
{
  uint64_t v0 = sub_1E3E77680();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3C4672C();
  sub_1E3E77670();
  uint64_t v4 = sub_1E3E77660();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25320);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E86660;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1E3E77650();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3C41DB8()
{
  uint64_t v0 = sub_1E3E77630();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25328);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1E3E86660;
  *(void *)(v1 + 32) = v0;
  uint64_t v2 = sub_1E3E77620();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1E3C41E34(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v1 = sub_1E3E775F0();
  uint64_t v27 = *(void *)(v1 - 8);
  uint64_t v28 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v25 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25398);
  uint64_t v3 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE253A0);
  MEMORY[0x1F4188790](v6);
  sub_1E3C46780();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v33 = sub_1E3C4697C(&qword_1EBFE2F40, (void (*)(uint64_t))type metadata accessor for ShowEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v7 = sub_1E3E77610();
  uint64_t v9 = v3 + 8;
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v30 = v7;
  uint64_t v31 = v8;
  uint64_t v10 = v36;
  v8(v5, v36);
  uint64_t v32 = v9;
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  unint64_t v34 = 0x80000001E3E9C2F0;
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v29 = sub_1E3E77610();
  uint64_t v11 = v31;
  v31(v5, v10);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v26 = sub_1E3E77610();
  v11(v5, v36);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v13 = v27;
  uint64_t v12 = v28;
  uint64_t v14 = v25;
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v25, *MEMORY[0x1E4F184E0], v28);
  sub_1E3E776A0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v12);
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v28 = sub_1E3E77610();
  uint64_t v15 = v36;
  uint64_t v16 = v31;
  v31(v5, v36);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v27 = sub_1E3E77610();
  v16(v5, v15);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v25 = (char *)sub_1E3E77610();
  uint64_t v17 = v31;
  v31(v5, v36);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v18 = sub_1E3E77610();
  v17(v5, v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE253A8);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1E3E878E0;
  uint64_t v20 = v29;
  *(void *)(v19 + 32) = v30;
  *(void *)(v19 + 40) = v20;
  uint64_t v21 = v28;
  *(void *)(v19 + 48) = v26;
  *(void *)(v19 + 56) = v21;
  uint64_t v22 = v25;
  *(void *)(v19 + 64) = v27;
  *(void *)(v19 + 72) = v22;
  *(void *)(v19 + 80) = v18;
  uint64_t v23 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1E3C426FC()
{
  uint64_t v0 = sub_1E3E77680();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1E3C4697C(&qword_1EBFE2F40, (void (*)(uint64_t))type metadata accessor for ShowEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3C46780();
  sub_1E3E77670();
  uint64_t v4 = sub_1E3E77660();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25320);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E86660;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1E3E77650();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3C42898(uint64_t a1)
{
  uint64_t v26 = a1;
  uint64_t v23 = sub_1E3E775F0();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v20 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25380);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25388);
  MEMORY[0x1F4188790](v5);
  sub_1E3C3479C();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v24 = sub_1E3C4697C(&qword_1EAE25378, MEMORY[0x1E4F276F0]);
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v22 = sub_1E3E77610();
  uint64_t v6 = v25 + 8;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v18 = v2;
  v17(v4, v2);
  uint64_t v25 = v6;
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v19 = sub_1E3E77610();
  uint64_t v7 = v17;
  v17(v4, v2);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v9 = v20;
  uint64_t v8 = v21;
  uint64_t v10 = v23;
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v20, *MEMORY[0x1E4F184E0], v23);
  sub_1E3E776A0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v9, v10);
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v23 = sub_1E3E77610();
  uint64_t v11 = v18;
  v7(v4, v18);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v12 = sub_1E3E77610();
  v7(v4, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25390);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1E3E878F0;
  uint64_t v14 = v19;
  *(void *)(v13 + 32) = v22;
  *(void *)(v13 + 40) = v14;
  *(void *)(v13 + 48) = v23;
  *(void *)(v13 + 56) = v12;
  uint64_t v15 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1E3C42EA8()
{
  uint64_t v0 = sub_1E3E77680();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1E3C4697C(&qword_1EAE25378, MEMORY[0x1E4F276F0]);
  sub_1E3E775E0();
  swift_release();
  sub_1E3C3479C();
  sub_1E3E77670();
  uint64_t v4 = sub_1E3E77660();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25320);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E86660;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1E3E77650();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3C43040()
{
  uint64_t v0 = sub_1E3E77630();
  uint64_t v1 = sub_1E3E77630();
  uint64_t v2 = sub_1E3E77630();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25328);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1E3E87930;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = sub_1E3E77620();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1E3C43108(uint64_t a1)
{
  uint64_t v2 = sub_1E3E775F0();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v28 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25360);
  uint64_t v37 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25368);
  MEMORY[0x1F4188790](v6);
  sub_1E3C467D4();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v7 = sub_1E3C4697C(&qword_1EBFE2F40, (void (*)(uint64_t))type metadata accessor for ShowEntity);
  uint64_t v34 = a1;
  uint64_t v35 = v7;
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v31 = sub_1E3E77610();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v37 + 8);
  v37 += 8;
  uint64_t v8 = v33;
  v36(v5, v33);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v10 = v28;
  uint64_t v9 = v29;
  uint64_t v11 = v30;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v28, *MEMORY[0x1E4F184E0], v30);
  sub_1E3E776A0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v11);
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v30 = sub_1E3E77610();
  uint64_t v12 = v36;
  v36(v5, v8);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v29 = sub_1E3E77610();
  v12(v5, v8);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v32 = v5;
  sub_1E3E776E0();
  uint64_t v28 = (char *)sub_1E3E77610();
  uint64_t v13 = v33;
  v36(v5, v33);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v14 = v32;
  sub_1E3E776E0();
  uint64_t v27 = sub_1E3E77610();
  uint64_t v15 = v36;
  v36(v14, v13);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v16 = v32;
  sub_1E3E776E0();
  uint64_t v26 = sub_1E3E77610();
  uint64_t v17 = v16;
  uint64_t v18 = v33;
  v15(v16, v33);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v19 = sub_1E3E77610();
  v36(v17, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25370);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1E3E878E0;
  uint64_t v21 = v30;
  *(void *)(v20 + 32) = v31;
  *(void *)(v20 + 40) = v21;
  uint64_t v22 = v28;
  *(void *)(v20 + 48) = v29;
  *(void *)(v20 + 56) = v22;
  uint64_t v23 = v26;
  *(void *)(v20 + 64) = v27;
  *(void *)(v20 + 72) = v23;
  *(void *)(v20 + 80) = v19;
  uint64_t v24 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1E3C439E4()
{
  uint64_t v0 = sub_1E3E77680();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1E3C4697C(&qword_1EBFE2F40, (void (*)(uint64_t))type metadata accessor for ShowEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3C467D4();
  sub_1E3E77670();
  uint64_t v4 = sub_1E3E77660();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25320);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E86660;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1E3E77650();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3C43B7C(uint64_t a1)
{
  uint64_t v2 = sub_1E3E775F0();
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v27 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25348);
  uint64_t v36 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25350);
  MEMORY[0x1F4188790](v6);
  unint64_t v7 = sub_1E3C46828();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v32 = sub_1E3C4697C(&qword_1EBFE2F40, (void (*)(uint64_t))type metadata accessor for ShowEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v30 = sub_1E3E77610();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v36 + 8);
  v36 += 8;
  uint64_t v8 = v34;
  v35(v5, v34);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v33 = a1;
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v10 = v27;
  uint64_t v9 = v28;
  uint64_t v11 = v29;
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, *MEMORY[0x1E4F184E0], v29);
  sub_1E3E776A0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v11);
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v29 = sub_1E3E77610();
  uint64_t v12 = v35;
  v35(v5, v8);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  uint64_t v25 = 0x80000001E3E9C130;
  uint64_t v26 = 0xD000000000000017;
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v28 = sub_1E3E77610();
  uint64_t v13 = v34;
  v12(v5, v34);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  uint64_t v24 = 0x80000001E3E9C150;
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v27 = (char *)sub_1E3E77610();
  v35(v5, v13);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  unint64_t v31 = v7;
  uint64_t v26 = sub_1E3E77610();
  v35(v5, v34);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v25 = sub_1E3E77610();
  uint64_t v15 = v34;
  uint64_t v14 = v35;
  v35(v5, v34);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v24 = sub_1E3E77610();
  v14(v5, v15);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v16 = sub_1E3E77610();
  v14(v5, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25358);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1E3E87910;
  uint64_t v18 = v29;
  *(void *)(v17 + 32) = v30;
  *(void *)(v17 + 40) = v18;
  uint64_t v19 = v27;
  *(void *)(v17 + 48) = v28;
  *(void *)(v17 + 56) = v19;
  uint64_t v20 = v25;
  *(void *)(v17 + 64) = v26;
  *(void *)(v17 + 72) = v20;
  *(void *)(v17 + 80) = v24;
  *(void *)(v17 + 88) = v16;
  uint64_t v21 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1E3C44510(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShowEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v9 - v6;
  sub_1E3C3A130(a1, (uint64_t)&v9 - v6);
  sub_1E3C3A130((uint64_t)v7, (uint64_t)v4);
  sub_1E3E77560();
  return sub_1E3C46900((uint64_t)v7);
}

uint64_t sub_1E3C445D0()
{
  uint64_t v0 = sub_1E3E77680();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1E3C4697C(&qword_1EBFE2F40, (void (*)(uint64_t))type metadata accessor for ShowEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3C46828();
  sub_1E3E77670();
  uint64_t v4 = sub_1E3E77660();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25320);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E86660;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1E3E77650();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3C44768()
{
  uint64_t v0 = sub_1E3E77630();
  uint64_t v1 = sub_1E3E77630();
  uint64_t v2 = sub_1E3E77630();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25328);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1E3E87930;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = sub_1E3E77620();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1E3C44830(uint64_t a1)
{
  uint64_t v2 = sub_1E3E775F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v55 = v2;
  uint64_t v56 = v3;
  MEMORY[0x1F4188790](v2);
  double v54 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25330);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  uint64_t v60 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25338);
  MEMORY[0x1F4188790](v9);
  sub_1E3C4687C();
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v61 = sub_1E3C4697C(&qword_1EAE29130, (void (*)(uint64_t))type metadata accessor for StationEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v53 = sub_1E3E77610();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v60 + 8);
  v60 += 8;
  double v58 = v10;
  v10(v8, v59);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  uint64_t v57 = a1;
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v52 = sub_1E3E77610();
  uint64_t v11 = v59;
  v58(v8, v59);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v51 = sub_1E3E77610();
  uint64_t v12 = v58;
  v58(v8, v11);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v50 = sub_1E3E77610();
  v12(v8, v11);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v49 = sub_1E3E77610();
  uint64_t v13 = v8;
  uint64_t v14 = v8;
  uint64_t v15 = v58;
  v58(v13, v11);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v48 = sub_1E3E77610();
  v15(v14, v59);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  LODWORD(v45) = *MEMORY[0x1E4F184E0];
  uint64_t v17 = v55;
  uint64_t v16 = v56;
  uint64_t v18 = *(void (**)(void))(v56 + 104);
  uint64_t v43 = v56 + 104;
  uint64_t v44 = (void (*)(char *, void, uint64_t))v18;
  uint64_t v19 = v54;
  v18(v54);
  sub_1E3E776A0();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v56 = v16 + 8;
  uint64_t v42 = v20;
  v20(v19, v17);
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v47 = sub_1E3E77610();
  uint64_t v21 = v14;
  uint64_t v22 = v14;
  uint64_t v24 = v58;
  uint64_t v23 = v59;
  v58(v21, v59);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v46 = sub_1E3E77610();
  v24(v22, v23);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  uint64_t v25 = v54;
  uint64_t v26 = v55;
  v44(v54, v45, v55);
  sub_1E3E776A0();
  v42(v25, v26);
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v56 = sub_1E3E77610();
  uint64_t v27 = v59;
  uint64_t v28 = v58;
  v58(v22, v59);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v55 = sub_1E3E77610();
  v28(v22, v27);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  double v54 = (char *)sub_1E3E77610();
  v58(v22, v59);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v45 = sub_1E3E77610();
  uint64_t v30 = v58;
  uint64_t v29 = v59;
  v58(v22, v59);
  sub_1E3E776D0();
  sub_1E3E776C0();
  swift_getKeyPath();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E776B0();
  swift_release();
  sub_1E3E776C0();
  sub_1E3E776E0();
  uint64_t v31 = sub_1E3E77610();
  v30(v22, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25340);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1E3E86C70;
  uint64_t v33 = v52;
  *(void *)(v32 + 32) = v53;
  *(void *)(v32 + 40) = v33;
  uint64_t v34 = v50;
  *(void *)(v32 + 48) = v51;
  *(void *)(v32 + 56) = v34;
  uint64_t v35 = v48;
  *(void *)(v32 + 64) = v49;
  *(void *)(v32 + 72) = v35;
  uint64_t v36 = v46;
  *(void *)(v32 + 80) = v47;
  *(void *)(v32 + 88) = v36;
  uint64_t v37 = v55;
  *(void *)(v32 + 96) = v56;
  *(void *)(v32 + 104) = v37;
  uint64_t v38 = v45;
  *(void *)(v32 + 112) = v54;
  *(void *)(v32 + 120) = v38;
  *(void *)(v32 + 128) = v31;
  uint64_t v39 = sub_1E3E77600();
  swift_bridgeObjectRelease();
  return v39;
}

uint64_t sub_1E3C456BC()
{
  uint64_t v0 = sub_1E3E77680();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1E3C4697C(&qword_1EAE29130, (void (*)(uint64_t))type metadata accessor for StationEntity);
  sub_1E3E775E0();
  swift_release();
  sub_1E3C4687C();
  sub_1E3E77670();
  uint64_t v4 = sub_1E3E77660();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25320);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E86660;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1E3E77650();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3C45854()
{
  uint64_t v0 = sub_1E3E77630();
  uint64_t v1 = sub_1E3E77630();
  uint64_t v2 = sub_1E3E77630();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25328);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1E3E87930;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = sub_1E3E77620();
  swift_bridgeObjectRelease();
  return v4;
}

void sub_1E3C45908()
{
  qword_1EAE3BC68 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1E3C45924()
{
  if (qword_1EAE24028 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for PodcastsAppIntentsProvider()
{
  return &type metadata for PodcastsAppIntentsProvider;
}

uint64_t sub_1E3C45990()
{
  uint64_t v0 = sub_1E3E77710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DownloadEpisodesAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C46390();
  sub_1E3E77720();
  uint64_t v31 = sub_1E3E77700();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  MarkEpisodeAsPlayedAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C463E4();
  sub_1E3E77720();
  uint64_t v30 = sub_1E3E77700();
  v4(v3, v0);
  MarkEpisodeAsUnplayedAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C46438();
  sub_1E3E77720();
  uint64_t v29 = sub_1E3E77700();
  v4(v3, v0);
  PlayEpisodeAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C4648C();
  sub_1E3E77720();
  uint64_t v28 = sub_1E3E77700();
  v4(v3, v0);
  PlayEpisodeLastAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C464E0();
  sub_1E3E77720();
  uint64_t v27 = sub_1E3E77700();
  v4(v3, v0);
  PlayEpisodeNextAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C46534();
  sub_1E3E77720();
  uint64_t v26 = sub_1E3E77700();
  v4(v3, v0);
  RemoveEpisodesDownloadAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C46588();
  sub_1E3E77720();
  uint64_t v25 = sub_1E3E77700();
  v4(v3, v0);
  SaveEpisodeAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C465DC();
  sub_1E3E77720();
  uint64_t v24 = sub_1E3E77700();
  v4(v3, v0);
  UnsaveEpisodeAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C46630();
  sub_1E3E77720();
  uint64_t v23 = sub_1E3E77700();
  v4(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  LOBYTE(v32) = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  *(void *)&long long v34 = sub_1E3E77320();
  sub_1E3C46684();
  sub_1E3E77720();
  uint64_t v22 = sub_1E3E77700();
  v4(v3, v0);
  LOBYTE(v32) = 1;
  sub_1E3E7DD60();
  sub_1E3E77330();
  *(void *)&long long v34 = sub_1E3E77320();
  sub_1E3C466D8();
  sub_1E3E77720();
  uint64_t v21 = sub_1E3E77700();
  v4(v3, v0);
  ViewTranscriptAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C4672C();
  sub_1E3E77720();
  uint64_t v5 = sub_1E3E77700();
  v4(v3, v0);
  FetchShowLatestEpisodesAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  uint64_t v33 = v35;
  sub_1E3C46780();
  sub_1E3E77720();
  uint64_t v6 = sub_1E3E77700();
  v4(v3, v0);
  FollowRSSFeedAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C3479C();
  sub_1E3E77720();
  uint64_t v7 = sub_1E3E77700();
  v4(v3, v0);
  FollowShowAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C467D4();
  sub_1E3E77720();
  uint64_t v8 = sub_1E3E77700();
  v4(v3, v0);
  *(void *)&long long v34 = sub_1E3C5ED7C();
  *((void *)&v34 + 1) = v9;
  sub_1E3C46828();
  sub_1E3E77720();
  uint64_t v10 = sub_1E3E77700();
  v4(v3, v0);
  PlayStationAppIntent.init()((uint64_t *)&v34);
  long long v32 = v34;
  sub_1E3C4687C();
  sub_1E3E77720();
  uint64_t v11 = sub_1E3E77700();
  v4(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25318);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1E3E87940;
  uint64_t v13 = v30;
  *(void *)(v12 + 32) = v31;
  *(void *)(v12 + 40) = v13;
  uint64_t v14 = v28;
  *(void *)(v12 + 48) = v29;
  *(void *)(v12 + 56) = v14;
  uint64_t v15 = v26;
  *(void *)(v12 + 64) = v27;
  *(void *)(v12 + 72) = v15;
  uint64_t v16 = v24;
  *(void *)(v12 + 80) = v25;
  *(void *)(v12 + 88) = v16;
  uint64_t v17 = v22;
  *(void *)(v12 + 96) = v23;
  *(void *)(v12 + 104) = v17;
  *(void *)(v12 + 112) = v21;
  *(void *)(v12 + 120) = v5;
  *(void *)(v12 + 128) = v6;
  *(void *)(v12 + 136) = v7;
  *(void *)(v12 + 144) = v8;
  *(void *)(v12 + 152) = v10;
  *(void *)(v12 + 160) = v11;
  uint64_t v18 = sub_1E3E776F0();
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_1E3C46390()
{
  unint64_t result = qword_1EAE25298;
  if (!qword_1EAE25298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25298);
  }
  return result;
}

unint64_t sub_1E3C463E4()
{
  unint64_t result = qword_1EAE252A0;
  if (!qword_1EAE252A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE252A0);
  }
  return result;
}

unint64_t sub_1E3C46438()
{
  unint64_t result = qword_1EAE252A8;
  if (!qword_1EAE252A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE252A8);
  }
  return result;
}

unint64_t sub_1E3C4648C()
{
  unint64_t result = qword_1EAE252B0;
  if (!qword_1EAE252B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE252B0);
  }
  return result;
}

unint64_t sub_1E3C464E0()
{
  unint64_t result = qword_1EAE252B8;
  if (!qword_1EAE252B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE252B8);
  }
  return result;
}

unint64_t sub_1E3C46534()
{
  unint64_t result = qword_1EAE252C0;
  if (!qword_1EAE252C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE252C0);
  }
  return result;
}

unint64_t sub_1E3C46588()
{
  unint64_t result = qword_1EAE252C8;
  if (!qword_1EAE252C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE252C8);
  }
  return result;
}

unint64_t sub_1E3C465DC()
{
  unint64_t result = qword_1EAE252D0;
  if (!qword_1EAE252D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE252D0);
  }
  return result;
}

unint64_t sub_1E3C46630()
{
  unint64_t result = qword_1EAE252D8;
  if (!qword_1EAE252D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE252D8);
  }
  return result;
}

unint64_t sub_1E3C46684()
{
  unint64_t result = qword_1EAE252E0;
  if (!qword_1EAE252E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE252E0);
  }
  return result;
}

unint64_t sub_1E3C466D8()
{
  unint64_t result = qword_1EAE252E8;
  if (!qword_1EAE252E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE252E8);
  }
  return result;
}

unint64_t sub_1E3C4672C()
{
  unint64_t result = qword_1EAE252F0;
  if (!qword_1EAE252F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE252F0);
  }
  return result;
}

unint64_t sub_1E3C46780()
{
  unint64_t result = qword_1EAE252F8;
  if (!qword_1EAE252F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE252F8);
  }
  return result;
}

unint64_t sub_1E3C467D4()
{
  unint64_t result = qword_1EAE25300;
  if (!qword_1EAE25300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25300);
  }
  return result;
}

unint64_t sub_1E3C46828()
{
  unint64_t result = qword_1EAE25308;
  if (!qword_1EAE25308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25308);
  }
  return result;
}

unint64_t sub_1E3C4687C()
{
  unint64_t result = qword_1EAE25310;
  if (!qword_1EAE25310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25310);
  }
  return result;
}

uint64_t sub_1E3C468D8()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3C46900(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShowEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3C4697C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3C469CC()
{
  unint64_t result = qword_1EAE253E8;
  if (!qword_1EAE253E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE253F0);
    sub_1E3C4697C(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE253E8);
  }
  return result;
}

uint64_t PlayEpisodeAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v24 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v23 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25500);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E77B60();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v26 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v22 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25508);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v17 = type metadata accessor for EpisodeEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  uint64_t v18 = sub_1E3E77430();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v8, 1, 1, v18);
  v19(v5, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v23, *MEMORY[0x1E4F186F0], v24);
  sub_1E3C46EA0();
  uint64_t result = sub_1E3E775A0();
  uint64_t v21 = v25;
  *uint64_t v25 = v22;
  v21[1] = result;
  return result;
}

unint64_t sub_1E3C46EA0()
{
  unint64_t result = qword_1EBFE3060;
  if (!qword_1EBFE3060)
  {
    type metadata accessor for EpisodeEntity(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE3060);
  }
  return result;
}

uint64_t PlayEpisodeAppIntent.episode.getter()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3C46F1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C2ACB0(a1, (uint64_t)&v9 - v6);
  sub_1E3C2ACB0((uint64_t)v7, (uint64_t)v4);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C48778((uint64_t)v7, type metadata accessor for EpisodeEntity);
  swift_release();
  return swift_release();
}

uint64_t PlayEpisodeAppIntent.episode.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3C2ACB0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E77560();
  return sub_1E3C48778(a1, type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3C470BC()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE254D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE254D0);
  return sub_1E3E77B40();
}

uint64_t static PlayEpisodeAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24030 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE254D0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C471CC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  __swift_allocate_value_buffer(v0, qword_1EAE254E8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EAE254E8);
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t static PlayEpisodeAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24038 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE254E8);
  swift_beginAccess();
  return sub_1E3C47314(v3, a1);
}

uint64_t sub_1E3C47314(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static PlayEpisodeAppIntent.description.setter(uint64_t a1)
{
  if (qword_1EAE24038 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE254E8);
  swift_beginAccess();
  sub_1E3C4741C(a1, v3);
  swift_endAccess();
  return sub_1E3C47484(a1);
}

uint64_t sub_1E3C4741C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C47484(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t (*static PlayEpisodeAppIntent.description.modify())()
{
  if (qword_1EAE24038 != -1) {
    swift_once();
  }
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE254E8);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static PlayEpisodeAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static PlayEpisodeAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static PlayEpisodeAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25518);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25520);
  MEMORY[0x1F4188790](v1);
  sub_1E3C4648C();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25528);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t PlayEpisodeAppIntent.$episode.getter()
{
  return sub_1E3E77570();
}

uint64_t PlayEpisodeAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t PlayEpisodeAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*PlayEpisodeAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t PlayEpisodeAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t (*PlayEpisodeAppIntent.episode.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t PlayEpisodeAppIntent.perform()(uint64_t a1)
{
  v2[7] = a1;
  type metadata accessor for EpisodeEntity(0);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  uint64_t v3 = sub_1E3E77430();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *v1;
  uint64_t v6 = v1[1];
  v2[13] = v4;
  v2[14] = v5;
  v2[15] = v6;
  v2[5] = v5;
  v2[6] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v2[16] = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1E3C479E8;
  return sub_1E3C47CC4(v4);
}

uint64_t sub_1E3C479E8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1E3C47AE4, 0, 0);
}

uint64_t sub_1E3C47AE4()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v11 = *(void *)(v0 + 88);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  OpenEpisodeAppIntent.init()(v12);
  uint64_t v6 = v12[0];
  uint64_t v7 = v12[1];
  uint64_t v8 = v12[2];
  sub_1E3C2ACB0(v3, v4);
  sub_1E3C2ACB0(v4, v5);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C48778(v4, type metadata accessor for EpisodeEntity);
  *(unsigned char *)(v0 + 136) = 6;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  sub_1E3C48778(v3, type metadata accessor for EpisodeEntity);
  *(void *)(v0 + 16) = v6;
  *(void *)(v0 + 24) = v7;
  *(void *)(v0 + 32) = v8;
  sub_1E3C48550();
  sub_1E3E77440();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1E3C47CC4(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  type metadata accessor for EpisodeEntity(0);
  *(void *)(v2 + 40) = swift_task_alloc();
  sub_1E3E7CCE0();
  *(void *)(v2 + 48) = swift_task_alloc();
  type metadata accessor for PlayEpisodeIntent();
  *(void *)(v2 + 56) = swift_task_alloc();
  *(_OWORD *)(v2 + 64) = *v1;
  return MEMORY[0x1F4188298](sub_1E3C47DB4, 0, 0);
}

uint64_t sub_1E3C47DB4()
{
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE25288 + dword_1EAE25288);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  void *v1 = v0;
  v1[1] = sub_1E3C47E94;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[7];
  return v5((uint64_t)v5, v3, v2);
}

uint64_t sub_1E3C47E94()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  sub_1E3C48778(v2, (uint64_t (*)(void))type metadata accessor for PlayEpisodeIntent);
  if (v0) {
    uint64_t v3 = sub_1E3C48134;
  }
  else {
    uint64_t v3 = sub_1E3C47FD8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1E3C47FD8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1E3E7CCD0();
  sub_1E3E7CCC0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  sub_1E3E774B0();
  sub_1E3C48778(v1, type metadata accessor for EpisodeEntity);
  sub_1E3E7CCB0();
  swift_bridgeObjectRelease();
  sub_1E3E7CCC0();
  sub_1E3E77420();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3C48134()
{
  uint64_t v1 = (void *)v0[11];
  sub_1E3C48C4C(v1, v0[4]);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1E3C481C0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24030 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE254D0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C48268()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25518);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25520);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25528);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3C483E8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24038 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE254E8);
  swift_beginAccess();
  return sub_1E3C47314(v3, a1);
}

uint64_t sub_1E3C48478(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return PlayEpisodeAppIntent.perform()(a1);
}

uint64_t sub_1E3C48514(uint64_t a1)
{
  unint64_t v2 = sub_1E3C4648C();

  return MEMORY[0x1F40D3C90](a1, v2);
}

unint64_t sub_1E3C48550()
{
  unint64_t result = qword_1EAE25540;
  if (!qword_1EAE25540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25540);
  }
  return result;
}

unint64_t sub_1E3C485A8()
{
  unint64_t result = qword_1EAE25548;
  if (!qword_1EAE25548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25548);
  }
  return result;
}

unint64_t sub_1E3C48600()
{
  unint64_t result = qword_1EAE25550;
  if (!qword_1EAE25550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25550);
  }
  return result;
}

uint64_t sub_1E3C48654()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C48688()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for PlayEpisodeAppIntent()
{
  return &type metadata for PlayEpisodeAppIntent;
}

uint64_t sub_1E3C486C4()
{
  return sub_1E3C10DE8(&qword_1EAE25560, &qword_1EAE25568);
}

uint64_t sub_1E3C48700()
{
  return sub_1E3C10DE8(&qword_1EAE25570, &qword_1EAE25578);
}

uint64_t sub_1E3C4873C()
{
  return sub_1E3C10DE8(&qword_1EAE25580, &qword_1EAE25578);
}

uint64_t sub_1E3C48778(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t static RequestTipProviderRefreshActionImplementation.PerformError.== infix(_:_:)()
{
  return 1;
}

uint64_t RequestTipProviderRefreshActionImplementation.PerformError.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t RequestTipProviderRefreshActionImplementation.PerformError.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t RequestTipProviderRefreshActionImplementation.perform(_:asPartOf:)()
{
  uint64_t v0 = sub_1E3E7BD40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE3050);
  sub_1E3E7BE00();
  if (v9)
  {
    sub_1E3C1B644(&v8, (uint64_t)v10);
    uint64_t v4 = v11;
    uint64_t v5 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24FB8);
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F711E8], v0);
    uint64_t v6 = sub_1E3E7C9C0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  }
  else
  {
    sub_1E3C489E8((uint64_t)&v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24FB8);
    sub_1E3C48A48();
    swift_allocError();
    return sub_1E3E7C9B0();
  }
  return v6;
}

uint64_t sub_1E3C489E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25588);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1E3C48A48()
{
  unint64_t result = qword_1EAE25590;
  if (!qword_1EAE25590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25590);
  }
  return result;
}

unint64_t sub_1E3C48AA0()
{
  unint64_t result = qword_1EAE25598;
  if (!qword_1EAE25598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25598);
  }
  return result;
}

unint64_t sub_1E3C48AF8()
{
  unint64_t result = qword_1EAE255A0;
  if (!qword_1EAE255A0)
  {
    type metadata accessor for RequestTipProviderRefreshAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE255A0);
  }
  return result;
}

uint64_t sub_1E3C48B50()
{
  return RequestTipProviderRefreshActionImplementation.perform(_:asPartOf:)();
}

ValueMetadata *type metadata accessor for RequestTipProviderRefreshActionImplementation()
{
  return &type metadata for RequestTipProviderRefreshActionImplementation;
}

unsigned char *storeEnumTagSinglePayload for RequestTipProviderRefreshActionImplementation.PerformError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3C48C14);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestTipProviderRefreshActionImplementation.PerformError()
{
  return &type metadata for RequestTipProviderRefreshActionImplementation.PerformError;
}

void sub_1E3C48C4C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = sub_1E3E793B0();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v8 = (char *)&v41 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = sub_1E3E78F50();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v41 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v41 - v20;
  id v45 = a1;
  id v22 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
  if (!swift_dynamicCast())
  {
    uint64_t v25 = v42;
    uint64_t v24 = v43;

    id v48 = a1;
    id v26 = a1;
    if (swift_dynamicCast())
    {
      id v27 = v45;
      uint64_t v28 = v46;
      char v29 = v47;
      if (v47 == 1)
      {
        sub_1E3E77410();
        sub_1E3C4941C(v27, v28, 1);
      }
      else
      {
        if (v47 == 2 || v47 == 4 && v45 == (id)1 && !v46)
        {
LABEL_33:
          sub_1E3E77410();
          goto LABEL_34;
        }
        sub_1E3E77410();
        sub_1E3C4941C(v27, v28, v29);
      }
    }
    else
    {

      id v48 = a1;
      id v30 = a1;
      if (!swift_dynamicCast())
      {

        id v45 = a1;
        id v34 = a1;
        if (!swift_dynamicCast())
        {

          sub_1E3E77410();
          return;
        }
        uint64_t v35 = v8;
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v8, v11, v24);
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v5, v8, v24);
        int v36 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v5, v24);
        if (v36 == *MEMORY[0x1E4F919E0]
          || v36 == *MEMORY[0x1E4F919F0]
          || v36 == *MEMORY[0x1E4F919D0]
          || v36 == *MEMORY[0x1E4F919D8])
        {
          sub_1E3E77410();
          (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v24);
        }
        else
        {
          uint64_t v39 = (void (**)(char *, uint64_t))(v25 + 8);
          if (v36 == *MEMORY[0x1E4F919E8])
          {
            sub_1E3E77410();
            (*v39)(v35, v24);
          }
          else
          {
            sub_1E3E77410();
            uint64_t v40 = *v39;
            (*v39)(v35, v24);
            v40(v5, v24);
          }
        }
        goto LABEL_19;
      }
      id v31 = v45;
      char v32 = (char)v46;
      if (v46 == 2 && (unint64_t)v45 <= 2) {
        goto LABEL_33;
      }
      sub_1E3E77410();
      sub_1E3C4940C(v31, v32);
    }
LABEL_34:
    id v33 = v48;
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v21, v12);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v23 == *MEMORY[0x1E4F91808] || v23 == *MEMORY[0x1E4F91820] || v23 == *MEMORY[0x1E4F91800])
  {
    sub_1E3E77410();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
  else
  {
    uint64_t v37 = (void (**)(char *, uint64_t))(v13 + 8);
    if (v23 == *MEMORY[0x1E4F91818])
    {
      sub_1E3E77410();
      (*v37)(v18, v12);
    }
    else
    {
      sub_1E3E77410();
      uint64_t v38 = *v37;
      (*v37)(v18, v12);
      v38(v15, v12);
    }
  }
LABEL_19:
  id v33 = v45;
LABEL_35:
}

void sub_1E3C4940C(id a1, char a2)
{
  if (!a2) {
}
  }

void sub_1E3C4941C(void *a1, id a2, char a3)
{
  if (a3 == 1)
  {
  }
  else if (!a3)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t ViewTranscriptAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v24 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  int v23 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v8 = (char *)&v22 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25500);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E77B60();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v26 = 0;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v22 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25508);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v17 = type metadata accessor for EpisodeEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  uint64_t v18 = sub_1E3E77430();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v8, 1, 1, v18);
  v19(v5, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v23, *MEMORY[0x1E4F186F0], v24);
  sub_1E3C46EA0();
  uint64_t result = sub_1E3E775A0();
  uint64_t v21 = v25;
  *uint64_t v25 = v22;
  v21[1] = result;
  return result;
}

uint64_t ViewTranscriptAppIntent.episode.getter()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3C49848(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C2ACB0(a1, (uint64_t)&v9 - v6);
  sub_1E3C2ACB0((uint64_t)v7, (uint64_t)v4);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C4A360((uint64_t)v7, type metadata accessor for EpisodeEntity);
  swift_release();
  return swift_release();
}

uint64_t ViewTranscriptAppIntent.episode.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3C2ACB0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E77560();
  return sub_1E3C4A360(a1, type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3C499E8()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE255A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE255A8);
  return sub_1E3E77B40();
}

uint64_t static ViewTranscriptAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24040 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE255A8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C49AFC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  __swift_allocate_value_buffer(v0, qword_1EAE255C0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EAE255C0);
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t static ViewTranscriptAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24048 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE255C0);

  return sub_1E3C47314(v3, a1);
}

uint64_t static ViewTranscriptAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static ViewTranscriptAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static ViewTranscriptAppIntent.openAppWhenRun.getter()
{
  return 1;
}

uint64_t static ViewTranscriptAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE255D8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE255E0);
  MEMORY[0x1F4188790](v1);
  sub_1E3C4672C();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE255E8);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t ViewTranscriptAppIntent.$episode.getter()
{
  return sub_1E3E77570();
}

uint64_t ViewTranscriptAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t ViewTranscriptAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*ViewTranscriptAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t ViewTranscriptAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t (*ViewTranscriptAppIntent.episode.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t ViewTranscriptAppIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  type metadata accessor for OpenTranscriptIntent();
  *(void *)(v2 + 24) = swift_task_alloc();
  *(_OWORD *)(v2 + 32) = *v1;
  sub_1E3E7D1A0();
  *(void *)(v2 + 48) = sub_1E3E7D190();
  uint64_t v4 = sub_1E3E7D130();
  *(void *)(v2 + 56) = v4;
  *(void *)(v2 + 64) = v3;
  return MEMORY[0x1F4188298](sub_1E3C4A02C, v4, v3);
}

uint64_t sub_1E3C4A02C()
{
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE25278 + dword_1EAE25278);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  void *v1 = v0;
  v1[1] = sub_1E3C4A10C;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[3];
  return v5((uint64_t)v5, v3, v2);
}

uint64_t sub_1E3C4A10C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 24);
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  sub_1E3C4A360(v3, (uint64_t (*)(void))type metadata accessor for OpenTranscriptIntent);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v6 = sub_1E3C4A2F0;
  }
  else {
    uint64_t v6 = sub_1E3C4A278;
  }
  return MEMORY[0x1F4188298](v6, v5, v4);
}

uint64_t sub_1E3C4A278()
{
  swift_release();
  sub_1E3E77480();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C4A2F0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C4A360(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1E3C4A3C4()
{
  unint64_t result = qword_1EAE255F8;
  if (!qword_1EAE255F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE255F8);
  }
  return result;
}

unint64_t sub_1E3C4A41C()
{
  unint64_t result = qword_1EAE25600;
  if (!qword_1EAE25600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25600);
  }
  return result;
}

uint64_t sub_1E3C4A470()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3C4A48C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3C4A4A8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24040 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE255A8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C4A550()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE255D8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE255E0);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE255E8);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3C4A6E4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24048 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE255C0);

  return sub_1E3C47314(v3, a1);
}

uint64_t sub_1E3C4A760(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return ViewTranscriptAppIntent.perform()(a1);
}

uint64_t sub_1E3C4A7FC(uint64_t a1)
{
  unint64_t v2 = sub_1E3C4672C();

  return MEMORY[0x1F40D3C90](a1, v2);
}

ValueMetadata *type metadata accessor for ViewTranscriptAppIntent()
{
  return &type metadata for ViewTranscriptAppIntent;
}

uint64_t sub_1E3C4A858()
{
  return sub_1E3C10DE8(&qword_1EAE25610, &qword_1EAE25618);
}

uint64_t sub_1E3C4A894()
{
  return sub_1E3C10DE8((unint64_t *)&qword_1EAE25620, &qword_1EAE25628);
}

uint64_t MarkEpisodeAsPlayedAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v24 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  int v23 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25500);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E77B60();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v26 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v22 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25508);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v17 = type metadata accessor for EpisodeEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  uint64_t v18 = sub_1E3E77430();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v8, 1, 1, v18);
  v19(v5, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v23, *MEMORY[0x1E4F186F0], v24);
  sub_1E3C46EA0();
  uint64_t result = sub_1E3E775A0();
  uint64_t v21 = v25;
  *uint64_t v25 = v22;
  v21[1] = result;
  return result;
}

uint64_t MarkEpisodeAsPlayedAppIntent.episode.getter()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3C4ACE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C2ACB0(a1, (uint64_t)&v9 - v6);
  sub_1E3C2ACB0((uint64_t)v7, (uint64_t)v4);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C4BF14((uint64_t)v7, type metadata accessor for EpisodeEntity);
  swift_release();
  return swift_release();
}

uint64_t MarkEpisodeAsPlayedAppIntent.episode.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3C2ACB0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E77560();
  return sub_1E3C4BF14(a1, type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3C4AE80()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE25630);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25630);
  return sub_1E3E77B40();
}

uint64_t static MarkEpisodeAsPlayedAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24050 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25630);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static MarkEpisodeAsPlayedAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t static MarkEpisodeAsPlayedAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static MarkEpisodeAsPlayedAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static MarkEpisodeAsPlayedAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25648);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25650);
  MEMORY[0x1F4188790](v1);
  sub_1E3C463E4();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25658);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t MarkEpisodeAsPlayedAppIntent.$episode.getter()
{
  return sub_1E3E77570();
}

uint64_t MarkEpisodeAsPlayedAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t MarkEpisodeAsPlayedAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*MarkEpisodeAsPlayedAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t MarkEpisodeAsPlayedAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t (*MarkEpisodeAsPlayedAppIntent.episode.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t MarkEpisodeAsPlayedAppIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = type metadata accessor for UpdateEpisodePlayStateIntent();
  *(void *)(v2 + 64) = swift_task_alloc();
  sub_1E3E79380();
  *(void *)(v2 + 72) = swift_task_alloc();
  *(void *)(v2 + 80) = type metadata accessor for EpisodeEntity(0);
  *(void *)(v2 + 88) = swift_task_alloc();
  *(void *)(v2 + 96) = swift_task_alloc();
  *(void *)(v2 + 104) = swift_task_alloc();
  uint64_t v3 = sub_1E3E7A880();
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = *(void *)(v3 - 8);
  *(void *)(v2 + 128) = swift_task_alloc();
  *(_OWORD *)(v2 + 136) = *v1;
  return MEMORY[0x1F4188298](sub_1E3C4B4AC, 0, 0);
}

uint64_t sub_1E3C4B4AC()
{
  uint64_t v21 = v0;
  sub_1E3E7A740();
  swift_retain_n();
  swift_retain_n();
  uint64_t v1 = sub_1E3E7A860();
  os_log_type_t v2 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v17 = v0[14];
    uint64_t v18 = v0[16];
    uint64_t v16 = v0[15];
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v20 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E77550();
    swift_release();
    swift_release();
    uint64_t v5 = sub_1E3E7CD90();
    v0[5] = sub_1E3C150B8(v5, v6, &v20);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1E3BC5000, v1, v2, "Received a request to mark episode as played: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v4, -1, -1);
    MEMORY[0x1E4E79510](v3, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    uint64_t v8 = v0[15];
    uint64_t v7 = v0[16];
    uint64_t v9 = v0[14];
    swift_release_n();
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  uint64_t v10 = (void *)v0[8];
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  void *v10 = 0;
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE25270 + dword_1EAE25270);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[19] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1E3C4B78C;
  uint64_t v12 = v0[17];
  uint64_t v14 = v0[8];
  uint64_t v13 = v0[9];
  return v19(v13, v14, v12);
}

uint64_t sub_1E3C4B78C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 64);
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  sub_1E3C4BF14(v3, (uint64_t (*)(void))type metadata accessor for UpdateEpisodePlayStateIntent);
  if (v0)
  {
    uint64_t v4 = sub_1E3C4BAD0;
  }
  else
  {
    sub_1E3C4BF14(*(void *)(v2 + 72), MEMORY[0x1E4F919C8]);
    uint64_t v4 = sub_1E3C4B8F4;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3C4B8F4()
{
  uint64_t v10 = v0;
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  OpenEpisodeAppIntent.init()(v9);
  uint64_t v5 = v9[0];
  uint64_t v4 = v9[1];
  uint64_t v6 = v9[2];
  sub_1E3C2ACB0(v2, v1);
  sub_1E3C2ACB0(v1, v3);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C4BF14(v1, type metadata accessor for EpisodeEntity);
  *(unsigned char *)(v0 + 168) = 2;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  sub_1E3C4BF14(v2, type metadata accessor for EpisodeEntity);
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v6;
  sub_1E3C48550();
  sub_1E3E77450();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1E3C4BAD0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C4BB78@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24050 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25630);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C4BC20()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25648);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25650);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25658);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3C4BDB0@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_1E3C4BE3C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return MarkEpisodeAsPlayedAppIntent.perform()(a1);
}

uint64_t sub_1E3C4BED8(uint64_t a1)
{
  unint64_t v2 = sub_1E3C463E4();

  return MEMORY[0x1F40D3C90](a1, v2);
}

uint64_t sub_1E3C4BF14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1E3C4BF78()
{
  unint64_t result = qword_1EAE25668;
  if (!qword_1EAE25668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25668);
  }
  return result;
}

unint64_t sub_1E3C4BFD0()
{
  unint64_t result = qword_1EAE25670;
  if (!qword_1EAE25670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25670);
  }
  return result;
}

uint64_t sub_1E3C4C024()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C4C058()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for MarkEpisodeAsPlayedAppIntent()
{
  return &type metadata for MarkEpisodeAsPlayedAppIntent;
}

uint64_t sub_1E3C4C094()
{
  return sub_1E3C10DE8(&qword_1EAE25680, &qword_1EAE25688);
}

uint64_t sub_1E3C4C0D0()
{
  return sub_1E3C10DE8((unint64_t *)&unk_1EAE25690, &qword_1EAE25628);
}

uint64_t sub_1E3C4C10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1E3E7D1E0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1E3E7D1D0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1E3C1DE20(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1E3E7D130();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_1E3E7C970();
  return swift_task_create();
}

uint64_t sub_1E3C4C288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1E3E7D1E0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1E3E7D1D0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1E3C1DE20(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1E3E7D130();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1E3C4C408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1E3E7D1E0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1E3E7D1D0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1E3C1DE20(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1E3E7D130();
    swift_unknownObjectRelease();
  }
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25728);
  return swift_task_create();
}

uint64_t sub_1E3C4C588()
{
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t v0 = (void *)sub_1E3E7D5F0();
  uint64_t v1 = sub_1E3E7D5B0();

  return v1;
}

void *DownloadRemovalObserver.__allocating_init(asPartOf:deletionKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  uint64_t v6 = sub_1E3C501D0(a1, a2, a3);
  swift_release();
  return v6;
}

void *DownloadRemovalObserver.init(asPartOf:deletionKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_1E3C501D0(a1, a2, a3);
  swift_release();
  return v3;
}

uint64_t sub_1E3C4C680()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7D1C0();
  uint64_t v4 = sub_1E3E7D1E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
  uint64_t v6 = sub_1E3C50448((unint64_t *)&unk_1EBFE5568, v5, (void (*)(uint64_t))type metadata accessor for DownloadRemovalObserver);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v0;
  v7[3] = v6;
  v7[4] = v0;
  swift_retain_n();
  *(void *)(v0 + 56) = sub_1E3C4CD5C((uint64_t)v3, (uint64_t)&unk_1EAE256B0, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1E3C4C7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  type metadata accessor for DownloadRemovalObserver();
  sub_1E3C50448((unint64_t *)&unk_1EBFE5568, v5, (void (*)(uint64_t))type metadata accessor for DownloadRemovalObserver);
  uint64_t v7 = sub_1E3E7D130();
  v4[4] = v7;
  v4[5] = v6;
  return MEMORY[0x1F4188298](sub_1E3C4C884, v7, v6);
}

uint64_t sub_1E3C4C884()
{
  uint64_t v1 = v0[3];
  v0[6] = sub_1E3E79DB0();
  uint64_t v2 = *(void **)(v1 + 24);
  v0[7] = v2;
  id v3 = v2;
  uint64_t v4 = sub_1E3E79D80();
  v0[8] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1E3C4C944;
  return sub_1E3C4E174(v4);
}

uint64_t sub_1E3C4C944()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 32);
    uint64_t v4 = *(void *)(v2 + 40);
    uint64_t v5 = sub_1E3C4CBC4;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 32);
    uint64_t v4 = *(void *)(v2 + 40);
    uint64_t v5 = sub_1E3C4CA60;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1E3C4CA60()
{
  id v1 = objc_allocWithZone(*(Class *)(v0 + 48));
  uint64_t v2 = (void *)sub_1E3E79D60();
  *(void *)(v0 + 16) = v2;
  uint64_t v3 = (void (*)(uint64_t))MEMORY[0x1E4F91BC0];
  sub_1E3C50448(&qword_1EBFE5898, 255, MEMORY[0x1E4F91BC0]);
  sub_1E3C50448(&qword_1EBFE5890, 255, v3);
  sub_1E3E7D510();

  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1E3C4CC68;
  return sub_1E3C4D120();
}

uint64_t sub_1E3C4CBC4()
{
  id v1 = *(void **)(v0 + 80);

  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C4CC68;
  return sub_1E3C4D120();
}

uint64_t sub_1E3C4CC68()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1E3C4CD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7D1E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1E3E7D1D0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1E3C1DE20(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1E3E7D130();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1E3C4CF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7D1E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1E3E7D1D0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1E3C1DE20(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1E3E7D130();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25740);
  return swift_task_create();
}

uint64_t sub_1E3C4D0AC()
{
  if (*(void *)(v0 + 56))
  {
    sub_1E3E775E0();
    sub_1E3E7D240();
    swift_release();
  }
  *(void *)(v0 + 56) = 0;

  return swift_release();
}

uint64_t sub_1E3C4D120()
{
  v1[8] = v0;
  uint64_t v2 = sub_1E3E7A880();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5D40);
  v1[13] = v3;
  v1[14] = *(void *)(v3 - 8);
  v1[15] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D68);
  v1[16] = v4;
  v1[17] = *(void *)(v4 - 8);
  v1[18] = swift_task_alloc();
  type metadata accessor for DownloadRemovalObserver();
  v1[19] = sub_1E3C50448((unint64_t *)&unk_1EBFE5568, v5, (void (*)(uint64_t))type metadata accessor for DownloadRemovalObserver);
  uint64_t v7 = sub_1E3E7D130();
  v1[20] = v7;
  v1[21] = v6;
  return MEMORY[0x1F4188298](sub_1E3C4D304, v7, v6);
}

uint64_t sub_1E3C4D304()
{
  id v1 = (void *)v0[8];
  v0[22] = v1[3];
  v0[23] = v1[4];
  v0[24] = v1[5];
  sub_1E3E7D520();
  sub_1E3E7D200();
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[8];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[25] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1E3C4D404;
  uint64_t v5 = v0[13];
  return MEMORY[0x1F4187D58](v0 + 2, v3, v2, v5);
}

uint64_t sub_1E3C4D404()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return MEMORY[0x1F4188298](sub_1E3C4D524, v3, v2);
}

uint64_t sub_1E3C4D524()
{
  int v23 = v0;
  unint64_t v1 = v0[3];
  if (v1)
  {
    uint64_t v2 = v0[2];
    sub_1E3E7A840();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1E3E7A860();
    os_log_type_t v4 = sub_1E3E7D4C0();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = v0[12];
    uint64_t v7 = v0[9];
    uint64_t v8 = (void (**)(uint64_t, uint64_t))(v0[10] + 8);
    if (v5)
    {
      uint64_t v21 = v0[12];
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v22 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_bridgeObjectRetain();
      v0[7] = sub_1E3C150B8(v2, v1, &v22);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1E3BC5000, v3, v4, "Received notice of new episodes to delete: %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v10, -1, -1);
      MEMORY[0x1E4E79510](v9, -1, -1);

      uint64_t v11 = *v8;
      (*v8)(v21, v7);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v11 = *v8;
      (*v8)(v6, v7);
    }
    v0[26] = v11;
    uint64_t v17 = (void *)v0[22];
    v0[27] = sub_1E3E79DB0();
    id v18 = v17;
    uint64_t v19 = sub_1E3E79D80();
    v0[28] = v19;
    uint64_t v20 = (void *)swift_task_alloc();
    v0[29] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1E3C4D804;
    return sub_1E3C4E174(v19);
  }
  else
  {
    uint64_t v13 = v0[17];
    uint64_t v12 = v0[18];
    uint64_t v14 = v0[16];
    (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_1E3C4D804()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    BOOL v5 = sub_1E3C4DAB4;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    BOOL v5 = sub_1E3C4D920;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1E3C4D920()
{
  id v1 = objc_allocWithZone(*(Class *)(v0 + 216));
  uint64_t v2 = (void *)sub_1E3E79D60();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = (void (*)(uint64_t))MEMORY[0x1E4F91BC0];
  sub_1E3C50448(&qword_1EBFE5898, 255, MEMORY[0x1E4F91BC0]);
  sub_1E3C50448(&qword_1EBFE5890, 255, v3);
  sub_1E3E7D510();

  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1E3C4D404;
  uint64_t v7 = *(void *)(v0 + 104);
  return MEMORY[0x1F4187D58](v0 + 16, v5, v4, v7);
}

uint64_t sub_1E3C4DAB4()
{
  uint64_t v25 = v0;
  id v1 = *(void **)(v0 + 240);

  sub_1E3E7A840();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 240);
    uint64_t v22 = *(void *)(v0 + 88);
    int v23 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v24 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    *(void *)(v0 + 32) = v6;
    id v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v11 = sub_1E3E7CD90();
    *(void *)(v0 + 40) = sub_1E3C150B8(v11, v12, &v24);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Failed to process episode deletions: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v9, -1, -1);
    MEMORY[0x1E4E79510](v8, -1, -1);

    v23(v22, v7);
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 240);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    uint64_t v15 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 72);

    v14(v15, v16);
  }
  uint64_t v17 = *(void *)(v0 + 152);
  uint64_t v18 = *(void *)(v0 + 64);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1E3C4D404;
  uint64_t v20 = *(void *)(v0 + 104);
  return MEMORY[0x1F4187D58](v0 + 16, v18, v17, v20);
}

uint64_t sub_1E3C4DD50()
{
  v1[3] = v0;
  type metadata accessor for DownloadRemovalObserver();
  sub_1E3C50448((unint64_t *)&unk_1EBFE5568, v2, (void (*)(uint64_t))type metadata accessor for DownloadRemovalObserver);
  uint64_t v4 = sub_1E3E7D130();
  v1[4] = v4;
  v1[5] = v3;
  return MEMORY[0x1F4188298](sub_1E3C4DE04, v4, v3);
}

uint64_t sub_1E3C4DE04()
{
  uint64_t v1 = v0[3];
  v0[6] = sub_1E3E79DB0();
  uint64_t v2 = *(void **)(v1 + 24);
  v0[7] = v2;
  id v3 = v2;
  uint64_t v4 = sub_1E3E79D80();
  v0[8] = v4;
  os_log_type_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  *os_log_type_t v5 = v0;
  v5[1] = sub_1E3C4DEC4;
  return sub_1E3C4E174(v4);
}

uint64_t sub_1E3C4DEC4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 32);
    uint64_t v4 = *(void *)(v2 + 40);
    os_log_type_t v5 = sub_1E3C4E110;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 32);
    uint64_t v4 = *(void *)(v2 + 40);
    os_log_type_t v5 = sub_1E3C4DFE0;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1E3C4DFE0()
{
  id v1 = objc_allocWithZone(*(Class *)(v0 + 48));
  uint64_t v2 = (void *)sub_1E3E79D60();
  *(void *)(v0 + 16) = v2;
  uint64_t v3 = (void (*)(uint64_t))MEMORY[0x1E4F91BC0];
  sub_1E3C50448(&qword_1EBFE5898, 255, MEMORY[0x1E4F91BC0]);
  sub_1E3C50448(&qword_1EBFE5890, 255, v3);
  sub_1E3E7D510();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1E3C4E110()
{
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C4E174(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_1E3E7A6E0();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_1E3E7D8E0();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7D1E0();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v6 = sub_1E3E7A880();
  v2[16] = v6;
  v2[17] = *(void *)(v6 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  uint64_t v7 = sub_1E3E7A640();
  v2[20] = v7;
  v2[21] = *(void *)(v7 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  uint64_t v8 = sub_1E3E7A6D0();
  v2[26] = v8;
  v2[27] = *(void *)(v8 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  type metadata accessor for DownloadRemovalObserver();
  sub_1E3C50448((unint64_t *)&unk_1EBFE5568, v9, (void (*)(uint64_t))type metadata accessor for DownloadRemovalObserver);
  uint64_t v11 = sub_1E3E7D130();
  v2[31] = v11;
  v2[32] = v10;
  return MEMORY[0x1F4188298](sub_1E3C4E4B4, v11, v10);
}

uint64_t sub_1E3C4E4B4()
{
  uint64_t v40 = v0;
  sub_1E3E7A690();
  sub_1E3E7A630();
  uint64_t v1 = sub_1E3E7A6A0();
  os_signpost_type_t v2 = sub_1E3E7D760();
  if (sub_1E3E7DB50())
  {
    uint64_t v3 = v0[24];
    uint64_t v4 = v0[20];
    uint64_t v5 = v0[21];
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    unint64_t v7 = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v6(v3, v0[25], v4);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    os_signpost_id_t v9 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v1, v2, v9, "RemovePendingDownloads", "", v8, 2u);
    MEMORY[0x1E4E79510](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  else
  {
    uint64_t v10 = v0[21];

    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v7 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v36 = v0[30];
  uint64_t v38 = (void *)v0[4];
  uint64_t v11 = v0[27];
  uint64_t v34 = v0[26];
  uint64_t v12 = v0[24];
  uint64_t v13 = v0[25];
  uint64_t v15 = v0[20];
  uint64_t v14 = v0[21];
  v0[33] = v6;
  v0[34] = v7;
  v6(v12, v13, v15);
  sub_1E3E7A720();
  swift_allocObject();
  v0[35] = sub_1E3E7A710();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[36] = v16;
  v0[37] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v16(v13, v15);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[38] = v17;
  v0[39] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v17(v36, v34);
  sub_1E3E7A840();
  id v18 = v38;
  uint64_t v19 = sub_1E3E7A860();
  os_log_type_t v20 = sub_1E3E7D4C0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v22 = v0[19];
  uint64_t v23 = v0[16];
  uint64_t v24 = v0[17];
  uint64_t v25 = (void *)v0[4];
  if (v21)
  {
    uint64_t v37 = v0[19];
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v39 = v35;
    *(_DWORD *)uint64_t v26 = 136315138;
    sub_1E3E79D70();
    sub_1E3C50584();
    uint64_t v27 = sub_1E3E7D320();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    v0[3] = sub_1E3C150B8(v27, v29, &v39);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1E3BC5000, v19, v20, "Beginning deletion of episodes with identifiers: %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v35, -1, -1);
    MEMORY[0x1E4E79510](v26, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v37, v23);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  v0[40] = *(void *)(v0[5] + 48);
  uint64_t ObjectType = swift_getObjectType();
  v0[41] = ObjectType;
  sub_1E3C17C5C();
  id v31 = (void *)swift_task_alloc();
  v0[42] = v31;
  *id v31 = v0;
  v31[1] = sub_1E3C4E8C0;
  uint64_t v32 = v0[15];
  return MEMORY[0x1F4145A40](v32, ObjectType);
}

uint64_t sub_1E3C4E8C0(uint64_t a1)
{
  os_signpost_type_t v2 = *(void **)v1;
  uint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 120);
  uint64_t v5 = *(void *)(*(void *)v1 + 112);
  uint64_t v6 = *(void *)(*(void *)v1 + 104);
  v3[43] = a1;
  swift_task_dealloc();
  unint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v3[44] = v7;
  v3[45] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v6);
  uint64_t v8 = v2[32];
  uint64_t v9 = v2[31];
  return MEMORY[0x1F4188298](sub_1E3C4EA58, v9, v8);
}

uint64_t sub_1E3C4EA58()
{
  sub_1E3C17C5C();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[46] = v1;
  void *v1 = v0;
  v1[1] = sub_1E3C4EB00;
  uint64_t v2 = v0[41];
  uint64_t v3 = v0[15];
  return MEMORY[0x1F4145A40](v3, v2);
}

uint64_t sub_1E3C4EB00(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 352);
  uint64_t v4 = *(void *)(*v1 + 120);
  uint64_t v5 = *(void *)(*v1 + 104);
  *(void *)(*v1 + 376) = a1;
  swift_task_dealloc();
  v3(v4, v5);
  uint64_t v6 = *(void *)(v2 + 256);
  uint64_t v7 = *(void *)(v2 + 248);
  return MEMORY[0x1F4188298](sub_1E3C4EC94, v7, v6);
}

uint64_t sub_1E3C4EC94()
{
  uint64_t v1 = (void *)v0[43];
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[10];
  uint64_t v5 = (void *)v0[4];
  uint64_t v6 = swift_allocObject();
  v0[48] = v6;
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v5;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E4F1BD78], v4);
  id v7 = v5;
  id v8 = v1;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[49] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6388);
  *uint64_t v9 = v0;
  v9[1] = sub_1E3C4EDD8;
  uint64_t v11 = v0[12];
  return MEMORY[0x1F40D7080](v0 + 2, v11, sub_1E3C504D0, v6, v10);
}

uint64_t sub_1E3C4EDD8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 376);
  uint64_t v4 = *(void *)(*v1 + 96);
  uint64_t v5 = *(void *)(*v1 + 88);
  uint64_t v6 = *(void *)(*v1 + 80);
  *(void *)(*v1 + 400) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release();

  uint64_t v7 = *(void *)(v2 + 256);
  uint64_t v8 = *(void *)(v2 + 248);
  if (v0) {
    uint64_t v9 = sub_1E3C4F388;
  }
  else {
    uint64_t v9 = sub_1E3C4EFAC;
  }
  return MEMORY[0x1F4188298](v9, v8, v7);
}

uint64_t sub_1E3C4EFAC()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 40) + 16);
  sub_1E3C504EC(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_1E3E7D300();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_removeDownloadAssetsForEpisodeUuids_, v2);

  sub_1E3E7A840();
  uint64_t v3 = sub_1E3E7A860();
  os_log_type_t v4 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1E3BC5000, v3, v4, "Successfully deleted pending downloads", v5, 2u);
    MEMORY[0x1E4E79510](v5, -1, -1);
  }
  uint64_t v7 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 128);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_1E3E7A690();
  uint64_t v9 = sub_1E3E7A6A0();
  sub_1E3E7A700();
  os_signpost_type_t v10 = sub_1E3E7D750();
  if (sub_1E3E7DB50())
  {
    uint64_t v11 = *(void *)(v0 + 72);
    uint64_t v12 = *(void *)(v0 + 48);
    uint64_t v13 = *(void *)(v0 + 56);
    sub_1E3E775E0();
    sub_1E3E7A730();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v13 + 88))(v11, v12) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v14 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 48));
      uint64_t v14 = "SUCCESS";
    }
    id v33 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    BOOL v21 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    id v31 = *(void **)(v0 + 344);
    uint64_t v29 = *(void *)(v0 + 208);
    uint64_t v30 = *(void *)(v0 + 232);
    uint64_t v23 = *(void *)(v0 + 184);
    uint64_t v22 = *(void *)(v0 + 192);
    uint64_t v24 = *(void *)(v0 + 160);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264))(v22, v23, v24);
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    os_signpost_id_t v26 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v9, v10, v26, "RemovePendingDownloads", v14, v25, 2u);
    MEMORY[0x1E4E79510](v25, -1, -1);

    v21(v23, v24);
    v33(v30, v29);
    swift_release();
    v21(v22, v24);
  }
  else
  {
    uint64_t v15 = *(void **)(v0 + 344);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    uint64_t v17 = *(void *)(v0 + 232);
    uint64_t v18 = *(void *)(v0 + 208);
    uint64_t v19 = *(void *)(v0 + 184);
    uint64_t v20 = *(void *)(v0 + 160);

    v16(v19, v20);
    v32(v17, v18);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_1E3C4F388()
{
  sub_1E3E7A690();
  uint64_t v1 = sub_1E3E7A6A0();
  sub_1E3E7A700();
  os_signpost_type_t v2 = sub_1E3E7D750();
  if (sub_1E3E7DB50())
  {
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v5 = *(void *)(v0 + 48);
    sub_1E3E775E0();
    sub_1E3E7A730();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
      uint64_t v6 = "FAILURE";
    }
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    uint64_t v23 = *(void *)(v0 + 224);
    id v21 = *(id *)(v0 + 400);
    uint64_t v22 = *(void *)(v0 + 208);
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 176);
    uint64_t v16 = *(void *)(v0 + 160);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264))(v14, v15, v16);
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    os_signpost_id_t v18 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v1, v2, v18, "RemovePendingDownloads", v6, v17, 2u);
    MEMORY[0x1E4E79510](v17, -1, -1);

    v13(v15, v16);
    v24(v23, v22);
    swift_release();
    v13(v14, v16);
  }
  else
  {
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    uint64_t v9 = *(void *)(v0 + 224);
    uint64_t v10 = *(void *)(v0 + 208);
    uint64_t v11 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)(v0 + 160);

    v8(v11, v12);
    v7(v9, v10);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1E3C4F67C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1E3E79D70();
  sub_1E3CC51DC(v3);
  swift_bridgeObjectRelease();
  unint64_t v4 = sub_1E3E7D8D0();
  uint64_t result = swift_release();
  if (!v1)
  {
    uint64_t v6 = sub_1E3C16EE0(v4);
    uint64_t result = swift_bridgeObjectRelease();
    *a1 = v6;
  }
  return result;
}

uint64_t DownloadRemovalObserver.deinit()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t DownloadRemovalObserver.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t DownloadRemovalObserver.removeDownloadedEpisode(uuid:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25170);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1E3E86660;
  *(void *)(v13 + 32) = a1;
  *(void *)(v13 + 40) = a2;
  *(unsigned char *)(v13 + 48) = 2;
  uint64_t v14 = sub_1E3E7D1E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = 0;
  void v15[3] = 0;
  v15[4] = v13;
  v15[5] = v5;
  v15[6] = a3;
  v15[7] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1E3E775E0();
  sub_1E3C19A6C(a3);
  sub_1E3C4C288((uint64_t)v12, (uint64_t)&unk_1EAE256D8, (uint64_t)v15);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t DownloadRemovalObserver.delete(episodes:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E3E7D1E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = 0;
  uint64_t v12[3] = 0;
  void v12[4] = a1;
  v12[5] = v4;
  v12[6] = a2;
  v12[7] = a3;
  swift_bridgeObjectRetain();
  sub_1E3E775E0();
  sub_1E3C19A6C(a2);
  sub_1E3C4C288((uint64_t)v10, (uint64_t)&unk_1EAE256E0, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1E3C4FC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return MEMORY[0x1F4188298](sub_1E3C4FC88, 0, 0);
}

uint64_t sub_1E3C4FC88()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1E3C509C8(v1);
  swift_bridgeObjectRelease();
  id v2 = objc_allocWithZone((Class)sub_1E3E79DB0());
  uint64_t v3 = sub_1E3E79D60();
  *(void *)(v0 + 48) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1E3C4FD58;
  return sub_1E3C4E174(v3);
}

uint64_t sub_1E3C4FD58()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_1E3C4FEE4;
  }
  else {
    id v2 = sub_1E3C4FE6C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C4FE6C()
{
  uint64_t v1 = *(void (**)(void))(v0 + 32);
  if (v1) {
    v1();
  }

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3C4FEE4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C4FF48@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result) {
    *a2 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

void sub_1E3C4FF58(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13 = sub_1E3E7A620();
  _os_signpost_emit_with_name_impl(&dword_1E3BC5000, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_1E3C4FFDC(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1E3C500BC;
  return v5(v2 + 32);
}

uint64_t sub_1E3C500BC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

void *sub_1E3C501D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7D560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[7] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5880);
  sub_1E3E7BE20();
  v3[2] = v14;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F91E48], v6);
  uint64_t v10 = sub_1E3C6EAEC((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v3[3] = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E7BE20();
  uint64_t v11 = v14;
  v3[5] = a3;
  void v3[6] = v11;
  v3[4] = a2;
  return v3;
}

uint64_t type metadata accessor for DownloadRemovalObserver()
{
  return self;
}

uint64_t sub_1E3C50354()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C50394(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1E3C19DC4;
  return sub_1E3C4C7CC(a1, v4, v5, v6);
}

uint64_t sub_1E3C50448(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3C50490()
{
  return swift_deallocObject();
}

uint64_t sub_1E3C504D0@<X0>(void *a1@<X8>)
{
  return sub_1E3C4F67C(a1);
}

uint64_t sub_1E3C504EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1E3E7D340();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1E3DA4158(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_1E3C50584()
{
  unint64_t result = qword_1EBFE58E0;
  if (!qword_1EBFE58E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE58E0);
  }
  return result;
}

uint64_t sub_1E3C505DC()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1E3C50ED4;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v5;
  return MEMORY[0x1F4188298](sub_1E3C4FC88, 0, 0);
}

uint64_t method lookup function for DownloadRemovalObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DownloadRemovalObserver);
}

uint64_t dispatch thunk of DownloadRemovalObserver.unownedExecutor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DownloadRemovalObserver.__allocating_init(asPartOf:deletionKey:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DownloadRemovalObserver.beginObserving()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DownloadRemovalObserver.endObserving()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DownloadRemovalObserver.removeDownloadsRecordedInUserDefaults()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 184) + **(int **)(*(void *)v0 + 184));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1E3C19DC4;
  return v4();
}

uint64_t dispatch thunk of DownloadRemovalObserver.process(removals:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 192) + **(int **)(*(void *)v1 + 192));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1E3C50ED4;
  return v6(a1);
}

uint64_t objectdestroy_11Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1E3C50988()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1E3C509C0()
{
  return sub_1E3E5FA9C(*(void *)(v0 + 16));
}

uint64_t sub_1E3C509C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1E3C50584();
  uint64_t result = sub_1E3E7D340();
  uint64_t v10 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      uint64_t v5 = (void *)*((void *)v4 - 2);
      uint64_t v6 = *((void *)v4 - 1);
      unsigned int v7 = *v4;
      v4 += 24;
      sub_1E3C1161C(v5, v6, v7);
      sub_1E3DA4308((uint64_t)v8, v5, v6, v7);
      sub_1E3C1168C(v8[0], (uint64_t)v8[1], v9);
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_1E3C50A70(unint64_t a1)
{
  return sub_1E3C50B44(a1, (unint64_t *)&qword_1EBFDEE80, 0x1E4F28ED0, (unint64_t *)&qword_1EAE25720, (void (*)(id *, uint64_t))sub_1E3DA4FD0);
}

uint64_t sub_1E3C50AA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1E3E7D340();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1E3DA4FEC(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1E3C50B14(unint64_t a1)
{
  return sub_1E3C50B44(a1, (unint64_t *)&qword_1EBFE4AD0, 0x1E4F1C118, (unint64_t *)&unk_1EAE25710, (void (*)(id *, uint64_t))sub_1E3DA50E8);
}

uint64_t sub_1E3C50B44(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
  }
  sub_1E3C12B10(0, a2);
  sub_1E3C50CC4(a4, a2);
  uint64_t result = sub_1E3E7D340();
  uint64_t v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1E3E7DFC0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      return v17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      return v17;
    }
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v13 = MEMORY[0x1E4E77720](i, a1);
        a5(&v16, v13);
      }
    }
    else
    {
      uint64_t v14 = (void **)(a1 + 32);
      do
      {
        uint64_t v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1E3C50CC4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E3C12B10(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3C50D14()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C50D4C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C50ED4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EAE25730 + dword_1EAE25730);
  return v6(a1, v4);
}

uint64_t sub_1E3C50E04(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C50ED4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EAE29C80 + dword_1EAE29C80);
  return v6(a1, v4);
}

void sub_1E3C50EBC(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
}

uint64_t UnsaveEpisodeAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v21 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1E3E77B60();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v23 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v20 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25768);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  uint64_t v24 = 0;
  uint64_t v15 = sub_1E3E77430();
  id v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v9, 1, 1, v15);
  v16(v6, 1, 1, v15);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F186F0], v21);
  sub_1E3C46EA0();
  uint64_t result = sub_1E3E775A0();
  os_signpost_id_t v18 = v22;
  *uint64_t v22 = v20;
  v18[1] = result;
  return result;
}

uint64_t UnsaveEpisodeAppIntent.episodes.getter()
{
  sub_1E3E77550();
  return v1;
}

uint64_t sub_1E3C51274@<X0>(void *a1@<X8>)
{
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3C512D8()
{
  return swift_release();
}

uint64_t UnsaveEpisodeAppIntent.episodes.setter()
{
  return sub_1E3E77560();
}

uint64_t sub_1E3C51368()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE25750);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25750);
  return sub_1E3E77B40();
}

uint64_t static UnsaveEpisodeAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24058 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25750);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static UnsaveEpisodeAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t static UnsaveEpisodeAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static UnsaveEpisodeAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static UnsaveEpisodeAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25770);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25778);
  MEMORY[0x1F4188790](v1);
  sub_1E3C46630();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25780);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t UnsaveEpisodeAppIntent.$episodes.getter()
{
  return sub_1E3E77570();
}

uint64_t UnsaveEpisodeAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t UnsaveEpisodeAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*UnsaveEpisodeAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t UnsaveEpisodeAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t (*UnsaveEpisodeAppIntent.episodes.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t UnsaveEpisodeAppIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  uint64_t v3 = type metadata accessor for EpisodeEntity(0);
  *(void *)(v2 + 88) = v3;
  *(void *)(v2 + 96) = *(void *)(v3 - 8);
  *(void *)(v2 + 104) = swift_task_alloc();
  uint64_t v4 = sub_1E3E7A880();
  *(void *)(v2 + 112) = v4;
  *(void *)(v2 + 120) = *(void *)(v4 - 8);
  *(void *)(v2 + 128) = swift_task_alloc();
  *(void *)(v2 + 136) = swift_task_alloc();
  *(_OWORD *)(v2 + 144) = *v1;
  return MEMORY[0x1F4188298](sub_1E3C51954, 0, 0);
}

uint64_t sub_1E3C51954()
{
  uint64_t v36 = v0;
  sub_1E3E7A740();
  swift_retain_n();
  swift_retain_n();
  uint64_t v1 = sub_1E3E7A860();
  os_log_type_t v2 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v31 = v0[15];
    uint64_t v32 = v0[14];
    uint64_t v33 = v0[17];
    uint64_t v3 = v0[11];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v35 = v30;
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E77550();
    swift_release();
    swift_release();
    uint64_t v5 = MEMORY[0x1E4E76990](v0[8], v3);
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[9] = sub_1E3C150B8(v5, v7, &v35);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1E3BC5000, v1, v2, "Received a request to unbookmark episodes: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v30, -1, -1);
    MEMORY[0x1E4E79510](v4, -1, -1);

    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v8(v33, v32);
  }
  else
  {
    uint64_t v9 = v0[17];
    uint64_t v10 = v0[14];
    uint64_t v11 = v0[15];
    swift_release_n();
    swift_release_n();

    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v8(v9, v10);
  }
  v0[20] = v8;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  uint64_t v12 = v0[6];
  int64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v14 = v0[12];
    uint64_t v15 = v0[13];
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1E3CC7594(0, v13, 0);
    uint64_t v16 = v12 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v17 = *(void *)(v14 + 72);
    do
    {
      sub_1E3C2ACB0(v16, v0[13]);
      os_signpost_id_t v18 = *(void **)(v15 + 16);
      if (v18)
      {
        char v19 = 1;
        uint64_t v20 = *(void *)(v15 + 16);
      }
      else
      {
        char v19 = 0;
        uint64_t v20 = *(void *)(v15 + 40);
      }
      uint64_t v21 = v0[13];
      id v22 = v18;
      sub_1E3C525F8(v21);
      uint64_t v23 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1E3CC7594(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v35;
      }
      unint64_t v25 = *(void *)(v23 + 16);
      unint64_t v24 = *(void *)(v23 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1E3CC7594(v24 > 1, v25 + 1, 1);
        uint64_t v23 = v35;
      }
      *(void *)(v23 + 16) = v25 + 1;
      uint64_t v26 = v23 + 24 * v25;
      *(void *)(v26 + 32) = v20;
      *(void *)(v26 + 40) = 0;
      *(unsigned char *)(v26 + 48) = v19;
      v16 += v17;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x1E4FBC860];
  }
  v0[21] = v23;
  uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE25260 + dword_1EAE25260);
  uint64_t v27 = (void *)swift_task_alloc();
  v0[22] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_1E3C51D70;
  uint64_t v28 = v0[18];
  return v34((uint64_t)v34, v23, v28);
}

uint64_t sub_1E3C51D70()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    os_log_type_t v2 = sub_1E3C521F0;
  }
  else {
    os_log_type_t v2 = sub_1E3C51EA0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C51EA0()
{
  uint64_t v21 = v0;
  sub_1E3E7A740();
  swift_retain_n();
  swift_retain_n();
  uint64_t v1 = sub_1E3E7A860();
  os_log_type_t v2 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v18 = *(void *)(v0 + 128);
    char v19 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v17 = *(void *)(v0 + 112);
    uint64_t v3 = *(void *)(v0 + 88);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v20[0] = v16;
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E77550();
    swift_release();
    swift_release();
    uint64_t v5 = MEMORY[0x1E4E76990](*(void *)(v0 + 40), v3);
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 56) = sub_1E3C150B8(v5, v7, v20);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1E3BC5000, v1, v2, "Received a request to bookmark episodes: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v16, -1, -1);
    MEMORY[0x1E4E79510](v4, -1, -1);

    v19(v18, v17);
  }
  else
  {
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 112);
    swift_release_n();
    swift_release_n();

    v8(v9, v10);
  }
  OpenAppLocationAppIntent.init()(v20);
  uint64_t v12 = v20[0];
  uint64_t v11 = v20[1];
  uint64_t v13 = v20[2];
  *(unsigned char *)(v0 + 193) = 5;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  *(unsigned char *)(v0 + 192) = 1;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(v0 + 16) = v12;
  *(void *)(v0 + 24) = v11;
  *(void *)(v0 + 32) = v13;
  sub_1E3C52654();
  sub_1E3E77450();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1E3C521F0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C52268@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24058 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25750);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C52310()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25770);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25778);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25780);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3C52494@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_1E3C52520(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return UnsaveEpisodeAppIntent.perform()(a1);
}

uint64_t sub_1E3C525BC(uint64_t a1)
{
  unint64_t v2 = sub_1E3C46630();

  return MEMORY[0x1F40D3C90](a1, v2);
}

uint64_t sub_1E3C525F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1E3C52654()
{
  unint64_t result = qword_1EAE25790;
  if (!qword_1EAE25790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25790);
  }
  return result;
}

unint64_t sub_1E3C526AC()
{
  unint64_t result = qword_1EAE25798;
  if (!qword_1EAE25798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25798);
  }
  return result;
}

unint64_t sub_1E3C52704()
{
  unint64_t result = qword_1EAE257A0;
  if (!qword_1EAE257A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE257A0);
  }
  return result;
}

uint64_t sub_1E3C52758()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C5278C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for UnsaveEpisodeAppIntent()
{
  return &type metadata for UnsaveEpisodeAppIntent;
}

uint64_t sub_1E3C527C8()
{
  return sub_1E3C10DE8(&qword_1EAE257B0, &qword_1EAE257B8);
}

uint64_t sub_1E3C52804()
{
  return sub_1E3C10DE8((unint64_t *)&unk_1EAE25690, &qword_1EAE25628);
}

uint64_t Array<A>.allChapters(after:)()
{
  return sub_1E3C52870();
}

uint64_t Array<A>.allChapters(before:)()
{
  return sub_1E3C52870();
}

uint64_t sub_1E3C52870()
{
  sub_1E3E7D110();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1E3E7DE70();
  sub_1E3C1C554();
  uint64_t v0 = sub_1E3E7DF10();
  swift_bridgeObjectRelease();
  return v0;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Array<A>.chapter(at:)()
{
}

double MPModelPodcastChapter.endTime.getter()
{
  objc_msgSend(v0, sel_startTime);
  double v2 = v1;
  objc_msgSend(v0, sel_duration);
  return v2 + v3;
}

BOOL sub_1E3C52A4C(id *a1)
{
  double v2 = *(double *)(v1 + 24);
  objc_msgSend(*a1, sel_startTime);
  return v3 > v2;
}

BOOL sub_1E3C52A94(id *a1)
{
  double v2 = *(double *)(v1 + 24);
  id v3 = *a1;
  objc_msgSend(*a1, sel_startTime);
  double v5 = v4;
  objc_msgSend(v3, sel_duration);
  return v5 + v6 <= v2;
}

BOOL sub_1E3C52AF8(id *a1, double a2)
{
  id v3 = *a1;
  objc_msgSend(*a1, sel_startTime);
  if (v4 > a2) {
    return 0;
  }
  id v6 = v3;
  objc_msgSend(v6, sel_startTime);
  double v8 = v7;
  objc_msgSend(v6, sel_duration);
  double v10 = v9;

  return v8 + v10 > a2;
}

BOOL sub_1E3C52B94(id *a1)
{
  return sub_1E3C52AF8(a1, *(double *)(v1 + 24));
}

uint64_t sub_1E3C52BB8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v0 - 8);
  double v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E77B60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = sub_1E3E778A0();
  __swift_allocate_value_buffer(v5, qword_1EAE257C0);
  __swift_project_value_buffer(v5, (uint64_t)qword_1EAE257C0);
  sub_1E3E77B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1E3E77890();
}

uint64_t static EpisodeNoticeType.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24060 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E778A0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE257C0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1E3C52DCC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F10);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E77B60();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25850);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25858) - 8);
  uint64_t v7 = *(void *)(v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  uint64_t v17 = v9;
  *(_OWORD *)(v9 + 16) = xmmword_1E3E87920;
  *(unsigned char *)(v9 + v8) = 0;
  unint64_t v10 = v9 + v8;
  sub_1E3E77B40();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v20 = v5 + 56;
  uint64_t v18 = v4;
  v11(v3, 1, 1, v4);
  uint64_t v12 = v11;
  sub_1E3E77790();
  sub_1E3E777C0();
  unint64_t v19 = v10;
  *(unsigned char *)(v10 + v7) = 1;
  sub_1E3E77B40();
  v11(v3, 1, 1, v4);
  sub_1E3E77790();
  sub_1E3E777C0();
  *(unsigned char *)(v10 + 2 * v7) = 2;
  sub_1E3E77B40();
  uint64_t v13 = v18;
  v12(v3, 1, 1, v18);
  sub_1E3E77790();
  sub_1E3E777C0();
  unint64_t v14 = v19;
  *(unsigned char *)(v19 + 3 * v7) = 3;
  sub_1E3E77B40();
  v12(v3, 1, 1, v13);
  sub_1E3E77790();
  sub_1E3E777C0();
  *(unsigned char *)(v14 + 4 * v7) = 4;
  sub_1E3E77B40();
  uint64_t v15 = v18;
  v12(v3, 1, 1, v18);
  sub_1E3E77790();
  sub_1E3E777C0();
  *(unsigned char *)(v19 + 5 * v7) = 5;
  sub_1E3E77B40();
  v12(v3, 1, 1, v15);
  sub_1E3E77790();
  sub_1E3E777C0();
  unint64_t result = sub_1E3C7F09C(v17);
  qword_1EAE257D8 = result;
  return result;
}

uint64_t static EpisodeNoticeType.caseDisplayRepresentations.getter()
{
  if (qword_1EAE24068 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

PodcastsUI::EpisodeNoticeType_optional __swiftcall EpisodeNoticeType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1E3E7E050();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static EpisodeNoticeType.allCases.getter()
{
  return &unk_1F3F47B50;
}

uint64_t EpisodeNoticeType.rawValue.getter()
{
  uint64_t result = 0x6575516F54646461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 2:
      uint64_t result = 0x6C5073416B72616DLL;
      break;
    case 3:
      uint64_t result = 0x6E5573416B72616DLL;
      break;
    case 4:
      uint64_t result = 0x7478654E79616C70;
      break;
    case 5:
      uint64_t result = 0x616D6B6F6F626E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1E3C53508(unsigned __int8 *a1, char *a2)
{
  return sub_1E3E51500(*a1, *a2);
}

unint64_t sub_1E3C53518()
{
  unint64_t result = qword_1EAE257E0;
  if (!qword_1EAE257E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE257E0);
  }
  return result;
}

uint64_t sub_1E3C5356C()
{
  return sub_1E3DCCD64();
}

uint64_t sub_1E3C53574()
{
  sub_1E3E7CE50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3C53688()
{
  return sub_1E3DCCF18();
}

PodcastsUI::EpisodeNoticeType_optional sub_1E3C53690(Swift::String *a1)
{
  return EpisodeNoticeType.init(rawValue:)(*a1);
}

void sub_1E3C5369C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEA00000000006575;
  uint64_t v3 = 0x6575516F54646461;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6B72616D6B6F6F62;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "markAsPlayed");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      strcpy((char *)a1, "markAsUnplayed");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 4:
      *(void *)a1 = 0x7478654E79616C70;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 5:
      *(void *)a1 = 0x616D6B6F6F626E75;
      *(void *)(a1 + 8) = 0xEA00000000006B72;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_1E3C53794()
{
  unint64_t result = qword_1EAE257E8;
  if (!qword_1EAE257E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE257E8);
  }
  return result;
}

unint64_t sub_1E3C537EC()
{
  unint64_t result = qword_1EAE257F0;
  if (!qword_1EAE257F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE257F0);
  }
  return result;
}

unint64_t sub_1E3C53844()
{
  unint64_t result = qword_1EAE257F8;
  if (!qword_1EAE257F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE257F8);
  }
  return result;
}

uint64_t sub_1E3C53898()
{
  return MEMORY[0x1E4FBB210];
}

unint64_t sub_1E3C538A8()
{
  unint64_t result = qword_1EAE25800;
  if (!qword_1EAE25800)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE25808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25800);
  }
  return result;
}

void sub_1E3C53904(void *a1@<X8>)
{
  *a1 = &unk_1F3F47B50;
}

unint64_t sub_1E3C53918()
{
  unint64_t result = qword_1EAE25810;
  if (!qword_1EAE25810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25810);
  }
  return result;
}

unint64_t sub_1E3C53970()
{
  unint64_t result = qword_1EAE25818;
  if (!qword_1EAE25818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25818);
  }
  return result;
}

unint64_t sub_1E3C539C8()
{
  unint64_t result = qword_1EAE25820;
  if (!qword_1EAE25820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25820);
  }
  return result;
}

unint64_t sub_1E3C53A20()
{
  unint64_t result = qword_1EAE25828;
  if (!qword_1EAE25828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25828);
  }
  return result;
}

uint64_t sub_1E3C53A78@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24060 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E778A0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE257C0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C53B20()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1E3C53B70()
{
  unint64_t result = qword_1EAE25830;
  if (!qword_1EAE25830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25830);
  }
  return result;
}

uint64_t sub_1E3C53BC4(uint64_t a1)
{
  unint64_t v2 = sub_1E3C53B70();

  return MEMORY[0x1F40D3B98](a1, v2);
}

unint64_t sub_1E3C53C14()
{
  unint64_t result = qword_1EAE25838;
  if (!qword_1EAE25838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25838);
  }
  return result;
}

unint64_t sub_1E3C53C6C()
{
  unint64_t result = qword_1EAE25840;
  if (!qword_1EAE25840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25840);
  }
  return result;
}

unint64_t sub_1E3C53CC4()
{
  unint64_t result = qword_1EAE25848;
  if (!qword_1EAE25848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25848);
  }
  return result;
}

uint64_t sub_1E3C53D18()
{
  if (qword_1EAE24068 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3C53D74(uint64_t a1)
{
  unint64_t v2 = sub_1E3C53A20();

  return MEMORY[0x1F40D47F0](a1, v2);
}

uint64_t getEnumTagSinglePayload for EpisodeNoticeType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EpisodeNoticeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3C53F1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned char *sub_1E3C53F44(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeNoticeType()
{
  return &type metadata for EpisodeNoticeType;
}

uint64_t MarkEpisodeAsUnplayedAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v25 = a1;
  uint64_t v24 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v23 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int v8 = (char *)&v22 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25500);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E77B60();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v26 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v22 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25508);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v17 = type metadata accessor for EpisodeEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  uint64_t v18 = sub_1E3E77430();
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v8, 1, 1, v18);
  v19(v5, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v23, *MEMORY[0x1E4F186F0], v24);
  sub_1E3C46EA0();
  uint64_t result = sub_1E3E775A0();
  uint64_t v21 = v25;
  *unint64_t v25 = v22;
  v21[1] = result;
  return result;
}

uint64_t MarkEpisodeAsUnplayedAppIntent.episode.getter()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3C5436C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C2ACB0(a1, (uint64_t)&v9 - v6);
  sub_1E3C2ACB0((uint64_t)v7, (uint64_t)v4);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C4BF14((uint64_t)v7, type metadata accessor for EpisodeEntity);
  swift_release();
  return swift_release();
}

uint64_t MarkEpisodeAsUnplayedAppIntent.episode.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3C2ACB0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E77560();
  return sub_1E3C4BF14(a1, type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3C5450C()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE25860);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25860);
  return sub_1E3E77B40();
}

uint64_t static MarkEpisodeAsUnplayedAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24070 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25860);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static MarkEpisodeAsUnplayedAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t static MarkEpisodeAsUnplayedAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static MarkEpisodeAsUnplayedAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static MarkEpisodeAsUnplayedAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25878);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25880);
  MEMORY[0x1F4188790](v1);
  sub_1E3C46438();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25888);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t MarkEpisodeAsUnplayedAppIntent.$episode.getter()
{
  return sub_1E3E77570();
}

uint64_t MarkEpisodeAsUnplayedAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t MarkEpisodeAsUnplayedAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*MarkEpisodeAsUnplayedAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t MarkEpisodeAsUnplayedAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t (*MarkEpisodeAsUnplayedAppIntent.episode.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t MarkEpisodeAsUnplayedAppIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = type metadata accessor for UpdateEpisodePlayStateIntent();
  *(void *)(v2 + 64) = swift_task_alloc();
  sub_1E3E79380();
  *(void *)(v2 + 72) = swift_task_alloc();
  *(void *)(v2 + 80) = type metadata accessor for EpisodeEntity(0);
  *(void *)(v2 + 88) = swift_task_alloc();
  *(void *)(v2 + 96) = swift_task_alloc();
  *(void *)(v2 + 104) = swift_task_alloc();
  uint64_t v3 = sub_1E3E7A880();
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = *(void *)(v3 - 8);
  *(void *)(v2 + 128) = swift_task_alloc();
  *(_OWORD *)(v2 + 136) = *v1;
  return MEMORY[0x1F4188298](sub_1E3C54B3C, 0, 0);
}

uint64_t sub_1E3C54B3C()
{
  uint64_t v21 = v0;
  sub_1E3E7A740();
  swift_retain_n();
  swift_retain_n();
  uint64_t v1 = sub_1E3E7A860();
  os_log_type_t v2 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v17 = v0[14];
    uint64_t v18 = v0[16];
    uint64_t v16 = v0[15];
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v20 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E77550();
    swift_release();
    swift_release();
    uint64_t v5 = sub_1E3E7CD90();
    v0[5] = sub_1E3C150B8(v5, v6, &v20);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1E3BC5000, v1, v2, "Received a request to mark episode as unplayed: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v4, -1, -1);
    MEMORY[0x1E4E79510](v3, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    uint64_t v8 = v0[15];
    uint64_t v7 = v0[16];
    uint64_t v9 = v0[14];
    swift_release_n();
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  uint64_t v10 = (void *)v0[8];
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  void *v10 = 2;
  unint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE25250 + dword_1EAE25250);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[19] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1E3C54E20;
  uint64_t v12 = v0[17];
  uint64_t v14 = v0[8];
  uint64_t v13 = v0[9];
  return v19(v13, v14, v12);
}

uint64_t sub_1E3C54E20()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 64);
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  sub_1E3C4BF14(v3, (uint64_t (*)(void))type metadata accessor for UpdateEpisodePlayStateIntent);
  if (v0)
  {
    uint64_t v4 = sub_1E3C4BAD0;
  }
  else
  {
    sub_1E3C4BF14(*(void *)(v2 + 72), MEMORY[0x1E4F919C8]);
    uint64_t v4 = sub_1E3C54F88;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3C54F88()
{
  uint64_t v10 = v0;
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  OpenEpisodeAppIntent.init()(v9);
  uint64_t v5 = v9[0];
  uint64_t v4 = v9[1];
  uint64_t v6 = v9[2];
  sub_1E3C2ACB0(v2, v1);
  sub_1E3C2ACB0(v1, v3);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C4BF14(v1, type metadata accessor for EpisodeEntity);
  *(unsigned char *)(v0 + 168) = 3;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  sub_1E3C4BF14(v2, type metadata accessor for EpisodeEntity);
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v6;
  sub_1E3C48550();
  sub_1E3E77450();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1E3C55164@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24070 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25860);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C5520C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25878);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25880);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25888);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3C553A0@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_1E3C5542C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return MarkEpisodeAsUnplayedAppIntent.perform()(a1);
}

uint64_t sub_1E3C554C8(uint64_t a1)
{
  unint64_t v2 = sub_1E3C46438();

  return MEMORY[0x1F40D3C90](a1, v2);
}

unint64_t sub_1E3C55508()
{
  unint64_t result = qword_1EAE25898;
  if (!qword_1EAE25898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25898);
  }
  return result;
}

unint64_t sub_1E3C55560()
{
  unint64_t result = qword_1EAE258A0;
  if (!qword_1EAE258A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE258A0);
  }
  return result;
}

uint64_t sub_1E3C555B4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C555E8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for MarkEpisodeAsUnplayedAppIntent()
{
  return &type metadata for MarkEpisodeAsUnplayedAppIntent;
}

uint64_t sub_1E3C55624()
{
  return sub_1E3C10DE8(&qword_1EAE258B0, &qword_1EAE258B8);
}

uint64_t PlayStationAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v25 = a1;
  uint64_t v24 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v23 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE258F0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E77B60();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v26 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v22 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE258F8);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v17 = type metadata accessor for StationEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  uint64_t v18 = sub_1E3E77430();
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v8, 1, 1, v18);
  v19(v5, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v23, *MEMORY[0x1E4F186F0], v24);
  sub_1E3C55A4C();
  uint64_t result = sub_1E3E775A0();
  uint64_t v21 = v25;
  *unint64_t v25 = v22;
  v21[1] = result;
  return result;
}

unint64_t sub_1E3C55A4C()
{
  unint64_t result = qword_1EAE290E0;
  if (!qword_1EAE290E0)
  {
    type metadata accessor for StationEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE290E0);
  }
  return result;
}

uint64_t PlayStationAppIntent.station.getter()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3C55AC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StationEntity();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C55C68(a1, (uint64_t)&v9 - v6);
  sub_1E3C55C68((uint64_t)v7, (uint64_t)v4);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C56CA4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StationEntity);
  swift_release();
  return swift_release();
}

uint64_t PlayStationAppIntent.station.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StationEntity();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3C55C68(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E77560();
  return sub_1E3C56CA4(a1, (uint64_t (*)(void))type metadata accessor for StationEntity);
}

uint64_t sub_1E3C55C68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C55CCC()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE258C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE258C0);
  return sub_1E3E77B40();
}

uint64_t static PlayStationAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24078 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE258C0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C55DDC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  __swift_allocate_value_buffer(v0, qword_1EAE258D8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EAE258D8);
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t static PlayStationAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24080 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE258D8);

  return sub_1E3C47314(v3, a1);
}

uint64_t static PlayStationAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static PlayStationAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static PlayStationAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25900);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25908);
  MEMORY[0x1F4188790](v1);
  sub_1E3C4687C();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25910);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t PlayStationAppIntent.$station.getter()
{
  return sub_1E3E77570();
}

uint64_t PlayStationAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t PlayStationAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*PlayStationAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t PlayStationAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t (*PlayStationAppIntent.station.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t PlayStationAppIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  uint64_t v3 = sub_1E3E77430();
  *(void *)(v2 + 88) = v3;
  *(void *)(v2 + 96) = *(void *)(v3 - 8);
  *(void *)(v2 + 104) = swift_task_alloc();
  type metadata accessor for StationEntity();
  *(void *)(v2 + 112) = swift_task_alloc();
  sub_1E3E7CCE0();
  *(void *)(v2 + 120) = swift_task_alloc();
  type metadata accessor for PlayStationIntent();
  *(void *)(v2 + 128) = swift_task_alloc();
  *(_OWORD *)(v2 + 136) = *v1;
  return MEMORY[0x1F4188298](sub_1E3C56370, 0, 0);
}

uint64_t sub_1E3C56370()
{
  uint64_t v8 = v0;
  OpenAppLocationAppIntent.init()(v7);
  uint64_t v1 = v7[1];
  *(void *)(v0 + 152) = v7[0];
  *(void *)(v0 + 160) = v1;
  *(void *)(v0 + 168) = v7[2];
  *(unsigned char *)(v0 + 192) = 11;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  *(unsigned char *)(v0 + 193) = 2;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE25240 + dword_1EAE25240);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C564D8;
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 128);
  return v6((uint64_t)v6, v4, v3);
}

uint64_t sub_1E3C564D8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 128);
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  sub_1E3C56CA4(v2, (uint64_t (*)(void))type metadata accessor for PlayStationIntent);
  if (v0) {
    uint64_t v3 = sub_1E3C56804;
  }
  else {
    uint64_t v3 = sub_1E3C5661C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1E3C5661C()
{
  uint64_t v1 = v0[20];
  uint64_t v8 = v0[21];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v7 = v0[11];
  v0[5] = v0[19];
  v0[6] = v1;
  v0[7] = v8;
  sub_1E3E7CCD0();
  sub_1E3E7CCC0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  sub_1E3E774B0();
  sub_1E3C56CA4(v2, (uint64_t (*)(void))type metadata accessor for StationEntity);
  sub_1E3E7CCB0();
  swift_bridgeObjectRelease();
  sub_1E3E7CCC0();
  sub_1E3E77420();
  sub_1E3C52654();
  sub_1E3E77440();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1E3C56804()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v3 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v5 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v6 = v0[11];
  v0[2] = v0[19];
  v0[3] = v3;
  v0[4] = v2;
  sub_1E3C48C4C(v1, v4);
  sub_1E3C52654();
  sub_1E3E77440();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1E3C56928@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24078 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE258C0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C569D0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25900);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25908);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25910);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3C56B50@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24080 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE258D8);

  return sub_1E3C47314(v3, a1);
}

uint64_t sub_1E3C56BCC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return PlayStationAppIntent.perform()(a1);
}

uint64_t sub_1E3C56C68(uint64_t a1)
{
  unint64_t v2 = sub_1E3C4687C();

  return MEMORY[0x1F40D3C90](a1, v2);
}

uint64_t sub_1E3C56CA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1E3C56D08()
{
  unint64_t result = qword_1EAE25920;
  if (!qword_1EAE25920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25920);
  }
  return result;
}

unint64_t sub_1E3C56D60()
{
  unint64_t result = qword_1EAE25928;
  if (!qword_1EAE25928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25928);
  }
  return result;
}

uint64_t sub_1E3C56DB4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C56DE8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for PlayStationAppIntent()
{
  return &type metadata for PlayStationAppIntent;
}

uint64_t sub_1E3C56E24()
{
  return sub_1E3C10DE8(&qword_1EAE25938, &qword_1EAE25940);
}

uint64_t sub_1E3C56E60()
{
  return sub_1E3C10DE8(&qword_1EAE25570, &qword_1EAE25578);
}

uint64_t sub_1E3C56E9C()
{
  return sub_1E3C10DE8(&qword_1EAE25580, &qword_1EAE25578);
}

uint64_t FollowShowAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v25 = a1;
  uint64_t v24 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v23 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25160);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E77B60();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v26 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v22 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25978);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v17 = type metadata accessor for ShowEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  uint64_t v18 = sub_1E3E77430();
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v8, 1, 1, v18);
  v19(v5, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v23, *MEMORY[0x1E4F186F0], v24);
  sub_1E3C58448((unint64_t *)&qword_1EBFE2F38);
  uint64_t result = sub_1E3E775A0();
  uint64_t v21 = v25;
  *unint64_t v25 = v22;
  v21[1] = result;
  return result;
}

uint64_t FollowShowAppIntent.show.getter()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3C572FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShowEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C3A130(a1, (uint64_t)&v9 - v6);
  sub_1E3C3A130((uint64_t)v7, (uint64_t)v4);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C583E8((uint64_t)v7, type metadata accessor for ShowEntity);
  swift_release();
  return swift_release();
}

uint64_t FollowShowAppIntent.show.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShowEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3C3A130(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E77560();
  return sub_1E3C583E8(a1, type metadata accessor for ShowEntity);
}

uint64_t sub_1E3C5749C()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE25948);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25948);
  return sub_1E3E77B40();
}

uint64_t static FollowShowAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C34554(&qword_1EAE24088, MEMORY[0x1E4F27608], (uint64_t)qword_1EAE25948, a1);
}

uint64_t sub_1E3C5753C()
{
  uint64_t v0 = sub_1E3E77740();
  __swift_allocate_value_buffer(v0, qword_1EAE25960);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25960);
  return sub_1E3E77730();
}

uint64_t static FollowShowAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C34554(&qword_1EAE24090, MEMORY[0x1E4F18510], (uint64_t)qword_1EAE25960, a1);
}

uint64_t static FollowShowAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static FollowShowAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static FollowShowAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25980);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25988);
  MEMORY[0x1F4188790](v1);
  sub_1E3C467D4();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25990);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t FollowShowAppIntent.$show.getter()
{
  return sub_1E3E77570();
}

uint64_t FollowShowAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t FollowShowAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*FollowShowAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t FollowShowAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t (*FollowShowAppIntent.show.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t FollowShowAppIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  *(void *)(v2 + 48) = swift_task_alloc();
  *(void *)(v2 + 56) = type metadata accessor for FollowFeedIntent();
  *(void *)(v2 + 64) = swift_task_alloc();
  *(void *)(v2 + 72) = type metadata accessor for ShowEntity(0);
  *(void *)(v2 + 80) = swift_task_alloc();
  *(void *)(v2 + 88) = swift_task_alloc();
  *(void *)(v2 + 96) = swift_task_alloc();
  *(void *)(v2 + 104) = swift_task_alloc();
  *(void *)(v2 + 112) = swift_task_alloc();
  *(_OWORD *)(v2 + 120) = *v1;
  return MEMORY[0x1F4188298](sub_1E3C57A20, 0, 0);
}

uint64_t sub_1E3C57A20()
{
  uint64_t v21 = v0;
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 72);
  uint64_t v17 = *(void *)(v0 + 64);
  uint64_t v18 = *(int **)(v0 + 56);
  uint64_t v15 = *(void *)(v0 + 48);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  OpenShowAppIntent.init()(v20);
  uint64_t v4 = v20[1];
  *(void *)(v0 + 136) = v20[0];
  *(void *)(v0 + 144) = v4;
  *(void *)(v0 + 152) = v20[2];
  sub_1E3C3A130(v1, v2);
  sub_1E3C3A130(v2, v3);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C583E8(v2, type metadata accessor for ShowEntity);
  *(unsigned char *)(v0 + 176) = 0;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  sub_1E3C583E8(v1, type metadata accessor for ShowEntity);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  sub_1E3C242A0(v13 + *(int *)(v14 + 32), v15);
  sub_1E3C583E8(v13, type metadata accessor for ShowEntity);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  uint64_t v5 = *(void *)(v16 + 40);
  sub_1E3C583E8(v16, type metadata accessor for ShowEntity);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  sub_1E3E774B0();
  char v6 = *(unsigned char *)(v0 + 177);
  sub_1E3C583E8(v1, type metadata accessor for ShowEntity);
  sub_1E3C24558(v15, v17);
  uint64_t v7 = v17 + v18[5];
  *(void *)uint64_t v7 = v5;
  *(unsigned char *)(v7 + 8) = 0;
  uint64_t v8 = (void *)(v17 + v18[6]);
  *uint64_t v8 = 0;
  v8[1] = 0;
  *(unsigned char *)(v17 + v18[7]) = v6;
  unint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAE25230 + dword_1EAE25230);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1E3C57D00;
  uint64_t v10 = *(void *)(v0 + 120);
  uint64_t v11 = *(void *)(v0 + 64);
  return v19(v11, v10);
}

uint64_t sub_1E3C57D00(void *a1, uint64_t a2, char a3)
{
  uint64_t v8 = *v4;
  *(void *)(*v4 + 168) = v3;
  swift_task_dealloc();
  sub_1E3C583E8(*(void *)(v8 + 64), (uint64_t (*)(void))type metadata accessor for FollowFeedIntent);
  if (v3)
  {
    uint64_t v9 = sub_1E3C58000;
  }
  else
  {
    sub_1E3C1168C(a1, a2, a3);
    uint64_t v9 = sub_1E3C57E6C;
  }
  return MEMORY[0x1F4188298](v9, 0, 0);
}

uint64_t sub_1E3C57E6C()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[14];
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  v0[2] = v3;
  v0[3] = v1;
  v0[4] = v2;
  sub_1E3C58448(&qword_1EBFE2F40);
  sub_1E3C3A30C();
  sub_1E3E77460();
  sub_1E3C583E8(v4, type metadata accessor for ShowEntity);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1E3C58000()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C580E4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24088 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25948);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C5818C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25980);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25988);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25990);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3C58310(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return FollowShowAppIntent.perform()(a1);
}

uint64_t sub_1E3C583AC(uint64_t a1)
{
  unint64_t v2 = sub_1E3C467D4();

  return MEMORY[0x1F40D3C90](a1, v2);
}

uint64_t sub_1E3C583E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1E3C58448(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ShowEntity(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3C58490()
{
  unint64_t result = qword_1EAE259A0;
  if (!qword_1EAE259A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE259A0);
  }
  return result;
}

unint64_t sub_1E3C584E8()
{
  unint64_t result = qword_1EAE259A8;
  if (!qword_1EAE259A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE259A8);
  }
  return result;
}

uint64_t sub_1E3C5853C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C58570()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for FollowShowAppIntent()
{
  return &type metadata for FollowShowAppIntent;
}

uint64_t sub_1E3C585AC()
{
  return sub_1E3C10DE8(&qword_1EAE259B8, &qword_1EAE259C0);
}

uint64_t sub_1E3C585E8()
{
  return sub_1E3C10DE8(&qword_1EAE251B8, &qword_1EAE251C0);
}

uint64_t sub_1E3C58624()
{
  return sub_1E3C10DE8(&qword_1EAE251C8, &qword_1EAE251C0);
}

uint64_t SaveEpisodeAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v21 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1E3E77B60();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v23 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v20 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25768);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  uint64_t v24 = 0;
  uint64_t v15 = sub_1E3E77430();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v9, 1, 1, v15);
  v16(v6, 1, 1, v15);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F186F0], v21);
  sub_1E3C46EA0();
  uint64_t result = sub_1E3E775A0();
  uint64_t v18 = v22;
  *uint64_t v22 = v20;
  v18[1] = result;
  return result;
}

uint64_t SaveEpisodeAppIntent.episodes.getter()
{
  sub_1E3E77550();
  return v1;
}

uint64_t SaveEpisodeAppIntent.episodes.setter()
{
  return sub_1E3E77560();
}

uint64_t sub_1E3C58A2C()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE259C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE259C8);
  return sub_1E3E77B40();
}

uint64_t static SaveEpisodeAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24098 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE259C8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static SaveEpisodeAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t static SaveEpisodeAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static SaveEpisodeAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static SaveEpisodeAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE259E0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE259E8);
  MEMORY[0x1F4188790](v1);
  sub_1E3C465DC();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE259F0);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t SaveEpisodeAppIntent.$episodes.getter()
{
  return sub_1E3E77570();
}

uint64_t SaveEpisodeAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t SaveEpisodeAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*SaveEpisodeAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t SaveEpisodeAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t (*SaveEpisodeAppIntent.episodes.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t SaveEpisodeAppIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  uint64_t v3 = type metadata accessor for EpisodeEntity(0);
  *(void *)(v2 + 72) = v3;
  *(void *)(v2 + 80) = *(void *)(v3 - 8);
  *(void *)(v2 + 88) = swift_task_alloc();
  uint64_t v4 = sub_1E3E7A880();
  *(void *)(v2 + 96) = v4;
  *(void *)(v2 + 104) = *(void *)(v4 - 8);
  *(void *)(v2 + 112) = swift_task_alloc();
  *(_OWORD *)(v2 + 120) = *v1;
  return MEMORY[0x1F4188298](sub_1E3C59004, 0, 0);
}

uint64_t sub_1E3C59004()
{
  uint64_t v35 = v0;
  sub_1E3E7A740();
  swift_retain_n();
  swift_retain_n();
  uint64_t v1 = sub_1E3E7A860();
  os_log_type_t v2 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v30 = v0[13];
    uint64_t v31 = v0[12];
    uint64_t v32 = v0[14];
    uint64_t v3 = v0[9];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v34 = v29;
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E77550();
    swift_release();
    swift_release();
    uint64_t v5 = MEMORY[0x1E4E76990](v0[6], v3);
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[7] = sub_1E3C150B8(v5, v7, &v34);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1E3BC5000, v1, v2, "Received a request to bookmark episodes: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v29, -1, -1);
    MEMORY[0x1E4E79510](v4, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
  }
  else
  {
    uint64_t v9 = v0[13];
    uint64_t v8 = v0[14];
    uint64_t v10 = v0[12];
    swift_release_n();
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  uint64_t v11 = v0[5];
  int64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[11];
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1E3CC7594(0, v12, 0);
    uint64_t v15 = v11 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v16 = *(void *)(v13 + 72);
    do
    {
      sub_1E3C2ACB0(v15, v0[11]);
      uint64_t v17 = *(void **)(v14 + 16);
      if (v17)
      {
        char v18 = 1;
        uint64_t v19 = *(void *)(v14 + 16);
      }
      else
      {
        char v18 = 0;
        uint64_t v19 = *(void *)(v14 + 40);
      }
      uint64_t v20 = v0[11];
      id v21 = v17;
      sub_1E3C525F8(v20);
      uint64_t v22 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1E3CC7594(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v34;
      }
      unint64_t v24 = *(void *)(v22 + 16);
      unint64_t v23 = *(void *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1E3CC7594(v23 > 1, v24 + 1, 1);
        uint64_t v22 = v34;
      }
      *(void *)(v22 + 16) = v24 + 1;
      uint64_t v25 = v22 + 24 * v24;
      *(void *)(v25 + 32) = v19;
      *(void *)(v25 + 40) = 0;
      *(unsigned char *)(v25 + 48) = v18;
      v15 += v16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  v0[17] = v22;
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE25220 + dword_1EAE25220);
  char v26 = (void *)swift_task_alloc();
  v0[18] = v26;
  *char v26 = v0;
  v26[1] = sub_1E3C5941C;
  uint64_t v27 = v0[15];
  return v33((uint64_t)v33, v22, v27);
}

uint64_t sub_1E3C5941C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    os_log_type_t v2 = sub_1E3C59684;
  }
  else {
    os_log_type_t v2 = sub_1E3C5954C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C5954C()
{
  uint64_t v7 = v0;
  OpenAppLocationAppIntent.init()(v6);
  uint64_t v2 = v6[0];
  uint64_t v1 = v6[1];
  uint64_t v3 = v6[2];
  *(unsigned char *)(v0 + 160) = 5;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  *(unsigned char *)(v0 + 161) = 0;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = v3;
  sub_1E3C52654();
  sub_1E3E77450();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1E3C59684()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C596F4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24098 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE259C8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C5979C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE259E0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE259E8);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE259F0);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3C5991C@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_1E3C599A8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return SaveEpisodeAppIntent.perform()(a1);
}

uint64_t sub_1E3C59A44(uint64_t a1)
{
  unint64_t v2 = sub_1E3C465DC();

  return MEMORY[0x1F40D3C90](a1, v2);
}

unint64_t sub_1E3C59A84()
{
  unint64_t result = qword_1EAE25A00;
  if (!qword_1EAE25A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25A00);
  }
  return result;
}

unint64_t sub_1E3C59ADC()
{
  unint64_t result = qword_1EAE25A08;
  if (!qword_1EAE25A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25A08);
  }
  return result;
}

uint64_t sub_1E3C59B30()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C59B64()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SaveEpisodeAppIntent()
{
  return &type metadata for SaveEpisodeAppIntent;
}

uint64_t sub_1E3C59BA0()
{
  return sub_1E3C10DE8(&qword_1EAE25A18, &qword_1EAE25A20);
}

uint64_t PlayEpisodeLastAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v24 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  unint64_t v23 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25500);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E77B60();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v26 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v22 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25508);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v17 = type metadata accessor for EpisodeEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  uint64_t v18 = sub_1E3E77430();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v8, 1, 1, v18);
  v19(v5, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v23, *MEMORY[0x1E4F186F0], v24);
  sub_1E3C46EA0();
  uint64_t result = sub_1E3E775A0();
  id v21 = v25;
  *uint64_t v25 = v22;
  v21[1] = result;
  return result;
}

uint64_t PlayEpisodeLastAppIntent.episode.getter()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3C59FEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C2ACB0(a1, (uint64_t)&v9 - v6);
  sub_1E3C2ACB0((uint64_t)v7, (uint64_t)v4);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C525F8((uint64_t)v7);
  swift_release();
  return swift_release();
}

uint64_t PlayEpisodeLastAppIntent.episode.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3C2ACB0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E77560();
  return sub_1E3C525F8(a1);
}

uint64_t sub_1E3C5A164()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE25A28);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25A28);
  return sub_1E3E77B40();
}

uint64_t static PlayEpisodeLastAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25A28);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C5A270()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  __swift_allocate_value_buffer(v0, qword_1EAE25A40);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25A40);
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t static PlayEpisodeLastAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240A8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25A40);

  return sub_1E3C47314(v3, a1);
}

uint64_t static PlayEpisodeLastAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static PlayEpisodeLastAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static PlayEpisodeLastAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25A58);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25A60);
  MEMORY[0x1F4188790](v1);
  sub_1E3C464E0();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25A68);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t PlayEpisodeLastAppIntent.$episode.getter()
{
  return sub_1E3E77570();
}

uint64_t PlayEpisodeLastAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t PlayEpisodeLastAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*PlayEpisodeLastAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t PlayEpisodeLastAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t (*PlayEpisodeLastAppIntent.episode.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t PlayEpisodeLastAppIntent.perform()(uint64_t a1)
{
  v2[7] = a1;
  type metadata accessor for EpisodeEntity(0);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  uint64_t v3 = sub_1E3E77430();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *v1;
  uint64_t v6 = v1[1];
  v2[13] = v4;
  v2[14] = v5;
  v2[15] = v6;
  v2[5] = v5;
  v2[6] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v2[16] = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1E3C5A814;
  return sub_1E3C5AACC(v4);
}

uint64_t sub_1E3C5A814()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1E3C5A910, 0, 0);
}

uint64_t sub_1E3C5A910()
{
  uint64_t v13 = v0;
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v11 = *(void *)(v0 + 88);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  OpenEpisodeAppIntent.init()(v12);
  uint64_t v6 = v12[0];
  uint64_t v7 = v12[1];
  uint64_t v8 = v12[2];
  sub_1E3C2ACB0(v3, v5);
  sub_1E3C2ACB0(v5, v4);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C525F8(v5);
  *(unsigned char *)(v0 + 136) = 0;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  sub_1E3C525F8(v3);
  *(void *)(v0 + 16) = v6;
  *(void *)(v0 + 24) = v7;
  *(void *)(v0 + 32) = v8;
  sub_1E3C48550();
  sub_1E3E77440();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1E3C5AACC(uint64_t a1)
{
  *(void *)(v2 + 72) = a1;
  sub_1E3E7CCE0();
  *(void *)(v2 + 80) = swift_task_alloc();
  type metadata accessor for EpisodeEntity(0);
  *(void *)(v2 + 88) = swift_task_alloc();
  *(void *)(v2 + 96) = swift_task_alloc();
  *(_OWORD *)(v2 + 104) = *v1;
  return MEMORY[0x1F4188298](sub_1E3C5ABA0, 0, 0);
}

uint64_t sub_1E3C5ABA0()
{
  uint64_t v1 = *(void *)(v0 + 96);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v2 = *(void *)(v1 + 32);
  *(void *)(v0 + 120) = v2;
  swift_bridgeObjectRetain();
  sub_1E3C525F8(v1);
  if (v2)
  {
    char v4 = 2;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 88);
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E77550();
    swift_release();
    swift_release();
    uint64_t v3 = *(void *)(v5 + 40);
    sub_1E3C525F8(v5);
    char v4 = 0;
  }
  *(unsigned char *)(v0 + 49) = v4;
  *(void *)(v0 + 128) = v3;
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v2;
  *(unsigned char *)(v0 + 32) = v4;
  *(void *)(v0 + 40) = 1;
  *(unsigned char *)(v0 + 48) = 2;
  uint64_t v8 = (uint64_t (*)(void))((char *)&dword_1EAE25218 + dword_1EAE25218);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1E3C5AD18;
  return v8();
}

uint64_t sub_1E3C5AD18()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 128);
  uint64_t v3 = *(void *)(*(void *)v1 + 120);
  char v4 = *(unsigned char *)(*(void *)v1 + 49);
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  sub_1E3C1168C(v2, v3, v4);
  sub_1E3C5B530((id)1, 2u);
  if (v0) {
    uint64_t v5 = sub_1E3C5AFC4;
  }
  else {
    uint64_t v5 = sub_1E3C5AE7C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3C5AE7C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  sub_1E3E7CCD0();
  sub_1E3E7CCC0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  sub_1E3E774B0();
  sub_1E3C525F8(v1);
  sub_1E3E7CCB0();
  swift_bridgeObjectRelease();
  sub_1E3E7CCC0();
  sub_1E3E77420();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3C5AFC4()
{
  uint64_t v1 = (void *)v0[18];
  sub_1E3C48C4C(v1, v0[9]);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1E3C5B050@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25A28);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C5B0F8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25A58);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25A60);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25A68);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3C5B280@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240A8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25A40);

  return sub_1E3C47314(v3, a1);
}

uint64_t sub_1E3C5B2FC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return PlayEpisodeLastAppIntent.perform()(a1);
}

uint64_t sub_1E3C5B398(uint64_t a1)
{
  unint64_t v2 = sub_1E3C464E0();

  return MEMORY[0x1F40D3C90](a1, v2);
}

unint64_t sub_1E3C5B3D8()
{
  unint64_t result = qword_1EAE25A80;
  if (!qword_1EAE25A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25A80);
  }
  return result;
}

unint64_t sub_1E3C5B430()
{
  unint64_t result = qword_1EAE25A88;
  if (!qword_1EAE25A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25A88);
  }
  return result;
}

uint64_t sub_1E3C5B484()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C5B4B8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for PlayEpisodeLastAppIntent()
{
  return &type metadata for PlayEpisodeLastAppIntent;
}

uint64_t sub_1E3C5B4F4()
{
  return sub_1E3C10DE8(&qword_1EAE25A98, &qword_1EAE25AA0);
}

void sub_1E3C5B530(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
}
  }

uint64_t PlayEpisodeNextAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v24 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  unint64_t v23 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25500);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E77B60();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v26 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v22 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25508);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v17 = type metadata accessor for EpisodeEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  uint64_t v18 = sub_1E3E77430();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v8, 1, 1, v18);
  v19(v5, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v23, *MEMORY[0x1E4F186F0], v24);
  sub_1E3C46EA0();
  uint64_t result = sub_1E3E775A0();
  id v21 = v25;
  *uint64_t v25 = v22;
  v21[1] = result;
  return result;
}

uint64_t PlayEpisodeNextAppIntent.episode.getter()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3C5B954(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C2ACB0(a1, (uint64_t)&v9 - v6);
  sub_1E3C2ACB0((uint64_t)v7, (uint64_t)v4);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C525F8((uint64_t)v7);
  swift_release();
  return swift_release();
}

uint64_t PlayEpisodeNextAppIntent.episode.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodeEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3C2ACB0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E77560();
  return sub_1E3C525F8(a1);
}

uint64_t sub_1E3C5BACC()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE25AA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25AA8);
  return sub_1E3E77B40();
}

uint64_t static PlayEpisodeNextAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240B0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25AA8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C5BBD8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  __swift_allocate_value_buffer(v0, qword_1EAE25AC0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25AC0);
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t static PlayEpisodeNextAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25AC0);

  return sub_1E3C47314(v3, a1);
}

uint64_t static PlayEpisodeNextAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static PlayEpisodeNextAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static PlayEpisodeNextAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25AD8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25AE0);
  MEMORY[0x1F4188790](v1);
  sub_1E3C46534();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25AE8);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t PlayEpisodeNextAppIntent.$episode.getter()
{
  return sub_1E3E77570();
}

uint64_t PlayEpisodeNextAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t PlayEpisodeNextAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*PlayEpisodeNextAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t PlayEpisodeNextAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t (*PlayEpisodeNextAppIntent.episode.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t PlayEpisodeNextAppIntent.perform()(uint64_t a1)
{
  v2[7] = a1;
  type metadata accessor for EpisodeEntity(0);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  uint64_t v3 = sub_1E3E77430();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *v1;
  uint64_t v6 = v1[1];
  v2[13] = v4;
  v2[14] = v5;
  v2[15] = v6;
  v2[5] = v5;
  v2[6] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v2[16] = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1E3C5C180;
  return sub_1E3C5C43C(v4);
}

uint64_t sub_1E3C5C180()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1E3C5C27C, 0, 0);
}

uint64_t sub_1E3C5C27C()
{
  uint64_t v13 = v0;
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v11 = *(void *)(v0 + 88);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  OpenEpisodeAppIntent.init()(v12);
  uint64_t v6 = v12[0];
  uint64_t v7 = v12[1];
  uint64_t v8 = v12[2];
  sub_1E3C2ACB0(v3, v5);
  sub_1E3C2ACB0(v5, v4);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C525F8(v5);
  *(unsigned char *)(v0 + 136) = 4;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  sub_1E3C525F8(v3);
  *(void *)(v0 + 16) = v6;
  *(void *)(v0 + 24) = v7;
  *(void *)(v0 + 32) = v8;
  sub_1E3C48550();
  sub_1E3E77440();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1E3C5C43C(uint64_t a1)
{
  *(void *)(v2 + 72) = a1;
  sub_1E3E7CCE0();
  *(void *)(v2 + 80) = swift_task_alloc();
  type metadata accessor for EpisodeEntity(0);
  *(void *)(v2 + 88) = swift_task_alloc();
  *(void *)(v2 + 96) = swift_task_alloc();
  *(_OWORD *)(v2 + 104) = *v1;
  return MEMORY[0x1F4188298](sub_1E3C5C510, 0, 0);
}

uint64_t sub_1E3C5C510()
{
  uint64_t v1 = *(void *)(v0 + 96);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v2 = *(void *)(v1 + 32);
  *(void *)(v0 + 120) = v2;
  swift_bridgeObjectRetain();
  sub_1E3C525F8(v1);
  if (v2)
  {
    char v4 = 2;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 88);
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E77550();
    swift_release();
    swift_release();
    uint64_t v3 = *(void *)(v5 + 40);
    sub_1E3C525F8(v5);
    char v4 = 0;
  }
  *(unsigned char *)(v0 + 49) = v4;
  *(void *)(v0 + 128) = v3;
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v2;
  *(unsigned char *)(v0 + 32) = v4;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 2;
  uint64_t v8 = (uint64_t (*)(void))((char *)&dword_1EAE25210 + dword_1EAE25210);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1E3C5C684;
  return v8();
}

uint64_t sub_1E3C5C684()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 128);
  uint64_t v3 = *(void *)(*(void *)v1 + 120);
  char v4 = *(unsigned char *)(*(void *)v1 + 49);
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  sub_1E3C1168C(v2, v3, v4);
  sub_1E3C5B530(0, 2u);
  if (v0) {
    uint64_t v5 = sub_1E3C5AFC4;
  }
  else {
    uint64_t v5 = sub_1E3C5C7E8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3C5C7E8()
{
  uint64_t v1 = *(void *)(v0 + 88);
  sub_1E3E7CCD0();
  sub_1E3E7CCC0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  sub_1E3E774B0();
  sub_1E3C525F8(v1);
  sub_1E3E7CCB0();
  swift_bridgeObjectRelease();
  sub_1E3E7CCC0();
  sub_1E3E77420();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3C5C930@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240B0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25AA8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C5C9D8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25AD8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25AE0);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25AE8);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3C5CB64@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25AC0);

  return sub_1E3C47314(v3, a1);
}

uint64_t sub_1E3C5CBE0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return PlayEpisodeNextAppIntent.perform()(a1);
}

uint64_t sub_1E3C5CC7C(uint64_t a1)
{
  unint64_t v2 = sub_1E3C46534();

  return MEMORY[0x1F40D3C90](a1, v2);
}

unint64_t sub_1E3C5CCBC()
{
  unint64_t result = qword_1EAE25B00;
  if (!qword_1EAE25B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25B00);
  }
  return result;
}

unint64_t sub_1E3C5CD14()
{
  unint64_t result = qword_1EAE25B08;
  if (!qword_1EAE25B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25B08);
  }
  return result;
}

uint64_t sub_1E3C5CD68()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C5CD9C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for PlayEpisodeNextAppIntent()
{
  return &type metadata for PlayEpisodeNextAppIntent;
}

uint64_t sub_1E3C5CDD8()
{
  return sub_1E3C10DE8(&qword_1EAE25B18, &qword_1EAE25B20);
}

uint64_t DownloadEpisodesAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v21 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1E3E77B60();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v23 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v20 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25768);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  uint64_t v24 = 0;
  uint64_t v15 = sub_1E3E77430();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v9, 1, 1, v15);
  v16(v6, 1, 1, v15);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F186F0], v21);
  sub_1E3C46EA0();
  uint64_t result = sub_1E3E775A0();
  uint64_t v18 = v22;
  *uint64_t v22 = v20;
  v18[1] = result;
  return result;
}

uint64_t DownloadEpisodesAppIntent.episodes.getter()
{
  sub_1E3E77550();
  return v1;
}

uint64_t DownloadEpisodesAppIntent.episodes.setter()
{
  return sub_1E3E77560();
}

uint64_t sub_1E3C5D1E0()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE25B28);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25B28);
  return sub_1E3E77B40();
}

uint64_t static DownloadEpisodesAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25B28);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static DownloadEpisodesAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t static DownloadEpisodesAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static DownloadEpisodesAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static DownloadEpisodesAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25B40);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25B48);
  MEMORY[0x1F4188790](v1);
  sub_1E3C46390();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25B50);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t DownloadEpisodesAppIntent.$episodes.getter()
{
  return sub_1E3E77570();
}

uint64_t DownloadEpisodesAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t DownloadEpisodesAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*DownloadEpisodesAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t DownloadEpisodesAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t (*DownloadEpisodesAppIntent.episodes.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t DownloadEpisodesAppIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  uint64_t v3 = type metadata accessor for EpisodeEntity(0);
  *(void *)(v2 + 72) = v3;
  *(void *)(v2 + 80) = *(void *)(v3 - 8);
  *(void *)(v2 + 88) = swift_task_alloc();
  uint64_t v4 = sub_1E3E7A880();
  *(void *)(v2 + 96) = v4;
  *(void *)(v2 + 104) = *(void *)(v4 - 8);
  *(void *)(v2 + 112) = swift_task_alloc();
  *(_OWORD *)(v2 + 120) = *v1;
  return MEMORY[0x1F4188298](sub_1E3C5D7B8, 0, 0);
}

uint64_t sub_1E3C5D7B8()
{
  uint64_t v35 = v0;
  sub_1E3E7A740();
  swift_retain_n();
  swift_retain_n();
  uint64_t v1 = sub_1E3E7A860();
  os_log_type_t v2 = sub_1E3E7D500();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v30 = v0[13];
    uint64_t v31 = v0[12];
    uint64_t v32 = v0[14];
    uint64_t v3 = v0[9];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v34 = v29;
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E77550();
    swift_release();
    swift_release();
    uint64_t v5 = MEMORY[0x1E4E76990](v0[6], v3);
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[7] = sub_1E3C150B8(v5, v7, &v34);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1E3BC5000, v1, v2, "Received a request to download episodes: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v29, -1, -1);
    MEMORY[0x1E4E79510](v4, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
  }
  else
  {
    uint64_t v9 = v0[13];
    uint64_t v8 = v0[14];
    uint64_t v10 = v0[12];
    swift_release_n();
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  uint64_t v11 = v0[5];
  int64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[11];
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1E3CC7594(0, v12, 0);
    uint64_t v15 = v11 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v16 = *(void *)(v13 + 72);
    do
    {
      sub_1E3C2ACB0(v15, v0[11]);
      uint64_t v17 = *(void **)(v14 + 16);
      if (v17)
      {
        char v18 = 1;
        uint64_t v19 = *(void *)(v14 + 16);
      }
      else
      {
        char v18 = 0;
        uint64_t v19 = *(void *)(v14 + 40);
      }
      uint64_t v20 = v0[11];
      id v21 = v17;
      sub_1E3C525F8(v20);
      uint64_t v22 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1E3CC7594(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v34;
      }
      unint64_t v24 = *(void *)(v22 + 16);
      unint64_t v23 = *(void *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1E3CC7594(v23 > 1, v24 + 1, 1);
        uint64_t v22 = v34;
      }
      *(void *)(v22 + 16) = v24 + 1;
      uint64_t v25 = v22 + 24 * v24;
      *(void *)(v25 + 32) = v19;
      *(void *)(v25 + 40) = 0;
      *(unsigned char *)(v25 + 48) = v18;
      v15 += v16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  v0[17] = v22;
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE25208 + dword_1EAE25208);
  char v26 = (void *)swift_task_alloc();
  v0[18] = v26;
  *char v26 = v0;
  v26[1] = sub_1E3C5DBD0;
  uint64_t v27 = v0[15];
  return v33((uint64_t)v33, v22, v27);
}

uint64_t sub_1E3C5DBD0()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    os_log_type_t v2 = sub_1E3C59684;
  }
  else {
    os_log_type_t v2 = sub_1E3C5DD00;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C5DD00()
{
  uint64_t v7 = v0;
  OpenAppLocationAppIntent.init()(v6);
  uint64_t v2 = v6[0];
  uint64_t v1 = v6[1];
  uint64_t v3 = v6[2];
  *(unsigned char *)(v0 + 160) = 9;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  *(unsigned char *)(v0 + 161) = 2;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = v3;
  sub_1E3C52654();
  sub_1E3E77450();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1E3C5DE3C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25B28);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C5DEE8@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_1E3C5DF74(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return DownloadEpisodesAppIntent.perform()(a1);
}

uint64_t sub_1E3C5E010(uint64_t a1)
{
  unint64_t v2 = sub_1E3C46390();

  return MEMORY[0x1F40D3C90](a1, v2);
}

unint64_t sub_1E3C5E050()
{
  unint64_t result = qword_1EAE25B60;
  if (!qword_1EAE25B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25B60);
  }
  return result;
}

unint64_t sub_1E3C5E0A8()
{
  unint64_t result = qword_1EAE25B68;
  if (!qword_1EAE25B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25B68);
  }
  return result;
}

uint64_t sub_1E3C5E0FC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C5E130()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DownloadEpisodesAppIntent()
{
  return &type metadata for DownloadEpisodesAppIntent;
}

uint64_t sub_1E3C5E16C()
{
  return sub_1E3C10DE8(&qword_1EAE25B78, &qword_1EAE25B80);
}

unint64_t sub_1E3C5E1AC()
{
  unint64_t result = qword_1EAE25B88;
  if (!qword_1EAE25B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25B88);
  }
  return result;
}

unint64_t sub_1E3C5E204()
{
  unint64_t result = qword_1EAE25B90;
  if (!qword_1EAE25B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25B90);
  }
  return result;
}

uint64_t sub_1E3C5E258()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C5E28C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3C5E2A8()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3C5E2CC()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE3BC70);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE3BC70);
  return sub_1E3E77B40();
}

uint64_t sub_1E3C5E338()
{
  return sub_1E3E77570();
}

uint64_t sub_1E3C5E35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  type metadata accessor for ShowEntity(0);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C5E418, 0, 0);
}

uint64_t sub_1E3C5E418()
{
  uint64_t v16 = v0;
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v14 = *(void *)(v0 + 144);
  sub_1E3E77550();
  OpenShowAppIntent.init()(v15);
  uint64_t v4 = v15[1];
  *(void *)(v0 + 176) = v15[0];
  *(void *)(v0 + 184) = v4;
  *(void *)(v0 + 192) = v15[2];
  sub_1E3C3A130(v1, v2);
  sub_1E3C3A130(v2, v3);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C46900(v2);
  *(unsigned char *)(v0 + 97) = 1;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  sub_1E3C46900(v1);
  sub_1E3E772F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  sub_1E3E7BE20();
  swift_release();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_1E3E77550();
  uint64_t v5 = *(void *)(v14 + 32);
  *(void *)(v0 + 200) = v5;
  unint64_t v6 = *(void **)(v0 + 144);
  if (v5)
  {
    uint64_t v7 = v6[3];
    char v8 = 2;
  }
  else
  {
    uint64_t v9 = (void *)v6[2];
    if (v9)
    {
      char v8 = 1;
      uint64_t v7 = v6[2];
    }
    else
    {
      char v8 = 0;
      uint64_t v7 = v6[5];
    }
    id v10 = v9;
  }
  *(unsigned char *)(v0 + 98) = v8;
  *(void *)(v0 + 208) = v7;
  swift_bridgeObjectRetain();
  sub_1E3C46900((uint64_t)v6);
  *(void *)(v0 + 80) = v7;
  *(void *)(v0 + 88) = v5;
  *(unsigned char *)(v0 + 96) = v8;
  sub_1E3E772F0();
  *(void *)(v0 + 216) = *(void *)(v0 + 112);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v11;
  unint64_t v12 = sub_1E3C5F1B0();
  *uint64_t v11 = v0;
  v11[1] = sub_1E3C5E67C;
  return MEMORY[0x1F41281F8](v12);
}

uint64_t sub_1E3C5E67C()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 208);
  uint64_t v3 = *(void *)(*(void *)v1 + 200);
  char v4 = *(unsigned char *)(*(void *)v1 + 98);
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  sub_1E3C1168C(v2, v3, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1E3C5E8F0;
  }
  else {
    uint64_t v5 = sub_1E3C5E7F8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3C5E7F8()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  v0[7] = v3;
  v0[8] = v1;
  v0[9] = v2;
  sub_1E3C3A30C();
  sub_1E3E77450();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1E3C5E8F0()
{
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C5E9B4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240C8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE3BC70);
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C5EA5C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25BC0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25BC8);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25BD0);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3C5EBE4(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1E3C19DC4;
  return sub_1E3C5E35C(a1, v5, v4);
}

uint64_t sub_1E3C5EC90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3C5ED7C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1E3C5ECB8(uint64_t a1)
{
  unint64_t v2 = sub_1E3C46828();

  return MEMORY[0x1F40D3C90](a1, v2);
}

ValueMetadata *type metadata accessor for UnfollowShowAppIntent()
{
  return &type metadata for UnfollowShowAppIntent;
}

uint64_t sub_1E3C5ED04()
{
  return sub_1E3C10DE8(&qword_1EAE25BA0, &qword_1EAE25BA8);
}

uint64_t sub_1E3C5ED40()
{
  return sub_1E3C10DE8((unint64_t *)&unk_1EAE25690, &qword_1EAE25628);
}

uint64_t sub_1E3C5ED7C()
{
  uint64_t v23 = sub_1E3E77860();
  uint64_t v0 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v22 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25160);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1E3E77B60();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v24 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v21 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25978);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  uint64_t v16 = type metadata accessor for ShowEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
  uint64_t v17 = sub_1E3E77430();
  char v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v18(v7, 1, 1, v17);
  v18(v4, 1, 1, v17);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v22, *MEMORY[0x1E4F186F0], v23);
  sub_1E3C5F158();
  sub_1E3E775A0();
  return v21;
}

unint64_t sub_1E3C5F158()
{
  unint64_t result = qword_1EBFE2F38;
  if (!qword_1EBFE2F38)
  {
    type metadata accessor for ShowEntity(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE2F38);
  }
  return result;
}

unint64_t sub_1E3C5F1B0()
{
  unint64_t result = qword_1EAE25BB8;
  if (!qword_1EAE25BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25BB8);
  }
  return result;
}

uint64_t sub_1E3C5F204@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3E77570();
  *a1 = result;
  return result;
}

uint64_t RemoveEpisodesDownloadAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v21 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1E3E77B60();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v23 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v20 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25768);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  uint64_t v24 = 0;
  uint64_t v15 = sub_1E3E77430();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v9, 1, 1, v15);
  v16(v6, 1, 1, v15);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F186F0], v21);
  sub_1E3C46EA0();
  uint64_t result = sub_1E3E775A0();
  char v18 = v22;
  *uint64_t v22 = v20;
  v18[1] = result;
  return result;
}

uint64_t RemoveEpisodesDownloadAppIntent.episodes.getter()
{
  sub_1E3E77550();
  return v1;
}

uint64_t RemoveEpisodesDownloadAppIntent.episodes.setter()
{
  return sub_1E3E77560();
}

uint64_t sub_1E3C5F5FC()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE25BD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25BD8);
  return sub_1E3E77B40();
}

uint64_t static RemoveEpisodesDownloadAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25BD8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static RemoveEpisodesDownloadAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t static RemoveEpisodesDownloadAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static RemoveEpisodesDownloadAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static RemoveEpisodesDownloadAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25BF0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25BF8);
  MEMORY[0x1F4188790](v1);
  sub_1E3C46588();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25C00);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t RemoveEpisodesDownloadAppIntent.$episodes.getter()
{
  return sub_1E3E77570();
}

uint64_t RemoveEpisodesDownloadAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t RemoveEpisodesDownloadAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*RemoveEpisodesDownloadAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t RemoveEpisodesDownloadAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t (*RemoveEpisodesDownloadAppIntent.episodes.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t RemoveEpisodesDownloadAppIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = *(void *)(type metadata accessor for EpisodeEntity(0) - 8);
  *(void *)(v2 + 64) = swift_task_alloc();
  *(_OWORD *)(v2 + 72) = *v1;
  return MEMORY[0x1F4188298](sub_1E3C5FB74, 0, 0);
}

uint64_t sub_1E3C5FB74()
{
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  uint64_t v1 = v0[5];
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[7];
    uint64_t v4 = v0[8];
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1E3CC7594(0, v2, 0);
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    do
    {
      sub_1E3C2ACB0(v5, v0[8]);
      uint64_t v7 = *(void **)(v4 + 16);
      if (v7)
      {
        char v8 = 1;
        uint64_t v9 = *(void *)(v4 + 16);
      }
      else
      {
        char v8 = 0;
        uint64_t v9 = *(void *)(v4 + 40);
      }
      uint64_t v10 = v0[8];
      id v11 = v7;
      sub_1E3C525F8(v10);
      uint64_t v12 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1E3CC7594(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v12 = v20;
      }
      unint64_t v14 = *(void *)(v12 + 16);
      unint64_t v13 = *(void *)(v12 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1E3CC7594(v13 > 1, v14 + 1, 1);
        uint64_t v12 = v20;
      }
      *(void *)(v12 + 16) = v14 + 1;
      uint64_t v15 = v12 + 24 * v14;
      *(void *)(v15 + 32) = v9;
      *(void *)(v15 + 40) = 0;
      *(unsigned char *)(v15 + 48) = v8;
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  v0[11] = v12;
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE25200 + dword_1EAE25200);
  uint64_t v16 = (void *)swift_task_alloc();
  v0[12] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1E3C5FD90;
  uint64_t v17 = v0[9];
  return v19((uint64_t)v19, v12, v17);
}

uint64_t sub_1E3C5FD90()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    int64_t v2 = sub_1E3C5FFF0;
  }
  else {
    int64_t v2 = sub_1E3C5FEC0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C5FEC0()
{
  uint64_t v7 = v0;
  OpenAppLocationAppIntent.init()(v6);
  uint64_t v2 = v6[0];
  uint64_t v1 = v6[1];
  uint64_t v3 = v6[2];
  *(unsigned char *)(v0 + 112) = 9;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  *(unsigned char *)(v0 + 113) = 2;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = v3;
  sub_1E3C52654();
  sub_1E3E77450();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1E3C5FFF0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C60054@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25BD8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C60100@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_1E3C6018C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return RemoveEpisodesDownloadAppIntent.perform()(a1);
}

uint64_t sub_1E3C60228(uint64_t a1)
{
  unint64_t v2 = sub_1E3C46588();

  return MEMORY[0x1F40D3C90](a1, v2);
}

unint64_t sub_1E3C60268()
{
  unint64_t result = qword_1EAE25C10;
  if (!qword_1EAE25C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25C10);
  }
  return result;
}

unint64_t sub_1E3C602C0()
{
  unint64_t result = qword_1EAE25C18;
  if (!qword_1EAE25C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25C18);
  }
  return result;
}

uint64_t sub_1E3C60314()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C60348()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for RemoveEpisodesDownloadAppIntent()
{
  return &type metadata for RemoveEpisodesDownloadAppIntent;
}

uint64_t sub_1E3C60384()
{
  return sub_1E3C10DE8(&qword_1EAE25C28, &qword_1EAE25C30);
}

uint64_t IntentDispatching.dispatch<A>(intent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[12] = a6;
  v7[13] = v6;
  v7[10] = a4;
  v7[11] = a5;
  uint64_t v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  return MEMORY[0x1F4188298](sub_1E3C603EC, 0, 0);
}

uint64_t sub_1E3C603EC()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = *(void *)(v0[11] + 8);
  v0[14] = v2;
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8);
  v0[15] = v3;
  v0[16] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0xAD81000000000000;
  v0[17] = v3(v1);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[18] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1E3C604E4;
  return MEMORY[0x1F4127FF8](v0 + 2, v4, v4);
}

uint64_t sub_1E3C604E4()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C60818;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C60600;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C60600()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[15];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[9];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  v0[20] = v1(v3, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1E3C606FC;
  uint64_t v5 = v0[7];
  return MEMORY[0x1F41281F8](v5);
}

uint64_t sub_1E3C606FC()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C6087C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C36B38;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C60818()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C6087C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t SearchResultsGroupID.rawValue.getter(uint64_t a1)
{
  return a1;
}

void *sub_1E3C60924@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_1E3C60930()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3C6098C()
{
  swift_bridgeObjectRetain();
  sub_1E3E7CE50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3C609E4()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3C60A3C(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1E3E7E150();
  }
}

unint64_t SearchResultsGroupID.debugDescription.getter()
{
  return 0xD000000000000020;
}

unint64_t sub_1E3C60B0C()
{
  return SearchResultsGroupID.debugDescription.getter();
}

uint64_t SearchResultsGroupID.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3C60B48()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsGroupID.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3E7E2D0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1E3E7E160();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1E3C60C3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3E7E2D0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  uint64_t v5 = sub_1E3E7E160();
  uint64_t v7 = v6;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v5;
  a2[1] = v7;
  return result;
}

uint64_t SearchResultsGroupID.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3E7E2F0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1E3E7E170();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t sub_1E3C60DA4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3E7E2F0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1E3E7E170();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t sub_1E3C60E3C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1E3C114A4(a1, (uint64_t)v10);
  int v4 = swift_dynamicCast();
  if (v4) {
    uint64_t v5 = v8;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v4) {
    uint64_t v6 = v9;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  *a2 = v5;
  a2[1] = v6;
  return result;
}

uint64_t sub_1E3C60EB8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

ValueMetadata *sub_1E3C60ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, ValueMetadata **a3@<X8>)
{
  uint64_t result = sub_1E3C209B8(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

uint64_t static SearchResultsGroupID.channels.getter()
{
  return 0x6C656E6E616863;
}

uint64_t static SearchResultsGroupID.episodes.getter()
{
  return 0x65646F73697065;
}

uint64_t static SearchResultsGroupID.shows.getter()
{
  return 2003789939;
}

uint64_t static SearchResultsGroupID.topResults.getter()
{
  return 7368564;
}

unint64_t sub_1E3C60F50()
{
  unint64_t result = qword_1EAE25C40;
  if (!qword_1EAE25C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25C40);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsGroupID()
{
  return &type metadata for SearchResultsGroupID;
}

uint64_t FetchShowLatestEpisodesAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25C78);
  uint64_t v39 = *(void *)(v1 - 8);
  uint64_t v40 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v38 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1E3E77860();
  uint64_t v3 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v37 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25160);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1E3E77B60();
  uint64_t v36 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25978);
  sub_1E3E77B40();
  sub_1E3E77B40();
  uint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v33 = v18 + 56;
  uint64_t v35 = v19;
  v19(v16, 0, 1, v17);
  uint64_t v20 = type metadata accessor for ShowEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
  uint64_t v21 = sub_1E3E77430();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  char v23 = v10;
  v22(v10, 1, 1, v21);
  v22(v7, 1, 1, v21);
  unsigned int v32 = *MEMORY[0x1E4F186F0];
  uint64_t v24 = *(void (**)(void))(v3 + 104);
  uint64_t v30 = v3 + 104;
  uint64_t v31 = (void (*)(char *, void, uint64_t))v24;
  uint64_t v25 = v37;
  v24(v37);
  sub_1E3C62E8C((unint64_t *)&qword_1EBFE2F38, (void (*)(uint64_t))type metadata accessor for ShowEntity);
  uint64_t v26 = sub_1E3E775A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25C80);
  sub_1E3E77B40();
  sub_1E3E77B40();
  v35(v16, 0, 1, v36);
  uint64_t v44 = 10;
  char v45 = 0;
  v22(v23, 1, 1, v21);
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, *MEMORY[0x1E4F18498], v40);
  v31(v25, v32, v42);
  uint64_t v27 = sub_1E3E775D0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v43 = 1;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t result = sub_1E3E77320();
  uint64_t v29 = v41;
  *uint64_t v41 = v26;
  v29[1] = v27;
  v29[2] = result;
  return result;
}

uint64_t FetchShowLatestEpisodesAppIntent.show.getter()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3C61598()
{
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1E3C6160C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShowEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C3A130(a1, (uint64_t)&v9 - v6);
  sub_1E3C3A130((uint64_t)v7, (uint64_t)v4);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3C62788((uint64_t)v7, type metadata accessor for ShowEntity);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t FetchShowLatestEpisodesAppIntent.show.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShowEntity(0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3C3A130(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E77560();
  return sub_1E3C62788(a1, type metadata accessor for ShowEntity);
}

uint64_t sub_1E3C617C0()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE25C48);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25C48);
  return sub_1E3E77B40();
}

uint64_t static FetchShowLatestEpisodesAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25C48);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C618D4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  __swift_allocate_value_buffer(v0, qword_1EAE25C60);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25C60);
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t static FetchShowLatestEpisodesAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240E0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25C60);

  return sub_1E3C47314(v3, a1);
}

uint64_t static FetchShowLatestEpisodesAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static FetchShowLatestEpisodesAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static FetchShowLatestEpisodesAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25C88);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25C90);
  MEMORY[0x1F4188790](v1);
  sub_1E3C46780();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25C98);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t FetchShowLatestEpisodesAppIntent.$show.getter()
{
  return sub_1E3E77570();
}

uint64_t sub_1E3C61BCC@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  uint64_t v2 = sub_1E3E77570();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t (*FetchShowLatestEpisodesAppIntent.show.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t FetchShowLatestEpisodesAppIntent.limit.getter()
{
  sub_1E3E77550();
  return v1;
}

uint64_t sub_1E3C61CD4@<X0>(void *a1@<X8>)
{
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3C61D4C()
{
  return swift_release();
}

uint64_t FetchShowLatestEpisodesAppIntent.limit.setter()
{
  return sub_1E3E77560();
}

uint64_t (*FetchShowLatestEpisodesAppIntent.limit.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t FetchShowLatestEpisodesAppIntent.$limit.getter()
{
  return sub_1E3E77570();
}

uint64_t FetchShowLatestEpisodesAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t sub_1E3C61EA8@<X0>(void *a1@<X8>)
{
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E772F0();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3C61F20()
{
  return swift_release();
}

uint64_t FetchShowLatestEpisodesAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*FetchShowLatestEpisodesAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t FetchShowLatestEpisodesAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t FetchShowLatestEpisodesAppIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = type metadata accessor for FetchShowLatestEpisodesIntent();
  *(void *)(v2 + 56) = swift_task_alloc();
  *(_OWORD *)(v2 + 64) = *(_OWORD *)v1;
  *(void *)(v2 + 80) = *(void *)(v1 + 16);
  return MEMORY[0x1F4188298](sub_1E3C62100, 0, 0);
}

uint64_t sub_1E3C62100()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[6];
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  sub_1E3E77550();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(v1 + *(int *)(v2 + 20)) = v0[2];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE251F0 + dword_1EAE251F0);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[11] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1E3C62228;
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[10];
  uint64_t v7 = v0[7];
  uint64_t v6 = v0[8];
  return v9(v7, v6, v4, v5);
}

uint64_t sub_1E3C62228(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 56);
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  sub_1E3C62788(v4, (uint64_t (*)(void))type metadata accessor for FetchShowLatestEpisodesIntent);
  if (v1) {
    uint64_t v5 = sub_1E3C626AC;
  }
  else {
    uint64_t v5 = sub_1E3C62370;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3C62370()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  v0[3] = v0[12];
  uint64_t v4 = (void *)swift_allocObject();
  v0[14] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[15] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE253F0);
  v0[16] = v6;
  uint64_t v7 = sub_1E3C10DE8(&qword_1EAE25CB8, &qword_1EAE253F0);
  *uint64_t v5 = v0;
  v5[1] = sub_1E3C624C4;
  return MEMORY[0x1F4145920](&unk_1EAE25CB0, v4, v6, v7);
}

uint64_t sub_1E3C624C4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1E3C62710;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)(v4 + 144) = a1;
    uint64_t v5 = sub_1E3C62600;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3C62600()
{
  v0[4] = v0[18];
  sub_1E3C469CC();
  sub_1E3E77470();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1E3C626AC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C62710()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C62788(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1E3C627E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  return MEMORY[0x1F4188298](sub_1E3C6280C, 0, 0);
}

uint64_t sub_1E3C6280C()
{
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E772F0();
  swift_release();
  swift_release();
  swift_release();
  v0[12] = v0[7];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0B20);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C62924;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C62924()
{
  uint64_t v2 = (void *)*v1;
  v2[14] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3C62C10, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[8];
    uint64_t v4 = type metadata accessor for EpisodeEntity(0);
    v2[15] = v4;
    uint64_t v5 = v3 + *(int *)(v4 + 84);
    uint64_t v8 = (char *)&dword_1EAE293E8 + dword_1EAE293E8;
    uint64_t v6 = (void *)swift_task_alloc();
    v2[16] = v6;
    *uint64_t v6 = v2;
    v6[1] = sub_1E3C62ADC;
    return ((uint64_t (*)(uint64_t, void *))v8)(v5, v2 + 2);
  }
}

uint64_t sub_1E3C62ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 136) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1E3C62D14;
  }
  else
  {
    *(void *)(v6 + 144) = a2;
    *(void *)(v6 + 152) = a1;
    uint64_t v7 = sub_1E3C62C74;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3C62C10()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C62C74()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[8];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v5 = v4 + *(int *)(v3 + 88);
  sub_1E3C634A4(*(void *)v5, *(void *)(v5 + 8));
  swift_release();
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = v2;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1E3C62D14()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C62D80()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C62DC8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1E3C19DC4;
  *(void *)(v5 + 88) = v4;
  *(_OWORD *)(v5 + 72) = v6;
  *(void *)(v5 + 64) = a1;
  return MEMORY[0x1F4188298](sub_1E3C6280C, 0, 0);
}

uint64_t sub_1E3C62E8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3C62ED8()
{
  unint64_t result = qword_1EAE25CC0;
  if (!qword_1EAE25CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25CC0);
  }
  return result;
}

unint64_t sub_1E3C62F30()
{
  unint64_t result = qword_1EAE25CC8;
  if (!qword_1EAE25CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25CC8);
  }
  return result;
}

uint64_t sub_1E3C62F84()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C62FB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3C62FD4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25C48);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C63080@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240E0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25C60);

  return sub_1E3C47314(v3, a1);
}

uint64_t sub_1E3C630FC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return FetchShowLatestEpisodesAppIntent.perform()(a1);
}

uint64_t sub_1E3C63198(uint64_t a1)
{
  unint64_t v2 = sub_1E3C46780();

  return MEMORY[0x1F40D3C90](a1, v2);
}

uint64_t sub_1E3C631D4()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t destroy for FetchShowLatestEpisodesAppIntent()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s10PodcastsUI32FetchShowLatestEpisodesAppIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  return a1;
}

void *assignWithCopy for FetchShowLatestEpisodesAppIntent(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1E3E775E0();
  swift_release();
  a1[1] = a2[1];
  sub_1E3E775E0();
  swift_release();
  a1[2] = a2[2];
  sub_1E3E775E0();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FetchShowLatestEpisodesAppIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchShowLatestEpisodesAppIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchShowLatestEpisodesAppIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchShowLatestEpisodesAppIntent()
{
  return &type metadata for FetchShowLatestEpisodesAppIntent;
}

uint64_t sub_1E3C6342C()
{
  return sub_1E3C10DE8(&qword_1EAE25CD8, &qword_1EAE25CE0);
}

uint64_t sub_1E3C63468()
{
  return sub_1E3C10DE8(&qword_1EAE25CE8, &qword_1EAE25CF0);
}

uint64_t sub_1E3C634A4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1E3C2B7E8(a1, a2);
  }
  return a1;
}

uint64_t PlayNextChapterAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t result = sub_1E3E77320();
  *a1 = result;
  return result;
}

uint64_t sub_1E3C63540()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE25CF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25CF8);
  return sub_1E3E77B40();
}

uint64_t static PlayNextChapterAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25CF8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C6364C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  __swift_allocate_value_buffer(v0, qword_1EAE25D10);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25D10);
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t static PlayNextChapterAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240F0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25D10);

  return sub_1E3C47314(v3, a1);
}

uint64_t static PlayNextChapterAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static PlayNextChapterAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static PlayNextChapterAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25D28);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1E3C46684();
  sub_1E3E77840();
  return sub_1E3E77800();
}

uint64_t PlayNextChapterAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t sub_1E3C6388C@<X0>(void *a1@<X8>)
{
  sub_1E3E775E0();
  sub_1E3E772F0();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3C638D8()
{
  return swift_release();
}

uint64_t PlayNextChapterAppIntent.objectGraph.setter()
{
  return swift_release();
}

void (*PlayNextChapterAppIntent.objectGraph.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34D58;
}

uint64_t PlayNextChapterAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t PlayNextChapterAppIntent.perform()(uint64_t a1)
{
  v2[6] = a1;
  uint64_t v3 = sub_1E3E77430();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  v2[9] = v4;
  v2[5] = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[10] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C63AEC;
  return sub_1E3C63D3C(v4);
}

uint64_t sub_1E3C63AEC()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1E3C63BE8, 0, 0);
}

uint64_t sub_1E3C63BE8()
{
  uint64_t v10 = v0;
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  OpenAppLocationAppIntent.init()(v9);
  uint64_t v5 = v9[0];
  uint64_t v4 = v9[1];
  uint64_t v6 = v9[2];
  *(unsigned char *)(v0 + 88) = 11;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  *(unsigned char *)(v0 + 89) = 2;
  sub_1E3E77560();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v6;
  sub_1E3C52654();
  sub_1E3E77440();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1E3C63D3C(uint64_t a1)
{
  size_t v2[2] = a1;
  sub_1E3E7CCE0();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = *v1;
  v2[3] = v3;
  v2[4] = v4;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&dword_1EAE251E0 + dword_1EAE251E0);
  uint64_t v5 = (void *)swift_task_alloc();
  v2[5] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C63E14;
  return v7(v4);
}

uint64_t sub_1E3C63E14(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1E3C64098;
  }
  else {
    uint64_t v4 = sub_1E3C63F28;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3C63F28()
{
  uint64_t v1 = *(void **)(v0 + 48);
  sub_1E3E7CCD0();
  sub_1E3E7CCC0();
  id v2 = objc_msgSend(v1, sel_title);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1E3E7CD30();
  }
  else
  {
    sub_1E3E775E0();
    sub_1E3E79530();
    swift_release();
  }
  uint64_t v4 = *(void **)(v0 + 48);
  sub_1E3E7CCB0();
  swift_bridgeObjectRelease();
  sub_1E3E7CCC0();
  sub_1E3E77420();

  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1E3C64098()
{
  uint64_t v1 = (void *)v0[7];
  sub_1E3C48C4C(v1, v0[2]);

  swift_task_dealloc();
  id v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1E3C64110@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25CF8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C641B8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25D28);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1E3E77840();
  return sub_1E3E77800();
}

uint64_t sub_1E3C64278@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240F0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25D10);

  return sub_1E3C47314(v3, a1);
}

uint64_t sub_1E3C642F4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return PlayNextChapterAppIntent.perform()(a1);
}

uint64_t sub_1E3C6438C@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t result = sub_1E3E77320();
  *a1 = result;
  return result;
}

uint64_t sub_1E3C64414(uint64_t a1)
{
  unint64_t v2 = sub_1E3C46684();

  return MEMORY[0x1F40D3C90](a1, v2);
}

unint64_t sub_1E3C64454()
{
  unint64_t result = qword_1EAE25D40;
  if (!qword_1EAE25D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25D40);
  }
  return result;
}

unint64_t sub_1E3C644AC()
{
  unint64_t result = qword_1EAE25D48;
  if (!qword_1EAE25D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25D48);
  }
  return result;
}

uint64_t sub_1E3C64500()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C64534()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for PlayNextChapterAppIntent()
{
  return &type metadata for PlayNextChapterAppIntent;
}

uint64_t sub_1E3C64568()
{
  return sub_1E3C10DE8(&qword_1EAE25D58, &qword_1EAE25D60);
}

uint64_t sub_1E3C645A4()
{
  return sub_1E3C10DE8(&qword_1EAE25570, &qword_1EAE25578);
}

uint64_t sub_1E3C645E0()
{
  return sub_1E3C10DE8(&qword_1EAE25580, &qword_1EAE25578);
}

uint64_t PlayPreviousChapterAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t result = sub_1E3E77320();
  *a1 = result;
  return result;
}

uint64_t sub_1E3C646A4()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE25D68);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25D68);
  return sub_1E3E77B40();
}

uint64_t static PlayPreviousChapterAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25D68);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C647B0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  __swift_allocate_value_buffer(v0, qword_1EAE25D80);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EAE25D80);
  sub_1E3E77730();
  uint64_t v2 = sub_1E3E77740();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t static PlayPreviousChapterAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24100 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25D80);

  return sub_1E3C47314(v3, a1);
}

uint64_t static PlayPreviousChapterAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static PlayPreviousChapterAppIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t static PlayPreviousChapterAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25D98);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1E3C466D8();
  sub_1E3E77840();
  return sub_1E3E77800();
}

uint64_t PlayPreviousChapterAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t PlayPreviousChapterAppIntent.objectGraph.setter()
{
  return swift_release();
}

void (*PlayPreviousChapterAppIntent.objectGraph.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34D58;
}

uint64_t PlayPreviousChapterAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t PlayPreviousChapterAppIntent.perform()(uint64_t a1)
{
  v2[6] = a1;
  uint64_t v3 = sub_1E3E77430();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  v2[9] = v4;
  v2[5] = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[10] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C63AEC;
  return sub_1E3C64BB8(v4);
}

uint64_t sub_1E3C64BB8(uint64_t a1)
{
  size_t v2[2] = a1;
  sub_1E3E7CCE0();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = *v1;
  v2[3] = v3;
  v2[4] = v4;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&dword_1EAE251D0 + dword_1EAE251D0);
  uint64_t v5 = (void *)swift_task_alloc();
  v2[5] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C63E14;
  return v7(v4);
}

uint64_t sub_1E3C64C90@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE240F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25D68);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3C64D38()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25D98);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1E3E77840();
  return sub_1E3E77800();
}

uint64_t sub_1E3C64DF8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24100 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25510);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE25D80);

  return sub_1E3C47314(v3, a1);
}

uint64_t sub_1E3C64E74(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return PlayPreviousChapterAppIntent.perform()(a1);
}

uint64_t sub_1E3C64F0C(uint64_t a1)
{
  unint64_t v2 = sub_1E3C466D8();

  return MEMORY[0x1F40D3C90](a1, v2);
}

unint64_t sub_1E3C64F4C()
{
  unint64_t result = qword_1EAE25DB0;
  if (!qword_1EAE25DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25DB0);
  }
  return result;
}

unint64_t sub_1E3C64FA4()
{
  unint64_t result = qword_1EAE25DB8;
  if (!qword_1EAE25DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25DB8);
  }
  return result;
}

uint64_t sub_1E3C64FF8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1E3C6502C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for PlayPreviousChapterAppIntent()
{
  return &type metadata for PlayPreviousChapterAppIntent;
}

uint64_t sub_1E3C65060()
{
  return sub_1E3C10DE8(&qword_1EAE25DC8, &qword_1EAE25DD0);
}

uint64_t sub_1E3C6509C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1E3CC7594(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v7 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1) {
        sub_1E3CC7594(v8 > 1, v7 + 1, 1);
      }
      v4 += 2;
      *(void *)(v11 + 16) = v7 + 1;
      uint64_t v9 = v11 + 24 * v7;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      *(unsigned char *)(v9 + 48) = 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1E3C6518C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v11 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1E3CC75FC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1E4E77720](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      unint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_persistentID);

      unint64_t v10 = *(void *)(v11 + 16);
      unint64_t v9 = *(void *)(v11 + 24);
      if (v10 >= v9 >> 1) {
        sub_1E3CC75FC(v9 > 1, v10 + 1, 1);
      }
      ++v5;
      *(void *)(v11 + 16) = v10 + 1;
      *(void *)(v11 + 8 * v10 + 32) = v8;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1E3C652F0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1E3CC75B4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x1E4E77720](i, a1);
        sub_1E3C12B10(0, &qword_1EBFE2710);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1E3CC75B4(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1E3CC75B4(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_1E3C1B524(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      id v8 = (id *)(a1 + 32);
      sub_1E3C12B10(0, &qword_1EBFE2710);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1E3CC75B4(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1E3CC75B4(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_1E3C1B524(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1E3C65554(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1E3CC76BC(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = (unsigned char *)(a1 + 40);
    do
    {
      uint64_t v5 = *((void *)v4 - 1);
      char v6 = *v4;
      uint64_t v13 = v2;
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1E3CC76BC(v7 > 1, v8 + 1, 1);
        uint64_t v2 = v13;
      }
      v4 += 16;
      unint64_t v11 = &type metadata for PlaybackController.TransportCommand;
      uint64_t v12 = &protocol witness table for PlaybackController.TransportCommand;
      *(void *)&long long v10 = v5;
      BYTE8(v10) = v6;
      *(void *)(v2 + 16) = v8 + 1;
      sub_1E3C1B644(&v10, v2 + 40 * v8 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1E3C65650(uint64_t a1)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25DF0);
  uint64_t v2 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25DF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1E3CC7A1C(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    uint64_t v10 = v17;
    do
    {
      sub_1E3C681C8(v11, (uint64_t)v4);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1E3CC7A1C(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v17;
      }
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1E3CC7A1C(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v17;
      }
      *(void *)(v10 + 16) = v14 + 1;
      sub_1E3C68230((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1E3C65888()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC860];
  if ((objc_msgSend(self, sel_isPodcastsApp) & 1) == 0
    && (objc_msgSend(self, sel_canExtensionOpenDatabase) & 1) == 0)
  {
    swift_release();
    return 0;
  }
  id v2 = objc_msgSend(self, sel_sharedInstance);
  id v3 = objc_msgSend(v2, sel_mainQueueContext);

  MEMORY[0x1F4188790](v4);
  sub_1E3E7D8B0();
  if (v14 != 1)
  {

    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1E3E7A040();
  uint64_t v5 = (void *)sub_1E3E7A020();
  char v6 = MEMORY[0x1E4E73950]();

  if ((v6 & 1) == 0)
  {
    sub_1E3E7A280();
    uint64_t v7 = (void *)sub_1E3E7A270();
    sub_1E3E7A260();
  }
  unint64_t v8 = self;
  swift_bridgeObjectRetain();
  id v9 = objc_msgSend(v8, sel__applePodcastsFoundationSharedUserDefaults);
  sub_1E3E79DB0();
  id v10 = v9;
  uint64_t v11 = (void *)sub_1E3E79D80();
  sub_1E3C6509C(v1);
  uint64_t v12 = (void *)sub_1E3E79DA0();

  swift_bridgeObjectRelease();
  sub_1E3E79D90();
  swift_bridgeObjectRelease_n();

  swift_release();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t MPMediaLibrary.removeEpisodesExcludedByGlobalDefault(for:)()
{
  return sub_1E3C65888();
}

id MPMediaLibrary.item(for:)(void *a1)
{
  unint64_t v2 = (unint64_t)objc_msgSend(a1, sel_persistentID);
  if ((v2 & 0x8000000000000000) != 0) {
    return 0;
  }
  unint64_t v3 = v2;
  if (!objc_msgSend(v1, sel_itemExistsWithPersistentID_, v2)) {
    return 0;
  }
  else {
    return objc_msgSend(v1, sel_itemWithPersistentID_, v3);
  }
}

MPMediaItem_optional __swiftcall MPMediaLibrary.item(for:)(Swift::UInt64 a1)
{
  if (objc_msgSend(v1, sel_itemExistsWithPersistentID_, a1)) {
    uint64_t v4 = (objc_class *)objc_msgSend(v1, sel_itemWithPersistentID_, a1);
  }
  else {
    uint64_t v4 = 0;
  }
  result.value.super.super.isa = v4;
  result.is_nil = v3;
  return result;
}

id sub_1E3C65BF4@<X0>(uint64_t a1@<X1>, void *a2@<X2>, void *a3@<X3>, void *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, void **a7@<X7>, unsigned char *a8@<X8>)
{
  uint64_t v94 = a8;
  uint64_t v95 = a7;
  uint64_t v101 = a6;
  id v102 = a2;
  uint64_t v93 = a5;
  uint64_t v11 = sub_1E3E7A880();
  uint64_t v92 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v88 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v91 = (char *)&v87 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v89 = (char *)&v87 - v16;
  if (os_feature_enabled_serial_sort_auto_downloads())
  {
    if (a1)
    {
      uint64_t v17 = a4;
      goto LABEL_9;
    }
  }
  else if (a1)
  {
    uint64_t v17 = a4;
    uint64_t v18 = (void *)sub_1E3E7CCF0();
    id v19 = objc_msgSend(v102, sel_podcastForUuid_, v18);

    if (v19)
    {
      unsigned int v20 = objc_msgSend(v19, sel_isSerialShowTypeInFeed);

      if (v20)
      {
        if (*a3 == 0x100000001) {
          *a3 = 0;
        }
      }
    }
LABEL_9:
    unint64_t v21 = sub_1E3E7D850();
    a4 = v17;
    if (!(v21 >> 62)) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
  unint64_t v21 = sub_1E3E7D860();
  if (!(v21 >> 62))
  {
LABEL_10:
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1E3E7DFC0();
  swift_bridgeObjectRelease();
  if (v22)
  {
LABEL_11:
    uint64_t v90 = v11;
    char v23 = (void *)(v93 + 16);
    unint64_t v100 = v21 & 0xC000000000000001;
    uint64_t v24 = 4;
    unint64_t v96 = v21;
    uint64_t v97 = a4;
    while (1)
    {
      if (v100) {
        id result = (id)MEMORY[0x1E4E77720](v24 - 4, v21);
      }
      else {
        id result = *(id *)(v21 + 8 * v24);
      }
      uint64_t v28 = result;
      uint64_t v29 = v24 - 3;
      if (__OFADD__(v24 - 4, 1))
      {
        __break(1u);
        return result;
      }
      id v30 = objc_msgSend(v102, sel_objectWithID_, result);
      self;
      uint64_t v31 = (void *)swift_dynamicCastObjCClass();
      if (!v31) {
        break;
      }
      unsigned int v32 = v31;
      unint64_t v33 = (unint64_t)objc_msgSend(v31, sel_persistentID);
      if ((v33 & 0x8000000000000000) != 0
        || (unint64_t v34 = v33, !objc_msgSend(a4, sel_itemExistsWithPersistentID_, v33))
        || (id v35 = objc_msgSend(a4, sel_itemWithPersistentID_, v34)) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v49 = sub_1E3E7DB00();
        if (v50)
        {
          unint64_t v53 = 0xE700000000000000;
          uint64_t v51 = 0x3E7974706D453CLL;
        }
        else
        {
          aBlock[0] = v49;
          sub_1E3C340DC();
          uint64_t v51 = sub_1E3E7DC90();
          unint64_t v53 = v52;
        }
        uint64_t v54 = v90;
        uint64_t v55 = v91;
        sub_1E3E7A810();
        id v56 = v30;
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_1E3E7A860();
        os_log_type_t v58 = sub_1E3E7D4E0();
        if (os_log_type_enabled(v57, v58))
        {
          id v102 = (id)v51;
          uint64_t v59 = swift_slowAlloc();
          uint64_t v101 = swift_slowAlloc();
          aBlock[0] = v101;
          *(_DWORD *)uint64_t v59 = 134218498;
          id v60 = objc_msgSend(v32, sel_persistentID);

          uint64_t v104 = (uint64_t)v60;
          sub_1E3E7DBD0();

          *(_WORD *)(v59 + 12) = 2080;
          id v61 = objc_msgSend(v32, sel_uuid);
          if (v61)
          {
            unint64_t v62 = v61;
            uint64_t v63 = sub_1E3E7CD30();
            unint64_t v65 = v64;
          }
          else
          {
            unint64_t v65 = 0xE700000000000000;
            uint64_t v63 = 0x3E7974706D453CLL;
          }
          uint64_t v104 = sub_1E3C150B8(v63, v65, aBlock);
          sub_1E3E7DBD0();

          swift_bridgeObjectRelease();
          *(_WORD *)(v59 + 22) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v104 = sub_1E3C150B8((uint64_t)v102, v53, aBlock);
          sub_1E3E7DBD0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1E3BC5000, v57, v58, "Couldn't resolve media item with persistentID %lld for removal. UUID: %s; AdamID: %s.",
            (uint8_t *)v59,
            0x20u);
          uint64_t v85 = v101;
          swift_arrayDestroy();
          MEMORY[0x1E4E79510](v85, -1, -1);
          MEMORY[0x1E4E79510](v59, -1, -1);

          id result = (id)(*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v91, v90);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          id result = (id)(*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v55, v54);
        }
        goto LABEL_53;
      }
      uint64_t v36 = v35;
      swift_beginAccess();
      id v37 = v28;
      MEMORY[0x1E4E76960]();
      if (*(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1E3E7D090();
      }
      sub_1E3E7D100();
      sub_1E3E7D080();
      swift_endAccess();
      id v38 = v36;
      uint64_t v39 = (void *)v101;
      MEMORY[0x1E4E76960]();
      if (*(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1E3E7D090();
      }
      sub_1E3E7D100();
      sub_1E3E7D080();
      id v40 = objc_msgSend(v32, sel_uuid);
      if (v40)
      {
        uint64_t v41 = v40;
        uint64_t v42 = sub_1E3E7CD30();
        uint64_t v98 = v43;
        uint64_t v99 = v42;

        uint64_t v44 = v95;
        char v45 = *v95;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v44 = v45;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          char v45 = sub_1E3CB7240(0, v45[2] + 1, 1, v45);
          *uint64_t v95 = v45;
        }
        unint64_t v48 = v45[2];
        unint64_t v47 = v45[3];
        if (v48 >= v47 >> 1)
        {
          char v45 = sub_1E3CB7240((void *)(v47 > 1), v48 + 1, 1, v45);
          *uint64_t v95 = v45;
        }
        v45[2] = v48 + 1;
        uint64_t v25 = &v45[2 * v48];
        uint64_t v26 = v98;
        v25[4] = v99;
        v25[5] = v26;
      }

      ++v24;
      unint64_t v21 = v96;
      a4 = v97;
      if (v29 == v22)
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = v90;
        goto LABEL_44;
      }
    }
    swift_bridgeObjectRelease();

    sub_1E3E7A810();
    char v66 = v28;
    uint64_t v67 = sub_1E3E7A860();
    os_log_type_t v68 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v67, v68))
    {
      unint64_t v69 = (uint8_t *)swift_slowAlloc();
      uint64_t v70 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v69 = 138412290;
      aBlock[0] = (uint64_t)v66;
      uint64_t v71 = v66;
      sub_1E3E7DBD0();
      *uint64_t v70 = v66;

      _os_log_impl(&dword_1E3BC5000, v67, v68, "Couldn't fetch episode with managed object ID %@ for removal.", v69, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v70, -1, -1);
      MEMORY[0x1E4E79510](v69, -1, -1);
    }
    else
    {

      uint64_t v67 = v66;
    }
    uint64_t v86 = v90;

    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v89, v86);
    goto LABEL_53;
  }
LABEL_33:
  swift_bridgeObjectRelease();
LABEL_44:
  unint64_t v72 = swift_bridgeObjectRetain();
  sub_1E3C652F0(v72);
  swift_bridgeObjectRelease();
  id v73 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  unsigned __int8 v74 = objc_msgSend(a4, sel_removeItems_, v73);

  if (v74)
  {
    uint64_t v75 = swift_allocObject();
    *(unsigned char *)(v75 + 16) = 1;
    uint64_t v76 = (void *)swift_allocObject();
    id v77 = v102;
    uint64_t v78 = v93;
    v76[2] = v102;
    v76[3] = v78;
    v76[4] = v75;
    aBlock[4] = (uint64_t)sub_1E3C68340;
    aBlock[5] = (uint64_t)v76;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1E3CE65F8;
    aBlock[3] = (uint64_t)&block_descriptor_3;
    uint64_t v79 = _Block_copy(aBlock);
    id v80 = v77;
    sub_1E3E775E0();
    sub_1E3E775E0();
    swift_release();
    objc_msgSend(v80, sel_performBlockAndWaitWithSave_, v79);
    _Block_release(v79);
    swift_beginAccess();
    *uint64_t v94 = *(unsigned char *)(v75 + 16);
    return (id)swift_release();
  }
  uint64_t v81 = v88;
  sub_1E3E7A810();
  uint64_t v82 = sub_1E3E7A860();
  os_log_type_t v83 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v82, v83))
  {
    id v84 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v84 = 0;
    _os_log_impl(&dword_1E3BC5000, v82, v83, "Failed to remove episode assets from Media Library.", v84, 2u);
    MEMORY[0x1E4E79510](v84, -1, -1);
  }

  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v81, v11);
LABEL_53:
  *uint64_t v94 = 0;
  return result;
}

uint64_t sub_1E3C666A0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7A880();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (void *)*MEMORY[0x1E4F92028];
  sub_1E3C12B10(0, &qword_1EBFDEE38);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE6108);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1E3E86660;
  swift_beginAccess();
  uint64_t v11 = *(void *)(a2 + 16);
  *(void *)(v10 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25E00);
  *(void *)(v10 + 64) = sub_1E3C6834C();
  *(void *)(v10 + 32) = v11;
  id v12 = v9;
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)sub_1E3E7D450();
  uint64_t v14 = (void *)sub_1E3E7D050();
  id v15 = objc_msgSend(a1, sel_objectsInEntity_predicate_sortDescriptors_, v12, v13, v14);

  if (v15)
  {
    sub_1E3C12B10(0, &qword_1EBFDEE40);
    unint64_t v16 = sub_1E3E7D060();

    unint64_t v17 = sub_1E3E0A9D8(v16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v17)
    {
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1E3E7DFC0();
        uint64_t result = swift_bridgeObjectRelease();
        if (v19) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v19)
        {
LABEL_5:
          if (v19 < 1)
          {
            __break(1u);
            return result;
          }
          for (uint64_t i = 0; i != v19; ++i)
          {
            if ((v17 & 0xC000000000000001) != 0) {
              id v21 = (id)MEMORY[0x1E4E77720](i, v17);
            }
            else {
              id v21 = *(id *)(v17 + 8 * i + 32);
            }
            uint64_t v22 = v21;
            objc_msgSend(v21, sel_setAssetURL_, 0);
          }
        }
      }
      return swift_bridgeObjectRelease();
    }
  }
  char v23 = (unsigned char *)(a3 + 16);
  sub_1E3E7A810();
  swift_retain_n();
  uint64_t v24 = sub_1E3E7A860();
  os_log_type_t v25 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    v38[0] = v34;
    *(_DWORD *)uint64_t v26 = 136315138;
    unint64_t v33 = v26 + 4;
    swift_beginAccess();
    uint64_t v27 = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE4AD0);
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = MEMORY[0x1E4E76990](v28, v27);
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_1E3C150B8(v29, v31, v38);
    sub_1E3E7DBD0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E3BC5000, v24, v25, "Failed to update episode asset URLs for objectIDs %s", v26, 0xCu);
    uint64_t v32 = v34;
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v32, -1, -1);
    MEMORY[0x1E4E79510](v26, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v36);
  uint64_t result = swift_beginAccess();
  *char v23 = 0;
  return result;
}

uint64_t MPMediaLibrary.remove(episodeIDs:in:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = sub_1E3E7A880();
  void v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7D8E0();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C66C44, 0, 0);
}

uint64_t sub_1E3C66C44()
{
  v0[13] = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  void *v1 = v0;
  v1[1] = sub_1E3C66CFC;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  return sub_1E3C67C8C(v3, v2);
}

uint64_t sub_1E3C66CFC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1E3C67118;
  }
  else
  {

    uint64_t v3 = sub_1E3C66E18;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1E3C66E18()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 128) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *(_DWORD *)(v0 + 208) = *MEMORY[0x1E4F1BD78];
  uint64_t v6 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 136) = v6;
  *(void *)(v0 + 144) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v6(v1);
  id v7 = v4;
  swift_bridgeObjectRetain();
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25DE8);
  *unint64_t v8 = v0;
  v8[1] = sub_1E3C66F6C;
  uint64_t v10 = *(void *)(v0 + 96);
  return MEMORY[0x1F40D7080](v0 + 16, v10, sub_1E3C6818C, v5, v9);
}

uint64_t sub_1E3C66F6C()
{
  uint64_t v2 = (void *)*v1;
  v2[20] = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[12];
  uint64_t v4 = v2[10];
  uint64_t v5 = v2[9];
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v6 = v4 + 8;
  id v7 = v8;
  if (v0)
  {
    v7(v3, v5);
    swift_release();
    uint64_t v9 = sub_1E3C6745C;
  }
  else
  {
    v2[21] = v7;
    v2[22] = v6 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v7(v3, v5);
    swift_release();
    uint64_t v9 = sub_1E3C671A4;
  }
  return MEMORY[0x1F4188298](v9, 0, 0);
}

uint64_t sub_1E3C67118()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1E3C671A4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = *(id *)(v0 + 40);
  unint64_t v3 = sub_1E3C67B68(v1, v2);

  swift_bridgeObjectRelease();
  sub_1E3C652F0(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  LODWORD(v1) = objc_msgSend(v2, sel_removeItems_, v4);

  if (v1)
  {
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
    uint64_t v6 = *(unsigned int *)(v0 + 208);
    uint64_t v7 = *(void *)(v0 + 88);
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v9 = *(void *)(v0 + 24);
    uint64_t v10 = *(void **)(v0 + 32);
    uint64_t v11 = swift_allocObject();
    *(void *)(v0 + 184) = v11;
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v9;
    v5(v7, v6, v8);
    id v12 = v10;
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v13;
    void *v13 = v0;
    v13[1] = sub_1E3C674E0;
    uint64_t v14 = *(void *)(v0 + 88);
    uint64_t v15 = MEMORY[0x1E4FBB390];
    return MEMORY[0x1F40D7080](v0 + 212, v14, sub_1E3C681AC, v11, v15);
  }
  else
  {
    sub_1E3E7A810();
    unint64_t v16 = sub_1E3E7A860();
    os_log_type_t v17 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_1E3BC5000, v16, v17, "Failed to remove episode assets from Media Library.", v18, 2u);
      MEMORY[0x1E4E79510](v18, -1, -1);
    }
    uint64_t v20 = *(void *)(v0 + 56);
    uint64_t v19 = *(void *)(v0 + 64);
    uint64_t v21 = *(void *)(v0 + 48);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22(0);
  }
}

uint64_t sub_1E3C6745C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1E3C674E0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 168))(*(void *)(v2 + 88), *(void *)(v2 + 72));
  swift_release();
  if (v0) {
    uint64_t v3 = sub_1E3C67740;
  }
  else {
    uint64_t v3 = sub_1E3C6766C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1E3C6766C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 212);
  sub_1E3E7A040();
  uint64_t v2 = (void *)sub_1E3E7A020();
  char v3 = MEMORY[0x1E4E73950]();

  if ((v3 & 1) == 0 && v1)
  {
    sub_1E3E7A280();
    uint64_t v4 = (void *)sub_1E3E7A270();
    sub_1E3E7A260();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v1);
}

uint64_t sub_1E3C67740()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

unint64_t sub_1E3C677C4@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = sub_1E3E7D8D0();
  if (!v1)
  {
    unint64_t v4 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1E3E7DFC0();
      unint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)MEMORY[0x1E4E77720](i, v4);
          }
          else {
            id v7 = *(id *)(v4 + 8 * i + 32);
          }
          uint64_t v8 = v7;
          objc_msgSend(v7, sel_setAssetURL_, 0);
        }
      }
    }
    unint64_t result = swift_bridgeObjectRelease();
    *a1 = 1;
  }
  return result;
}

unint64_t sub_1E3C678D8@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_1E3E7D8D0();
  if (!v1)
  {
    uint64_t v19 = a1;
    uint64_t v4 = sub_1E3C6518C(result);
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v4 + 16);
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    if (v5)
    {
      id v7 = (uint64_t *)(v4 + 32);
      do
      {
        uint64_t v11 = *v7++;
        uint64_t v10 = v11;
        if (v11 >= 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1E3CC75FC(0, v6[2] + 1, 1);
          }
          unint64_t v9 = v6[2];
          unint64_t v8 = v6[3];
          if (v9 >= v8 >> 1) {
            sub_1E3CC75FC(v8 > 1, v9 + 1, 1);
          }
          v6[2] = v9 + 1;
          v6[v9 + 4] = v10;
        }
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
    int64_t v12 = v6[2];
    if (v12)
    {
      uint64_t v20 = MEMORY[0x1E4FBC860];
      sub_1E3CC75D4(0, v12, 0);
      unint64_t v13 = v6[4];
      if ((v13 & 0x8000000000000000) != 0)
      {
LABEL_27:
        unint64_t result = sub_1E3E7DF70();
        __break(1u);
      }
      else
      {
        uint64_t v14 = v20;
        unint64_t v16 = *(void *)(v20 + 16);
        unint64_t v15 = *(void *)(v20 + 24);
        int64_t v17 = v16 + 1;
        if (v16 >= v15 >> 1) {
          goto LABEL_26;
        }
        while (1)
        {
          *(void *)(v14 + 16) = v17;
          unint64_t v15 = v14 + 8 * v16;
          *(void *)(v15 + 32) = v13;
          int64_t v17 = v12 - 1;
          if (v12 == 1) {
            break;
          }
          unint64_t v13 = v16 + 5;
          unint64_t v16 = (unint64_t)(v6 + 5);
          while (v17)
          {
            uint64_t v18 = *(void *)v16;
            if ((*(void *)v16 & 0x8000000000000000) != 0) {
              goto LABEL_27;
            }
            uint64_t v20 = v14;
            unint64_t v15 = *(void *)(v14 + 24);
            int64_t v12 = v13 - 3;
            if (v13 - 4 >= v15 >> 1) {
              sub_1E3CC75D4(v15 > 1, v13 - 3, 1);
            }
            *(void *)(v14 + 16) = v12;
            *(void *)(v14 + 8 * v13++) = v18;
            v16 += 8;
            if (!--v17) {
              goto LABEL_15;
            }
          }
          __break(1u);
LABEL_26:
          sub_1E3CC75D4(v15 > 1, v17, 1);
          uint64_t v14 = v20;
        }
LABEL_15:
        unint64_t result = swift_release();
        *uint64_t v19 = v14;
      }
    }
    else
    {
      unint64_t result = swift_release();
      *uint64_t v19 = MEMORY[0x1E4FBC860];
    }
  }
  return result;
}

uint64_t sub_1E3C67B68(uint64_t a1, void *a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      uint64_t v7 = *(void *)(a1 + 8 * i + 32);
      if (objc_msgSend(a2, sel_itemExistsWithPersistentID_, v7)
        && objc_msgSend(a2, sel_itemWithPersistentID_, v7))
      {
        MEMORY[0x1E4E76960]();
        if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E3E7D090();
        }
        sub_1E3E7D100();
        sub_1E3E7D080();
      }
    }
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1E3C67C8C(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = sub_1E3E7D8E0();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C67D4C, 0, 0);
}

uint64_t sub_1E3C67D4C()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v4 = (void *)v0[5];
  uint64_t v3 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v6 = swift_allocObject();
  v0[9] = v6;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F1BD78], v3);
  id v7 = v4;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6388);
  *uint64_t v8 = v0;
  v8[1] = sub_1E3C67E90;
  uint64_t v10 = v0[8];
  return MEMORY[0x1F40D7080](v0 + 2, v10, sub_1E3C17D14, v6, v9);
}

uint64_t sub_1E3C67E90()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[7] + 8))(v2[8], v2[6]);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_1E3C68124;
  }
  else {
    uint64_t v3 = sub_1E3C68014;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1E3C68014()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  sub_1E3E79DB0();
  id v3 = v2;
  uint64_t v4 = (void *)sub_1E3E79D80();
  sub_1E3C6509C(v1);
  uint64_t v5 = (void *)sub_1E3E79DA0();
  swift_bridgeObjectRelease();

  sub_1E3E79D90();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1E3C68124()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1E3C6818C@<X0>(void *a1@<X8>)
{
  return sub_1E3C678D8(a1);
}

unint64_t sub_1E3C681AC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1E3C677C4(a1);
}

uint64_t sub_1E3C681C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C68230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C6829C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1E3C682D4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1E3C65BF4(*(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void ***)(v1 + 72), a1);
}

uint64_t sub_1E3C682E8()
{
  return swift_deallocObject();
}

uint64_t sub_1E3C682F8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C68340()
{
  return sub_1E3C666A0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

unint64_t sub_1E3C6834C()
{
  unint64_t result = qword_1EAE25E08;
  if (!qword_1EAE25E08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE25E00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAE25E08);
  }
  return result;
}

uint64_t sub_1E3C683A8(uint64_t a1, uint64_t a2)
{
  v3[36] = a2;
  v3[37] = v2;
  v3[35] = a1;
  uint64_t v4 = sub_1E3E7B870();
  v3[38] = v4;
  v3[39] = *(void *)(v4 - 8);
  v3[40] = swift_task_alloc();
  uint64_t v5 = *(void *)(type metadata accessor for JSPackageLoader() - 8);
  v3[41] = v5;
  v3[42] = *(void *)(v5 + 64);
  v3[43] = swift_task_alloc();
  v3[44] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0CD0);
  v3[45] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C68500, 0, 0);
}

uint64_t sub_1E3C68500()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[41];
  sub_1E3C68E90(v0[37], v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  v0[46] = v4;
  sub_1E3C68FCC(v1, v4 + v3);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE25E28 + dword_1EAE25E28);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[47] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1E3C68614;
  uint64_t v6 = v0[45];
  return v8(v6, (uint64_t)&unk_1EAE25E20, v4);
}

uint64_t sub_1E3C68614()
{
  *(void *)(*(void *)v1 + 384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C68B8C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C68730;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C68730()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v42 = *(void *)(v0 + 384);
  uint64_t v5 = MEMORY[0x1E4F71040];
  *(void *)(v0 + 160) = v3;
  *(void *)(v0 + 168) = v5;
  uint64_t v40 = v0 + 136;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 136));
  uint64_t v7 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
  v7(boxed_opaque_existential_1, v2, v3);
  *(void *)(v0 + 240) = v3;
  *(void *)(v0 + 248) = v5;
  uint64_t v8 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 216));
  v7(v8, v2, v3);
  sub_1E3C69E0C((void *)(v0 + 216), v2 + *(int *)(v1 + 36), (uint64_t *)(v0 + 176));
  uint64_t v9 = *(void *)(v0 + 360);
  if (v42)
  {
    sub_1E3C10CE0(*(void *)(v0 + 360), &qword_1EBFE0CD0);
    __swift_destroy_boxed_opaque_existential_0(v0 + 216);
LABEL_8:
    __swift_destroy_boxed_opaque_existential_0(v40);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v23 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_9;
  }
  uint64_t v10 = *(uint64_t **)(v0 + 320);
  uint64_t v11 = *(void *)(v0 + 304);
  __swift_destroy_boxed_opaque_existential_0(v0 + 216);
  v7(v10, v9, v11);
  if (qword_1EBFE20B0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1E3E7B9F0();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EBFECD18);
  uint64_t v14 = sub_1E3E7B990();
  unint64_t v16 = v15;
  if (v15 >> 60 == 15)
  {
    type metadata accessor for JSPackageError();
    sub_1E3C6A134();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v17, v13, v12);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v19 = *(void *)(v0 + 360);
    uint64_t v20 = *(void *)(v0 + 312);
    uint64_t v21 = *(void *)(v0 + 320);
    uint64_t v22 = *(void *)(v0 + 304);
    __swift_destroy_boxed_opaque_existential_0(v0 + 176);
    sub_1E3C10CE0(v19, &qword_1EBFE0CD0);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
    goto LABEL_8;
  }
  uint64_t v18 = v14;
  sub_1E3E778F0();
  swift_allocObject();
  sub_1E3E778E0();
  sub_1E3C6A18C();
  sub_1E3E778D0();
  uint64_t v41 = *(void *)(v0 + 360);
  uint64_t v25 = *(void *)(v0 + 312);
  uint64_t v26 = *(void *)(v0 + 320);
  uint64_t v27 = *(void *)(v0 + 304);
  uint64_t v28 = *(void *)(v0 + 280);
  swift_release();
  sub_1E3C634A4(v18, v16);
  uint64_t v29 = *(void *)(v0 + 256);
  long long v39 = *(_OWORD *)(v0 + 264);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
  sub_1E3C1B2BC(v40, v0 + 16);
  sub_1E3C1B2BC(v0 + 176, v0 + 56);
  *(void *)(v0 + 96) = v29;
  *(_OWORD *)(v0 + 104) = v39;
  uint64_t v30 = sub_1E3E7B9A0();
  if (v31) {
    uint64_t v32 = v30;
  }
  else {
    uint64_t v32 = 0x6E776F6E6B6E753CLL;
  }
  if (v31) {
    unint64_t v33 = v31;
  }
  else {
    unint64_t v33 = 0xE90000000000003ELL;
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  *(void *)(v0 + 120) = v32;
  *(void *)(v0 + 128) = v33;
  long long v34 = *(_OWORD *)(v0 + 16);
  long long v35 = *(_OWORD *)(v0 + 32);
  long long v36 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v28 + 48) = v36;
  *(_OWORD *)uint64_t v28 = v34;
  *(_OWORD *)(v28 + 16) = v35;
  long long v37 = *(_OWORD *)(v0 + 80);
  long long v38 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v28 + 80) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v28 + 96) = v38;
  *(_OWORD *)(v28 + 64) = v37;
  *(void *)(v28 + 112) = v33;
  __swift_destroy_boxed_opaque_existential_0(v40);
  sub_1E3C10CE0(v41, &qword_1EBFE0CD0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v23 = *(uint64_t (**)(void))(v0 + 8);
LABEL_9:
  return v23();
}

uint64_t sub_1E3C68B8C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for JSPackageLoader()
{
  uint64_t result = qword_1EBFE0BE8;
  if (!qword_1EBFE0BE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3C68C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  return MEMORY[0x1F4188298](sub_1E3C68C88, 0, 0);
}

uint64_t sub_1E3C68C88()
{
  sub_1E3E7BA10();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  void *v1 = v0;
  v1[1] = sub_1E3C68D38;
  uint64_t v2 = *(void *)(v0 + 56);
  return MEMORY[0x1F4127750](v2, v0 + 16);
}

uint64_t sub_1E3C68D38()
{
  uint64_t v2 = *v1 + 16;
  uint64_t v3 = *v1;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0(v2);
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3C68E78, 0, 0);
  }
  else
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
}

uint64_t sub_1E3C68E78()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E3C68E90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSPackageLoader();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C68EF4()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for JSPackageLoader() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = sub_1E3E7B860();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_deallocObject();
}

uint64_t sub_1E3C68FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSPackageLoader();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C69030(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for JSPackageLoader() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1E3C19DC4;
  v8[8] = a2;
  v8[9] = v7;
  v8[7] = a1;
  return MEMORY[0x1F4188298](sub_1E3C68C88, 0, 0);
}

uint64_t sub_1E3C69128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[18] = a3;
  v4[19] = v3;
  v4[16] = a1;
  v4[17] = a2;
  uint64_t v5 = sub_1E3E7B870();
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  sub_1E3E7BB40();
  v4[23] = swift_task_alloc();
  uint64_t v6 = sub_1E3E7CA90();
  v4[24] = v6;
  v4[25] = *(void *)(v6 - 8);
  v4[26] = swift_task_alloc();
  uint64_t v7 = sub_1E3E77D00();
  v4[27] = v7;
  v4[28] = *(void *)(v7 - 8);
  v4[29] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE25A8);
  v4[30] = v8;
  v4[31] = *(void *)(v8 - 8);
  v4[32] = swift_task_alloc();
  sub_1E3E7B930();
  v4[33] = swift_task_alloc();
  uint64_t v9 = sub_1E3E7B910();
  v4[34] = v9;
  v4[35] = *(void *)(v9 - 8);
  v4[36] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C693B8, 0, 0);
}

uint64_t sub_1E3C693B8()
{
  sub_1E3C6B738(v0 + 2);
  sub_1E3E7B980();
  sub_1E3E7B970();
  sub_1E3E7B920();
  sub_1E3E7B950();
  swift_allocObject();
  sub_1E3E7B940();
  sub_1E3C1B2BC((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
  sub_1E3E7C780();
  sub_1E3E7B900();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[37] = (uint64_t)v1;
  void *v1 = v0;
  v1[1] = sub_1E3C695B0;
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[18];
  uint64_t v6 = MEMORY[0x1E4F71040];
  return MEMORY[0x1F41277B8](v2, v4, v5, v3, v6);
}

uint64_t sub_1E3C695B0()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C69894;
  }
  else {
    uint64_t v2 = sub_1E3C696C4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C696C4()
{
  uint64_t v1 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[39] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C69780;
  uint64_t v3 = v0[29];
  return sub_1E3C6BD60(v3, v1);
}

uint64_t sub_1E3C69780()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C69D0C;
  }
  else {
    uint64_t v2 = sub_1E3C69974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C69894()
{
  (*(void (**)(void, void))(v0[35] + 8))(v0[36], v0[34]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1E3C69974()
{
  if (qword_1EBFE0FD8 != -1) {
    swift_once();
  }
  uint64_t v16 = v0[35];
  uint64_t v17 = v0[34];
  uint64_t v18 = v0[36];
  uint64_t v21 = v0[32];
  uint64_t v13 = v0[30];
  uint64_t v14 = v0[31];
  uint64_t v1 = v0[28];
  uint64_t v11 = v0[29];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[27];
  uint64_t v5 = v0[24];
  uint64_t v4 = v0[25];
  uint64_t v12 = v0[22];
  uint64_t v19 = v0[21];
  uint64_t v20 = v0[20];
  uint64_t v15 = v0[16];
  uint64_t v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBFE0FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
  sub_1E3E7BB60();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
  sub_1E3E7BB30();
  sub_1E3E7BB20();
  v0[15] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v1 + 16))(boxed_opaque_existential_1, v11, v3);
  sub_1E3E7BB00();
  sub_1E3C10CE0((uint64_t)(v0 + 12), &qword_1EBFE6190);
  sub_1E3E7BB20();
  sub_1E3E7BB50();
  sub_1E3E7C860();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
  sub_1E3E7B8F0();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v21, v13);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  uint64_t v8 = v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0CD0) + 36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v8, v11, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v8, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v15, v12, v20);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1E3C69D0C()
{
  uint64_t v2 = v0[35];
  uint64_t v1 = v0[36];
  uint64_t v3 = v0[34];
  (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1E3C69E0C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E7CD80();
  MEMORY[0x1F4188790](v9 - 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EBFE20A0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1E3E7B9F0();
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1EBFECD00);
  uint64_t result = sub_1E3C6A058(v11);
  if (!v3)
  {
    uint64_t v14 = result;
    unint64_t v15 = v13;
    sub_1E3E7CD70();
    sub_1E3E7CD40();
    if (v16)
    {
      sub_1E3C242A0(v21, (uint64_t)v8);
      uint64_t v17 = sub_1E3E7CA40();
      uint64_t v18 = MEMORY[0x1E4F71788];
      a3[3] = v17;
      a3[4] = v18;
      __swift_allocate_boxed_opaque_existential_1(a3);
      sub_1E3E7CA30();
    }
    else
    {
      type metadata accessor for JSPackageError();
      sub_1E3C6A134();
      swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v19, v11, v10);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
    return sub_1E3C2B7E8(v14, v15);
  }
  return result;
}

uint64_t sub_1E3C6A058(uint64_t a1)
{
  uint64_t v4 = sub_1E3E7B990();
  if (!v1 && v3 >> 60 == 15)
  {
    type metadata accessor for JSPackageError();
    sub_1E3C6A134();
    swift_allocError();
    uint64_t v6 = v5;
    uint64_t v7 = sub_1E3E7B9F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a1, v7);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v4;
}

unint64_t sub_1E3C6A134()
{
  unint64_t result = qword_1EBFE0B28;
  if (!qword_1EBFE0B28)
  {
    type metadata accessor for JSPackageError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE0B28);
  }
  return result;
}

unint64_t sub_1E3C6A18C()
{
  unint64_t result = qword_1EBFE10B8;
  if (!qword_1EBFE10B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE10B8);
  }
  return result;
}

uint64_t sub_1E3C6A1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B860();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1E3C6A24C(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7B860();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1E3C6A2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1E3C6A314(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1E3C6A378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1E3C6A3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1E3C6A440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C6A454);
}

uint64_t sub_1E3C6A454(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B860();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1E3C6A4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C6A4D4);
}

uint64_t sub_1E3C6A4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B860();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1E3C6A544()
{
  uint64_t result = sub_1E3E7B860();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t InMemoryPodcastStateDataSource.init(asPartOf:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25E30);
  sub_1E3E7BE20();
  uint64_t v0 = sub_1E3E7A330();
  swift_release();
  return v0;
}

ValueMetadata *type metadata accessor for Legacy()
{
  return &type metadata for Legacy;
}

void sub_1E3C6A64C()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_1E3C25B18();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1E3C6A718(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1E3E77D00();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v7 + v10) & ~v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v13 = *(void *)(v9 + 64);
  }
  else {
    size_t v13 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v14 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v14 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v12 + v13 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v18 = v8;
    uint64_t v19 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v20 = (const void *)(((unint64_t)a2 + v11) & v19);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v20, 1, v18))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v19), v20, v13);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v19, v20, v18);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v11) & v19, 0, 1, v18);
    }
  }
  return a1;
}

uint64_t sub_1E3C6A8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_1E3E77D00();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = v6;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(unint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

uint64_t sub_1E3C6AA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_1E3E77D00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v13 = *(void *)(v8 + 64);
    }
    else {
      size_t v13 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v11, v12, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v11, v12, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1E3C6AB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_1E3E77D00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v12 = (void *)((v10 + a2) & ~v9);
  size_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v14 = v13(v11, 1, v7);
  int v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v11, v12, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      return a1;
    }
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v11, v12, v7);
      return a1;
    }
    uint64_t v19 = *(void (**)(void *, uint64_t))(v8 + 8);
    uint64_t v18 = v8 + 8;
    v19(v11, v7);
    int v16 = *(_DWORD *)(v18 + 76);
    size_t v17 = *(void *)(v18 + 56);
  }
  if (v16) {
    size_t v20 = v17;
  }
  else {
    size_t v20 = v17 + 1;
  }
  memcpy(v11, v12, v20);
  return a1;
}

uint64_t sub_1E3C6ACE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_1E3E77D00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v13 = *(void *)(v8 + 64);
    }
    else {
      size_t v13 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v11, v12, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v11, v12, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1E3C6AE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_1E3E77D00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v12 = (void *)((v10 + a2) & ~v9);
  size_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v14 = v13(v11, 1, v7);
  int v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v11, v12, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      return a1;
    }
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v11, v12, v7);
      return a1;
    }
    uint64_t v19 = *(void (**)(void *, uint64_t))(v8 + 8);
    uint64_t v18 = v8 + 8;
    v19(v11, v7);
    int v16 = *(_DWORD *)(v18 + 76);
    size_t v17 = *(void *)(v18 + 56);
  }
  if (v16) {
    size_t v20 = v17;
  }
  else {
    size_t v20 = v17 + 1;
  }
  memcpy(v11, v12, v20);
  return a1;
}

uint64_t sub_1E3C6AFD0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_1E3E77D00();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= v7) {
    unsigned int v12 = v7;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  if (v10) {
    uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  else {
    uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = *(void *)(v6 + 64) + v13;
  if (a2 <= v12) {
    goto LABEL_30;
  }
  uint64_t v16 = v14 + (v15 & ~v13);
  char v17 = 8 * v16;
  if (v16 <= 3)
  {
    unsigned int v19 = ((a2 - v12 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v19 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v19 < 2)
    {
LABEL_30:
      if (v12)
      {
        if (v7 >= v11)
        {
          uint64_t v25 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v25(a1, v7, v5);
        }
        else
        {
          unsigned int v23 = (*(uint64_t (**)(unint64_t))(v9 + 48))(((unint64_t)a1 + v15) & ~v13);
          if (v23 >= 2) {
            return v23 - 1;
          }
          else {
            return 0;
          }
        }
      }
      return 0;
    }
  }
  int v18 = *((unsigned __int8 *)a1 + v16);
  if (!*((unsigned char *)a1 + v16)) {
    goto LABEL_30;
  }
LABEL_20:
  int v20 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v20 = 0;
  }
  if (v16)
  {
    if (v16 <= 3) {
      int v21 = v16;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v22 = 0;
  }
  return v12 + (v22 | v20) + 1;
}

void sub_1E3C6B24C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v31 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  int v10 = 0;
  uint64_t v11 = *(void *)(sub_1E3E77D00() - 8);
  uint64_t v12 = v11;
  int v13 = *(_DWORD *)(v11 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= v9) {
    unsigned int v15 = v9;
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = *(void *)(v8 + 64) + v16;
  size_t v18 = *(void *)(v11 + 64);
  if (v13) {
    size_t v19 = v18;
  }
  else {
    size_t v19 = v18 + 1;
  }
  size_t v20 = (v17 & ~v16) + v19;
  if (a3 <= v15) {
    goto LABEL_17;
  }
  if (v20 <= 3)
  {
    unsigned int v21 = ((a3 - v15 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
    if (HIWORD(v21))
    {
      int v10 = 4;
      if (v15 >= a2) {
        goto LABEL_25;
      }
      goto LABEL_18;
    }
    if (v21 >= 0x100) {
      int v10 = 2;
    }
    else {
      int v10 = v21 > 1;
    }
LABEL_17:
    if (v15 >= a2) {
      goto LABEL_25;
    }
    goto LABEL_18;
  }
  int v10 = 1;
  if (v15 >= a2)
  {
LABEL_25:
    switch(v10)
    {
      case 1:
        a1[v20] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_30;
      case 2:
        *(_WORD *)&a1[v20] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_30;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v20] = 0;
        goto LABEL_29;
      default:
LABEL_29:
        if (a2)
        {
LABEL_30:
          if (v9 >= v14)
          {
            uint64_t v29 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
            v29(a1, a2, v9, v7);
          }
          else
          {
            uint64_t v25 = (unsigned char *)((unint64_t)&a1[v17] & ~v16);
            if (v14 >= a2)
            {
              uint64_t v30 = *(void (**)(unsigned char *, void))(v12 + 56);
              v30(v25, (a2 + 1));
            }
            else
            {
              if (v19 <= 3) {
                int v26 = ~(-1 << (8 * v19));
              }
              else {
                int v26 = -1;
              }
              if (v19)
              {
                int v27 = v26 & (~v14 + a2);
                if (v19 <= 3) {
                  int v28 = v19;
                }
                else {
                  int v28 = 4;
                }
                bzero(v25, v19);
                switch(v28)
                {
                  case 2:
                    *(_WORD *)uint64_t v25 = v27;
                    break;
                  case 3:
                    *(_WORD *)uint64_t v25 = v27;
                    void v25[2] = BYTE2(v27);
                    break;
                  case 4:
                    *(_DWORD *)uint64_t v25 = v27;
                    break;
                  default:
                    *uint64_t v25 = v27;
                    break;
                }
              }
            }
          }
        }
        break;
    }
    return;
  }
LABEL_18:
  unsigned int v22 = ~v15 + a2;
  if (v20 < 4)
  {
    int v23 = (v22 >> (8 * v20)) + 1;
    if (v20)
    {
      int v24 = v22 & ~(-1 << (8 * v20));
      bzero(a1, (v17 & ~v16) + v19);
      if (v20 == 3)
      {
        *(_WORD *)a1 = v24;
        a1[2] = BYTE2(v24);
      }
      else if (v20 == 2)
      {
        *(_WORD *)a1 = v24;
      }
      else
      {
        *a1 = v24;
      }
    }
  }
  else
  {
    bzero(a1, (v17 & ~v16) + v19);
    *(_DWORD *)a1 = v22;
    int v23 = 1;
  }
  switch(v10)
  {
    case 1:
      a1[v20] = v23;
      break;
    case 2:
      *(_WORD *)&a1[v20] = v23;
      break;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x1E3C6B5F4);
    case 4:
      *(_DWORD *)&a1[v20] = v23;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for JSPackageSource()
{
  return __swift_instantiateGenericMetadata();
}

BOOL sub_1E3C6B648(double *a1, double *a2)
{
  return _sSo7CGPointV10PodcastsUIE3eetoiySbAB_ABtFZ_0(*a1, a1[1], *a2, a2[1]);
}

BOOL _sSo7CGPointV10PodcastsUIE3eetoiySbAB_ABtFZ_0(double a1, double a2, double a3, double a4)
{
  double v4 = fabs(a1);
  double v5 = fabs(a3);
  if (v5 < v4) {
    double v4 = v5;
  }
  uint64_t v6 = (*(void *)&v4 >> 52) & 0x7FFLL;
  if (v6)
  {
    if (v6 == 2047) {
      return 0;
    }
    double v7 = COERCE_DOUBLE(*(void *)&v4 & 0x7FF0000000000000) * 2.22044605e-16;
  }
  else
  {
    *(void *)&double v7 = 1;
  }
  if (vabdd_f64(a1, a3) < v7) {
    return _s12CoreGraphics7CGFloatV10PodcastsUIE3eetoiySbAC_ACtFZ_0(a2, a4);
  }
  return 0;
}

unint64_t sub_1E3C6B6B8(uint64_t a1)
{
  unint64_t result = sub_1E3C6B6E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1E3C6B6E0()
{
  unint64_t result = qword_1EAE25E38;
  if (!qword_1EAE25E38)
  {
    type metadata accessor for CGPoint(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAE25E38);
  }
  return result;
}

uint64_t sub_1E3C6B738@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = type metadata accessor for JSPackageFetcher();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v43 = v6;
  double v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E7BB40();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1E3E7CA90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v13 = objc_msgSend(self, sel_isRunningOnInternalOS);
  uint64_t v44 = a1;
  if (v13)
  {
    uint64_t result = sub_1E3C6C528(a1);
    if (v2)
    {
      uint64_t v41 = v1;
      uint64_t v42 = v5;
      long long v39 = v7;
      if (qword_1EBFE0FD8 != -1) {
        swift_once();
      }
      uint64_t v15 = __swift_project_value_buffer(v9, (uint64_t)qword_1EBFE0FB8);
      uint64_t v40 = v10;
      long long v37 = *(void (**)(char *))(v10 + 16);
      uint64_t v38 = v15;
      v37(v12);
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
      uint64_t v17 = *(void *)(sub_1E3E7BB60() - 8);
      uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
      uint64_t v19 = (v18 + 32) & ~v18;
      uint64_t v20 = v19 + *(void *)(v17 + 72);
      uint64_t v36 = v16;
      uint64_t v34 = v20;
      uint64_t v33 = v18 | 7;
      uint64_t v21 = swift_allocObject();
      long long v32 = xmmword_1E3E86660;
      *(_OWORD *)(v21 + 16) = xmmword_1E3E86660;
      uint64_t v35 = v19;
      sub_1E3E7BB30();
      sub_1E3E7BB20();
      swift_getErrorValue();
      uint64_t v22 = v45;
      uint64_t v23 = v46;
      v47[3] = v46;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v47);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(boxed_opaque_existential_1, v22, v23);
      sub_1E3E7BB00();
      sub_1E3C10CE0((uint64_t)v47, &qword_1EBFE6190);
      sub_1E3E7BB20();
      sub_1E3E7BB50();
      sub_1E3E7C880();
      uint64_t v25 = v40;
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v9);
      return sub_1E3C6CD18(v44);
    }
  }
  else
  {
    uint64_t v42 = v5;
    int v26 = (void *)*MEMORY[0x1E4F91FE8];
    sub_1E3E7C780();
    sub_1E3C6E1A4(v1, (uint64_t)v7);
    unint64_t v27 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    uint64_t v28 = swift_allocObject();
    sub_1E3C6E20C((uint64_t)v7, v28 + v27);
    uint64_t v29 = sub_1E3E7B8C0();
    uint64_t v30 = v44;
    v44[3] = v29;
    v30[4] = sub_1E3C6E2D4(&qword_1EBFE2598, MEMORY[0x1E4F71070]);
    __swift_allocate_boxed_opaque_existential_1(v30);
    id v31 = v26;
    return sub_1E3E7B8D0();
  }
  return result;
}

uint64_t sub_1E3C6BD60(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE25A0);
  v3[5] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7B8C0();
  void v3[6] = v5;
  v3[7] = *(void *)(v5 - 8);
  v3[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2590);
  v3[9] = swift_task_alloc();
  v3[10] = *(void *)(a2 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  uint64_t v6 = sub_1E3E7B890();
  v3[13] = v6;
  v3[14] = *(void *)(v6 - 8);
  v3[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C6BF44, 0, 0);
}

uint64_t sub_1E3C6BF44()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[10] + 16);
  v2(v0[12], v0[4], v0[3]);
  int v3 = swift_dynamicCast();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v3)
  {
    uint64_t v6 = v0[14];
    uint64_t v5 = v0[15];
    uint64_t v7 = v0[13];
    uint64_t v8 = v0[9];
    v4(v8, 0, 1, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v8, v7);
    sub_1E3E7B880();
    (*(void (**)(void, void))(v6 + 8))(v0[15], v0[13]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
LABEL_8:
    return v9();
  }
  uint64_t v10 = v0[11];
  uint64_t v11 = v0[9];
  uint64_t v12 = v0[7];
  uint64_t v13 = v0[4];
  uint64_t v14 = v0[3];
  v4(v11, 1, 1, v0[13]);
  sub_1E3C10CE0(v11, &qword_1EBFE2590);
  v2(v10, v13, v14);
  int v15 = swift_dynamicCast();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (!v15)
  {
    uint64_t v23 = v0[5];
    v16(v23, 1, 1, v0[6]);
    sub_1E3C10CE0(v23, &qword_1EBFE25A0);
    sub_1E3C6E104();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    goto LABEL_8;
  }
  uint64_t v18 = v0[7];
  uint64_t v17 = v0[8];
  uint64_t v20 = v0[5];
  uint64_t v19 = v0[6];
  v16(v20, 0, 1, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v17, v20, v19);
  uint64_t v21 = (void *)swift_task_alloc();
  v0[16] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_1E3C6C290;
  uint64_t v22 = v0[2];
  return MEMORY[0x1F4127798](v22);
}

uint64_t sub_1E3C6C290()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C6C468;
  }
  else {
    uint64_t v2 = sub_1E3C6C3A4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C6C3A4()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1E3C6C468()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1E3C6C528@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v1 = type metadata accessor for JSPackageFetcher();
  uint64_t v52 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v53 = v2;
  uint64_t v55 = (uint64_t)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E7B9E0();
  uint64_t v60 = *(void *)(v3 - 8);
  uint64_t v61 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v57 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  os_log_type_t v58 = (char *)&v50 - v6;
  uint64_t v7 = sub_1E3E77D00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v54 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v50 - v11;
  uint64_t v62 = sub_1E3E77BE0();
  uint64_t v13 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  int v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v64 = (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v50 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v50 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v67 = (uint64_t)&v50 - v25;
  if (qword_1EBFE6350 != -1) {
    swift_once();
  }
  id v26 = objc_msgSend((id)qword_1EBFE63D8, sel_resourceURL);
  uint64_t v63 = v12;
  if (v26)
  {
    unint64_t v27 = v26;
    sub_1E3E77C90();

    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v28(v20, 0, 1, v7);
  }
  else
  {
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v28(v20, 1, 1, v7);
  }
  sub_1E3C24558((uint64_t)v20, (uint64_t)v23);
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v29(v23, 1, v7) == 1)
  {
    sub_1E3C10CE0((uint64_t)v23, &qword_1EBFE6070);
    uint64_t v30 = 1;
    uint64_t v31 = v67;
  }
  else
  {
    unint64_t v65 = 0xD000000000000014;
    unint64_t v66 = 0x80000001E3E9DAA0;
    uint64_t v32 = *MEMORY[0x1E4F276C0];
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
    uint64_t v51 = v28;
    uint64_t v34 = v62;
    v33(v15, v32, v62);
    sub_1E3C10C8C();
    uint64_t v31 = v67;
    sub_1E3E77CF0();
    uint64_t v35 = v34;
    uint64_t v28 = v51;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v35);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v23, v7);
    uint64_t v30 = 0;
  }
  v28((char *)v31, v30, 1, v7);
  uint64_t v36 = v64;
  sub_1E3C242A0(v31, v64);
  if (v29((char *)v36, 1, v7) == 1)
  {
    sub_1E3C10CE0(v36, &qword_1EBFE6070);
  }
  else
  {
    long long v37 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v63, v36, v7);
    id v38 = objc_msgSend(self, sel_defaultManager);
    sub_1E3E77CC0();
    long long v39 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    unsigned __int8 v40 = objc_msgSend(v38, sel_fileExistsAtPath_, v39);

    if (v40)
    {
      uint64_t v42 = v60;
      uint64_t v41 = v61;
      uint64_t v43 = v58;
      (*(void (**)(char *, void, uint64_t))(v60 + 104))(v58, *MEMORY[0x1E4F710C8], v61);
      uint64_t v44 = v55;
      sub_1E3C6E1A4(v56, v55);
      unint64_t v45 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
      uint64_t v64 = swift_allocObject();
      sub_1E3C6E20C(v44, v64 + v45);
      uint64_t v46 = sub_1E3E7B890();
      unint64_t v47 = v59;
      v59[3] = v46;
      v47[4] = sub_1E3C6E2D4(&qword_1EAE25E50, MEMORY[0x1E4F71058]);
      __swift_allocate_boxed_opaque_existential_1(v47);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v54, v37, v7);
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v57, v43, v41);
      sub_1E3E7B8A0();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v41);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v37, v7);
      return sub_1E3C10CE0(v67, &qword_1EBFE6070);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v37, v7);
  }
  type metadata accessor for JSPackageError();
  sub_1E3C6E2D4((unint64_t *)&qword_1EBFE0B28, (void (*)(uint64_t))type metadata accessor for JSPackageError);
  swift_allocError();
  *uint64_t v49 = 0xD000000000000014;
  v49[1] = 0x80000001E3E9DAA0;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return sub_1E3C10CE0(v31, &qword_1EBFE6070);
}

uint64_t sub_1E3C6CD18@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 v40 = a1;
  uint64_t v2 = type metadata accessor for JSPackageFetcher();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v35 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v36 = (uint64_t)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E7B9E0();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x1F4188790](v4);
  id v38 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v39 = (char *)&v33 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E3E77D00();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v33 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v34 = (char *)&v33 - v15;
  uint64_t v37 = v1;
  swift_getObjectType();
  if (qword_1EBFE0BE0 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE25C8);
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1EBFECCE8);
  sub_1E3E7BCB0();
  uint64_t v18 = v44;
  if (!v44)
  {
    type metadata accessor for JSPackageError();
    sub_1E3C6E2D4((unint64_t *)&qword_1EBFE0B28, (void (*)(uint64_t))type metadata accessor for JSPackageError);
    swift_allocError();
    uint64_t v22 = v21;
    v21[3] = v16;
    v21[4] = sub_1E3C6E274();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_1, v17, v16);
    goto LABEL_7;
  }
  uint64_t v19 = v43;
  sub_1E3E77CD0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1E3C10CE0((uint64_t)v10, &qword_1EBFE6070);
    type metadata accessor for JSPackageError();
    sub_1E3C6E2D4((unint64_t *)&qword_1EBFE0B28, (void (*)(uint64_t))type metadata accessor for JSPackageError);
    swift_allocError();
    *uint64_t v20 = v19;
    v20[1] = v18;
LABEL_7:
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = v34;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v34, v10, v11);
  uint64_t v27 = v41;
  uint64_t v26 = v42;
  uint64_t v28 = v39;
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v39, *MEMORY[0x1E4F710C8], v42);
  uint64_t v29 = v36;
  sub_1E3C6E1A4(v37, v36);
  unint64_t v30 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1E3C6E20C(v29, v37 + v30);
  uint64_t v31 = sub_1E3E7B890();
  uint64_t v32 = v40;
  v40[3] = v31;
  v32[4] = sub_1E3C6E2D4(&qword_1EAE25E50, MEMORY[0x1E4F71058]);
  __swift_allocate_boxed_opaque_existential_1(v32);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v33, v25, v11);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v38, v28, v26);
  sub_1E3E7B8A0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v25, v11);
}

id sub_1E3C6D2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4D10);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_ams_configurationWithProcessInfo_bag_, *(void *)(a3 + *(int *)(type metadata accessor for JSPackageFetcher() + 24)), a1);
  swift_unknownObjectRetain();
  sub_1E3E7C7A0();
  uint64_t v10 = sub_1E3E7C810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 0, 1, v10);
  uint64_t v11 = (void *)sub_1E3E7B9D0();
  sub_1E3C10CE0((uint64_t)v7, &qword_1EBFE4D10);
  if (objc_msgSend(self, sel_isRunningOnInternalOS))
  {
    if (qword_1EBFE0FD8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1E3E7CA90();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EBFE0FB8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
    sub_1E3E7BB60();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
    sub_1E3E7BAF0();
    sub_1E3E7C860();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setUrlKnownToBeTrusted_, 1);
  }
  return v9;
}

uint64_t sub_1E3C6D584()
{
  uint64_t v0 = sub_1E3E7CA70();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E7CA90();
  __swift_allocate_value_buffer(v4, qword_1EBFE0FB8);
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBFE0FB8);
  if (qword_1EBFE0688 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBFDF4D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_1E3E7CA80();
}

void *sub_1E3C6D6D8()
{
  uint64_t result = (void *)sub_1E3C7F0C4((uint64_t)&unk_1F3F47B78);
  off_1EBFE0FA8 = result;
  return result;
}

uint64_t sub_1E3C6D700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v67 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v51 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1E3E77D00();
  uint64_t v55 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  v49[0] = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E7BB40();
  MEMORY[0x1F4188790](v5 - 8);
  v49[1] = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1E3E7CA90();
  uint64_t v50 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v54 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBFE0FB0 == -1) {
    goto LABEL_2;
  }
LABEL_45:
  swift_once();
LABEL_2:
  uint64_t v8 = *((void *)off_1EBFE0FA8 + 8);
  uint64_t v57 = (char *)off_1EBFE0FA8 + 64;
  uint64_t v9 = 1 << *((unsigned char *)off_1EBFE0FA8 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v58 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v59 = off_1EBFE0FA8;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (v11)
  {
LABEL_5:
    unint64_t v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v14 = v13 | (v12 << 6);
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v15 >= v58) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)&v57[8 * v15];
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v58) {
        goto LABEL_27;
      }
      unint64_t v16 = *(void *)&v57[8 * v12];
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v58) {
          goto LABEL_27;
        }
        unint64_t v16 = *(void *)&v57[8 * v12];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v58)
          {
LABEL_27:
            swift_release();
            if (qword_1EBFE0FD8 != -1) {
              swift_once();
            }
            __swift_project_value_buffer(v56, (uint64_t)qword_1EBFE0FB8);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
            sub_1E3E7BB60();
            *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
            sub_1E3E7BAF0();
            sub_1E3E7C870();
            swift_bridgeObjectRelease();
            if (sub_1E3E77BF0() == 0x6B63617074656ALL && v40 == 0xE700000000000000)
            {
              swift_bridgeObjectRelease();
              uint64_t v41 = v53;
              uint64_t v42 = v55;
            }
            else
            {
              char v45 = sub_1E3E7E150();
              swift_bridgeObjectRelease();
              uint64_t v41 = v53;
              uint64_t v42 = v55;
              if ((v45 & 1) == 0) {
                return sub_1E3E77C60();
              }
            }
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v52, v67, v41);
          }
          unint64_t v16 = *(void *)&v57[8 * v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v12 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_44;
              }
              if (v12 >= v58) {
                goto LABEL_27;
              }
              unint64_t v16 = *(void *)&v57[8 * v12];
              ++v17;
              if (v16) {
                goto LABEL_19;
              }
            }
          }
          int64_t v12 = v17;
        }
      }
    }
LABEL_19:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_20:
    uint64_t v18 = 16 * v14;
    uint64_t v19 = (uint64_t *)(v59[6] + v18);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = (uint64_t *)(v59[7] + v18);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1E3E77C00();
    uint64_t v63 = v25;
    uint64_t v65 = v20;
    uint64_t v66 = v21;
    sub_1E3C10C8C();
    char v26 = sub_1E3E7DC70();
    swift_bridgeObjectRelease();
    if (v26) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_5;
    }
  }
  if (qword_1EBFE0FD8 != -1) {
    swift_once();
  }
  uint64_t v27 = v56;
  uint64_t v28 = __swift_project_value_buffer(v56, (uint64_t)qword_1EBFE0FB8);
  uint64_t v29 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v54, v28, v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
  uint64_t v30 = *(void *)(sub_1E3E7BB60() - 8);
  unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1E3E86660;
  int64_t v58 = v32 + v31;
  sub_1E3E7BB30();
  sub_1E3E7BB20();
  uint64_t v33 = MEMORY[0x1E4FBB1A0];
  uint64_t v64 = MEMORY[0x1E4FBB1A0];
  uint64_t v62 = v20;
  uint64_t v63 = v21;
  swift_bridgeObjectRetain();
  sub_1E3E7BB00();
  sub_1E3C10CE0((uint64_t)&v62, &qword_1EBFE6190);
  sub_1E3E7BB20();
  uint64_t v64 = v33;
  uint64_t v62 = v23;
  uint64_t v63 = v24;
  swift_bridgeObjectRetain();
  sub_1E3E7BB00();
  sub_1E3C10CE0((uint64_t)&v62, &qword_1EBFE6190);
  sub_1E3E7BB20();
  sub_1E3E7BB50();
  uint64_t v34 = v56;
  uint64_t v35 = v54;
  sub_1E3E7C860();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v34);
  uint64_t v62 = sub_1E3E77C00();
  uint64_t v63 = v36;
  uint64_t v65 = v20;
  uint64_t v66 = v21;
  uint64_t v60 = v23;
  uint64_t v61 = v24;
  sub_1E3E7DC20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = (uint64_t)v51;
  sub_1E3E77CD0();
  swift_bridgeObjectRelease();
  uint64_t v38 = v55;
  uint64_t v39 = v53;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v37, 1, v53) == 1)
  {
    sub_1E3C10CE0(v37, &qword_1EBFE6070);
    type metadata accessor for JSPackageError();
    sub_1E3C6E2D4((unint64_t *)&qword_1EBFE0B28, (void (*)(uint64_t))type metadata accessor for JSPackageError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return swift_release();
  }
  uint64_t v43 = v49[0];
  (*(void (**)(void, uint64_t, uint64_t))(v38 + 32))(v49[0], v37, v39);
  if (sub_1E3E77BF0() == 0x6B63617074656ALL && v44 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  char v47 = sub_1E3E7E150();
  swift_bridgeObjectRelease();
  if (v47)
  {
LABEL_38:
    uint64_t v48 = v55;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v52, v43, v39);
  }
  else
  {
    sub_1E3E77C60();
    uint64_t v48 = v55;
  }
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v43, v39);
  return swift_release();
}

uint64_t sub_1E3C6E0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3C6D700(a1, a2);
}

unint64_t sub_1E3C6E0E8()
{
  return 0xD000000000000034;
}

unint64_t sub_1E3C6E104()
{
  unint64_t result = qword_1EAE25E48;
  if (!qword_1EAE25E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25E48);
  }
  return result;
}

uint64_t type metadata accessor for JSPackageFetcher()
{
  uint64_t result = qword_1EBFE0FE0;
  if (!qword_1EBFE0FE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3C6E1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSPackageFetcher();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C6E20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSPackageFetcher();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1E3C6E274()
{
  unint64_t result = qword_1EBFE25C0;
  if (!qword_1EBFE25C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE25C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE25C0);
  }
  return result;
}

uint64_t sub_1E3C6E2D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1E3C6E320(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for JSPackageFetcher() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1E3C6D2F8(a1, a2, v6);
}

unsigned char *storeEnumTagSinglePayload for ValidatedJetPackAssetLocationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3C6E43CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ValidatedJetPackAssetLocationError()
{
  return &type metadata for ValidatedJetPackAssetLocationError;
}

uint64_t *sub_1E3C6E474(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v7 = sub_1E3E7C810();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    swift_unknownObjectRetain();
    id v10 = v9;
  }
  return a1;
}

void sub_1E3C6E554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7C810();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_unknownObjectRelease();
  int v5 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t sub_1E3C6E5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7C810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  swift_unknownObjectRetain();
  id v9 = v8;
  return a1;
}

uint64_t sub_1E3C6E664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7C810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v8[1] = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  int64_t v12 = *(void **)(a2 + v11);
  unint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  return a1;
}

uint64_t sub_1E3C6E71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7C810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1E3C6E7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7C810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  swift_unknownObjectRelease();
  v8[1] = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  int64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  return a1;
}

uint64_t sub_1E3C6E84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3C6E860);
}

uint64_t sub_1E3C6E860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7C810();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1E3C6E920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3C6E934);
}

uint64_t sub_1E3C6E934(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1E3E7C810();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1E3C6E9F0()
{
  uint64_t result = sub_1E3E7C810();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1E3C6EA98()
{
  unint64_t result = qword_1EAE25E58;
  if (!qword_1EAE25E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25E58);
  }
  return result;
}

uint64_t sub_1E3C6EAEC(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7D560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE3380);
  sub_1E3E7BE20();
  uint64_t v6 = v11[0];
  uint64_t v10 = a1;
  os_unfair_lock_lock((os_unfair_lock_t)(v11[0] + 24));
  sub_1E3C6FFB8((uint64_t *)(v6 + 16), v11);
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
  uint64_t v7 = v11[0];
  if (v11[0])
  {
    swift_release();
    return v7;
  }
  else
  {
    os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
    sub_1E3C70030((void *)(v6 + 16), v11);
    os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
    swift_release();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    sub_1E3E7DDD0();
    sub_1E3E7CEA0();
    sub_1E3E7DF20();
    sub_1E3E7CEA0();
    sub_1E3C12B10(0, &qword_1EAE25E98);
    sub_1E3C6FFE8((unint64_t *)&unk_1EBFE4AB0, MEMORY[0x1E4F91E60]);
    sub_1E3E7CBA0();
    sub_1E3E7CEA0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1E3E7DF80();
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3C6ED80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1E3E79920();
  uint64_t v14 = *(void *)(v4 - 8);
  uint64_t v15 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25E88);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE3350);
  sub_1E3E7BE20();
  uint64_t v10 = v17[0];
  uint64_t v16 = a1;
  os_unfair_lock_lock((os_unfair_lock_t)(v17[0] + 24));
  sub_1E3C6FEB8((uint64_t *)(v10 + 16), (uint64_t)v9);
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2D50);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_1E3C10CE0((uint64_t)v9, &qword_1EAE25E88);
    os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
    sub_1E3C6FED4((void *)(v10 + 16), v17);
    os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v6, a1, v15);
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    sub_1E3E7DDD0();
    sub_1E3E7CEA0();
    sub_1E3E7DF20();
    sub_1E3E7CEA0();
    sub_1E3C6FFE8((unint64_t *)&qword_1EAE25E90, MEMORY[0x1E4F91B08]);
    sub_1E3E7CBA0();
    sub_1E3E7CEA0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1E3E7DF80();
    __break(1u);
  }
  else
  {
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, v9, v11);
  }
  return result;
}

uint64_t EngagementThresholdStatusProvider.__allocating_init(asPartOf:)()
{
  uint64_t v0 = sub_1E3E7D560();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E7BE20();
  id v5 = objc_msgSend(v8[1], sel_privateQueueContext);
  swift_unknownObjectRelease();
  *(void *)(v4 + 16) = v5;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F91E58], v0);
  uint64_t v6 = sub_1E3C6EAEC((uint64_t)v3);
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  *(void *)(v4 + 24) = v6;
  return v4;
}

uint64_t EngagementThresholdStatusProvider.init(asPartOf:)()
{
  uint64_t v1 = sub_1E3E7D560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E7BE20();
  id v5 = objc_msgSend(v8[1], sel_privateQueueContext);
  swift_unknownObjectRelease();
  *(void *)(v0 + 16) = v5;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F91E58], v1);
  uint64_t v6 = sub_1E3C6EAEC((uint64_t)v4);
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  *(void *)(v0 + 24) = v6;
  return v0;
}

BOOL sub_1E3C6F394()
{
  if (objc_msgSend(*(id *)(v0 + 24), sel_objectForKey_, *MEMORY[0x1E4F92068]))
  {
    sub_1E3E7DCA0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1E3C6FF50((uint64_t)v5, (uint64_t)v6);
  if (!v7)
  {
    sub_1E3C10CE0((uint64_t)v6, &qword_1EBFE6190);
    goto LABEL_8;
  }
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDEE80);
  if (!swift_dynamicCast())
  {
LABEL_8:
    uint64_t v1 = 0;
    goto LABEL_9;
  }
  uint64_t v1 = v4;
LABEL_9:
  BOOL v2 = v1 != 0;

  return v2;
}

uint64_t sub_1E3C6F47C()
{
  v1[2] = v0;
  uint64_t v2 = sub_1E3E7D8E0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C6F53C, 0, 0);
}

uint64_t sub_1E3C6F53C()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1E3E7CD30();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v6 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);
  v0[6] = v7;

  id v8 = objc_msgSend(self, sel_predicateForPreviouslyPlayedHidingFutureTimestamps);
  objc_msgSend(v7, sel_setPredicate_, v8);

  objc_msgSend(v7, sel_setFetchLimit_, 1);
  uint64_t v9 = *(void **)(v4 + 16);
  uint64_t v10 = swift_allocObject();
  v0[7] = v10;
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v7;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F1BD78], v3);
  v9;
  id v11 = v7;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[8] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1E3C6F730;
  uint64_t v13 = v0[5];
  uint64_t v14 = MEMORY[0x1E4FBB390];
  return MEMORY[0x1F40D7080](v0 + 10, v13, sub_1E3C6FF34, v10, v14);
}

uint64_t sub_1E3C6F730()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  uint64_t v3 = *(void *)(*(void *)v1 + 32);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    id v5 = sub_1E3C6F938;
  }
  else {
    id v5 = sub_1E3C6F8C4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3C6F8C4()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 80);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3C6F938()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1E3C6F9A8@<X0>(BOOL *a1@<X8>)
{
  sub_1E3C12B10(0, &qword_1EBFDF310);
  uint64_t result = sub_1E3E7D8F0();
  if (!v1) {
    *a1 = result > 0;
  }
  return result;
}

uint64_t EngagementThresholdStatusProvider.status.getter()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1E3C6FA38, 0, 0);
}

uint64_t sub_1E3C6FA38()
{
  if (sub_1E3C6F394())
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 24) = v1;
    void *v1 = v0;
    v1[1] = sub_1E3C6FB0C;
    return sub_1E3C6F47C();
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v3(1);
  }
}

uint64_t sub_1E3C6FB0C(char a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
    if (a1) {
      uint64_t v8 = 3;
    }
    else {
      uint64_t v8 = 2;
    }
    return v7(v8);
  }
}

uint64_t EngagementThresholdStatusProvider.deinit()
{
  return v0;
}

uint64_t EngagementThresholdStatusProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1E3C6FCAC()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x1F4188298](sub_1E3C6FA38, 0, 0);
}

uint64_t type metadata accessor for EngagementThresholdStatusProvider()
{
  return self;
}

uint64_t method lookup function for EngagementThresholdStatusProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EngagementThresholdStatusProvider);
}

uint64_t dispatch thunk of EngagementThresholdStatusProvider.__allocating_init(asPartOf:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void *sub_1E3C6FD20(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (!*(void *)(*a1 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_1E3C2E504(a2);
  if ((v4 & 1) == 0) {
    return 0;
  }
  id v5 = *(void **)(*(void *)(v2 + 56) + 8 * v3);
  id v6 = v5;
  return v5;
}

uint64_t sub_1E3C6FD74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v5 = sub_1E3C2EE04(a2), (v6 & 1) != 0))
  {
    unint64_t v7 = v5;
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2D50);
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a3, v8 + *(void *)(v10 + 72) * v7, v9);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, v9);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2D50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a3, 1, 1, v12);
  }
}

uint64_t sub_1E3C6FEB8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3C6FD74(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1E3C6FED4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3C6FEF4()
{
  return swift_deallocObject();
}

uint64_t sub_1E3C6FF34@<X0>(BOOL *a1@<X8>)
{
  return sub_1E3C6F9A8(a1);
}

uint64_t sub_1E3C6FF50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1E3C6FFB8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1E3C6FD20(a1, *(void *)(v2 + 16));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1E3C6FFE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3C70030@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1E3C6FED4(a1, a2);
}

uint64_t sub_1E3C70048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  void v5[4] = a3;
  _OWORD v5[2] = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(void *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  uint64_t v8 = swift_checkMetadataState();
  v5[10] = v8;
  v5[11] = *(void *)(v8 - 8);
  v5[12] = swift_task_alloc();
  v5[13] = *(void *)(a4 - 8);
  v5[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C7022C, 0, 0);
}

uint64_t sub_1E3C7022C()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[5];
  uint64_t v11 = v0[6];
  (*(void (**)(uint64_t, void, void))(v0[11] + 16))(v1, v0[3], v0[10]);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24);
  uint64_t v4 = sub_1E3E775E0();
  v3(v4, v1, v2, v11);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 32) + **(int **)(v11 + 32));
  unint64_t v5 = (void *)swift_task_alloc();
  v0[15] = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_1E3C7038C;
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  return v10(v6, v7, v8);
}

uint64_t sub_1E3C7038C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C70590;
  }
  else {
    uint64_t v2 = sub_1E3C704A0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C704A0()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[2];
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[5]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1E3C70590()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1E3C70630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  uint64_t v10 = *(void *)(a4 + 16);
  uint64_t v11 = *(void *)(a4 + 24);
  *uint64_t v9 = v4;
  v9[1] = sub_1E3C19DC4;
  return sub_1E3C70048(a1, a2, a3, v10, v11);
}

uint64_t static NativeIntentDispatcher.Builder.buildExpression<A>(_:)()
{
  uint64_t v0 = sub_1E3E7C510();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7C500();
  type metadata accessor for _EphemeralIntentImplementationWrapper();
  swift_getWitnessTable();
  sub_1E3E7C4E0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t type metadata accessor for _EphemeralIntentImplementationWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of EphemeralIntentImplementation.init(asPartOf:performing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of EphemeralIntentImplementation.perform()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1E3C19DC4;
  return v9(a1, a2, a3);
}

uint64_t sub_1E3C70934()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t NowPlayingArtwork.ArtworkType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1E3E7E050();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 4;
  if (v2 < 4) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t NowPlayingArtwork.ArtworkType.rawValue.getter()
{
  uint64_t result = 0x72657470616863;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65646F73697065;
      break;
    case 2:
      uint64_t result = 0x65676150776F6873;
      break;
    case 3:
      uint64_t result = 2003789939;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1E3C70A38(unsigned __int8 *a1, char *a2)
{
  return sub_1E3E51378(*a1, *a2);
}

unint64_t sub_1E3C70A48()
{
  unint64_t result = qword_1EAE25EB8;
  if (!qword_1EAE25EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25EB8);
  }
  return result;
}

uint64_t sub_1E3C70A9C()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3C70B74()
{
  sub_1E3E7CE50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3C70C34()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3C70D08@<X0>(char *a1@<X8>)
{
  return NowPlayingArtwork.ArtworkType.init(rawValue:)(a1);
}

void sub_1E3C70D14(uint64_t a1@<X8>)
{
  uint64_t v2 = 0x72657470616863;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x65646F73697065;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "showPageTall");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 2003789939;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
  }
}

uint64_t getEnumTagSinglePayload for SearchOrigin(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11ArtworkTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3C70F08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingArtwork.ArtworkType()
{
  return &type metadata for NowPlayingArtwork.ArtworkType;
}

uint64_t dispatch thunk of JoeColorAlgorithm.joeColor(for:contrasting:selecting:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t Preparable.artworkData(for:imageProvider:)(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_1E3E7A880();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_1E3E78E70();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_1E3E78740();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C7110C, 0, 0);
}

uint64_t sub_1E3C7110C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  sub_1E3C719E0(v0[3], v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1E3C71A48(v0[12]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void, unint64_t))v0[1];
    return v4(0, 0xF000000000000000);
  }
  else
  {
    uint64_t v6 = v0[11];
    uint64_t v7 = (void *)v0[4];
    sub_1E3C71AA8(v0[12], v0[15]);
    ArtworkModel.preferredRequest.getter(v6);
    uint64_t v9 = v7[3];
    uint64_t v8 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v9);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[16] = v10;
    void *v10 = v0;
    v10[1] = sub_1E3C7129C;
    uint64_t v11 = v0[11];
    return ImageProvider.data(for:)(v11, v9, v8);
  }
}

uint64_t sub_1E3C7129C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

    uint64_t v7 = sub_1E3C714A4;
  }
  else
  {
    *(void *)(v6 + 136) = a2;
    *(void *)(v6 + 144) = a1;
    uint64_t v7 = sub_1E3C713D4;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3C713D4()
{
  uint64_t v1 = v0[15];
  (*(void (**)(void, void))(v0[9] + 8))(v0[11], v0[8]);
  sub_1E3C2CBF8(v1);
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v3, v2);
}

uint64_t sub_1E3C714A4()
{
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  sub_1E3E78D20();
  double v5 = v4;
  double v7 = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1E3C7157C;
  return ImageProvider.placeholderData(with:)(v2, v3, v5, v7);
}

uint64_t sub_1E3C7157C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

    double v7 = sub_1E3C71784;
  }
  else
  {
    *(void *)(v6 + 160) = a2;
    *(void *)(v6 + 168) = a1;
    double v7 = sub_1E3C716B4;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3C716B4()
{
  uint64_t v1 = v0[15];
  (*(void (**)(void, void))(v0[9] + 8))(v0[11], v0[8]);
  sub_1E3C2CBF8(v1);
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[21];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v3, v2);
}

uint64_t sub_1E3C71784()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  sub_1E3E7A740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  double v5 = sub_1E3E7A860();
  os_log_type_t v6 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v8 = v0[9];
    uint64_t v7 = v0[10];
    uint64_t v21 = v0[8];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    uint64_t v11 = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
    v0[2] = v11;
    sub_1E3E7DBD0();
    void *v10 = v11;
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v12(v7, v21);
    _os_log_impl(&dword_1E3BC5000, v5, v6, "Episode entity was unable to prepare artwork or placeholder for %@.", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v10, -1, -1);
    MEMORY[0x1E4E79510](v9, -1, -1);
  }
  else
  {
    uint64_t v14 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v15 = v0[8];

    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v12(v13, v15);
  }
  uint64_t v16 = v0[15];
  uint64_t v17 = v0[11];
  uint64_t v18 = v0[8];
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  v12(v17, v18);
  sub_1E3C2CBF8(v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void, unint64_t))v0[1];
  return v19(0, 0xF000000000000000);
}

uint64_t sub_1E3C719E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C71A48(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3C71AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C71B0C(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1E3C71B34(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  os_log_type_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_1E3E7DBD0();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    *uint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t dispatch thunk of Preparable.prepare(asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1E3C19DC4;
  return v9(a1, a2, a3);
}

uint64_t static EnqueueShowForPlaybackIntentImplementation.EnqueueShowError.== infix(_:_:)()
{
  return 1;
}

uint64_t EnqueueShowForPlaybackIntentImplementation.EnqueueShowError.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t EnqueueShowForPlaybackIntentImplementation.EnqueueShowError.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t EnqueueShowForPlaybackIntentImplementation.perform(_:objectGraph:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 64) = a2;
  *(void *)(v2 + 72) = type metadata accessor for PlaybackController.QueueCommand();
  *(void *)(v2 + 80) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25ED8);
  *(void *)(v2 + 88) = swift_task_alloc();
  uint64_t v4 = sub_1E3E790E0();
  *(void *)(v2 + 96) = v4;
  *(void *)(v2 + 104) = *(void *)(v4 - 8);
  *(void *)(v2 + 112) = swift_task_alloc();
  *(_OWORD *)(v2 + 120) = *(_OWORD *)a1;
  *(unsigned char *)(v2 + 224) = *(unsigned char *)(a1 + 16);
  *(void *)(v2 + 136) = *(void *)(a1 + 24);
  *(unsigned char *)(v2 + 225) = *(unsigned char *)(a1 + 32);
  return MEMORY[0x1F4188298](sub_1E3C71EAC, 0, 0);
}

uint64_t sub_1E3C71EAC()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_1E3C1161C(*(id *)(v0 + 120), *(void *)(v0 + 128), *(unsigned char *)(v0 + 224));
  sub_1E3E790C0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1E3C72794(*(void *)(v0 + 88));
    sub_1E3C727F4();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 136);
    unsigned __int8 v7 = *(unsigned char *)(v0 + 225);
    (*(void (**)(void, void, void))(*(void *)(v0 + 104) + 32))(*(void *)(v0 + 112), *(void *)(v0 + 88), *(void *)(v0 + 96));
    *(void *)(v0 + 144) = sub_1E3E7D1A0();
    sub_1E3C72848(v6, v7);
    *(void *)(v0 + 152) = sub_1E3E7D190();
    uint64_t v8 = type metadata accessor for PlaybackController();
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1E3C720A0;
    return MEMORY[0x1F4127FF8](v0 + 56, v8, v8);
  }
}

uint64_t sub_1E3C720A0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1E3E7D130();
  if (v0)
  {
    double v5 = sub_1E3C72484;
  }
  else
  {
    *(void *)(v2 + 176) = v3;
    *(void *)(v2 + 184) = v4;
    double v5 = sub_1E3C72204;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1E3C72204()
{
  uint64_t v1 = *(void **)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 80);
  *(void *)(v0 + 192) = *(void *)(v0 + 56);
  unsigned __int8 v7 = *(unsigned char *)(v0 + 225);
  uint64_t v8 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25EE8) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, v2, v4);
  *(void *)uint64_t v8 = v1;
  *(unsigned char *)(v8 + 8) = v7;
  swift_storeEnumTagMultiPayload();
  *(void *)(v0 + 40) = v6;
  *(void *)(v0 + 48) = &protocol witness table for PlaybackController.QueueCommand;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
  sub_1E3C7285C(v5, (uint64_t)boxed_opaque_existential_1);
  sub_1E3C72848(v1, v7);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v10;
  void *v10 = v0;
  v10[1] = sub_1E3C72354;
  return sub_1E3CD3A50(v0 + 16, 0);
}

uint64_t sub_1E3C72354(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 176);
    uint64_t v6 = *(void *)(v4 + 184);
    unsigned __int8 v7 = sub_1E3C72644;
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
    uint64_t v5 = *(void *)(v4 + 176);
    uint64_t v6 = *(void *)(v4 + 184);
    unsigned __int8 v7 = sub_1E3C72508;
  }
  return MEMORY[0x1F4188298](v7, v5, v6);
}

uint64_t sub_1E3C72484()
{
  uint64_t v1 = *(void **)(v0 + 136);
  unsigned __int8 v2 = *(unsigned char *)(v0 + 225);
  swift_release();
  sub_1E3C5B530(v1, v2);
  *(void *)(v0 + 216) = *(void *)(v0 + 168);
  return MEMORY[0x1F4188298](sub_1E3C726FC, 0, 0);
}

uint64_t sub_1E3C72508()
{
  uint64_t v1 = *(void **)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 80);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 225);
  swift_release();
  swift_release();
  sub_1E3C72960(v2);
  sub_1E3C5B530(v1, v3);
  return MEMORY[0x1F4188298](sub_1E3C725A4, 0, 0);
}

uint64_t sub_1E3C725A4()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1(0);
}

uint64_t sub_1E3C72644()
{
  uint64_t v1 = *(void **)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 80);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 225);
  swift_release();
  swift_release();
  sub_1E3C72960(v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  sub_1E3C5B530(v1, v3);
  *(void *)(v0 + 216) = *(void *)(v0 + 208);
  return MEMORY[0x1F4188298](sub_1E3C726FC, 0, 0);
}

uint64_t sub_1E3C726FC()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1E3C72794(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25ED8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1E3C727F4()
{
  unint64_t result = qword_1EAE25EE0;
  if (!qword_1EAE25EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25EE0);
  }
  return result;
}

id sub_1E3C72848(id result, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return result;
  }
  return result;
}

uint64_t sub_1E3C7285C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaybackController.QueueCommand();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C728C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1E3C17E2C;
  return EnqueueShowForPlaybackIntentImplementation.perform(_:objectGraph:)(a2, a3);
}

uint64_t sub_1E3C72960(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlaybackController.QueueCommand();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1E3C729C0()
{
  unint64_t result = qword_1EAE25EF0;
  if (!qword_1EAE25EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25EF0);
  }
  return result;
}

unint64_t sub_1E3C72A18()
{
  unint64_t result = qword_1EAE25EF8[0];
  if (!qword_1EAE25EF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAE25EF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for EnqueueShowForPlaybackIntentImplementation()
{
  return &type metadata for EnqueueShowForPlaybackIntentImplementation;
}

unsigned char *storeEnumTagSinglePayload for EnqueueShowForPlaybackIntentImplementation.EnqueueShowError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3C72B18);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EnqueueShowForPlaybackIntentImplementation.EnqueueShowError()
{
  return &type metadata for EnqueueShowForPlaybackIntentImplementation.EnqueueShowError;
}

uint64_t sub_1E3C72B50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v26 = a1;
    sub_1E3E7DEB0();
    uint64_t v4 = sub_1E3C7628C(v26);
    int v6 = v5;
    uint64_t v7 = v26 + 64;
    uint64_t v25 = self;
    uint64_t result = self;
    uint64_t v8 = v26;
    id v24 = (id)result;
    uint64_t v9 = 0;
    uint64_t v23 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(v8 + 32))
    {
      unint64_t v11 = (unint64_t)v4 >> 6;
      if ((*(void *)(v7 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(v8 + 36) != v6) {
        goto LABEL_23;
      }
      uint64_t v27 = v9;
      uint64_t v12 = *(void **)(*(void *)(v8 + 48) + 8 * v4);
      uint64_t v13 = *(void *)(*(void *)(v8 + 56) + 8 * v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1E3E89CC0;
      id v15 = v12;
      *(void *)(v14 + 32) = objc_msgSend(v25, sel_predicateForEpisodesDeterminedByLimitSettings_, v13);
      *(void *)(v14 + 40) = objc_msgSend(v25, sel_predicateForAllEpisodesOnPodcast_, v15);
      sub_1E3E7D080();
      sub_1E3C12B10(0, &qword_1EBFDEE38);
      uint64_t v16 = (void *)sub_1E3E7D050();
      swift_bridgeObjectRelease();
      id v17 = objc_msgSend(v24, sel_andPredicateWithSubpredicates_, v16);

      sub_1E3E7DE80();
      sub_1E3E7DEC0();
      sub_1E3E7DED0();
      uint64_t result = sub_1E3E7DE90();
      uint64_t v8 = v26;
      int64_t v10 = 1 << *(unsigned char *)(v26 + 32);
      if (v4 >= v10) {
        goto LABEL_24;
      }
      uint64_t v18 = *(void *)(v7 + 8 * v11);
      if ((v18 & (1 << v4)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(v26 + 36) != v6) {
        goto LABEL_26;
      }
      unint64_t v19 = v18 & (-2 << (v4 & 0x3F));
      if (v19)
      {
        int64_t v10 = __clz(__rbit64(v19)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v20 = v11 + 1;
        unint64_t v21 = (unint64_t)(v10 + 63) >> 6;
        if (v11 + 1 < v21)
        {
          unint64_t v22 = *(void *)(v7 + 8 * v20);
          if (v22)
          {
LABEL_18:
            int64_t v10 = __clz(__rbit64(v22)) + (v20 << 6);
          }
          else
          {
            while (v21 - 2 != v11)
            {
              unint64_t v22 = *(void *)(v26 + 80 + 8 * v11++);
              if (v22)
              {
                unint64_t v20 = v11 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v9 = v27 + 1;
      uint64_t v4 = v10;
      if (v27 + 1 == v23) {
        return v28;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3C72E3C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v11 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1E3CC7594(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1E4E77720](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      id v7 = v6;
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_1E3CC7594(v8 > 1, v9 + 1, 1);
      }
      ++v5;
      *(void *)(v11 + 16) = v9 + 1;
      uint64_t v10 = v11 + 24 * v9;
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = 0;
      *(unsigned char *)(v10 + 48) = 1;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t RestorePurgedEpisodesTipProvider.__allocating_init(asPartOf:)()
{
  uint64_t v0 = swift_allocObject();
  RestorePurgedEpisodesTipProvider.init(asPartOf:)();
  return v0;
}

void *RestorePurgedEpisodesTipProvider.init(asPartOf:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4688);
  uint64_t v40 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5AA0);
  uint64_t v41 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v35 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5C88);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  uint64_t v43 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v36 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5920);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  uint64_t v45 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v37 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1E3E7D560();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[4] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4718);
  swift_allocObject();
  id v17 = (void *)sub_1E3E7A9C0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E7BE20();
  id v18 = objc_msgSend(v46, sel_privateQueueContext);
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4748);
  swift_allocObject();
  v0[2] = sub_1E3E7A9F0();
  v0[5] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4B30);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 24) = 0;
  *(void *)(v19 + 16) = 0;
  v0[6] = v19;
  v0[3] = v17;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4F91E48], v13);
  id v33 = v18;
  sub_1E3E775E0();
  uint64_t v20 = sub_1E3C6EAEC((uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v1[7] = v20;
  id v46 = v17;
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  id v48 = (id)sub_1E3E7D5F0();
  uint64_t v21 = sub_1E3E7D640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
  sub_1E3C10DE8(&qword_1EBFE4710, &qword_1EBFE4718);
  sub_1E3C32D34();
  unint64_t v22 = v34;
  sub_1E3E7AD10();
  sub_1E3C10CE0((uint64_t)v4, (uint64_t *)&unk_1EBFE27A0);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D10);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE4678, (uint64_t *)&unk_1EBFE4688);
  uint64_t v23 = v35;
  uint64_t v24 = v38;
  sub_1E3E7ABF0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v24);
  uint64_t v25 = sub_1E3C10DE8((unint64_t *)&unk_1EBFE5A90, (uint64_t *)&unk_1EBFE5AA0);
  uint64_t v26 = v36;
  uint64_t v27 = (void *)v39;
  sub_1E3E7AB50();
  (*(void (**)(char *, void *))(v41 + 8))(v23, v27);
  swift_allocObject();
  swift_weakInit();
  sub_1E3E775E0();
  id v46 = v27;
  uint64_t v47 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = v42;
  uint64_t v29 = v37;
  sub_1E3E7AB90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v28);
  swift_release();
  sub_1E3C10DE8(&qword_1EBFE5918, &qword_1EBFE5920);
  uint64_t v30 = v44;
  uint64_t v31 = sub_1E3E7AB70();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v30);
  v1[4] = v31;
  swift_release();
  return v1;
}

uint64_t sub_1E3C73728@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  long long v14 = xmmword_1E3E86660;
  if (v3)
  {
    uint64_t v4 = &type metadata for RestorePurgedEpisodesTip;
    unint64_t v5 = sub_1E3C76658();
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    v15[1] = 0;
    v15[2] = 0;
  }
  v15[0] = v3;
  uint64_t v15[3] = v4;
  v15[4] = v5;
  swift_bridgeObjectRetain();
  sub_1E3C76588((uint64_t)v15, (uint64_t)v13);
  sub_1E3C765F0((uint64_t)v13, (uint64_t)&v10);
  if (v11)
  {
    sub_1E3C1B644(&v10, (uint64_t)v12);
    sub_1E3C1B644(v12, (uint64_t)&v10);
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_1E3CB7364(0, v6[2] + 1, 1, v6);
    }
    unint64_t v8 = v6[2];
    unint64_t v7 = v6[3];
    if (v8 >= v7 >> 1) {
      uint64_t v6 = sub_1E3CB7364((void *)(v7 > 1), v8 + 1, 1, v6);
    }
    v6[2] = v8 + 1;
    sub_1E3C1B644(&v10, (uint64_t)&v6[5 * v8 + 4]);
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v10, &qword_1EBFE57B0);
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57B0);
  uint64_t result = swift_arrayDestroy();
  *a2 = v6;
  return result;
}

uint64_t sub_1E3C7389C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3C738D4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(os_unfair_lock_s **)(result + 48);
    uint64_t v2 = v1 + 4;
    uint64_t v3 = v1 + 6;
    os_unfair_lock_lock(v1 + 6);
    sub_1E3C76314(v2);
    os_unfair_lock_unlock(v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3C73958()
{
  return sub_1E3C738D4();
}

Swift::Void __swiftcall RestorePurgedEpisodesTipProvider.requestUpdate()()
{
}

uint64_t sub_1E3C73984()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE46B8);
  uint64_t v37 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  unint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE45F0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  MEMORY[0x1F4188790](v6);
  id v33 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE46E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  uint64_t v41 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v34 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4580);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  uint64_t v43 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v36 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(v0 + 16);
  uint64_t v32 = v0;
  id v45 = v15;
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  sub_1E3E775E0();
  id v44 = (id)sub_1E3E7D5F0();
  uint64_t v16 = sub_1E3E7D640();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v31 = v17 + 56;
  v30(v3, 1, 1, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4748);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE4738, &qword_1EBFE4748);
  v29[1] = sub_1E3C32D34();
  sub_1E3E7AD10();
  sub_1E3C10CE0((uint64_t)v3, (uint64_t *)&unk_1EBFE27A0);

  swift_release();
  id v18 = *(void **)(v0 + 40);
  *(void *)(swift_allocObject() + 16) = v18;
  id v19 = v18;
  sub_1E3E7A940();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE47D0);
  v29[0] = MEMORY[0x1E4F1AAB8];
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE46A8, &qword_1EBFE46B8);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE47C0, &qword_1EBFE47D0);
  uint64_t v20 = v33;
  uint64_t v21 = v35;
  sub_1E3E7ADA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v21);
  id v45 = (id)sub_1E3E7D5F0();
  v30(v3, 1, 1, v16);
  sub_1E3C10DE8(&qword_1EBFE45E8, &qword_1EBFE45F0);
  unint64_t v22 = v34;
  uint64_t v23 = v38;
  sub_1E3E7AD10();
  sub_1E3C10CE0((uint64_t)v3, (uint64_t *)&unk_1EBFE27A0);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v23);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE38E0);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE46D8, &qword_1EBFE46E8);
  uint64_t v24 = v36;
  uint64_t v25 = v40;
  sub_1E3E7ABF0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v25);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE4570, &qword_1EBFE4580);
  sub_1E3E775E0();
  uint64_t v26 = v42;
  uint64_t v27 = sub_1E3E7AD60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v26);
  return v27;
}

uint64_t sub_1E3C73FC8@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE47D0);
  uint64_t v7 = sub_1E3E7D1E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)(swift_allocObject() + 16) = a1;
  id v8 = a1;
  uint64_t result = sub_1E3E7AA60();
  *a2 = result;
  return result;
}

uint64_t sub_1E3C740E0(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  uint64_t v4 = sub_1E3E7A880();
  v2[5] = v4;
  v2[6] = *(void *)(v4 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v2[8] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C741D4;
  return sub_1E3C745A8(a2);
}

uint64_t sub_1E3C741D4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1E3C74368;
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_1E3C742FC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3C742FC()
{
  **(void **)(v0 + 32) = *(void *)(v0 + 80);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C74368()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void **)(v0 + 72);
  sub_1E3E7A840();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v19 = *(void *)(v0 + 40);
    uint64_t v20 = *(void *)(v0 + 56);
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)id v8 = 136315138;
    uint64_t v21 = v9;
    *(void *)(v0 + 16) = v6;
    id v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v11 = sub_1E3E7CD90();
    *(void *)(v0 + 24) = sub_1E3C150B8(v11, v12, &v21);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Failed to fetch purged episodes: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v9, -1, -1);
    MEMORY[0x1E4E79510](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v19);
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 72);
    uint64_t v15 = *(void *)(v0 + 48);
    uint64_t v14 = *(void *)(v0 + 56);
    uint64_t v16 = *(void *)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }

  **(void **)(v0 + 32) = MEMORY[0x1E4FBC860];
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1E3C745A8(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = sub_1E3E7D8E0();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  uint64_t v3 = sub_1E3E77F80();
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v4 = sub_1E3E77F90();
  v1[13] = v4;
  v1[14] = *(void *)(v4 - 8);
  v1[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  v1[16] = swift_task_alloc();
  uint64_t v5 = sub_1E3E77E20();
  v1[17] = v5;
  v1[18] = *(void *)(v5 - 8);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C747CC, 0, 0);
}

uint64_t sub_1E3C747CC()
{
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v33 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  sub_1E3E77F70();
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v7, *MEMORY[0x1E4F27BF0], v9);
  sub_1E3E77E00();
  sub_1E3E77F50();
  id v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 168) = v10;
  *(void *)(v0 + 176) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v33);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v3) == 1)
  {
    sub_1E3C10CE0(*(void *)(v0 + 128), (uint64_t *)&unk_1EBFDEDF0);
    sub_1E3C76464();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 72);
    uint64_t v14 = *(void *)(v0 + 56);
    uint64_t v15 = *(void **)(v0 + 40);
    (*(void (**)(void, void, void))(*(void *)(v0 + 144) + 32))(*(void *)(v0 + 160), *(void *)(v0 + 128), *(void *)(v0 + 136));
    *(void *)(v0 + 184) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1E3E89CC0;
    *(void *)(v16 + 32) = objc_msgSend(self, sel_predicateForDownloadBehavior_, 5);
    sub_1E3E7CD30();
    uint64_t v17 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    id v18 = (void *)sub_1E3E77DD0();
    id v19 = objc_msgSend(self, sel_predicateForDateKey_isGreaterThanDate_, v17, v18);

    *(void *)(v16 + 40) = v19;
    sub_1E3E7D080();
    *(void *)(v0 + 192) = sub_1E3C12B10(0, &qword_1EBFDEE38);
    uint64_t v20 = (void *)sub_1E3E7D050();
    swift_bridgeObjectRelease();
    uint64_t v21 = self;
    *(void *)(v0 + 200) = v21;
    id v22 = objc_msgSend(v21, sel_andPredicateWithSubpredicates_, v20);
    *(void *)(v0 + 208) = v22;

    *(void *)(v0 + 216) = *MEMORY[0x1E4F92028];
    sub_1E3E7CD30();
    id v23 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
    uint64_t v24 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(v23, sel_initWithEntityName_, v24);
    *(void *)(v0 + 224) = v25;

    objc_msgSend(v25, sel_setPredicate_, v22);
    uint64_t v26 = swift_allocObject();
    *(void *)(v0 + 232) = v26;
    *(void *)(v26 + 16) = v15;
    *(void *)(v26 + 24) = v25;
    *(_DWORD *)(v0 + 320) = *MEMORY[0x1E4F1BD78];
    uint64_t v27 = *(void (**)(uint64_t))(v14 + 104);
    *(void *)(v0 + 240) = v27;
    *(void *)(v0 + 248) = (v14 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v27(v13);
    id v28 = v15;
    id v29 = v25;
    uint64_t v30 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v30;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE49F0);
    *uint64_t v30 = v0;
    v30[1] = sub_1E3C74C90;
    uint64_t v32 = *(void *)(v0 + 72);
    return MEMORY[0x1F40D7080](v0 + 16, v32, sub_1E3C764F8, v26, v31);
  }
}

uint64_t sub_1E3C74C90()
{
  uint64_t v2 = (void *)*v1;
  v2[33] = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[9];
  uint64_t v4 = v2[7];
  uint64_t v5 = v2[6];
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v6 = v4 + 8;
  uint64_t v7 = v8;
  if (v0)
  {
    v7(v3, v5);
    swift_release();
    uint64_t v9 = sub_1E3C753DC;
  }
  else
  {
    v2[34] = v7;
    v2[35] = v6 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v7(v3, v5);
    swift_release();
    uint64_t v9 = sub_1E3C74E3C;
  }
  return MEMORY[0x1F4188298](v9, 0, 0);
}

uint64_t sub_1E3C74E3C()
{
  uint64_t v1 = *(void *)(v0 + 208);
  unint64_t v2 = sub_1E3C72B50(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();
  sub_1E3E7CD30();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v4 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);
  *(void *)(v0 + 288) = v5;

  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1E3E89CC0;
  *(void *)(v6 + 32) = v1;
  id v7 = *(id *)(v0 + 208);
  swift_bridgeObjectRetain();
  if (v2 >> 62)
  {
    sub_1E3E7DF90();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1E3E7E190();
  }
  uint64_t v24 = *(void (**)(uint64_t, void, uint64_t))(v0 + 240);
  unsigned int v23 = *(_DWORD *)(v0 + 320);
  uint64_t v8 = *(void **)(v0 + 200);
  uint64_t v9 = *(void *)(v0 + 64);
  id v10 = *(void **)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 48);
  swift_bridgeObjectRelease();
  unint64_t v12 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v8, sel_orPredicateWithSubpredicates_, v12);

  *(void *)(v6 + 40) = v13;
  sub_1E3E7D080();
  uint64_t v14 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v8, sel_andPredicateWithSubpredicates_, v14);

  objc_msgSend(v5, sel_setPredicate_, v15);
  objc_msgSend(v5, sel_setResultType_, 1);
  uint64_t v16 = swift_allocObject();
  *(void *)(v0 + 296) = v16;
  *(void *)(v16 + 16) = v10;
  *(void *)(v16 + 24) = v5;
  v24(v9, v23, v11);
  id v17 = v10;
  id v18 = v5;
  id v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4A30);
  *id v19 = v0;
  v19[1] = sub_1E3C7514C;
  uint64_t v21 = *(void *)(v0 + 64);
  return MEMORY[0x1F40D7080](v0 + 32, v21, sub_1E3C76514, v16, v20);
}

uint64_t sub_1E3C7514C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 272))(*(void *)(v2 + 64), *(void *)(v2 + 48));
  swift_release();
  if (v0) {
    id v3 = sub_1E3C754BC;
  }
  else {
    id v3 = sub_1E3C752D8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1E3C752D8()
{
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v2 = *(void **)(v0 + 208);
  id v3 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 136);

  v3(v4, v5);
  uint64_t v6 = *(void *)(v0 + 32);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v6);
}

uint64_t sub_1E3C753DC()
{
  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 136);

  v2(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1E3C754BC()
{
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v2 = *(void **)(v0 + 208);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 136);

  v3(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1E3C755A4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4A30);
  sub_1E3C10DE8(&qword_1EBFE4A40, (uint64_t *)&unk_1EBFE4A30);
  uint64_t result = sub_1E3E7D3C0();
  if (result) {
    uint64_t result = swift_bridgeObjectRetain();
  }
  else {
    uint64_t v3 = 0;
  }
  *a2 = v3;
  return result;
}

void RestorePurgedEpisodesTipProvider.tips.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5A10);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 32))
  {
    v5[1] = *(void *)(v0 + 32);
    sub_1E3E775E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5BD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D00);
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5BC0, &qword_1EBFE5BD0);
    sub_1E3E7ABF0();
    swift_release();
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5A00, &qword_1EBFE5A10);
    sub_1E3E7AB70();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1E3C757E4@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E3E86660;
  *(unsigned char *)(inited + 32) = 5;
  *(void *)(inited + 40) = v3;
  unint64_t v5 = sub_1E3C81150(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57A0);
  uint64_t result = swift_arrayDestroy();
  *a2 = v5;
  return result;
}

Swift::Void __swiftcall RestorePurgedEpisodesTipProvider.requestRefresh()()
{
}

uint64_t RestorePurgedEpisodesTipProvider.deinit()
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return v0;
}

uint64_t RestorePurgedEpisodesTipProvider.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocClassInstance();
}

void sub_1E3C759A0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5A10);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*(void *)v0 + 32))
  {
    v5[1] = *(void *)(*(void *)v0 + 32);
    sub_1E3E775E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5BD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D00);
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5BC0, &qword_1EBFE5BD0);
    sub_1E3E7ABF0();
    swift_release();
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5A00, &qword_1EBFE5A10);
    sub_1E3E7AB70();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1E3C75B4C()
{
  return sub_1E3E7AAA0();
}

uint64_t type metadata accessor for RestorePurgedEpisodesTipProvider()
{
  return self;
}

uint64_t method lookup function for RestorePurgedEpisodesTipProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RestorePurgedEpisodesTipProvider);
}

uint64_t dispatch thunk of RestorePurgedEpisodesTipProvider.__allocating_init(asPartOf:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1E3C75C0C@<X0>(void *a1@<X8>)
{
  sub_1E3C12B10(0, &qword_1EBFDF310);
  uint64_t result = sub_1E3E7D900();
  if (!v1)
  {
    unint64_t v4 = result;
    unint64_t v5 = (void *)sub_1E3C7F1F4(MEMORY[0x1E4FBC860]);
    uint64_t v11 = v5;
    if (v4 >> 62) {
      goto LABEL_12;
    }
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v6; uint64_t v6 = sub_1E3E7DFC0())
    {
      for (uint64_t i = 4; ; ++i)
      {
        id v8 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E4E77720](i - 4, v4) : *(id *)(v4 + 8 * i);
        unint64_t v5 = v8;
        uint64_t v9 = i - 3;
        if (__OFADD__(i - 4, 1)) {
          break;
        }
        id v10 = v8;
        sub_1E3C75D90((uint64_t *)&v11, &v10);

        if (v9 == v6)
        {
          uint64_t result = swift_bridgeObjectRelease_n();
          *a1 = v11;
          return result;
        }
      }
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
    }
    uint64_t result = swift_bridgeObjectRelease_n();
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1E3C75D90(uint64_t *a1, id *a2)
{
  uint64_t v4 = sub_1E3E77D00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E7A880();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *a2;
  id v14 = objc_msgSend(*a2, sel_podcast, v10);
  if (v14)
  {
    id v15 = v14;
    id v16 = objc_msgSend(v14, sel_objectID);
    id v17 = objc_msgSend(v15, sel_episodeLimitResolvedValue);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = *a1;
    *a1 = 0x8000000000000000;
    sub_1E3E67CD8((uint64_t)v17, v16, isUniquelyReferenced_nonNull_native);
    *a1 = v45;

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = v7;
    uint64_t v42 = v5;
    uint64_t v43 = v9;
    sub_1E3E7A840();
    id v20 = v13;
    uint64_t v21 = sub_1E3E7A860();
    os_log_type_t v22 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_t v39 = v21;
      uint64_t v40 = v12;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v45 = v24;
      *(_DWORD *)uint64_t v23 = 136315394;
      id v25 = objc_msgSend(v20, sel_uuid);
      uint64_t v38 = v8;
      if (v25)
      {
        uint64_t v26 = v25;
        uint64_t v27 = sub_1E3E7CD30();
        unint64_t v29 = v28;
      }
      else
      {
        unint64_t v29 = 0xE700000000000000;
        uint64_t v27 = 0x44495555206F4ELL;
      }
      uint64_t v30 = v4;
      uint64_t v31 = v41;
      uint64_t v44 = sub_1E3C150B8(v27, v29, &v45);
      sub_1E3E7DBD0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v41 = (char *)(v23 + 14);
      id v32 = objc_msgSend(v20, sel_objectID);
      id v33 = objc_msgSend(v32, sel_URIRepresentation);

      sub_1E3E77C90();
      sub_1E3C76530();
      uint64_t v34 = sub_1E3E7E0E0();
      unint64_t v36 = v35;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v30);
      uint64_t v44 = sub_1E3C150B8(v34, v36, &v45);
      sub_1E3E7DBD0();

      swift_bridgeObjectRelease();
      os_log_t v37 = v39;
      _os_log_impl(&dword_1E3BC5000, v39, v22, "Unexpectedly found episode without a show: %s | %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v24, -1, -1);
      MEMORY[0x1E4E79510](v23, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v40, v38);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v12, v8);
    }
  }
}

unint64_t sub_1E3C761F4@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE4AD0);
  unint64_t result = sub_1E3E7D900();
  if (!v1)
  {
    uint64_t v4 = sub_1E3C72E3C(result);
    unint64_t result = swift_bridgeObjectRelease();
    *a1 = v4;
  }
  return result;
}

uint64_t sub_1E3C7628C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_1E3C76314(void *result)
{
  if (!*result)
  {
    unint64_t v1 = result;
    unint64_t result = (void *)sub_1E3C73984();
    void *v1 = result;
  }
  return result;
}

uint64_t sub_1E3C7634C()
{
  return swift_deallocObject();
}

uint64_t sub_1E3C76384@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3C73FC8(*(void **)(v1 + 16), a1);
}

uint64_t sub_1E3C7638C()
{
  return sub_1E3E7A9B0();
}

uint64_t sub_1E3C763C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_1E3C19DC4;
  return sub_1E3C740E0(a1, v4);
}

unint64_t sub_1E3C76464()
{
  unint64_t result = qword_1EAE25F28;
  if (!qword_1EAE25F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25F28);
  }
  return result;
}

uint64_t sub_1E3C764B8()
{
  return swift_deallocObject();
}

uint64_t sub_1E3C764F8@<X0>(void *a1@<X8>)
{
  return sub_1E3C75C0C(a1);
}

unint64_t sub_1E3C76514@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3C761F4(a1);
}

unint64_t sub_1E3C76530()
{
  unint64_t result = qword_1EBFE4CB8;
  if (!qword_1EBFE4CB8)
  {
    sub_1E3E77D00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE4CB8);
  }
  return result;
}

uint64_t sub_1E3C76588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C765F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1E3C76658()
{
  unint64_t result = qword_1EAE25F38;
  if (!qword_1EAE25F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25F38);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RestorePurgedEpisodesError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3C76748);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RestorePurgedEpisodesError()
{
  return &type metadata for RestorePurgedEpisodesError;
}

unint64_t sub_1E3C76784()
{
  unint64_t result = qword_1EAE25F40;
  if (!qword_1EAE25F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25F40);
  }
  return result;
}

uint64_t MTPodcastSkipDuration.text.getter(int a1)
{
  sub_1E3E79530();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE6108);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC150];
  *(_OWORD *)(v2 + 16) = xmmword_1E3E86660;
  uint64_t v4 = MEMORY[0x1E4FBC1C0];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(_DWORD *)(v2 + 32) = a1;
  sub_1E3E7CD00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E3C10C8C();
  return sub_1E3E7B3D0();
}

void AnalyzedColor.init(color:)(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  v17[1] = *(double *)MEMORY[0x1E4F143B8];
  id v6 = Color.color.getter((uint64_t)a1, a2);
  double v16 = 0.0;
  v17[0] = 0.0;
  double v15 = 0.0;
  objc_msgSend(v6, sel_getRed_green_blue_alpha_, v17, &v16, &v15, 0);
  double v8 = v16;
  double v7 = v17[0];
  double v9 = v15;
  double v10 = sub_1E3C76BBC(v17[0], v16, v15);
  uint64_t v12 = v11;
  uint64_t v14 = v13;

  sub_1E3C2B7D4(a1, a2);
  *(double *)a3 = v7;
  *(double *)(a3 + 8) = v8;
  *(double *)(a3 + 16) = v9;
  *(double *)(a3 + 24) = v10;
  *(void *)(a3 + 32) = v12;
  *(void *)(a3 + 40) = v14;
  *(_OWORD *)(a3 + 48) = xmmword_1E3E89E40;
  *(void *)(a3 + 64) = 0x405B3883126E978DLL;
}

void __swiftcall AnalyzedColor.init(color:)(PodcastsUI::AnalyzedColor *__return_ptr retstr, UIColor color)
{
  v14[1] = *(double *)MEMORY[0x1E4F143B8];
  double v13 = 0.0;
  v14[0] = 0.0;
  double v12 = 0.0;
  [(objc_class *)color.super.isa getRed:v14 green:&v13 blue:&v12 alpha:0];
  Swift::Double v5 = v13;
  Swift::Double v4 = v14[0];
  Swift::Double v6 = v12;
  double v7 = sub_1E3C76BBC(v14[0], v13, v12);
  Swift::Double v9 = v8;
  Swift::Double v11 = v10;

  retstr->RGB.red = v4;
  retstr->RGB.green = v5;
  retstr->RGB.blue = v6;
  retstr->coordinates.x = v7;
  retstr->coordinates.y = v9;
  retstr->coordinates.z = v11;
  *(_OWORD *)&retstr->referenceX = xmmword_1E3E89E40;
  retstr->referenceZ = 108.883;
}

BOOL AnalyzedColor.isDark.getter()
{
  double v1 = *(double *)(v0 + 32) / *(double *)(v0 + 56);
  if (v1 <= 0.008856) {
    double v2 = v1 * 7.78703704 + 0.137931034;
  }
  else {
    double v2 = pow(v1, 0.333333333);
  }
  return v2 * 116.0 + -16.0 < 50.0;
}

uint64_t AnalyzedColor.suggestedInterfaceStyle.getter()
{
  double v1 = *(double *)(v0 + 32) / *(double *)(v0 + 56);
  if (v1 <= 0.008856) {
    double v2 = v1 * 7.78703704 + 0.137931034;
  }
  else {
    double v2 = pow(v1, 0.333333333);
  }
  if (v2 * 116.0 + -16.0 >= 65.0) {
    return 1;
  }
  else {
    return 2;
  }
}

double sub_1E3C76BBC(double a1, double a2, double a3)
{
  if (a1 > 0.04045)
  {
    double v5 = pow((a1 + 0.055) / 1.055, 2.4);
    if (a2 <= 0.04045) {
      goto LABEL_3;
    }
LABEL_6:
    double v6 = pow((a2 + 0.055) / 1.055, 2.4);
    if (a3 <= 0.04045) {
      goto LABEL_4;
    }
LABEL_7:
    double v7 = pow((a3 + 0.055) / 1.055, 2.4);
    return v5 * 100.0 * 0.412453 + v6 * 100.0 * 0.35758 + v7 * 100.0 * 0.180423;
  }
  double v5 = a1 / 12.95;
  if (a2 > 0.04045) {
    goto LABEL_6;
  }
LABEL_3:
  double v6 = a2 / 12.95;
  if (a3 > 0.04045) {
    goto LABEL_7;
  }
LABEL_4:
  double v7 = a3 / 12.95;
  return v5 * 100.0 * 0.412453 + v6 * 100.0 * 0.35758 + v7 * 100.0 * 0.180423;
}

uint64_t getEnumTagSinglePayload for AnalyzedColor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AnalyzedColor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AnalyzedColor()
{
  return &type metadata for AnalyzedColor;
}

BOOL static TextFieldAlertSheet.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TextFieldAlertSheet.Style.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t TextFieldAlertSheet.Style.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t TextFieldAlertSheet.alertTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_alertTitle);
  swift_bridgeObjectRetain();
  return v1;
}

void TextFieldAlertSheet.style.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_style);
}

double TextFieldAlertSheet.size.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_size);
}

uint64_t TextFieldAlertSheet.__allocating_init(title:style:size:actions:)(uint64_t a1, uint64_t a2, char *a3, unint64_t a4, double a5, double a6)
{
  double v13 = objc_allocWithZone(v6);
  char v14 = *a3;
  double v15 = &v13[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_alertTitle];
  void *v15 = a1;
  v15[1] = a2;
  v13[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_style] = v14;
  double v16 = (double *)&v13[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_size];
  *double v16 = a5;
  v16[1] = a6;
  char v22 = v14;
  id v17 = v13;
  id v18 = sub_1E3C77EAC(&v22);
  id v19 = &v17[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField];
  *id v19 = v18;
  v19[1] = v20;

  return ModalSheet.init(actions:)(a4);
}

uint64_t TextFieldAlertSheet.init(title:style:size:actions:)(uint64_t a1, uint64_t a2, char *a3, unint64_t a4, double a5, double a6)
{
  char v8 = *a3;
  Swift::Double v9 = &v6[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_alertTitle];
  *Swift::Double v9 = a1;
  v9[1] = a2;
  v6[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_style] = v8;
  double v10 = (double *)&v6[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_size];
  double *v10 = a5;
  v10[1] = a6;
  char v16 = v8;
  Swift::Double v11 = v6;
  id v12 = sub_1E3C77EAC(&v16);
  double v13 = &v11[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField];
  *(void *)double v13 = v12;
  *((void *)v13 + 1) = v14;

  return ModalSheet.init(actions:)(a4);
}

uint64_t sub_1E3C76FF0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(void *)(*a2 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField + 8);
  uint64_t ObjectType = swift_getObjectType();
  double v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16);
  swift_bridgeObjectRetain();
  return v6(v2, v3, ObjectType, v4);
}

uint64_t sub_1E3C77078()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
}

uint64_t sub_1E3C770C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, ObjectType, v5);
}

void (*sub_1E3C7712C(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField + 8);
  v3[2] = *(void *)(v1 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField);
  v3[3] = v4;
  v3[4] = swift_getObjectType();
  *uint64_t v3 = (*(uint64_t (**)(void))(v4 + 8))();
  v3[1] = v5;
  return sub_1E3C771BC;
}

void sub_1E3C771BC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v5 = (*a1)[3];
  double v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = (*a1)[4];
  if (a2)
  {
    swift_bridgeObjectRetain();
    v6(v4, v3, v7, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6(**a1, v3, v7, v5);
  }

  free(v2);
}

void sub_1E3C7726C()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_size];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_size + 8];
  uint64_t v3 = (objc_class *)type metadata accessor for SheetView();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  uint64_t v5 = &v4[OBJC_IVAR____TtC10PodcastsUI9SheetView_sizeRestrictions];
  *(void *)uint64_t v5 = v1;
  *((void *)v5 + 1) = v2;
  *((void *)v5 + 2) = v1;
  *((void *)v5 + 3) = v2;
  v7.receiver = v4;
  v7.super_class = v3;
  id v6 = objc_msgSendSuper2(&v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setView_, v6);
}

void sub_1E3C77424()
{
  v39.receiver = v0;
  v39.super_class = (Class)type metadata accessor for TextFieldAlertSheet();
  objc_msgSendSuper2(&v39, sel_viewDidLoad);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v2 = (void *)sub_1E3E7CCF0();
  objc_msgSend(v1, sel_setText_, v2);

  id v3 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
  objc_msgSend(v1, sel_setFont_, v3);

  id v4 = objc_msgSend(v0, sel_view);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_addSubview_, v1);

    id v6 = objc_msgSend(v0, sel_view);
    if (v6)
    {
      objc_super v7 = v6;
      char v8 = *(void **)&v0[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField];
      objc_msgSend(v6, sel_addSubview_, v8);

      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1E3E89EF0;
      id v10 = objc_msgSend(v1, sel_topAnchor);
      id v11 = sub_1E3D7B098();
      id v12 = objc_msgSend(v11, (SEL)&selRef_productURLForStoreCollectionId_storeTrackId_ + 3);

      id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
      *(void *)(v9 + 32) = v13;
      id v14 = objc_msgSend(v1, sel_leadingAnchor);
      id v15 = sub_1E3D7B098();
      id v16 = objc_msgSend(v15, sel_leadingAnchor);

      id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
      *(void *)(v9 + 40) = v17;
      id v18 = objc_msgSend(v1, sel_trailingAnchor);
      id v19 = sub_1E3D7B098();
      id v20 = objc_msgSend(v19, sel_trailingAnchor);

      id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
      *(void *)(v9 + 48) = v21;
      id v22 = objc_msgSend(v8, sel_topAnchor);
      id v23 = objc_msgSend(v1, sel_bottomAnchor);
      id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 4.0);

      *(void *)(v9 + 56) = v24;
      id v25 = objc_msgSend(v8, sel_leadingAnchor);
      id v26 = sub_1E3D7B098();
      id v27 = objc_msgSend(v26, sel_leadingAnchor);

      id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
      *(void *)(v9 + 64) = v28;
      id v29 = objc_msgSend(v8, sel_trailingAnchor);
      id v30 = sub_1E3D7B098();
      id v31 = objc_msgSend(v30, sel_trailingAnchor);

      id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v31);
      *(void *)(v9 + 72) = v32;
      id v33 = objc_msgSend(v8, sel_bottomAnchor);
      id v34 = sub_1E3D7B098();
      id v35 = objc_msgSend(v34, sel_bottomAnchor);

      id v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
      *(void *)(v9 + 80) = v36;
      sub_1E3E7D080();
      os_log_t v37 = self;
      sub_1E3C7801C();
      uint64_t v38 = (void *)sub_1E3E7D050();
      swift_bridgeObjectRelease();
      objc_msgSend(v37, sel_activateConstraints_, v38);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1E3C7791C(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for TextFieldAlertSheet();
  objc_msgSendSuper2(&v6, sel_viewWillAppear_, a1 & 1);
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField + 8];
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(ObjectType, v3);
}

void TextFieldAlertSheet.__allocating_init(actions:)()
{
}

void TextFieldAlertSheet.init(actions:)()
{
}

void sub_1E3C77A80()
{
  swift_bridgeObjectRelease();
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField);
}

id TextFieldAlertSheet.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextFieldAlertSheet();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MacTextView.text.getter()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MacTextView();
  id v1 = objc_msgSendSuper2(&v5, sel_text);
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  uint64_t v3 = sub_1E3E7CD30();

  return v3;
}

void MacTextView.text.setter(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MacTextView();
  objc_msgSendSuper2(&v4, sel_setText_, v3);
}

id sub_1E3C77D84()
{
  objc_msgSend(v0, sel_becomeFirstResponder);

  return objc_msgSend(v0, sel_selectAll_, 0);
}

uint64_t sub_1E3C77DC8()
{
  id v1 = objc_msgSend(v0, sel_text);
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  uint64_t v3 = sub_1E3E7CD30();

  return v3;
}

void sub_1E3C77E30(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = (id)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }
  objc_msgSend(v2, sel_setText_, v3);
}

id sub_1E3C77E9C()
{
  return objc_msgSend(v0, sel_becomeFirstResponder);
}

id sub_1E3C77EAC(unsigned char *a1)
{
  if (*a1 == 1)
  {
    type metadata accessor for MacTextView();
    id v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_super v2 = self;
    id v3 = v1;
    id v4 = objc_msgSend(v2, sel_systemFontOfSize_, 13.0);
    objc_msgSend(v3, sel_setFont_, v4);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D70]), sel_init);
    objc_msgSend(v3, sel_setBorderStyle_, 2);
    id v4 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
    objc_msgSend(v3, sel_setFont_, v4);
  }

  objc_msgSend(v3, sel_sizeToFit);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v3;
}

uint64_t type metadata accessor for TextFieldAlertSheet()
{
  return self;
}

unint64_t sub_1E3C7801C()
{
  unint64_t result = qword_1EBFDF000;
  if (!qword_1EBFDF000)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBFDF000);
  }
  return result;
}

unint64_t sub_1E3C78060()
{
  unint64_t result = qword_1EAE25F70;
  if (!qword_1EAE25F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25F70);
  }
  return result;
}

uint64_t sub_1E3C780B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(*a1 + OBJC_IVAR____TtC10PodcastsUI19TextFieldAlertSheet_inputField + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t method lookup function for TextFieldAlertSheet(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TextFieldAlertSheet);
}

uint64_t dispatch thunk of TextFieldAlertSheet.__allocating_init(title:style:size:actions:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of TextFieldAlertSheet.text.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of TextFieldAlertSheet.text.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of TextFieldAlertSheet.text.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

unsigned char *storeEnumTagSinglePayload for TextFieldAlertSheet.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3C782B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextFieldAlertSheet.Style()
{
  return &type metadata for TextFieldAlertSheet.Style;
}

uint64_t sub_1E3C782F0@<X0>(uint64_t a1@<X8>)
{
  return TipModel.icon.getter(a1);
}

uint64_t TipModel.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1E3E77D00();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_1E3C78374()
{
  return 0;
}

uint64_t TipModel.titleAccessibilityLabel.getter()
{
  return 0;
}

uint64_t TipModel.messageAccessibilityLabel.getter()
{
  return 0;
}

uint64_t _s10PodcastsUI8TipModelPAAE4kindAA0C4KindVvg_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static TipModel.kind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TipModel.icon.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TipModel.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TipModel.titleAccessibilityLabel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TipModel.message.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of TipModel.messageAccessibilityLabel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of TipModel.buttons.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

id VerticallyCenteredView.__allocating_init(wrapping:)(void *a1)
{
  int v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC10PodcastsUI22VerticallyCenteredView_contentView] = a1;
  v9.receiver = v3;
  v9.super_class = v1;
  id v4 = a1;
  id v5 = objc_msgSendSuper2(&v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, sel_addSubview_, v4, v9.receiver, v9.super_class);
  id v6 = v5;
  id v7 = objc_msgSend(v4, sel_backgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  return v6;
}

id VerticallyCenteredView.init(wrapping:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC10PodcastsUI22VerticallyCenteredView_contentView] = a1;
  v9.receiver = v1;
  v9.super_class = ObjectType;
  id v4 = a1;
  id v5 = objc_msgSendSuper2(&v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, sel_addSubview_, v4, v9.receiver, v9.super_class);
  id v6 = v5;
  id v7 = objc_msgSend(v4, sel_backgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  return v6;
}

id VerticallyCenteredView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void VerticallyCenteredView.init(coder:)()
{
}

Swift::Void __swiftcall VerticallyCenteredView.encode(with:)(NSCoder with)
{
}

Swift::Void __swiftcall VerticallyCenteredView.layoutSubviews()()
{
  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_layoutSubviews);
  id v1 = *(void **)&v0[OBJC_IVAR____TtC10PodcastsUI22VerticallyCenteredView_contentView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_sizeThatFits_, v2, v3);
  double v5 = v4;
  objc_msgSend(v0, sel_bounds);
  double v7 = v6;
  objc_msgSend(v0, sel_bounds);
  double v9 = (v8 - v5) * 0.5;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_, v7, v9);
}

id VerticallyCenteredView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void VerticallyCenteredView.init(frame:)()
{
}

id VerticallyCenteredView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VerticallyCenteredView()
{
  return self;
}

uint64_t method lookup function for VerticallyCenteredView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VerticallyCenteredView);
}

uint64_t dispatch thunk of VerticallyCenteredView.__allocating_init(wrapping:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t IgnoreAbandonedDownloadsActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a3;
  v3[8] = a1;
  v3[9] = a2;
  uint64_t v4 = sub_1E3E77E20();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7D8E0();
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  uint64_t v6 = *(void *)(type metadata accessor for IgnoreAbandonedDownloadsAction() - 8);
  v3[17] = v6;
  v3[18] = *(void *)(v6 + 64);
  v3[19] = swift_task_alloc();
  uint64_t v7 = sub_1E3E7D560();
  v3[20] = v7;
  v3[21] = *(void *)(v7 - 8);
  v3[22] = swift_task_alloc();
  uint64_t v8 = sub_1E3E7D1E0();
  v3[23] = v8;
  v3[24] = *(void *)(v8 - 8);
  v3[25] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  objc_super v10 = (void *)swift_task_alloc();
  v3[26] = v10;
  void *v10 = v3;
  v10[1] = sub_1E3C78CE0;
  return MEMORY[0x1F4127FF8](v3 + 7, v9, v9);
}

uint64_t sub_1E3C78CE0()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    objc_super v2 = sub_1E3C797C4;
  }
  else {
    objc_super v2 = sub_1E3C78DF4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C78DF4()
{
  v0[28] = v0[7];
  uint64_t ObjectType = swift_getObjectType();
  sub_1E3C17C5C();
  objc_super v2 = (void *)swift_task_alloc();
  v0[29] = v2;
  *objc_super v2 = v0;
  v2[1] = sub_1E3C78EBC;
  uint64_t v3 = v0[25];
  return MEMORY[0x1F4145A40](v3, ObjectType);
}

uint64_t sub_1E3C78EBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 200);
  uint64_t v3 = *(void *)(*(void *)v1 + 192);
  uint64_t v4 = *(void *)(*(void *)v1 + 184);
  *(void *)(*(void *)v1 + 240) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x1F4188298](sub_1E3C79038, 0, 0);
}

uint64_t sub_1E3C79038()
{
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);
  *(_DWORD *)(v0 + 328) = *MEMORY[0x1E4F91E48];
  uint64_t v4 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 248) = v4;
  *(void *)(v0 + 256) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v4(v1);
  uint64_t v5 = (void *)sub_1E3C6EAEC(v1);
  *(void *)(v0 + 264) = v5;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 272) = v6;
  *(void *)(v0 + 280) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v3);
  sub_1E3E7CE30();
  uint64_t v7 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setBool_forKey_, 1, v7);

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE3050);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1E3C791B0;
  return MEMORY[0x1F4127FF8](v0 + 16, v8, v8);
}

uint64_t sub_1E3C791B0()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C79868;
  }
  else {
    uint64_t v2 = sub_1E3C792C4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C792C4()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[17];
  uint64_t v16 = v0[16];
  uint64_t v3 = v0[15];
  id v14 = (void *)v0[30];
  uint64_t v15 = v0[14];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  sub_1E3C79B50(v4, v1);
  unint64_t v7 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v8 = swift_allocObject();
  v0[38] = v8;
  *(void *)(v8 + 16) = v14;
  sub_1E3C79CB0(v1, v8 + v7);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v16, *MEMORY[0x1E4F1BD78], v15);
  id v9 = v14;
  objc_super v10 = (void *)swift_task_alloc();
  v0[39] = v10;
  void *v10 = v0;
  v10[1] = sub_1E3C79468;
  uint64_t v11 = v0[16];
  uint64_t v12 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F40D7080](v10, v11, sub_1E3C79D14, v8, v12);
}

uint64_t sub_1E3C79468()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 128);
  uint64_t v3 = *(void *)(*(void *)v1 + 120);
  uint64_t v4 = *(void *)(*(void *)v1 + 112);
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1E3C7991C;
  }
  else {
    uint64_t v5 = sub_1E3C795FC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3C795FC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
  uint64_t v15 = *(void **)(v0 + 240);
  uint64_t v16 = *(void **)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v17 = *(void *)(v0 + 64);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 248))(v2, *(unsigned int *)(v0 + 328), v3);
  uint64_t v7 = (void *)sub_1E3C6EAEC(v2);
  v1(v2, v3);
  sub_1E3E77E00();
  sub_1E3E77D80();
  double v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  id v10 = (id)*MEMORY[0x1E4F92020];
  objc_msgSend(v7, sel_setDouble_forKey_, v10, v9);

  uint64_t v11 = *MEMORY[0x1E4F711E8];
  uint64_t v12 = sub_1E3E7BD40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v17, v11, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1E3C797C4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C79868()
{
  uint64_t v1 = *(void **)(v0 + 264);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3C7991C()
{
  uint64_t v1 = *(void **)(v0 + 264);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

unint64_t sub_1E3C799D0(void *a1)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t result = sub_1E3E7D8D0();
  if (!v1)
  {
    unint64_t v4 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1E3E7DFC0();
      swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v5)
      {
LABEL_4:
        if (v5 < 1) {
          __break(1u);
        }
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)MEMORY[0x1E4E77720](i, v4);
          }
          else {
            id v7 = *(id *)(v4 + 8 * i + 32);
          }
          double v8 = v7;
          objc_msgSend(v7, sel_setDownloadBehavior_, 2);
        }
      }
    }
    swift_bridgeObjectRelease();
    v10[0] = 0;
    if (objc_msgSend(a1, sel_save_, v10))
    {
      return (unint64_t)v10[0];
    }
    else
    {
      id v9 = v10[0];
      sub_1E3E77B30();

      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1E3C79B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IgnoreAbandonedDownloadsAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C79BB4()
{
  uint64_t v1 = (int *)(type metadata accessor for IgnoreAbandonedDownloadsAction() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + v1[7];
  uint64_t v4 = sub_1E3E7BD30();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_1E3C79CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IgnoreAbandonedDownloadsAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1E3C79D14()
{
  type metadata accessor for IgnoreAbandonedDownloadsAction();
  return sub_1E3C799D0(*(void **)(v0 + 16));
}

unint64_t sub_1E3C79D88()
{
  unint64_t result = qword_1EAE25F88;
  if (!qword_1EAE25F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25F88);
  }
  return result;
}

uint64_t sub_1E3C79DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_1E3C19DC4;
  return IgnoreAbandonedDownloadsActionImplementation.perform(_:asPartOf:)(a1, a2, a3);
}

unint64_t sub_1E3C79E90()
{
  unint64_t result = qword_1EAE25F98;
  if (!qword_1EAE25F98)
  {
    type metadata accessor for IgnoreAbandonedDownloadsAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25F98);
  }
  return result;
}

uint64_t sub_1E3C79EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1E3C79F4C();

  return MEMORY[0x1F4128AC0](a1, a2, a3, v6);
}

ValueMetadata *type metadata accessor for IgnoreAbandonedDownloadsActionImplementation()
{
  return &type metadata for IgnoreAbandonedDownloadsActionImplementation;
}

unint64_t sub_1E3C79F4C()
{
  unint64_t result = qword_1EAE25FA0;
  if (!qword_1EAE25FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25FA0);
  }
  return result;
}

uint64_t CategoryObserverProvider.init(asPartOf:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E7BE20();
  id v0 = objc_msgSend(v3, sel_privateQueueContext);
  uint64_t v1 = sub_1E3E79EA0();
  swift_unknownObjectRelease();

  swift_release();
  return v1;
}

void *sub_1E3C7A040(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t);

  uint64_t v18 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = *(void *)(sub_1E3E78440() - 8);
  uint64_t v7 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v15 = *(void *)(v6 + 72);
  swift_bridgeObjectRetain();
  double v8 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    v18(&v16, v7);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    uint64_t v10 = v17;
    if (v17)
    {
      uint64_t v11 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v8 = sub_1E3CB7240(0, v8[2] + 1, 1, v8);
      }
      unint64_t v13 = v8[2];
      unint64_t v12 = v8[3];
      if (v13 >= v12 >> 1) {
        double v8 = sub_1E3CB7240((void *)(v12 > 1), v13 + 1, 1, v8);
      }
      id v8[2] = v13 + 1;
      uint64_t v9 = &v8[2 * v13];
      void v9[4] = v11;
      v9[5] = v10;
    }
    v7 += v15;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t PlaybackIntent.generateMPCIntent(for:)(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = sub_1E3E78440();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_1E3E78500();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v4 = sub_1E3E790E0();
  v1[11] = v4;
  v1[12] = *(void *)(v4 - 8);
  v1[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25FB8);
  v1[14] = swift_task_alloc();
  uint64_t v5 = sub_1E3E784E0();
  v1[15] = v5;
  v1[16] = *(void *)(v5 - 8);
  v1[17] = swift_task_alloc();
  uint64_t v6 = sub_1E3E784B0();
  v1[18] = v6;
  v1[19] = *(void *)(v6 - 8);
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  sub_1E3E78460();
  v1[22] = swift_task_alloc();
  uint64_t v7 = sub_1E3E7A880();
  v1[23] = v7;
  v1[24] = *(void *)(v7 - 8);
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  uint64_t v8 = sub_1E3E78FF0();
  v1[30] = v8;
  v1[31] = *(void *)(v8 - 8);
  v1[32] = swift_task_alloc();
  uint64_t v9 = swift_task_alloc();
  v1[33] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v1[34] = v10;
  void *v10 = v1;
  v10[1] = sub_1E3C7A5F4;
  return MEMORY[0x1F4144C48](v9);
}

uint64_t sub_1E3C7A5F4()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C7C21C;
  }
  else {
    uint64_t v2 = sub_1E3C7A734;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C7A734()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_playerPath);
  unsigned int v2 = objc_msgSend(v1, sel_isLocal);

  if (v2)
  {
    sub_1E3E7A7B0();
    uint64_t v3 = sub_1E3E7A860();
    os_log_type_t v4 = sub_1E3E7D4C0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_1E3BC5000, v3, v4, "Creating a local playback intent", v5, 2u);
      MEMORY[0x1E4E79510](v5, -1, -1);
    }
    uint64_t v6 = *(void *)(v0 + 280);
    uint64_t v7 = *(void *)(v0 + 232);
    uint64_t v8 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 192);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    id v10 = sub_1E3C7C77C();
    (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 240));
    if (!v6)
    {
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v11 = *(uint64_t (**)(id))(v0 + 8);
      return v11(v10);
    }
    goto LABEL_12;
  }
  if (sub_1E3E78EF0())
  {
    sub_1E3E7A7B0();
    unint64_t v13 = sub_1E3E7A860();
    os_log_type_t v14 = sub_1E3E7D500();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1E3BC5000, v13, v14, "Intent requires local playback with buffered AirPlay", v15, 2u);
      MEMORY[0x1E4E79510](v15, -1, -1);
    }
    uint64_t v16 = *(void *)(v0 + 264);
    uint64_t v17 = *(void *)(v0 + 240);
    uint64_t v18 = *(void *)(v0 + 248);
    uint64_t v20 = *(void *)(v0 + 192);
    uint64_t v19 = *(void *)(v0 + 200);
    uint64_t v21 = *(void *)(v0 + 184);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    uint64_t v22 = sub_1E3E78F50();
    sub_1E3C7CD04(&qword_1EAE25FC8, MEMORY[0x1E4F91828]);
    swift_allocError();
    uint64_t v24 = v23;
    uint64_t v25 = v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE25FD0) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v24, v16, v17);
    sub_1E3E78F30();
    uint64_t v26 = *MEMORY[0x1E4F91840];
    uint64_t v27 = sub_1E3E78F60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x1E4F917F8], v22);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
  sub_1E3E7A7B0();
  id v29 = sub_1E3E7A860();
  os_log_type_t v30 = sub_1E3E7D500();
  if (os_log_type_enabled(v29, v30))
  {
    id v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v31 = 0;
    _os_log_impl(&dword_1E3BC5000, v29, v30, "Sending a remote playback intent", v31, 2u);
    MEMORY[0x1E4E79510](v31, -1, -1);
  }
  uint64_t v32 = *(void *)(v0 + 256);
  uint64_t v42 = *(void *)(v0 + 264);
  uint64_t v33 = *(void *)(v0 + 240);
  uint64_t v34 = *(void *)(v0 + 248);
  uint64_t v35 = *(void *)(v0 + 224);
  uint64_t v37 = *(void *)(v0 + 184);
  uint64_t v36 = *(void *)(v0 + 192);

  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  *(void *)(v0 + 288) = v38;
  *(void *)(v0 + 296) = (v36 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v38(v35, v37);
  sub_1E3E78450();
  sub_1E3E78510();
  swift_allocObject();
  *(void *)(v0 + 304) = sub_1E3E784D0();
  objc_super v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  *(void *)(v0 + 312) = v39;
  *(void *)(v0 + 320) = (v34 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v39(v32, v42, v33);
  sub_1E3E78490();
  uint64_t v40 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v40;
  *uint64_t v40 = v0;
  v40[1] = sub_1E3C7AE44;
  uint64_t v41 = *(void *)(v0 + 160);
  return MEMORY[0x1F4144708](v41);
}

uint64_t sub_1E3C7AE44()
{
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  if (v0) {
    unsigned int v2 = sub_1E3C7C384;
  }
  else {
    unsigned int v2 = sub_1E3C7AF84;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C7AF84()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  sub_1E3E784A0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[33];
    uint64_t v5 = v0[30];
    uint64_t v6 = v0[31];
    uint64_t v7 = (void *)v0[21];
    id v53 = (id)v0[20];
    uint64_t v9 = v0[18];
    uint64_t v8 = v0[19];
    sub_1E3C7C71C(v0[14]);
    uint64_t v10 = sub_1E3E784C0();
    sub_1E3C7CD04(&qword_1EAE25FC0, MEMORY[0x1E4F91598]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v11, *MEMORY[0x1E4F91590], v10);
    swift_willThrow();
    swift_release();
    uint64_t v12 = *(void (**)(id, uint64_t))(v8 + 8);
    v12(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v12(v53, v9);
LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    objc_super v39 = (uint64_t (*)(void))v0[1];
    return v39();
  }
  uint64_t v14 = v0[12];
  uint64_t v13 = v0[13];
  uint64_t v15 = v0[11];
  (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[14], v0[15]);
  sub_1E3E78FC0();
  int v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 88))(v13, v15);
  if (v16 == *MEMORY[0x1E4F918E0]) {
    goto LABEL_6;
  }
  if (v16 != *MEMORY[0x1E4F918F0])
  {
    if (v16 == *MEMORY[0x1E4F918C0]
      || v16 == *MEMORY[0x1E4F918B8]
      || v16 == *MEMORY[0x1E4F918E8]
      || v16 == *MEMORY[0x1E4F918F8]
      || v16 == *MEMORY[0x1E4F918B0])
    {
      goto LABEL_24;
    }
    if (v16 == *MEMORY[0x1E4F918C8]) {
      goto LABEL_5;
    }
    if (v16 != *MEMORY[0x1E4F918D8] && v16 != *MEMORY[0x1E4F918D0]) {
LABEL_24:
    }
      (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    sub_1E3E7A7B0();
    uint64_t v40 = sub_1E3E7A860();
    os_log_type_t v41 = sub_1E3E7D500();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl(&dword_1E3BC5000, v40, v41, "Fetching from PML for remote playback", v42, 2u);
      MEMORY[0x1E4E79510](v42, -1, -1);
    }
    uint64_t v43 = (void (*)(uint64_t, uint64_t))v0[36];
    uint64_t v44 = v0[27];
    uint64_t v45 = v0[23];

    v43(v44, v45);
    id v46 = (void *)swift_task_alloc();
    v0[43] = v46;
    void *v46 = v0;
    v46[1] = sub_1E3C7B810;
    uint64_t v47 = v0[17];
    uint64_t v48 = v0[10];
    return MEMORY[0x1F4144700](v48, v47);
  }
LABEL_5:
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
LABEL_6:
  sub_1E3E7A7B0();
  uint64_t v17 = sub_1E3E7A860();
  os_log_type_t v18 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_1E3BC5000, v17, v18, "We already have a remote compatible id, no PML needed", v19, 2u);
    MEMORY[0x1E4E79510](v19, -1, -1);
  }
  uint64_t v20 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v21 = v0[26];
  uint64_t v22 = v0[23];

  v20(v21, v22);
  sub_1E3E78F80();
  id v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F76E80]), sel_init);
  objc_msgSend(v54, sel_setTracklistSource_, 500);
  uint64_t v23 = self;
  uint64_t v24 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  v0[2] = 0;
  id v25 = objc_msgSend(v23, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v24, 0, v0 + 2);

  uint64_t v26 = (void *)v0[2];
  uint64_t v27 = v0[31];
  uint64_t v50 = v0[30];
  uint64_t v51 = v0[33];
  uint64_t v49 = v0[21];
  uint64_t v28 = v0[19];
  uint64_t v52 = v0[20];
  uint64_t v30 = v0[17];
  uint64_t v29 = v0[18];
  uint64_t v31 = v0[15];
  uint64_t v32 = v0[16];
  if (!v25)
  {
    id v37 = v26;
    sub_1E3E77B30();

    swift_willThrow();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v38(v49, v29);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v51, v50);
    v38(v52, v29);
    goto LABEL_13;
  }
  id v33 = v26;
  objc_msgSend(v54, sel_setTracklistToken_, v25);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v34(v49, v29);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v51, v50);
  v34(v52, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(id))v0[1];
  return v35(v54);
}

uint64_t sub_1E3C7B810()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C7C534;
  }
  else {
    uint64_t v2 = sub_1E3C7B950;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C7B950()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void **)(v0 + 24);
  uint64_t v5 = sub_1E3E784F0();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  id v6 = objc_msgSend(v4, sel_playerPath);
  id v7 = objc_msgSend(v6, sel_route);

  if (!v7 || (unsigned __int8 v8 = objc_msgSend(v7, sel_isHomePodRoute), v7, (v8 & 1) == 0))
  {
    id v9 = objc_msgSend(*(id *)(v0 + 24), sel_playerPath);
    id v10 = objc_msgSend(v9, sel_route);

    if (v10)
    {
      objc_msgSend(v10, sel_isAppleTVRoute);
    }
  }
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v71 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  if (v12)
  {
    unint64_t v13 = 0;
    uint64_t v14 = *(void *)(v0 + 40);
    uint64_t v57 = v12;
    uint64_t v66 = (void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32);
    uint64_t v61 = v5;
    uint64_t v63 = v0;
    do
    {
      if (v13 >= *(void *)(v5 + 16)) {
        __break(1u);
      }
      unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v16 = *(void *)(v14 + 72);
      (*(void (**)(void, unint64_t, void))(v14 + 16))(*(void *)(v0 + 56), v5 + v15 + v16 * v13, *(void *)(v0 + 32));
      if (sub_1E3E78410())
      {
        uint64_t v17 = *v66;
        (*v66)(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 32));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1E3CC7624(0, *(void *)(v11 + 16) + 1, 1);
          uint64_t v11 = v71;
        }
        unint64_t v19 = *(void *)(v11 + 16);
        unint64_t v18 = *(void *)(v11 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1E3CC7624(v18 > 1, v19 + 1, 1);
          uint64_t v11 = v71;
        }
        uint64_t v0 = v63;
        uint64_t v20 = *(void *)(v63 + 48);
        uint64_t v21 = *(void *)(v63 + 32);
        *(void *)(v11 + 16) = v19 + 1;
        v17(v11 + v15 + v19 * v16, v20, v21);
        uint64_t v71 = v11;
        uint64_t v5 = v61;
        uint64_t v12 = v57;
      }
      else
      {
        (*(void (**)(void, void))(v14 + 8))(*(void *)(v0 + 56), *(void *)(v0 + 32));
      }
      ++v13;
    }
    while (v12 != v13);
  }
  swift_bridgeObjectRelease();
  unint64_t v22 = *(void *)(v11 + 16);
  unint64_t v23 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  uint64_t v24 = v22 - v23;
  if (v22 < v23)
  {
    uint64_t v25 = *(void *)(v0 + 264);
    uint64_t v26 = *(void *)(v0 + 248);
    uint64_t v55 = *(void *)(v0 + 240);
    uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 312);
    uint64_t v27 = *(void *)(v0 + 152);
    uint64_t v67 = *(void *)(v0 + 168);
    id v69 = *(id *)(v0 + 160);
    uint64_t v64 = *(void *)(v0 + 144);
    uint64_t v28 = *(void *)(v0 + 128);
    uint64_t v58 = *(void *)(v0 + 120);
    uint64_t v59 = *(void *)(v0 + 136);
    swift_release();
    uint64_t v29 = sub_1E3E78F50();
    sub_1E3C7CD04(&qword_1EAE25FC8, MEMORY[0x1E4F91828]);
    swift_allocError();
    uint64_t v31 = v30;
    uint64_t v32 = v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE25FD0) + 48);
    v56(v31, v25, v55);
    uint64_t v33 = sub_1E3E78F60();
    uint64_t v34 = (unsigned int *)MEMORY[0x1E4F91848];
    if (v24 <= 1) {
      uint64_t v34 = (unsigned int *)MEMORY[0x1E4F91838];
    }
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v33 - 8) + 104))(v32, *v34, v33);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x1E4F917F8], v29);
    swift_willThrow();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v59, v58);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v35(v67, v64);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v55);
    v35((uint64_t)v69, v64);
    goto LABEL_25;
  }
  uint64_t v36 = *(void *)(v0 + 160);
  uint64_t v37 = swift_task_alloc();
  *(void *)(v37 + 16) = v36;
  sub_1E3C7A040((void (*)(uint64_t *__return_ptr, uint64_t))sub_1E3C7CCE8, v37, v11);
  swift_release();
  swift_task_dealloc();
  id v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F76E80]), sel_init);
  objc_msgSend(v70, sel_setTracklistSource_, 500);
  uint64_t v38 = self;
  objc_super v39 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = 0;
  id v40 = objc_msgSend(v38, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v39, 0, v0 + 16);

  os_log_type_t v41 = *(void **)(v0 + 16);
  uint64_t v42 = *(void *)(v0 + 248);
  uint64_t v62 = *(void *)(v0 + 240);
  uint64_t v65 = *(void *)(v0 + 264);
  uint64_t v60 = *(void *)(v0 + 168);
  uint64_t v43 = *(void *)(v0 + 152);
  uint64_t v68 = *(void *)(v0 + 160);
  uint64_t v45 = *(void *)(v0 + 136);
  uint64_t v44 = *(void *)(v0 + 144);
  uint64_t v46 = *(void *)(v0 + 120);
  uint64_t v47 = *(void *)(v0 + 128);
  if (!v40)
  {
    id v52 = v41;
    sub_1E3E77B30();

    swift_willThrow();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
    id v53 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v53(v60, v44);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v65, v62);
    v53(v68, v44);
LABEL_25:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v54 = *(uint64_t (**)(void))(v0 + 8);
    return v54();
  }
  id v48 = v41;
  objc_msgSend(v70, sel_setTracklistToken_, v40);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  v49(v60, v44);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v65, v62);
  v49(v68, v44);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = *(uint64_t (**)(id))(v0 + 8);
  return v50(v70);
}

uint64_t sub_1E3C7C21C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C7C384()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[31];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[19];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1E3C7C534()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[31];
  uint64_t v4 = v0[21];
  uint64_t v13 = v0[20];
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[19];
  uint64_t v7 = v0[16];
  uint64_t v8 = v0[17];
  uint64_t v9 = v0[15];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  id v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v10(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v10(v13, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1E3C7C71C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25FB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1E3C7C77C()
{
  uint64_t v2 = sub_1E3E78FD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E78F10();
  if (!v0)
  {
    unint64_t v8 = v7;
    if (v7 >> 60 == 15)
    {
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v10 = v6;
      uint64_t v9 = (void *)sub_1E3E77D30();
      sub_1E3C634A4(v10, v8);
    }
    id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F76E80]), sel_init);
    uint64_t v11 = sub_1E3E78FE0();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F91860], v2);
    char v12 = sub_1E3D340B0((uint64_t)v5, v11);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v12) {
      uint64_t v13 = 20;
    }
    else {
      uint64_t v13 = 0;
    }
    objc_msgSend(v1, sel_setActionAfterQueueLoad_, v13);
    objc_msgSend(v1, sel_setTracklistSource_, 500);
    objc_msgSend(v1, sel_setTracklistToken_, v9);
  }
  return v1;
}

uint64_t sub_1E3C7C944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v3 = sub_1E3E784B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E78440();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E3E79770();
  uint64_t v12 = *(void *)(v11 - 8);
  double v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v10, v22, v7, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v23, v3);
  sub_1E3E79760();
  uint64_t v16 = sub_1E3E79710();
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t v20 = v24;
  *uint64_t v24 = v16;
  v20[1] = v18;
  return result;
}

id PlaybackIntent.generateLocalMPCIntent()()
{
  uint64_t v0 = sub_1E3E7A880();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v4 = sub_1E3E78F20();
  id result = 0;
  if ((v4 & 1) == 0)
  {
    sub_1E3E7A7B0();
    uint64_t v6 = sub_1E3E7A860();
    os_log_type_t v7 = sub_1E3E7D4C0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1E3BC5000, v6, v7, "Creating a local playback intent", v8, 2u);
      MEMORY[0x1E4E79510](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return sub_1E3C7C77C();
  }
  return result;
}

uint64_t sub_1E3C7CCE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1E3C7C944(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1E3C7CD04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FetchShowEntitiesIntent.init(contentIDs:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t static FetchShowEntitiesIntent.kind.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t FetchShowEntitiesIntent.contentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1E3C7CD78(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ELL;
  a1[1] = 0x80000001E3E9DF10;
}

ValueMetadata *type metadata accessor for FetchShowEntitiesIntent()
{
  return &type metadata for FetchShowEntitiesIntent;
}

uint64_t XPAccountsMatchFieldsProvider.init(asPartOf:)@<X0>(void *a1@<X8>)
{
  sub_1E3C7CDFC();
  sub_1E3E7BE20();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

unint64_t sub_1E3C7CDFC()
{
  unint64_t result = qword_1EBFE2730;
  if (!qword_1EBFE2730)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBFE2730);
  }
  return result;
}

uint64_t XPAccountsMatchFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(uint64_t a1)
{
  objc_msgSend(*v1, sel_ams_isActiveAccountCombined);
  sub_1E3E789C0();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  MetricsFieldsBuilder.addValue<A>(_:forField:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3C7CEEC(uint64_t a1)
{
  objc_msgSend(*v1, sel_ams_isActiveAccountCombined);
  sub_1E3E789C0();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  MetricsFieldsBuilder.addValue<A>(_:forField:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3C7CF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1E3C19DC4;
  return MEMORY[0x1F41287C0](a1, a2, a3, a4);
}

uint64_t sub_1E3C7D060()
{
  return sub_1E3E7C450();
}

ValueMetadata *type metadata accessor for XPAccountsMatchFieldsProvider()
{
  return &type metadata for XPAccountsMatchFieldsProvider;
}

uint64_t MetricsDataConfiguration.init(topic:includingFields:excludingFields:shouldFlush:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t MetricsDataConfiguration.topic.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsDataConfiguration.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*MetricsDataConfiguration.topic.modify())()
{
  return nullsub_1;
}

uint64_t MetricsDataConfiguration.includingFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MetricsDataConfiguration.includingFields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*MetricsDataConfiguration.includingFields.modify())()
{
  return nullsub_1;
}

uint64_t MetricsDataConfiguration.excludingFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MetricsDataConfiguration.excludingFields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*MetricsDataConfiguration.excludingFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_1E3C7D1C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1E3C7E238;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;

  return sub_1E3C19A6C(v3);
}

uint64_t sub_1E3C7D248(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1E3C7E1F8;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  sub_1E3C19A6C(v3);
  uint64_t result = sub_1E3C1A3C4(v7);
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v5;
  return result;
}

uint64_t MetricsDataConfiguration.shouldFlush.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1E3C19A6C(v1);
  return v1;
}

uint64_t MetricsDataConfiguration.shouldFlush.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1E3C1A3C4(*(void *)(v2 + 32));
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*MetricsDataConfiguration.shouldFlush.modify())()
{
  return nullsub_1;
}

unint64_t sub_1E3C7D370()
{
  uint64_t v0 = sub_1E3E78A10();
  uint64_t v26 = v1;
  uint64_t v27 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4830);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v28 = *(void *)(v3 + 72);
  uint64_t v30 = v2 - 8;
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v24 = 4 * v28;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1E3E8A200;
  unint64_t v5 = v25 + v4;
  uint64_t v21 = *(int *)(v30 + 56);
  sub_1E3E7BFD0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BF8);
  sub_1E3E7C750();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1E3E878F0;
  sub_1E3E7C710();
  sub_1E3E7C720();
  sub_1E3E7C730();
  sub_1E3E7C6E0();
  uint64_t v7 = sub_1E3CA2248(v6);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v5 + v21) = v7;
  uint64_t v22 = *(int *)(v30 + 56);
  sub_1E3E7BF80();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1E3E87930;
  sub_1E3E7C6F0();
  sub_1E3E7C6E0();
  sub_1E3E7C700();
  uint64_t v9 = sub_1E3CA2248(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v5 + v28 + v22) = v9;
  uint64_t v23 = *(int *)(v30 + 56);
  sub_1E3E7BFC0();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1E3E87930;
  sub_1E3E7C6E0();
  sub_1E3E7C700();
  sub_1E3E7C720();
  uint64_t v11 = sub_1E3CA2248(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v5 + 2 * v28 + v23) = v11;
  unint64_t v12 = v5 + 3 * v28;
  uint64_t v29 = *(int *)(v30 + 56);
  sub_1E3E7BF60();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1E3E86660;
  sub_1E3E7C6E0();
  uint64_t v14 = sub_1E3CA2248(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v12 + v29) = v14;
  unint64_t v15 = v5 + v24;
  uint64_t v16 = *(int *)(v30 + 56);
  sub_1E3E7C010();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1E3E86650;
  sub_1E3E7C6E0();
  sub_1E3E7C700();
  uint64_t v18 = sub_1E3CA2248(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v15 + v16) = v18;
  unint64_t v19 = sub_1E3C7EC08(v25);
  unint64_t result = sub_1E3C7EBCC(MEMORY[0x1E4FBC860]);
  *(void *)&xmmword_1EBFE55D0 = v27;
  *((void *)&xmmword_1EBFE55D0 + 1) = v26;
  qword_1EBFE55E0 = v19;
  unk_1EBFE55E8 = result;
  xmmword_1EBFE55F0 = 0uLL;
  return result;
}

uint64_t static MetricsDataConfiguration.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBFE5608 != -1) {
    swift_once();
  }
  long long v2 = xmmword_1EBFE55D0;
  uint64_t v3 = qword_1EBFE55E0;
  uint64_t v4 = unk_1EBFE55E8;
  long long v5 = xmmword_1EBFE55F0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1E3C19A6C(v5);
  *(_OWORD *)a1 = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  return result;
}

unint64_t sub_1E3C7D8C8()
{
  uint64_t v0 = sub_1E3E78A10();
  uint64_t v29 = v1;
  uint64_t v30 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4830);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v35 = *(void *)(*(void *)(v2 - 8) + 72);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1E3E8A200;
  uint64_t v28 = v4;
  unint64_t v5 = v4 + v3;
  sub_1E3E7BFD0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BF8);
  uint64_t v6 = sub_1E3E7C750();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1E3E8A200;
  sub_1E3E7C710();
  sub_1E3E7C720();
  sub_1E3E7C730();
  uint64_t v34 = 3 * v8;
  sub_1E3E7C6E0();
  if (qword_1EBFE4900 != -1) {
    swift_once();
  }
  uint64_t v33 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBFE2D78);
  uint64_t v27 = *(void (**)(unint64_t))(v7 + 16);
  v27(v10 + v9 + 4 * v8);
  if (*(void *)(v10 + 16)) {
    uint64_t v11 = sub_1E3CA2248(v10);
  }
  else {
    uint64_t v11 = MEMORY[0x1E4FBC870];
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v31 = v5;
  uint64_t v32 = v2;
  uint64_t v12 = *(int *)(v2 + 48);
  *(void *)(v5 + v12) = v11;
  sub_1E3E7BF80();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1E3E878F0;
  sub_1E3E7C6F0();
  sub_1E3E7C6E0();
  sub_1E3E7C700();
  ((void (*)(unint64_t, uint64_t, uint64_t))v27)(v13 + v9 + v34, v33, v6);
  uint64_t v14 = sub_1E3CA2248(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v5 + v35 + v12) = v14;
  uint64_t v26 = *(int *)(v32 + 48);
  sub_1E3E7BFC0();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1E3E878F0;
  sub_1E3E7C6E0();
  sub_1E3E7C700();
  sub_1E3E7C720();
  ((void (*)(unint64_t, uint64_t, uint64_t))v27)(v15 + v9 + v34, v33, v6);
  uint64_t v16 = sub_1E3CA2248(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v5 + 2 * v35 + v26) = v16;
  unint64_t v17 = v5 + 3 * v35;
  uint64_t v18 = *(int *)(v32 + 48);
  sub_1E3E7BF60();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1E3E86660;
  sub_1E3E7C6E0();
  uint64_t v20 = sub_1E3CA2248(v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v17 + v18) = v20;
  uint64_t v21 = *(int *)(v32 + 48);
  sub_1E3E7C010();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1E3E86650;
  sub_1E3E7C6E0();
  sub_1E3E7C700();
  uint64_t v23 = sub_1E3CA2248(v22);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v31 + 4 * v35 + v21) = v23;
  unint64_t v24 = sub_1E3C7EC08(v28);
  unint64_t result = sub_1E3C7EBCC(MEMORY[0x1E4FBC860]);
  qword_1EBFE4E80 = v30;
  *(void *)algn_1EBFE4E88 = v29;
  qword_1EBFE4E90 = v24;
  unk_1EBFE4E98 = result;
  qword_1EBFE4EA0 = 0;
  unk_1EBFE4EA8 = 0;
  return result;
}

uint64_t static MetricsDataConfiguration.search.getter@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1EBFE4EB0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EBFE4E80;
  uint64_t v2 = *(void *)algn_1EBFE4E88;
  uint64_t v4 = qword_1EBFE4E90;
  uint64_t v5 = unk_1EBFE4E98;
  uint64_t v6 = qword_1EBFE4EA0;
  uint64_t v7 = unk_1EBFE4EA8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1E3C19A6C(v6);
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return result;
}

uint64_t destroy for MetricsDataConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for MetricsDataConfiguration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v7 = a2 + 4;
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = a2[5];
    a1[4] = v6;
    a1[5] = v8;
    sub_1E3E775E0();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v7;
  }
  return a1;
}

void *assignWithCopy for MetricsDataConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[4];
  if (!a1[4])
  {
    if (v4)
    {
      uint64_t v6 = a2[5];
      a1[4] = v4;
      a1[5] = v6;
      sub_1E3E775E0();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[5];
  a1[4] = v4;
  a1[5] = v5;
  sub_1E3E775E0();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MetricsDataConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsDataConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsDataConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsDataConfiguration()
{
  return &type metadata for MetricsDataConfiguration;
}

uint64_t sub_1E3C7E1C0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C7E1F8(uint64_t a1)
{
  void (*v2)(unsigned __int8 *__return_ptr, uint64_t *);
  unsigned __int8 v4;
  uint64_t v5;

  unint64_t v2 = *(void (**)(unsigned __int8 *__return_ptr, uint64_t *))(v1 + 16);
  uint64_t v5 = a1;
  v2(&v4, &v5);
  return v4;
}

uint64_t sub_1E3C7E238@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t static EnqueueEpisodeForPlaybackIntentImplementation.EnqueueEpisodeError.== infix(_:_:)()
{
  return 1;
}

uint64_t EnqueueEpisodeForPlaybackIntentImplementation.EnqueueEpisodeError.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t EnqueueEpisodeForPlaybackIntentImplementation.EnqueueEpisodeError.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t EnqueueEpisodeForPlaybackIntentImplementation.perform(_:objectGraph:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 64) = a2;
  *(void *)(v2 + 72) = type metadata accessor for PlaybackController.QueueCommand();
  *(void *)(v2 + 80) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25ED8);
  *(void *)(v2 + 88) = swift_task_alloc();
  uint64_t v4 = sub_1E3E790E0();
  *(void *)(v2 + 96) = v4;
  *(void *)(v2 + 104) = *(void *)(v4 - 8);
  *(void *)(v2 + 112) = swift_task_alloc();
  *(_OWORD *)(v2 + 120) = *(_OWORD *)a1;
  *(unsigned char *)(v2 + 224) = *(unsigned char *)(a1 + 16);
  *(void *)(v2 + 136) = *(void *)(a1 + 24);
  *(unsigned char *)(v2 + 225) = *(unsigned char *)(a1 + 32);
  return MEMORY[0x1F4188298](sub_1E3C7E430, 0, 0);
}

uint64_t sub_1E3C7E430()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_1E3C1161C(*(id *)(v0 + 120), *(void *)(v0 + 128), *(unsigned char *)(v0 + 224));
  sub_1E3E790D0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1E3C72794(*(void *)(v0 + 88));
    sub_1E3C7E624();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 136);
    unsigned __int8 v7 = *(unsigned char *)(v0 + 225);
    (*(void (**)(void, void, void))(*(void *)(v0 + 104) + 32))(*(void *)(v0 + 112), *(void *)(v0 + 88), *(void *)(v0 + 96));
    *(void *)(v0 + 144) = sub_1E3E7D1A0();
    sub_1E3C72848(v6, v7);
    *(void *)(v0 + 152) = sub_1E3E7D190();
    uint64_t v8 = type metadata accessor for PlaybackController();
    unint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v9;
    *unint64_t v9 = v0;
    v9[1] = sub_1E3C720A0;
    return MEMORY[0x1F4127FF8](v0 + 56, v8, v8);
  }
}

unint64_t sub_1E3C7E624()
{
  unint64_t result = qword_1EAE25FE8;
  if (!qword_1EAE25FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25FE8);
  }
  return result;
}

uint64_t sub_1E3C7E678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1E3C17E2C;
  return EnqueueEpisodeForPlaybackIntentImplementation.perform(_:objectGraph:)(a2, a3);
}

unint64_t sub_1E3C7E71C()
{
  unint64_t result = qword_1EAE25FF0;
  if (!qword_1EAE25FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25FF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EnqueueEpisodeForPlaybackIntentImplementation()
{
  return &type metadata for EnqueueEpisodeForPlaybackIntentImplementation;
}

unsigned char *storeEnumTagSinglePayload for EnqueueEpisodeForPlaybackIntentImplementation.EnqueueEpisodeError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3C7E820);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EnqueueEpisodeForPlaybackIntentImplementation.EnqueueEpisodeError()
{
  return &type metadata for EnqueueEpisodeForPlaybackIntentImplementation.EnqueueEpisodeError;
}

id sub_1E3C7E928()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DisplayLinkHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id CADisplayLink.init(handler:)(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (objc_class *)type metadata accessor for DisplayLinkHandler();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = &v5[OBJC_IVAR____TtC10PodcastsUIP33_F2E0E53B2EE06FB9F5D0B47C18CD8DEC18DisplayLinkHandler__handler];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v12.receiver = v5;
  v12.super_class = v4;
  sub_1E3E775E0();
  id v7 = objc_msgSendSuper2(&v12, sel_init);
  id v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_displayLinkWithTarget_selector_, v7, sel_handleDisplayLinkFired_);
  swift_beginAccess();
  id v9 = v8;
  id v10 = v7;
  objc_setAssociatedObject(v9, &unk_1EAE26000, v10, (void *)1);
  swift_endAccess();

  swift_release();
  return v9;
}

uint64_t type metadata accessor for DisplayLinkHandler()
{
  return self;
}

unint64_t sub_1E3C7EA9C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E8);
  uint64_t v2 = sub_1E3E7E000();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v6, (uint64_t)&v13, (uint64_t *)&unk_1EBFE63C0);
    uint64_t v7 = v13;
    unint64_t result = sub_1E3C2E2C0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1E3C1B524(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7EBCC(uint64_t a1)
{
  return sub_1E3C7EC44(a1, (uint64_t *)&unk_1EBFE4820, &qword_1EAE26168, (uint64_t (*)(char *))sub_1E3C30DD8, MEMORY[0x1E4F71328]);
}

unint64_t sub_1E3C7EC08(uint64_t a1)
{
  return sub_1E3C7EC44(a1, &qword_1EBFE4830, &qword_1EBFE4B78, (uint64_t (*)(char *))sub_1E3C2E374, MEMORY[0x1E4F71328]);
}

unint64_t sub_1E3C7EC44(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(void))
{
  uint64_t v29 = a5;
  uint64_t v30 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v12 = sub_1E3E7E000();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = *(int *)(v8 + 48);
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v28[1] = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v9 + 72);
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v18, (uint64_t)v11, a2);
    unint64_t result = v30(v11);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = v13[6];
    uint64_t v24 = v29(0);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v11, v24);
    *(void *)(v13[7] + 8 * v22) = *(void *)&v11[v15];
    uint64_t v25 = v13[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    v13[2] = v27;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7EE44(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDEEA0);
  uint64_t v2 = sub_1E3E7E000();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v6, (uint64_t)v15, &qword_1EBFE2868);
    unint64_t result = sub_1E3C2E448((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1E3C1B524(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7EF88(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2898);
  uint64_t v2 = (void *)sub_1E3E7E000();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1E3E775E0();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1E3C2E48C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    size_t v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7F09C(uint64_t a1)
{
  return sub_1E3C80384(a1, &qword_1EAE25858, &qword_1EAE26180, (uint64_t (*)(void))sub_1E3C2E5D8);
}

unint64_t sub_1E3C7F0C4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2888);
  uint64_t v2 = (void *)sub_1E3E7E000();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1E3E775E0();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1E3C2E48C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    size_t v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7F1E8(uint64_t a1)
{
  return sub_1E3C7F30C(a1, &qword_1EBFE60F8);
}

unint64_t sub_1E3C7F1F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE26170);
  uint64_t v2 = (void *)sub_1E3E7E000();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1E3E775E0();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_1E3C2E7AC((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    size_t v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7F2F4(uint64_t a1)
{
  return sub_1E3C7F30C(a1, &qword_1EBFE28A0);
}

unint64_t sub_1E3C7F300(uint64_t a1)
{
  return sub_1E3C7F30C(a1, &qword_1EBFE28A8);
}

unint64_t sub_1E3C7F30C(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_1E3E7E000();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  sub_1E3E775E0();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    char v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_1E3C2E48C(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7F424(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0798);
  uint64_t v2 = sub_1E3E7E000();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v6, (uint64_t)&v15, &qword_1EBFE06A0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1E3C2E48C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    *char v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_1E3C1B644(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7F568(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28C0);
  uint64_t v2 = (void *)sub_1E3E7E000();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1E3E775E0();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    char v5 = *(unsigned char *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_1E3C2E2C0((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(unsigned char *)(v2[7] + result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    size_t v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7F668(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE28B0);
  uint64_t v2 = sub_1E3E7E000();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v6, (uint64_t)&v15, &qword_1EBFE49F8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1E3C2E48C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1E3C1B524(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7F7A0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE26150);
  uint64_t v2 = (void *)sub_1E3E7E000();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1E3E775E0();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_unknownObjectRetain();
    unint64_t result = sub_1E3C2E8CC((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    size_t v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7F8AC(uint64_t a1)
{
  return sub_1E3C7FF38(a1, &qword_1EBFE42C0, &qword_1EAE260E8, (uint64_t (*)(char *))sub_1E3C2E9D0, MEMORY[0x1E4F917B8]);
}

unint64_t sub_1E3C7F8E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE00C0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE260D8);
  uint64_t v6 = sub_1E3E7E000();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v12, (uint64_t)v5, &qword_1EBFE00C0);
    unint64_t result = sub_1E3C2E91C((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for PreparedArtworkRequest();
    unint64_t result = sub_1E3C816F0((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for PreparedArtworkRequest);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7FAD8(uint64_t a1)
{
  return sub_1E3C7EC44(a1, &qword_1EAE26020, &qword_1EAE26028, (uint64_t (*)(char *))sub_1E3C2EB78, MEMORY[0x1E4F91620]);
}

unint64_t sub_1E3C7FB14(uint64_t a1)
{
  return sub_1E3C80160(a1, &qword_1EAE260B8, &qword_1EAE260C0, (uint64_t (*)(void))sub_1E3C2ECC4);
}

unint64_t sub_1E3C7FB3C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE260A0);
  uint64_t v2 = (void *)sub_1E3E7E000();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1E3E775E0();
  uint64_t v4 = (unsigned char *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 3);
    uint64_t v6 = *((void *)v4 - 2);
    uint64_t v7 = *((void *)v4 - 1);
    char v8 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1E3C2E48C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = v2[7] + 16 * result;
    *(void *)uint64_t v12 = v7;
    *(unsigned char *)(v12 + 8) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    size_t v2[2] = v15;
    v4 += 32;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7FC60(uint64_t a1)
{
  return sub_1E3C7FCB0(a1, &qword_1EAE260A8, &qword_1EAE260B0, (uint64_t (*)(uint64_t))sub_1E3C2ED70);
}

unint64_t sub_1E3C7FC88(uint64_t a1)
{
  return sub_1E3C7FCB0(a1, &qword_1EAE26030, &qword_1EAE26038, (uint64_t (*)(uint64_t))sub_1E3C2ED70);
}

unint64_t sub_1E3C7FCB0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_1E3E7E000();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_1E3C1B524(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    id v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7FDE0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4B68);
  uint64_t v2 = (void *)sub_1E3E7E000();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1E3E775E0();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1E3C2EED8(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    size_t v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C7FEFC(uint64_t a1)
{
  return sub_1E3C7FF38(a1, &qword_1EBFE4858, (uint64_t *)&unk_1EBFE4B80, (uint64_t (*)(char *))sub_1E3C2EF6C, MEMORY[0x1E4F71380]);
}

unint64_t sub_1E3C7FF38(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(void))
{
  uint64_t v29 = a5;
  uint64_t v30 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v12 = sub_1E3E7E000();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = *(int *)(v8 + 48);
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v28[1] = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v9 + 72);
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v18, (uint64_t)v11, a2);
    unint64_t result = v30(v11);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = v13[6];
    uint64_t v24 = v29(0);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v11, v24);
    *(void *)(v13[7] + 8 * v22) = *(void *)&v11[v15];
    uint64_t v25 = v13[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    v13[2] = v27;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C80138(uint64_t a1)
{
  return sub_1E3C80160(a1, &qword_1EAE26078, (uint64_t *)&unk_1EAE26080, (uint64_t (*)(void))sub_1E3C2F040);
}

unint64_t sub_1E3C80160(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v29 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v11 = sub_1E3E7E000();
  uint64_t v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  uint64_t v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = sub_1E3E777D0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    long long v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C8035C(uint64_t a1)
{
  return sub_1E3C80384(a1, &qword_1EAE26050, (uint64_t *)&unk_1EAE26058, (uint64_t (*)(void))sub_1E3C2F0E4);
}

unint64_t sub_1E3C80384(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v29 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v11 = sub_1E3E7E000();
  uint64_t v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  uint64_t v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = sub_1E3E777D0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    long long v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C80580(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4B90);
  uint64_t v2 = sub_1E3E7E000();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v21 = v2 + 64;
  sub_1E3E775E0();
  uint64_t v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v22 = v4;
    uint64_t v6 = *(v5 - 3);
    uint64_t v7 = *(v5 - 2);
    uint64_t v9 = *(v5 - 1);
    uint64_t v8 = *v5;
    uint64_t v11 = v5[1];
    uint64_t v10 = v5[2];
    uint64_t v12 = v5[4];
    uint64_t v13 = v5[6];
    uint64_t v23 = v5[5];
    uint64_t v24 = v5[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1E3C2E48C(v6, v7);
    if (v15) {
      break;
    }
    *(void *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v16 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v16 = v6;
    v16[1] = v7;
    uint64_t v17 = (void *)(v3[7] + (result << 6));
    *uint64_t v17 = v9;
    v17[1] = v8;
    double v17[2] = v11;
    void v17[3] = v10;
    v17[4] = v24;
    v17[5] = v12;
    v17[6] = v23;
    v17[7] = v13;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v5 += 10;
    v3[2] = v20;
    uint64_t v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C806FC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4AC8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BA0);
  uint64_t v6 = sub_1E3E7E000();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v12, (uint64_t)v5, &qword_1EBFE4AC8);
    unint64_t result = sub_1E3C2E504((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1E3E7D560();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C808F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F28);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4B60);
  uint64_t v6 = sub_1E3E7E000();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v12, (uint64_t)v5, &qword_1EBFE2F28);
    unint64_t result = sub_1E3C2F16C((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1E3E77F10();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = sub_1E3E77F90();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, v9, v20);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C80B24(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26040);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26048);
  uint64_t v6 = sub_1E3E7E000();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v12, (uint64_t)v5, &qword_1EAE26040);
    unint64_t result = sub_1E3C2EE04((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1E3E79920();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2D50);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, v9, v20);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3C80D5C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C50);
  uint64_t v2 = (void *)sub_1E3E7E000();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1E3E775E0();
  uint64_t v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    unint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    sub_1E3C8103C(v7, v8);
    unint64_t result = sub_1E3C2E48C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (uint64_t *)(v2[7] + 16 * result);
    *uint64_t v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    size_t v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

Swift::Void __swiftcall UIApplication.completeExtendedLaunchTest(tabName:)(Swift::String tabName)
{
  object = tabName._object;
  uint64_t countAndFlagsBits = tabName._countAndFlagsBits;
  id v4 = objc_msgSend(v1, sel__launchTestName);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2920);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E3E86660;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  sub_1E3E7DD60();
  *(void *)(inited + 96) = v6;
  *(void *)(inited + 72) = countAndFlagsBits;
  *(void *)(inited + 80) = object;
  swift_bridgeObjectRetain();
  sub_1E3C7EE44(inited);
  uint64_t v7 = (void *)sub_1E3E7CB50();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_finishedTest_extraResults_, v4, v7);
}

Swift::Void __swiftcall UIApplication.failExtendedLaunchTest(_:)(Swift::String_optional a1)
{
  object = a1.value._object;
  id v3 = objc_msgSend(v1, sel__launchTestName);
  if (object) {
    uint64_t v4 = sub_1E3E7CCF0();
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = (id)v4;
  objc_msgSend(v1, sel_failedTest_withFailure_, v3);
}

uint64_t sub_1E3C8103C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1E3C14F74(a1, a2);
  }
  return a1;
}

unint64_t sub_1E3C81050(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE260C8);
  id v3 = (void *)sub_1E3E7E000();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_1E3C2E728(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  unint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1E3C2E728(v5);
    unint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1E3C81150(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DC8);
  id v3 = (void *)sub_1E3E7E000();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_1E3C2E740(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  unint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1E3C2E740(v4);
    unint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1E3C81254(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26160);
  id v3 = (void *)sub_1E3E7E000();
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_1E3C2E7FC(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    BOOL v10 = (void *)(v3[7] + 16 * result);
    void *v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    char v14 = v9 + 3;
    uint64_t v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1E3C2E7FC(v4);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1E3C81364(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE26090);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27400);
    char v7 = (void *)sub_1E3E7E000();
    char v8 = (char *)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1E3C34078(v9, (uint64_t)v5, (uint64_t *)&unk_1EAE26090);
      uint64_t v11 = *v5;
      unint64_t result = sub_1E3C2E728(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = sub_1E3E79A70();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v8, v16);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1E3C8152C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26068);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26070);
    char v7 = (void *)sub_1E3E7E000();
    uint64_t v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1E3C34078(v9, (uint64_t)v5, &qword_1EAE26068);
      uint64_t v11 = *v5;
      unint64_t result = sub_1E3C2E728(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = sub_1E3E79380();
      unint64_t result = sub_1E3C816F0(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, MEMORY[0x1E4F919C8]);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

uint64_t sub_1E3C816F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void destroy for FairPlayEpisodeViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 48);
}

uint64_t initializeWithCopy for FairPlayEpisodeViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v4 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for FairPlayEpisodeViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v4 = *(void **)(a1 + 48);
  id v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for FairPlayEpisodeViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  id v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for FairPlayEpisodeViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FairPlayEpisodeViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FairPlayDebugDownloadEpisodeCell()
{
  return &type metadata for FairPlayDebugDownloadEpisodeCell;
}

uint64_t sub_1E3C819B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3C819CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = *(_OWORD *)(a1 + 32);
  long long v5 = *(_OWORD *)a1;
  long long v91 = *(_OWORD *)(a1 + 16);
  long long v92 = v4;
  long long v90 = v5;
  uint64_t v93 = *(void *)(a1 + 48);
  sub_1E3C10C8C();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1E3E7B3D0();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  sub_1E3E7B350();
  uint64_t v11 = sub_1E3E7B3A0();
  uint64_t v68 = v12;
  uint64_t v69 = v11;
  char v59 = v13;
  uint64_t v70 = v14;
  swift_release();
  sub_1E3C82280(v6, v8, v10);
  swift_bridgeObjectRelease();
  uint64_t v81 = *((void *)&v90 + 1);
  uint64_t v82 = v91;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1E3E7B3D0();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_1E3E7B2A0();
  uint64_t v66 = sub_1E3E7B3A0();
  uint64_t v67 = v20;
  uint64_t v76 = v21;
  char v58 = v22;
  swift_release();
  sub_1E3C82280(v15, v17, v19);
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_1E3E7B0D0();
  sub_1E3C81FB8(a1, (uint64_t)&v81);
  uint64_t v63 = v82;
  uint64_t v64 = v81;
  int v74 = v83;
  uint64_t v24 = v85;
  uint64_t v72 = v84;
  char v25 = v86;
  uint64_t v75 = v87;
  uint64_t v65 = v88;
  uint64_t v62 = v89;
  sub_1E3C82290((uint64_t)&v93, (uint64_t)v94);
  sub_1E3C82290((uint64_t)v94, (uint64_t)v95);
  if (v95[0])
  {
    BYTE5(v61[1]) = 0;
    HIWORD(v61[1]) = -5120;
    strcpy((char *)v61, "Expiry Date:");
    uint64_t v26 = sub_1E3E69794();
    if (v27) {
      uint64_t v28 = v26;
    }
    else {
      uint64_t v28 = 0;
    }
    unint64_t v29 = 0xE000000000000000;
    if (v27) {
      unint64_t v29 = v27;
    }
    uint64_t v81 = v28;
    uint64_t v82 = v29;
    uint64_t v30 = sub_1E3E7B3D0();
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v35 = v23;
    uint64_t v37 = v36 & 1;
    LOBYTE(v81) = 0;
    sub_1E3C822F8(0x4420797269707845, 0xEC0000003A657461, 0);
    uint64_t v38 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1E3C822F8(v30, v32, v37);
    swift_bridgeObjectRetain();
    uint64_t v60 = v30;
    uint64_t v77 = v32;
    uint64_t v78 = v37;
    char v39 = v37;
    uint64_t v23 = v35;
    sub_1E3C82280(v30, v32, v39);
    uint64_t v79 = v34;
    swift_bridgeObjectRelease();
    sub_1E3C82280(0x4420797269707845, 0xEC0000003A657461, v81);
    uint64_t v71 = v38;
    swift_bridgeObjectRelease();
    int v73 = 1;
  }
  else
  {
    v61[0] = 0;
    v61[1] = 0;
    uint64_t v71 = 0;
    uint64_t v60 = 0;
    uint64_t v77 = 0;
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    int v73 = 0;
  }
  uint64_t v40 = sub_1E3E7B0D0();
  sub_1E3C820DC(a1, (uint64_t)&v81);
  uint64_t v41 = v81;
  uint64_t v42 = v82;
  uint64_t v55 = v81;
  uint64_t v56 = v82;
  char v43 = v83;
  *(void *)(a2 + 80) = v23;
  *(unsigned char *)(a2 + 120) = v74;
  *(void *)(a2 + 128) = v72;
  *(void *)(a2 + 136) = v24;
  uint64_t v45 = v84;
  uint64_t v44 = v85;
  *(unsigned char *)(a2 + 144) = v25;
  char v46 = v86;
  *(void *)(a2 + 256) = v40;
  *(unsigned char *)(a2 + 72) = 1;
  *(unsigned char *)(a2 + 96) = 1;
  *(unsigned char *)(a2 + 272) = 1;
  *(void *)(a2 + 304) = v45;
  *(void *)(a2 + 312) = v44;
  uint64_t v48 = v87;
  uint64_t v47 = v88;
  *(unsigned char *)(a2 + 320) = v46;
  uint64_t v49 = v89;
  *(void *)a2 = v69;
  *(void *)(a2 + 8) = v68;
  *(unsigned char *)(a2 + 16) = v59 & 1;
  uint64_t v50 = v66;
  *(void *)(a2 + 24) = v70;
  *(void *)(a2 + 32) = v66;
  *(void *)(a2 + 40) = v76;
  *(unsigned char *)(a2 + 48) = v58 & 1;
  *(void *)(a2 + 56) = v67;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 88) = 0;
  uint64_t v51 = v63;
  uint64_t v52 = v64;
  *(void *)(a2 + 104) = v64;
  *(void *)(a2 + 112) = v63;
  *(void *)(a2 + 152) = v75;
  *(void *)(a2 + 160) = v65;
  *(void *)(a2 + 168) = v62;
  *(void *)(a2 + 176) = v61[0];
  *(void *)(a2 + 184) = v61[1];
  *(void *)(a2 + 192) = 0;
  uint64_t v53 = v71;
  *(void *)(a2 + 200) = v71;
  *(void *)(a2 + 208) = v60;
  *(void *)(a2 + 216) = v77;
  *(void *)(a2 + 224) = v78;
  *(void *)(a2 + 232) = v79;
  *(void *)(a2 + 240) = 0;
  *(unsigned char *)(a2 + 248) = v73;
  *(void *)(a2 + 264) = 0;
  *(void *)(a2 + 280) = v41;
  *(void *)(a2 + 288) = v42;
  char v57 = v43;
  *(unsigned char *)(a2 + 296) = v43;
  *(void *)(a2 + 328) = v48;
  *(void *)(a2 + 336) = v47;
  *(void *)(a2 + 344) = v49;
  char v80 = v58 & 1;
  LOBYTE(v81) = v59 & 1;
  sub_1E3C822F8(v69, v68, v59 & 1);
  swift_bridgeObjectRetain();
  sub_1E3C822F8(v50, v76, v58 & 1);
  swift_bridgeObjectRetain();
  sub_1E3C822F8(v52, v51, v74);
  sub_1E3E775E0();
  swift_bridgeObjectRetain();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3C82308(v61[0], v61[1], 0, v53, v60, v77, v78);
  sub_1E3C822F8(v55, v56, v57);
  sub_1E3E775E0();
  swift_bridgeObjectRetain();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3C82280(v55, v56, v57);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1E3C82384(v61[0], v61[1], 0, v71, v60, v77, v78);
  sub_1E3C82280(v64, v63, v74);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1E3C82280(v66, v76, v58 & 1);
  swift_bridgeObjectRelease();
  sub_1E3C82280(v69, v68, v59 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3C81FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 40);
  uint64_t v4 = sub_1E3E7B5C0();
  if (v3) {
    uint64_t v5 = sub_1E3E7B540();
  }
  else {
    uint64_t v5 = sub_1E3E7B520();
  }
  uint64_t v6 = v5;
  uint64_t KeyPath = swift_getKeyPath();
  *(_OWORD *)a2 = xmmword_1E3E8A3D0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = MEMORY[0x1E4FBC860];
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = v4;
  *(void *)(a2 + 56) = KeyPath;
  *(void *)(a2 + 64) = v6;
  sub_1E3C822F8(0x6C66664F20736148, 0xEF79654B20656E69, 0);
  swift_bridgeObjectRetain();
  sub_1E3C82280(0x6C66664F20736148, 0xEF79654B20656E69, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3C820DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 41);
  uint64_t v4 = sub_1E3E7B5C0();
  if (v3) {
    uint64_t v5 = sub_1E3E7B540();
  }
  else {
    uint64_t v5 = sub_1E3E7B520();
  }
  uint64_t v6 = v5;
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)a2 = 0xD000000000000016;
  *(void *)(a2 + 8) = 0x80000001E3E9DFD0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = MEMORY[0x1E4FBC860];
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = v4;
  *(void *)(a2 + 56) = KeyPath;
  *(void *)(a2 + 64) = v6;
  sub_1E3C822F8(0xD000000000000016, 0x80000001E3E9DFD0, 0);
  swift_bridgeObjectRetain();
  sub_1E3C82280(0xD000000000000016, 0x80000001E3E9DFD0, 0);

  return swift_bridgeObjectRelease();
}

void *sub_1E3C821EC@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v6[0] = *(_OWORD *)v1;
  v6[1] = v3;
  v6[2] = *(_OWORD *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v4 = sub_1E3E7B130();
  sub_1E3C819CC((uint64_t)v6, (uint64_t)__src);
  memcpy(&v9[7], __src, 0x160uLL);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  return memcpy((void *)(a1 + 17), v9, 0x167uLL);
}

uint64_t sub_1E3C82280(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1E3C82290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26188);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C822F8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return sub_1E3E775E0();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1E3C82308(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a4)
  {
    char v9 = a7 & 1;
    sub_1E3C822F8(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    sub_1E3C822F8(a5, a6, v9);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1E3C82384(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a4)
  {
    char v9 = a7 & 1;
    sub_1E3C82280(result, a2, a3 & 1);
    swift_bridgeObjectRelease();
    sub_1E3C82280(a5, a6, v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1E3C82400@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3E7AFE0();
  *a1 = result;
  return result;
}

uint64_t sub_1E3C8242C()
{
  return sub_1E3E7AFF0();
}

unint64_t sub_1E3C8245C()
{
  unint64_t result = qword_1EAE26190;
  if (!qword_1EAE26190)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE26198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE26190);
  }
  return result;
}

uint64_t NowPlayingArtworkDataProviding.data(for:at:)(unsigned char *a1, uint64_t a2, uint64_t (**a3)(void, void))
{
  switch(*a1)
  {
    case 1:
      uint64_t result = a3[4](a2, a3);
      break;
    case 2:
      uint64_t result = a3[5](a2, a3);
      break;
    case 3:
      uint64_t result = a3[3](a2, a3);
      break;
    default:
      uint64_t result = a3[6](a2, a3);
      break;
  }
  return result;
}

BOOL NowPlayingArtworkDataProviding.supportsShowPageTall.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C60);
  double v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, double))(a2 + 40))(a1, a2, v5);
  uint64_t v8 = type metadata accessor for NowPlayingArtwork.Data();
  BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) != 1;
  sub_1E3C10CE0((uint64_t)v7, &qword_1EBFE2C60);
  return v9;
}

uint64_t NowPlayingArtworkDataProviding.supportsEpisodeArtwork.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v62 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v64 = (char *)&v58 - v7;
  uint64_t v8 = sub_1E3E77D00();
  uint64_t v65 = *(void *)(v8 - 8);
  uint64_t v66 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v60 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v59 = (uint64_t)&v58 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v61 = (char *)&v58 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v63 = (char *)&v58 - v15;
  uint64_t v16 = sub_1E3E78740();
  MEMORY[0x1F4188790](v16 - 8);
  char v18 = (uint64_t *)((char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for NowPlayingArtwork.Data();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  char v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  char v25 = (char *)&v58 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C60);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v30 = MEMORY[0x1F4188790](v29);
  uint64_t v32 = (char *)&v58 - v31;
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, double))(a2 + 32);
  uint64_t v67 = a1;
  v33(a1, a2, v30);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v34(v32, 1, v19) == 1)
  {
    sub_1E3C10CE0((uint64_t)v32, &qword_1EBFE2C60);
LABEL_7:
    char v37 = 0;
    return v37 & 1;
  }
  sub_1E3C82D3C((uint64_t)v32, (uint64_t)v25);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1E3C82DA0((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
    sub_1E3C82DA0((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
    goto LABEL_7;
  }
  sub_1E3C71AA8((uint64_t)v25, (uint64_t)v18);
  uint64_t v58 = *v18;
  swift_bridgeObjectRetain();
  sub_1E3C82DA0((uint64_t)v18, MEMORY[0x1E4F915F0]);
  sub_1E3C82DA0((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(v67, a2);
  if (v34(v28, 1, v19) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = &qword_1EBFE2C60;
    uint64_t v36 = (uint64_t)v28;
LABEL_15:
    sub_1E3C10CE0(v36, v35);
    char v37 = 1;
    return v37 & 1;
  }
  sub_1E3C82D3C((uint64_t)v28, (uint64_t)v22);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1E3C82DA0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
    sub_1E3C82DA0((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
    swift_bridgeObjectRelease();
    char v37 = 1;
    return v37 & 1;
  }
  sub_1E3C71AA8((uint64_t)v22, (uint64_t)v18);
  swift_bridgeObjectRetain();
  sub_1E3C82DA0((uint64_t)v18, MEMORY[0x1E4F915F0]);
  sub_1E3C82DA0((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
  char v39 = v64;
  sub_1E3E77CD0();
  swift_bridgeObjectRelease();
  uint64_t v41 = v65;
  uint64_t v40 = v66;
  uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
  if (v42(v39, 1, v66) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = &qword_1EBFE6070;
    uint64_t v36 = (uint64_t)v39;
    goto LABEL_15;
  }
  char v43 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v44 = v63;
  v43(v63, v39, v40);
  uint64_t v45 = v62;
  sub_1E3E77CD0();
  char v46 = v45;
  swift_bridgeObjectRelease();
  if (v42(v45, 1, v40) == 1)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v40);
    uint64_t v35 = &qword_1EBFE6070;
    uint64_t v36 = (uint64_t)v45;
    goto LABEL_15;
  }
  uint64_t v47 = v61;
  v43(v61, v46, v40);
  uint64_t v48 = v59;
  sub_1E3D8B184(v59);
  uint64_t v49 = sub_1E3E77C00();
  uint64_t v51 = v50;
  uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
  v52(v48, v40);
  uint64_t v53 = v60;
  sub_1E3D8B184(v60);
  uint64_t v54 = sub_1E3E77C00();
  uint64_t v56 = v55;
  v52(v53, v40);
  if (v49 == v54 && v51 == v56)
  {
    swift_bridgeObjectRelease_n();
    char v37 = 0;
  }
  else
  {
    char v57 = sub_1E3E7E150();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v37 = v57 ^ 1;
  }
  v52((uint64_t)v47, v40);
  v52((uint64_t)v44, v40);
  return v37 & 1;
}

uint64_t sub_1E3C82D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NowPlayingArtwork.Data();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C82DA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

Swift::Bool __swiftcall NowPlayingArtworkDataProviding.shouldShowMetadataArtwork(at:)(Swift::Double at)
{
  uint64_t v4 = v2;
  uint64_t v5 = v1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C60);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = NowPlayingArtworkDataProviding.supportsEpisodeArtwork.getter(v5, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v3, v5);
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v5);
    return 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, Swift::Double))(v4 + 48))(v5, v4, at);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v5);
    uint64_t v16 = type metadata accessor for NowPlayingArtwork.Data();
    Swift::Bool v15 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v9, 1, v16) != 1;
    sub_1E3C10CE0((uint64_t)v9, &qword_1EBFE2C60);
  }
  return v15;
}

uint64_t dispatch thunk of NowPlayingArtworkDataProviding.adamID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NowPlayingArtworkDataProviding.isVideoEpisode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NowPlayingArtworkDataProviding.showArtworkData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NowPlayingArtworkDataProviding.episodeArtworkData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NowPlayingArtworkDataProviding.showPageTallArtworkData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of NowPlayingArtworkDataProviding.chapterArtworkData(at:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t Color.init(_:)(unsigned int a1)
{
  unsigned int v2 = HIBYTE(a1);
  uint64_t v3 = sub_1E3E7B510();
  double v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, double))(v7 + 104))(v6, *MEMORY[0x1E4F3EB10], v4);
  return MEMORY[0x1E4E74EA0](v6, (double)a1 / 255.0, (double)BYTE1(a1) / 255.0, (double)BYTE2(a1) / 255.0, (double)v2 / 255.0);
}

uint64_t Color.init(hexString:opacity:)(double a1)
{
  uint64_t v2 = sub_1E3E7B510();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1E3E7A5C0();
  double v7 = a1 * 255.0;
  if ((~COERCE__INT64(a1 * 255.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 256.0)
  {
    int v8 = result;
    unsigned int v9 = (int)v7;
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F3EB10], v2);
    return MEMORY[0x1E4E74EA0](v5, (double)v8 / 255.0, (double)BYTE1(v8) / 255.0, (double)BYTE2(v8) / 255.0, (double)v9 / 255.0);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1E3C83324()
{
  uint64_t v0 = sub_1E3E79610();
  __swift_allocate_value_buffer(v0, qword_1EAE261A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE261A0);
  sub_1E3C83CB4(&qword_1EAE261C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE261D0);
  sub_1E3C83CF8();
  return sub_1E3E7DCC0();
}

uint64_t static DeviceCapabilitiesEnvironmentKey.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24108 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E79610();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE261A0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static DeviceCapabilitiesEnvironmentKey.defaultValue.setter(uint64_t a1)
{
  if (qword_1EAE24108 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E79610();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE261A0);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static DeviceCapabilitiesEnvironmentKey.defaultValue.modify())()
{
  if (qword_1EAE24108 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1E3E79610();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE261A0);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1E3C83628@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24108 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E79610();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE261A0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1E3C836E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1E3C83CB4(&qword_1EAE261C0);

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.deviceCapabilities.getter()
{
  sub_1E3C837B0();

  return sub_1E3E7B090();
}

unint64_t sub_1E3C837B0()
{
  unint64_t result = qword_1EAE261B8;
  if (!qword_1EAE261B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE261B8);
  }
  return result;
}

uint64_t sub_1E3C83804(uint64_t a1)
{
  uint64_t v2 = sub_1E3E79610();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = MEMORY[0x1F4188790](v6);
  unsigned int v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  sub_1E3C837B0();
  sub_1E3E7B0A0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t EnvironmentValues.deviceCapabilities.setter(uint64_t a1)
{
  uint64_t v2 = sub_1E3E79610();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_1E3C837B0();
  sub_1E3E7B0A0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*EnvironmentValues.deviceCapabilities.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1E3E79610();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  v3[5] = malloc(v6);
  void v3[6] = sub_1E3C837B0();
  sub_1E3E7B090();
  return sub_1E3C83B34;
}

void sub_1E3C83B34(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 16) + 16);
  v4(*(void *)(*(void *)a1 + 32), v3[5], v3[1]);
  uint64_t v5 = (void *)v3[5];
  uint64_t v7 = (void *)v3[3];
  size_t v6 = (void *)v3[4];
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  if (a2)
  {
    v4(v3[3], v3[4], v3[1]);
    sub_1E3E7B0A0();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v6, v8);
    v10(v5, v8);
  }
  else
  {
    sub_1E3E7B0A0();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v6);
  free(v7);

  free(v3);
}

uint64_t sub_1E3C83C60()
{
  return sub_1E3E7B090();
}

ValueMetadata *type metadata accessor for DeviceCapabilitiesEnvironmentKey()
{
  return &type metadata for DeviceCapabilitiesEnvironmentKey;
}

uint64_t sub_1E3C83CB4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E3E79610();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3C83CF8()
{
  unint64_t result = qword_1EAE261D8;
  if (!qword_1EAE261D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE261D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE261D8);
  }
  return result;
}

uint64_t sub_1E3C83D54()
{
  *(void *)(v1 + 32) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  *(void *)(v1 + 40) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C83DE8, v0, 0);
}

uint64_t sub_1E3C83DE8()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(*(void *)v1 + 112);
  v0[6] = v2;
  uint64_t v3 = v1 + v2;
  uint64_t v4 = *(void *)(v1 + v2);
  v0[7] = v4;
  int v5 = *(unsigned __int8 *)(v1 + v2 + 8);
  if (v5)
  {
    if (v5 == 1)
    {
      sub_1E3E775E0();
      swift_task_dealloc();
      size_t v6 = (uint64_t (*)(uint64_t))v0[1];
      return v6(v4);
    }
    uint64_t v14 = v0[5];
    sub_1E3C8CD9C(v1 + qword_1EBFDFFE0, v14);
    uint64_t v16 = *(void *)(v1 + qword_1EBFDFFD8);
    uint64_t v15 = *(void *)(v1 + qword_1EBFDFFD8 + 8);
    uint64_t v17 = (void *)swift_allocObject();
    double v17[2] = 0;
    void v17[3] = 0;
    v17[4] = v16;
    v17[5] = v15;
    sub_1E3E775E0();
    uint64_t v18 = sub_1E3C4C10C(v14, (uint64_t)&unk_1EAE26300, (uint64_t)v17);
    v0[8] = v18;
    *(void *)uint64_t v3 = v18;
    *(unsigned char *)(v3 + 8) = 0;
    sub_1E3E775E0();
    swift_release();
    uint64_t v19 = (void *)swift_task_alloc();
    v0[9] = v19;
    uint64_t v9 = sub_1E3E7C970();
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    *uint64_t v19 = v0;
    v19[1] = sub_1E3C84068;
    uint64_t v11 = MEMORY[0x1E4FBC0F0];
    uint64_t v12 = v0 + 3;
    uint64_t v13 = v18;
  }
  else
  {
    sub_1E3E775E0();
    uint64_t v8 = (void *)swift_task_alloc();
    v0[11] = v8;
    uint64_t v9 = sub_1E3E7C970();
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    *uint64_t v8 = v0;
    v8[1] = sub_1E3C84194;
    uint64_t v11 = MEMORY[0x1E4FBC0F0];
    uint64_t v12 = v0 + 2;
    uint64_t v13 = v4;
  }
  return MEMORY[0x1F4187D90](v12, v13, v9, v10, v11);
}

uint64_t sub_1E3C84068()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_1E3C84360;
  }
  else {
    uint64_t v4 = sub_1E3C842C0;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1E3C84194()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_1E3C84474;
  }
  else {
    uint64_t v4 = sub_1E3C84400;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1E3C842C0()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[4];
  swift_release();
  uint64_t v3 = v2 + v1;
  uint64_t v4 = v0[3];
  *(void *)uint64_t v3 = v4;
  *(unsigned char *)(v3 + 8) = 1;
  sub_1E3E775E0();
  swift_release();
  swift_task_dealloc();
  int v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_1E3C84360()
{
  uint64_t v1 = v0[4] + v0[6];
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 2;
  swift_release();
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1E3C84400()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3C84474()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C844E4(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  int v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1E3C8CF14;
  return v5();
}

uint64_t LazyJSStack.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI11LazyJSStack_bag;
  uint64_t v2 = sub_1E3E7C810();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t LazyJSStack.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI11LazyJSStack_bag;
  uint64_t v2 = sub_1E3E7C810();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t LazyJSStack.dispatcher<A, B>(for:asPartOf:)(uint64_t a1)
{
  size_t v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x1F4188298](sub_1E3C84720, 0, 0);
}

uint64_t sub_1E3C84720()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (void *)v0[2];
  v2[3] = v0[4];
  v2[4] = sub_1E3C8CB94(&qword_1EBFDFF18, (void (*)(uint64_t))type metadata accessor for LazyJSStack);
  *uint64_t v2 = v1;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  sub_1E3E775E0();
  return v4();
}

uint64_t type metadata accessor for LazyJSStack()
{
  uint64_t result = qword_1EBFDFF20;
  if (!qword_1EBFDFF20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LazyJSStack.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  _OWORD v6[3] = a1;
  v6[4] = a2;
  v6[9] = *v5;
  uint64_t v7 = sub_1E3E7C420();
  v6[10] = v7;
  v6[11] = *(void *)(v7 - 8);
  v6[12] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0658);
  v6[13] = v8;
  v6[14] = *(void *)(v8 - 8);
  v6[15] = swift_task_alloc();
  uint64_t v9 = sub_1E3E7BCF0();
  v6[16] = v9;
  v6[17] = *(void *)(v9 - 8);
  v6[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C849D4, 0, 0);
}

uint64_t sub_1E3C849D4()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[9];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F711C0], v3);
  sub_1E3E7C790();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = swift_task_alloc();
  v0[19] = v5;
  *(void *)(v5 + 16) = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[20] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1E3C84B34;
  uint64_t v7 = v0[13];
  return MEMORY[0x1F4128D88](v0 + 2, sub_1E3C85258, v5, v7);
}

uint64_t sub_1E3C84B34()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 120);
  uint64_t v2 = *(void *)(*(void *)v0 + 112);
  uint64_t v3 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F4188298](sub_1E3C84CA8, 0, 0);
}

uint64_t sub_1E3C84CA8()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = (void *)v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[2];
  sub_1E3E7C410();
  sub_1E3E775E0();
  sub_1E3E7BE90();
  void *v1 = v4;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F71490], v3);
  v0[21] = sub_1E3E7C3F0();
  swift_release();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v7 = (uint64_t (*)(void))((char *)&dword_1EAE26200 + dword_1EAE26200);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[22] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1E3C84DF4;
  return v7();
}

uint64_t sub_1E3C84DF4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[23] = a1;
  v3[24] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1E3C85130, 0, 0);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v3[25] = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_1E3C84F84;
    uint64_t v6 = v3[21];
    uint64_t v7 = v3[6];
    uint64_t v8 = v3[7];
    uint64_t v9 = v3[3];
    uint64_t v10 = v3[4];
    return MEMORY[0x1F4129088](v9, v10, v6, v7, v8);
  }
}

uint64_t sub_1E3C84F84()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C851C0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C850A0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C850A0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C85130()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C851C0()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1E3C85258(void *a1@<X8>)
{
  *a1 = 0x4034000000000000;
}

uint64_t LazyJSStack.dispatch<A>(intent:jsonContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v36 = a4;
  uint64_t v31 = a3;
  uint64_t v33 = sub_1E3E7BBC0();
  uint64_t v7 = *(void *)(v33 - 8);
  uint64_t v34 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v33);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v4 + OBJC_IVAR____TtC10PodcastsUI11LazyJSStack_stack);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0660);
  sub_1E3E775E0();
  uint64_t v17 = sub_1E3E7CA10();
  uint64_t v18 = sub_1E3E7D1E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = &unk_1EAE26218;
  v19[5] = v16;
  uint64_t v32 = v17;
  v19[6] = v17;
  sub_1E3E775E0();
  sub_1E3C8B220((uint64_t)v15, (uint64_t)&unk_1EAE26230, (uint64_t)v19);
  swift_release();
  uint64_t v20 = a1;
  uint64_t v21 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v31);
  char v22 = v9;
  uint64_t v23 = v9;
  uint64_t v24 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v22, v35, v33);
  unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v26 = (v11 + *(unsigned __int8 *)(v7 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v21;
  *(void *)(v27 + 24) = v36;
  (*(void (**)(unint64_t, char *))(v10 + 32))(v27 + v25, (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v27 + v26, v23, v24);
  sub_1E3E7C970();
  swift_getAssociatedTypeWitness();
  sub_1E3E7CA20();
  swift_getWitnessTable();
  v37[3] = sub_1E3E7C180();
  v37[4] = MEMORY[0x1E4F713E0];
  __swift_allocate_boxed_opaque_existential_1(v37);
  sub_1E3E7C170();
  uint64_t v28 = sub_1E3E7C9E0();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  return v28;
}

uint64_t sub_1E3C8564C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1EAE26200 + dword_1EAE26200);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1E3C856F4;
  return v4();
}

uint64_t sub_1E3C856F4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_1E3C85804(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  v3[2] = a1;
  uint64_t v6 = (uint64_t (__cdecl *)())((char *)&dword_1EAE26200 + dword_1EAE26200);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[3] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1E3C856F4;
  return v6();
}

uint64_t sub_1E3C858F4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  void v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1E3C19DC4;
  void v5[4] = *v4;
  return MEMORY[0x1F4188298](sub_1E3C84720, 0, 0);
}

uint64_t sub_1E3C859CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1E3C50ED4;
  return LazyJSStack.dispatch<A>(_:objectGraph:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1E3C85A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return LazyJSStack.dispatch<A>(intent:jsonContext:)(a1, a2, a3, a4);
}

uint64_t LazyJSStack.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E3E7C810();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v14 - v9;
  sub_1E3E7BE20();
  sub_1E3C8C580();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v2;
  swift_allocObject();
  uint64_t v12 = sub_1E3C8C380((uint64_t)v7, (uint64_t)&unk_1EAE26240, v11);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v12;
}

uint64_t sub_1E3C85C3C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C85CD4;
  return sub_1E3C85DD4(a1);
}

uint64_t sub_1E3C85CD4(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1E3C85DD4(uint64_t a1)
{
  v2[30] = a1;
  v2[31] = v1;
  sub_1E3E7BB40();
  v2[32] = swift_task_alloc();
  uint64_t v3 = sub_1E3E7CA90();
  v2[33] = v3;
  v2[34] = *(void *)(v3 - 8);
  v2[35] = swift_task_alloc();
  uint64_t v4 = sub_1E3E7C900();
  v2[36] = v4;
  v2[37] = *(void *)(v4 - 8);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7BA50();
  v2[40] = v5;
  v2[41] = *(void *)(v5 - 8);
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C85FA4, 0, 0);
}

uint64_t sub_1E3C85FA4()
{
  uint64_t v1 = v0;
  uint64_t v13 = v0 + 2;
  uint64_t v3 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v6 = v0 + 41;
  uint64_t v4 = v0[41];
  uint64_t v5 = v6[1];
  uint64_t v7 = v1[40];
  uint64_t v8 = sub_1E3C12B10(0, &qword_1EBFE2728);
  MEMORY[0x1E4E75340](v8, &unk_1EAE26290, 0, v8);
  MEMORY[0x1E4E75340](&type metadata for JSPackage, &unk_1EAE26298, 0, &type metadata for JSPackage);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE26A0);
  MEMORY[0x1E4E75340](v9, &unk_1EAE262A8, 0, v9);
  sub_1E3E775E0();
  sub_1E3E7BE50();
  sub_1E3E7BE50();
  v1[45] = sub_1E3E7BE50();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(v5, v7);
  v10(v3, v7);
  v10(v2, v7);
  uint64_t v11 = (void *)swift_task_alloc();
  v1[46] = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_1E3C861B0;
  return MEMORY[0x1F4127FF8](v13, &type metadata for JSPackage, &type metadata for JSPackage);
}

uint64_t sub_1E3C861B0()
{
  uint64_t v2 = (void *)*v1;
  v2[47] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3C869D0, 0, 0);
  }
  else
  {
    sub_1E3C1B2BC((uint64_t)(v2 + 7), (uint64_t)(v2 + 17));
    uint64_t v3 = (void *)swift_task_alloc();
    v2[48] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_1E3C86330;
    uint64_t v4 = v2[45];
    return sub_1E3C89B6C(v4);
  }
}

uint64_t sub_1E3C86330(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 392) = v1;
  swift_task_dealloc();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0(v4 + 136);
    uint64_t v5 = sub_1E3C86A94;
  }
  else
  {
    *(void *)(v4 + 400) = a1;
    uint64_t v5 = sub_1E3C86460;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3C86460()
{
  sub_1E3E7C8F0();
  if (qword_1EBFE0680 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 296);
  *(void *)(v0 + 408) = __swift_project_value_buffer(*(void *)(v0 + 264), (uint64_t)qword_1EBFE0668);
  *(void *)(v0 + 416) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
  uint64_t v5 = *(void *)(sub_1E3E7BB60() - 8);
  *(void *)(v0 + 424) = *(void *)(v5 + 72);
  *(_DWORD *)(v0 + 456) = *(_DWORD *)(v5 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
  sub_1E3E7BAF0();
  sub_1E3E7C860();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  sub_1E3E7C970();
  swift_allocObject();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 432) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1E3C8667C;
  uint64_t v7 = *(void *)(v0 + 304);
  return MEMORY[0x1F4129070](v7);
}

uint64_t sub_1E3C8667C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 440) = a1;
  *(void *)(v3 + 448) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1E3C86B64;
  }
  else {
    uint64_t v4 = sub_1E3C86790;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3C86790()
{
  uint64_t v1 = self;
  sub_1E3E775E0();
  if (objc_msgSend(v1, sel_isRunningOnInternalOS))
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
    sub_1E3E7BAF0();
    sub_1E3E7C870();
    swift_bridgeObjectRelease();
    sub_1E3E7C910();
  }
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[36];
  uint64_t v4 = v0[37];
  swift_release();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
  sub_1E3E7BAF0();
  sub_1E3E7C860();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_1E3C8CAE4((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v6 = v0[55];
  return v5(v6);
}

uint64_t sub_1E3C869D0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C86A94()
{
  swift_release();
  sub_1E3C8CAE4(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C86B64()
{
  uint64_t v11 = v0[39];
  uint64_t v1 = v0[35];
  uint64_t v9 = v0[37];
  uint64_t v10 = v0[36];
  uint64_t v3 = v0[33];
  uint64_t v2 = v0[34];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[51], v3);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
  sub_1E3E7BB30();
  sub_1E3E7BB20();
  swift_getErrorValue();
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[27];
  v0[25] = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_1, v4, v5);
  sub_1E3E7BB00();
  sub_1E3C10CE0((uint64_t)(v0 + 22), &qword_1EBFE6190);
  sub_1E3E7BB20();
  sub_1E3E7BB50();
  sub_1E3E7C880();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_willThrow();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v10);
  sub_1E3C8CAE4((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1E3C86DDC(uint64_t a1)
{
  v1[4] = a1;
  uint64_t v2 = sub_1E3E7C530();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C86E9C, 0, 0);
}

uint64_t sub_1E3C86E9C()
{
  v0[8] = sub_1E3E7BE80();
  v0[9] = sub_1E3E7BE70();
  uint64_t v1 = sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE2740);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C86F80;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3C86F80()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C8758C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C8709C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C8709C()
{
  v0[12] = v0[2];
  v0[13] = sub_1E3E7BE70();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE06D8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[14] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C87170;
  return MEMORY[0x1F4127FF8](v0 + 3, v1, v1);
}

uint64_t sub_1E3C87170()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void **)(v2 + 96);
    swift_release();

    uint64_t v4 = sub_1E3C875F8;
  }
  else
  {
    swift_release();
    *(void *)(v2 + 128) = sub_1E3C12B10(0, &qword_1EBFE2728);
    uint64_t v4 = sub_1E3C872CC;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3C872CC()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = (uint64_t *)v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  id v5 = objc_msgSend(self, sel_mediaApiClientIdentifier);
  uint64_t v6 = sub_1E3E7CD30();
  uint64_t v8 = v7;

  uint64_t *v1 = v6;
  v1[1] = v8;
  v1[2] = 0;
  v1[3] = 0;
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F71580], v3);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[17] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1E3C873F4;
  uint64_t v10 = v0[12];
  uint64_t v11 = v0[7];
  return MEMORY[0x1F4129398](v10, v4, v11);
}

uint64_t sub_1E3C873F4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_1E3C8765C;
  }
  else
  {
    *(void *)(v4 + 152) = a1;
    id v5 = sub_1E3C8751C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3C8751C()
{
  **(void **)(v0 + 32) = *(void *)(v0 + 152);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C8758C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C875F8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C8765C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C876C0(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = sub_1E3E7B960();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  type metadata accessor for JSPackageLoader();
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for JSPackageFetcher();
  v1[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C877DC, 0, 0);
}

uint64_t sub_1E3C877DC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  sub_1E3E7C810();
  sub_1E3E7C8C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE25B8);
  sub_1E3E7C8C0();
  sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE2740);
  long long v16 = *(_OWORD *)(v0 + 16);
  sub_1E3E7C8C0();
  swift_release();
  uint64_t v6 = *(void *)(v0 + 32);
  *(_OWORD *)(v2 + *(int *)(v1 + 20)) = v16;
  *(void *)(v2 + *(int *)(v1 + 24)) = v6;
  sub_1E3E7BE70();
  unsigned int v7 = objc_msgSend(self, sel_isRunningOnInternalOS);
  uint64_t v8 = (unsigned int *)MEMORY[0x1E4F71090];
  if (!v7) {
    uint64_t v8 = (unsigned int *)MEMORY[0x1E4F710A0];
  }
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v3, *v8, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1E3E86660;
  uint64_t v10 = sub_1E3E7B9C0();
  uint64_t v11 = MEMORY[0x1E4F710C0];
  *(void *)(v9 + 56) = v10;
  *(void *)(v9 + 64) = v11;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 32));
  sub_1E3E7B9B0();
  sub_1E3E7B840();
  swift_release();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1E3C87A10;
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 40);
  return sub_1E3C683A8(v14, v13);
}

uint64_t sub_1E3C87A10()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C87BE0;
  }
  else {
    uint64_t v2 = sub_1E3C87B24;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C87B24()
{
  uint64_t v1 = v0[11];
  sub_1E3C8CC84(v0[9], (uint64_t (*)(void))type metadata accessor for JSPackageLoader);
  sub_1E3C8CC84(v1, (uint64_t (*)(void))type metadata accessor for JSPackageFetcher);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1E3C87BE0()
{
  uint64_t v1 = v0[11];
  sub_1E3C8CC84(v0[9], (uint64_t (*)(void))type metadata accessor for JSPackageLoader);
  sub_1E3C8CC84(v1, (uint64_t (*)(void))type metadata accessor for JSPackageFetcher);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1E3C87C9C(uint64_t a1)
{
  v1[37] = a1;
  uint64_t v2 = sub_1E3E7B9F0();
  v1[38] = v2;
  v1[39] = *(void *)(v2 - 8);
  v1[40] = swift_task_alloc();
  uint64_t v3 = sub_1E3E7C490();
  v1[41] = v3;
  v1[42] = *(void *)(v3 - 8);
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  uint64_t v4 = sub_1E3E7C770();
  v1[45] = v4;
  v1[46] = *(void *)(v4 - 8);
  v1[47] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7C810();
  v1[48] = v5;
  v1[49] = *(void *)(v5 - 8);
  v1[50] = swift_task_alloc();
  v1[51] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C87E90, 0, 0);
}

uint64_t sub_1E3C87E90()
{
  v0[52] = sub_1E3E7BE80();
  v0[53] = sub_1E3E7BE70();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[54] = v1;
  void *v1 = v0;
  v1[1] = sub_1E3C87F4C;
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[48];
  return MEMORY[0x1F4127FF8](v2, v3, v3);
}

uint64_t sub_1E3C87F4C()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C887D0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3C88068;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C88068()
{
  *(void *)(v0 + 448) = sub_1E3E7BE70();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v1;
  void *v1 = v0;
  v1[1] = sub_1E3C88120;
  return MEMORY[0x1F4127FF8](v0 + 16, &type metadata for JSPackage, &type metadata for JSPackage);
}

uint64_t sub_1E3C88120()
{
  *(void *)(*(void *)v1 + 464) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1E3C88880;
  }
  else {
    uint64_t v2 = sub_1E3C88254;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C88254()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1E3E8A550;
  if (qword_1EBFE6350 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EBFE63D8;
  *(void *)(v1 + 32) = qword_1EBFE63D8;
  sub_1E3E7D080();
  id v3 = v2;
  sub_1E3E7C760();
  sub_1E3C1B2BC((uint64_t)(v0 + 2), (uint64_t)(v0 + 22));
  if (qword_1EBFE20B8 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)v0[58];
  uint64_t v5 = v0[39];
  uint64_t v6 = v0[40];
  uint64_t v7 = v0[38];
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBFECD30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v8, v7);
  uint64_t v9 = sub_1E3E7C4D0();
  uint64_t v10 = MEMORY[0x1E4F714E8];
  v0[20] = v9;
  v0[21] = v10;
  __swift_allocate_boxed_opaque_existential_1(v0 + 17);
  sub_1E3E7C4C0();
  if (v4)
  {
    __swift_deallocate_boxed_opaque_existential_1((uint64_t)(v0 + 17));
    uint64_t v11 = v0[12];
    uint64_t v12 = v0[13];
    uint64_t v13 = v0[14];
    v0[20] = (uint64_t)&type metadata for JSPackageManifest;
    v0[21] = sub_1E3C8CC30();
    v0[17] = v11;
    v0[18] = v12;
    v0[19] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v14 = v0[45];
  uint64_t v15 = v0[46];
  uint64_t v16 = v0[43];
  uint64_t v26 = v0[47];
  uint64_t v17 = v0[42];
  uint64_t v27 = v0[41];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[49] + 16))(v0[50], v0[51], v0[48]);
  uint64_t v18 = sub_1E3E7C070();
  uint64_t v19 = MEMORY[0x1E4F71370];
  v0[30] = v18;
  v0[31] = v19;
  __swift_allocate_boxed_opaque_existential_1(v0 + 27);
  sub_1E3E7C060();
  sub_1E3E7BE70();
  sub_1E3E7C470();
  uint64_t v20 = MEMORY[0x1E4F71688];
  v0[35] = v14;
  v0[36] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16))(boxed_opaque_existential_1, v26, v14);
  sub_1E3E7C480();
  char v22 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v0[59] = (uint64_t)v22;
  v0[60] = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v22(v16, v27);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 32));
  v0[61] = sub_1E3E7C4B0();
  uint64_t v23 = (void *)swift_task_alloc();
  v0[62] = (uint64_t)v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1E3C8857C;
  uint64_t v24 = v0[44];
  return MEMORY[0x1F4128808](v24);
}

uint64_t sub_1E3C8857C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 504) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1E3C88940;
  }
  else
  {
    *(void *)(v4 + 512) = a1;
    uint64_t v5 = sub_1E3C886A4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3C886A4()
{
  uint64_t v1 = v0[64];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[59];
  uint64_t v3 = v0[51];
  uint64_t v4 = v0[48];
  uint64_t v5 = v0[49];
  uint64_t v7 = v0[46];
  uint64_t v6 = v0[47];
  uint64_t v9 = v0[44];
  uint64_t v8 = v0[45];
  uint64_t v10 = v0[41];
  uint64_t v11 = (void *)v0[37];
  uint64_t v12 = MEMORY[0x1E4F714D0];
  void v11[3] = v0[61];
  v11[4] = v12;
  *uint64_t v11 = v1;
  v2(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_1E3C8CAE4((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1E3C887D0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C88880()
{
  (*(void (**)(void, void))(v0[49] + 8))(v0[51], v0[48]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1E3C88940()
{
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 376);
  uint64_t v6 = *(void *)(v0 + 360);
  (*(void (**)(void, void))(v0 + 472))(*(void *)(v0 + 352), *(void *)(v0 + 328));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_1E3C8CAE4(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1E3C88A48(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 328) = a3;
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = a2;
  *(void *)(v3 + 96) = sub_1E3E7C240();
  *(void *)(v3 + 104) = swift_task_alloc();
  *(void *)(v3 + 112) = sub_1E3E7C220();
  *(void *)(v3 + 120) = swift_task_alloc();
  uint64_t v4 = sub_1E3E7C940();
  *(void *)(v3 + 128) = v4;
  *(void *)(v3 + 136) = *(void *)(v4 - 8);
  *(void *)(v3 + 144) = swift_task_alloc();
  uint64_t v5 = sub_1E3E7C210();
  *(void *)(v3 + 152) = v5;
  *(void *)(v3 + 160) = *(void *)(v5 - 8);
  *(void *)(v3 + 168) = swift_task_alloc();
  *(void *)(v3 + 176) = swift_task_alloc();
  *(void *)(v3 + 184) = swift_task_alloc();
  *(void *)(v3 + 192) = swift_task_alloc();
  *(void *)(v3 + 200) = swift_task_alloc();
  uint64_t v6 = sub_1E3E7C810();
  *(void *)(v3 + 208) = v6;
  *(void *)(v3 + 216) = *(void *)(v6 - 8);
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  uint64_t v7 = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE2730);
  *(void *)(v3 + 240) = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 248) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1E3C88CDC;
  return MEMORY[0x1F4127FF8](v3 + 56, v7, v7);
}

uint64_t sub_1E3C88CDC()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C8975C;
  }
  else {
    uint64_t v2 = sub_1E3C88DF0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C88DF0()
{
  v0[33] = v0[7];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[34] = v1;
  void *v1 = v0;
  v1[1] = sub_1E3C88E9C;
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[26];
  return MEMORY[0x1F4127FF8](v2, v3, v3);
}

uint64_t sub_1E3C88E9C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3C89848, 0, 0);
  }
  else
  {
    uint64_t v3 = sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE2740);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 288) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_1E3C89048;
    return MEMORY[0x1F4127FF8](v2 + 64, v3, v3);
  }
}

uint64_t sub_1E3C89048()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C8993C;
  }
  else {
    uint64_t v2 = sub_1E3C8915C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C8915C()
{
  v0[38] = v0[8];
  uint64_t v1 = sub_1E3C12B10(0, &qword_1EBFE2728);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[39] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C89230;
  return MEMORY[0x1F4127FF8](v0 + 9, v1, v1);
}

uint64_t sub_1E3C89230()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C89A50;
  }
  else {
    uint64_t v2 = sub_1E3C89344;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C89344()
{
  uint64_t v1 = (void *)v0[38];
  uint64_t v2 = (void *)v0[33];
  uint64_t v29 = v0[30];
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[27];
  uint64_t v25 = v0[26];
  uint64_t v27 = v0[29];
  uint64_t v5 = v0[23];
  uint64_t v33 = v0[24];
  uint64_t v7 = v0[21];
  uint64_t v6 = v0[22];
  uint64_t v8 = v0[19];
  uint64_t v38 = v0[20];
  uint64_t v34 = v0[18];
  uint64_t v35 = v0[17];
  uint64_t v36 = v0[16];
  id v37 = (id)v0[9];
  uint64_t v9 = (void *)sub_1E3E7CCF0();
  objc_msgSend(v1, sel_setTreatmentNamespace_, v9);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v27, v25);
  sub_1E3E7C200();
  v0[2] = v2;
  uint64_t v10 = MEMORY[0x1E4F71858];
  v0[5] = v29;
  v0[6] = v10;
  id v11 = v2;
  sub_1E3E7C1C0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v12(v7, v8);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  sub_1E3E7C1D0();
  v12(v6, v8);
  sub_1E3E7C1B0();
  v12(v5, v8);
  sub_1E3E7C930();
  sub_1E3E7C920();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  sub_1E3E7C1F0();
  v12(v33, v8);
  if (objc_msgSend(v37, sel_protocolHandler))
  {
    self;
    uint64_t v13 = (void *)swift_dynamicCastObjCClass();
    if (v13)
    {
      uint64_t v15 = v0[24];
      uint64_t v14 = v0[25];
      uint64_t v17 = v0[19];
      uint64_t v16 = v0[20];
      id v18 = objc_msgSend(v13, sel_tokenService);
      sub_1E3E7C1E0();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v12(v14, v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v14, v15, v17);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  uint64_t v26 = v12;
  uint64_t v28 = (void *)v0[38];
  uint64_t v19 = v0[27];
  uint64_t v32 = v0[29];
  uint64_t v20 = v0[25];
  uint64_t v30 = (void *)v0[33];
  uint64_t v31 = v0[26];
  uint64_t v21 = v0[19];
  (*(void (**)(void, uint64_t, uint64_t))(v0[20] + 16))(v0[24], v20, v21);
  sub_1E3E7C230();
  id v22 = v37;
  sub_1E3E7C250();
  sub_1E3E7C820();

  v26(v20, v21);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v32, v31);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_1E3C8975C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C89848()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C8993C()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 216);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1E3C89A50()
{
  uint64_t v1 = *(void **)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 216);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1E3C89B6C(uint64_t a1)
{
  v2[115] = v1;
  v2[114] = a1;
  uint64_t v3 = sub_1E3E7C830();
  v2[116] = v3;
  v2[117] = *(void *)(v3 - 8);
  v2[118] = swift_task_alloc();
  v2[119] = swift_task_alloc();
  uint64_t v4 = sub_1E3E7C810();
  v2[120] = v4;
  v2[121] = *(void *)(v4 - 8);
  v2[122] = swift_task_alloc();
  v2[123] = swift_task_alloc();
  uint64_t v5 = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE2730);
  uint64_t v6 = (void *)swift_task_alloc();
  v2[124] = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1E3C89D20;
  return MEMORY[0x1F4127FF8](v2 + 113, v5, v5);
}

uint64_t sub_1E3C89D20()
{
  *(void *)(*(void *)v1 + 1000) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C8AD90;
  }
  else {
    uint64_t v2 = sub_1E3C89E34;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C89E34()
{
  v0[126] = v0[113];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[127] = v1;
  void *v1 = v0;
  v1[1] = sub_1E3C89EE0;
  uint64_t v2 = v0[123];
  uint64_t v3 = v0[120];
  return MEMORY[0x1F4127FF8](v2, v3, v3);
}

uint64_t sub_1E3C89EE0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 1024) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3C8AE20, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 1032) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_1E3C8A074;
    return MEMORY[0x1F4127FF8](v2 + 552, &type metadata for JSPackage, &type metadata for JSPackage);
  }
}

uint64_t sub_1E3C8A074()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 1040) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3C8AEB8, 0, 0);
  }
  else
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE26A0);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 1048) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_1E3C8A214;
    return MEMORY[0x1F4127FF8](v2 + 832, v3, v3);
  }
}

uint64_t sub_1E3C8A214()
{
  uint64_t v2 = (void *)*v1;
  v2[132] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3C8AF74, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[133] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_1E3C8A390;
    uint64_t v4 = v2[119];
    uint64_t v5 = v2[114];
    return sub_1E3C88A48(v4, v5, 1);
  }
}

uint64_t sub_1E3C8A390()
{
  uint64_t v2 = (void *)*v1;
  v2[134] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3C8B03C, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[135] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_1E3C8A50C;
    uint64_t v4 = v2[118];
    uint64_t v5 = v2[114];
    return sub_1E3C88A48(v4, v5, 0);
  }
}

uint64_t sub_1E3C8A50C()
{
  *(void *)(*(void *)v1 + 1088) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C8B118;
  }
  else {
    uint64_t v2 = sub_1E3C8A620;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C8A620()
{
  if (qword_1EBFE0680 != -1) {
    swift_once();
  }
  uint64_t v44 = *(void **)(v0 + 1008);
  uint64_t v1 = *(void *)(v0 + 984);
  uint64_t v47 = v1;
  char v46 = *(uint64_t **)(v0 + 976);
  uint64_t v2 = *(void *)(v0 + 968);
  uint64_t v49 = *(void *)(v0 + 960);
  uint64_t v50 = v2;
  uint64_t v3 = *(void *)(v0 + 952);
  uint64_t v48 = *(void *)(v0 + 944);
  uint64_t v4 = *(void *)(v0 + 936);
  uint64_t v45 = *(void *)(v0 + 928);
  uint64_t v5 = sub_1E3E7CA90();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBFE0668);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
  sub_1E3E7BB60();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
  sub_1E3E7BAF0();
  sub_1E3E7C870();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE07B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E3E8A560;
  *(void *)(inited + 32) = 6775138;
  *(void *)(inited + 40) = 0xE300000000000000;
  uint64_t v7 = MEMORY[0x1E4F716A0];
  *(void *)(inited + 72) = v49;
  *(void *)(inited + 80) = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
  char v43 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 16);
  v43(boxed_opaque_existential_1, v1, v49);
  strcpy((char *)(inited + 88), "anonymousNet");
  *(unsigned char *)(inited + 101) = 0;
  *(_WORD *)(inited + 102) = -5120;
  uint64_t v9 = MEMORY[0x1E4F716A8];
  *(void *)(inited + 128) = v45;
  *(void *)(inited + 136) = v9;
  uint64_t v10 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 104));
  id v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
  v11(v10, v3, v45);
  *(void *)(inited + 144) = 0x6E6F697461727564;
  *(void *)(inited + 152) = 0xE800000000000000;
  uint64_t v12 = (objc_class *)type metadata accessor for JSDurationObject();
  id v13 = objc_msgSend(objc_allocWithZone(v12), sel_init);
  *(void *)(inited + 184) = v12;
  uint64_t v14 = sub_1E3C8CB94(&qword_1EBFE0070, (void (*)(uint64_t))type metadata accessor for JSDurationObject);
  *(void *)(inited + 160) = v13;
  *(void *)(inited + 192) = v14;
  *(void *)(inited + 200) = 0x657A696C61636F6CLL;
  *(void *)(inited + 208) = 0xE900000000000072;
  sub_1E3C1B2BC(v0 + 832, v0 + 792);
  uint64_t v15 = (objc_class *)type metadata accessor for JSLocalizerObject();
  id v16 = objc_allocWithZone(v15);
  sub_1E3C1B2BC(v0 + 792, (uint64_t)v16 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer);
  *(void *)(v0 + 872) = v16;
  *(void *)(v0 + 880) = v15;
  id v17 = objc_msgSendSuper2((objc_super *)(v0 + 872), (SEL)&selRef_length);
  __swift_destroy_boxed_opaque_existential_0(v0 + 792);
  *(void *)(inited + 240) = v15;
  uint64_t v18 = sub_1E3C8CB94((unint64_t *)&unk_1EBFE0078, (void (*)(uint64_t))type metadata accessor for JSLocalizerObject);
  *(void *)(inited + 216) = v17;
  *(void *)(inited + 248) = v18;
  *(void *)(inited + 256) = 7628142;
  *(void *)(inited + 264) = 0xE300000000000000;
  *(void *)(inited + 296) = v45;
  *(void *)(inited + 304) = MEMORY[0x1E4F716A8];
  uint64_t v19 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 272));
  v11(v19, v48, v45);
  *(void *)(inited + 312) = 0x746E65696C635FLL;
  *(void *)(inited + 320) = 0xE700000000000000;
  sub_1E3E775E0();
  id v20 = sub_1E3E76B3C();
  swift_release();
  *(void *)(inited + 352) = _s14JSClientObjectCMa();
  uint64_t v21 = sub_1E3C8CB94(&qword_1EBFE02B0, (void (*)(uint64_t))_s14JSClientObjectCMa);
  *(void *)(inited + 328) = v20;
  *(void *)(inited + 360) = v21;
  *(void *)(inited + 368) = 0x7A696C61636F6C5FLL;
  *(void *)(inited + 376) = 0xEA00000000007265;
  v43(v46, v47, v49);
  uint64_t v22 = sub_1E3DC0510();
  uint64_t v24 = v23;
  uint64_t v25 = (objc_class *)_s17JSLocalizerObjectCMa();
  id v26 = objc_allocWithZone(v25);
  id v27 = sub_1E3DBDA30(v22, v24);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  v28((uint64_t)v46, v49);
  *(void *)(inited + 408) = v25;
  uint64_t v29 = sub_1E3C8CB94(&qword_1EBFE02B8, (void (*)(uint64_t))_s17JSLocalizerObjectCMa);
  *(void *)(inited + 384) = v27;
  *(void *)(inited + 416) = v29;
  *(void *)(inited + 424) = 0x747265706F72705FLL;
  *(void *)(inited + 432) = 0xEB00000000736569;
  sub_1E3C8CB38(v0 + 552, v0 + 672);
  uint64_t v30 = *(void *)(v0 + 752);
  uint64_t v31 = *(void *)(v0 + 760);
  uint64_t v32 = *(void *)(v0 + 768);
  uint64_t v33 = (objc_class *)_s18JSPropertiesObjectCMa();
  uint64_t v34 = (char *)objc_allocWithZone(v33);
  uint64_t v35 = &v34[OBJC_IVAR____TtCO10PodcastsUI6Legacy18JSPropertiesObject_manifest];
  *(void *)uint64_t v35 = v30;
  *((void *)v35 + 1) = v31;
  *((void *)v35 + 2) = v32;
  *(void *)(v0 + 888) = v34;
  *(void *)(v0 + 896) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v36 = objc_msgSendSuper2((objc_super *)(v0 + 888), sel_init);
  sub_1E3C8CAE4(v0 + 672);
  *(void *)(inited + 464) = v33;
  uint64_t v37 = sub_1E3C8CB94(&qword_1EBFE02C0, (void (*)(uint64_t))_s18JSPropertiesObjectCMa);
  *(void *)(inited + 440) = v36;
  *(void *)(inited + 472) = v37;
  *(void *)(inited + 480) = 0x726573755FLL;
  *(void *)(inited + 488) = 0xE500000000000000;
  sub_1E3E775E0();
  id v38 = sub_1E3D1C838();
  swift_release();
  *(void *)(inited + 520) = _s12JSUserObjectCMa();
  *(void *)(inited + 528) = sub_1E3C8CB94(&qword_1EBFE02A8, (void (*)(uint64_t))_s12JSUserObjectCMa);
  *(void *)(inited + 496) = v38;
  unint64_t v39 = sub_1E3C7F424(inited);

  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v40(v48, v45);
  v40(v3, v45);
  __swift_destroy_boxed_opaque_existential_0(v0 + 832);
  sub_1E3C8CAE4(v0 + 552);
  v28(v47, v49);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v41(v39);
}

uint64_t sub_1E3C8AD90()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C8AE20()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C8AEB8()
{
  uint64_t v1 = *(void *)(v0 + 984);
  uint64_t v2 = *(void *)(v0 + 968);
  uint64_t v3 = *(void *)(v0 + 960);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1E3C8AF74()
{
  uint64_t v1 = *(void *)(v0 + 984);
  uint64_t v2 = *(void *)(v0 + 968);
  uint64_t v3 = *(void *)(v0 + 960);

  sub_1E3C8CAE4(v0 + 552);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1E3C8B03C()
{
  uint64_t v1 = *(void *)(v0 + 984);
  uint64_t v2 = *(void *)(v0 + 968);
  uint64_t v3 = *(void *)(v0 + 960);

  __swift_destroy_boxed_opaque_existential_0(v0 + 832);
  sub_1E3C8CAE4(v0 + 552);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1E3C8B118()
{
  uint64_t v1 = *(void *)(v0 + 984);
  uint64_t v2 = *(void *)(v0 + 968);
  uint64_t v3 = *(void *)(v0 + 960);
  uint64_t v4 = *(void *)(v0 + 952);
  uint64_t v5 = *(void *)(v0 + 936);
  uint64_t v6 = *(void *)(v0 + 928);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  __swift_destroy_boxed_opaque_existential_0(v0 + 832);
  sub_1E3C8CAE4(v0 + 552);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1E3C8B220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7D1E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1E3E7D1D0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1E3C10CE0(a1, &qword_1EBFE2700);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1E3E7D130();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1E3C8B3CC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1E3C8B4A8;
  return v6(a1);
}

uint64_t sub_1E3C8B4A8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1E3C8B5A0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a6;
  uint64_t v8 = sub_1E3E7BD40();
  _OWORD v6[3] = v8;
  v6[4] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v6[5] = v9;
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  v6[6] = v10;
  void *v10 = v6;
  v10[1] = sub_1E3C8B6E4;
  return v12(v9);
}

uint64_t sub_1E3C8B6E4()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C8B888;
  }
  else {
    uint64_t v2 = sub_1E3C8B7F8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C8B7F8()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_1E3E7C9F0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1E3C8B888()
{
  uint64_t v1 = *(void **)(v0 + 56);
  sub_1E3E7C9D0();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3C8B900(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a6;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1E3C8B9E0;
  return v9(v6 + 16);
}

uint64_t sub_1E3C8B9E0()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C8BB60;
  }
  else {
    uint64_t v2 = sub_1E3C8BAF4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C8BAF4()
{
  sub_1E3E7C9F0();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C8BB60()
{
  uint64_t v1 = *(void **)(v0 + 40);
  sub_1E3E7C9D0();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3C8BBD0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C8BC18(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1E3C19DC4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EAE26228
                                                                                   + dword_1EAE26228);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1E3C8BCF4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_1E3E7BBC0();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_1E3C8BE3C()
{
  return sub_1E3E7BEF0();
}

uint64_t sub_1E3C8BF3C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a6;
  uint64_t v8 = sub_1E3E7C1A0();
  _OWORD v6[3] = v8;
  v6[4] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v6[5] = v9;
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  v6[6] = v10;
  void *v10 = v6;
  v10[1] = sub_1E3C8C080;
  return v12(v9);
}

uint64_t sub_1E3C8C080()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C8CF10;
  }
  else {
    uint64_t v2 = sub_1E3C8CF18;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C8C194(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 24) = a1;
  unint64_t v7 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 32) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1E3C8C274;
  return v7(v4 + 16);
}

uint64_t sub_1E3C8C274()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t sub_1E3C8C380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3 + OBJC_IVAR____TtC10PodcastsUI11LazyJSStack_bag;
  uint64_t v11 = sub_1E3E7C810();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  sub_1E3E7D1B0();
  uint64_t v13 = sub_1E3E7D1E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 0, 1, v13);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0068);
  uint64_t v15 = swift_allocObject();
  sub_1E3E775E0();
  swift_defaultActor_initialize();
  sub_1E3C8CA7C((uint64_t)v9, v15 + qword_1EBFDFFE0);
  id v16 = (void *)(v15 + qword_1EBFDFFD8);
  *id v16 = &unk_1EAE26270;
  v16[1] = v14;
  uint64_t v17 = v15 + *(void *)(*(void *)v15 + 112);
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 2;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  *(void *)(v3 + OBJC_IVAR____TtC10PodcastsUI11LazyJSStack_stack) = v15;
  return v3;
}

uint64_t sub_1E3C8C580()
{
  setenv("JSC_numberOfGCMarkers", "3", 1);
  setenv("JSC_numberOfWorklistThreads", "2", 1);
  if (qword_1EBFE0680 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1E3E7CA90();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBFE0668);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
  sub_1E3E7BB60();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
  sub_1E3E7BAF0();
  sub_1E3E7C860();
  swift_bridgeObjectRelease();

  return setenv("JSC_useJIT", "0", 1);
}

uint64_t sub_1E3C8C704()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C8C73C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C8C7D4;
  return sub_1E3C85C3C(v2);
}

uint64_t sub_1E3C8C7D4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1E3C8C8D0()
{
  return type metadata accessor for LazyJSStack();
}

uint64_t sub_1E3C8C8D8()
{
  uint64_t result = sub_1E3E7C810();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for LazyJSStack(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LazyJSStack);
}

uint64_t sub_1E3C8C98C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C8C9C4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C50ED4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EAE26268 + dword_1EAE26268);
  return v6(a1, v4);
}

uint64_t sub_1E3C8CA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C8CAE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3C8CB38(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1E3C8CB94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x1E4E79510);
  }
  return result;
}

unint64_t sub_1E3C8CC30()
{
  unint64_t result = qword_1EAE262D0;
  if (!qword_1EAE262D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE262D0);
  }
  return result;
}

uint64_t sub_1E3C8CC84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1E3C8CCE4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C50ED4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EAE262E0 + dword_1EAE262E0);
  return v6(a1, v4);
}

uint64_t sub_1E3C8CD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C8CE04()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C8CE44(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1E3C50ED4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EAE262F8 + dword_1EAE262F8);
  return v8(a1, v4, v5, v6);
}

void sub_1E3C8CF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1E3E77B20();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t static StoreResponseDelegateError.== infix(_:_:)()
{
  return 1;
}

uint64_t StoreResponseDelegateError.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t StoreResponseDelegateError.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3C8D008(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1E3C8DB34(a3, a4, a5, (uint64_t)&unk_1F3F4AB18, (uint64_t)sub_1E3C8E13C, (uint64_t)&block_descriptor_26);
}

uint64_t sub_1E3C8D13C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1E3C8DB34(a3, a4, a5, (uint64_t)&unk_1F3F4AAA0, (uint64_t)sub_1E3C8E07C, (uint64_t)&block_descriptor_4);
}

uint64_t sub_1E3C8D270(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1E3C8DB34(a3, a4, a5, (uint64_t)&unk_1F3F4AB90, (uint64_t)sub_1E3C8E18C, (uint64_t)&block_descriptor_35);
}

id UIStoreResponseDelegate.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id UIStoreResponseDelegate.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIStoreResponseDelegate();
  return objc_msgSendSuper2(&v2, sel_init);
}

id UIStoreResponseDelegate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIStoreResponseDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1E3C8D480(void (*a1)(void, void *), uint64_t a2, void *a3)
{
  id v6 = objc_msgSend(self, sel_mt_rootViewController);
  if (v6
    && (uint64_t v7 = v6,
        id v8 = objc_msgSend(v6, sel_mt_topViewController),
        v7,
        v8))
  {
    id v9 = objc_msgSend(a3, sel_account);
    if (v9)
    {
      uint64_t v10 = v9;
      if (objc_msgSend(v9, sel_ams_isLocalAccount)) {
        objc_msgSend(a3, sel_setAccount_, 0);
      }
    }
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DF38]), sel_initWithRequest_presentingViewController_, a3, v8);
    id v12 = objc_msgSend(v11, sel_performAuthentication);
    v15[4] = a1;
    void v15[5] = a2;
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 1107296256;
    _OWORD v15[2] = sub_1E3C8D678;
    uint64_t v15[3] = &block_descriptor_38;
    uint64_t v13 = _Block_copy(v15);
    sub_1E3E775E0();
    swift_release();
    objc_msgSend(v12, sel_addFinishBlock_, v13);
    _Block_release(v13);
  }
  else
  {
    sub_1E3C8E0E4();
    uint64_t v14 = (void *)swift_allocError();
    a1(0, v14);
  }
}

void sub_1E3C8D67C(void (*a1)(void, void *), uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(self, sel_mt_rootViewController);
  if (v6
    && (uint64_t v7 = v6,
        id v8 = objc_msgSend(v6, sel_mt_topViewController),
        v7,
        v8))
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DF20]), sel_initWithRequest_presentingViewController_, a3, v8);
    id v10 = objc_msgSend(v9, sel_present);

    v13[4] = a1;
    v13[5] = a2;
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 1107296256;
    v13[2] = sub_1E3C8D678;
    v13[3] = &block_descriptor_29;
    id v11 = _Block_copy(v13);
    sub_1E3E775E0();
    swift_release();
    objc_msgSend(v10, sel_addFinishBlock_, v11);
    _Block_release(v11);
  }
  else
  {
    sub_1E3C8E0E4();
    id v12 = (void *)swift_allocError();
    a1(0, v12);
  }
}

void sub_1E3C8D82C(void (*a1)(void, void *), uint64_t a2, void *a3)
{
  id v6 = objc_msgSend(self, sel_mt_rootViewController);
  if (v6
    && (uint64_t v7 = v6,
        id v8 = objc_msgSend(v6, sel_mt_topViewController),
        v7,
        v8))
  {
    id v9 = self;
    id v10 = a3;
    id v11 = objc_msgSend(v9, sel_sharedInstance);
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DFB0]), sel_initWithRequest_bag_presentingViewController_, v10, v11, v8);

    id v13 = objc_msgSend(v12, sel_presentEngagement);
    v16[4] = a1;
    v16[5] = a2;
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 1107296256;
    v16[2] = sub_1E3C8D678;
    v16[3] = &block_descriptor_20;
    uint64_t v14 = _Block_copy(v16);
    sub_1E3E775E0();
    swift_release();
    objc_msgSend(v13, sel_addFinishBlock_, v14);
    _Block_release(v14);
  }
  else
  {
    sub_1E3C8E0E4();
    uint64_t v15 = (void *)swift_allocError();
    a1(0, v15);
  }
}

void sub_1E3C8DA20(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  sub_1E3E775E0();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1E3C8DAAC()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1E3C8DABC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3C8DB34(a1, a2, a3, (uint64_t)&unk_1F3F4AB90, (uint64_t)sub_1E3C8E18C, (uint64_t)&block_descriptor_35);
}

uint64_t sub_1E3C8DAE4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3C8DB34(a1, a2, a3, (uint64_t)&unk_1F3F4AB18, (uint64_t)sub_1E3C8E13C, (uint64_t)&block_descriptor_26);
}

uint64_t sub_1E3C8DB0C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3C8DB34(a1, a2, a3, (uint64_t)&unk_1F3F4AAA0, (uint64_t)sub_1E3C8E07C, (uint64_t)&block_descriptor_4);
}

uint64_t sub_1E3C8DB34(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v20 = a2;
  uint64_t v8 = sub_1E3E7B770();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1E3E7B7C0();
  uint64_t v12 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C8E038();
  uint64_t v15 = (void *)sub_1E3E7D6A0();
  id v16 = (void *)swift_allocObject();
  v16[2] = v20;
  v16[3] = a3;
  v16[4] = a1;
  aBlock[4] = v21;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1E3CE65F8;
  aBlock[3] = v22;
  uint64_t v17 = _Block_copy(aBlock);
  sub_1E3E775E0();
  id v18 = a1;
  swift_release();
  sub_1E3E7B7A0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1E3C33F04();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C8E088();
  sub_1E3E7DCC0();
  MEMORY[0x1E4E76FF0](0, v14, v11, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v23);
}

uint64_t type metadata accessor for UIStoreResponseDelegate()
{
  return self;
}

unint64_t sub_1E3C8DDE4()
{
  unint64_t result = qword_1EAE26310;
  if (!qword_1EAE26310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE26310);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StoreResponseDelegateError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3C8DED4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreResponseDelegateError()
{
  return &type metadata for StoreResponseDelegateError;
}

uint64_t method lookup function for UIStoreResponseDelegate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UIStoreResponseDelegate);
}

uint64_t dispatch thunk of UIStoreResponseDelegate.amsurlSession(_:task:handle:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t type metadata accessor for UIStoreResponse()
{
  return self;
}

uint64_t sub_1E3C8DFE4()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_1E3C8E01C(uint64_t a1, uint64_t a2)
{
  sub_1E3C8CF24(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_1E3C8E038()
{
  unint64_t result = qword_1EBFE60A0;
  if (!qword_1EBFE60A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBFE60A0);
  }
  return result;
}

void sub_1E3C8E07C()
{
  sub_1E3C8D82C(*(void (**)(void, void *))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

unint64_t sub_1E3C8E088()
{
  unint64_t result = qword_1EBFDEE20;
  if (!qword_1EBFDEE20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBFDEE10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFDEE20);
  }
  return result;
}

unint64_t sub_1E3C8E0E4()
{
  unint64_t result = qword_1EAE263E8;
  if (!qword_1EAE263E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE263E8);
  }
  return result;
}

void sub_1E3C8E13C()
{
  sub_1E3C8D67C(*(void (**)(void, void *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t objectdestroy_16Tm()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1E3C8E18C()
{
  sub_1E3C8D480(*(void (**)(void, void *))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t UITraitCollection.interfaceIdiomIsMac.getter()
{
  return byte_1EAE263F0;
}

BOOL static UITraitCollection.supportsPointerDevice.getter()
{
  id v0 = objc_msgSend(self, sel_currentTraitCollection);
  id v1 = v0;
  if (byte_1EAE263F0 == 1)
  {

    return 1;
  }
  else
  {
    id v3 = objc_msgSend(v0, sel_userInterfaceIdiom);

    return v3 == (id)1;
  }
}

double static EdgeInsets.zero.getter()
{
  return 0.0;
}

uint64_t EngagementThresholdTracker.__allocating_init(status:provider:accountProvider:onStatusChange:)(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v11 = v10 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__subscription;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26400);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(unsigned char *)(v10 + 112) = a1;
  sub_1E3C1B2BC(a2, v10 + 120);
  sub_1E3C1B2BC((uint64_t)a3, v10 + 160);
  uint64_t v13 = (void *)(v10 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__onStatusChange);
  void *v13 = a4;
  v13[1] = a5;
  sub_1E3C8E46C(a3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a3);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v10;
}

uint64_t EngagementThresholdTracker.init(status:provider:accountProvider:onStatusChange:)(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  swift_defaultActor_initialize();
  uint64_t v11 = v5 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__subscription;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26400);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(unsigned char *)(v5 + 112) = a1;
  sub_1E3C1B2BC(a2, v5 + 120);
  sub_1E3C1B2BC((uint64_t)a3, v5 + 160);
  uint64_t v13 = (uint64_t *)(v5 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__onStatusChange);
  uint64_t *v13 = a4;
  v13[1] = a5;
  sub_1E3C19A6C(a4);
  sub_1E3C8E46C(a3);
  sub_1E3C1A3C4(a4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a3);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v5;
}

uint64_t sub_1E3C8E46C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26418);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v15[-v8];
  uint64_t v10 = v2 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__subscription;
  swift_beginAccess();
  sub_1E3C8E9E8(v10, (uint64_t)v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26400);
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
  uint64_t result = sub_1E3C10CE0((uint64_t)v9, &qword_1EAE26418);
  if (v13 == 1)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1E3E7BDF0();
    swift_getObjectType();
    sub_1E3E775E0();
    sub_1E3E7BCD0();
    sub_1E3E7BCE0();
    swift_unknownObjectRelease();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
    swift_beginAccess();
    sub_1E3C8F874((uint64_t)v6, v10);
    return swift_endAccess();
  }
  return result;
}

uint64_t EngagementThresholdTracker.__allocating_init(asPartOf:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26410);
  sub_1E3E7BE20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE25D0);
  sub_1E3E7BE20();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__subscription;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26400);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(unsigned char *)(v0 + 112) = 0;
  sub_1E3C1B2BC((uint64_t)v6, v0 + 120);
  sub_1E3C1B2BC((uint64_t)v5, v0 + 160);
  id v3 = (void *)(v0 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__onStatusChange);
  *id v3 = 0;
  v3[1] = 0;
  sub_1E3C8E46C(v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  swift_release();
  return v0;
}

uint64_t EngagementThresholdTracker.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26418);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26400);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__subscription;
  swift_beginAccess();
  sub_1E3C8E9E8(v9, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1E3C10CE0((uint64_t)v4, &qword_1EAE26418);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + 160), *(void *)(v1 + 184));
    sub_1E3E7BDF0();
    swift_getObjectType();
    sub_1E3E7BCC0();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  __swift_destroy_boxed_opaque_existential_0(v1 + 120);
  __swift_destroy_boxed_opaque_existential_0(v1 + 160);
  sub_1E3C10CE0(v9, &qword_1EAE26418);
  sub_1E3C1A3C4(*(void *)(v1 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__onStatusChange));
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_1E3C8E9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t EngagementThresholdTracker.__deallocating_deinit()
{
  EngagementThresholdTracker.deinit();

  return MEMORY[0x1F4188210](v0);
}

uint64_t EngagementThresholdTracker._status.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t EngagementThresholdTracker._status.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 112) = a1;
  return result;
}

uint64_t (*EngagementThresholdTracker._status.modify())()
{
  return j__swift_endAccess;
}

uint64_t EngagementThresholdTracker._provider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C1B2BC(v1 + 120, a1);
}

uint64_t EngagementThresholdTracker._accountProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C1B2BC(v1 + 160, a1);
}

uint64_t sub_1E3C8EB84(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E7B830();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, a1, v5, v7);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v9, v5) != *MEMORY[0x1E4F71030]) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = sub_1E3E7D1E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = (void *)swift_allocObject();
  long long v12[2] = 0;
  uint64_t v12[3] = 0;
  void v12[4] = v11;
  sub_1E3C4CF00((uint64_t)v4, (uint64_t)&unk_1EAE26450, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1E3C8ED8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a1;
  *(void *)(v4 + 72) = a4;
  return MEMORY[0x1F4188298](sub_1E3C8EDAC, 0, 0);
}

uint64_t sub_1E3C8EDAC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    return MEMORY[0x1F4188298](sub_1E3C8EE74, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 64) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_1E3C8EE74()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_beginAccess();
  *(unsigned char *)(v1 + 112) = 0;
  uint64_t v2 = *(void (**)(void))(v1 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__onStatusChange);
  if (v2) {
    v2(0);
  }
  swift_release();
  return MEMORY[0x1F4188298](sub_1E3C8EF1C, 0, 0);
}

uint64_t sub_1E3C8EF1C()
{
  **(unsigned char **)(v0 + 64) = *(void *)(v0 + 80) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t EngagementThresholdTracker.update(to:)(char a1)
{
  *(void *)(v2 + 40) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return MEMORY[0x1F4188298](sub_1E3C8EF68, v1, 0);
}

uint64_t sub_1E3C8EF68()
{
  uint64_t v1 = *(void *)(v0 + 40);
  char v2 = *(unsigned char *)(v0 + 48);
  swift_beginAccess();
  *(unsigned char *)(v1 + 112) = v2;
  uint64_t v3 = *(void (**)(void))(v1 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__onStatusChange);
  if (v3) {
    v3(*(unsigned __int8 *)(v0 + 48));
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t EngagementThresholdTracker.status.getter()
{
  v1[13] = v0;
  sub_1E3E7BB40();
  v1[14] = swift_task_alloc();
  uint64_t v2 = sub_1E3E7CA90();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C8F0F0, v0, 0);
}

uint64_t sub_1E3C8F0F0()
{
  uint64_t v1 = v0[13];
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 112) == 3)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
    return v2(3);
  }
  else
  {
    uint64_t v4 = (void *)v0[13];
    uint64_t v5 = v4[18];
    uint64_t v6 = v4[19];
    __swift_project_boxed_opaque_existential_1(v4 + 15, v5);
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
    double v7 = (void *)swift_task_alloc();
    v0[18] = v7;
    *double v7 = v0;
    v7[1] = sub_1E3C8F264;
    return v8(v5, v6);
  }
}

uint64_t sub_1E3C8F264(char a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(unsigned char *)(v4 + 160) = a1;
  *(void *)(v4 + 152) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 104);
  if (v1) {
    uint64_t v6 = sub_1E3C8F440;
  }
  else {
    uint64_t v6 = sub_1E3C8F39C;
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

uint64_t sub_1E3C8F39C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  *(unsigned char *)(v1 + 112) = *(unsigned char *)(v0 + 160);
  uint64_t v2 = (void (**)(void))(v1 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__onStatusChange);
  if (*v2) {
    (*v2)(*(unsigned __int8 *)(v0 + 160));
  }
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v0 + 104) + 112);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_1E3C8F440()
{
  if (qword_1EBFE2DB8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[19];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[15];
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBFE49B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
  sub_1E3E7BB60();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
  sub_1E3E7BB30();
  sub_1E3E7BB20();
  uint64_t v6 = v1;
  swift_getErrorValue();
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[10];
  v0[5] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_1, v7, v8);
  sub_1E3E7BB10();
  sub_1E3C10CE0((uint64_t)(v0 + 2), &qword_1EBFE6190);
  sub_1E3E7BB20();
  sub_1E3E7BB50();
  sub_1E3E7C880();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v10 = *(unsigned __int8 *)(v0[13] + 112);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v10);
}

uint64_t EngagementThresholdTracker.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1E3C8F6D8()
{
  return type metadata accessor for EngagementThresholdTracker();
}

uint64_t type metadata accessor for EngagementThresholdTracker()
{
  uint64_t result = qword_1EAE26430;
  if (!qword_1EAE26430) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E3C8F72C()
{
  sub_1E3C8F810();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for EngagementThresholdTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EngagementThresholdTracker);
}

uint64_t dispatch thunk of EngagementThresholdTracker.__allocating_init(status:provider:accountProvider:onStatusChange:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_1E3C8F810()
{
  if (!qword_1EAE26440)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE26400);
    unint64_t v0 = sub_1E3E7DB90();
    if (!v1) {
      atomic_store(v0, &qword_1EAE26440);
    }
  }
}

uint64_t sub_1E3C8F86C(uint64_t a1)
{
  return sub_1E3C8EB84(a1);
}

uint64_t sub_1E3C8F874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C8F8DC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3C8F914()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C8F954(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C19DC4;
  v5[8] = a1;
  v5[9] = v4;
  return MEMORY[0x1F4188298](sub_1E3C8EDAC, 0, 0);
}

uint64_t sub_1E3C8FA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1E3C20E1C(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1E3C8FA30(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1E3CC7660(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = a1 + 32;
    sub_1E3C340DC();
    do
    {
      v4 += 8;
      uint64_t v5 = sub_1E3E7DC90();
      uint64_t v7 = v6;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      if (v9 >= v8 >> 1) {
        sub_1E3CC7660(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t FetchMAPIRepresentableIntentImplementation.perform(_:objectGraph:)(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(_OWORD *, uint64_t, uint64_t))((char *)&dword_1EAE26460 + dword_1EAE26460);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  uint64_t v8 = *(void *)(a3 + 16);
  *uint64_t v7 = v3;
  v7[1] = sub_1E3C85CD4;
  return v10(a1, a2, v8);
}

uint64_t sub_1E3C8FBF0(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v11 = (uint64_t (*)(_OWORD *, uint64_t, uint64_t))((char *)&dword_1EAE26460 + dword_1EAE26460);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  uint64_t v9 = *(void *)(a4 + 16);
  *uint64_t v8 = v4;
  v8[1] = sub_1E3C856F4;
  return v11(a2, a3, v9);
}

uint64_t sub_1E3C8FCB4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 64) = a3;
  uint64_t v5 = sub_1E3E793A0();
  *(void *)(v3 + 72) = v5;
  *(void *)(v3 + 80) = *(void *)(v5 - 8);
  *(void *)(v3 + 88) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  *(void *)(v3 + 96) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273B0);
  *(void *)(v3 + 104) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29580);
  *(void *)(v3 + 112) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273C0);
  *(void *)(v3 + 120) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29590);
  *(void *)(v3 + 128) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273D0);
  *(void *)(v3 + 136) = swift_task_alloc();
  uint64_t v6 = sub_1E3E78770();
  *(void *)(v3 + 144) = v6;
  *(void *)(v3 + 152) = *(void *)(v6 - 8);
  *(void *)(v3 + 160) = swift_task_alloc();
  uint64_t v7 = sub_1E3E78800();
  *(void *)(v3 + 168) = v7;
  *(void *)(v3 + 176) = *(void *)(v7 - 8);
  *(void *)(v3 + 184) = swift_task_alloc();
  *(_OWORD *)(v3 + 192) = *a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D60);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 208) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1E3C8FFC0;
  return MEMORY[0x1F4127FF8](v3 + 16, v8, v8);
}

uint64_t sub_1E3C8FFC0()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C907C4;
  }
  else {
    uint64_t v2 = sub_1E3C900D4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C900D4()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[17];
  (*(void (**)(void, void, void))(v0[19] + 104))(v0[20], *MEMORY[0x1E4F91600], v0[18]);
  type metadata accessor for FetchMAPIRepresentableIntent();
  FetchMAPIRepresentableIntent.contentType.getter(v2);
  if (v1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v6 = v0[16];
    uint64_t v5 = v0[17];
    uint64_t v7 = v0[14];
    uint64_t v8 = v0[15];
    uint64_t v9 = v0[12];
    uint64_t v10 = v0[13];
    uint64_t v11 = sub_1E3E78790();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 0, 1, v11);
    uint64_t v12 = sub_1E3E78820();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    uint64_t v13 = sub_1E3E787B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_1E3C8FA30(v14);
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1E3E787A0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
    uint64_t v16 = sub_1E3E78810();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
    uint64_t v17 = sub_1E3E77D00();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1E3E5398C(MEMORY[0x1E4FBC860]);
    sub_1E3E5398C(v18);
    sub_1E3E539C8(v18);
    sub_1E3E53BBC(v18);
    sub_1E3E53DF8(v18);
    sub_1E3E53E34(v18);
    sub_1E3E787F0();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v19 = (void *)swift_task_alloc();
    v0[28] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1E3C90574;
    uint64_t v20 = v0[23];
    uint64_t v21 = v0[11];
    return MEMORY[0x1F4145690](v21, v20);
  }
}

uint64_t sub_1E3C90574()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C9089C;
  }
  else {
    uint64_t v2 = sub_1E3C90688;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C90688()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  uint64_t v9 = sub_1E3E79390();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v9);
}

uint64_t sub_1E3C907C4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C9089C()
{
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1E3C90998()
{
  return swift_getWitnessTable();
}

uint64_t sub_1E3C909B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

uint64_t type metadata accessor for FetchMAPIRepresentableIntentImplementation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1E3C909D4(uint64_t a1)
{
  return sub_1E3C90A94(a1, qword_1EBFECCE8);
}

uint64_t sub_1E3C909F8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4800);
  __swift_allocate_value_buffer(v0, qword_1EBFECDE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBFECDE8);
  sub_1E3C90B00();
  return sub_1E3E7BD80();
}

uint64_t sub_1E3C90A70(uint64_t a1)
{
  return sub_1E3C90A94(a1, qword_1EBFECD98);
}

uint64_t sub_1E3C90A94(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE25C8);
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1E3E7BD80();
}

unint64_t sub_1E3C90B00()
{
  unint64_t result = qword_1EBFDEE80;
  if (!qword_1EBFDEE80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBFDEE80);
  }
  return result;
}

uint64_t JSMetricsEventLinter.init(asPartOf:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  sub_1E3E7BE20();

  return swift_release();
}

uint64_t sub_1E3C90B90()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  sub_1E3E7BE20();

  return swift_release();
}

uint64_t JSMetricsEventLinter.processEvent(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C9107C(v1, (uint64_t)v13);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  long long v7 = v13[1];
  *(_OWORD *)(v6 + 24) = v13[0];
  *(_OWORD *)(v6 + 40) = v7;
  *(void *)(v6 + 56) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D98);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1E3E7CA10();
  uint64_t v9 = sub_1E3E7D1E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  id v10[2] = 0;
  void v10[3] = 0;
  v10[4] = &unk_1EAE26478;
  v10[5] = v6;
  v10[6] = v8;
  sub_1E3E775E0();
  sub_1E3C8B220((uint64_t)v5, (uint64_t)&unk_1EAE26480, (uint64_t)v10);
  swift_release();
  return v8;
}

uint64_t sub_1E3C90D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1E3C90D80, 0, 0);
}

uint64_t sub_1E3C90D80()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = (void *)v0[5];
  sub_1E3E7C410();
  swift_bridgeObjectRetain();
  v0[6] = sub_1E3E7C400();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v0[2] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  sub_1E3C91714();
  *uint64_t v3 = v0;
  v3[1] = sub_1E3C90E8C;
  uint64_t v4 = v0[3];
  return MEMORY[0x1F41281F8](v4);
}

uint64_t sub_1E3C90E8C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C9100C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1E3C90FA8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C90FA8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C9100C()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C9107C(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1E3C910E0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C50ED4;
  void v5[4] = v4;
  void v5[5] = v1 + 24;
  v5[3] = a1;
  return MEMORY[0x1F4188298](sub_1E3C90D80, 0, 0);
}

uint64_t sub_1E3C911A0(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C9107C(v1, (uint64_t)v13);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  long long v7 = v13[1];
  *(_OWORD *)(v6 + 24) = v13[0];
  *(_OWORD *)(v6 + 40) = v7;
  *(void *)(v6 + 56) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D98);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1E3E7CA10();
  uint64_t v9 = sub_1E3E7D1E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  id v10[2] = 0;
  void v10[3] = 0;
  v10[4] = &unk_1EAE26488;
  v10[5] = v6;
  v10[6] = v8;
  sub_1E3E775E0();
  sub_1E3C8B220((uint64_t)v5, (uint64_t)&unk_1EAE26490, (uint64_t)v10);
  swift_release();
  return v8;
}

uint64_t sub_1E3C91320(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1E3C50ED4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EAE26260
                                                                                   + dword_1EAE26260);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t initializeWithCopy for JSMetricsEventLinter(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for JSMetricsEventLinter(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for JSMetricsEventLinter(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSMetricsEventLinter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSMetricsEventLinter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSMetricsEventLinter()
{
  return &type metadata for JSMetricsEventLinter;
}

uint64_t sub_1E3C91574(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C19DC4;
  void v5[4] = v4;
  void v5[5] = v1 + 24;
  v5[3] = a1;
  return MEMORY[0x1F4188298](sub_1E3C90D80, 0, 0);
}

uint64_t sub_1E3C91638(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1E3C19DC4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1EAE26260
                                                                                   + dword_1EAE26260);
  return v10(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_1E3C91714()
{
  unint64_t result = qword_1EBFE38D0;
  if (!qword_1EBFE38D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE38D0);
  }
  return result;
}

uint64_t InterestRepository.init(asPartOf:)()
{
  sub_1E3E78B50();
  sub_1E3E7BE20();
  sub_1E3E796B0();
  sub_1E3E7BE20();
  uint64_t v0 = sub_1E3E79650();
  swift_release();
  return v0;
}

ValueMetadata *type metadata accessor for EnqueueMediaIdentifierForPlaybackHelper()
{
  return &type metadata for EnqueueMediaIdentifierForPlaybackHelper;
}

uint64_t EpisodeDetailAlignmentCoordinator.scoutingAligner.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();

  return swift_release();
}

uint64_t sub_1E3C91874()
{
  return sub_1E3C94BE0();
}

uint64_t sub_1E3C9188C(uint64_t a1)
{
  sub_1E3C34078(a1, (uint64_t)v3, &qword_1EBFE0308);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3C34078((uint64_t)v3, (uint64_t)&v2, &qword_1EBFE0308);
  sub_1E3E775E0();
  sub_1E3E7AB00();
  return sub_1E3C10CE0((uint64_t)v3, &qword_1EBFE0308);
}

uint64_t EpisodeDetailAlignmentCoordinator.$scoutingAligner.getter()
{
  return sub_1E3C91AD0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__scoutingAligner, &qword_1EBFE05E0);
}

uint64_t EpisodeDetailAlignmentCoordinator.error.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1E3C919B8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3C91A3C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  sub_1E3E775E0();
  return sub_1E3E7AB00();
}

uint64_t EpisodeDetailAlignmentCoordinator.$error.getter()
{
  return sub_1E3C91AD0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__error, &qword_1EBFE0630);
}

uint64_t sub_1E3C91AD0(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t sub_1E3C91B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return swift_endAccess();
}

uint64_t sub_1E3C91BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v19 - v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16);
  v17((char *)&v19 - v15, a1, v9, v14);
  ((void (*)(char *, char *, uint64_t))v17)(v12, v16, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_1E3E7AAD0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

uint64_t sub_1E3C91D24(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0630);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE05E0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__scoutingAligner;
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
  sub_1E3C34078((uint64_t)v20, (uint64_t)v19, &qword_1EBFE0308);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0308);
  sub_1E3E7AAB0();
  sub_1E3C10CE0((uint64_t)v20, &qword_1EBFE0308);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  uint64_t v14 = v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__error;
  *(void *)&v20[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE07D8);
  sub_1E3E7AAB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14, v8, v5);
  *(void *)(v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_loadScoutingAligner) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_shouldShazamMatch) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_asset) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_alignmentCoordinator) = a1;
  sub_1E3C1B644(v17, v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_transcriptProvider);
  *(void *)(v3 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_workQueue) = v18;
  return v3;
}

void EpisodeDetailAlignmentCoordinator.align(asset:to:)(void *a1, void *a2)
{
  id v112 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v4 - 8);
  long long v90 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE264A8);
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v81 = (char *)v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE264B0);
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v84 = (char *)v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE264B8);
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v87 = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE264C0);
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  long long v91 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE264C8);
  uint64_t v95 = *(void *)(v10 - 8);
  uint64_t v96 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v94 = (char *)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E78B00();
  uint64_t v103 = *(void *)(v12 - 8);
  uint64_t v104 = v12;
  MEMORY[0x1F4188790](v12);
  unint64_t v100 = (char *)v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1E3E79920();
  uint64_t v99 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v15 = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0338);
  MEMORY[0x1F4188790](v16 - 8);
  id v102 = (char *)v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1E3E795E0();
  uint64_t v106 = *(void *)(v18 - 8);
  uint64_t v107 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v105 = (char *)v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1E3E77D00();
  uint64_t v97 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1E3E7A880();
  uint64_t v110 = *(void *)(v23 - 8);
  id v111 = (id)v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = sub_1E3C94D40(a1);
  id v27 = *(void **)(v2 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_asset);
  uint64_t v113 = v2;
  *(void *)(v2 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_asset) = v26;
  id v108 = v26;
  id v109 = v26;

  sub_1E3E7A770();
  id v28 = a1;
  uint64_t v29 = sub_1E3E7A860();
  os_log_type_t v30 = sub_1E3E7D4C0();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v98 = v15;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc();
    char v80 = (void *)swift_slowAlloc();
    id v117 = v80;
    *(_DWORD *)uint64_t v32 = 141558275;
    uint64_t v115 = 1752392040;
    v79[2] = &v116;
    sub_1E3E7DBD0();
    *(_WORD *)(v32 + 12) = 2081;
    v79[1] = v32 + 14;
    id v33 = objc_msgSend(v28, sel_URL);
    sub_1E3E77C90();

    sub_1E3C9515C((unint64_t *)&qword_1EBFE4CB8, MEMORY[0x1E4F276F0]);
    uint64_t v34 = sub_1E3E7E0E0();
    unint64_t v36 = v35;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v22, v20);
    uint64_t v115 = sub_1E3C150B8(v34, v36, (uint64_t *)&v117);
    sub_1E3E7DBD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E3BC5000, v29, v30, "Setting up episode detail alignment coordinator: %{private,mask.hash}s", (uint8_t *)v32, 0x16u);
    uint64_t v37 = v80;
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v37, -1, -1);
    MEMORY[0x1E4E79510](v32, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, id))(v110 + 8))(v25, v111);
  uint64_t v38 = v113;
  id v39 = v109;
  char v40 = sub_1E3E79FB0();

  *(unsigned char *)(v38 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_shouldShazamMatch) = v40 & 1;
  if (v40)
  {
    uint64_t v41 = *MEMORY[0x1E4F91AF0];
    char v43 = v98;
    uint64_t v42 = v99;
    uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 104);
    id v112 = v39;
    uint64_t v45 = v101;
    v44(v98, v41, v101);
    uint64_t v47 = v103;
    uint64_t v46 = v104;
    uint64_t v48 = v100;
    (*(void (**)(char *, void, uint64_t))(v103 + 104))(v100, *MEMORY[0x1E4F91700], v104);
    uint64_t v49 = (uint64_t)v102;
    sub_1E3E79FC0();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v46);
    uint64_t v50 = v43;
    id v51 = v112;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v50, v45);
    uint64_t v53 = v106;
    uint64_t v52 = v107;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v49, 1, v107) == 1)
    {
      sub_1E3C10CE0(v49, &qword_1EBFE0338);
      uint64_t v54 = sub_1E3E79FE0();
      sub_1E3C9515C(&qword_1EAE264E0, MEMORY[0x1E4F91C58]);
      uint64_t v55 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v54 - 8) + 104))(v56, *MEMORY[0x1E4F91C50], v54);
      uint64_t v114 = v55;
      swift_willThrow();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v105, v49, v52);
      __swift_project_boxed_opaque_existential_1((void *)(v38 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_transcriptProvider), *(void *)(v38 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_transcriptProvider + 24));
      id v117 = (id)sub_1E3E796D0();
      uint64_t v115 = *(void *)(v38 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_workQueue);
      id v57 = (id)v115;
      uint64_t v58 = sub_1E3E7D640();
      uint64_t v59 = *(void *)(v58 - 8);
      id v109 = *(id *)(v59 + 56);
      uint64_t v110 = v59 + 56;
      uint64_t v60 = (uint64_t)v90;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v109)(v90, 1, 1, v58);
      id v111 = v57;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE264F8);
      sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
      sub_1E3C10DE8(&qword_1EAE26500, &qword_1EAE264F8);
      sub_1E3C32D34();
      uint64_t v61 = v81;
      sub_1E3E7AD10();
      sub_1E3C10CE0(v60, (uint64_t *)&unk_1EBFE27A0);

      swift_release();
      sub_1E3C12B10(0, &qword_1EAE26508);
      id v108 = (id)MEMORY[0x1E4F1AAB8];
      sub_1E3C10DE8(&qword_1EAE26510, &qword_1EAE264A8);
      uint64_t v62 = v84;
      uint64_t v63 = v83;
      sub_1E3E7AB80();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v61, v63);
      uint64_t v64 = swift_allocObject();
      *(void *)(v64 + 16) = v51;
      uint64_t v65 = swift_allocObject();
      *(void *)(v65 + 16) = sub_1E3C95048;
      *(void *)(v65 + 24) = v64;
      id v112 = v51;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0308);
      uint64_t v66 = v87;
      uint64_t v67 = v86;
      sub_1E3E7A8A0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v62, v67);
      id v117 = (id)sub_1E3E7D6A0();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v109)(v60, 1, 1, v58);
      sub_1E3C10DE8(&qword_1EAE26518, &qword_1EAE264B8);
      uint64_t v68 = v91;
      uint64_t v69 = v89;
      sub_1E3E7AD10();
      sub_1E3C10CE0(v60, (uint64_t *)&unk_1EBFE27A0);

      (*(void (**)(char *, uint64_t))(v88 + 8))(v66, v69);
      uint64_t v70 = swift_allocObject();
      uint64_t v71 = v113;
      swift_weakInit();
      uint64_t v72 = swift_allocObject();
      int v73 = v111;
      *(void *)(v72 + 16) = v111;
      *(void *)(v72 + 24) = v70;
      id v74 = v73;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26520);
      sub_1E3C10DE8(&qword_1EAE26528, &qword_1EAE264C0);
      sub_1E3C10DE8(&qword_1EAE26530, &qword_1EAE26520);
      uint64_t v75 = v94;
      uint64_t v76 = v93;
      sub_1E3E7AC40();
      swift_release();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v68, v76);
      swift_allocObject();
      swift_weakInit();
      sub_1E3C10DE8(&qword_1EAE26538, &qword_1EAE264C8);
      uint64_t v77 = v96;
      uint64_t v78 = sub_1E3E7AD60();

      swift_release();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v75, v77);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v107);
      *(void *)(v71 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_loadScoutingAligner) = v78;
      swift_release();
    }
  }
  else
  {
  }
}

uint64_t sub_1E3C92EEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3E79010();
  *a1 = result;
  return result;
}

uint64_t sub_1E3C92F18(void *a1, void *a2)
{
  uint64_t v4 = sub_1E3E7A880();
  MEMORY[0x1F4188790](v4 - 8);
  id v5 = a2;
  id v6 = a1;
  sub_1E3E7A7E0();
  sub_1E3E7A100();
  swift_allocObject();
  return sub_1E3E7A0F0();
}

uint64_t sub_1E3C92FD0@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = a2(*a1);
  uint64_t result = sub_1E3E7A100();
  uint64_t v6 = MEMORY[0x1E4F91C80];
  a3[3] = result;
  a3[4] = v6;
  *a3 = v4;
  return result;
}

uint64_t sub_1E3C9301C@<X0>(void **a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v5 = sub_1E3E7B770();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E7B7C0();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  MEMORY[0x1F4188790](v8);
  id v39 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1E3E7A880();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  sub_1E3E7A770();
  id v15 = v14;
  id v16 = v14;
  uint64_t v17 = sub_1E3E7A860();
  os_log_type_t v18 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v37 = v6;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v36 = a2;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v38 = v5;
    uint64_t v22 = v21;
    uint64_t v44 = (uint64_t)v14;
    *(void *)&long long aBlock = v21;
    uint64_t v35 = v10;
    *(_DWORD *)uint64_t v20 = 136315138;
    v34[1] = v20 + 4;
    id v23 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v24 = sub_1E3E7CD90();
    uint64_t v44 = sub_1E3C150B8(v24, v25, (uint64_t *)&aBlock);
    sub_1E3E7DBD0();
    uint64_t v6 = v37;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1E3BC5000, v17, v18, "Failed to construct scouting aligner: %s", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v22;
    uint64_t v5 = v38;
    MEMORY[0x1E4E79510](v26, -1, -1);
    id v27 = v20;
    a2 = v36;
    MEMORY[0x1E4E79510](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a2;
  *(void *)(v28 + 24) = v14;
  uint64_t v47 = sub_1E3C954E0;
  uint64_t v48 = v28;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v46 = sub_1E3CE65F8;
  *((void *)&v46 + 1) = &block_descriptor_5;
  uint64_t v29 = _Block_copy(&aBlock);
  id v30 = v14;
  sub_1E3E775E0();
  BOOL v31 = v39;
  sub_1E3E7B7A0();
  uint64_t v44 = MEMORY[0x1E4FBC860];
  sub_1E3C9515C((unint64_t *)&qword_1EBFDEE00, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C10DE8((unint64_t *)&qword_1EBFDEE20, (uint64_t *)&unk_1EBFDEE10);
  uint64_t v32 = v42;
  sub_1E3E7DCC0();
  MEMORY[0x1E4E76FF0](0, v31, v32, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v32, v5);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v41);
  swift_release();
  uint64_t v47 = 0;
  long long aBlock = 0u;
  long long v46 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0308);
  return sub_1E3E7AA30();
}

uint64_t sub_1E3C93530(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = sub_1E3E79FE0();
    sub_1E3C9515C(&qword_1EAE264E0, MEMORY[0x1E4F91C58]);
    swift_allocError();
    *uint64_t v5 = a2;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v4 - 8) + 104))(v5, *MEMORY[0x1E4F91C48], v4);
    swift_getKeyPath();
    swift_getKeyPath();
    id v6 = a2;
    return sub_1E3E7AB00();
  }
  return result;
}

uint64_t sub_1E3C93668(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1E3C34078(a1, (uint64_t)v4, &qword_1EBFE0308);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1E3C34078((uint64_t)v4, (uint64_t)v3, &qword_1EBFE0308);
    sub_1E3E775E0();
    sub_1E3E7AB00();
    sub_1E3C10CE0((uint64_t)v4, &qword_1EBFE0308);
    return swift_release();
  }
  return result;
}

uint64_t EpisodeDetailAlignmentCoordinator.fetchPlayerTimestamp(for:)(double a1)
{
  *(void *)(v2 + 312) = v1;
  *(double *)(v2 + 304) = a1;
  uint64_t v3 = sub_1E3E77D00();
  *(void *)(v2 + 320) = v3;
  *(void *)(v2 + 328) = *(void *)(v3 - 8);
  *(void *)(v2 + 336) = swift_task_alloc();
  *(void *)(v2 + 344) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0810);
  *(void *)(v2 + 352) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  *(void *)(v2 + 360) = swift_task_alloc();
  *(void *)(v2 + 368) = swift_task_alloc();
  *(void *)(v2 + 376) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3C9387C, 0, 0);
}

uint64_t sub_1E3C9387C()
{
  uint64_t v1 = *(void *)(v0 + 312);
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_shouldShazamMatch) & 1) == 0)
  {
    unint64_t v5 = *(void *)(v0 + 304);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v6 = *(uint64_t (**)(__n128))(v0 + 8);
    v7.n128_u64[0] = v5;
    goto LABEL_24;
  }
  uint64_t v43 = OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_asset;
  uint64_t v44 = *(void *)(v0 + 312);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_asset);
  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_URL);
    sub_1E3E77C90();

    uint64_t v4 = 0;
    uint64_t v1 = *(void *)(v0 + 312);
  }
  else
  {
    uint64_t v4 = 1;
  }
  uint64_t v9 = *(void *)(v0 + 368);
  uint64_t v8 = *(void *)(v0 + 376);
  uint64_t v11 = *(void *)(v0 + 344);
  uint64_t v10 = *(void *)(v0 + 352);
  uint64_t v13 = *(void *)(v0 + 320);
  uint64_t v12 = *(void *)(v0 + 328);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, v4, 1, v13);
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_alignmentCoordinator);
  *(void *)(v0 + 384) = v14;
  uint64_t v15 = v14 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_url;
  swift_beginAccess();
  sub_1E3C34078(v15, v9, &qword_1EBFE6070);
  uint64_t v16 = v10 + *(int *)(v11 + 48);
  sub_1E3C34078(v8, v10, &qword_1EBFE6070);
  sub_1E3C34078(v9, v16, &qword_1EBFE6070);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v17(v10, 1, v13) == 1)
  {
    uint64_t v18 = *(void *)(v0 + 376);
    uint64_t v19 = *(void *)(v0 + 320);
    sub_1E3C10CE0(*(void *)(v0 + 368), &qword_1EBFE6070);
    sub_1E3C10CE0(v18, &qword_1EBFE6070);
    if (v17(v16, 1, v19) == 1)
    {
      sub_1E3C10CE0(*(void *)(v0 + 352), &qword_1EBFE6070);
LABEL_18:
      uint64_t v36 = (void *)swift_task_alloc();
      *(void *)(v0 + 392) = v36;
      *uint64_t v36 = v0;
      v36[1] = sub_1E3C93F58;
      double v37 = *(double *)(v0 + 304);
      return NowPlayingAlignmentCoordinator.fetchPlayerTimestamp(for:)(v37);
    }
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 320);
    sub_1E3C34078(*(void *)(v0 + 352), *(void *)(v0 + 360), &qword_1EBFE6070);
    unsigned int v21 = v17(v16, 1, v20);
    uint64_t v23 = *(void *)(v0 + 368);
    uint64_t v22 = *(void *)(v0 + 376);
    uint64_t v24 = *(void *)(v0 + 360);
    if (v21 != 1)
    {
      uint64_t v30 = *(void *)(v0 + 352);
      uint64_t v31 = *(void *)(v0 + 328);
      uint64_t v32 = *(void *)(v0 + 336);
      uint64_t v33 = *(void *)(v0 + 320);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v32, v16, v33);
      sub_1E3C9515C((unint64_t *)&qword_1EBFE0800, MEMORY[0x1E4F276F0]);
      char v34 = sub_1E3E7CCA0();
      uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v35(v32, v33);
      sub_1E3C10CE0(v23, &qword_1EBFE6070);
      sub_1E3C10CE0(v22, &qword_1EBFE6070);
      v35(v24, v33);
      sub_1E3C10CE0(v30, &qword_1EBFE6070);
      if (v34) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
    uint64_t v25 = *(void *)(v0 + 320);
    uint64_t v26 = *(void *)(v0 + 328);
    sub_1E3C10CE0(*(void *)(v0 + 368), &qword_1EBFE6070);
    sub_1E3C10CE0(v22, &qword_1EBFE6070);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  sub_1E3C10CE0(*(void *)(v0 + 352), &qword_1EBFE0810);
LABEL_12:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 120))
  {
    sub_1E3C1B644((long long *)(v0 + 96), v0 + 56);
    id v27 = *(void **)(v44 + v43);
    *(void *)(v0 + 400) = v27;
    if (v27)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE26558);
      v27;
      uint64_t v28 = sub_1E3E78070();
      *(void *)(v0 + 408) = v28;
      uint64_t v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 416) = v29;
      *uint64_t v29 = v0;
      v29[1] = sub_1E3C94104;
      return MEMORY[0x1F4182DC0](v0 + 256, v28);
    }
    uint64_t v40 = sub_1E3E79FE0();
    sub_1E3C9515C(&qword_1EAE264E0, MEMORY[0x1E4F91C58]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v40 - 8) + 104))(v41, *MEMORY[0x1E4F91C40], v40);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  }
  else
  {
    sub_1E3C10CE0(v0 + 96, &qword_1EBFE0308);
    uint64_t v38 = sub_1E3E79FE0();
    sub_1E3C9515C(&qword_1EAE264E0, MEMORY[0x1E4F91C58]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v38 - 8) + 104))(v39, *MEMORY[0x1E4F91C38], v38);
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = *(uint64_t (**)(__n128))(v0 + 8);
LABEL_24:
  return v6(v7);
}

uint64_t sub_1E3C93F58(double a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = *(uint64_t (**)(__n128))(v4 + 8);
  if (!v1) {
    v5.n128_f64[0] = a1;
  }
  return v6(v5);
}

uint64_t sub_1E3C94104()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v3 = sub_1E3C94608;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 400);
    swift_release();

    id v3 = sub_1E3C94224;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1E3C94224()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  sub_1E3C34078((uint64_t)(v0 + 2), (uint64_t)(v0 + 27), &qword_1EBFE0310);
  if (v0[30])
  {
    __swift_project_boxed_opaque_existential_1(v0 + 27, v0[30]);
    sub_1E3E79130();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 27));
  }
  else
  {
    sub_1E3C10CE0((uint64_t)(v0 + 27), &qword_1EBFE0310);
  }
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  uint64_t v3 = sub_1E3E7D980();
  if (v5.n128_f64[0] < 0.0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v5.n128_u64[0];
    uint64_t v9 = (void *)swift_task_alloc();
    v0[54] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1E3C943D0;
    v5.n128_u64[0] = v0[38];
    v6.n128_u64[0] = 0;
    v7.n128_u64[0] = v8;
    uint64_t v3 = v1;
    uint64_t v4 = v2;
  }
  return MEMORY[0x1F4144D50](v3, v4, v5, v6, v7);
}

uint64_t sub_1E3C943D0(double a1)
{
  uint64_t v3 = *v2;
  *(double *)(v3 + 440) = a1;
  *(void *)(v3 + 448) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1E3C946BC;
  }
  else {
    uint64_t v4 = sub_1E3C944E8;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3C944E8()
{
  sub_1E3C34078((uint64_t)(v0 + 2), (uint64_t)(v0 + 22), &qword_1EBFE0310);
  if (v0[25])
  {
    __swift_project_boxed_opaque_existential_1(v0 + 22, v0[25]);
    sub_1E3E79140();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 22));
  }
  else
  {
    sub_1E3C10CE0((uint64_t)(v0 + 22), &qword_1EBFE0310);
  }
  sub_1E3C10CE0((uint64_t)(v0 + 2), &qword_1EBFE0310);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 7));
  unint64_t v1 = v0[55];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(__n128))v0[1];
  v3.n128_u64[0] = v1;
  return v2(v3);
}

uint64_t sub_1E3C94608()
{
  unint64_t v1 = *(void **)(v0 + 400);
  swift_release();

  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3C946BC()
{
  sub_1E3C34078((uint64_t)(v0 + 2), (uint64_t)(v0 + 17), &qword_1EBFE0310);
  if (v0[20])
  {
    __swift_project_boxed_opaque_existential_1(v0 + 17, v0[20]);
    sub_1E3E79140();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 17));
  }
  else
  {
    sub_1E3C10CE0((uint64_t)(v0 + 17), &qword_1EBFE0310);
  }
  sub_1E3C10CE0((uint64_t)(v0 + 2), &qword_1EBFE0310);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t EpisodeDetailAlignmentCoordinator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__scoutingAligner;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE05E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__error;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0630);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_transcriptProvider);
  swift_release();

  return v0;
}

uint64_t EpisodeDetailAlignmentCoordinator.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__scoutingAligner;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE05E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__error;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0630);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator_transcriptProvider);
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1E3C94A10(void *a1, void *a2)
{
}

uint64_t sub_1E3C94A34(double a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C94ACC;
  return EpisodeDetailAlignmentCoordinator.fetchPlayerTimestamp(for:)(a1);
}

uint64_t sub_1E3C94ACC(double a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(__n128))(v7 + 8);
  if (!v1) {
    v4.n128_f64[0] = a1;
  }
  return v5(v4);
}

uint64_t sub_1E3C94BCC()
{
  return sub_1E3C94BE0();
}

uint64_t sub_1E3C94BE0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();

  return swift_release();
}

uint64_t sub_1E3C94C58(uint64_t a1)
{
  sub_1E3C34078(a1, (uint64_t)v2, &qword_1EBFE0310);
  return sub_1E3DAC03C((uint64_t)v2);
}

void *sub_1E3C94C9C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_1E3E7E010();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

id sub_1E3C94D40(void *a1)
{
  id v23 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E77D00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - v10;
  id v12 = objc_msgSend(v23, sel_URL, v9);
  sub_1E3E77C90();

  LOBYTE(v12) = sub_1E3E77BA0();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v11, v4);
  if ((v12 & 1) == 0)
  {
    sub_1E3E79D40();
    id v14 = objc_msgSend(v23, sel_URL);
    sub_1E3E77C90();

    uint64_t v15 = sub_1E3E79D30();
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      sub_1E3E79D20();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
        id v19 = objc_allocWithZone(MEMORY[0x1E4F166C8]);
        uint64_t v20 = (void *)sub_1E3E77C40();
        id v21 = objc_msgSend(v19, sel_initWithURL_options_, v20, 0);

        v13(v7, v4);
        return v21;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    }
    sub_1E3C10CE0((uint64_t)v3, &qword_1EBFE6070);
  }
  id v17 = v23;

  return v17;
}

uint64_t sub_1E3C95010()
{
  return swift_deallocObject();
}

uint64_t sub_1E3C95048(void *a1)
{
  return sub_1E3C92F18(a1, *(void **)(v1 + 16));
}

uint64_t sub_1E3C95050()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C95088@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  uint64_t result = sub_1E3E7A100();
  uint64_t v6 = MEMORY[0x1E4F91C80];
  a2[3] = result;
  a2[4] = v6;
  *a2 = v4;
  return result;
}

uint64_t sub_1E3C950D4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3C9510C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C9514C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3C9301C(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1E3C95154(uint64_t a1)
{
  return sub_1E3C93668(a1);
}

uint64_t sub_1E3C9515C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3C951A4()
{
  return sub_1E3C94BE0();
}

uint64_t sub_1E3C951CC(uint64_t a1)
{
  sub_1E3C34078(a1, (uint64_t)v2, &qword_1EBFE0310);
  return sub_1E3DAC03C((uint64_t)v2);
}

uint64_t sub_1E3C95210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3C91B38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__scoutingAligner, &qword_1EBFE05E0);
}

uint64_t sub_1E3C95238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1E3C91BA8(a1, a2, a3, a4, &qword_1EAE26580, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__scoutingAligner, &qword_1EBFE05E0);
}

uint64_t sub_1E3C95268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3C91B38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__error, &qword_1EBFE0630);
}

uint64_t sub_1E3C95290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1E3C91BA8(a1, a2, a3, a4, &qword_1EAE26578, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI33EpisodeDetailAlignmentCoordinator__error, &qword_1EBFE0630);
}

uint64_t sub_1E3C952C0()
{
  return type metadata accessor for EpisodeDetailAlignmentCoordinator();
}

uint64_t type metadata accessor for EpisodeDetailAlignmentCoordinator()
{
  uint64_t result = qword_1EAE26568;
  if (!qword_1EAE26568) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E3C95314()
{
  sub_1E3C95450(319, &qword_1EBFE05E8, &qword_1EBFE0308);
  if (v0 <= 0x3F)
  {
    sub_1E3C95450(319, &qword_1EBFE0638, &qword_1EBFE07D8);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for EpisodeDetailAlignmentCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EpisodeDetailAlignmentCoordinator);
}

void sub_1E3C95450(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_1E3E7AB10();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1E3C954A0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3C954E0()
{
  return sub_1E3C93530(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t ImageResizer.resize(image:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1E3E78D20();
  unint64_t v8 = v7;
  unint64_t v10 = v9;
  sub_1E3E78D40();
  v11.n128_u64[0] = v13.n128_u64[0];
  id v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128, __n128, __n128))(a4 + 8);
  v13.n128_u64[0] = v8;
  v14.n128_u64[0] = v10;

  return v12(a1, a3, a4, v13, v14, v11);
}

uint64_t dispatch thunk of ImageResizer.resize(image:to:displayScale:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ImageResizer.resizedImage(at:to:displayScale:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

unint64_t static EnqueueShowForPlaybackIntent.kind.getter()
{
  return 0xD00000000000001CLL;
}

id EnqueueShowForPlaybackIntent.showID.getter()
{
  id v1 = *(id *)v0;
  sub_1E3C1161C(*(id *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  return v1;
}

id EnqueueShowForPlaybackIntent.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 24);
  *(void *)a1 = v2;
  unsigned __int8 v3 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 8) = v3;
  return sub_1E3C72848(v2, v3);
}

uint64_t EnqueueShowForPlaybackIntent.init(showID:location:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = *a4;
  char v6 = *((unsigned char *)a4 + 8);
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = v5;
  *(unsigned char *)(a5 + 32) = v6;
  return result;
}

void sub_1E3C95634(void *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x80000001E3E8AB30;
}

void destroy for EnqueueShowForPlaybackIntent(uint64_t a1)
{
  sub_1E3C1168C(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t v2 = *(void **)(a1 + 24);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 32);

  sub_1E3C5B530(v2, v3);
}

uint64_t initializeWithCopy for EnqueueShowForPlaybackIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1E3C1161C(*(id *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  unint64_t v7 = *(void **)(v2 + 24);
  LOBYTE(v2) = *(unsigned char *)(v2 + 32);
  sub_1E3C72848(v7, v2);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v2;
  return a1;
}

uint64_t assignWithCopy for EnqueueShowForPlaybackIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1E3C1161C(*(id *)a2, v5, v6);
  unint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1E3C1168C(v7, v8, v9);
  unint64_t v10 = *(void **)(v2 + 24);
  LOBYTE(v2) = *(unsigned char *)(v2 + 32);
  sub_1E3C72848(v10, v2);
  __n128 v11 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v10;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v2;
  sub_1E3C5B530(v11, v12);
  return a1;
}

uint64_t assignWithTake for EnqueueShowForPlaybackIntent(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1E3C1168C(v5, v6, v7);
  char v8 = *(unsigned char *)(a2 + 32);
  char v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_1E3C5B530(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for EnqueueShowForPlaybackIntent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EnqueueShowForPlaybackIntent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EnqueueShowForPlaybackIntent()
{
  return &type metadata for EnqueueShowForPlaybackIntent;
}

uint64_t EngagementThresholdMetFieldsProvider.init(tracker:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t EngagementThresholdMetFieldsProvider.init(asPartOf:)@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26410);
  sub_1E3E7BE20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE25D0);
  sub_1E3E7BE20();
  type metadata accessor for EngagementThresholdTracker();
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v3 = v2 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__subscription;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26400);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(unsigned char *)(v2 + 112) = 0;
  sub_1E3C1B2BC((uint64_t)v8, v2 + 120);
  sub_1E3C1B2BC((uint64_t)v7, v2 + 160);
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC10PodcastsUI26EngagementThresholdTracker__onStatusChange);
  *uint64_t v5 = 0;
  v5[1] = 0;
  sub_1E3C8E46C(v7);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t EngagementThresholdMetFieldsProvider.addExpensiveMetricsFields(into:using:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1E3C959F0, 0, 0);
}

uint64_t sub_1E3C959F0()
{
  __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 24));
  if (qword_1EAE23FF8 != -1) {
    swift_once();
  }
  if (MetricsFieldsBuilder.shouldDecorate(basedOn:)(qword_1EAE24C50))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 32) = v1;
    void *v1 = v0;
    v1[1] = sub_1E3C95B24;
    return EngagementThresholdTracker.status.getter();
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_1E3C95B24(char a1)
{
  *(unsigned char *)(*(void *)v1 + 41) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1E3C95C24, 0, 0);
}

uint64_t sub_1E3C95C24()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v0 + 40) = 3 - *(unsigned char *)(v0 + 41);
  sub_1E3E788E0();
  __swift_mutable_project_boxed_opaque_existential_1(v1, *(void *)(v1 + 24));
  MetricsFieldsBuilder.addValue<A>(_:forField:)();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3C95D10()
{
  return sub_1E3E7C440();
}

uint64_t sub_1E3C95D28(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1E3C19DC4;
  v4[2] = a1;
  v4[3] = *v1;
  return MEMORY[0x1F4188298](sub_1E3C959F0, 0, 0);
}

ValueMetadata *type metadata accessor for EngagementThresholdMetFieldsProvider()
{
  return &type metadata for EngagementThresholdMetFieldsProvider;
}

uint64_t DownloadEpisodesIntentImplementation.perform(_:objectGraph:)(uint64_t *a1, uint64_t a2)
{
  v2[15] = a2;
  uint64_t v4 = sub_1E3E7D1E0();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a1;
  v2[18] = v5;
  v2[19] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5828);
  char v8 = (void *)swift_task_alloc();
  v2[20] = v8;
  *char v8 = v2;
  v8[1] = sub_1E3C95F14;
  return MEMORY[0x1F4127FF8](v2 + 2, v7, v7);
}

uint64_t sub_1E3C95F14()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3C96A80, 0, 0);
  }
  else
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 176) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_1E3C960B4;
    return MEMORY[0x1F4127FF8](v2 + 96, v3, v3);
  }
}

uint64_t sub_1E3C960B4()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C96AE4;
  }
  else {
    uint64_t v2 = sub_1E3C961C8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C961C8()
{
  v0[24] = v0[12];
  uint64_t ObjectType = swift_getObjectType();
  sub_1E3C17C5C();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[25] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C96290;
  uint64_t v3 = v0[18];
  return MEMORY[0x1F4145A40](v3, ObjectType);
}

uint64_t sub_1E3C96290(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 144);
  uint64_t v3 = *(void *)(*(void *)v1 + 136);
  uint64_t v4 = *(void *)(*(void *)v1 + 128);
  *(void *)(*(void *)v1 + 208) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x1F4188298](sub_1E3C9640C, 0, 0);
}

uint64_t sub_1E3C9640C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C964CC;
  return MEMORY[0x1F4127FF8](v0 + 56, v1, v1);
}

uint64_t sub_1E3C964CC()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3C96B50;
  }
  else {
    uint64_t v2 = sub_1E3C965E0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C965E0()
{
  uint64_t v1 = v0[19];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
  v0[14] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[29] = v2;
  sub_1E3C96CF8();
  *uint64_t v2 = v0;
  v2[1] = sub_1E3C966E4;
  return MEMORY[0x1F41281F8](v0 + 13);
}

uint64_t sub_1E3C966E4()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C96BC8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1E3C96800;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C96800()
{
  uint64_t v1 = v0[13];
  v0[31] = v1;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[32] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1E3C968D0;
  uint64_t v5 = v0[26];
  return MEMORY[0x1F4144760](v1, 0, 3, v5, v2, v3);
}

uint64_t sub_1E3C968D0()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3C96C60;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1E3C969EC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3C969EC()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1E3C96A80()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C96AE4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C96B50()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C96BC8()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3C96C60()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1E3C96CF8()
{
  unint64_t result = qword_1EAE265B0;
  if (!qword_1EAE265B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE265B0);
  }
  return result;
}

uint64_t sub_1E3C96D4C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1E3C17E2C;
  return DownloadEpisodesIntentImplementation.perform(_:objectGraph:)(a2, a3);
}

ValueMetadata *type metadata accessor for DownloadEpisodesIntentImplementation()
{
  return &type metadata for DownloadEpisodesIntentImplementation;
}

uint64_t NowPlayingAlignmentCoordinator.__allocating_init(asPartOf:)()
{
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE265D0);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v1 = (char *)&v21 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AssetCaches();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE02E8);
  MEMORY[0x1F4188790](v9 - 8);
  id v21 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0318);
  MEMORY[0x1F4188790](v11 - 8);
  __n128 v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = 0;
  memset(v30, 0, sizeof(v30));
  uint64_t v29 = 0;
  memset(v28, 0, sizeof(v28));
  uint64_t v14 = sub_1E3E792A0();
  memset(v26, 0, sizeof(v26));
  uint64_t v27 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0348);
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  sub_1E3E7C8C0();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v8[*(int *)(v6 + 24)], v2);
  sub_1E3C97210((uint64_t)v8);
  sub_1E3E786A0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v15 = v22;
  uint64_t v16 = sub_1E3E78660();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v1, v15);
  uint64_t v24 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0300);
  sub_1E3C9726C();
  uint64_t v17 = (uint64_t)v21;
  sub_1E3E78570();
  swift_release();
  type metadata accessor for PlaybackController();
  sub_1E3E7C8C0();
  uint64_t v18 = v24;
  swift_allocObject();
  uint64_t v19 = NowPlayingAlignmentCoordinator.init(fullTimelineAligner:scoutingAligner:alignment:transcriptModel:transcriptProvider:alignmentCache:playbackController:)((uint64_t)v30, (uint64_t)v28, (uint64_t)v26, (uint64_t)v13, &v25, v17, v18);
  swift_release();
  return v19;
}

uint64_t sub_1E3C97210(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetCaches();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1E3C9726C()
{
  unint64_t result = qword_1EBFE02F8;
  if (!qword_1EBFE02F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE0300);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE02F8);
  }
  return result;
}

uint64_t EpisodeDetailAlignmentCoordinator.__allocating_init(asPartOf:)()
{
  type metadata accessor for NowPlayingAlignmentCoordinator(0);
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0348);
  sub_1E3E7C8C0();
  sub_1E3C8E038();
  uint64_t v0 = sub_1E3E7D600();
  swift_allocObject();
  uint64_t v1 = sub_1E3C91D24(v4, &v3, v0);
  swift_release();
  return v1;
}

unint64_t static ReevaluateAutoDownloadsIntent.kind.getter()
{
  return 0xD00000000000001DLL;
}

void sub_1E3C973D4(void *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x80000001E3E8ACC0;
}

ValueMetadata *type metadata accessor for ReevaluateAutoDownloadsIntent()
{
  return &type metadata for ReevaluateAutoDownloadsIntent;
}

void sub_1E3C97404()
{
  qword_1EAE265D8 = 0x4028000000000000;
}

double sub_1E3C97414()
{
  return *(double *)v0;
}

double sub_1E3C9741C()
{
  return *(double *)(v0 + 8);
}

double sub_1E3C97424()
{
  return *(double *)(v0 + 16);
}

double sub_1E3C9742C()
{
  return *(double *)(v0 + 24);
}

double sub_1E3C97434()
{
  return *(double *)(v0 + 40);
}

id sub_1E3C9743C()
{
  return *(id *)(v0 + 48);
}

uint64_t sub_1E3C97444()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1E3C97474()
{
  return *(id *)(v0 + 72);
}

double sub_1E3C9747C()
{
  return *(double *)(v0 + 80);
}

double sub_1E3C97484()
{
  return *(double *)(v0 + 96);
}

double sub_1E3C9748C()
{
  return *(double *)(v0 + 88);
}

uint64_t sub_1E3C97494()
{
  return *(unsigned __int8 *)(v0 + 104);
}

id sub_1E3C9749C()
{
  return *(id *)(v0 + 112);
}

id sub_1E3C974A4()
{
  return *(id *)(v0 + 120);
}

double sub_1E3C974AC()
{
  return *(double *)(v0 + 128);
}

id sub_1E3C974B4()
{
  return *(id *)(v0 + 136);
}

id sub_1E3C974BC()
{
  return *(id *)(v0 + 144);
}

id sub_1E3C974C4()
{
  return *(id *)(v0 + 152);
}

uint64_t sub_1E3C974CC()
{
  return *(void *)(v0 + 160);
}

uint64_t sub_1E3C974D8()
{
  return *(void *)(v0 + 176);
}

uint64_t sub_1E3C974E4()
{
  return *(void *)(v0 + 192);
}

uint64_t sub_1E3C974F0()
{
  return *(void *)(v0 + 208);
}

uint64_t sub_1E3C974FC()
{
  return *(void *)(v0 + 224);
}

BOOL static EpisodeUpsellBannerView.EpisodeUpsellBannerType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EpisodeUpsellBannerView.EpisodeUpsellBannerType.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t EpisodeUpsellBannerView.EpisodeUpsellBannerType.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

BOOL sub_1E3C97590(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

id EpisodeUpsellBannerView.artworkContainerView.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_artworkContainerView);
}

id sub_1E3C975B4()
{
  return sub_1E3C97714(&OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleLabel, (uint64_t (*)(uint64_t))sub_1E3C975D4);
}

id sub_1E3C975D4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1E3C982E8(v6);
  uint64_t v1 = v7;
  uint64_t v2 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  long long v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 128))(v1, v2);
  objc_msgSend(v0, sel_setFont_, v3);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  id v4 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v4);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v0;
}

id sub_1E3C976F4()
{
  return sub_1E3C97714(&OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___dismissButton, (uint64_t (*)(uint64_t))sub_1E3C97778);
}

id sub_1E3C97714(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1E3C97778(uint64_t a1)
{
  sub_1E3C982E8(v33);
  uint64_t v2 = v34;
  uint64_t v3 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  double v4 = -(*(double (**)(uint64_t, uint64_t))(v3 + 72))(v2, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  sub_1E3C982E8(v33);
  uint64_t v5 = v34;
  uint64_t v6 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  double v7 = -(*(double (**)(uint64_t, uint64_t))(v6 + 80))(v5, v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  sub_1E3C982E8(v33);
  uint64_t v8 = v34;
  uint64_t v9 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  double v10 = -(*(double (**)(uint64_t, uint64_t))(v9 + 80))(v8, v9);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  sub_1E3C982E8(v33);
  uint64_t v11 = v34;
  uint64_t v12 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  double v13 = -(*(double (**)(uint64_t, uint64_t))(v12 + 80))(v11, v12);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  uint64_t v14 = (objc_class *)type metadata accessor for CloseButton();
  uint64_t v15 = (char *)objc_allocWithZone(v14);
  uint64_t v16 = (double *)&v15[OBJC_IVAR____TtC10PodcastsUIP33_7356E91B5F9CFCB46676D7EB93CF2B4411CloseButton_touchInsets];
  *uint64_t v16 = v4;
  v16[1] = v7;
  v16[2] = v10;
  v16[3] = v13;
  v32.receiver = v15;
  v32.super_class = v14;
  id v17 = objc_msgSendSuper2(&v32, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1E3C982E8(v33);
  uint64_t v18 = v34;
  uint64_t v19 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  uint64_t v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 48))(v18, v19);
  id v21 = objc_msgSend(self, sel_configurationWithFont_, v20);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  sub_1E3C982E8(v33);
  uint64_t v22 = v34;
  uint64_t v23 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  (*(void (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23);
  id v24 = v21;
  long long v25 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v25, v24);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  objc_msgSend(v17, sel_setImage_forState_, v26, 0);
  id v27 = v17;
  sub_1E3C982E8(v33);
  uint64_t v28 = v34;
  uint64_t v29 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  uint64_t v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 64))(v28, v29);
  objc_msgSend(v27, sel_setTintColor_, v30);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  objc_msgSend(v27, sel_addTarget_action_forControlEvents_, a1, sel_closeButtonTapped, 64);

  return v27;
}

id sub_1E3C97AF8()
{
  uint64_t v1 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___tapBannerGestureRecognizer;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___tapBannerGestureRecognizer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___tapBannerGestureRecognizer);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D38]), sel_initWithTarget_action_, v0, sel_cellTapped);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1E3C97B94(char *a1, uint64_t a2, void *a3)
{
  id v3 = *(void (**)(uint64_t))&a1[*a3];
  if (v3)
  {
    uint64_t v5 = a1;
    uint64_t v4 = sub_1E3C19A6C((uint64_t)v3);
    v3(v4);
    sub_1E3C1A3C4((uint64_t)v3);
  }
}

id sub_1E3C97C18()
{
  uint64_t v1 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___textLayout;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___textLayout);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___textLayout);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1940]), sel_init);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1E3C97C8C()
{
  uint64_t v1 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleLabelCenterYConstraint;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleLabelCenterYConstraint);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleLabelCenterYConstraint);
  }
  else
  {
    id v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel), sel_centerYAnchor);
    id v5 = sub_1E3C97C18();
    id v6 = objc_msgSend(v5, sel_centerYAnchor);

    id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
    uint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1E3C97D5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleTopAnchorConstraint;
  id v3 = *(void **)(v0
                + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleTopAnchorConstraint);
  id v4 = v3;
  if (v3 == (void *)1)
  {
    sub_1E3C982E8(v16);
    uint64_t v5 = v17;
    uint64_t v6 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 152))(v5, v6);
    if (v8)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
      id v4 = 0;
    }
    else
    {
      double v9 = *(double *)&v7;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
      id v10 = sub_1E3C975B4();
      id v11 = objc_msgSend(v10, sel_topAnchor);

      id v12 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel), sel_bottomAnchor);
      id v4 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v12, v9);
    }
    double v13 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v4;
    id v14 = v4;
    sub_1E3C9BBC4(v13);
  }
  sub_1E3C9BBD4(v3);
  return v4;
}

void *sub_1E3C97EA8()
{
  return sub_1E3C980B4(&OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleBottomConstraint, (uint64_t (*)(uint64_t))sub_1E3C97EC8);
}

id sub_1E3C97EC8(uint64_t a1)
{
  sub_1E3C982E8(v19);
  uint64_t v2 = v20;
  uint64_t v3 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 176))(v2, v3);
  if (v5)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    sub_1E3C982E8(v19);
    uint64_t v11 = v20;
    uint64_t v12 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 184))(v11, v12);
    if (v14)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
      return 0;
    }
    double v15 = *(double *)&v13;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    id v16 = sub_1E3C975B4();
    id v8 = objc_msgSend(v16, sel_bottomAnchor);

    id v9 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView), sel_bottomAnchor);
    id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, v15);
  }
  else
  {
    double v6 = *(double *)&v4;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    id v7 = sub_1E3C975B4();
    id v8 = objc_msgSend(v7, sel_firstBaselineAnchor);

    id v9 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView), sel_bottomAnchor);
    id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, v6);
  }
  id v17 = v10;

  return v17;
}

void *sub_1E3C98094()
{
  return sub_1E3C980B4(&OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleTopConstraint, (uint64_t (*)(uint64_t))sub_1E3C98124);
}

void *sub_1E3C980B4(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  char v5 = v4;
  if (v4 == (void *)1)
  {
    char v5 = (void *)a2(v2);
    double v6 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v5;
    id v7 = v5;
    sub_1E3C9BBC4(v6);
  }
  sub_1E3C9BBD4(v4);
  return v5;
}

id sub_1E3C98124(uint64_t a1)
{
  sub_1E3C982E8(v17);
  uint64_t v2 = v18;
  uint64_t v3 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 160))(v2, v3);
  if (v5)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    sub_1E3C982E8(v17);
    uint64_t v10 = v18;
    uint64_t v11 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 168))(v10, v11);
    if (v13)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
      return 0;
    }
    double v14 = *(double *)&v12;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    id v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                               + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel), sel_topAnchor));
    id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                               + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView), sel_topAnchor));
    id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, v14);
  }
  else
  {
    double v6 = *(double *)&v4;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    id v7 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel), sel_firstBaselineAnchor);
    id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                               + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView), sel_topAnchor));
    id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, v6);
  }
  id v15 = v9;

  return v15;
}

uint64_t sub_1E3C982E8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___config;
  swift_beginAccess();
  sub_1E3C9BCE0(v3, (uint64_t)&v16);
  if (*((void *)&v17 + 1)) {
    return sub_1E3C1B644(&v16, (uint64_t)a1);
  }
  sub_1E3C9BBE4((uint64_t)&v16);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_bannerType))
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_bannerType) == 1)
    {
      sub_1E3C9B1F4((uint64_t)&v16);
      a1[3] = &type metadata for iOSEpisodeUpsellConfiguration;
      a1[4] = &off_1F3F4B468;
    }
    else
    {
      sub_1E3C9B42C((uint64_t)&v16);
      a1[3] = &type metadata for iOSNowPlayingEpisodeUpsellConfiguration;
      a1[4] = &off_1F3F4B528;
    }
  }
  else
  {
    sub_1E3C9AE88((uint64_t)&v16);
    a1[3] = &type metadata for MacEpisodeUpsellConfiguration;
    a1[4] = &off_1F3F4B3A8;
  }
  char v5 = (_OWORD *)swift_allocObject();
  long long v6 = v27;
  long long v7 = v29[0];
  v5[13] = v28;
  v5[14] = v7;
  *(_OWORD *)((char *)v5 + 233) = *(_OWORD *)((char *)v29 + 9);
  long long v8 = v23;
  long long v9 = v25;
  long long v10 = v26;
  v5[9] = v24;
  v5[10] = v9;
  v5[11] = v10;
  v5[12] = v6;
  long long v11 = v19;
  long long v12 = v21;
  long long v13 = v22;
  void v5[5] = v20;
  v5[6] = v12;
  *a1 = v5;
  v5[7] = v13;
  v5[8] = v8;
  long long v14 = v17;
  v5[1] = v16;
  void v5[2] = v14;
  v5[3] = v18;
  void v5[4] = v11;
  sub_1E3C1B2BC((uint64_t)a1, (uint64_t)v15);
  swift_beginAccess();
  sub_1E3C9BD4C((uint64_t)v15, v3);
  return swift_endAccess();
}

void EpisodeUpsellBannerView.__allocating_init(frame:bannerType:)(char *a1, double a2, double a3, double a4, double a5)
{
  id v11 = objc_allocWithZone(v5);
  EpisodeUpsellBannerView.init(frame:bannerType:)(a1, a2, a3, a4, a5);
}

void EpisodeUpsellBannerView.init(frame:bannerType:)(char *a1, double a2, double a3, double a4, double a5)
{
  char v10 = *a1;
  id v11 = &v5[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapBannerBlock];
  *(void *)id v11 = 0;
  *((void *)v11 + 1) = 0;
  long long v12 = &v5[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapCloseButtonBlock];
  *(void *)long long v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v13 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_artworkContainerView;
  id v14 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  id v15 = v5;
  id v16 = objc_msgSend(v14, sel_init);
  id v17 = objc_msgSend(v16, sel_layer);
  objc_msgSend(v17, sel_setMasksToBounds_, 1);

  *(void *)&v5[v13] = v16;
  uint64_t v18 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel;
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v20 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v19, sel_setTextColor_, v20);

  objc_msgSend(v19, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(void *)&v15[v18] = v19;
  *(void *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___dismissButton] = 0;
  *(void *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___tapBannerGestureRecognizer] = 0;
  *(void *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___textLayout] = 0;
  *(void *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleLabelCenterYConstraint] = 0;
  *(void *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleTopAnchorConstraint] = 1;
  *(void *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleBottomConstraint] = 1;
  *(void *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleTopConstraint] = 1;
  long long v21 = &v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___config];
  *(_OWORD *)long long v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  *((void *)v21 + 4) = 0;
  *(void *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_hoverRecognizer] = 0;
  v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering] = 0;
  *(void *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_objectGraph] = 0;
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, a2, a3, a4, a5);
  *(void *)&v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView] = v22;
  v15[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_bannerType] = v10;

  v177.receiver = v15;
  v177.super_class = (Class)type metadata accessor for EpisodeUpsellBannerView();
  long long v23 = (char *)objc_msgSendSuper2(&v177, sel_initWithFrame_, a2, a3, a4, a5);
  uint64_t v24 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView;
  uint64_t v25 = *(void *)&v23[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView];
  long long v26 = v23;
  objc_msgSend(v26, sel_addSubview_, v25);
  uint64_t v27 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_artworkContainerView;
  objc_msgSend(v26, sel_addSubview_, *(void *)&v26[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_artworkContainerView]);
  uint64_t v28 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel;
  objc_msgSend(*(id *)&v23[v24], sel_addSubview_, *(void *)&v26[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel]);
  id v29 = *(id *)&v23[v24];
  id v30 = sub_1E3C975B4();
  objc_msgSend(v29, sel_addSubview_, v30);

  id v31 = *(id *)&v23[v24];
  id v32 = sub_1E3C976F4();
  objc_msgSend(v31, sel_addSubview_, v32);

  id v33 = *(id *)&v23[v24];
  id v34 = sub_1E3C97C18();
  objc_msgSend(v33, sel_addLayoutGuide_, v34);

  objc_msgSend(*(id *)&v23[v24], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v35 = v27;
  objc_msgSend(*(id *)&v26[v27], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v173 = v28;
  objc_msgSend(*(id *)&v26[v28], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v36 = sub_1E3C975B4();
  objc_msgSend(v36, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v37 = sub_1E3C976F4();
  objc_msgSend(v37, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  if (isMac())
  {
    id v38 = sub_1E3C976F4();
    objc_msgSend(v38, sel_setHidden_, 1);
  }
  id v172 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1E3E8AD60;
  id v40 = objc_msgSend(*(id *)&v23[v24], sel_leadingAnchor);
  uint64_t v41 = v24;
  id v42 = objc_msgSend(v26, (SEL)&selRef_initWithDynamicProvider_ + 2);
  id v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v42);

  *(void *)(v39 + 32) = v43;
  id v44 = objc_msgSend(*(id *)&v23[v41], sel_trailingAnchor);
  id v45 = objc_msgSend(v26, (SEL)&selRef_setAlbum_ + 4);
  id v46 = objc_msgSend(v44, (SEL)&selRef_outputDevices + 6, v45);

  *(void *)(v39 + 40) = v46;
  id v47 = objc_msgSend(*(id *)&v23[v41], sel_topAnchor);
  id v48 = objc_msgSend(v26, (SEL)&selRef_productURLForStoreCollectionId_storeTrackId_ + 3);
  id v49 = objc_msgSend(v47, (SEL)&selRef_outputDevices + 6, v48);

  *(void *)(v39 + 48) = v49;
  id v50 = objc_msgSend(*(id *)&v23[v41], sel_bottomAnchor);
  id v51 = objc_msgSend(v26, (SEL)&selRef_flattenedGenericObject + 5);
  id v52 = objc_msgSend(v50, (SEL)&selRef_outputDevices + 6, v51);

  *(void *)(v39 + 56) = v52;
  id v53 = objc_msgSend(*(id *)&v26[v27], (SEL)&selRef_initWithDynamicProvider_ + 2);
  id v54 = objc_msgSend(*(id *)&v23[v41], (SEL)&selRef_initWithDynamicProvider_ + 2);
  sub_1E3C982E8(v174);
  uint64_t v55 = v175;
  uint64_t v56 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v56);
  id v57 = objc_msgSend(v53, sel_constraintEqualToAnchor_constant_, v54);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(void *)(v39 + 64) = v57;
  id v58 = objc_msgSend(*(id *)&v26[v35], sel_centerYAnchor);
  id v59 = objc_msgSend(*(id *)&v23[v41], (SEL)&selRef_fillRect_ + 6);
  id v60 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

  *(void *)(v39 + 72) = v60;
  id v61 = objc_msgSend(*(id *)&v26[v35], sel_topAnchor);
  id v62 = objc_msgSend(*(id *)&v23[v41], sel_topAnchor);
  sub_1E3C982E8(v174);
  uint64_t v63 = v175;
  uint64_t v64 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v64 + 16))(v63, v64);
  id v65 = objc_msgSend(v61, sel_constraintEqualToAnchor_constant_, v62);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(void *)(v39 + 80) = v65;
  id v66 = objc_msgSend(v26, sel_bottomAnchor);
  id v67 = objc_msgSend(*(id *)&v26[v35], sel_bottomAnchor);
  sub_1E3C982E8(v174);
  uint64_t v68 = v175;
  uint64_t v69 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v69 + 16))(v68, v69);
  id v70 = objc_msgSend(v66, sel_constraintGreaterThanOrEqualToAnchor_constant_, v67);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(void *)(v39 + 88) = v70;
  id v71 = objc_msgSend(*(id *)&v26[v35], sel_heightAnchor);
  sub_1E3C982E8(v174);
  uint64_t v72 = v175;
  uint64_t v73 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v73 + 32))(v72, v73);
  id v75 = objc_msgSend(v71, sel_constraintEqualToConstant_, v74);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(void *)(v39 + 96) = v75;
  id v76 = objc_msgSend(*(id *)&v26[v35], sel_widthAnchor);
  sub_1E3C982E8(v174);
  uint64_t v77 = v175;
  uint64_t v78 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v78 + 32))(v77, v78);
  id v79 = objc_msgSend(v76, sel_constraintEqualToConstant_);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(void *)(v39 + 104) = v79;
  id v80 = sub_1E3C976F4();
  id v81 = objc_msgSend(v80, sel_trailingAnchor);

  id v82 = objc_msgSend(*(id *)&v23[v41], sel_trailingAnchor);
  sub_1E3C982E8(v174);
  uint64_t v83 = v175;
  uint64_t v84 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  double v85 = -(*(double (**)(uint64_t, uint64_t))(v84 + 80))(v83, v84);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  id v86 = objc_msgSend(v81, sel_constraintEqualToAnchor_constant_, v82, v85);

  *(void *)(v39 + 112) = v86;
  id v87 = sub_1E3C976F4();
  id v88 = objc_msgSend(v87, sel_topAnchor);

  id v89 = objc_msgSend(*(id *)&v23[v41], sel_topAnchor);
  sub_1E3C982E8(v174);
  uint64_t v90 = v175;
  uint64_t v91 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v91 + 72))(v90, v91);
  id v92 = objc_msgSend(v88, sel_constraintEqualToAnchor_constant_, v89);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(void *)(v39 + 120) = v92;
  id v93 = sub_1E3C97C18();
  id v94 = objc_msgSend(v93, sel_leadingAnchor);

  id v95 = objc_msgSend(*(id *)&v26[v35], sel_trailingAnchor);
  sub_1E3C982E8(v174);
  uint64_t v96 = v175;
  uint64_t v97 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v97 + 24))(v96, v97);
  id v98 = objc_msgSend(v94, (SEL)&selRef_deviceSubtype + 7, v95);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  *(void *)(v39 + 128) = v98;
  id v99 = sub_1E3C97C18();
  id v100 = objc_msgSend(v99, sel_trailingAnchor);

  id v101 = sub_1E3C976F4();
  id v102 = objc_msgSend(v101, sel_leadingAnchor);

  sub_1E3C982E8(v174);
  uint64_t v103 = v175;
  uint64_t v104 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  double v105 = -(*(double (**)(uint64_t, uint64_t))(v104 + 88))(v103, v104);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  id v106 = objc_msgSend(v100, (SEL)&selRef_deviceSubtype + 7, v102, v105);

  *(void *)(v39 + 136) = v106;
  id v107 = sub_1E3C97C18();
  id v108 = objc_msgSend(v107, sel_topAnchor);

  id v109 = objc_msgSend(*(id *)&v23[v41], sel_topAnchor);
  id v110 = objc_msgSend(v108, sel_constraintGreaterThanOrEqualToAnchor_, v109);

  *(void *)(v39 + 144) = v110;
  id v111 = objc_msgSend(v26, sel_bottomAnchor);
  id v112 = sub_1E3C97C18();
  id v113 = objc_msgSend(v112, sel_bottomAnchor);

  id v114 = objc_msgSend(v111, sel_constraintGreaterThanOrEqualToAnchor_, v113);
  *(void *)(v39 + 152) = v114;
  id v115 = sub_1E3C97C18();
  id v116 = objc_msgSend(v115, sel_centerYAnchor);

  id v117 = objc_msgSend(*(id *)&v26[v35], sel_centerYAnchor);
  id v118 = objc_msgSend(v116, sel_constraintEqualToAnchor_, v117);

  *(void *)(v39 + 160) = v118;
  id v119 = objc_msgSend(*(id *)&v26[v173], sel_leadingAnchor);
  id v120 = sub_1E3C97C18();
  id v121 = objc_msgSend(v120, sel_leadingAnchor);

  id v122 = objc_msgSend(v119, sel_constraintEqualToAnchor_, v121);
  *(void *)(v39 + 168) = v122;
  id v123 = objc_msgSend(*(id *)&v26[v173], sel_trailingAnchor);
  id v124 = sub_1E3C97C18();
  id v125 = objc_msgSend(v124, sel_trailingAnchor);

  id v126 = objc_msgSend(v123, sel_constraintEqualToAnchor_, v125);
  *(void *)(v39 + 176) = v126;
  id v127 = objc_msgSend(*(id *)&v26[v173], sel_topAnchor);
  id v128 = sub_1E3C97C18();
  id v129 = objc_msgSend(v128, sel_topAnchor);

  id v130 = objc_msgSend(v127, sel_constraintEqualToAnchor_, v129);
  *(void *)(v39 + 184) = v130;
  id v131 = sub_1E3C975B4();
  id v132 = objc_msgSend(v131, sel_leadingAnchor);

  id v133 = sub_1E3C97C18();
  id v134 = objc_msgSend(v133, sel_leadingAnchor);

  id v135 = objc_msgSend(v132, sel_constraintEqualToAnchor_, v134);
  *(void *)(v39 + 192) = v135;
  id v136 = sub_1E3C975B4();
  id v137 = objc_msgSend(v136, sel_trailingAnchor);

  id v138 = sub_1E3C97C18();
  id v139 = objc_msgSend(v138, sel_trailingAnchor);

  id v140 = objc_msgSend(v137, sel_constraintEqualToAnchor_, v139);
  *(void *)(v39 + 200) = v140;
  id v141 = sub_1E3C975B4();
  id v142 = objc_msgSend(v141, sel_bottomAnchor);

  id v143 = sub_1E3C97C18();
  id v144 = objc_msgSend(v143, sel_bottomAnchor);

  id v145 = objc_msgSend(v142, sel_constraintEqualToAnchor_, v144);
  *(void *)(v39 + 208) = v145;
  v174[0] = v39;
  sub_1E3E7D080();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF000);
  v146 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v172, sel_activateConstraints_, v146);

  LODWORD(v147) = 1132068864;
  objc_msgSend(*(id *)&v26[v173], sel_setContentHuggingPriority_forAxis_, 0, v147);
  id v148 = sub_1E3C976F4();
  LODWORD(v149) = 1144750080;
  objc_msgSend(v148, sel_setContentHuggingPriority_forAxis_, 0, v149);

  uint64_t v150 = v41;
  id v151 = objc_msgSend(*(id *)&v23[v41], sel_layer);
  sub_1E3C982E8(v174);
  uint64_t v152 = v175;
  uint64_t v153 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v153 + 120))(v152, v153);
  objc_msgSend(v151, sel_setCornerRadius_);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  id v154 = objc_msgSend(*(id *)&v23[v150], sel_layer);
  objc_msgSend(v154, sel_setMasksToBounds_, 0);

  id v155 = objc_msgSend(*(id *)&v23[v150], sel_layer);
  id v156 = objc_msgSend(v26, sel_traitCollection);
  id v157 = UITraitCollection.suggestedTextBlendModeFilter.getter();

  objc_msgSend(v155, sel_setCompositingFilter_, v157);
  id v158 = objc_msgSend(v26, sel_layer);
  objc_msgSend(v158, sel_setAllowsGroupBlending_, 0);

  id v159 = *(id *)&v23[v150];
  sub_1E3C982E8(v174);
  uint64_t v160 = v175;
  uint64_t v161 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  v162 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v161 + 104))(v160, v161);
  objc_msgSend(v159, sel_setBackgroundColor_, v162);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  v163 = v26;
  sub_1E3C982E8(v174);
  uint64_t v164 = v175;
  uint64_t v165 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  uint64_t v166 = (*(uint64_t (**)(uint64_t, uint64_t))(v165 + 112))(v164, v165);
  objc_msgSend(v163, sel_setBackgroundColor_, v166);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  sub_1E3C982E8(v174);
  uint64_t v167 = v175;
  uint64_t v168 = v176;
  __swift_project_boxed_opaque_existential_1(v174, v175);
  LOBYTE(v166) = (*(uint64_t (**)(uint64_t, uint64_t))(v168 + 96))(v167, v168);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v174);
  if (v166) {
    sub_1E3C9A180();
  }
  id v169 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1800]), sel_initWithTarget_action_, v163, sel_didHover_);
  uint64_t v170 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_hoverRecognizer;
  v171 = *(void **)&v163[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_hoverRecognizer];
  *(void *)&v163[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_hoverRecognizer] = v169;

  if (*(void *)&v163[v170])
  {
    objc_msgSend(v163, sel_addGestureRecognizer_);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for EpisodeUpsellBannerView()
{
  return self;
}

id EpisodeUpsellBannerView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t sub_1E3C9989C()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for EpisodeUpsellBannerView();
  objc_msgSendSuper2(&v8, sel_layoutSubviews);
  id v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_artworkContainerView], sel_layer);
  sub_1E3C982E8(v5);
  uint64_t v2 = v6;
  uint64_t v3 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
  objc_msgSend(v1, sel_setCornerRadius_);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
}

void sub_1E3C99A34(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v9 = v8;
  long long v12 = a2;
  if (a4)
  {
    uint64_t v13 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel;
    id v14 = *(void **)&v8[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel];
    if (a2)
    {
      id v15 = v14;
      long long v12 = (void *)sub_1E3E7CCF0();
    }
    else
    {
      id v20 = v14;
    }
    objc_msgSend(v14, sel_setText_, v12);

    objc_msgSend(*(id *)&v9[v13], sel_setNumberOfLines_, 1);
    id v21 = *(id *)&v9[v13];
    sub_1E3C982E8(v40);
    uint64_t v23 = v41;
    uint64_t v22 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    uint64_t v24 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 136))(v23, v22);
    objc_msgSend(v21, sel_setFont_, v24);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    id v25 = sub_1E3C975B4();
    long long v26 = (void *)sub_1E3E7CCF0();
    objc_msgSend(v25, sel_setText_, v26);

    sub_1E3C9A724();
  }
  else
  {
    uint64_t v16 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel;
    id v17 = *(void **)&v8[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel];
    if (a2)
    {
      id v18 = v17;
      id v19 = (void *)sub_1E3E7CCF0();
    }
    else
    {
      id v27 = v17;
      id v19 = 0;
    }
    objc_msgSend(v17, sel_setText_, v19);

    id v28 = *(id *)&v9[v16];
    sub_1E3C982E8(v40);
    uint64_t v29 = v41;
    uint64_t v30 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    id v31 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 144))(v29, v30);
    objc_msgSend(v28, sel_setFont_, v31);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    objc_msgSend(*(id *)&v9[v16], sel_setNumberOfLines_, 3);
    id v32 = sub_1E3C975B4();
    objc_msgSend(v32, sel_setText_, 0);

    sub_1E3C99D18();
  }
  id v33 = &v9[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapBannerBlock];
  uint64_t v34 = *(void *)&v9[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapBannerBlock];
  *(void *)id v33 = a5;
  *((void *)v33 + 1) = a6;
  sub_1E3E775E0();
  sub_1E3C1A3C4(v34);
  uint64_t v35 = &v9[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapCloseButtonBlock];
  uint64_t v36 = *(void *)&v9[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapCloseButtonBlock];
  *(void *)uint64_t v35 = a7;
  *((void *)v35 + 1) = a8;
  sub_1E3E775E0();
  sub_1E3C1A3C4(v36);
  id v37 = sub_1E3C97AF8();
  objc_msgSend(v9, sel_addGestureRecognizer_, v37);
}

void sub_1E3C99D18()
{
  id v0 = sub_1E3C97C8C();
  objc_msgSend(v0, sel_setActive_, 1);

  id v1 = sub_1E3C97D5C();
  uint64_t v2 = sub_1E3C98094();
  uint64_t v3 = sub_1E3C97EA8();
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    id v4 = v1;
    MEMORY[0x1E4E76960]();
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1E3E7D090();
    }
    sub_1E3E7D100();
    sub_1E3E7D080();
  }
  if (v2)
  {
    id v5 = v2;
    MEMORY[0x1E4E76960]();
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1E3E7D090();
    }
    sub_1E3E7D100();
    sub_1E3E7D080();
  }
  if (v3)
  {
    id v6 = v3;
    MEMORY[0x1E4E76960]();
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1E3E7D090();
    }
    sub_1E3E7D100();
    sub_1E3E7D080();
  }
  uint64_t v7 = self;

  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF000);
  id v8 = (id)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_deactivateConstraints_, v8);
}

void sub_1E3C99F18()
{
  id v0 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1E3E8A550;
  *(void *)(v1 + 32) = sub_1E3C97C8C();
  sub_1E3E7D080();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF000);
  uint64_t v2 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_deactivateConstraints_, v2);

  id v3 = sub_1E3C97D5C();
  id v4 = sub_1E3C98094();
  id v5 = sub_1E3C97EA8();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    id v6 = v3;
    MEMORY[0x1E4E76960]();
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1E3E7D090();
    }
    sub_1E3E7D100();
    sub_1E3E7D080();
  }
  if (v4)
  {
    id v7 = v4;
    MEMORY[0x1E4E76960]();
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1E3E7D090();
    }
    sub_1E3E7D100();
    sub_1E3E7D080();
  }
  if (v5)
  {
    id v8 = v5;
    MEMORY[0x1E4E76960]();
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1E3E7D090();
    }
    sub_1E3E7D100();
    sub_1E3E7D080();
  }

  id v9 = (id)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_activateConstraints_, v9);
}

void sub_1E3C9A180()
{
  uint64_t v1 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView;
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView), sel_layer));
  if (qword_1EAE24118 != -1) {
    swift_once();
  }
  objc_msgSend(v2, sel_setShadowRadius_, *(double *)&qword_1EAE265D8);

  id v3 = self;
  id v4 = objc_msgSend(v3, sel_blackColor);
  id v5 = objc_msgSend(v4, sel_colorWithAlphaComponent_, 0.08);

  id v6 = objc_msgSend(v3, sel_whiteColor);
  id v7 = objc_msgSend(v6, sel_colorWithAlphaComponent_, 0.1);

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = v7;
  id v9 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v19[4] = sub_1E3C9BCD8;
  v19[5] = v8;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 1107296256;
  v19[2] = sub_1E3D2518C;
  void v19[3] = &block_descriptor_6;
  uint64_t v10 = _Block_copy(v19);
  id v11 = v5;
  id v12 = v7;
  id v13 = objc_msgSend(v9, sel_initWithDynamicProvider_, v10);
  _Block_release(v10);
  swift_release();
  id v14 = objc_msgSend(*(id *)(v0 + v1), sel_layer);
  id v15 = objc_msgSend(v13, sel_CGColor);
  objc_msgSend(v14, sel_setShadowColor_, v15);

  id v16 = objc_msgSend(*(id *)(v0 + v1), sel_layer);
  LODWORD(v17) = 1.0;
  objc_msgSend(v16, sel_setShadowOpacity_, v17);

  id v18 = objc_msgSend(*(id *)(v0 + v1), sel_layer);
  objc_msgSend(v18, sel_setShadowOffset_, 0.0, 2.0);
}

void sub_1E3C9A430(id a1)
{
  id v2 = v1;
  if (a1)
  {
    id v4 = objc_msgSend(a1, sel_preferredContentSizeCategory);
    char v5 = sub_1E3E7D890();

    int v6 = v5 & 1;
  }
  else
  {
    int v6 = 2;
  }
  id v7 = objc_msgSend(v1, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  int v9 = sub_1E3E7D890();
  if (v6 == 2 || ((v9 ^ (v6 != 0)) & 1) != 0)
  {
    sub_1E3C9A724();
    if (a1) {
      goto LABEL_7;
    }
LABEL_9:
    id v10 = 0;
    goto LABEL_10;
  }
  if (!a1) {
    goto LABEL_9;
  }
LABEL_7:
  id v10 = objc_msgSend(a1, sel_userInterfaceStyle);
LABEL_10:
  id v11 = objc_msgSend(v2, sel_traitCollection);
  id v12 = objc_msgSend(v11, sel_userInterfaceStyle);

  if (!a1 || v10 != v12)
  {
    id v13 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_contentView], sel_layer);
    id v14 = objc_msgSend(v2, sel_traitCollection);
    objc_msgSend(v14, sel_userInterfaceStyle);

    sub_1E3E7CD30();
    id v15 = objc_allocWithZone(MEMORY[0x1E4F39BC0]);
    id v16 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v15, sel_initWithType_, v16);

    objc_msgSend(v13, sel_setCompositingFilter_, v17);
    sub_1E3C982E8(v20);
    uint64_t v18 = v21;
    uint64_t v19 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    LOBYTE(v13) = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 96))(v18, v19);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    if (v13) {
      sub_1E3C9A180();
    }
  }
}

void sub_1E3C9A724()
{
  id v1 = objc_msgSend(v0, sel_traitCollection);
  id v2 = objc_msgSend(v1, sel_preferredContentSizeCategory);

  char v3 = sub_1E3E7D890();
  id v4 = sub_1E3C975B4();
  char v5 = v4;
  if (v3)
  {
    id v6 = objc_msgSend(v4, sel_text);

    if (v6)
    {
      uint64_t v7 = sub_1E3E7CD30();
      uint64_t v9 = v8;

      uint64_t v11 = v7;
      sub_1E3C9BC44();
      LOBYTE(v7) = sub_1E3E7D3C0();
      swift_bridgeObjectRelease();
      if (v7)
      {
        id v10 = sub_1E3C975B4();
        objc_msgSend(v10, sel_setHidden_, 0, v11, v9);

        sub_1E3C99F18();
      }
    }
  }
  else
  {
    objc_msgSend(v4, sel_setHidden_, 1);

    sub_1E3C99D18();
  }
}

void sub_1E3C9A880(void *a1)
{
  id v2 = (char *)objc_msgSend(a1, sel_state);
  if ((unint64_t)(v2 - 3) < 2)
  {
    char v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering);
    int v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering);
    *(unsigned char *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering) = 0;
    if (v5 != 1 || !isMac()) {
      return;
    }
  }
  else
  {
    if ((unint64_t)(v2 - 1) > 1) {
      return;
    }
    char v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering);
    char v4 = *(unsigned char *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering);
    *(unsigned char *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering) = 1;
    if ((v4 & 1) != 0 || (isMac() & 1) == 0) {
      return;
    }
  }
  id v6 = sub_1E3C976F4();
  objc_msgSend(v6, sel_setHidden_, (*v3 & 1) == 0);
}

uint64_t sub_1E3C9AA04(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  char v3 = (void *)(*a2 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_objectGraph);
  swift_beginAccess();
  *char v3 = v2;
  sub_1E3E775E0();
  return swift_release();
}

uint64_t sub_1E3C9AA70()
{
  return sub_1E3E775E0();
}

uint64_t sub_1E3C9AABC(uint64_t a1)
{
  char v3 = (void *)(v1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_objectGraph);
  swift_beginAccess();
  *char v3 = a1;
  sub_1E3E775E0();
  return swift_release();
}

id EpisodeUpsellBannerView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void EpisodeUpsellBannerView.init(frame:)()
{
}

id EpisodeUpsellBannerView.__deallocating_deinit(uint64_t a1)
{
  return sub_1E3C9AE50(a1, type metadata accessor for EpisodeUpsellBannerView);
}

void sub_1E3C9AE08()
{
}

id sub_1E3C9AE34()
{
  return sub_1E3C9AE50(0, type metadata accessor for CloseButton);
}

id sub_1E3C9AE50(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

id sub_1E3C9AE88@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBFE2C00 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EBFE2BF8;
  char v3 = self;
  id v4 = v2;
  id v5 = objc_msgSend(v3, sel_secondaryLabelColor);
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE2C98);
  id v6 = UIColor.init(hexString:alpha:)(0x354635463546, 0xE600000000000000, 1.0);
  if (!v6) {
    id v6 = objc_msgSend(v3, sel_systemBackgroundColor);
  }
  uint64_t v7 = v6;
  id v8 = UIColor.init(hexString:alpha:)(0x383038303830, 0xE600000000000000, 1.0);
  if (!v8) {
    id v8 = objc_msgSend(v3, sel_systemBackgroundColor);
  }
  id v9 = v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v9;
  id v11 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v22[4] = sub_1E3C9C3E0;
  v22[5] = v10;
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 1107296256;
  void v22[2] = sub_1E3D2518C;
  v22[3] = &block_descriptor_65;
  id v12 = _Block_copy(v22);
  id v13 = v7;
  id v14 = v9;
  id v15 = objc_msgSend(v11, sel_initWithDynamicProvider_, v12);
  _Block_release(v12);

  swift_release();
  id v16 = objc_msgSend(v3, sel_systemBackgroundColor);
  if (qword_1EBFE62C8 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1EBFDEF28;
  id v18 = (id)qword_1EBFE62C0;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_1EBFDEF20;
  LOBYTE(v22[0]) = 0;
  char v26 = 1;
  char v25 = 1;
  char v24 = 1;
  char v23 = 1;
  *(_OWORD *)a1 = xmmword_1E3E8AD70;
  *(_OWORD *)(a1 + 16) = xmmword_1E3E8AD80;
  *(_OWORD *)(a1 + 32) = xmmword_1E3E8AD90;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = 0x6B72616D78;
  *(void *)(a1 + 64) = 0xE500000000000000;
  *(void *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 80) = xmmword_1E3E8ADA0;
  *(void *)(a1 + 96) = 0x4018000000000000;
  *(unsigned char *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = v15;
  *(void *)(a1 + 120) = v16;
  *(void *)(a1 + 128) = 0x4024000000000000;
  *(void *)(a1 + 136) = v18;
  *(void *)(a1 + 144) = v19;
  *(void *)(a1 + 152) = v19;
  *(void *)(a1 + 160) = 0x3FF0000000000000;
  *(unsigned char *)(a1 + 168) = v22[0];
  *(void *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 184) = v26;
  *(void *)(a1 + 192) = 0;
  *(unsigned char *)(a1 + 200) = v25;
  *(void *)(a1 + 208) = 0;
  *(unsigned char *)(a1 + 216) = v24;
  *(void *)(a1 + 224) = 0;
  *(unsigned char *)(a1 + 232) = v23;
  id v20 = v19;

  return v20;
}

id sub_1E3C9B1F4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBFE62C8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EBFE62C0;
  char v3 = self;
  id v4 = v2;
  id v5 = objc_msgSend(v3, sel_systemGray4Color);
  id v6 = objc_msgSend(v3, sel_systemBackgroundColor);
  id v7 = objc_msgSend(v3, sel_systemBackgroundColor);
  if (qword_1EBFDF048 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EBFE6220;
  id v9 = (id)qword_1EBFDEE70;
  id v10 = v9;
  if (v8 != -1)
  {
    swift_once();
    id v9 = (id)qword_1EBFDEE70;
  }
  id v19 = v9;
  id v11 = (void *)qword_1EBFE62A8;
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)a1 = _Q0;
  *(_OWORD *)(a1 + 16) = xmmword_1E3E8ADB0;
  *(_OWORD *)(a1 + 32) = xmmword_1E3E8ADC0;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = 0xD000000000000011;
  *(void *)(a1 + 64) = 0x80000001E3E9BBD0;
  *(void *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 80) = xmmword_1E3E8ADD0;
  *(void *)(a1 + 96) = 0x401C000000000000;
  *(unsigned char *)(a1 + 104) = 1;
  *(void *)(a1 + 112) = v6;
  *(void *)(a1 + 120) = v7;
  *(void *)(a1 + 128) = 0x4024000000000000;
  *(void *)(a1 + 136) = v10;
  *(void *)(a1 + 144) = v11;
  *(void *)(a1 + 152) = v9;
  *(void *)(a1 + 160) = 0;
  *(unsigned char *)(a1 + 168) = 1;
  *(void *)(a1 + 176) = 0x403B000000000000;
  *(unsigned char *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(unsigned char *)(a1 + 200) = 1;
  *(void *)(a1 + 208) = 0xC031000000000000;
  *(unsigned char *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(unsigned char *)(a1 + 232) = 1;
  id v17 = v11;

  return v19;
}

id sub_1E3C9B42C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBFE6220 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EBFE62A8;
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  id v4 = v2;
  id v5 = objc_msgSend(v3, sel_initWithWhite_alpha_, 1.0, 0.7);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 1.0, 0.08);
  id v7 = objc_msgSend(self, sel_clearColor);
  if (qword_1EBFDF048 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_1EBFDEE70;
  id v17 = (id)qword_1EBFE62A8;
  uint64_t v9 = qword_1EBFE62A8;
  __asm { FMOV            V0.2D, #12.0 }
  *(_OWORD *)a1 = _Q0;
  *(_OWORD *)(a1 + 16) = xmmword_1E3E8ADE0;
  *(_OWORD *)(a1 + 32) = xmmword_1E3E8ADF0;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = 0xD000000000000011;
  *(void *)(a1 + 64) = 0x80000001E3E9BBD0;
  *(void *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 80) = xmmword_1E3E8AE00;
  *(void *)(a1 + 96) = 0x4020000000000000;
  *(unsigned char *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = v6;
  *(void *)(a1 + 120) = v7;
  *(void *)(a1 + 128) = 0x4030000000000000;
  *(void *)(a1 + 136) = v8;
  *(void *)(a1 + 144) = v9;
  *(void *)(a1 + 152) = v8;
  *(void *)(a1 + 160) = 0x4000000000000000;
  *(unsigned char *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 184) = 1;
  *(void *)(a1 + 192) = 0x402C000000000000;
  *(unsigned char *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(unsigned char *)(a1 + 216) = 1;
  *(void *)(a1 + 224) = 0xC028000000000000;
  *(unsigned char *)(a1 + 232) = 0;
  id v15 = v8;

  return v17;
}

void _s10PodcastsUI23EpisodeUpsellBannerViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapBannerBlock];
  void *v1 = 0;
  v1[1] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_tapCloseButtonBlock];
  *uint64_t v2 = 0;
  v2[1] = 0;
  uint64_t v3 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_artworkContainerView;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  id v5 = objc_msgSend(v4, sel_layer);
  objc_msgSend(v5, sel_setMasksToBounds_, 1);

  *(void *)&v0[v3] = v4;
  uint64_t v6 = OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_titleLabel;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v8 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v7, sel_setTextColor_, v8);

  objc_msgSend(v7, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(void *)&v0[v6] = v7;
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___dismissButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___tapBannerGestureRecognizer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___textLayout] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleLabelCenterYConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleTopAnchorConstraint] = 1;
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___subtitleBottomConstraint] = 1;
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___titleTopConstraint] = 1;
  uint64_t v9 = &v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView____lazy_storage___config];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_hoverRecognizer] = 0;
  v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_isHovering] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_objectGraph] = 0;

  sub_1E3E7DDD0();
  swift_bridgeObjectRelease();
  sub_1E3E7DF80();
  __break(1u);
}

unint64_t sub_1E3C9B860()
{
  unint64_t result = qword_1EAE26670;
  if (!qword_1EAE26670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE26670);
  }
  return result;
}

uint64_t sub_1E3C9B8B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC10PodcastsUI23EpisodeUpsellBannerView_objectGraph);
  swift_beginAccess();
  *a2 = *v3;
  return sub_1E3E775E0();
}

uint64_t method lookup function for EpisodeUpsellBannerView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EpisodeUpsellBannerView);
}

uint64_t dispatch thunk of EpisodeUpsellBannerView.__allocating_init(frame:bannerType:)()
{
  return (*(uint64_t (**)(void))(v0 + 552))();
}

uint64_t dispatch thunk of EpisodeUpsellBannerView.apply(primaryText:secondaryText:tapBannerBlock:tapCloseButtonBlock:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x230))();
}

uint64_t dispatch thunk of EpisodeUpsellBannerView.objectGraph.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of EpisodeUpsellBannerView.bind(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2B8))();
}

uint64_t getEnumTagSinglePayload for ModalSheet.Action.ActionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EpisodeUpsellBannerView.EpisodeUpsellBannerType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3C9BB4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeUpsellBannerView.EpisodeUpsellBannerType()
{
  return &type metadata for EpisodeUpsellBannerView.EpisodeUpsellBannerType;
}

uint64_t type metadata accessor for CloseButton()
{
  return self;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

void sub_1E3C9BBC4(id a1)
{
  if (a1 != (id)1) {
}
  }

id sub_1E3C9BBD4(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t sub_1E3C9BBE4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26680);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1E3C9BC44()
{
  unint64_t result = qword_1EBFE0690;
  if (!qword_1EBFE0690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE0690);
  }
  return result;
}

uint64_t sub_1E3C9BC98()
{
  return swift_deallocObject();
}

id sub_1E3C9BCD8(void *a1)
{
  return sub_1E3D24194(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1E3C9BCE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3C9BD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_51Tm()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

__n128 __swift_memcpy233_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(_OWORD *)(a1 + 217) = *(long long *)((char *)a2 + 217);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

ValueMetadata *type metadata accessor for MacEpisodeUpsellConfiguration()
{
  return &type metadata for MacEpisodeUpsellConfiguration;
}

ValueMetadata *type metadata accessor for iOSEpisodeUpsellConfiguration()
{
  return &type metadata for iOSEpisodeUpsellConfiguration;
}

void _s10PodcastsUI29MacEpisodeUpsellConfigurationVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  long long v2 = *(void **)(a1 + 152);
}

uint64_t _s10PodcastsUI29MacEpisodeUpsellConfigurationVwcp_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  long long v3 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  long long v5 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  long long v6 = *(void **)(a2 + 112);
  long long v7 = *(void **)(a2 + 120);
  *(void *)(a1 + 112) = v6;
  *(void *)(a1 + 120) = v7;
  long long v8 = *(void **)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  long long v9 = *(void **)(a2 + 144);
  id v10 = *(void **)(a2 + 152);
  *(void *)(a1 + 144) = v9;
  *(void *)(a1 + 152) = v10;
  uint64_t v11 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v11;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  id v12 = v3;
  swift_bridgeObjectRetain();
  id v13 = v5;
  id v14 = v6;
  id v15 = v7;
  id v16 = v8;
  id v17 = v9;
  id v18 = v10;
  return a1;
}

uint64_t _s10PodcastsUI29MacEpisodeUpsellConfigurationVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = *(void **)(a2 + 48);
  long long v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v4;
  id v6 = v4;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v7 = *(void **)(a2 + 72);
  long long v8 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v7;
  id v9 = v7;

  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  id v10 = *(void **)(a2 + 112);
  uint64_t v11 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 120);
  id v14 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = v13;
  id v15 = v13;

  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  id v16 = *(void **)(a2 + 136);
  id v17 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = v16;
  id v18 = v16;

  id v19 = *(void **)(a2 + 144);
  id v20 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = v19;
  id v21 = v19;

  uint64_t v22 = *(void **)(a2 + 152);
  char v23 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v22;
  id v24 = v22;

  uint64_t v25 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v25;
  uint64_t v26 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v26;
  uint64_t v27 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v27;
  uint64_t v28 = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 208) = v28;
  uint64_t v29 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = v29;
  return a1;
}

uint64_t _s10PodcastsUI29MacEpisodeUpsellConfigurationVwta_0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  long long v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);

  long long v7 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  long long v8 = *(void **)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);

  id v9 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);

  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v10 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = v10;
  return a1;
}

uint64_t _s10PodcastsUI29MacEpisodeUpsellConfigurationVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 233)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1E3C9C310(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 232) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 233) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 233) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for iOSNowPlayingEpisodeUpsellConfiguration()
{
  return &type metadata for iOSNowPlayingEpisodeUpsellConfiguration;
}

id Color.color.getter(uint64_t a1, char a2)
{
  if (!a2)
  {
    id v3 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
    long long v4 = sel_initWithRed_green_blue_alpha_;
    return objc_msgSend(v3, v4, v5);
  }
  if (a2 == 1)
  {
    id v3 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
    long long v4 = sel_initWithCGColor_;
    uint64_t v5 = a1;
    return objc_msgSend(v3, v4, v5);
  }
  switch(a1)
  {
    case 1:
      id v7 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
      break;
    case 2:
      id v7 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
      break;
    case 3:
    case 4:
      id v7 = objc_msgSend(self, sel_clearColor);
      break;
    default:
      id v7 = objc_msgSend(self, sel_systemBackgroundColor);
      break;
  }

  return v7;
}

id sub_1E3C9C5B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id result = sub_1E3C20E50(a1, a2);
  if (!v3)
  {
    *(void *)a3 = result;
    *(unsigned char *)(a3 + 8) = v6;
  }
  return result;
}

id static Color.custom(_:)(void *a1)
{
  return objc_msgSend(a1, sel_CGColor);
}

void Color.analyzedColor.getter(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_1E3C2B46C(a1, a2);

  AnalyzedColor.init(color:)(a1, a2, a3);
}

uint64_t static EpisodeUnavailableReason.Translator.episodeUnavailableReason(for:)(void *a1)
{
  uint64_t v2 = sub_1E3E7A880();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E78F50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v32 - v11;
  uint64_t v34 = a1;
  id v13 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    int v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
    if (v14 == *MEMORY[0x1E4F91810])
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      id v15 = v34;
LABEL_4:

      return 6;
    }
    if (v14 == *MEMORY[0x1E4F91808])
    {
      id v18 = v34;
LABEL_10:

      return 8;
    }
    if (v14 == *MEMORY[0x1E4F917F8])
    {
      (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
      uint64_t v27 = &v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE25FD0) + 48)];
      uint64_t v28 = sub_1E3E78F60();
      (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
      uint64_t v29 = sub_1E3E78FF0();
      (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v9, v29);
    }
    else if (v14 != *MEMORY[0x1E4F91820])
    {
      if (v14 == *MEMORY[0x1E4F91800])
      {

        return 1;
      }
      if (v14 == *MEMORY[0x1E4F91818])
      {
        id v31 = v34;
LABEL_33:

        return 14;
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    id v30 = v34;
LABEL_36:

    return 5;
  }

  id v37 = a1;
  id v17 = a1;
  if (!swift_dynamicCast())
  {

    sub_1E3E7A7B0();
    id v19 = a1;
    id v20 = a1;
    id v21 = sub_1E3E7A860();
    os_log_type_t v22 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v21, v22))
    {
      char v23 = (uint8_t *)swift_slowAlloc();
      id v33 = (void *)swift_slowAlloc();
      *(_DWORD *)char v23 = 138412290;
      id v24 = a1;
      uint64_t v25 = (void *)_swift_stdlib_bridgeErrorToNSError();
      uint64_t v34 = v25;
      sub_1E3E7DBD0();
      uint64_t v26 = v33;
      *id v33 = v25;

      _os_log_impl(&dword_1E3BC5000, v21, v22, "Unhandled player error: %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v26, -1, -1);
      MEMORY[0x1E4E79510](v23, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 5;
  }
  switch(v36)
  {
    case 1:
      sub_1E3C4941C(v34, v35, 1);
      goto LABEL_25;
    case 2:
      if ((_BYTE)v34)
      {
        if (v34 == 1)
        {
          id v18 = v37;
          goto LABEL_10;
        }

        uint64_t result = 10;
      }
      else
      {

        uint64_t result = 9;
      }
      break;
    case 3:
LABEL_25:
      id v30 = v37;
      goto LABEL_36;
    case 4:
      switch((unint64_t)v34)
      {
        case 1uLL:

          uint64_t result = 2;
          break;
        case 2uLL:
        case 3uLL:
          goto LABEL_25;
        case 4uLL:
          id v31 = v37;
          goto LABEL_33;
        default:
          id v15 = v37;
          goto LABEL_4;
      }
      return result;
    default:
      sub_1E3C4941C(v34, v35, 0);

      return 4;
  }
  return result;
}

uint64_t sub_1E3C9CC48(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

ValueMetadata *type metadata accessor for EpisodeUnavailableReason.Translator()
{
  return &type metadata for EpisodeUnavailableReason.Translator;
}

char *initializeBufferWithCopyOfBuffer for PageRenderActivity(char *a1, id *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v9 = (char *)*a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        uint64_t v10 = (char *)*a2;
        uint64_t v11 = (char *)*a2;
        *(void *)a1 = v10;
        a1[8] = *((unsigned char *)a2 + 8);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        id v12 = *a2;
        id v13 = v12;
        *(void *)a1 = v12;
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v8 = sub_1E3E7BCA0();
        (*(void (**)(char *, id *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for PageRenderActivity(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 2)
  {
    int v5 = *a1;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = sub_1E3E7BCA0();
    uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
  }
}

unsigned char *initializeWithCopy for PageRenderActivity(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      id v8 = *(id *)a2;
      id v9 = *(id *)a2;
      *(void *)a1 = v8;
      a1[8] = *(unsigned char *)(a2 + 8);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      id v10 = *(id *)a2;
      id v11 = v10;
      *(void *)a1 = v10;
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v7 = sub_1E3E7BCA0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *assignWithCopy for PageRenderActivity(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  if (a1 != (unsigned char *)a2)
  {
    sub_1E3C9D0D8((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        id v8 = *(id *)a2;
        id v9 = *(id *)a2;
        *(void *)a1 = v8;
        a1[8] = *(unsigned char *)(a2 + 8);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        id v10 = *(id *)a2;
        id v11 = v10;
        *(void *)a1 = v10;
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v7 = sub_1E3E7BCA0();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1E3C9D0D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PageRenderActivity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PageRenderActivity()
{
  uint64_t result = qword_1EBFE1180;
  if (!qword_1EBFE1180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithTake for PageRenderActivity(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1E3E7BCA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PageRenderActivity(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3C9D0D8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1E3E7BCA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s12QueueCommandOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t _s12QueueCommandOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1E3C9D354()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1E3C9D364()
{
  uint64_t result = sub_1E3E7BCA0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t DeclineEpisodeLimitRecommendationActionImplementation.perform(_:asPartOf:)()
{
  uint64_t v0 = sub_1E3E7BD40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E7D560();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E4F91E48], v4, v6);
  id v9 = (objc_class *)sub_1E3C6EAEC((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v13.super.isa = v9;
  EpisodeLimitRecommendation.markAsIgnored(in:)(v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24FB8);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F711E8], v0);
  uint64_t v10 = sub_1E3E7C9C0();

  return v10;
}

unint64_t sub_1E3C9D5F0()
{
  unint64_t result = qword_1EAE26688;
  if (!qword_1EAE26688)
  {
    type metadata accessor for DeclineEpisodeLimitRecommendationAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE26688);
  }
  return result;
}

uint64_t sub_1E3C9D648()
{
  uint64_t v0 = sub_1E3E7BD40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E7D560();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E4F91E48], v4, v6);
  id v9 = (objc_class *)sub_1E3C6EAEC((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v13.super.isa = v9;
  EpisodeLimitRecommendation.markAsIgnored(in:)(v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24FB8);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F711E8], v0);
  uint64_t v10 = sub_1E3E7C9C0();

  return v10;
}

ValueMetadata *type metadata accessor for DeclineEpisodeLimitRecommendationActionImplementation()
{
  return &type metadata for DeclineEpisodeLimitRecommendationActionImplementation;
}

uint64_t ClickLocationElement.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClickLocationElement.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ClickLocationElement.id.modify())()
{
  return nullsub_1;
}

uint64_t ClickLocationElement._uniqueID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClickLocationElement._uniqueID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ClickLocationElement._uniqueID.modify())()
{
  return nullsub_1;
}

uint64_t ClickLocationElement.parentUniqueID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClickLocationElement.parentUniqueID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ClickLocationElement.parentUniqueID.modify())()
{
  return nullsub_1;
}

uint64_t ClickLocationElement.position.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t ClickLocationElement.position.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t (*ClickLocationElement.position.modify())()
{
  return nullsub_1;
}

uint64_t ClickLocationElement.fields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClickLocationElement.fields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*ClickLocationElement.fields.modify())()
{
  return nullsub_1;
}

uint64_t ClickLocationElement.init(id:uniqueID:parentUniqueID:position:fields:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t ClickLocationElement.uniqueID.getter()
{
  if (v0[3])
  {
    uint64_t v1 = v0[2];
  }
  else
  {
    uint64_t v1 = *v0;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClickLocationElement.init(impressionMetrics:uniqueID:parentUniqueID:position:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v35 = a4;
  uint64_t v12 = sub_1E3E7C100();
  uint64_t v32 = *(void *)(v12 - 8);
  uint64_t v33 = v12;
  MEMORY[0x1F4188790](v12);
  int v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4860);
  MEMORY[0x1F4188790](v15 - 8);
  id v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1E3E7C150();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C9DD64(a1, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1E3C10CE0(a1, &qword_1EBFE4860);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1E3C10CE0((uint64_t)v17, &qword_1EBFE4860);
    *(_OWORD *)a7 = 0u;
    *(_OWORD *)(a7 + 16) = 0u;
    *(_OWORD *)(a7 + 32) = 0u;
    *(_OWORD *)(a7 + 48) = 0u;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    sub_1E3E7C120();
    uint64_t v23 = sub_1E3E7C0F0();
    uint64_t v30 = a6;
    uint64_t v31 = a1;
    uint64_t v24 = a5;
    uint64_t v25 = v23;
    uint64_t v26 = a3;
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v33);
    uint64_t v29 = sub_1E3E7C090();
    *(void *)a7 = v25;
    *(void *)(a7 + 8) = v28;
    *(void *)(a7 + 16) = v34;
    *(void *)(a7 + 24) = v26;
    *(void *)(a7 + 32) = v35;
    *(void *)(a7 + 40) = v24;
    *(void *)(a7 + 48) = v30;
    *(void *)(a7 + 56) = v29;
    sub_1E3C10CE0(v31, &qword_1EBFE4860);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  return result;
}

uint64_t sub_1E3C9DD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4860);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ClickLocationElement.withUniqueID(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t v6 = *(void *)(v3 + 56);
  *(void *)a3 = *(void *)v3;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 24) = a2;
  *(void *)(a3 + 32) = v5;
  *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
  *(void *)(a3 + 56) = v6;
  *(void *)(a3 + 16) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ClickLocationElement.withParentUniqueID(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  uint64_t v8 = v3[6];
  uint64_t v7 = v3[7];
  *a3 = *v3;
  a3[1] = v4;
  a3[2] = v5;
  a3[3] = v6;
  a3[6] = v8;
  a3[7] = v7;
  a3[4] = a1;
  a3[5] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ClickLocationElement.withPosition(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v6 = *(void *)(v2 + 56);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 48) = a1;
  *(void *)(a2 + 56) = v6;
  *(void *)(a2 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t static ClickLocationElement.bubbleTipButton(targetID:uniqueID:parentUniqueID:position:locationType:name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, long long a11)
{
  unint64_t v15 = MEMORY[0x1E4FBC868];
  unint64_t v37 = MEMORY[0x1E4FBC868];
  uint64_t v16 = sub_1E3E78990();
  uint64_t v18 = v16;
  uint64_t v19 = v17;
  uint64_t v20 = MEMORY[0x1E4FBB1A0];
  if (*((void *)&a11 + 1))
  {
    uint64_t v36 = MEMORY[0x1E4FBB1A0];
    long long v35 = a11;
    sub_1E3C1B524(&v35, v34);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v37 = 0x8000000000000000;
    sub_1E3C9EA30(v34, v18, v19, isUniquelyReferenced_nonNull_native);
    unint64_t v37 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1E3C9E854(v16, v17, &v35);
    sub_1E3C10CE0((uint64_t)&v35, &qword_1EBFE6190);
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1E3E78860();
  uint64_t v24 = v23;
  uint64_t v36 = v20;
  *(void *)&long long v35 = a8;
  *((void *)&v35 + 1) = a10;
  sub_1E3C1B524(&v35, v34);
  swift_bridgeObjectRetain();
  unint64_t v25 = v37;
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v37 = 0x8000000000000000;
  sub_1E3C9EA30(v34, v22, v24, v26);
  unint64_t v37 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v27 = v37;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ClickLocationElement.playButton(adamID:uniqueID:parentUniqueID:position:kind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v60 = a7;
  uint64_t v66 = a2;
  uint64_t v16 = sub_1E3E77E50();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v20 = sub_1E3E7A520();
  uint64_t v65 = a5;
  if (v20)
  {
    unint64_t v61 = 0xE000000000000000;
    uint64_t v62 = 0;
  }
  else
  {
    *(void *)&long long v69 = a1;
    sub_1E3C340DC();
    uint64_t v21 = sub_1E3E7DC90();
    unint64_t v61 = v22;
    uint64_t v62 = v21;
  }
  char v23 = sub_1E3E7A520();
  uint64_t v63 = a4;
  uint64_t v64 = a6;
  if (v23)
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = a3;
    if (a3) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v24 = sub_1E3E78B70();
    uint64_t v25 = v27;
    uint64_t v26 = a3;
    if (a3) {
      goto LABEL_9;
    }
  }
  sub_1E3E77E40();
  uint64_t v66 = sub_1E3E77E30();
  uint64_t v26 = v28;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
LABEL_9:
  unint64_t v29 = MEMORY[0x1E4FBC868];
  unint64_t v71 = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1E3E78900();
  uint64_t v32 = v30;
  uint64_t v33 = v31;
  uint64_t v34 = MEMORY[0x1E4FBB1A0];
  if (v25)
  {
    uint64_t v70 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v69 = v24;
    *((void *)&v69 + 1) = v25;
    sub_1E3C1B524(&v69, v68);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = v29;
    unint64_t v71 = 0x8000000000000000;
    sub_1E3C9EA30(v68, v32, v33, isUniquelyReferenced_nonNull_native);
    unint64_t v71 = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1E3C9E854(v30, v31, &v69);
    sub_1E3C10CE0((uint64_t)&v69, &qword_1EBFE6190);
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = v63;
  uint64_t v37 = sub_1E3E78870();
  uint64_t v39 = v37;
  uint64_t v40 = v38;
  if (a8)
  {
    uint64_t v70 = v34;
    *(void *)&long long v69 = v60;
    *((void *)&v69 + 1) = a8;
    sub_1E3C1B524(&v69, v68);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v41 = v71;
    char v42 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = v41;
    unint64_t v71 = 0x8000000000000000;
    sub_1E3C9EA30(v68, v39, v40, v42);
    unint64_t v71 = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1E3C9E854(v37, v38, &v69);
    sub_1E3C10CE0((uint64_t)&v69, &qword_1EBFE6190);
  }
  swift_bridgeObjectRelease();
  uint64_t v43 = sub_1E3E78860();
  uint64_t v45 = v44;
  uint64_t v46 = sub_1E3E79500();
  uint64_t v70 = v34;
  *(void *)&long long v69 = v46;
  *((void *)&v69 + 1) = v47;
  sub_1E3C1B524(&v69, v68);
  unint64_t v48 = v71;
  char v49 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v67 = v48;
  unint64_t v71 = 0x8000000000000000;
  sub_1E3C9EA30(v68, v43, v45, v49);
  unint64_t v71 = v67;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v50 = sub_1E3E78990();
  uint64_t v52 = v51;
  uint64_t v70 = v34;
  *(void *)&long long v69 = 2036427856;
  *((void *)&v69 + 1) = 0xE400000000000000;
  sub_1E3C1B524(&v69, v68);
  unint64_t v53 = v71;
  char v54 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v67 = v53;
  unint64_t v71 = 0x8000000000000000;
  sub_1E3C9EA30(v68, v50, v52, v54);
  unint64_t v71 = v67;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v55 = v71;
  unint64_t v56 = v61;
  *a9 = v62;
  a9[1] = v56;
  uint64_t v57 = v65;
  a9[2] = v66;
  a9[3] = v26;
  a9[4] = v36;
  a9[5] = v57;
  a9[6] = v64;
  a9[7] = v55;
  return swift_bridgeObjectRetain();
}

uint64_t static ClickLocationElement.seeAllButton(uniqueID:parentUniqueID:position:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v10 = sub_1E3E78990();
  uint64_t v12 = v11;
  id v13 = objc_msgSend(self, sel_mainBundle);
  uint64_t v14 = sub_1E3E77AB0();
  uint64_t v16 = v15;

  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  uint64_t v31 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v30 = v14;
  *((void *)&v30 + 1) = v16;
  sub_1E3C1B524(&v30, v29);
  uint64_t v18 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1E3C9EA30(v29, v10, v12, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1E3E78860();
  uint64_t v22 = v21;
  uint64_t v23 = sub_1E3E79500();
  uint64_t v31 = v17;
  *(void *)&long long v30 = v23;
  *((void *)&v30 + 1) = v24;
  sub_1E3C1B524(&v30, v29);
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  sub_1E3C9EA30(v29, v20, v22, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a6 = 0x6C6C41656553;
  a6[1] = 0xE600000000000000;
  a6[2] = a1;
  a6[3] = a2;
  a6[4] = a3;
  a6[5] = a4;
  a6[6] = a5;
  a6[7] = v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double static ClickLocationElement.favoriteOrSuggestLessButton(adamID:name:position:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1E3E78990();
  uint64_t v12 = v11;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  uint64_t v26 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v25 = a2;
  *((void *)&v25 + 1) = a3;
  sub_1E3C1B524(&v25, v24);
  swift_bridgeObjectRetain();
  uint64_t v14 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1E3C9EA30(v24, v10, v12, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1E3E78860();
  uint64_t v18 = v17;
  uint64_t v19 = sub_1E3E79500();
  uint64_t v26 = v13;
  *(void *)&long long v25 = v19;
  *((void *)&v25 + 1) = v20;
  sub_1E3C1B524(&v25, v24);
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_1E3C9EA30(v24, v16, v18, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v25 = a1;
  sub_1E3C340DC();
  *(void *)a5 = sub_1E3E7DC90();
  *(void *)(a5 + 8) = v22;
  double result = 0.0;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(void *)(a5 + 48) = a4;
  *(void *)(a5 + 56) = v14;
  return result;
}

double sub_1E3C9E854@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1E3D352D8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1E3C9EE04();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1E3C1B524((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1E3C9F328(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1E3C9E958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1E3C1B524((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1E3C9EA30(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1E3C10CE0(a1, &qword_1EBFE6190);
    sub_1E3C9E854(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_1E3C10CE0((uint64_t)v9, &qword_1EBFE6190);
  }
}

_OWORD *sub_1E3C9EA30(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = (void **)v4;
  uint64_t v11 = (void *)*v4;
  unint64_t v13 = sub_1E3D352D8(a2, a3);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_12;
  }
  char v5 = v12;
  if (v11[3] >= v16)
  {
    if (a4)
    {
      uint64_t v19 = *v6;
      if (v12) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1E3C9F500(v13, a2, a3, a1, v19);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
LABEL_12:
    sub_1E3C9EE04();
    uint64_t v19 = *v6;
    if (v5) {
      goto LABEL_8;
    }
    goto LABEL_13;
  }
  sub_1E3C9EFFC(v16, a4 & 1);
  unint64_t v17 = sub_1E3D352D8(a2, a3);
  if ((v5 & 1) != (v18 & 1))
  {
    double result = (_OWORD *)sub_1E3E7E200();
    __break(1u);
    return result;
  }
  unint64_t v13 = v17;
  uint64_t v19 = *v6;
  if ((v5 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = (_OWORD *)(v19[7] + 32 * v13);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);

  return sub_1E3C1B524(a1, v20);
}

uint64_t sub_1E3C9EB84()
{
  return MEMORY[0x1E4FBB1B0];
}

uint64_t destroy for ClickLocationElement()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ClickLocationElement(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClickLocationElement(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ClickLocationElement(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClickLocationElement(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClickLocationElement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClickLocationElement()
{
  return &type metadata for ClickLocationElement;
}

void *sub_1E3C9EE04()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE28B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1E3E7DFD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    double result = (void *)swift_release();
LABEL_29:
    uint64_t *v1 = v4;
    return result;
  }
  long long v25 = v1;
  double result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    double result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v13) {
      goto LABEL_27;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_27;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_27;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23)
        {
          int64_t v9 = v22 + 3;
          if (v22 + 3 >= v13)
          {
LABEL_27:
            double result = (void *)swift_release();
            uint64_t v1 = v25;
            goto LABEL_29;
          }
          unint64_t v23 = *(void *)(v6 + 8 * v9);
          int64_t v24 = v22 + 3;
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_26:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1E3C114A4(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    char v21 = (void *)(*(void *)(v4 + 48) + v16);
    *char v21 = v19;
    v21[1] = v18;
    sub_1E3C1B524(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    double result = (void *)swift_bridgeObjectRetain();
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_27;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_26;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1E3C9EFFC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE28B0);
  uint64_t v6 = sub_1E3E7DFE0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v33 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = sub_1E3E775E0();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v34) {
          goto LABEL_35;
        }
        unint64_t v19 = v33[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v34) {
            goto LABEL_35;
          }
          unint64_t v19 = v33[v13];
          if (!v19)
          {
            int64_t v13 = v18 + 2;
            if (v18 + 2 >= v34) {
              goto LABEL_35;
            }
            unint64_t v19 = v33[v13];
            if (!v19)
            {
              int64_t v13 = v18 + 3;
              if (v18 + 3 >= v34)
              {
LABEL_35:
                swift_release();
                uint64_t v3 = v2;
                if (a2)
                {
                  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                  if (v32 >= 64) {
                    bzero(v33, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                  }
                  else {
                    *uint64_t v33 = -1 << v32;
                  }
                  *(void *)(v5 + 16) = 0;
                }
                break;
              }
              unint64_t v19 = v33[v13];
              for (int64_t i = v18 + 3; !v19; ++i)
              {
                int64_t v13 = i + 1;
                if (__OFADD__(i, 1)) {
                  goto LABEL_42;
                }
                if (v13 >= v34) {
                  goto LABEL_35;
                }
                unint64_t v19 = v33[v13];
              }
            }
          }
        }
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      char v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1E3C1B524(v24, v35);
      }
      else
      {
        sub_1E3C114A4((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1E3E7E270();
      sub_1E3E7CE50();
      uint64_t result = sub_1E3E7E2B0();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1E3C1B524(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_1E3C9F328(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1E3E7DCD0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1E3E7E270();
        swift_bridgeObjectRetain();
        sub_1E3E7CE50();
        uint64_t v10 = sub_1E3E7E2B0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          int64_t v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            _OWORD *v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *unint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_1E3C9F500(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1E3C1B524(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t Array<A>.content.getter(uint64_t a1)
{
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v3 = *(void *)(sub_1E3E79220() - 8);
  uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_1E3C9F648(v4, (uint64_t)v7, a1);
    v4 += v5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v7[0];
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v3 = *(void *)(sub_1E3E791C0() - 8);
  uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_1E3E79180();
    sub_1E3E7CEA0();
    swift_bridgeObjectRelease();
    Array<A>.spacesAfterWord(_:)(v4, a1);
    sub_1E3E7CEA0();
    swift_bridgeObjectRelease();
    v4 += v5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1E3C9F648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a2;
  uint64_t v5 = sub_1E3E79220();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v37 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE266A8);
  MEMORY[0x1F4188790](v39);
  uint64_t v40 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE266B0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v38 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v41 = (char *)&v35 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = sub_1E3E791E0();
  uint64_t v42 = 0;
  unint64_t v43 = 0xE000000000000000;
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v35 = a1;
    uint64_t v36 = a3;
    uint64_t v18 = *(void *)(sub_1E3E791C0() - 8);
    uint64_t v19 = v16 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v20 = *(void *)(v18 + 72);
    do
    {
      sub_1E3E79180();
      sub_1E3E7CEA0();
      swift_bridgeObjectRelease();
      Array<A>.spacesAfterWord(_:)(v19, v16);
      sub_1E3E7CEA0();
      swift_bridgeObjectRelease();
      v19 += v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a1 = v35;
    a3 = v36;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v21(v15, a1, v5);
  BOOL v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v23 = 1;
  v22(v15, 0, 1, v5);
  uint64_t v24 = *(void *)(a3 + 16);
  if (v24)
  {
    unint64_t v25 = a3
        + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
        + *(void *)(v6 + 72) * (v24 - 1);
    uint64_t v26 = (uint64_t)v41;
    v21(v41, v25, v5);
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v26 = (uint64_t)v41;
  }
  v22((char *)v26, v23, 1, v5);
  uint64_t v27 = v40;
  uint64_t v28 = v40 + *(int *)(v39 + 48);
  sub_1E3C34078((uint64_t)v15, v40, &qword_1EAE266B0);
  sub_1E3C34078(v26, v28, &qword_1EAE266B0);
  unint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v29(v27, 1, v5) == 1)
  {
    sub_1E3C10CE0(v26, &qword_1EAE266B0);
    sub_1E3C10CE0((uint64_t)v15, &qword_1EAE266B0);
    if (v29(v28, 1, v5) == 1) {
      return sub_1E3C10CE0(v27, &qword_1EAE266B0);
    }
  }
  else
  {
    uint64_t v31 = v38;
    sub_1E3C34078(v27, v38, &qword_1EAE266B0);
    if (v29(v28, 1, v5) != 1)
    {
      uint64_t v32 = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v37, v28, v5);
      sub_1E3CA07C8(&qword_1EAE266B8, MEMORY[0x1E4F91968]);
      char v33 = sub_1E3E7CCA0();
      int64_t v34 = *(void (**)(char *, uint64_t))(v6 + 8);
      v34(v32, v5);
      sub_1E3C10CE0((uint64_t)v41, &qword_1EAE266B0);
      sub_1E3C10CE0((uint64_t)v15, &qword_1EAE266B0);
      v34((char *)v31, v5);
      uint64_t result = sub_1E3C10CE0(v27, &qword_1EAE266B0);
      if (v33) {
        return result;
      }
      return sub_1E3E7CEA0();
    }
    sub_1E3C10CE0((uint64_t)v41, &qword_1EAE266B0);
    sub_1E3C10CE0((uint64_t)v15, &qword_1EAE266B0);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v31, v5);
  }
  sub_1E3C10CE0(v27, &qword_1EAE266A8);
  return sub_1E3E7CEA0();
}

uint64_t sub_1E3C9FCB0(uint64_t a1)
{
  uint64_t v2 = sub_1E3E791C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E79220();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v33 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v38 = *(void *)(a1 + 16);
  if (!v38) {
    return 0;
  }
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v9 = v7 + 16;
  uint64_t v36 = a1 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
  uint64_t v37 = v10;
  uint64_t v42 = v3 + 16;
  uint64_t v11 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v12 = *(void *)(v9 + 56);
  int64_t v34 = (void (**)(char *, uint64_t))(v9 - 8);
  uint64_t v35 = v12;
  v30[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = v33;
  uint64_t v31 = v6;
  uint64_t v32 = v3;
  v30[1] = v9;
  do
  {
    uint64_t v41 = v13;
    v37(v15, v36 + v35 * v13, v6);
    uint64_t v16 = sub_1E3E791E0();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v39 = v16;
      uint64_t v40 = v14;
      unint64_t v18 = v16 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      uint64_t v19 = *(void *)(v3 + 72);
      uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
      swift_bridgeObjectRetain();
      uint64_t v21 = 0;
      do
      {
        v20(v5, v18, v2);
        sub_1E3E79180();
        uint64_t v22 = sub_1E3E7CE60();
        uint64_t result = swift_bridgeObjectRelease();
        BOOL v24 = __OFADD__(v21, v22);
        v21 += v22;
        if (v24)
        {
          __break(1u);
          goto LABEL_22;
        }
        (*v11)(v5, v2);
        v18 += v19;
        --v17;
      }
      while (v17);
      uint64_t v25 = v39;
      swift_bridgeObjectRelease();
      unint64_t v26 = *(void *)(v25 + 16);
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v28 = v26 - 1;
      BOOL v27 = v26 > 1;
      uint64_t v6 = v31;
      uint64_t v3 = v32;
      uint64_t v15 = v33;
      uint64_t v14 = v40;
      if (v27)
      {
        BOOL v24 = __OFADD__(v21, v28);
        v21 += v28;
        if (v24) {
          goto LABEL_23;
        }
      }
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v21 = 0;
    }
    BOOL v24 = __OFADD__(v14, v21);
    v14 += v21;
    if (v24)
    {
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      return result;
    }
    uint64_t v13 = v41 + 1;
    (*v34)(v15, v6);
  }
  while (v13 != v38);
  swift_bridgeObjectRelease();
  unint64_t v29 = v38 - 1;
  if (v38 > 1)
  {
    BOOL v24 = __OFADD__(v14, v29);
    v14 += v29;
    if (v24)
    {
      __break(1u);
      return 0;
    }
  }
  return v14;
}

uint64_t sub_1E3C9FFB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26698);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v24 - v12;
  if (*(void *)(a3 + 16))
  {
    v24[3] = a1;
    v24[4] = a2;
    v24[5] = a4;
    uint64_t v14 = *(void *)(sub_1E3E79220() - 8);
    v24[1] = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    _OWORD v24[2] = v14;
    uint64_t v15 = sub_1E3E791E0();
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v17 = sub_1E3E791C0();
    uint64_t v18 = *(void *)(v17 - 8);
    if (v16)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v13, v15 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v13, 1, 1, v17);
    }
    swift_bridgeObjectRelease();
    sub_1E3E791C0();
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    if (v19(v13, 1, v17) == 1)
    {
      sub_1E3C10CE0((uint64_t)v13, &qword_1EAE26698);
    }
    else
    {
      sub_1E3E791B0();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v17);
    }
    uint64_t v20 = sub_1E3E791E0();
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v10, v20+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * (v21 - 1), v17);
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v22 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v10, v22, 1, v17);
    swift_bridgeObjectRelease();
    if (v19(v10, 1, v17) == 1)
    {
      sub_1E3C10CE0((uint64_t)v10, &qword_1EAE26698);
    }
    else
    {
      sub_1E3E79190();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v17);
    }
  }
  swift_bridgeObjectRetain();
  sub_1E3E79270();
  swift_bridgeObjectRetain();
  return sub_1E3E79250();
}

uint64_t Array<A>.spacesAfterWord(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_1E3E791C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26690);
  MEMORY[0x1F4188790](v6);
  uint64_t v34 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26698);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v31 = (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v29 - v11;
  double v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16);
  uint64_t v32 = a1;
  v17((char *)&v29 - v15, a1, v3, v14);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v19 = 1;
  v18(v16, 0, 1, v3);
  uint64_t v20 = *(void *)(v33 + 16);
  if (v20)
  {
    ((void (*)(char *, unint64_t, uint64_t))v17)(v12, v33+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * (v20 - 1), v3);
    uint64_t v19 = 0;
  }
  v18(v12, v19, 1, v3);
  uint64_t v21 = v34;
  uint64_t v22 = v34 + *(int *)(v6 + 48);
  sub_1E3C34078((uint64_t)v16, v34, &qword_1EAE26698);
  sub_1E3C34078((uint64_t)v12, v22, &qword_1EAE26698);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v23(v21, 1, v3) == 1)
  {
    sub_1E3C10CE0((uint64_t)v12, &qword_1EAE26698);
    sub_1E3C10CE0((uint64_t)v16, &qword_1EAE26698);
    if (v23(v22, 1, v3) == 1)
    {
      sub_1E3C10CE0(v21, &qword_1EAE26698);
      return 0;
    }
    goto LABEL_8;
  }
  uint64_t v24 = v31;
  sub_1E3C34078(v21, v31, &qword_1EAE26698);
  if (v23(v22, 1, v3) == 1)
  {
    sub_1E3C10CE0((uint64_t)v12, &qword_1EAE26698);
    sub_1E3C10CE0((uint64_t)v16, &qword_1EAE26698);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v24, v3);
LABEL_8:
    sub_1E3C10CE0(v21, &qword_1EAE26690);
    goto LABEL_11;
  }
  uint64_t v25 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v30, v22, v3);
  sub_1E3CA07C8(&qword_1EAE266A0, MEMORY[0x1E4F91938]);
  char v26 = sub_1E3E7CCA0();
  BOOL v27 = *(void (**)(char *, uint64_t))(v4 + 8);
  v27(v25, v3);
  sub_1E3C10CE0((uint64_t)v12, &qword_1EAE26698);
  sub_1E3C10CE0((uint64_t)v16, &qword_1EAE26698);
  v27((char *)v24, v3);
  sub_1E3C10CE0(v21, &qword_1EAE26698);
  if (v26) {
    return 0;
  }
LABEL_11:
  if (sub_1E3E79170()) {
    return 8224;
  }
  else {
    return 32;
  }
}

uint64_t sub_1E3CA07C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ArtworkLoaderConfig.template.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double ArtworkLoaderConfig.size.getter()
{
  return *(double *)(v0 + 32);
}

uint64_t ArtworkLoaderConfig.format.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ArtworkLoaderConfig.crop.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop;
  uint64_t v4 = sub_1E3E7A5A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

double ArtworkLoaderConfig.scale.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale);
}

uint64_t ArtworkLoaderConfig.retainAspectRatio.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio);
}

uint64_t ArtworkLoaderConfig.__allocating_init(template:size:scale:format:crop:retainAspectRatio:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, double a6, double a7, double a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(double *)(v16 + 32) = a6;
  *(double *)(v16 + 40) = a7;
  *(unsigned char *)(v16 + 48) = a3;
  uint64_t v17 = v16 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop;
  uint64_t v18 = sub_1E3E7A5A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a4, v18);
  *(double *)(v16 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale) = a8;
  *(unsigned char *)(v16 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) = a5;
  return v16;
}

uint64_t ArtworkLoaderConfig.init(template:size:scale:format:crop:retainAspectRatio:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, double a6, double a7, double a8)
{
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(double *)(v8 + 32) = a6;
  *(double *)(v8 + 40) = a7;
  *(unsigned char *)(v8 + 48) = a3;
  uint64_t v12 = v8 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop;
  uint64_t v13 = sub_1E3E7A5A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a4, v13);
  *(double *)(v8 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale) = a8;
  *(unsigned char *)(v8 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) = a5;
  return v8;
}

uint64_t sub_1E3CA0A6C()
{
  sub_1E3CA0C74();
  sub_1E3E77CD0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3CA0AB0(double (*a1)(uint64_t, double, double))
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E3E7A5A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v9 = *(void *)(v1 + 16);
    uint64_t v8 = *(void *)(v1 + 24);
    double v10 = *(double *)(v1 + 32);
    double v11 = *(double *)(v1 + 40);
    sub_1E3C19A6C((uint64_t)a1);
    uint64_t v12 = swift_bridgeObjectRetain();
    double v13 = a1(v12, v10, v11);
    uint64_t v15 = v14;
    sub_1E3C1A3C4((uint64_t)a1);
    uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale);
    char v17 = *(unsigned char *)(v1 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v1 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop, v4);
    char v18 = *(unsigned char *)(v1 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio);
    type metadata accessor for ArtworkLoaderConfig();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v9;
    *(void *)(v2 + 24) = v8;
    *(double *)(v2 + 32) = v13;
    *(void *)(v2 + 40) = v15;
    *(unsigned char *)(v2 + 48) = v17;
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v2 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop, v7, v4);
    *(void *)(v2 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale) = v16;
    *(unsigned char *)(v2 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) = v18;
  }
  else
  {
    sub_1E3E775E0();
  }
  return v2;
}

uint64_t sub_1E3CA0C74()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E792D0();
  sub_1E3E7D970();
  sub_1E3E7A590();
  sub_1E3E78AD0();
  sub_1E3E792C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1E3E77D00();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1E3C13F0C((uint64_t)v2);
    return 0;
  }
  else
  {
    uint64_t v5 = sub_1E3E77C00();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5;
}

uint64_t type metadata accessor for ArtworkLoaderConfig()
{
  uint64_t result = qword_1EAE266C8;
  if (!qword_1EAE266C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3CA0E80()
{
  double v1 = *(double *)(v0 + 32);
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v1 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double v2 = *(double *)(v0 + 40);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v3 = (uint64_t)v2;
  uint64_t v4 = (uint64_t)v1 + (uint64_t)v2;
  if (__OFADD__((uint64_t)v1, (uint64_t)v2))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v6 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  if (v6 >= 0) {
    uint64_t v7 = v4 * v5;
  }
  else {
    uint64_t v7 = v6 + 1;
  }
  uint64_t result = v3 + (v7 >> 1);
  if (__OFADD__(v3, v7 >> 1)) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_1E3CA0F50()
{
  return sub_1E3E7E280();
}

uint64_t sub_1E3CA0F7C()
{
  uint64_t v1 = sub_1E3E7D2C0();
  sub_1E3E7CEA0();
  sub_1E3E7D2C0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E7D2C0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  swift_bridgeObjectRetain();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_1E3CA1050()
{
  return 0xD000000000000014;
}

uint64_t ArtworkLoaderConfig.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop;
  uint64_t v2 = sub_1E3E7A5A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ArtworkLoaderConfig.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop;
  uint64_t v2 = sub_1E3E7A5A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1E3CA1468()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3CA14AC(uint64_t *a1, uint64_t *a2)
{
  return _s10PodcastsUI19ArtworkLoaderConfigC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1E3CA14B8()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3CA1500()
{
  return sub_1E3E7E280();
}

uint64_t sub_1E3CA1530()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3CA1574()
{
  return sub_1E3CA0F7C();
}

unint64_t sub_1E3CA1598()
{
  return sub_1E3CA1050();
}

uint64_t _s10PodcastsUI19ArtworkLoaderConfigC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(double *)(a1 + 32) == *(double *)(a2 + 32) && *(double *)(a1 + 40) == *(double *)(a2 + 40);
  if (!v2 || (sub_1E3E78AF0() & 1) == 0) {
    goto LABEL_16;
  }
  sub_1E3E7A5A0();
  sub_1E3CA1994((unint64_t *)&unk_1EAE266D8, MEMORY[0x1E4F91D98]);
  sub_1E3E7CFD0();
  sub_1E3E7CFD0();
  if (v11 == v9 && v12 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v5 = sub_1E3E7E150();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = 0;
    if ((v5 & 1) == 0) {
      return v6 & 1;
    }
  }
  if (*(double *)(a1 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale) != *(double *)(a2
                                                                                              + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale))
  {
LABEL_16:
    char v6 = 0;
    return v6 & 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    || (v7 = sub_1E3E7E150(), char v6 = 0, (v7 & 1) != 0))
  {
    char v6 = *(unsigned char *)(a1 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) ^ *(unsigned char *)(a2 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_1E3CA1754()
{
  return sub_1E3CA1994(&qword_1EAE266C0, (void (*)(uint64_t))type metadata accessor for ArtworkLoaderConfig);
}

uint64_t sub_1E3CA179C()
{
  return type metadata accessor for ArtworkLoaderConfig();
}

uint64_t sub_1E3CA17A4()
{
  uint64_t result = sub_1E3E7A5A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ArtworkLoaderConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ArtworkLoaderConfig);
}

uint64_t dispatch thunk of ArtworkLoaderConfig.__allocating_init(template:size:scale:format:crop:retainAspectRatio:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.url.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.withAlternativeSize(block:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.resolvedTemplate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of ArtworkLoaderConfig.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t sub_1E3CA1994(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of DependencyBindableView.objectGraph.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DependencyBindableView.bind(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void *SearchFiltersFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DF8);
  sub_1E3E7C030();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1E3E87930;
  sub_1E3E7BFD0();
  sub_1E3E7BF80();
  sub_1E3E7BFC0();
  uint64_t v3 = sub_1E3CA1ED8(v2);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  char v4 = MetricsFieldsBuilder.shouldDecorate(basedOn:)(v3);
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (v4)
  {
    if (qword_1EBFE5CF0 != -1) {
      swift_once();
    }
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5CF8);
    uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBFE5CD8);
    uint64_t v8 = type metadata accessor for SearchFiltersTracker();
    uint64_t result = MEMORY[0x1E4E75C20](&v23, v7, v8);
    if ((void)v23)
    {
      unint64_t v9 = MEMORY[0x1E4FBC868];
      unint64_t v26 = MEMORY[0x1E4FBC868];
      if (qword_1EBFE5860 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_1EBFE5850;
      uint64_t v10 = *(void *)algn_1EBFE5858;
      swift_bridgeObjectRetain();
      sub_1E3E78A90();
      uint64_t v12 = MEMORY[0x1E4FBB1A0];
      if (*((void *)&v23 + 1))
      {
        uint64_t v25 = MEMORY[0x1E4FBB1A0];
        sub_1E3C1B524(&v23, v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1E3C9EA30(v22, v11, v10, isUniquelyReferenced_nonNull_native);
        unint64_t v26 = v9;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_1E3C9E854(v11, v10, &v23);
        sub_1E3C2AC28((uint64_t)&v23);
      }
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_1E3E788D0();
      uint64_t v16 = v15;
      sub_1E3E78A90();
      swift_bridgeObjectRelease();
      if (v24 == 2)
      {
        sub_1E3C9E854(v14, v16, &v23);
        sub_1E3C2AC28((uint64_t)&v23);
      }
      else
      {
        if (v24) {
          uint64_t v17 = sub_1E3E79F30();
        }
        else {
          uint64_t v17 = sub_1E3E79F40();
        }
        uint64_t v25 = v12;
        *(void *)&long long v23 = v17;
        *((void *)&v23 + 1) = v18;
        sub_1E3C1B524(&v23, v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v19 = v26;
        char v20 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v26 = 0x8000000000000000;
        sub_1E3C9EA30(v22, v14, v16, v20);
        unint64_t v26 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease();
      unint64_t v21 = v26;
      *(void *)&long long v23 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE49D8);
      sub_1E3CA21F0(&qword_1EBFE49E8);
      if (sub_1E3E7D3C0())
      {
        *(void *)&long long v23 = v21;
        sub_1E3E78960();
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, a1[3]);
        sub_1E3CA21F0((unint64_t *)&qword_1EBFE49E0);
        MetricsFieldsBuilder.addValue<A>(_:forField:)();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      return (void *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *sub_1E3CA1EC0(void *a1)
{
  return SearchFiltersFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(a1);
}

uint64_t sub_1E3CA1ED8(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7C030();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DA8);
    uint64_t v9 = sub_1E3E7DDA0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1E3CA338C(&qword_1EBFE4808, MEMORY[0x1E4F71328]);
      uint64_t v16 = sub_1E3E7CC20();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1E3CA338C((unint64_t *)&unk_1EBFE4810, MEMORY[0x1E4F71328]);
          char v23 = sub_1E3E7CCA0();
          char v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1E3CA21F0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE49D8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchFiltersFieldsProvider()
{
  return &type metadata for SearchFiltersFieldsProvider;
}

uint64_t sub_1E3CA2248(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7C750();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4B28);
    uint64_t v9 = sub_1E3E7DDA0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1E3CA338C(&qword_1EBFE4908, MEMORY[0x1E4F71658]);
      uint64_t v16 = sub_1E3E7CC20();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1E3CA338C((unint64_t *)&unk_1EBFE4910, MEMORY[0x1E4F71658]);
          char v23 = sub_1E3E7CCA0();
          char v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1E3CA2560(uint64_t a1)
{
  uint64_t v2 = sub_1E3E78FD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26700);
    uint64_t v9 = sub_1E3E7DDA0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1E3CA338C(&qword_1EAE26708, MEMORY[0x1E4F91868]);
      uint64_t v16 = sub_1E3E7CC20();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1E3CA338C(&qword_1EAE26710, MEMORY[0x1E4F91868]);
          char v23 = sub_1E3E7CCA0();
          char v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1E3CA2878(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7C6D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26720);
    uint64_t v9 = sub_1E3E7DDA0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1E3CA338C(&qword_1EAE26728, MEMORY[0x1E4F71640]);
      uint64_t v16 = sub_1E3E7CC20();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1E3CA338C(&qword_1EAE29670, MEMORY[0x1E4F71640]);
          char v23 = sub_1E3E7CCA0();
          char v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1E3CA2B90(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26718);
    uint64_t v3 = sub_1E3E7DDA0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_1E3E7CD30();
      sub_1E3E7E270();
      id v7 = v6;
      sub_1E3E7CE50();
      uint64_t v8 = sub_1E3E7E2B0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_1E3E7CD30();
        uint64_t v17 = v16;
        if (v15 == sub_1E3E7CD30() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_1E3E7E150();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_1E3E7CD30();
          uint64_t v24 = v23;
          if (v22 == sub_1E3E7CD30() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_1E3E7E150();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

unint64_t sub_1E3CA2DC0(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1E3E7DFC0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE266E8);
      uint64_t result = sub_1E3E7DDA0();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1E3E7DFC0();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  unint64_t v8 = v3 + 56;
  unint64_t v22 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v21 = v1;
  while (v22)
  {
    uint64_t result = MEMORY[0x1E4E77720](v7, v1);
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_26;
    }
LABEL_18:
    sub_1E3E7A980();
    sub_1E3CA338C(&qword_1EAE266F0, MEMORY[0x1E4F1AB18]);
    uint64_t result = sub_1E3E7CC20();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_1E3CA338C(&qword_1EAE266F8, MEMORY[0x1E4F1AB18]);
      do
      {
        uint64_t result = sub_1E3E7CCA0();
        if (result)
        {
          uint64_t result = swift_release();
          unint64_t v1 = v21;
          goto LABEL_11;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
      }
      while ((v14 & (1 << v12)) != 0);
      unint64_t v1 = v21;
    }
    *(void *)(v8 + 8 * v13) = v15 | v14;
    *(void *)(*(void *)(v3 + 48) + 8 * v12) = v9;
    uint64_t v17 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (v10) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v18;
LABEL_11:
    if (v7 == v5) {
      return v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = sub_1E3E775E0();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1E3CA3074(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7BC90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DA0);
    uint64_t v9 = sub_1E3E7DDA0();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1E3CA338C(&qword_1EBFE5CB8, MEMORY[0x1E4F71178]);
      uint64_t v16 = sub_1E3E7CC20();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1E3CA338C(&qword_1EBFE4F08, MEMORY[0x1E4F71178]);
          char v23 = sub_1E3E7CCA0();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1E3CA338C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MetricsAdHocImpression.metricsId.getter()
{
  if (!v0[3].i8[0]) {
    return 0x61426C6C65737075;
  }
  uint64_t v1 = v0->i64[0];
  if (v0[3].i8[0] == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    int8x16_t v2 = vorrq_s8(v0[1], v0[2]);
    if (*(void *)&vorr_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL)) | v0->i64[1] | v1) {
      return 0xD000000000000015;
    }
    else {
      return 0x657469726F766146;
    }
  }
  return v1;
}

uint64_t MetricsAdHocImpression.metricsName.getter()
{
  if (*(unsigned char *)(v0 + 48))
  {
    uint64_t v1 = *(void *)(v0 + 16);
    if (*(unsigned char *)(v0 + 48) == 1) {
      swift_bridgeObjectRetain();
    }
    else {
      return 0xD000000000000015;
    }
  }
  else if (*(void *)(v0 + 8))
  {
    return sub_1E3CA3564();
  }
  else
  {
    return 0x61426C6C65737075;
  }
  return v1;
}

uint64_t sub_1E3CA3564()
{
  sub_1E3C10C8C();
  uint64_t v0 = sub_1E3E7DC80();
  int64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1E3CC7660(0, v1, 0);
    uint64_t v2 = v0 + 56;
    do
    {
      swift_bridgeObjectRetain();
      sub_1E3E7DBA0();
      uint64_t v3 = sub_1E3E7CDD0();
      uint64_t v5 = v4;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v7 = *(void *)(v11 + 16);
      unint64_t v6 = *(void *)(v11 + 24);
      if (v7 >= v6 >> 1) {
        sub_1E3CC7660(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v11 + 16) = v7 + 1;
      uint64_t v8 = v11 + 16 * v7;
      *(void *)(v8 + 32) = v3;
      *(void *)(v8 + 40) = v5;
      v2 += 32;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6388);
  sub_1E3CA3AF8();
  uint64_t v9 = sub_1E3E7CC80();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t MetricsAdHocImpression.impressionType.getter()
{
  if (!*(unsigned char *)(v0 + 48)) {
    return MEMORY[0x1F4144F40]();
  }
  if (*(unsigned char *)(v0 + 48) == 1) {
    return MEMORY[0x1F4144F50]();
  }
  return sub_1E3E79520();
}

uint64_t MetricsAdHocImpression.channelAdamId.getter()
{
  if (*(unsigned char *)(v0 + 48)) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsAdHocImpression.eligibilityType.getter()
{
  if (*(unsigned char *)(v0 + 48)) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1E3CA37A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != 1)
  {
    if (a7) {
      return result;
    }
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t destroy for MetricsAdHocImpression(uint64_t a1)
{
  return sub_1E3CA3820(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t sub_1E3CA3820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result = a2;
  if (a7 != 1)
  {
    if (a7) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricsAdHocImpression(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1E3CA37A4(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for MetricsAdHocImpression(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1E3CA37A4(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1E3CA3820(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MetricsAdHocImpression(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1E3CA3820(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsAdHocImpression(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsAdHocImpression(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1E3CA3AA8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 1u) {
    return *(unsigned __int8 *)(a1 + 48);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1E3CA3AC0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsAdHocImpression()
{
  return &type metadata for MetricsAdHocImpression;
}

unint64_t sub_1E3CA3AF8()
{
  unint64_t result = qword_1EBFE6390;
  if (!qword_1EBFE6390)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE6388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE6390);
  }
  return result;
}

uint64_t *sub_1E3CA3B54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v6 = sub_1E3E7C600();
    }
    else {
      uint64_t v6 = sub_1E3E7C620();
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1E3CA3C84(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v2 = sub_1E3E7C600();
  }
  else {
    uint64_t v2 = sub_1E3E7C620();
  }
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1E3CA3D00(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v4 = sub_1E3E7C600();
  }
  else {
    uint64_t v4 = sub_1E3E7C620();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1E3CA3DAC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1E3CA3E68(a1);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v4 = sub_1E3E7C600();
    }
    else {
      uint64_t v4 = sub_1E3E7C620();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1E3CA3E68(uint64_t a1)
{
  uint64_t v2 = _s8ActivityOMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s8ActivityOMa()
{
  uint64_t result = qword_1EBFE25E0;
  if (!qword_1EBFE25E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3CA3F10(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v4 = sub_1E3E7C600();
  }
  else {
    uint64_t v4 = sub_1E3E7C620();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1E3CA3FBC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1E3CA3E68(a1);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v4 = sub_1E3E7C600();
    }
    else {
      uint64_t v4 = sub_1E3E7C620();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1E3CA4078()
{
  uint64_t result = sub_1E3E7C620();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1E3E7C600();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppIntentNavigationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3CA41D8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppIntentNavigationError()
{
  return &type metadata for AppIntentNavigationError;
}

uint64_t sub_1E3CA4210()
{
  return sub_1E3E77B40();
}

unint64_t sub_1E3CA4230()
{
  unint64_t result = qword_1EAE26730;
  if (!qword_1EAE26730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE26730);
  }
  return result;
}

id IMImageBlur.init(_:)(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 9)) {
    return 0;
  }
  double v2 = *(double *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  if (v3)
  {
    double v6 = 0.0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
    double v6 = v2;
  }
  return objc_msgSend(v4, sel_initWithStyle_radius_, v5, v6);
}

uint64_t sub_1E3CA42F4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3CA4354()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3CA438C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1E3CA43D4())()
{
  return j__swift_endAccess;
}

id PlayStateDataSource.accessQueue.getter()
{
  return *(id *)(v0 + 88);
}

uint64_t PlayStateDataSource.__allocating_init(playbackController:pendingPlaybackStore:episodeLookupUtil:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  PlayStateDataSource.init(playbackController:pendingPlaybackStore:episodeLookupUtil:)(a1, a2, a3);
  return v6;
}

uint64_t PlayStateDataSource.init(playbackController:pendingPlaybackStore:episodeLookupUtil:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v20 = a1;
  uint64_t v21 = a3;
  uint64_t v19 = a2;
  uint64_t v5 = sub_1E3E7D690();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E7B7C0();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_1E3E7D620();
  MEMORY[0x1F4188790](v10);
  *(_OWORD *)(v3 + 32) = xmmword_1E3E8B540;
  *(_OWORD *)(v3 + 48) = xmmword_1E3E8B550;
  *(void *)(v3 + 64) = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 80) = MEMORY[0x1E4FBC868];
  v18[1] = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE07C8);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1E3E86660;
  sub_1E3E7D610();
  uint64_t v22 = v11;
  sub_1E3CA91E8((unint64_t *)&unk_1EBFDEE50, 255, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDEE28);
  sub_1E3C10DE8(&qword_1EBFDEE30, &qword_1EBFDEE28);
  sub_1E3E7DCC0();
  sub_1E3E7B7A0();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCC58], v5);
  uint64_t v12 = sub_1E3E7D6E0();
  *(void *)(v3 + 96) = 0;
  *(void *)(v3 + 104) = 0;
  *(void *)(v3 + 88) = v12;
  uint64_t v13 = v20;
  *(void *)(v3 + 16) = v19;
  *(void *)(v3 + 24) = v13;
  type metadata accessor for IdentifierUtil();
  uint64_t v14 = swift_allocObject();
  unint64_t v15 = sub_1E3C81254(MEMORY[0x1E4FBC860]);
  uint64_t v16 = v21;
  *(void *)(v14 + 16) = v15;
  *(void *)(v14 + 24) = v16;
  *(void *)(v4 + 72) = v14;
  return v4;
}

uint64_t type metadata accessor for IdentifierUtil()
{
  return self;
}

uint64_t PlayStateDataSource.__allocating_init(asPartOf:)()
{
  type metadata accessor for PlaybackController();
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  sub_1E3E79A40();
  sub_1E3E7C8C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26738);
  sub_1E3E7C8C0();
  type metadata accessor for PlayStateDataSource();
  uint64_t v0 = swift_allocObject();
  PlayStateDataSource.init(playbackController:pendingPlaybackStore:episodeLookupUtil:)(v4, v3, v2);
  swift_release();
  return v0;
}

uint64_t sub_1E3CA48E4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 96);
  uint64_t v5 = *(void *)(v3 + 104);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1E3CA9880;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_1E3C19A6C(v4);
}

uint64_t sub_1E3CA4978(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1E3CA9848;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_1E3C19A6C(v1);
  return sub_1E3CA4A58((uint64_t)v4, v3);
}

uint64_t sub_1E3CA4A08()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 96);
  sub_1E3C19A6C(v1);
  return v1;
}

uint64_t sub_1E3CA4A58(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + 12;
  swift_beginAccess();
  uint64_t v6 = v2[12];
  v2[12] = a1;
  v2[13] = a2;
  sub_1E3C19A6C(v6);
  sub_1E3C19A6C(a1);
  sub_1E3C1A3C4(v6);
  if (!v6)
  {
    sub_1E3CA7214();
    if (!*v5) {
      goto LABEL_5;
    }
LABEL_15:
    sub_1E3C1A3C4(a1);
    return sub_1E3C1A3C4(v6);
  }
  if (*v5) {
    goto LABEL_15;
  }
LABEL_5:
  swift_beginAccess();
  unint64_t v7 = v2[8];
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v8) {
      goto LABEL_7;
    }
LABEL_14:
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_1E3E7DFC0();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_7:
  if (v8 >= 1)
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        MEMORY[0x1E4E77720](i, v7);
      }
      else {
        sub_1E3E775E0();
      }
      sub_1E3E7A970();
      swift_release();
    }
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void (*sub_1E3CA4BE0(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 96);
  uint64_t v5 = *(void *)(v1 + 104);
  v3[3] = v4;
  v3[4] = v5;
  sub_1E3C19A6C(v4);
  return sub_1E3CA4C58;
}

void sub_1E3CA4C58(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[3];
  uint64_t v4 = (*a1)[4];
  if (a2)
  {
    sub_1E3C19A6C((*a1)[3]);
    sub_1E3CA4A58(v3, v4);
    sub_1E3C1A3C4(v2[3]);
  }
  else
  {
    sub_1E3CA4A58((*a1)[3], v4);
  }

  free(v2);
}

uint64_t sub_1E3CA4CD4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v1 - 8);
  id v75 = (char *)v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE24C0);
  uint64_t v62 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  unint64_t v55 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0410);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  uint64_t v65 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v57 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE22A0);
  uint64_t v52 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE21B0);
  uint64_t v53 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE03B8);
  uint64_t v58 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v50 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE03A0);
  uint64_t v66 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  char v54 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0518);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v69 = v13;
  uint64_t v70 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v59 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0470);
  uint64_t v73 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  unint64_t v67 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE03F8);
  uint64_t v74 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v68 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v0 + 24) + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1E3C1B2BC(v18, (uint64_t)&v77);
  uint64_t v19 = v78;
  uint64_t v20 = v79;
  __swift_project_boxed_opaque_existential_1(&v77, v78);
  uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  sub_1E3E7A940();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2430);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE23C0);
  v48[2] = MEMORY[0x1E4F1ABC8];
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE2420, (uint64_t *)&unk_1EBFE2430);
  uint64_t v60 = MEMORY[0x1E4F1AAE8];
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE23B0, (uint64_t *)&unk_1EBFE23C0);
  sub_1E3E7ADA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v77);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE2290, &qword_1EBFE22A0);
  sub_1E3CA9460();
  uint64_t v21 = v49;
  sub_1E3E7AD40();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v8, v21);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE21A0, &qword_1EBFE21B0);
  uint64_t v22 = v51;
  char v23 = (void *)sub_1E3E7AB70();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v22);
  id v77 = v23;
  sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE2760);
  uint64_t v24 = v50;
  sub_1E3E7AB80();
  swift_release();
  uint64_t v25 = v48[1];
  uint64_t v76 = sub_1E3E79A30();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2560);
  unint64_t v26 = v55;
  sub_1E3E7AAC0();
  swift_endAccess();
  sub_1E3C10DE8(&qword_1EBFE24B8, (uint64_t *)&unk_1EBFE24C0);
  sub_1E3CA9544();
  uint64_t v27 = v57;
  uint64_t v28 = v61;
  sub_1E3E7AD40();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v26, v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE05A0);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE03A8, &qword_1EBFE03B8);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE0590, &qword_1EBFE05A0);
  sub_1E3C10DE8(&qword_1EBFE0408, (uint64_t *)&unk_1EBFE0410);
  uint64_t v29 = v54;
  uint64_t v30 = v56;
  uint64_t v31 = v64;
  sub_1E3E7ABB0();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v27, v31);
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v24, v30);
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  id v77 = (id)sub_1E3E7D6A0();
  uint64_t v32 = sub_1E3E7D640();
  uint64_t v33 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v75, 1, 1, v32);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE0390, &qword_1EBFE03A0);
  sub_1E3CA9500((unint64_t *)&qword_1EBFE27B0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t v34 = v59;
  uint64_t v35 = v63;
  sub_1E3E7AD10();
  sub_1E3C10CE0(v33, (uint64_t *)&unk_1EBFE27A0);

  (*(void (**)(char *, uint64_t))(v66 + 8))(v29, v35);
  uint64_t v36 = *(void *)(v25 + 72);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v36;
  *(_OWORD *)(v37 + 24) = xmmword_1E3E8B540;
  *(_OWORD *)(v37 + 40) = xmmword_1E3E8B550;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_1E3CA961C;
  *(void *)(v38 + 24) = v37;
  sub_1E3E775E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0550);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE0508, &qword_1EBFE0518);
  uint64_t v39 = v67;
  uint64_t v40 = v69;
  sub_1E3E7ABF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v34, v40);
  uint64_t v41 = sub_1E3C10DE8((unint64_t *)&unk_1EBFE0460, (uint64_t *)&unk_1EBFE0470);
  uint64_t v42 = sub_1E3C10DE8(&qword_1EBFE0548, &qword_1EBFE0550);
  unint64_t v43 = v68;
  uint64_t v44 = v71;
  MEMORY[0x1E4E74670](v71, v41, v42);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v39, v44);
  sub_1E3C10DE8(&qword_1EBFE03F0, (uint64_t *)&unk_1EBFE03F8);
  uint64_t v45 = v72;
  uint64_t v46 = sub_1E3E7AB70();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v45);
  return v46;
}

id sub_1E3CA5960@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_1E3CA596C(void *a1, void (*a2)(char *, uint64_t), void *a3, uint64_t a4)
{
  uint64_t v153 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0760);
  MEMORY[0x1F4188790](v7 - 8);
  id v136 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0458);
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  id v138 = (char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE03C0);
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  id v139 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v11 - 8);
  id v129 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0708);
  MEMORY[0x1F4188790](v13 - 8);
  id v128 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1E3E7D680();
  uint64_t v127 = *(void *)(v146 - 8);
  MEMORY[0x1F4188790](v146);
  id v126 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE05C0);
  uint64_t v149 = *(void *)(v16 - 8);
  uint64_t v150 = v16;
  MEMORY[0x1F4188790](v16);
  id v148 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  id v125 = (char *)&v114 - v19;
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0498);
  uint64_t v132 = *(void *)(v133 - 8);
  MEMORY[0x1F4188790](v133);
  id v130 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE03D0);
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  id v131 = (char *)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1E3E77E20();
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x1F4188790](v122);
  id v120 = (char *)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1E3E79380();
  MEMORY[0x1F4188790](v117);
  id v118 = (uint64_t *)((char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v144 = type metadata accessor for PlayStateData();
  uint64_t v123 = *(void *)(v144 - 8);
  MEMORY[0x1F4188790](v144);
  id v145 = (uint64_t *)((char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0358);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v114 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_1E3E79E40();
  uint64_t v28 = *(void *)(v154 - 8);
  uint64_t v124 = v28;
  MEMORY[0x1F4188790](v154);
  uint64_t v30 = (char *)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v114 - v32;
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBFDFF50);
  uint64_t v147 = *(void *)(v152 - 8);
  MEMORY[0x1F4188790](v152);
  uint64_t v35 = (char *)&v114 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  id v116 = (uint64_t *)((char *)&v114 - v37);
  MEMORY[0x1F4188790](v38);
  id v119 = (char *)&v114 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v114 - v41;
  unint64_t v43 = a1;
  uint64_t v137 = a4;
  sub_1E3CA87B8(a1, (uint64_t)&v114 - v41);
  id v151 = a3;
  if (a3) {
    objc_msgSend(v151, sel_isDeviceRoute);
  }
  sub_1E3C34078((uint64_t)v153, (uint64_t)v27, &qword_1EBFE0358);
  uint64_t v44 = v154;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v27, 1, v154) == 1)
  {
    sub_1E3C10CE0((uint64_t)v27, &qword_1EBFE0358);
LABEL_14:
    id v55 = objc_msgSend(v43, sel_tracklist);
    id v56 = objc_msgSend(v55, sel_playingItem);

    if (v56
      && (objc_msgSend(v56, sel_duration),
          double v57 = v156,
          char v58 = v157,
          id v59 = objc_msgSend(v43, sel_state),
          v56,
          v57 > 0.1)
      && v59 == (id)2
      && (v58 & 1) == 0)
    {
      sub_1E3C12B10(0, &qword_1EAE26770);
      id v60 = objc_msgSend(self, sel_mainRunLoop);
      uint64_t v61 = sub_1E3E7DB40();
      uint64_t v62 = (uint64_t)v136;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v136, 1, 1, v61);
      uint64_t v63 = (void *)sub_1E3E7DA10();

      sub_1E3C10CE0(v62, &qword_1EBFE0760);
      id v155 = v63;
      sub_1E3E7DA00();
      sub_1E3CA91E8(&qword_1EAE26778, 255, MEMORY[0x1E4F28000]);
      uint64_t v64 = (void *)sub_1E3E7AA00();
      swift_release();
      id v155 = v64;
      uint64_t v65 = (void *)swift_allocObject();
      v65[2] = v137;
      v65[3] = v43;
      id v66 = v151;
      v65[4] = v151;
      id v67 = v66;
      sub_1E3E775E0();
      id v68 = v43;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26780);
      sub_1E3C10DE8(&qword_1EAE26788, &qword_1EAE26780);
      uint64_t v69 = v138;
      sub_1E3E7ABF0();
      swift_release();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26790);
      unint64_t v70 = (*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
      uint64_t v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_1E3E86660;
      sub_1E3C34078((uint64_t)v42, v71 + v70, qword_1EBFDFF50);
      sub_1E3C10DE8(&qword_1EAE26798, &qword_1EBFE0458);
      uint64_t v72 = v139;
      uint64_t v73 = v141;
      sub_1E3E7AD00();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v69, v73);
      sub_1E3C10DE8(&qword_1EAE267A0, (uint64_t *)&unk_1EBFE03C0);
      uint64_t v74 = v143;
      uint64_t v75 = sub_1E3E7AB70();
      (*(void (**)(char *, uint64_t))(v142 + 8))(v72, v74);
    }
    else
    {
      sub_1E3C34078((uint64_t)v42, (uint64_t)v35, qword_1EBFDFF50);
      uint64_t v76 = v148;
      sub_1E3E7AA30();
      sub_1E3C10DE8(&qword_1EBFE05B8, &qword_1EBFE05C0);
      uint64_t v77 = v150;
      uint64_t v75 = sub_1E3E7AB70();
      (*(void (**)(char *, uint64_t))(v149 + 8))(v76, v77);
    }
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v33, v27, v44);
  char v45 = sub_1E3E79DF0();
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v30, v33, v44);
  id v115 = v42;
  if ((v45 & 1) == 0)
  {
    char v54 = *(void (**)(char *, uint64_t))(v28 + 8);
    v54(v30, v44);
LABEL_13:
    v54(v33, v44);
    uint64_t v42 = v115;
    goto LABEL_14;
  }
  uint64_t v46 = sub_1E3E79DC0();
  uint64_t v47 = sub_1E3CA6D2C();
  swift_bridgeObjectRetain();
  char v48 = sub_1E3CA6E94(v46, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v48 & 1) != 0
    && (id v49 = objc_msgSend(v43, sel_tracklist),
        id v50 = objc_msgSend(v49, sel_playingItem),
        v49,
        v50))
  {
    objc_msgSend(v50, sel_duration);
    double v51 = v156;
    char v52 = v157;
    id v53 = objc_msgSend(v43, sel_state);

    char v54 = *(void (**)(char *, uint64_t))(v28 + 8);
    uint64_t v44 = v154;
    v54(v30, v154);
    if (v51 > 0.1 && v53 == (id)2 && (v52 & 1) == 0) {
      goto LABEL_13;
    }
    uint64_t v153 = v54;
  }
  else
  {
    uint64_t v153 = *(void (**)(char *, uint64_t))(v28 + 8);
    v153(v30, v154);
  }
  uint64_t v78 = sub_1E3E79DC0();
  sub_1E3E79E30();
  uint64_t v80 = v79;
  sub_1E3E79E20();
  uint64_t v81 = (uint64_t)v118;
  *id v118 = v80;
  *(void *)(v81 + 8) = v82;
  swift_storeEnumTagMultiPayload();
  uint64_t v83 = v120;
  sub_1E3E77E10();
  sub_1E3E77D80();
  uint64_t v85 = v84;
  (*(void (**)(char *, uint64_t))(v121 + 8))(v83, v122);
  id v86 = v145;
  *id v145 = v78;
  id v87 = (int *)v144;
  sub_1E3CA9740(v81, (uint64_t)v86 + *(int *)(v144 + 20), MEMORY[0x1E4F919C8]);
  *(uint64_t *)((char *)v86 + v87[6]) = v85;
  *((unsigned char *)v86 + v87[7]) = 0;
  sub_1E3E79DD0();
  id v88 = v116;
  sub_1E3C34078((uint64_t)v115, (uint64_t)v116, qword_1EBFDFF50);
  uint64_t v89 = v123;
  int v90 = (*(uint64_t (**)(uint64_t *, uint64_t, int *))(v123 + 48))(v88, 1, v87);
  uint64_t v91 = v119;
  if (v90 == 1)
  {
    sub_1E3C10CE0((uint64_t)v88, qword_1EBFDFF50);
    id v92 = *(void **)(v89 + 56);
    id v148 = (char *)((v89 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
    id v93 = v91;
    uint64_t v94 = 1;
  }
  else
  {
    uint64_t v95 = *v88;
    sub_1E3CA97A8((uint64_t)v88 + v87[5], (uint64_t)&v119[v87[5]], MEMORY[0x1E4F919C8]);
    uint64_t v96 = v87[6];
    uint64_t v97 = *(uint64_t *)((char *)v88 + v96);
    *uint64_t v91 = v95;
    *(void *)((char *)v91 + v96) = v97;
    *((unsigned char *)v91 + v87[7]) = 1;
    swift_bridgeObjectRetain();
    sub_1E3CAA110((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for PlayStateData);
    id v92 = *(void **)(v89 + 56);
    id v148 = (char *)((v89 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
    id v93 = v91;
    uint64_t v94 = 0;
  }
  id v151 = v92;
  ((void (*)(void *, uint64_t, uint64_t, int *))v92)(v93, v94, 1, v87);
  id v98 = v125;
  sub_1E3E7AA30();
  id v99 = v126;
  sub_1E3E7D660();
  uint64_t v100 = v127;
  uint64_t v101 = (uint64_t)v128;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v128, 1, 1, v146);
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  id v155 = (id)sub_1E3E7D6A0();
  uint64_t v102 = sub_1E3E7D640();
  uint64_t v103 = (uint64_t)v129;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v129, 1, 1, v102);
  sub_1E3C10DE8(&qword_1EBFE05B8, &qword_1EBFE05C0);
  sub_1E3CA9500((unint64_t *)&qword_1EBFE27B0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t v104 = v130;
  uint64_t v105 = v150;
  sub_1E3E7AC50();
  sub_1E3C10CE0(v103, (uint64_t *)&unk_1EBFE27A0);

  sub_1E3C10CE0(v101, (uint64_t *)&unk_1EBFE0708);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v146);
  (*(void (**)(char *, uint64_t))(v149 + 8))(v98, v105);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26790);
  unint64_t v106 = (*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
  uint64_t v107 = swift_allocObject();
  *(_OWORD *)(v107 + 16) = xmmword_1E3E86660;
  unint64_t v108 = v107 + v106;
  id v109 = v145;
  sub_1E3CA97A8((uint64_t)v145, v107 + v106, (uint64_t (*)(void))type metadata accessor for PlayStateData);
  ((void (*)(unint64_t, void, uint64_t, uint64_t))v151)(v108, 0, 1, v144);
  sub_1E3C10DE8(&qword_1EAE267A8, (uint64_t *)&unk_1EBFE0498);
  id v110 = v131;
  uint64_t v111 = v133;
  sub_1E3E7AD00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v104, v111);
  sub_1E3C10DE8((unint64_t *)&unk_1EAE267B0, &qword_1EBFE03D0);
  uint64_t v112 = v135;
  uint64_t v75 = sub_1E3E7AB70();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v110, v112);
  sub_1E3CAA110((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for PlayStateData);
  v153(v33, v154);
  uint64_t v42 = v115;
LABEL_26:
  sub_1E3C10CE0((uint64_t)v42, qword_1EBFDFF50);
  return v75;
}

uint64_t sub_1E3CA6D2C()
{
  uint64_t v0 = (void *)MPCPlayerResponse.currentItem.getter();
  if (!v0) {
    return MEMORY[0x1E4FBC870];
  }
  id v1 = v0;
  id v2 = objc_msgSend(v1, sel_identifiers);
  id v3 = objc_msgSend(v2, sel_library);

  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_databaseID);
    swift_unknownObjectRelease();
    sub_1E3E7CD30();
  }
  else
  {
  }
  id v6 = v1;
  id v7 = objc_msgSend(v6, sel_identifiers);
  id v8 = objc_msgSend(v7, sel_universalStore);

  if (v8)
  {
    objc_msgSend(v8, sel_adamID);
    swift_unknownObjectRelease();
    sub_1E3E7A530();
  }

  uint64_t v9 = sub_1E3E79B90();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1E3CA6E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v35 = a1 + 56;
  *(void *)(v4 + 16) = a2;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  int64_t v36 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v39 = a2 + 56;
  uint64_t v40 = a2;
  swift_bridgeObjectRetain();
  uint64_t v37 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (v8)
  {
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v12 = v11 | (v10 << 6);
LABEL_23:
    if (*(void *)(v40 + 16))
    {
      int64_t v38 = v10;
      uint64_t v16 = *(void *)(v37 + 48) + 24 * v12;
      uint64_t v18 = *(void *)v16;
      uint64_t v17 = *(void *)(v16 + 8);
      char v19 = *(unsigned char *)(v16 + 16);
      sub_1E3E7E270();
      sub_1E3C30D14(v18, v17, v19);
      sub_1E3E79BB0();
      uint64_t v20 = sub_1E3E7E2B0();
      uint64_t v21 = -1 << *(unsigned char *)(v40 + 32);
      unint64_t v22 = v20 & ~v21;
      if ((*(void *)(v39 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
      {
        uint64_t v23 = *(void *)(v40 + 48) + 24 * v22;
        uint64_t v24 = *(void *)v23;
        uint64_t v25 = *(void *)(v23 + 8);
        char v26 = *(unsigned char *)(v23 + 16);
        sub_1E3C30D14(*(void *)v23, v25, v26);
        char v27 = sub_1E3E79BA0();
        sub_1E3C30D24(v24, v25, v26);
        if (v27)
        {
LABEL_29:
          sub_1E3C30D24(v18, v17, v19);
          swift_release();
          uint64_t v34 = 1;
LABEL_30:
          swift_bridgeObjectRelease();
          swift_release();
          return v34;
        }
        uint64_t v28 = ~v21;
        while (1)
        {
          unint64_t v22 = (v22 + 1) & v28;
          if (((*(void *)(v39 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
            break;
          }
          uint64_t v29 = *(void *)(v40 + 48) + 24 * v22;
          uint64_t v30 = *(void *)v29;
          uint64_t v31 = *(void *)(v29 + 8);
          char v32 = *(unsigned char *)(v29 + 16);
          sub_1E3C30D14(*(void *)v29, v31, v32);
          char v33 = sub_1E3E79BA0();
          sub_1E3C30D24(v30, v31, v32);
          if (v33) {
            goto LABEL_29;
          }
        }
      }
      uint64_t result = sub_1E3C30D24(v18, v17, v19);
      int64_t v10 = v38;
    }
  }
  int64_t v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v13 >= v36) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v35 + 8 * v13);
  ++v10;
  if (v14) {
    goto LABEL_22;
  }
  int64_t v10 = v13 + 1;
  if (v13 + 1 >= v36) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v35 + 8 * v10);
  if (v14) {
    goto LABEL_22;
  }
  int64_t v10 = v13 + 2;
  if (v13 + 2 >= v36) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v35 + 8 * v10);
  if (v14) {
    goto LABEL_22;
  }
  int64_t v10 = v13 + 3;
  if (v13 + 3 >= v36) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v35 + 8 * v10);
  if (v14) {
    goto LABEL_22;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v36)
  {
LABEL_31:
    swift_release();
    uint64_t v34 = 0;
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v35 + 8 * v15);
  int64_t v10 = v15;
  if (v14)
  {
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v36) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v35 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1E3CA7214()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDFF40);
  MEMORY[0x1F4188790](v0);
  id v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBFDFF50);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)v19 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0488);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = sub_1E3CA4CD4();
  uint64_t v13 = type metadata accessor for PlayStateData();
  unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v8, 1, 1, v13);
  v14(v5, 1, 1, v13);
  uint64_t v15 = (uint64_t)&v2[*(int *)(v0 + 48)];
  sub_1E3CA98D4((uint64_t)v8, (uint64_t)v2);
  sub_1E3CA98D4((uint64_t)v5, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0550);
  sub_1E3C10DE8(&qword_1EBFE0548, &qword_1EBFE0550);
  sub_1E3E7AC20();
  sub_1E3C10CE0((uint64_t)v2, (uint64_t *)&unk_1EBFDFF40);
  swift_release();
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1E3CA9974;
  *(void *)(v17 + 24) = v16;
  sub_1E3C10DE8(&qword_1EBFE0480, (uint64_t *)&unk_1EBFE0488);
  sub_1E3E7AD60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE26E8);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE26F0, &qword_1EBFE26E8);
  sub_1E3E7A960();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1E3CA75D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDFF40);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(int *)(v9 + 56);
  uint64_t v11 = a3 + v10;
  uint64_t v12 = (uint64_t)&v8[v10];
  uint64_t v13 = a1 + v10;
  sub_1E3C34078(a1, (uint64_t)v8, qword_1EBFDFF50);
  sub_1E3C34078(v13, v12, qword_1EBFDFF50);
  sub_1E3CA98D4(v12, a3);
  sub_1E3C34078(a2, v11, qword_1EBFDFF50);
  return sub_1E3C10CE0((uint64_t)v8, qword_1EBFDFF50);
}

uint64_t sub_1E3CA76C0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v9 = MEMORY[0x1E4FBC860];
    MEMORY[0x1F4188790](result);
    id v8[2] = &v9;
    void v8[3] = v5;
    v8[4] = a2;
    sub_1E3CA7DAC((uint64_t)sub_1E3CA99C8, (uint64_t)v8);
    swift_beginAccess();
    uint64_t v6 = *(void (**)(uint64_t))(v4 + 96);
    if (v6)
    {
      sub_1E3C19A6C(*(void *)(v4 + 96));
      uint64_t v7 = swift_bridgeObjectRetain();
      v6(v7);
      sub_1E3C1A3C4((uint64_t)v6);
      swift_bridgeObjectRelease();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1E3CA77D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E79380();
  uint64_t v62 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBFDFF50);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PlayStateData();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = (void *)(a2 + 80);
  swift_beginAccess();
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_1E3CC5410(v16);
  swift_bridgeObjectRelease();
  v58[1] = a1;
  sub_1E3D3A650((uint64_t)v17);
  *(void *)(a2 + 80) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  sub_1E3C34078(a3, (uint64_t)v11, qword_1EBFDFF50);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v63 = v12;
  if (v18(v11, 1, v12) == 1) {
    return sub_1E3C10CE0((uint64_t)v11, qword_1EBFDFF50);
  }
  sub_1E3CA9740((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PlayStateData);
  uint64_t v20 = *(void *)v15;
  uint64_t v21 = *(void *)(*(void *)v15 + 56);
  uint64_t v59 = *(void *)v15 + 56;
  uint64_t v22 = 1 << *(unsigned char *)(v20 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v21;
  int64_t v60 = (unint64_t)(v22 + 63) >> 6;
  uint64_t v61 = v20;
  swift_bridgeObjectRetain();
  int64_t v25 = 0;
  uint64_t v26 = (uint64_t)v15;
  while (1)
  {
    if (v24)
    {
      unint64_t v27 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      int64_t v64 = v25;
      unint64_t v28 = v27 | (v25 << 6);
    }
    else
    {
      int64_t v29 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        goto LABEL_39;
      }
      if (v29 >= v60)
      {
LABEL_35:
        swift_release();
        uint64_t v56 = swift_bridgeObjectRetain();
        double v57 = sub_1E3CC52F4(v56);
        swift_bridgeObjectRelease();
        sub_1E3D3A650((uint64_t)v57);
        return sub_1E3CAA110(v26, (uint64_t (*)(void))type metadata accessor for PlayStateData);
      }
      unint64_t v30 = *(void *)(v59 + 8 * v29);
      int64_t v31 = v25 + 1;
      if (!v30)
      {
        int64_t v31 = v25 + 2;
        if (v25 + 2 >= v60) {
          goto LABEL_35;
        }
        unint64_t v30 = *(void *)(v59 + 8 * v31);
        if (!v30)
        {
          int64_t v31 = v25 + 3;
          if (v25 + 3 >= v60) {
            goto LABEL_35;
          }
          unint64_t v30 = *(void *)(v59 + 8 * v31);
          if (!v30)
          {
            uint64_t v32 = v25 + 4;
            if (v25 + 4 >= v60) {
              goto LABEL_35;
            }
            unint64_t v30 = *(void *)(v59 + 8 * v32);
            if (!v30)
            {
              while (1)
              {
                int64_t v31 = v32 + 1;
                if (__OFADD__(v32, 1)) {
                  goto LABEL_40;
                }
                if (v31 >= v60) {
                  goto LABEL_35;
                }
                unint64_t v30 = *(void *)(v59 + 8 * v31);
                ++v32;
                if (v30) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v31 = v25 + 4;
          }
        }
      }
LABEL_23:
      unint64_t v24 = (v30 - 1) & v30;
      int64_t v64 = v31;
      unint64_t v28 = __clz(__rbit64(v30)) + (v31 << 6);
    }
    uint64_t v33 = *(void *)(v61 + 48) + 24 * v28;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v33 + 8);
    char v36 = *(unsigned char *)(v33 + 16);
    uint64_t v37 = v26;
    uint64_t v38 = v26 + *(int *)(v63 + 20);
    uint64_t v39 = v65;
    swift_beginAccess();
    uint64_t v40 = (uint64_t)v8;
    sub_1E3CA97A8(v38, (uint64_t)v8, MEMORY[0x1E4F919C8]);
    sub_1E3C30D14(v34, v35, v36);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v66 = (void *)*v39;
    uint64_t v42 = v66;
    *uint64_t v39 = 0x8000000000000000;
    unint64_t v44 = sub_1E3C2E840(v34, v35, v36);
    uint64_t v45 = v42[2];
    BOOL v46 = (v43 & 1) == 0;
    uint64_t v47 = v45 + v46;
    if (__OFADD__(v45, v46)) {
      break;
    }
    char v48 = v43;
    if (v42[3] >= v47)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        double v51 = v66;
        if (v43) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_1E3D13638();
        double v51 = v66;
        if (v48) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_1E3D10574(v47, isUniquelyReferenced_nonNull_native);
      unint64_t v49 = sub_1E3C2E840(v34, v35, v36);
      if ((v48 & 1) != (v50 & 1)) {
        goto LABEL_41;
      }
      unint64_t v44 = v49;
      double v51 = v66;
      if (v48)
      {
LABEL_6:
        unint64_t v8 = (char *)v40;
        sub_1E3CA99F0(v40, v51[7] + *(void *)(v62 + 72) * v44);
        goto LABEL_7;
      }
    }
    v51[(v44 >> 6) + 8] |= 1 << v44;
    uint64_t v52 = v51[6] + 24 * v44;
    *(void *)uint64_t v52 = v34;
    *(void *)(v52 + 8) = v35;
    *(unsigned char *)(v52 + 16) = v36;
    unint64_t v8 = (char *)v40;
    sub_1E3CA9740(v40, v51[7] + *(void *)(v62 + 72) * v44, MEMORY[0x1E4F919C8]);
    uint64_t v53 = v51[2];
    BOOL v54 = __OFADD__(v53, 1);
    uint64_t v55 = v53 + 1;
    if (v54) {
      goto LABEL_38;
    }
    v51[2] = v55;
    sub_1E3C30D14(v34, v35, v36);
LABEL_7:
    void *v65 = v51;
    swift_bridgeObjectRelease();
    sub_1E3C30D24(v34, v35, v36);
    swift_endAccess();
    uint64_t v26 = v37;
    int64_t v25 = v64;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  uint64_t result = sub_1E3E7E200();
  __break(1u);
  return result;
}

uint64_t sub_1E3CA7DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1E3E7B770();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void **)(v2 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE07A8);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1E3E86660;
  id v11 = v9;
  sub_1E3E7B760();
  uint64_t v16 = v10;
  sub_1E3CA91E8((unint64_t *)&qword_1EBFDEE00, 255, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C10DE8((unint64_t *)&qword_1EBFDEE20, (uint64_t *)&unk_1EBFDEE10);
  sub_1E3E7DCC0();
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  sub_1E3E7D6B0();

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PlayStateDataSource.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  sub_1E3C1A3C4(*(void *)(v0 + 96));
  return v0;
}

uint64_t PlayStateDataSource.__deallocating_deinit()
{
  PlayStateDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1E3CA8040()
{
  return swift_bridgeObjectRetain();
}

id sub_1E3CA8084()
{
  return *(id *)(*(void *)v0 + 88);
}

uint64_t sub_1E3CA8090()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 96);
  sub_1E3C19A6C(v2);
  return v2;
}

uint64_t sub_1E3CA80E4(uint64_t a1, uint64_t a2)
{
  return sub_1E3CA4A58(a1, a2);
}

void (*sub_1E3CA8108(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  v3[5] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 96);
  uint64_t v6 = *(void *)(v4 + 104);
  v3[3] = v5;
  v3[4] = v6;
  sub_1E3C19A6C(v5);
  return sub_1E3CA4C58;
}

void sub_1E3CA8184()
{
  id v1 = *(id *)(*(void *)v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF488);
  sub_1E3E7D6C0();
}

uint64_t sub_1E3CA8214@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (int *)type metadata accessor for PlayStateData();
  uint64_t v11 = *((void *)v10 - 1);
  double v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (uint64_t *)((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v15 = objc_msgSend(a1, sel_tracklist, v12);
  id v16 = objc_msgSend(v15, sel_playingItem);

  if (!v16) {
    goto LABEL_5;
  }
  uint64_t v37 = a2;
  int v38 = a4;
  *(double *)&uint64_t v39 = COERCE_DOUBLE(sub_1E3CA6D2C());
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26750);
  sub_1E3C10DE8(&qword_1EAE26758, &qword_1EAE26750);
  char v17 = sub_1E3E7D3C0();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0 || objc_msgSend(a1, sel_state) == (id)1)
  {

LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v18 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v11 + 56))(a5, v18, 1, v10);
  }
  objc_msgSend(v16, sel_duration);
  double v20 = v40;
  int v21 = v43;
  objc_msgSend(v16, sel_duration);
  double v22 = 0.0;
  if (v40 > 0.0)
  {
    objc_msgSend(v16, sel_duration, v40);
    double v23 = *(double *)&v39;
    double v24 = v40;
    double v25 = v41;
    float v26 = v42;
    sub_1E3E77D90();
    double v28 = v25 + (v27 - v23) * v26;
    if (v28 >= v24) {
      double v28 = v24;
    }
    double v22 = fmax(v28, 0.0);
  }
  uint64_t v29 = sub_1E3CA6D2C();
  HIDWORD(v36) = v21;
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26760);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1E3E86660;
    *(void *)(v30 + 32) = v37;
    *(void *)(v30 + 40) = a3;
    *(unsigned char *)(v30 + 48) = 1;
  }
  else
  {
    uint64_t v30 = MEMORY[0x1E4FBC860];
  }
  uint64_t v31 = sub_1E3CB0A2C(v30, v29);
  swift_bridgeObjectRelease();
  *uint64_t v14 = v31;
  objc_msgSend(v16, sel_duration);
  *(uint64_t *)((char *)v14 + v10[6]) = v39;
  *((unsigned char *)v14 + v10[7]) = v38 & 1;
  uint64_t v32 = (double *)((char *)v14 + v10[5]);
  BOOL v33 = objc_msgSend(a1, sel_state) != (id)2;
  id v34 = objc_msgSend(a1, sel_playerPath);
  unsigned __int8 v35 = sub_1E3CA85B0();

  *uint64_t v32 = v22;
  v32[1] = v20;
  *((unsigned char *)v32 + 16) = v33;
  *((unsigned char *)v32 + 17) = BYTE4(v36);
  *((unsigned char *)v32 + 18) = v35 & 1;
  sub_1E3E79380();
  swift_storeEnumTagMultiPayload();
  sub_1E3CA9740((uint64_t)v14, a5, (uint64_t (*)(void))type metadata accessor for PlayStateData);
  uint64_t v18 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v11 + 56))(a5, v18, 1, v10);
}

id sub_1E3CA85B0()
{
  uint64_t v1 = (uint64_t)objc_msgSend(v0, sel_route);
  if (!v1) {
    return (id)v1;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
LABEL_17:

    return 0;
  }
  id result = objc_msgSend(v2, sel_endpointObject);
  if (result)
  {
    uint64_t v4 = result;
    id v5 = objc_msgSend(result, sel_outputDevices);

    if (v5)
    {
      sub_1E3C12B10(0, &qword_1EAE26768);
      unint64_t v6 = sub_1E3E7D060();

      if (v6 >> 62) {
        goto LABEL_24;
      }
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v7; uint64_t v7 = sub_1E3E7DFC0())
      {
        uint64_t v8 = 4;
        while (1)
        {
          id v9 = (v6 & 0xC000000000000001) != 0
             ? (id)MEMORY[0x1E4E77720](v8 - 4, v6)
             : *(id *)(v6 + 8 * v8);
          uint64_t v10 = v9;
          uint64_t v11 = v8 - 3;
          if (__OFADD__(v8 - 4, 1)) {
            break;
          }
          if (!objc_msgSend(v9, sel_isLocalDevice)
            || objc_msgSend(v10, sel_deviceType) == 3)
          {
            swift_bridgeObjectRelease();

LABEL_20:
            uint64_t v1 = 1;
            goto LABEL_21;
          }
          unsigned int v12 = objc_msgSend(v10, sel_deviceSubtype);

          if (v12 == 14)
          {

            swift_bridgeObjectRelease();
            goto LABEL_20;
          }
          ++v8;
          if (v11 == v7) {
            goto LABEL_16;
          }
        }
        __break(1u);
LABEL_24:
        swift_bridgeObjectRetain();
      }
LABEL_16:

      swift_bridgeObjectRelease();
      uint64_t v1 = 0;
LABEL_21:
      swift_bridgeObjectRelease();
      return (id)v1;
    }
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_1E3CA87B8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1E3E7B7F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  *id v9 = sub_1E3E7D6A0();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  char v10 = sub_1E3E7B820();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v11 = (void *)MPCPlayerResponse.currentItem.getter();
  if (v11)
  {
    unsigned int v12 = v11;
    id v13 = objc_msgSend(v11, sel_identifiers);
    id v14 = objc_msgSend(v13, sel_library);

    if (v14)
    {
      id v15 = objc_msgSend(v14, sel_databaseID);

      swift_unknownObjectRelease();
LABEL_16:
      id v28 = a1;
      uint64_t v29 = a2;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      goto LABEL_17;
    }
  }
  id v16 = (void *)MPCPlayerResponse.currentItem.getter();
  if (!v16) {
    goto LABEL_16;
  }
  char v17 = v16;
  id v18 = objc_msgSend(v16, sel_identifiers);
  id v19 = objc_msgSend(v18, sel_universalStore);

  if (!v19)
  {

    goto LABEL_16;
  }
  objc_msgSend(v19, sel_adamID);
  swift_unknownObjectRelease();
  uint64_t v20 = sub_1E3E7A530();

  if (v20 < 0)
  {
LABEL_22:
    __break(1u);
    return;
  }
  int v21 = (uint64_t *)(v3 + 16);
  swift_beginAccess();
  uint64_t v22 = *(void *)(v3 + 16);
  if (*(void *)(v22 + 16))
  {
    unint64_t v23 = sub_1E3C2E7FC(v20);
    if (v24)
    {
      double v25 = (uint64_t *)(*(void *)(v22 + 56) + 16 * v23);
      uint64_t v26 = *v25;
      uint64_t v27 = v25[1];
      swift_bridgeObjectRetain();
      id v28 = a1;
      uint64_t v29 = a2;
      uint64_t v30 = v26;
      uint64_t v31 = v27;
LABEL_17:
      sub_1E3CA8214(v28, v30, v31, 0, v29);
      return;
    }
  }
  id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F91F70]), sel_init);
  objc_msgSend(v32, sel_setStoreTrackId_, v20);
  id v33 = objc_msgSend(*(id *)(v3 + 24), sel_findEpisodeWithRequest_, v32);
  if (v33 && (id v34 = v33, v35 = objc_msgSend(v33, sel_uuid), v34, v35))
  {
    uint64_t v36 = sub_1E3E7CD30();
    uint64_t v38 = v37;

    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = *v21;
    *int v21 = 0x8000000000000000;
    sub_1E3E67E40(v36, v38, v20, isUniquelyReferenced_nonNull_native);
    *int v21 = v45;
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v40 = a1;
    uint64_t v41 = a2;
    uint64_t v42 = v36;
    uint64_t v43 = v38;
  }
  else
  {
    id v40 = a1;
    uint64_t v41 = a2;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
  }
  sub_1E3CA8214(v40, v42, v43, 0, v41);
}

uint64_t sub_1E3CA8B7C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1E3CA8BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 80);
  if (*(void *)(v10 + 16))
  {
    char v11 = a4 & 1;
    swift_bridgeObjectRetain();
    sub_1E3C30D14(a2, a3, v11);
    unint64_t v12 = sub_1E3C2E840(a2, a3, v11);
    if (v13)
    {
      unint64_t v14 = v12;
      uint64_t v15 = *(void *)(v10 + 56);
      uint64_t v16 = sub_1E3E79380();
      uint64_t v17 = *(void *)(v16 - 8);
      sub_1E3CA97A8(v15 + *(void *)(v17 + 72) * v14, a5, MEMORY[0x1E4F919C8]);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a5, 0, 1, v16);
    }
    else
    {
      uint64_t v20 = sub_1E3E79380();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a5, 1, 1, v20);
    }
    swift_bridgeObjectRelease();
    return sub_1E3C30D24(a2, a3, v11);
  }
  else
  {
    uint64_t v18 = sub_1E3E79380();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a5, 1, 1, v18);
  }
}

uint64_t sub_1E3CA8DAC(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v30 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v31 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v32 = result;
  uint64_t v35 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      uint64_t v33 = (v6 - 1) & v6;
      int64_t v34 = v3;
      unint64_t v7 = __clz(__rbit64(v6)) | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v8 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v8 >= v31) {
      return 1;
    }
    unint64_t v9 = *(void *)(v30 + 8 * v8);
    int64_t v10 = v3 + 1;
    if (!v9)
    {
      int64_t v10 = v3 + 2;
      if (v3 + 2 >= v31) {
        return 1;
      }
      unint64_t v9 = *(void *)(v30 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v3 + 3;
        if (v3 + 3 >= v31) {
          return 1;
        }
        unint64_t v9 = *(void *)(v30 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v3 + 4;
          if (v3 + 4 >= v31) {
            return 1;
          }
          unint64_t v9 = *(void *)(v30 + 8 * v10);
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_25:
    uint64_t v33 = (v9 - 1) & v9;
    int64_t v34 = v10;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_26:
    uint64_t v12 = *(void *)(result + 48) + 24 * v7;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    char v15 = *(unsigned char *)(v12 + 16);
    sub_1E3E7E270();
    sub_1E3C30D14(v13, v14, v15);
    sub_1E3E79BB0();
    uint64_t v16 = sub_1E3E7E2B0();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = v16 & ~v17;
    if (((*(void *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      goto LABEL_33;
    }
    uint64_t v19 = *(void *)(a2 + 48) + 24 * v18;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    char v22 = *(unsigned char *)(v19 + 16);
    sub_1E3C30D14(*(void *)v19, v21, v22);
    char v23 = sub_1E3E79BA0();
    sub_1E3C30D24(v20, v21, v22);
    if ((v23 & 1) == 0)
    {
      uint64_t v24 = ~v17;
      while (1)
      {
        unint64_t v18 = (v18 + 1) & v24;
        if (((*(void *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          break;
        }
        uint64_t v25 = *(void *)(a2 + 48) + 24 * v18;
        uint64_t v26 = *(void *)v25;
        uint64_t v27 = *(void *)(v25 + 8);
        char v28 = *(unsigned char *)(v25 + 16);
        sub_1E3C30D14(*(void *)v25, v27, v28);
        char v29 = sub_1E3E79BA0();
        sub_1E3C30D24(v26, v27, v28);
        if (v29) {
          goto LABEL_7;
        }
      }
LABEL_33:
      sub_1E3C30D24(v13, v14, v15);
      return 0;
    }
LABEL_7:
    sub_1E3C30D24(v13, v14, v15);
    id result = v32;
    unint64_t v6 = v33;
    int64_t v3 = v34;
  }
  uint64_t v11 = v3 + 5;
  if (v3 + 5 >= v31) {
    return 1;
  }
  unint64_t v9 = *(void *)(v30 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v31) {
      return 1;
    }
    unint64_t v9 = *(void *)(v30 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_25;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1E3CA90D4(uint64_t *a1, uint64_t *a2)
{
  if ((sub_1E3CA8DAC(*a1, *a2) & 1) != 0
    && (uint64_t v4 = (int *)type metadata accessor for PlayStateData(),
        (MEMORY[0x1E4E72C90]((char *)a1 + v4[5], (char *)a2 + v4[5]) & 1) != 0)
    && *(double *)((char *)a1 + v4[6]) == *(double *)((char *)a2 + v4[6]))
  {
    char v5 = *((unsigned char *)a1 + v4[7]) ^ *((unsigned char *)a2 + v4[7]) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t type metadata accessor for PlayStateDataSource()
{
  return self;
}

uint64_t sub_1E3CA9190(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1E3CA91E8((unint64_t *)&unk_1EAE26740, a2, (void (*)(uint64_t))type metadata accessor for PlayStateDataSource);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1E3CA91E8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3CA9230()
{
  return sub_1E3CA91E8(&qword_1EBFE0328, 255, MEMORY[0x1E4F919C8]);
}

uint64_t sub_1E3CA927C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for PlayStateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlayStateDataSource);
}

uint64_t dispatch thunk of PlayStateDataSource.expectedEpisodeStates.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of PlayStateDataSource.expectedEpisodeStates.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of PlayStateDataSource.expectedEpisodeStates.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of PlayStateDataSource.__allocating_init(playbackController:pendingPlaybackStore:episodeLookupUtil:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of PlayStateDataSource.refreshControllerStates.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of PlayStateDataSource.refreshControllerStates.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of PlayStateDataSource.refreshControllerStates.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of PlayStateDataSource.startObservingChanges()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

ValueMetadata *type metadata accessor for PlayStateDataSource.Config()
{
  return &type metadata for PlayStateDataSource.Config;
}

uint64_t type metadata accessor for PlayStateData()
{
  uint64_t result = qword_1EBFDFF30;
  if (!qword_1EBFDFF30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1E3CA9460()
{
  unint64_t result = qword_1EBFE2780;
  if (!qword_1EBFE2780)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBFE2770);
    sub_1E3CA9500((unint64_t *)&unk_1EBFE2790, (unint64_t *)&unk_1EBFE2760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE2780);
  }
  return result;
}

uint64_t sub_1E3CA9500(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E3C12B10(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3CA9544()
{
  unint64_t result = qword_1EBFE0730;
  if (!qword_1EBFE0730)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE2850);
    sub_1E3CA9500((unint64_t *)&unk_1EBFE0740, &qword_1EBFE2848);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE0730);
  }
  return result;
}

uint64_t sub_1E3CA95E4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3CA961C(void *a1, void (*a2)(char *, uint64_t), void *a3)
{
  return sub_1E3CA596C(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1E3CA962C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3CA9664@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v5 = *(uint64_t (**)(uint64_t, char *, void))(v2 + 16);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE06F8);
  uint64_t result = v5(v6, &a1[*(int *)(v7 + 48)], *(void *)&a1[*(int *)(v7 + 64)]);
  *a2 = result;
  return result;
}

uint64_t sub_1E3CA96CC()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1E3CA9714(uint64_t a1@<X8>)
{
  sub_1E3CA87B8(*(void **)(v1 + 24), a1);
}

uint64_t sub_1E3CA9740(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E3CA97A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E3CA9810()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1E3CA9848(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1E3CA9880(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1E3CA98AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3CA8BBC(**(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), a1);
}

uint64_t sub_1E3CA98D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBFDFF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3CA993C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3CA9974(uint64_t a1, uint64_t a2)
{
  return sub_1E3CA76C0(a1, a2);
}

uint64_t sub_1E3CA997C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDFF40);
  return v3(a1, a1 + *(int *)(v4 + 48));
}

uint64_t sub_1E3CA99C8()
{
  return sub_1E3CA77D8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1E3CA99D4()
{
  return sub_1E3D312D8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1E3CA99F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E79380();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *sub_1E3CA9A54(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    int64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1E3E79380();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v12 = sub_1E3E77E20();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v10, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267C0);
      v9[*(int *)(v15 + 48)] = v10[*(int *)(v15 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v16 = a3[7];
    *(void *)((char *)v7 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)v7 + v16) = *((unsigned char *)a2 + v16);
  }
  return v7;
}

uint64_t sub_1E3CA9C60(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1E3E79380();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v6 = sub_1E3E77E20();
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v6);
    if (!result)
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      return v7(v4, v6);
    }
  }
  return result;
}

void *sub_1E3CA9D60(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E79380();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v10 = sub_1E3E77E20();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267C0);
    v7[*(int *)(v13 + 48)] = v8[*(int *)(v13 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v14 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  return a1;
}

void *sub_1E3CA9F20(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1E3CAA110((uint64_t)a1 + v6, MEMORY[0x1E4F919C8]);
    uint64_t v9 = sub_1E3E79380();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v10 = sub_1E3E77E20();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267C0);
      v7[*(int *)(v13 + 48)] = v8[*(int *)(v13 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_1E3CAA110(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1E3CAA170(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E79380();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v10 = sub_1E3E77E20();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267C0);
    v7[*(int *)(v13 + 48)] = v8[*(int *)(v13 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v14 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  return a1;
}

void *sub_1E3CAA328(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1E3CAA110((uint64_t)a1 + v6, MEMORY[0x1E4F919C8]);
    uint64_t v9 = sub_1E3E79380();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v10 = sub_1E3E77E20();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267C0);
      v7[*(int *)(v13 + 48)] = v8[*(int *)(v13 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v14 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  return a1;
}

uint64_t sub_1E3CAA50C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3CAA520);
}

uint64_t sub_1E3CAA520(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1E3E79380();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1E3CAA5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3CAA5E4);
}

void *sub_1E3CAA5E4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1E3E79380();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1E3CAA68C()
{
  uint64_t result = sub_1E3E79380();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double UIEdgeInsets.init(top:leading:bottom:trailing:layoutDirection:)(uint64_t a1, double a2)
{
  if (a1 && a1 != 1)
  {
    type metadata accessor for UIUserInterfaceLayoutDirection(0);
    void v6[3] = v4;
    v6[0] = a1;
    unrecognizedEnumValueEncountered(_:)((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  }
  return a2;
}

UIEdgeInsets __swiftcall UIEdgeInsets.subtracting(other:)(UIEdgeInsets other)
{
  double v5 = v1 - other.top;
  double v6 = v2 - other.left;
  double v7 = v3 - other.bottom;
  double v8 = v4 - other.right;
  result.right = v8;
  result.bottom = v7;
  result.left = v6;
  result.top = v5;
  return result;
}

id IMPlayerItem.init(episode:)(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithEpisode_, a1);

  return v2;
}

{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  char *v30;
  id v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  float v43;
  void *v44;
  void (*v45)(char *, uint64_t);
  id v46;
  void *v47;
  id v48;
  char *v49;
  uint64_t v50;
  void *v51;
  id v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, void, uint64_t);
  char *v78;
  uint64_t v79;
  void *v80;
  void *v81;
  void (*v82)(char *, uint64_t);
  char v83;
  char *v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  id v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  char v96;
  char **v97;
  char *v98;
  uint64_t v99;
  char **v100;
  char **v101;
  id v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t *boxed_opaque_existential_1;
  id v108;
  void *v109;
  id v110;
  id v111;
  void *v112;
  id v113;
  id v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  id v119;
  void *v120;
  id v121;
  id v122;
  void *v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  void *v129;
  id v130;
  id v131;
  void *v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  void *v139;
  id v140;
  id v141;
  void *v142;
  id v143;
  id v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  void *v149;
  uint64_t v150;
  id v151;
  void *v152;
  uint64_t v153;
  id v154;
  void *v155;
  id v156;
  void *v157;
  id v158;
  void *v159;
  id v160;
  void *v161;
  id v162;
  void *v163;
  id v164;
  id v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  void *v170;
  uint64_t v171;
  char *v172;
  id v173;
  void *v174;
  uint64_t v175;
  char *v176;
  id v177;
  void *v178;
  id v179;
  void *v180;
  id v181;
  uint64_t v182;
  id v183;
  void *v184;
  void *v185;
  id v186;
  void *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  id v191;
  void *v192;
  uint64_t v193;
  id v194;
  void *v195;
  uint64_t v196;
  id v197;
  void *v198;
  uint64_t v199;
  char *v200;
  id v201;
  void *v202;
  id v203;
  void *v204;
  id v205;
  uint64_t v207;
  void (*v208)(char *, uint64_t, uint64_t, uint64_t);
  char *v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  uint64_t v215;
  id v216;
  char *v217;
  uint64_t v218;
  id v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _OWORD v223[2];
  uint64_t v224[3];
  uint64_t v225;
  unint64_t v226;

  id v2 = v1;
  double v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v4 - 8);
  v214 = (char *)&v207 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = sub_1E3E79580();
  double v7 = *(void *)(v6 - 8);
  v221 = v6;
  v222 = v7;
  MEMORY[0x1F4188790](v6);
  v212 = (char *)&v207 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  v217 = (char *)&v207 - v10;
  uint64_t v11 = sub_1E3E77E20();
  v220 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v207 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1E3E77D00();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v207 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v18 - 8);
  v209 = (char *)&v207 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  v211 = (char *)&v207 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v207 - v23;
  MEMORY[0x1F4188790](v25);
  v210 = (char *)&v207 - v26;
  char v28 = MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v207 - v29;
  int64_t v31 = objc_msgSend(a1, sel_bestUrl, v28);
  v218 = v15;
  v213 = v17;
  if (v31)
  {
    sub_1E3E77C90();

    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v30, v17, v14);
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v32(v30, 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v30, 1, v14) == 1)
    {
      int64_t v31 = 0;
    }
    else
    {
      int64_t v31 = (id)sub_1E3E77C40();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v14);
    }
  }
  else
  {
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v32(v30, 1, 1, v14);
  }
  uint64_t v33 = (uint64_t)v24;
  int64_t v34 = objc_msgSend(v2, sel_initWithUrl_, v31);

  uint64_t v35 = v34;
  uint64_t v36 = objc_msgSend(a1, sel_title);
  objc_msgSend(v35, sel_setTitle_, v36);

  uint64_t v37 = objc_msgSend(self, sel_validatedIdNumberFromStoreId_, objc_msgSend(a1, sel_storeTrackId));
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = objc_msgSend(v37, sel_longLongValue);
  }
  else
  {
    uint64_t v39 = 0;
  }
  objc_msgSend(v35, sel_setEpisodeStoreId_, v39);
  id v40 = objc_msgSend(a1, sel_uuid);
  objc_msgSend(v35, sel_setEpisodeUuid_, v40);

  uint64_t v41 = objc_msgSend(a1, sel_guid);
  objc_msgSend(v35, sel_setEpisodeGuid_, v41);

  uint64_t v42 = objc_msgSend(a1, sel_objectID);
  objc_msgSend(v35, sel_setEpisodeObjectID_, v42);

  objc_msgSend(a1, sel_duration);
  objc_msgSend(v35, sel_setDuration_);
  objc_msgSend(a1, sel_playhead);
  objc_msgSend(v35, sel_setPlayhead_, v43);
  objc_msgSend(v35, sel_setIsVideo_, objc_msgSend(a1, sel_isVideo));
  objc_msgSend(a1, sel_pubDate);
  sub_1E3E77D70();
  uint64_t v44 = (void *)sub_1E3E77DD0();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v220 + 8);
  v215 = v11;
  v45(v13, v11);
  objc_msgSend(v35, sel_setPubDate_, v44);

  objc_msgSend(v35, sel_setEpisodePID_, objc_msgSend(a1, sel_persistentID));
  objc_msgSend(v35, sel_setIsNotSubscribeable_, 0);
  objc_msgSend(v35, sel_setIsExplicit_, objc_msgSend(a1, sel_isExplicit));
  BOOL v46 = objc_msgSend(a1, sel_podcast);
  if (v46)
  {
    uint64_t v47 = v46;
    char v48 = objc_msgSend(v46, sel_imageURL);

    if (v48)
    {
      sub_1E3E7CD30();

      unint64_t v49 = v210;
      sub_1E3E77CD0();
      swift_bridgeObjectRelease();
      char v50 = v218;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v49, 1, v14) == 1)
      {
        double v51 = 0;
      }
      else
      {
        double v51 = (void *)sub_1E3E77C40();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v14);
      }
      objc_msgSend(v35, sel_setArtworkUrl_, v51);
    }
  }
  objc_msgSend(v35, sel_setSeasonNumber_, objc_msgSend(a1, sel_seasonNumber));
  objc_msgSend(v35, sel_setEpisodeNumber_, objc_msgSend(a1, sel_episodeNumber));
  objc_msgSend(v35, sel_setEpisodeType_, objc_msgSend(a1, sel_episodeTypeResolvedValue));
  uint64_t v52 = objc_msgSend(a1, sel_podcast);
  if (v52)
  {
    uint64_t v53 = v52;
    BOOL v54 = v14;
    uint64_t v55 = objc_msgSend(v52, sel_isSerialShowTypeInFeed);
  }
  else
  {
    BOOL v54 = v14;
    uint64_t v55 = 0;
  }
  uint64_t v56 = v218;
  objc_msgSend(v35, sel_setPodcastIsSerial_, v55);
  objc_msgSend(v35, sel_setPlayCount_, objc_msgSend(a1, sel_playCount));
  double v57 = objc_msgSend(a1, sel_podcast);
  char v58 = v57;
  v207 = v54;
  if (v57)
  {
    uint64_t v59 = objc_msgSend(v57, sel_bestAvailableStoreCleanURL);

    if (v59)
    {
      int64_t v60 = (uint64_t)v211;
      sub_1E3E77C90();

      uint64_t v61 = 0;
    }
    else
    {
      uint64_t v61 = 1;
      int64_t v60 = (uint64_t)v211;
    }
    v32((char *)v60, v61, 1, v54);
    sub_1E3CAC398(v60, v33, &qword_1EBFE6070);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v33, 1, v54) == 1)
    {
      char v58 = 0;
    }
    else
    {
      char v58 = (void *)sub_1E3E77C40();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v33, v54);
    }
  }
  else
  {
    v32((char *)v33, 1, 1, v54);
  }
  objc_msgSend(v35, sel_setPodcastShareUrl_, v58, v207);

  uint64_t v62 = objc_msgSend(a1, sel_priceType);
  objc_msgSend(v35, sel_setPriceType_, v62);

  uint64_t v63 = objc_msgSend(a1, sel_podcast);
  int64_t v64 = v63;
  if (v63)
  {
    uint64_t v65 = objc_msgSend(v63, sel_displayType);

    if (v65)
    {
      sub_1E3E7CD30();

      int64_t v64 = (void *)sub_1E3E7CCF0();
      swift_bridgeObjectRelease();
    }
    else
    {
      int64_t v64 = 0;
    }
  }
  objc_msgSend(v35, sel_setPodcastDisplayType_, v64);

  id v66 = objc_msgSend(a1, sel_podcast);
  id v67 = v66;
  if (v66)
  {
    id v68 = objc_msgSend(v66, sel_channel);

    if (v68)
    {
      id v67 = objc_msgSend(v68, sel_subscriptionActive);
    }
    else
    {
      id v67 = 0;
    }
  }
  objc_msgSend(v35, sel_setPaidSubscriptionActive_, v67);
  uint64_t v69 = objc_msgSend(a1, sel_podcast);
  unint64_t v70 = v69;
  v208 = v32;
  v219 = a1;
  v216 = v35;
  if (v69)
  {
    uint64_t v71 = objc_msgSend(v69, sel_channel);

    if (v71
      && (uint64_t v72 = objc_msgSend(v71, sel_subscriptionOfferAppType),
          v71,
          v72))
    {
      uint64_t v73 = sub_1E3E7CD30();
      unint64_t v70 = v74;
    }
    else
    {
      uint64_t v73 = 0;
      unint64_t v70 = 0;
    }
  }
  else
  {
    uint64_t v73 = 0;
  }
  uint64_t v75 = v221;
  uint64_t v76 = v222;
  uint64_t v77 = *(void (**)(char *, void, uint64_t))(v222 + 104);
  uint64_t v78 = v217;
  v77(v217, *MEMORY[0x1E4F91A38], v221);
  uint64_t v79 = sub_1E3E79570();
  uint64_t v81 = v80;
  uint64_t v82 = *(void (**)(char *, uint64_t))(v76 + 8);
  v222 = v76 + 8;
  v82(v78, v75);
  if (v70)
  {
    if (v73 == v79 && v70 == v81) {
      uint64_t v83 = 1;
    }
    else {
      uint64_t v83 = sub_1E3E7E150();
    }
    uint64_t v84 = v212;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v83 = 0;
    uint64_t v84 = v212;
  }
  swift_bridgeObjectRelease();
  uint64_t v85 = v216;
  objc_msgSend(v216, sel_setIsAppleMusicEpisode_, v83 & 1);
  id v86 = objc_msgSend(v219, sel_podcast);
  id v87 = v86;
  if (v86)
  {
    id v88 = objc_msgSend(v86, sel_channel);

    if (v88
      && (uint64_t v89 = objc_msgSend(v88, sel_subscriptionOfferAppType),
          v88,
          v89))
    {
      int v90 = sub_1E3E7CD30();
      id v87 = v91;
    }
    else
    {
      int v90 = 0;
      id v87 = 0;
    }
  }
  else
  {
    int v90 = 0;
  }
  id v92 = v221;
  v77(v84, *MEMORY[0x1E4F91A30], v221);
  id v93 = sub_1E3E79570();
  uint64_t v95 = v94;
  v82(v84, v92);
  if (v87)
  {
    if (v90 == v93 && v87 == v95) {
      uint64_t v96 = 1;
    }
    else {
      uint64_t v96 = sub_1E3E7E150();
    }
    uint64_t v97 = &selRef_artworkBorderColorForTheme_;
    id v98 = v213;
    id v99 = (uint64_t)v214;
    uint64_t v100 = &selRef_setView_;
    uint64_t v101 = &selRef_setView_;
    uint64_t v102 = v219;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v96 = 0;
    uint64_t v97 = &selRef_artworkBorderColorForTheme_;
    id v98 = v213;
    id v99 = (uint64_t)v214;
    uint64_t v100 = &selRef_setView_;
    uint64_t v101 = &selRef_setView_;
    uint64_t v102 = v219;
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v85, sel_setIsAppleNewsEpisode_, v96 & 1);
  uint64_t v103 = [v102 v97[508]];
  uint64_t v104 = v103;
  if (v103)
  {
    uint64_t v105 = objc_msgSend(v103, sel_channel);

    if (v105)
    {
      uint64_t v104 = objc_msgSend(v105, sel_storeId);
    }
    else
    {
      uint64_t v104 = 0;
    }
  }
  objc_msgSend(v85, sel_setChannelStoreId_, v104);
  objc_msgSend(v85, sel_setEntitled_, objc_msgSend(v102, sel_isEntitled));
  unint64_t v106 = sub_1E3E78400();
  v225 = v106;
  v226 = sub_1E3C16D20();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v224);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v106 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E4F91538], v106);
  LOBYTE(v106) = sub_1E3E78090();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v224);
  if (v106)
  {
    unint64_t v108 = [v102 v97[508]];
    if (v108)
    {
      id v109 = v108;
      id v110 = objc_msgSend(v108, sel_storeCollectionId);

      uint64_t v111 = objc_msgSend(v85, sel_episode);
      if (v111)
      {
        uint64_t v112 = v111;
        id v113 = objc_msgSend(v111, sel_storeTrackId);

        uint64_t v114 = objc_msgSend(self, sel_productURLForStoreCollectionId_storeTrackId_, v110, v113);
        if (v114)
        {
          sub_1E3E77C90();

          id v115 = v218;
          id v116 = v209;
          uint64_t v117 = v98;
          id v118 = v207;
          (*(void (**)(char *, char *, uint64_t))(v218 + 32))(v209, v117, v207);
          v208(v116, 0, 1, v118);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v116, 1, v118) == 1)
          {
            uint64_t v114 = 0;
          }
          else
          {
            uint64_t v114 = (id)sub_1E3E77C40();
            (*(void (**)(char *, uint64_t))(v115 + 8))(v116, v118);
          }
        }
        else
        {
          v208(v209, 1, 1, v207);
        }
        objc_msgSend(v85, sel_setEpisodeShareUrl_, v114);
      }
    }
  }
  id v119 = [v102 v97[508]];
  id v120 = v119;
  if (v119)
  {
    uint64_t v121 = objc_msgSend(v119, sel_feedURL);

    if (v121)
    {
      sub_1E3E7CD30();

      id v120 = (void *)sub_1E3E7CCF0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v120 = 0;
    }
  }
  objc_msgSend(v85, sel_setPodcastFeedUrl_, v120);

  uint64_t v122 = [v102 v97[508]];
  if (v122)
  {
    uint64_t v123 = v122;
    uint64_t v124 = objc_msgSend(v122, sel_storeCollectionId);
  }
  else
  {
    uint64_t v124 = 0;
  }
  objc_msgSend(v85, sel_setPodcastStoreId_, v124);
  if (objc_msgSend(v85, sel_paidSubscriptionActive)) {
    id v125 = objc_msgSend(v102, sel_entitledTranscriptProvider);
  }
  else {
    id v125 = objc_msgSend(v102, sel_freeTranscriptProvider);
  }
  id v126 = v125;
  if (v126)
  {
    sub_1E3E7CD30();

    id v126 = (id)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v85, sel_setTranscriptSource_, v126);

  uint64_t v127 = objc_msgSend(v102, sel_transcriptIdentifier);
  objc_msgSend(v85, sel_setTranscriptIdentifier_, v127);

  id v128 = [v102 v97[508]];
  id v129 = v128;
  if (v128)
  {
    id v130 = objc_msgSend(v128, sel_title);

    if (v130)
    {
      sub_1E3E7CD30();
    }
  }
  [v85 v101[116]];
  [v85 v100[114]];
  id v131 = [v102 v97[508]];
  if (v131)
  {
    uint64_t v132 = v131;
    objc_msgSend(v131, sel_isSerialShowTypeInFeed);
  }
  if (objc_msgSend(v102, sel_valueForKey_, *MEMORY[0x1E4F92008]))
  {
    sub_1E3E7DCA0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v223, 0, sizeof(v223));
  }
  sub_1E3CAC398((uint64_t)v223, (uint64_t)v224, &qword_1EBFE6190);
  if (v225)
  {
    uint64_t v133 = v215;
    uint64_t v134 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v220 + 56))(v99, v134 ^ 1u, 1, v133);
  }
  else
  {
    sub_1E3C10CE0((uint64_t)v224, &qword_1EBFE6190);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v220 + 56))(v99, 1, 1, v215);
  }
  sub_1E3E79600();
  sub_1E3E795F0();
  id v136 = v135;
  swift_bridgeObjectRelease();
  sub_1E3C10CE0(v99, (uint64_t *)&unk_1EBFDEDF0);
  if (v136)
  {
    uint64_t v137 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v137 = 0;
  }
  objc_msgSend(v85, sel_setAlbum_, v137);

  id v138 = [v102 v97[508]];
  id v139 = v138;
  if (v138)
  {
    uint64_t v140 = objc_msgSend(v138, sel_title);

    if (v140)
    {
      sub_1E3E7CD30();

      id v139 = (void *)sub_1E3E7CCF0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v139 = 0;
    }
  }
  objc_msgSend(v85, sel_setAuthor_, v139);

  uint64_t v141 = [v102 v97[508]];
  uint64_t v142 = v141;
  if (v141)
  {
    uint64_t v143 = objc_msgSend(v141, sel_uuid);

    if (v143)
    {
      sub_1E3E7CD30();

      uint64_t v142 = (void *)sub_1E3E7CCF0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v142 = 0;
    }
  }
  objc_msgSend(v85, sel_setPodcastUuid_, v142);

  uint64_t v144 = objc_msgSend(v102, sel_artworkTemplateURL);
  if (v144)
  {
    id v145 = v144;
    uint64_t v146 = sub_1E3E7CD30();
    v221 = v147;
    v222 = v146;

    id v148 = objc_msgSend(v102, sel_artworkBackgroundColor);
    if (v148)
    {
      uint64_t v149 = v148;
      v220 = sub_1E3E7CD30();
      v218 = v150;
    }
    else
    {
      v220 = 0;
      v218 = 0;
    }
    id v151 = objc_msgSend(v102, sel_artworkTextPrimaryColor);
    if (v151)
    {
      uint64_t v152 = v151;
      v217 = (char *)sub_1E3E7CD30();
      v215 = v153;
    }
    else
    {
      v217 = 0;
      v215 = 0;
    }
    uint64_t v154 = objc_msgSend(v102, sel_artworkTextSecondaryColor);
    if (v154)
    {
      id v155 = v154;
      v214 = (char *)sub_1E3E7CD30();
    }
    else
    {
      v214 = 0;
    }
    double v156 = objc_msgSend(v102, sel_artworkTextTertiaryColor);
    if (v156)
    {
      char v157 = v156;
      sub_1E3E7CD30();
    }
    id v158 = objc_msgSend(v102, sel_artworkTextQuaternaryColor);
    if (v158)
    {
      id v159 = v158;
      sub_1E3E7CD30();
    }
    uint64_t v160 = objc_allocWithZone((Class)sub_1E3E78C20());
    uint64_t v161 = (void *)sub_1E3E78C00();
    objc_msgSend(v85, sel_setEpisodeArtworkProperties_, v161);

    uint64_t v97 = &selRef_artworkBorderColorForTheme_;
  }
  v162 = [v102 v97[508]];
  if (v162)
  {
    v163 = v162;
    uint64_t v164 = objc_msgSend(v162, sel_artworkTemplateURL);
    if (v164 || (uint64_t v164 = objc_msgSend(v163, sel_imageURL)) != 0)
    {
      v222 = sub_1E3E7CD30();

      uint64_t v165 = objc_msgSend(v163, sel_artworkPrimaryColor);
      if (v165)
      {
        uint64_t v166 = v165;
        uint64_t v167 = sub_1E3E7CD30();
        v220 = v168;
        v221 = v167;
      }
      else
      {
        v220 = 0;
        v221 = 0;
      }
      id v169 = objc_msgSend(v163, sel_artworkTextPrimaryColor);
      if (v169)
      {
        uint64_t v170 = v169;
        v171 = sub_1E3E7CD30();
        v217 = v172;
        v218 = v171;
      }
      else
      {
        v217 = 0;
        v218 = 0;
      }
      uint64_t v173 = objc_msgSend(v163, sel_artworkTextSecondaryColor);
      if (v173)
      {
        v174 = v173;
        uint64_t v175 = sub_1E3E7CD30();
        v214 = v176;
        v215 = v175;
      }
      else
      {
        v214 = 0;
        v215 = 0;
      }
      objc_super v177 = objc_msgSend(v163, sel_artworkTextTertiaryColor);
      if (v177)
      {
        v178 = v177;
        sub_1E3E7CD30();
      }
      v179 = objc_msgSend(v163, sel_artworkTextQuaternaryColor);
      if (v179)
      {
        v180 = v179;
        sub_1E3E7CD30();
      }
      v181 = objc_allocWithZone((Class)sub_1E3E78C20());
      v182 = sub_1E3E78C00();
      objc_msgSend(v85, sel_setShowArtworkProperties_, v182);

      v163 = (void *)v182;
      uint64_t v97 = &selRef_artworkBorderColorForTheme_;
    }
  }
  v183 = [v102 v97[508]];
  v184 = v85;
  if (v183)
  {
    v185 = v183;
    v186 = objc_msgSend(v183, sel_uberBackgroundImageURL);
    if (v186)
    {
      v187 = v186;
      v188 = sub_1E3E7CD30();
      v190 = v189;

      v191 = objc_msgSend(v185, sel_uberBackgroundJoeColor);
      if (v191)
      {
        v192 = v191;
        v220 = sub_1E3E7CD30();
        v218 = v193;
      }
      else
      {
        v220 = 0;
        v218 = 0;
      }
      v194 = objc_msgSend(v185, sel_uberArtworkTextPrimaryColor);
      v222 = v188;
      if (v194)
      {
        v195 = v194;
        v217 = (char *)sub_1E3E7CD30();
        v215 = v196;
      }
      else
      {
        v217 = 0;
        v215 = 0;
      }
      v197 = objc_msgSend(v185, sel_uberArtworkTextSecondaryColor);
      v221 = v190;
      if (v197)
      {
        v198 = v197;
        v199 = sub_1E3E7CD30();
        v213 = v200;
        v214 = (char *)v199;
      }
      else
      {
        v213 = 0;
        v214 = 0;
      }
      v201 = objc_msgSend(v185, sel_uberArtworkTextTertiaryColor);
      if (v201)
      {
        v202 = v201;
        sub_1E3E7CD30();
      }
      v203 = objc_msgSend(v185, sel_uberArtworkTextQuaternaryColor);
      if (v203)
      {
        v204 = v203;
        sub_1E3E7CD30();
      }
      v205 = objc_allocWithZone((Class)sub_1E3E78C20());
      v184 = (void *)sub_1E3E78C00();
      objc_msgSend(v85, sel_setUberArtworkProperties_, v184);

      v185 = v85;
    }
    else
    {
      v184 = v85;
    }
  }
  return v85;
}

uint64_t sub_1E3CAC398(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t InMemoryStateRepository.init(asPartOf:)()
{
  uint64_t v0 = sub_1E3CAC458();
  swift_release();
  return v0;
}

uint64_t sub_1E3CAC458()
{
  return sub_1E3E79CB0();
}

void sub_1E3CAC518(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(char *, char *))
{
  int64_t v31 = a4;
  uint64_t v6 = a3(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v28 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v28 - v14;
  int64_t v16 = 0;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v18 = a1 + 56;
  uint64_t v17 = v19;
  uint64_t v20 = 1 << *(unsigned char *)(v18 - 24);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v17;
  uint64_t v28 = v18;
  int64_t v29 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v30 = v7 + 16;
  while (1)
  {
    if (v22)
    {
      unint64_t v23 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v24 = v23 | (v16 << 6);
      goto LABEL_5;
    }
    int64_t v25 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v25 >= v29) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v28 + 8 * v25);
    ++v16;
    if (!v26)
    {
      int64_t v16 = v25 + 1;
      if (v25 + 1 >= v29) {
        goto LABEL_23;
      }
      unint64_t v26 = *(void *)(v28 + 8 * v16);
      if (!v26)
      {
        int64_t v16 = v25 + 2;
        if (v25 + 2 >= v29) {
          goto LABEL_23;
        }
        unint64_t v26 = *(void *)(v28 + 8 * v16);
        if (!v26)
        {
          int64_t v16 = v25 + 3;
          if (v25 + 3 >= v29) {
            goto LABEL_23;
          }
          unint64_t v26 = *(void *)(v28 + 8 * v16);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v22 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v15, *(void *)(v32 + 48) + *(void *)(v7 + 72) * v24, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v15, v6);
    v31(v12, v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  int64_t v27 = v25 + 4;
  if (v27 >= v29)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v26 = *(void *)(v28 + 8 * v27);
  if (v26)
  {
    int64_t v16 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v16 >= v29) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v28 + 8 * v16);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t MetricsData.init(topic:shouldFlush:fields:includingFields:excludingFields:)()
{
  return sub_1E3E7BC10();
}

uint64_t MetricsData.init(eventType:fields:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  v31[2] = a4;
  uint64_t v32 = a3;
  uint64_t v6 = sub_1E3E7C030();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5CD0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v31 - v14;
  uint64_t v36 = a2;
  if (qword_1EBFE5848 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1EBFE5830;
  uint64_t v16 = unk_1EBFE5838;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v15, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  sub_1E3C34078((uint64_t)v15, (uint64_t)v12, &qword_1EBFE5CD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1E3C10CE0((uint64_t)v12, &qword_1EBFE5CD0);
    swift_bridgeObjectRetain();
    sub_1E3C9E854(v17, v16, &v34);
    swift_bridgeObjectRelease();
    sub_1E3C10CE0((uint64_t)&v34, &qword_1EBFE6190);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_1E3CB0B14((unint64_t *)&qword_1EBFE5CC8, MEMORY[0x1E4F71328]);
    swift_bridgeObjectRetain_n();
    sub_1E3E7CFD0();
    uint64_t v35 = MEMORY[0x1E4FBB1A0];
    long long v34 = v33[0];
    sub_1E3C1B524(&v34, v33);
    uint64_t v18 = v36;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v37 = v18;
    sub_1E3C9EA30(v33, v17, v16, isUniquelyReferenced_nonNull_native);
    uint64_t v36 = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_bridgeObjectRelease();
  sub_1E3C10CE0((uint64_t)v15, &qword_1EBFE5CD0);
  uint64_t v20 = sub_1E3E788F0();
  uint64_t v21 = sub_1E3D34D54(v20);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  unint64_t v24 = v32;
  if (!v23)
  {
    uint64_t v21 = *v32;
    swift_bridgeObjectRetain();
  }
  v31[1] = v21;
  int64_t v25 = (void (*)(uint64_t))v24[4];
  if (v25)
  {
    sub_1E3C19A6C(v24[4]);
    uint64_t v26 = swift_bridgeObjectRetain();
    v25(v26);
    swift_bridgeObjectRelease();
    sub_1E3C1A3C4((uint64_t)v25);
  }
  *(void *)&v33[0] = v24[2];
  uint64_t v27 = *(void *)(*(void *)&v33[0] + 16);
  swift_bridgeObjectRetain();
  if (v27)
  {
    sub_1E3C2E374(a1);
    if (v28) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v37 = v32[3];
  if (*(void *)(v37 + 16))
  {
    sub_1E3C2E374(a1);
    if (v29) {
      swift_bridgeObjectRetain();
    }
  }
  sub_1E3E7BC10();
  sub_1E3CAE6AC((uint64_t)v32, (uint64_t)&v34);
  sub_1E3CAE714((uint64_t)&v34);
  sub_1E3CAE740((uint64_t)v33);
  sub_1E3CAE740((uint64_t)&v37);
  sub_1E3C1A3C4((uint64_t)v25);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return swift_bridgeObjectRelease();
}

uint64_t MetricsData.withIncludingFields(_:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3CAD1E4(MEMORY[0x1E4F71148], a1);
}

uint64_t MetricsData.addingIncludedFields(_:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3CAD2B8(MEMORY[0x1E4F71140], MEMORY[0x1E4F71658], (void (*)(char *, char *))sub_1E3DA4988, MEMORY[0x1E4F71148], a1);
}

uint64_t MetricsData.addingIncludedField(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BF8);
  uint64_t v5 = sub_1E3E7C750();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1E3E86660;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(v8 + v7, a1, v5);
  sub_1E3CA33D4(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v9 = sub_1E3E7BBF0();
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_1E3CAC518(v10, v9, MEMORY[0x1E4F71658], (void (*)(char *, char *))sub_1E3DA4988);
  uint64_t v11 = sub_1E3E7BC20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, v2, v11);
  sub_1E3E7BC00();

  return swift_bridgeObjectRelease();
}

uint64_t MetricsData.removingIncludedFields(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1E3E7BBF0();
  if (*(void *)(a1 + 16) <= *(void *)(v5 + 16) >> 3) {
    sub_1E3CAE76C(a1, &qword_1EAE267F0, MEMORY[0x1E4F71658], (void (*)(char *))sub_1E3E11A2C);
  }
  else {
    sub_1E3CAEA84(a1, v5);
  }
  uint64_t v6 = sub_1E3E7BC20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, v2, v6);
  return sub_1E3E7BC00();
}

uint64_t MetricsData.removingIncludedField(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BF8);
  uint64_t v6 = sub_1E3E7C750();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1E3E86660;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1, v6);
  uint64_t v10 = sub_1E3CA33D4(v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v11 = sub_1E3E7BBF0();
  if (*(void *)(v10 + 16) <= *(void *)(v11 + 16) >> 3) {
    sub_1E3CAE76C(v10, &qword_1EAE267F0, MEMORY[0x1E4F71658], (void (*)(char *))sub_1E3E11A2C);
  }
  else {
    sub_1E3CAEA84(v10, v11);
  }
  uint64_t v12 = sub_1E3E7BC20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(a2, v3, v12);
  sub_1E3E7BC00();

  return swift_bridgeObjectRelease();
}

uint64_t MetricsData.withExcludingFields(_:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3CAD1E4(MEMORY[0x1E4F71138], a1);
}

uint64_t sub_1E3CAD1E4@<X0>(uint64_t (*a1)(uint64_t)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1E3E7BC20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v2, v5);
  uint64_t v6 = swift_bridgeObjectRetain();
  return a1(v6);
}

uint64_t MetricsData.addingExcludedFields(_:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3CAD2B8(MEMORY[0x1E4F71130], MEMORY[0x1E4F71640], (void (*)(char *, char *))sub_1E3DA4CAC, MEMORY[0x1E4F71138], a1);
}

uint64_t sub_1E3CAD2B8@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t (*a2)(void)@<X2>, void (*a3)(char *, char *)@<X3>, uint64_t (*a4)(uint64_t)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = a1();
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_1E3CAC518(v11, v10, a2, a3);
  uint64_t v13 = v12;
  uint64_t v14 = sub_1E3E7BC20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a5, v5, v14);
  return a4(v13);
}

uint64_t MetricsData.addingExcludedField(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267E0);
  uint64_t v5 = sub_1E3E7C6D0();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1E3E86660;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(v8 + v7, a1, v5);
  sub_1E3CA2878(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v9 = sub_1E3E7BBD0();
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_1E3CAC518(v10, v9, MEMORY[0x1E4F71640], (void (*)(char *, char *))sub_1E3DA4CAC);
  uint64_t v11 = sub_1E3E7BC20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, v2, v11);
  sub_1E3E7BBE0();

  return swift_bridgeObjectRelease();
}

uint64_t MetricsData.removingExcludedFields(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1E3E7BBD0();
  if (*(void *)(a1 + 16) <= *(void *)(v5 + 16) >> 3) {
    sub_1E3CAE76C(a1, &qword_1EAE267E8, MEMORY[0x1E4F71640], (void (*)(char *))sub_1E3E11D50);
  }
  else {
    sub_1E3CAF148(a1, v5);
  }
  uint64_t v6 = sub_1E3E7BC20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, v2, v6);
  return sub_1E3E7BBE0();
}

uint64_t MetricsData.removingExcludedField(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267E0);
  uint64_t v6 = sub_1E3E7C6D0();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1E3E86660;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1, v6);
  uint64_t v10 = sub_1E3CA2878(v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v11 = sub_1E3E7BBD0();
  if (*(void *)(v10 + 16) <= *(void *)(v11 + 16) >> 3) {
    sub_1E3CAE76C(v10, &qword_1EAE267E8, MEMORY[0x1E4F71640], (void (*)(char *))sub_1E3E11D50);
  }
  else {
    sub_1E3CAF148(v10, v11);
  }
  uint64_t v12 = sub_1E3E7BC20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(a2, v3, v12);
  sub_1E3E7BBE0();

  return swift_bridgeObjectRelease();
}

uint64_t static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, unint64_t a12, void *a13)
{
  uint64_t v70 = a5;
  uint64_t v71 = a7;
  uint64_t v73 = a9;
  uint64_t v19 = sub_1E3E7C030();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v72 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v74 = (uint64_t)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1E3E77D00();
  uint64_t v75 = *(void *)(v23 - 8);
  uint64_t v76 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v69 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1E3E78930();
  uint64_t v27 = v26;
  uint64_t v28 = MEMORY[0x1E4FBB1A0];
  uint64_t v79 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v78 = a1;
  *((void *)&v78 + 1) = a2;
  sub_1E3C1B524(&v78, v77);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v80 = 0x8000000000000000;
  unint64_t v81 = a12;
  sub_1E3C9EA30(v77, v25, v27, isUniquelyReferenced_nonNull_native);
  unint64_t v80 = v81;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_1E3E78850();
  uint64_t v32 = v31;
  uint64_t v79 = v28;
  *(void *)&long long v78 = a3;
  *((void *)&v78 + 1) = a4;
  sub_1E3C1B524(&v78, v77);
  swift_bridgeObjectRetain();
  unint64_t v33 = v80;
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v80 = 0x8000000000000000;
  unint64_t v81 = v33;
  sub_1E3C9EA30(v77, v30, v32, v34);
  unint64_t v80 = v81;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_1E3E78830();
  uint64_t v37 = v35;
  uint64_t v38 = v36;
  if (a6)
  {
    uint64_t v79 = v28;
    *(void *)&long long v78 = v70;
    *((void *)&v78 + 1) = a6;
    sub_1E3C1B524(&v78, v77);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v39 = v80;
    char v40 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v80 = 0x8000000000000000;
    unint64_t v81 = v39;
    sub_1E3C9EA30(v77, v37, v38, v40);
    unint64_t v80 = v81;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1E3C9E854(v35, v36, &v78);
    sub_1E3C10CE0((uint64_t)&v78, &qword_1EBFE6190);
  }
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_1E3E788B0();
  uint64_t v43 = v41;
  uint64_t v44 = v42;
  uint64_t v45 = v75;
  if (a8)
  {
    uint64_t v79 = v28;
    *(void *)&long long v78 = v71;
    *((void *)&v78 + 1) = a8;
    sub_1E3C1B524(&v78, v77);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v46 = v80;
    char v47 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v80 = 0x8000000000000000;
    unint64_t v81 = v46;
    sub_1E3C9EA30(v77, v43, v44, v47);
    unint64_t v80 = v81;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1E3C9E854(v41, v42, &v78);
    sub_1E3C10CE0((uint64_t)&v78, &qword_1EBFE6190);
  }
  swift_bridgeObjectRelease();
  uint64_t v48 = sub_1E3E78890();
  uint64_t v50 = v48;
  uint64_t v51 = v49;
  if (*((void *)&a10 + 1))
  {
    uint64_t v79 = v28;
    long long v78 = a10;
    sub_1E3C1B524(&v78, v77);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v52 = v80;
    char v53 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v80 = 0x8000000000000000;
    unint64_t v81 = v52;
    sub_1E3C9EA30(v77, v50, v51, v53);
    unint64_t v80 = v81;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1E3C9E854(v48, v49, &v78);
    sub_1E3C10CE0((uint64_t)&v78, &qword_1EBFE6190);
  }
  swift_bridgeObjectRelease();
  uint64_t v54 = sub_1E3E78940();
  uint64_t v56 = v55;
  uint64_t v57 = v74;
  sub_1E3C34078(a11, v74, &qword_1EBFE6070);
  uint64_t v58 = v76;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v57, 1, v76) == 1)
  {
    sub_1E3C10CE0(v57, &qword_1EBFE6070);
    swift_bridgeObjectRetain();
    sub_1E3C9E854(v54, v56, &v78);
    swift_bridgeObjectRelease();
    sub_1E3C10CE0((uint64_t)&v78, &qword_1EBFE6190);
  }
  else
  {
    uint64_t v59 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v69, v57, v58);
    swift_bridgeObjectRetain();
    sub_1E3E7A060();
    sub_1E3C1B524(&v78, v77);
    unint64_t v60 = v80;
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v80 = 0x8000000000000000;
    unint64_t v81 = v60;
    sub_1E3C9EA30(v77, v54, v56, v61);
    unint64_t v80 = v81;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v59, v58);
  }
  swift_bridgeObjectRelease();
  uint64_t v63 = (uint64_t)v72;
  uint64_t v62 = v73;
  sub_1E3E7BFD0();
  uint64_t v64 = v80;
  sub_1E3CAE6AC((uint64_t)a13, (uint64_t)&v78);
  unint64_t v65 = a13[3];
  *(void *)&v77[0] = a13[2];
  unint64_t v81 = v65;
  uint64_t v66 = a13[4];
  sub_1E3CB0ABC((uint64_t)&v78);
  sub_1E3CB0AE8((uint64_t)v77);
  sub_1E3CB0AE8((uint64_t)&v81);
  sub_1E3C19A6C(v66);
  return MetricsData.init(eventType:fields:configuration:)(v63, v64, a13, v62);
}

uint64_t static MetricsData.impressionsData(eventVersion:fields:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1E3E7C030();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1E3E788A0();
  uint64_t v13 = v12;
  id v14 = objc_allocWithZone(NSNumber);
  swift_bridgeObjectRetain();
  id v15 = objc_msgSend(v14, sel_initWithUnsignedInteger_, a1);
  unint64_t v31 = sub_1E3C90B00();
  *(void *)&long long v30 = v15;
  sub_1E3C1B524(&v30, v29);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v32 = a2;
  sub_1E3C9EA30(v29, v11, v13, isUniquelyReferenced_nonNull_native);
  uint64_t v17 = v32;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1E3E788C0();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1E3E79D50();
  unint64_t v31 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v30 = v21;
  *((void *)&v30 + 1) = v22;
  sub_1E3C1B524(&v30, v29);
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v32 = v17;
  sub_1E3C9EA30(v29, v18, v20, v23);
  uint64_t v24 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E3E7BF80();
  sub_1E3CAE6AC((uint64_t)a3, (uint64_t)&v30);
  uint64_t v25 = a3[3];
  *(void *)&v29[0] = a3[2];
  uint64_t v32 = v25;
  uint64_t v26 = a3[4];
  sub_1E3CB0ABC((uint64_t)&v30);
  sub_1E3CB0AE8((uint64_t)v29);
  sub_1E3CB0AE8((uint64_t)&v32);
  sub_1E3C19A6C(v26);
  return MetricsData.init(eventType:fields:configuration:)((uint64_t)v10, v24, a3, a4);
}

uint64_t static MetricsData.pageData(fields:configuration:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1E3E7C030();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7BFC0();
  sub_1E3CAE6AC((uint64_t)a2, (uint64_t)v14);
  uint64_t v9 = a2[2];
  uint64_t v12 = a2[3];
  uint64_t v13 = v9;
  uint64_t v10 = a2[4];
  swift_bridgeObjectRetain();
  sub_1E3CB0ABC((uint64_t)v14);
  sub_1E3CB0AE8((uint64_t)&v13);
  sub_1E3CB0AE8((uint64_t)&v12);
  sub_1E3C19A6C(v10);
  return MetricsData.init(eventType:fields:configuration:)((uint64_t)v8, a1, a2, a3);
}

uint64_t static MetricsData.searchData(targetType:term:prefix:actionType:actionURL:fields:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12)
{
  *((void *)&v64 + 1) = a8;
  *(void *)&long long v64 = a7;
  uint64_t v66 = a6;
  uint64_t v62 = a5;
  uint64_t v63 = a3;
  uint64_t v68 = a9;
  uint64_t v69 = (void *)a12;
  uint64_t v65 = a10;
  uint64_t v15 = sub_1E3E7C030();
  MEMORY[0x1F4188790](v15 - 8);
  id v67 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1E3E77D00();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  char v61 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1E3E78850();
  uint64_t v25 = v24;
  uint64_t v26 = MEMORY[0x1E4FBB1A0];
  uint64_t v72 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v71 = a1;
  *((void *)&v71 + 1) = a2;
  sub_1E3C1B524(&v71, v70);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v73 = 0x8000000000000000;
  unint64_t v74 = a11;
  sub_1E3C9EA30(v70, v23, v25, isUniquelyReferenced_nonNull_native);
  unint64_t v73 = v74;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_1E3E789A0();
  uint64_t v30 = v29;
  uint64_t v72 = v26;
  *(void *)&long long v71 = v63;
  *((void *)&v71 + 1) = a4;
  sub_1E3C1B524(&v71, v70);
  swift_bridgeObjectRetain();
  unint64_t v31 = v73;
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v73 = 0x8000000000000000;
  unint64_t v74 = v31;
  sub_1E3C9EA30(v70, v28, v30, v32);
  unint64_t v73 = v74;
  uint64_t v33 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_1E3E78830();
  uint64_t v36 = v35;
  uint64_t v72 = v26;
  long long v71 = v64;
  sub_1E3C1B524(&v71, v70);
  swift_bridgeObjectRetain();
  unint64_t v37 = v73;
  char v38 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v73 = 0x8000000000000000;
  unint64_t v74 = v37;
  sub_1E3C9EA30(v70, v34, v36, v38);
  unint64_t v73 = v74;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_1E3E78940();
  uint64_t v41 = v40;
  sub_1E3C34078(v65, (uint64_t)v19, &qword_1EBFE6070);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1E3C10CE0((uint64_t)v19, &qword_1EBFE6070);
    swift_bridgeObjectRetain();
    sub_1E3C9E854(v39, v41, &v71);
    swift_bridgeObjectRelease();
    sub_1E3C10CE0((uint64_t)&v71, &qword_1EBFE6190);
  }
  else
  {
    uint64_t v42 = v61;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v61, v19, v20);
    swift_bridgeObjectRetain();
    sub_1E3E7A060();
    sub_1E3C1B524(&v71, v70);
    unint64_t v43 = v73;
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v73 = 0x8000000000000000;
    unint64_t v74 = v43;
    sub_1E3C9EA30(v70, v39, v41, v44);
    unint64_t v73 = v74;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v42, v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v45 = v66;
  if (v66)
  {
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1E3E78950();
    uint64_t v48 = v47;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4C08);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1E3E86660;
    *(void *)(inited + 32) = sub_1E3E78970();
    *(void *)(inited + 40) = v50;
    *(void *)(inited + 72) = v33;
    *(void *)(inited + 48) = v62;
    *(void *)(inited + 56) = v45;
    unint64_t v51 = sub_1E3C7F668(inited);
    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE49D8);
    *(void *)&long long v71 = v51;
    sub_1E3C1B524(&v71, v70);
    unint64_t v52 = v73;
    char v53 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v73 = 0x8000000000000000;
    unint64_t v74 = v52;
    sub_1E3C9EA30(v70, v46, v48, v53);
    unint64_t v73 = v74;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v54 = (uint64_t)v67;
  sub_1E3E7C010();
  uint64_t v55 = v73;
  uint64_t v56 = v69;
  sub_1E3CAE6AC((uint64_t)v69, (uint64_t)&v71);
  unint64_t v57 = v56[3];
  *(void *)&v70[0] = v56[2];
  unint64_t v74 = v57;
  uint64_t v58 = v56[4];
  sub_1E3CB0ABC((uint64_t)&v71);
  sub_1E3CB0AE8((uint64_t)v70);
  sub_1E3CB0AE8((uint64_t)&v74);
  sub_1E3C19A6C(v58);
  return MetricsData.init(eventType:fields:configuration:)(v54, v55, v56, v68);
}

uint64_t sub_1E3CAE6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3CAE714(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3CAE740(uint64_t a1)
{
  return a1;
}

void sub_1E3CAE76C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void, double), void (*a4)(char *))
{
  uint64_t v33 = a2;
  uint64_t v34 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  double v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a3(0, v8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v29 - v16;
  if (!*(void *)(*(void *)v4 + 16)) {
    return;
  }
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v29 = a1 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v32 = v12 + 16;
  int64_t v30 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v31 = v12 + 32;
  uint64_t v22 = a1;
  swift_bridgeObjectRetain();
  int64_t v23 = 0;
  while (1)
  {
    if (v21)
    {
      unint64_t v24 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v25 = v24 | (v23 << 6);
      goto LABEL_6;
    }
    int64_t v26 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v30) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v29 + 8 * v26);
    ++v23;
    if (!v27)
    {
      int64_t v23 = v26 + 1;
      if (v26 + 1 >= v30) {
        goto LABEL_24;
      }
      unint64_t v27 = *(void *)(v29 + 8 * v23);
      if (!v27)
      {
        int64_t v23 = v26 + 2;
        if (v26 + 2 >= v30) {
          goto LABEL_24;
        }
        unint64_t v27 = *(void *)(v29 + 8 * v23);
        if (!v27)
        {
          int64_t v23 = v26 + 3;
          if (v26 + 3 >= v30) {
            goto LABEL_24;
          }
          unint64_t v27 = *(void *)(v29 + 8 * v23);
          if (!v27) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v23 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v17, *(void *)(v22 + 48) + *(void *)(v12 + 72) * v25, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
    v34(v14);
    sub_1E3C10CE0((uint64_t)v10, v33);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  int64_t v28 = v26 + 4;
  if (v28 >= v30)
  {
LABEL_24:
    swift_release();
    return;
  }
  unint64_t v27 = *(void *)(v29 + 8 * v28);
  if (v27)
  {
    int64_t v23 = v28;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v23 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v23 >= v30) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v29 + 8 * v23);
    ++v28;
    if (v27) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_1E3CAEA84(uint64_t a1, uint64_t a2)
{
  uint64_t v67 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267F0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E7C750();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v61 = (char *)&v51 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v62 = a1;
  uint64_t v63 = a1 + 56;
  uint64_t v56 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  unint64_t v57 = v6;
  uint64_t v64 = v14;
  uint64_t v65 = 0;
  unint64_t v66 = v18;
  uint64_t v55 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  char v53 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v59 = v8 + 16;
  uint64_t v60 = (char *)(a2 + 56);
  uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v58 = v8;
  uint64_t v54 = a2;
  uint64_t v52 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  unint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v57;
  v25(v57, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v56)(v26, v27, 1, v7);
    uint64_t v62 = a1;
    uint64_t v63 = v15;
    uint64_t v64 = v14;
    uint64_t v65 = v23;
    unint64_t v66 = v21;
    if ((*v55)(v26, 1, v7) == 1)
    {
      sub_1E3C1E444();
      sub_1E3C10CE0(v26, &qword_1EAE267F0);
      return v54;
    }
    (*v53)(v61, v26, v7);
    uint64_t v31 = v54;
    sub_1E3CB0B14(&qword_1EBFE4908, MEMORY[0x1E4F71658]);
    uint64_t v32 = sub_1E3E7CC20();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v60[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    uint64_t v40 = *v19;
    uint64_t v8 = v58;
LABEL_35:
    v40(v61, v7);
    int64_t v20 = v65;
    unint64_t v18 = v66;
    a1 = v62;
    uint64_t v15 = v63;
    uint64_t v14 = v64;
    uint64_t v52 = v65;
    if (v66) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v52 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v57;
  }
  uint64_t v52 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v58 + 72);
  char v38 = *(void (**)(char *, unint64_t, uint64_t))(v58 + 16);
  while (1)
  {
    v38(v10, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_1E3CB0B14((unint64_t *)&unk_1EBFE4910, MEMORY[0x1E4F71658]);
    char v39 = sub_1E3E7CCA0();
    uint64_t v40 = *v19;
    (*v19)(v10, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v60[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v58;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v61, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v51 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v60, v44);
    sub_1E3CAF80C((unint64_t *)((char *)&v51 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v62);
    uint64_t v46 = v45;
    swift_release();
    sub_1E3C1E444();
    return v46;
  }
  else
  {
    uint64_t v48 = (void *)swift_slowAlloc();
    memcpy(v48, v60, v44);
    sub_1E3CAF80C((unint64_t *)v48, v43, v35, v34, &v62);
    uint64_t v50 = v49;
    swift_release();
    sub_1E3C1E444();
    MEMORY[0x1E4E79510](v48, -1, -1);
    return v50;
  }
}

uint64_t sub_1E3CAF148(uint64_t a1, uint64_t a2)
{
  uint64_t v67 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267E8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E7C6D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v61 = (char *)&v51 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v62 = a1;
  uint64_t v63 = a1 + 56;
  uint64_t v56 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  unint64_t v57 = v6;
  uint64_t v64 = v14;
  uint64_t v65 = 0;
  unint64_t v66 = v18;
  uint64_t v55 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  char v53 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v59 = v8 + 16;
  uint64_t v60 = (char *)(a2 + 56);
  uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v58 = v8;
  uint64_t v54 = a2;
  uint64_t v52 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  unint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v57;
  v25(v57, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v56)(v26, v27, 1, v7);
    uint64_t v62 = a1;
    uint64_t v63 = v15;
    uint64_t v64 = v14;
    uint64_t v65 = v23;
    unint64_t v66 = v21;
    if ((*v55)(v26, 1, v7) == 1)
    {
      sub_1E3C1E444();
      sub_1E3C10CE0(v26, &qword_1EAE267E8);
      return v54;
    }
    (*v53)(v61, v26, v7);
    uint64_t v31 = v54;
    sub_1E3CB0B14(&qword_1EAE26728, MEMORY[0x1E4F71640]);
    uint64_t v32 = sub_1E3E7CC20();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v60[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    uint64_t v40 = *v19;
    uint64_t v8 = v58;
LABEL_35:
    v40(v61, v7);
    int64_t v20 = v65;
    unint64_t v18 = v66;
    a1 = v62;
    uint64_t v15 = v63;
    uint64_t v14 = v64;
    uint64_t v52 = v65;
    if (v66) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v52 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v57;
  }
  uint64_t v52 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v58 + 72);
  char v38 = *(void (**)(char *, unint64_t, uint64_t))(v58 + 16);
  while (1)
  {
    v38(v10, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_1E3CB0B14(&qword_1EAE29670, MEMORY[0x1E4F71640]);
    char v39 = sub_1E3E7CCA0();
    uint64_t v40 = *v19;
    (*v19)(v10, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v60[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v58;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v61, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v51 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v60, v44);
    sub_1E3CAFD90((unint64_t *)((char *)&v51 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v62);
    uint64_t v46 = v45;
    swift_release();
    sub_1E3C1E444();
    return v46;
  }
  else
  {
    uint64_t v48 = (void *)swift_slowAlloc();
    memcpy(v48, v60, v44);
    sub_1E3CAFD90((unint64_t *)v48, v43, v35, v34, &v62);
    uint64_t v50 = v49;
    swift_release();
    sub_1E3C1E444();
    MEMORY[0x1E4E79510](v48, -1, -1);
    return v50;
  }
}

void sub_1E3CAF80C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267F0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E7C750();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16.n128_f64[0] = MEMORY[0x1F4188790](v15);
  uint64_t v65 = (char *)&v52 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v54 = a1;
  uint64_t v55 = v11;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v63 = v21 + 16;
  uint64_t v64 = a3;
  uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v56 = a5;
  unint64_t v57 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v62 = a3 + 56;
  unint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v60 = v21;
  while (2)
  {
    uint64_t v53 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v29 = a5[2];
        int64_t v28 = a5[3];
        unint64_t v30 = a5[4];
        if (v30)
        {
          uint64_t v61 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v28 << 6);
LABEL_7:
          unint64_t v32 = *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31;
          uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v22 + 16);
          uint64_t v34 = v26;
          v33(v11, v32, v12, v16);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_43;
        }
        int64_t v45 = (unint64_t)(v29 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        int64_t v49 = v28 + 2;
        if (v28 + 2 >= v45) {
          goto LABEL_35;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v49);
        if (v46) {
          goto LABEL_23;
        }
        if (v28 + 3 >= v45) {
          goto LABEL_36;
        }
        unint64_t v46 = *(void *)(v27 + 8 * (v28 + 3));
        if (v46)
        {
          int64_t v44 = v28 + 3;
          goto LABEL_17;
        }
        int64_t v49 = v28 + 4;
        if (v28 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v27 + 8 * v49);
          if (v46)
          {
LABEL_23:
            int64_t v44 = v49;
LABEL_17:
            uint64_t v61 = (v46 - 1) & v46;
            unint64_t v31 = __clz(__rbit64(v46)) + (v44 << 6);
            int64_t v28 = v44;
            goto LABEL_7;
          }
          int64_t v44 = v28 + 5;
          if (v28 + 5 < v45)
          {
            unint64_t v46 = *(void *)(v27 + 8 * v44);
            if (v46) {
              goto LABEL_17;
            }
            int64_t v44 = v45 - 1;
            int64_t v50 = v28 + 6;
            while (v45 != v50)
            {
              unint64_t v46 = *(void *)(v27 + 8 * v50++);
              if (v46)
              {
                int64_t v44 = v50 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            uint64_t v61 = 0;
            uint64_t v35 = 1;
            int64_t v28 = v44;
            uint64_t v34 = v26;
            goto LABEL_8;
          }
LABEL_36:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v28 = v49;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v28 += 3;
        uint64_t v34 = v26;
LABEL_8:
        (*v59)(v11, v35, 1, v12);
        *a5 = v34;
        a5[1] = v27;
        a5[2] = v29;
        a5[3] = v28;
        a5[4] = v61;
        if ((*v58)(v11, 1, v12) == 1)
        {
          sub_1E3C10CE0((uint64_t)v11, &qword_1EAE267F0);
          uint64_t v51 = v64;
          sub_1E3E775E0();
          sub_1E3CB0314(v54, v52, v53, v51);
          return;
        }
        (*v57)(v65, v11, v12);
        uint64_t v36 = v64;
        sub_1E3CB0B14(&qword_1EBFE4908, MEMORY[0x1E4F71658]);
        uint64_t v37 = sub_1E3E7CC20();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        unint64_t v25 = *v24;
        uint64_t v22 = v60;
LABEL_4:
        v25(v65, v12);
      }
      uint64_t v61 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v60 + 72);
      char v42 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
      while (1)
      {
        v42(v14, *(void *)(v64 + 48) + v41 * v39, v12);
        sub_1E3CB0B14((unint64_t *)&unk_1EBFE4910, MEMORY[0x1E4F71658]);
        char v43 = sub_1E3E7CCA0();
        unint64_t v25 = *v24;
        (*v24)(v14, v12);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          uint64_t v11 = v55;
          a5 = v56;
          uint64_t v22 = v60;
          goto LABEL_4;
        }
      }
      v25(v65, v12);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v11 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      a5 = v56;
      uint64_t v22 = v60;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v23 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_43:
      __break(1u);
      return;
    }
    if (v53 != 1) {
      continue;
    }
    break;
  }
}

void sub_1E3CAFD90(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267E8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E7C6D0();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16.n128_f64[0] = MEMORY[0x1F4188790](v15);
  uint64_t v65 = (char *)&v52 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v54 = a1;
  uint64_t v55 = v11;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v63 = v21 + 16;
  uint64_t v64 = a3;
  uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v56 = a5;
  unint64_t v57 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v62 = a3 + 56;
  unint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v60 = v21;
  while (2)
  {
    uint64_t v53 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v29 = a5[2];
        int64_t v28 = a5[3];
        unint64_t v30 = a5[4];
        if (v30)
        {
          uint64_t v61 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v28 << 6);
LABEL_7:
          unint64_t v32 = *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31;
          uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v22 + 16);
          uint64_t v34 = v26;
          v33(v11, v32, v12, v16);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_43;
        }
        int64_t v45 = (unint64_t)(v29 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        int64_t v49 = v28 + 2;
        if (v28 + 2 >= v45) {
          goto LABEL_35;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v49);
        if (v46) {
          goto LABEL_23;
        }
        if (v28 + 3 >= v45) {
          goto LABEL_36;
        }
        unint64_t v46 = *(void *)(v27 + 8 * (v28 + 3));
        if (v46)
        {
          int64_t v44 = v28 + 3;
          goto LABEL_17;
        }
        int64_t v49 = v28 + 4;
        if (v28 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v27 + 8 * v49);
          if (v46)
          {
LABEL_23:
            int64_t v44 = v49;
LABEL_17:
            uint64_t v61 = (v46 - 1) & v46;
            unint64_t v31 = __clz(__rbit64(v46)) + (v44 << 6);
            int64_t v28 = v44;
            goto LABEL_7;
          }
          int64_t v44 = v28 + 5;
          if (v28 + 5 < v45)
          {
            unint64_t v46 = *(void *)(v27 + 8 * v44);
            if (v46) {
              goto LABEL_17;
            }
            int64_t v44 = v45 - 1;
            int64_t v50 = v28 + 6;
            while (v45 != v50)
            {
              unint64_t v46 = *(void *)(v27 + 8 * v50++);
              if (v46)
              {
                int64_t v44 = v50 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            uint64_t v61 = 0;
            uint64_t v35 = 1;
            int64_t v28 = v44;
            uint64_t v34 = v26;
            goto LABEL_8;
          }
LABEL_36:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v28 = v49;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v28 += 3;
        uint64_t v34 = v26;
LABEL_8:
        (*v59)(v11, v35, 1, v12);
        *a5 = v34;
        a5[1] = v27;
        a5[2] = v29;
        a5[3] = v28;
        a5[4] = v61;
        if ((*v58)(v11, 1, v12) == 1)
        {
          sub_1E3C10CE0((uint64_t)v11, &qword_1EAE267E8);
          uint64_t v51 = v64;
          sub_1E3E775E0();
          sub_1E3CB06A0(v54, v52, v53, v51);
          return;
        }
        (*v57)(v65, v11, v12);
        uint64_t v36 = v64;
        sub_1E3CB0B14(&qword_1EAE26728, MEMORY[0x1E4F71640]);
        uint64_t v37 = sub_1E3E7CC20();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        unint64_t v25 = *v24;
        uint64_t v22 = v60;
LABEL_4:
        v25(v65, v12);
      }
      uint64_t v61 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v60 + 72);
      char v42 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
      while (1)
      {
        v42(v14, *(void *)(v64 + 48) + v41 * v39, v12);
        sub_1E3CB0B14(&qword_1EAE29670, MEMORY[0x1E4F71640]);
        char v43 = sub_1E3E7CCA0();
        unint64_t v25 = *v24;
        (*v24)(v14, v12);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          uint64_t v11 = v55;
          a5 = v56;
          uint64_t v22 = v60;
          goto LABEL_4;
        }
      }
      v25(v65, v12);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v11 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      a5 = v56;
      uint64_t v22 = v60;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v23 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_43:
      __break(1u);
      return;
    }
    if (v53 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_1E3CB0314(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1E3E7C750();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4B28);
  uint64_t result = sub_1E3E7DDA0();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1E3CB0B14(&qword_1EBFE4908, MEMORY[0x1E4F71658]);
    uint64_t result = sub_1E3E7CC20();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}